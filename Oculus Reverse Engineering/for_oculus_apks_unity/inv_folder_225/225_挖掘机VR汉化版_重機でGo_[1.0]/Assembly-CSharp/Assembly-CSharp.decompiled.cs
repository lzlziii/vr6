using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Cryptography;
using System.Text;
using System.Threading;
using ControllerSetting;
using DFTGames.Localization;
using DetectCollision;
using DigitalOpus.MB.Core;
using Google.ProtocolBuffers;
using Google.ProtocolBuffers.Collections;
using GoogleVR.Beta;
using GoogleVR.Demos;
using Gvr.Internal;
using HightScore;
using Il2CppDummyDll;
using MirzaBeig.ParticleSystems;
using MirzaBeig.Scripting.Effects;
using NoVR.GUI;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using SafetySim3;
using Setting;
using TMPro;
using Tutorial;
using UltimateGameTools.MeshSimplifier;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using VRStandardAssets.Utils;
using cakeslice;
using proto;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class DetectUnknownControllerMappings : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text axis1Value;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text axis2Value;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text axis3Value;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text axis4Value;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text axis5Value;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text axis6Value;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text axis7Value;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text axis8Value;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text axis9Value;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text axis10Value;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text axis11Value;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text axis12Value;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text axis13Value;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text axis14Value;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text axis15Value;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text axis16Value;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text axis17Value;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text axis18Value;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text axis19Value;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text axis20Value;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text axis21Value;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text axis22Value;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text axis23Value;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text axis24Value;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text axis25Value;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text axis26Value;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text axis27Value;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text axis28Value;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text button0Value;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text button1Value;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text button2Value;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text button3Value;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text button4Value;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text button5Value;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text button6Value;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text button7Value;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text button8Value;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text button9Value;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text button10Value;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Text button11Value;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Text button12Value;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Text button13Value;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Text button14Value;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Text button15Value;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Text button16Value;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Text button17Value;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Text button18Value;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Text button19Value;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xABE0A4", Offset = "0xABE0A4", VA = "0xABE0A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xABF414", Offset = "0xABF414", VA = "0xABF414")]
	public DetectUnknownControllerMappings()
	{
	}
}
[Token(Token = "0x2000003")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureBaker.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x91247C", Offset = "0x91247C", VA = "0x91247C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x9129D0", Offset = "0x9129D0", VA = "0x9129D0")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x912BA8", Offset = "0x912BA8", VA = "0x912BA8")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x2000004")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000006")]
	[Address(RVA = "0xB56DE8", Offset = "0xB56DE8", VA = "0xB56DE8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xB56EC0", Offset = "0xB56EC0", VA = "0xB56EC0")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000005")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xC07F88", Offset = "0xC07F88", VA = "0xC07F88")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xC081DC", Offset = "0xC081DC", VA = "0xC081DC")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xC08668", Offset = "0xC08668", VA = "0xC08668")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x2000006")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x600000B")]
	[Address(RVA = "0xC06F60", Offset = "0xC06F60", VA = "0xC06F60")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xC07038", Offset = "0xC07038", VA = "0xC07038")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000007")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714E3C", Offset = "0x714E3C")]
	private sealed class <largeNumber>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x17000265")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0xC06894", Offset = "0xC06894", VA = "0xC06894", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0xC068FC", Offset = "0xC068FC", VA = "0xC068FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xC06700", Offset = "0xC06700", VA = "0xC06700")]
		[DebuggerHidden]
		public <largeNumber>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xC0672C", Offset = "0xC0672C", VA = "0xC0672C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xC06730", Offset = "0xC06730", VA = "0xC06730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xC0689C", Offset = "0xC0689C", VA = "0xC0689C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MeshBaker mbd;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB56EC8", Offset = "0xB56EC8", VA = "0xB56EC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xB57170", Offset = "0xB57170", VA = "0xB57170")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71D0C8", Offset = "0x71D0C8")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xB571E0", Offset = "0xB571E0", VA = "0xB571E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xB572B8", Offset = "0xB572B8", VA = "0xB572B8")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x2000008")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xC06904", Offset = "0xC06904", VA = "0xC06904")]
	private void Start()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xC06960", Offset = "0xC06960", VA = "0xC06960")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xC06A14", Offset = "0xC06A14", VA = "0xC06A14")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xC06AEC", Offset = "0xC06AEC", VA = "0xC06AEC")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x2000009")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xC06AF4", Offset = "0xC06AF4", VA = "0xC06AF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xC06BE8", Offset = "0xC06BE8", VA = "0xC06BE8")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x200000A")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x6000017")]
	[Address(RVA = "0xC06BF0", Offset = "0xC06BF0", VA = "0xC06BF0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xC06CC8", Offset = "0xC06CC8", VA = "0xC06CC8")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x200000B")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xC07040", Offset = "0xC07040", VA = "0xC07040")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xC0722C", Offset = "0xC0722C", VA = "0xC0722C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xC07E64", Offset = "0xC07E64", VA = "0xC07E64")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xC07F80", Offset = "0xC07F80", VA = "0xC07F80")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Serializable]
[Token(Token = "0x200000C")]
public class MB_AtlasesAndRects
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D[] atlases;

	[NonSerialized]
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MB_MaterialAndUVRect> mat2rect_map;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] texPropertyNames;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xB568C8", Offset = "0xB568C8", VA = "0xB568C8")]
	public MB_AtlasesAndRects()
	{
	}
}
[Serializable]
[Token(Token = "0x200000D")]
public class MB_MultiMaterial
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material combinedMaterial;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> sourceMaterials;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xC06EF0", Offset = "0xC06EF0", VA = "0xC06EF0")]
	public MB_MultiMaterial()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class MB_MaterialAndUVRect
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material material;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect atlasRect;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string srcObjName;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rect samplingRectMatAndUVTiling;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rect sourceMaterialTiling;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Rect samplingEncapsulatinRect;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xC06CD0", Offset = "0xC06CD0", VA = "0xC06CD0")]
	public MB_MaterialAndUVRect(Material m, Rect destRect, Rect samplingRectMatAndUVTiling, Rect sourceMaterialTiling, Rect samplingEncapsulatinRect, string objName)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xC06D84", Offset = "0xC06D84", VA = "0xC06D84", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xC06DC8", Offset = "0xC06DC8", VA = "0xC06DC8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}
}
[Token(Token = "0x200000F")]
public class MB2_TextureBakeResults : ScriptableObject
{
	[Token(Token = "0x200043E")]
	public class Material2AtlasRectangleMapper
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MB2_TextureBakeResults tbr;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] numTimesMatAppearsInAtlas;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MB_MaterialAndUVRect[] matsAndSrcUVRect;

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xB4E538", Offset = "0xB4E538", VA = "0xB4E538")]
		public Material2AtlasRectangleMapper(MB2_TextureBakeResults res)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xB4E96C", Offset = "0xB4E96C", VA = "0xB4E96C")]
		public bool TryMapMaterialToUVRect(Material mat, Mesh m, int submeshIdx, MB3_MeshCombinerSingle.MeshChannelsCache meshChannelCache, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisCache, out Rect rectInAtlas, out Rect encapsulatingRect, out Rect sourceMaterialTilingOut, ref string errorMsg, MB2_LogLevel logLevel)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB_AtlasesAndRects[] combinedMaterialInfo;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rect[] prefabUVRects;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MB_MaterialAndUVRect[] materialsAndUVRects;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material resultMaterial;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool doMultiMaterial;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool fixOutOfBoundsUVs;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xB4D640", Offset = "0xB4D640", VA = "0xB4D640")]
	public static MB2_TextureBakeResults CreateForMaterialsOnRenderer(GameObject[] gos)
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xB4DEF0", Offset = "0xB4DEF0", VA = "0xB4DEF0")]
	public bool ContainsMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xB4E19C", Offset = "0xB4E19C", VA = "0xB4E19C")]
	public string GetDescription()
	{
		return null;
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xB4E530", Offset = "0xB4E530", VA = "0xB4E530")]
	public MB2_TextureBakeResults()
	{
	}
}
[Token(Token = "0x2000010")]
public class MB2_UpdateSkinnedMeshBoundsFromBones : MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform[] bones;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB4F488", Offset = "0xB4F488", VA = "0xB4F488")]
	private void Start()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xB4F5AC", Offset = "0xB4F5AC", VA = "0xB4F5AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB4F638", Offset = "0xB4F638", VA = "0xB4F638")]
	public MB2_UpdateSkinnedMeshBoundsFromBones()
	{
	}
}
[Token(Token = "0x2000011")]
public class MB2_UpdateSkinnedMeshBoundsFromBounds : MonoBehaviour
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> objects;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB4F640", Offset = "0xB4F640", VA = "0xB4F640")]
	private void Start()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB4F91C", Offset = "0xB4F91C", VA = "0xB4F91C")]
	private void Update()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB4F9B0", Offset = "0xB4F9B0", VA = "0xB4F9B0")]
	public MB2_UpdateSkinnedMeshBoundsFromBounds()
	{
	}
}
[Token(Token = "0x2000012")]
public class MB3_BatchPrefabBaker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200043F")]
	public class MB3_PrefabBakerRow
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject sourcePrefab;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject resultPrefab;

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xB4FAF0", Offset = "0xB4FAF0", VA = "0xB4FAF0")]
		public MB3_PrefabBakerRow()
		{
		}
	}

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_PrefabBakerRow[] prefabRows;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string outputPrefabFolder;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB4FAE8", Offset = "0xB4FAE8", VA = "0xB4FAE8")]
	public MB3_BatchPrefabBaker()
	{
	}
}
[Token(Token = "0x2000013")]
public class MB3_BoneWeightCopier : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject inputGameObject;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject outputPrefab;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float radius;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer seamMesh;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string outputFolder;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xB4FAF8", Offset = "0xB4FAF8", VA = "0xB4FAF8")]
	public MB3_BoneWeightCopier()
	{
	}
}
[Token(Token = "0x2000014")]
public class MB3_DisableHiddenAnimations : MonoBehaviour
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Animation> animationsToCull;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB4FB0C", Offset = "0xB4FB0C", VA = "0xB4FB0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB4FC0C", Offset = "0xB4FC0C", VA = "0xB4FC0C")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xB4FD0C", Offset = "0xB4FD0C", VA = "0xB4FD0C")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xB4FE0C", Offset = "0xB4FE0C", VA = "0xB4FE0C")]
	public MB3_DisableHiddenAnimations()
	{
	}
}
[Token(Token = "0x2000015")]
public class MB3_MeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MeshCombinerSingle _meshCombiner;

	[Token(Token = "0x17000001")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0xB50DB4", Offset = "0xB50DB4", VA = "0xB50DB4", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xB50DBC", Offset = "0xB50DBC", VA = "0xB50DBC")]
	public void BuildSceneMeshObject()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xB50DE0", Offset = "0xB50DE0", VA = "0xB50DE0", Slot = "23")]
	public virtual bool ShowHide(GameObject[] gos, GameObject[] deleteGOs)
	{
		return default(bool);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xB50DFC", Offset = "0xB50DFC", VA = "0xB50DFC", Slot = "24")]
	public virtual void ApplyShowHide()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xB50E20", Offset = "0xB50E20", VA = "0xB50E20", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xB50ECC", Offset = "0xB50ECC", VA = "0xB50ECC", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xB50F78", Offset = "0xB50F78", VA = "0xB50F78")]
	public MB3_MeshBaker()
	{
	}
}
[Token(Token = "0x2000016")]
public abstract class MB3_MeshBakerCommon : MB3_MeshBakerRoot
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useObjsToMeshFromTexBaker;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool clearBuffersAfterBake;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string bakeAssetsInPlaceFolderPath;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject resultPrefab;

	[Token(Token = "0x17000002")]
	public abstract MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000039")]
		get;
	}

	[Token(Token = "0x17000003")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0xB50FF8", Offset = "0xB50FF8", VA = "0xB50FF8", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003B")]
		[Address(RVA = "0xB51024", Offset = "0xB51024", VA = "0xB51024", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB51064", Offset = "0xB51064", VA = "0xB51064", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB5122C", Offset = "0xB5122C", VA = "0xB5122C")]
	public void EnableDisableSourceObjectRenderers(bool show)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB51384", Offset = "0xB51384", VA = "0xB51384", Slot = "8")]
	public virtual void ClearMesh()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB513B4", Offset = "0xB513B4", VA = "0xB513B4", Slot = "9")]
	public virtual void DestroyMesh()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xB513E4", Offset = "0xB513E4", VA = "0xB513E4", Slot = "10")]
	public virtual void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xB51428", Offset = "0xB51428", VA = "0xB51428", Slot = "11")]
	public virtual int GetNumObjectsInCombined()
	{
		return default(int);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xB51458", Offset = "0xB51458", VA = "0xB51458", Slot = "12")]
	public virtual int GetNumVerticesFor(GameObject go)
	{
		return default(int);
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xB5149C", Offset = "0xB5149C", VA = "0xB5149C")]
	public MB3_TextureBaker GetTextureBaker()
	{
		return null;
	}

	[Token(Token = "0x6000044")]
	public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

	[Token(Token = "0x6000045")]
	public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true);

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xB515B4", Offset = "0xB515B4", VA = "0xB515B4", Slot = "15")]
	public virtual void Apply([Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xB51664", Offset = "0xB51664", VA = "0xB51664", Slot = "16")]
	public virtual void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xB517AC", Offset = "0xB517AC", VA = "0xB517AC", Slot = "17")]
	public virtual bool CombinedMeshContains(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xB517F0", Offset = "0xB517F0", VA = "0xB517F0", Slot = "18")]
	public virtual void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV1 = false, bool updateUV2 = false, bool updateColors = false, bool updateSkinningInfo = false)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xB51920", Offset = "0xB51920", VA = "0xB51920", Slot = "19")]
	public virtual void UpdateSkinnedMeshApproximateBounds()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xB51980", Offset = "0xB51980", VA = "0xB51980", Slot = "20")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBones()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xB519E0", Offset = "0xB519E0", VA = "0xB519E0", Slot = "21")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBounds()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xB51A40", Offset = "0xB51A40", VA = "0xB51A40", Slot = "22")]
	protected virtual bool _ValidateForUpdateSkinnedMeshBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xB50FE8", Offset = "0xB50FE8", VA = "0xB50FE8")]
	protected MB3_MeshBakerCommon()
	{
	}
}
[Token(Token = "0x2000017")]
public class MB3_MeshBakerGrouper : MonoBehaviour
{
	[Token(Token = "0x2000440")]
	public enum ClusterType
	{
		[Token(Token = "0x4001B06")]
		none,
		[Token(Token = "0x4001B07")]
		grid,
		[Token(Token = "0x4001B08")]
		pie,
		[Token(Token = "0x4001B09")]
		agglomerative
	}

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBakerGrouperCore grouper;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ClusterType clusterType;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrouperData data;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Bounds sourceObjectBounds;

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xB51C1C", Offset = "0xB51C1C", VA = "0xB51C1C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xB51CCC", Offset = "0xB51CCC", VA = "0xB51CCC")]
	public MB3_MeshBakerGrouperCore CreateGrouper(ClusterType t, GrouperData data)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xB51E70", Offset = "0xB51E70", VA = "0xB51E70")]
	public MB3_MeshBakerGrouper()
	{
	}
}
[Token(Token = "0x2000018")]
public abstract class MB3_MeshBakerRoot : MonoBehaviour
{
	[Token(Token = "0x2000441")]
	public class ZSortObjects
	{
		[Token(Token = "0x20005D8")]
		public class Item
		{
			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 point;

			[Token(Token = "0x6002070")]
			[Address(RVA = "0xB52C84", Offset = "0xB52C84", VA = "0xB52C84")]
			public Item()
			{
			}
		}

		[Token(Token = "0x20005D9")]
		public class ItemComparer : IComparer<Item>
		{
			[Token(Token = "0x6002071")]
			[Address(RVA = "0xB52C9C", Offset = "0xB52C9C", VA = "0xB52C9C", Slot = "4")]
			public int Compare(Item a, Item b)
			{
				return default(int);
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0xB52C8C", Offset = "0xB52C8C", VA = "0xB52C8C")]
			public ItemComparer()
			{
			}
		}

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 sortAxis;

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xB5282C", Offset = "0xB5282C", VA = "0xB5282C")]
		public void SortByDistanceAlongAxis(List<GameObject> gos)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xB52C94", Offset = "0xB52C94", VA = "0xB52C94")]
		public ZSortObjects()
		{
		}
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 sortAxis;

	[Token(Token = "0x17000004")]
	[HideInInspector]
	public abstract MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x6000052")]
		get;
		[Token(Token = "0x6000053")]
		set;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xB51F6C", Offset = "0xB51F6C", VA = "0xB51F6C", Slot = "6")]
	public virtual List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xB51F74", Offset = "0xB51F74", VA = "0xB51F74")]
	public static bool DoCombinedValidate(MB3_MeshBakerRoot mom, MB_ObjsToCombineTypes objToCombineType, MB2_EditorMethodsInterface editorMethods, MB2_ValidationLevel validationLevel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xB51C14", Offset = "0xB51C14", VA = "0xB51C14")]
	protected MB3_MeshBakerRoot()
	{
	}
}
[Token(Token = "0x2000019")]
public class MB3_MultiMeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected MB3_MultiMeshCombiner _meshCombiner;

	[Token(Token = "0x17000005")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0xB52D34", Offset = "0xB52D34", VA = "0xB52D34", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xB52D3C", Offset = "0xB52D3C", VA = "0xB52D3C", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xB52EBC", Offset = "0xB52EBC", VA = "0xB52EBC", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xB5303C", Offset = "0xB5303C", VA = "0xB5303C")]
	public MB3_MultiMeshBaker()
	{
	}
}
[Token(Token = "0x200001A")]
public class MB3_TextureBaker : MB3_MeshBakerRoot
{
	[Token(Token = "0x2000442")]
	public delegate void OnCombinedTexturesCoroutineSuccess();

	[Token(Token = "0x2000443")]
	public delegate void OnCombinedTexturesCoroutineFail();

	[Token(Token = "0x2000444")]
	public class CreateAtlasesCoroutineResult
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool success;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isFinished;

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xB54F10", Offset = "0xB54F10", VA = "0xB54F10")]
		public CreateAtlasesCoroutineResult()
		{
		}
	}

	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714E4C", Offset = "0x714E4C")]
	private sealed class <CreateAtlasesCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB3_TextureBaker <>4__this;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxTimePerFrame;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CreateAtlasesCoroutineResult coroutineResult;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool saveAtlasesAsAssets;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ProgressUpdateDelegate progressInfo;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MB2_EditorMethodsInterface editorMethods;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MB3_TextureCombiner <combiner>5__2;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <i>5__3;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult <coroutineResult2>5__4;

		[Token(Token = "0x17000267")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xB56CE8", Offset = "0xB56CE8", VA = "0xB56CE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0xB56D50", Offset = "0xB56D50", VA = "0xB56D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xB54EE4", Offset = "0xB54EE4", VA = "0xB54EE4")]
		[DebuggerHidden]
		public <CreateAtlasesCoroutine>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xB55DCC", Offset = "0xB55DCC", VA = "0xB55DCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xB55DD0", Offset = "0xB55DD0", VA = "0xB55DD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xB56CF0", Offset = "0xB56CF0", VA = "0xB56CF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected MB2_TextureBakeResults _textureBakeResults;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected int _atlasPadding;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected int _maxAtlasSize;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool _resizePowerOfTwoTextures;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	protected bool _fixOutOfBoundsUVs;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected int _maxTilingBakeSize;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected MB2_PackingAlgorithmEnum _packingAlgorithm;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected bool _meshBakerTexturePackerForcePowerOfTwo;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected List<ShaderTextureProperty> _customShaderProperties;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected List<string> _customShaderPropNames_Depricated;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected bool _doMultiMaterial;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Material _resultMaterial;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected bool _considerNonTextureProperties;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[SerializeField]
	protected bool _doSuggestTreatment;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OnCombinedTexturesCoroutineSuccess onBuiltAtlasesSuccess;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OnCombinedTexturesCoroutineFail onBuiltAtlasesFail;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MB_AtlasesAndRects[] OnCombinedTexturesCoroutineAtlasesAndRects;

	[Token(Token = "0x17000006")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x600005B")]
		[Address(RVA = "0xB5493C", Offset = "0xB5493C", VA = "0xB5493C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600005C")]
		[Address(RVA = "0xB54944", Offset = "0xB54944", VA = "0xB54944", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public virtual int atlasPadding
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0xB5494C", Offset = "0xB5494C", VA = "0xB5494C", Slot = "7")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600005E")]
		[Address(RVA = "0xB54954", Offset = "0xB54954", VA = "0xB54954", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public virtual int maxAtlasSize
	{
		[Token(Token = "0x600005F")]
		[Address(RVA = "0xB5495C", Offset = "0xB5495C", VA = "0xB5495C", Slot = "9")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000060")]
		[Address(RVA = "0xB54964", Offset = "0xB54964", VA = "0xB54964", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public virtual bool resizePowerOfTwoTextures
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0xB5496C", Offset = "0xB5496C", VA = "0xB5496C", Slot = "11")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000062")]
		[Address(RVA = "0xB54974", Offset = "0xB54974", VA = "0xB54974", Slot = "12")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public virtual bool fixOutOfBoundsUVs
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0xB54980", Offset = "0xB54980", VA = "0xB54980", Slot = "13")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000064")]
		[Address(RVA = "0xB54988", Offset = "0xB54988", VA = "0xB54988", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public virtual int maxTilingBakeSize
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0xB54994", Offset = "0xB54994", VA = "0xB54994", Slot = "15")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000066")]
		[Address(RVA = "0xB5499C", Offset = "0xB5499C", VA = "0xB5499C", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public virtual MB2_PackingAlgorithmEnum packingAlgorithm
	{
		[Token(Token = "0x6000067")]
		[Address(RVA = "0xB549A4", Offset = "0xB549A4", VA = "0xB549A4", Slot = "17")]
		get
		{
			return default(MB2_PackingAlgorithmEnum);
		}
		[Token(Token = "0x6000068")]
		[Address(RVA = "0xB549AC", Offset = "0xB549AC", VA = "0xB549AC", Slot = "18")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public bool meshBakerTexturePackerForcePowerOfTwo
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0xB549B4", Offset = "0xB549B4", VA = "0xB549B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600006A")]
		[Address(RVA = "0xB549BC", Offset = "0xB549BC", VA = "0xB549BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public virtual List<ShaderTextureProperty> customShaderProperties
	{
		[Token(Token = "0x600006B")]
		[Address(RVA = "0xB549C8", Offset = "0xB549C8", VA = "0xB549C8", Slot = "19")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006C")]
		[Address(RVA = "0xB549D0", Offset = "0xB549D0", VA = "0xB549D0", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public virtual List<string> customShaderPropNames
	{
		[Token(Token = "0x600006D")]
		[Address(RVA = "0xB549D8", Offset = "0xB549D8", VA = "0xB549D8", Slot = "21")]
		get
		{
			return null;
		}
		[Token(Token = "0x600006E")]
		[Address(RVA = "0xB549E0", Offset = "0xB549E0", VA = "0xB549E0", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public virtual bool doMultiMaterial
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0xB549E8", Offset = "0xB549E8", VA = "0xB549E8", Slot = "23")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000070")]
		[Address(RVA = "0xB549F0", Offset = "0xB549F0", VA = "0xB549F0", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public virtual Material resultMaterial
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0xB549FC", Offset = "0xB549FC", VA = "0xB549FC", Slot = "25")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000072")]
		[Address(RVA = "0xB54A04", Offset = "0xB54A04", VA = "0xB54A04", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public bool considerNonTextureProperties
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0xB54A0C", Offset = "0xB54A0C", VA = "0xB54A0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000074")]
		[Address(RVA = "0xB54A14", Offset = "0xB54A14", VA = "0xB54A14")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public bool doSuggestTreatment
	{
		[Token(Token = "0x6000075")]
		[Address(RVA = "0xB54A20", Offset = "0xB54A20", VA = "0xB54A20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000076")]
		[Address(RVA = "0xB54A28", Offset = "0xB54A28", VA = "0xB54A28")]
		set
		{
		}
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB54A34", Offset = "0xB54A34", VA = "0xB54A34", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB54AA8", Offset = "0xB54AA8", VA = "0xB54AA8")]
	public MB_AtlasesAndRects[] CreateAtlases()
	{
		return null;
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB54E34", Offset = "0xB54E34", VA = "0xB54E34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71D12C", Offset = "0x71D12C")]
	public IEnumerator CreateAtlasesCoroutine(ProgressUpdateDelegate progressInfo, CreateAtlasesCoroutineResult coroutineResult, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods, float maxTimePerFrame = 0.01f)
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xB54AB8", Offset = "0xB54AB8", VA = "0xB54AB8")]
	public MB_AtlasesAndRects[] CreateAtlases(ProgressUpdateDelegate progressInfo, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xB54F20", Offset = "0xB54F20", VA = "0xB54F20")]
	private void unpackMat2RectMap(MB2_TextureBakeResults tbr)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB55164", Offset = "0xB55164", VA = "0xB55164")]
	public static void ConfigureNewMaterialToMatchOld(Material newMat, Material original)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB5549C", Offset = "0xB5549C", VA = "0xB5549C")]
	private string PrintSet(HashSet<Material> s)
	{
		return null;
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB555E8", Offset = "0xB555E8", VA = "0xB555E8")]
	private bool _ValidateResultMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB55CEC", Offset = "0xB55CEC", VA = "0xB55CEC")]
	public MB3_TextureBaker()
	{
	}
}
[Token(Token = "0x200001B")]
public class MB2_TestShowHide : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker mb;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objs;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB4CE38", Offset = "0xB4CE38", VA = "0xB4CE38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB4CF7C", Offset = "0xB4CF7C", VA = "0xB4CF7C")]
	public MB2_TestShowHide()
	{
	}
}
[Token(Token = "0x200001C")]
public class MB2_TestUpdate : MonoBehaviour
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB3_MultiMeshBaker multiMeshBaker;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objsToMove;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objWithChangingUVs;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] uvs;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh m;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB4CF84", Offset = "0xB4CF84", VA = "0xB4CF84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB4D1AC", Offset = "0xB4D1AC", VA = "0xB4D1AC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB4D638", Offset = "0xB4D638", VA = "0xB4D638")]
	public MB2_TestUpdate()
	{
	}
}
[Token(Token = "0x200001D")]
public class MB3_TestAddingRemovingSkinnedMeshes : MonoBehaviour
{
	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714E5C", Offset = "0x714E5C")]
	private sealed class <TestScript>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB3_TestAddingRemovingSkinnedMeshes <>4__this;

		[Token(Token = "0x17000269")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B66")]
			[Address(RVA = "0xB53A78", Offset = "0xB53A78", VA = "0xB53A78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0xB53AE0", Offset = "0xB53AE0", VA = "0xB53AE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xB53148", Offset = "0xB53148", VA = "0xB53148")]
		[DebuggerHidden]
		public <TestScript>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xB5317C", Offset = "0xB5317C", VA = "0xB5317C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xB53180", Offset = "0xB53180", VA = "0xB53180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xB53A80", Offset = "0xB53A80", VA = "0xB53A80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] g;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB530AC", Offset = "0xB530AC", VA = "0xB530AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB530D8", Offset = "0xB530D8", VA = "0xB530D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71D190", Offset = "0x71D190")]
	private IEnumerator TestScript()
	{
		return null;
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB53174", Offset = "0xB53174", VA = "0xB53174")]
	public MB3_TestAddingRemovingSkinnedMeshes()
	{
	}
}
[Token(Token = "0x200001E")]
public class MB3_TestBakeAllWithSameMaterial : MonoBehaviour
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] listOfObjsToCombineGood;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] listOfObjsToCombineBad;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xB53AE8", Offset = "0xB53AE8", VA = "0xB53AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xB53AEC", Offset = "0xB53AEC", VA = "0xB53AEC")]
	private void testCombine()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xB53E30", Offset = "0xB53E30", VA = "0xB53E30")]
	public MB3_TestBakeAllWithSameMaterial()
	{
	}
}
[Token(Token = "0x200001F")]
public class MB3_TestRenderTextureTestHarness : MonoBehaviour
{
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D input;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doColor;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color32 color;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB53E38", Offset = "0xB53E38", VA = "0xB53E38")]
	public Texture2D Create3x3Tex()
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xB53F58", Offset = "0xB53F58", VA = "0xB53F58")]
	public Texture2D Create3x3Clone()
	{
		return null;
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xB541E8", Offset = "0xB541E8", VA = "0xB541E8")]
	public static void TestRender(Texture2D input, Texture2D output)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xB54934", Offset = "0xB54934", VA = "0xB54934")]
	public MB3_TestRenderTextureTestHarness()
	{
	}
}
[Token(Token = "0x2000020")]
public class MB_TextureCombinerRenderTexture
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderTexture _destinationTexture;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera myCamera;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _padding;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _isNormalMap;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool _fixOutOfBoundsUVs;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool _doRenderAtlas;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rect[] rs;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<MB3_TextureCombiner.MB_TexSet> textureSets;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int indexOfTexSetToRender;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ShaderTextureProperty _texPropertyName;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TextureBlender _resultMaterialTextureBlender;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D targTex;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MB3_TextureCombiner combiner;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xC08670", Offset = "0xC08670", VA = "0xC08670")]
	public Texture2D DoRenderAtlas(GameObject gameObject, int width, int height, int padding, Rect[] rss, List<MB3_TextureCombiner.MB_TexSet> textureSetss, int indexOfTexSetToRenders, ShaderTextureProperty texPropertyname, TextureBlender resultMaterialTextureBlender, bool isNormalMap, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, MB3_TextureCombiner texCombiner, MB2_LogLevel LOG_LEV)
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC08AA8", Offset = "0xC08AA8", VA = "0xC08AA8")]
	public void OnRenderObject()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xC0AA70", Offset = "0xC0AA70", VA = "0xC0AA70")]
	private Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC0AA14", Offset = "0xC0AA14", VA = "0xC0AA14")]
	private bool IsOpenGL()
	{
		return default(bool);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC09920", Offset = "0xC09920", VA = "0xC09920")]
	private void CopyScaledAndTiledToAtlas(MB3_TextureCombiner.MB_TexSet texSet, MB3_TextureCombiner.MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, Rect rec, ShaderTextureProperty texturePropertyName, TextureBlender resultMatTexBlender)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xC09638", Offset = "0xC09638", VA = "0xC09638")]
	private void _printTexture(Texture2D t)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xC0ABAC", Offset = "0xC0ABAC", VA = "0xC0ABAC")]
	public MB_TextureCombinerRenderTexture()
	{
	}
}
[Token(Token = "0x2000021")]
[ExecuteInEditMode]
public class MB3_AtlasPackerRenderTexture : MonoBehaviour
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MB_TextureCombinerRenderTexture fastRenderer;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _doRenderAtlas;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int width;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int height;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int padding;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isNormalMap;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool fixOutOfBoundsUVs;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool considerNonTextureProperties;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextureBlender resultMaterialTextureBlender;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rect[] rects;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D tex1;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MB3_TextureCombiner.MB_TexSet> textureSets;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int indexOfTexSetToRender;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ShaderTextureProperty texPropertyName;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D testTex;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material testMat;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB4F9B8", Offset = "0xB4F9B8", VA = "0xB4F9B8")]
	public Texture2D OnRenderAtlas(MB3_TextureCombiner combiner)
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB4FA9C", Offset = "0xB4FA9C", VA = "0xB4FA9C")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB4FAD8", Offset = "0xB4FAD8", VA = "0xB4FAD8")]
	public MB3_AtlasPackerRenderTexture()
	{
	}
}
[Token(Token = "0x2000022")]
public class MB3_KMeansClustering
{
	[Token(Token = "0x2000447")]
	private class DataPoint
	{
		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Cluster;

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xB50130", Offset = "0xB50130", VA = "0xB50130")]
		public DataPoint(GameObject go)
		{
		}
	}

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<DataPoint> _normalizedDataToCluster;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] _clusters;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _numberOfClusters;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB4FE7C", Offset = "0xB4FE7C", VA = "0xB4FE7C")]
	public MB3_KMeansClustering(List<GameObject> gos, int numClusters)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB5025C", Offset = "0xB5025C", VA = "0xB5025C")]
	private void InitializeCentroids()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB50354", Offset = "0xB50354", VA = "0xB50354")]
	private bool UpdateDataPointMeans(bool force)
	{
		return default(bool);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB505F8", Offset = "0xB505F8", VA = "0xB505F8")]
	private bool AnyAreEmpty(List<DataPoint> data)
	{
		return default(bool);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB50710", Offset = "0xB50710", VA = "0xB50710")]
	private bool UpdateClusterMembership()
	{
		return default(bool);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB508D8", Offset = "0xB508D8", VA = "0xB508D8")]
	private float ElucidanDistance(DataPoint dataPoint, Vector3 mean)
	{
		return default(float);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB50988", Offset = "0xB50988", VA = "0xB50988")]
	private int MinIndex(float[] distances)
	{
		return default(int);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB509F8", Offset = "0xB509F8", VA = "0xB509F8")]
	public List<Renderer> GetCluster(int idx, out Vector3 mean, out float size)
	{
		return null;
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB50D14", Offset = "0xB50D14", VA = "0xB50D14")]
	public void Cluster()
	{
	}
}
[Token(Token = "0x2000023")]
public class SABoneColliderCommon
{
	[Token(Token = "0x2000448")]
	public enum BoneWeightType
	{
		[Token(Token = "0x4001B1F")]
		Bone2,
		[Token(Token = "0x4001B20")]
		Bone4
	}

	[Token(Token = "0x2000449")]
	public enum BoneTriangleExtent
	{
		[Token(Token = "0x4001B22")]
		Disable,
		[Token(Token = "0x4001B23")]
		Vertex2,
		[Token(Token = "0x4001B24")]
		Vertex1
	}

	[Serializable]
	[Token(Token = "0x200044A")]
	public class BoneProperty
	{
		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool recursivery;

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x958A54", Offset = "0x958A54", VA = "0x958A54")]
		public BoneProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x958ADC", Offset = "0x958ADC", VA = "0x958ADC")]
		public BoneProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200044B")]
	public class SplitProperty
	{
		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoneWeightType boneWeightType;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int boneWeight2;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int boneWeight3;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int boneWeight4;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool greaterBoneWeight;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public BoneTriangleExtent boneTriangleExtent;

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x958BA4", Offset = "0x958BA4", VA = "0x958BA4")]
		public SplitProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x958E84", Offset = "0x958E84", VA = "0x958E84")]
		public SplitProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200044C")]
	public class SABoneColliderProperty
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoneProperty boneProperty;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SplitProperty splitProperty;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool modifyNameEnabled;

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x958FF0", Offset = "0x958FF0", VA = "0x958FF0")]
		public SABoneColliderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x958748", Offset = "0x958748", VA = "0x958748")]
		public SABoneColliderProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200044D")]
	public class SABoneColliderBuilderProperty
	{
		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplitProperty splitProperty;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool modifyNameEnabled;

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x958AE4", Offset = "0x958AE4", VA = "0x958AE4")]
		public SABoneColliderBuilderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x958DC4", Offset = "0x958DC4", VA = "0x958DC4")]
		public SABoneColliderProperty ToSABoneColliderProperty()
		{
			return null;
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x958938", Offset = "0x958938", VA = "0x958938")]
		public SABoneColliderBuilderProperty()
		{
		}
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x958A4C", Offset = "0x958A4C", VA = "0x958A4C")]
	public SABoneColliderCommon()
	{
	}
}
[Token(Token = "0x2000024")]
public class SAColliderBuilderCommon
{
	[Token(Token = "0x200044E")]
	public enum ShapeType
	{
		[Token(Token = "0x4001B38")]
		None,
		[Token(Token = "0x4001B39")]
		Mesh,
		[Token(Token = "0x4001B3A")]
		Box,
		[Token(Token = "0x4001B3B")]
		Capsule,
		[Token(Token = "0x4001B3C")]
		Sphere
	}

	[Token(Token = "0x200044F")]
	public enum FitType
	{
		[Token(Token = "0x4001B3E")]
		Outer,
		[Token(Token = "0x4001B3F")]
		Inner
	}

	[Token(Token = "0x2000450")]
	public enum MeshType
	{
		[Token(Token = "0x4001B41")]
		Raw,
		[Token(Token = "0x4001B42")]
		ConvexBoxes,
		[Token(Token = "0x4001B43")]
		ConvexHull,
		[Token(Token = "0x4001B44")]
		Box
	}

	[Token(Token = "0x2000451")]
	public enum SliceMode
	{
		[Token(Token = "0x4001B46")]
		Auto,
		[Token(Token = "0x4001B47")]
		X,
		[Token(Token = "0x4001B48")]
		Y,
		[Token(Token = "0x4001B49")]
		Z
	}

	[Token(Token = "0x2000452")]
	public enum ElementType
	{
		[Token(Token = "0x4001B4B")]
		X,
		[Token(Token = "0x4001B4C")]
		XYZ
	}

	[Serializable]
	[Token(Token = "0x2000453")]
	public struct Bool3
	{
		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool x;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool y;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool z;

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x79A4E8", Offset = "0x79A4E8", VA = "0x79A4E8")]
		public Bool3(bool x, bool y, bool z)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x79A504", Offset = "0x79A504", VA = "0x79A504")]
		public void SetValue(bool x, bool y, bool z)
		{
		}
	}

	[Token(Token = "0x2000454")]
	public enum ColliderToChild
	{
		[Token(Token = "0x4001B51")]
		Auto,
		[Token(Token = "0x4001B52")]
		On,
		[Token(Token = "0x4001B53")]
		Off
	}

	[Serializable]
	[Token(Token = "0x2000455")]
	public class ReducerProperty
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShapeType shapeType;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FitType fitType;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshType meshType;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxTriangles;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SliceMode sliceMode;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ElementType scaleElementType;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 minThickness;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ElementType minThicknessElementType;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Bool3 optimizeRotation;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ElementType optimizeRotationElementType;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ColliderToChild colliderToChild;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 offset;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 thicknessA;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 thicknessB;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool viewAdvanced;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x958C2C", Offset = "0x958C2C", VA = "0x958C2C")]
		public ReducerProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x958EAC", Offset = "0x958EAC", VA = "0x958EAC")]
		public ReducerProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000456")]
	public class ColliderProperty
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool convex;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isTrigger;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhysicMaterial material;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isCreateAsset;

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x958CB4", Offset = "0x958CB4", VA = "0x958CB4")]
		public ColliderProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x958FB8", Offset = "0x958FB8", VA = "0x958FB8")]
		public ColliderProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000457")]
	public class RigidbodyProperty
	{
		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float mass;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float drag;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angularDrag;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isKinematic;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool useGravity;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RigidbodyInterpolation interpolation;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CollisionDetectionMode collisionDetectionMode;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isCreate;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool viewAdvanced;

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x958D3C", Offset = "0x958D3C", VA = "0x958D3C")]
		public RigidbodyProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x958FC8", Offset = "0x958FC8", VA = "0x958FC8")]
		public RigidbodyProperty()
		{
		}
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x9590C4", Offset = "0x9590C4", VA = "0x9590C4")]
	public SAColliderBuilderCommon()
	{
	}
}
[Token(Token = "0x2000025")]
public class SAMeshColliderCommon
{
	[Token(Token = "0x2000458")]
	public enum SplitMode
	{
		[Token(Token = "0x4001B72")]
		None,
		[Token(Token = "0x4001B73")]
		Material,
		[Token(Token = "0x4001B74")]
		Primitive,
		[Token(Token = "0x4001B75")]
		Polygon
	}

	[Serializable]
	[Token(Token = "0x2000459")]
	public class SplitMesh
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int subMeshCount;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int subMesh;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int triangle;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 triangleVertex;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] polygonTriangles;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] polygonVertices;

		[NonSerialized]
		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] triangles;

		[NonSerialized]
		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] vertices;

		[NonSerialized]
		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3[] triangleNormals;

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x959D10", Offset = "0x959D10", VA = "0x959D10")]
		public void PurgeTemporary()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x9596B8", Offset = "0x9596B8", VA = "0x9596B8")]
		public SplitMesh()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200045A")]
	public class SplitProperty
	{
		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool splitMaterialEnabled;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool splitPrimitiveEnabled;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool splitPolygonNormalEnabled;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float splitPolygonNormalAngle;

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x959AF0", Offset = "0x959AF0", VA = "0x959AF0")]
		public SplitProperty ShallowCopy()
		{
			return null;
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x959C38", Offset = "0x959C38", VA = "0x959C38")]
		public SplitProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200045B")]
	public class SAMeshColliderProperty
	{
		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplitProperty splitProperty;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool modifyNameEnabled;

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x959C50", Offset = "0x959C50", VA = "0x959C50")]
		public SAMeshColliderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x9596C8", Offset = "0x9596C8", VA = "0x9596C8")]
		public SAMeshColliderProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200045C")]
	public class SAMeshColliderBuilderProperty
	{
		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplitProperty splitProperty;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SAColliderBuilderCommon.ReducerProperty reducerProperty;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SAColliderBuilderCommon.ColliderProperty colliderProperty;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool modifyNameEnabled;

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x959A30", Offset = "0x959A30", VA = "0x959A30")]
		public SAMeshColliderBuilderProperty Copy()
		{
			return null;
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x959B78", Offset = "0x959B78", VA = "0x959B78")]
		public SAMeshColliderProperty ToSAMeshColliderProperty()
		{
			return null;
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x959924", Offset = "0x959924", VA = "0x959924")]
		public SAMeshColliderBuilderProperty()
		{
		}
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x959A28", Offset = "0x959A28", VA = "0x959A28")]
	public SAMeshColliderCommon()
	{
	}
}
[Token(Token = "0x2000026")]
public class SABoneCollider : MonoBehaviour
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SABoneColliderCommon.SABoneColliderProperty boneColliderProperty;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string defaultName;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SABoneColliderCommon.SABoneColliderProperty defaultBoneColliderProperty;

	[NonSerialized]
	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SABoneColliderCommon.SABoneColliderProperty edittingBoneColliderProperty;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool modified;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool modifiedChildren;

	[NonSerialized]
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool isDebug;

	[Token(Token = "0x17000014")]
	public SABoneColliderCommon.BoneProperty boneProperty
	{
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x958210", Offset = "0x958210", VA = "0x958210")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	public SABoneColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x958228", Offset = "0x958228", VA = "0x958228")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000016")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x958240", Offset = "0x958240", VA = "0x958240")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000017")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x958258", Offset = "0x958258", VA = "0x958258")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000018")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x958270", Offset = "0x958270", VA = "0x958270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	public bool recursivery
	{
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x958288", Offset = "0x958288", VA = "0x958288")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001A")]
	public bool modifyNameEnalbed
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x9582B0", Offset = "0x9582B0", VA = "0x9582B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x9582D0", Offset = "0x9582D0", VA = "0x9582D0")]
	public void ChangeDefaultName(string defaultName)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x9584E0", Offset = "0x9584E0", VA = "0x9584E0")]
	public void ChangeModified(bool modified)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x958560", Offset = "0x958560", VA = "0x958560")]
	public void ChangeModifiedChildren(bool modifiedChildren)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x9585E0", Offset = "0x9585E0", VA = "0x9585E0")]
	public void ResetModified()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x958658", Offset = "0x958658", VA = "0x958658")]
	public void ResetModifyName()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x9583F4", Offset = "0x9583F4", VA = "0x9583F4")]
	public string _ComputeModifyName()
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x95834C", Offset = "0x95834C", VA = "0x95834C")]
	public bool _IsModifyName()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x9586B8", Offset = "0x9586B8", VA = "0x9586B8")]
	public SABoneCollider()
	{
	}
}
[Token(Token = "0x2000027")]
public class SABoneColliderBuilder : MonoBehaviour
{
	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SABoneColliderCommon.SABoneColliderBuilderProperty boneColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SABoneColliderCommon.SABoneColliderBuilderProperty edittingBoneColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isDebug;

	[Token(Token = "0x1700001B")]
	public SABoneColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x958874", Offset = "0x958874", VA = "0x958874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001C")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x95888C", Offset = "0x95888C", VA = "0x95888C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001D")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x9588A4", Offset = "0x9588A4", VA = "0x9588A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x9588BC", Offset = "0x9588BC", VA = "0x9588BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x9588D4", Offset = "0x9588D4", VA = "0x9588D4")]
	public SABoneColliderBuilder()
	{
	}
}
[Token(Token = "0x2000028")]
public class SABoneColliderChild : MonoBehaviour
{
	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x958A44", Offset = "0x958A44", VA = "0x958A44")]
	public SABoneColliderChild()
	{
	}
}
[Token(Token = "0x2000029")]
public class SAMeshCollider : MonoBehaviour
{
	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAMeshColliderCommon.SplitMesh splitMesh;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SAMeshColliderCommon.SplitMode splitMode;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SAMeshColliderCommon.SAMeshColliderProperty meshColliderProperty;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string defaultName;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SAMeshColliderCommon.SAMeshColliderProperty defaultMeshColliderProperty;

	[NonSerialized]
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SAMeshColliderCommon.SAMeshColliderProperty edittingMeshCollidertProperty;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool modified;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool modifiedChildren;

	[NonSerialized]
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool isDebug;

	[Token(Token = "0x1700001F")]
	public SAMeshColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x959104", Offset = "0x959104", VA = "0x959104")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x95911C", Offset = "0x95911C", VA = "0x95911C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x959134", Offset = "0x959134", VA = "0x959134")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x95914C", Offset = "0x95914C", VA = "0x95914C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	public bool splitMaterialEnabled
	{
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x959164", Offset = "0x959164", VA = "0x959164")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	public bool splitPrimitiveEnabled
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x95918C", Offset = "0x95918C", VA = "0x95918C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000025")]
	public bool splitPolygonNormalEnabled
	{
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x9591B4", Offset = "0x9591B4", VA = "0x9591B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000026")]
	public float splitPolygonNormalAngle
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x9591DC", Offset = "0x9591DC", VA = "0x9591DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000027")]
	public bool modifyNameEnalbed
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x9591F8", Offset = "0x9591F8", VA = "0x9591F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x959218", Offset = "0x959218", VA = "0x959218")]
	public void ChangeDefaultName(string defaultName)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x959428", Offset = "0x959428", VA = "0x959428")]
	public void ChangeModified(bool modified)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x9594A8", Offset = "0x9594A8", VA = "0x9594A8")]
	public void ChangeModifiedChildren(bool modifiedChildren)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x959528", Offset = "0x959528", VA = "0x959528")]
	public void ResetModified()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x9595A0", Offset = "0x9595A0", VA = "0x9595A0")]
	public void ResetModifyName()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x95933C", Offset = "0x95933C", VA = "0x95933C")]
	public string _ComputeModifyName()
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x959294", Offset = "0x959294", VA = "0x959294")]
	public bool _IsModifyName()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x959600", Offset = "0x959600", VA = "0x959600")]
	public SAMeshCollider()
	{
	}
}
[Token(Token = "0x200002A")]
public class SAMeshColliderBuilder : MonoBehaviour
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SAMeshColliderCommon.SAMeshColliderBuilderProperty meshColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SAMeshColliderCommon.SAMeshColliderBuilderProperty edittingMeshColliderBuilderProperty;

	[NonSerialized]
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool cleanupModified;

	[NonSerialized]
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isDebug;

	[Token(Token = "0x17000028")]
	public SAMeshColliderCommon.SplitProperty splitProperty
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x9597CC", Offset = "0x9597CC", VA = "0x9597CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public SAColliderBuilderCommon.ReducerProperty reducerProperty
	{
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x9597E4", Offset = "0x9597E4", VA = "0x9597E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public SAColliderBuilderCommon.ColliderProperty colliderProperty
	{
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x9597FC", Offset = "0x9597FC", VA = "0x9597FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002B")]
	public SAColliderBuilderCommon.RigidbodyProperty rigidbodyProperty
	{
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x959814", Offset = "0x959814", VA = "0x959814")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	public bool splitMaterialEnabled
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x95982C", Offset = "0x95982C", VA = "0x95982C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	public bool splitPrimitiveEnabled
	{
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x959854", Offset = "0x959854", VA = "0x959854")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002E")]
	public bool splitPolygonNormalEnabled
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x95987C", Offset = "0x95987C", VA = "0x95987C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public float splitPolygonNormalAngle
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x9598A4", Offset = "0x9598A4", VA = "0x9598A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x9598C0", Offset = "0x9598C0", VA = "0x9598C0")]
	public SAMeshColliderBuilder()
	{
	}
}
[Token(Token = "0x200002B")]
public class ColorSelector : MonoBehaviour
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera refCamera;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject selectorImage;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject outerCursor;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject innerCursor;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer finalColorSprite;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color finalColor;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color selectedColor;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float selectorAngle;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2 innerDelta;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ColorSelector myslf;

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x92125C", Offset = "0x92125C", VA = "0x92125C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x9212B0", Offset = "0x9212B0", VA = "0x9212B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x9215F4", Offset = "0x9215F4", VA = "0x9215F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x921630", Offset = "0x921630", VA = "0x921630")]
	private void UserInputUpdate()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x92138C", Offset = "0x92138C", VA = "0x92138C")]
	private void SelectInnerColor(Vector2 delta)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x921BF0", Offset = "0x921BF0", VA = "0x921BF0")]
	private Vector3 ClampPosToCircle(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x9219D4", Offset = "0x9219D4", VA = "0x9219D4")]
	private void Barycentric(Vector2 point, ref float u, ref float v, ref float w)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x921870", Offset = "0x921870", VA = "0x921870")]
	private void SelectOuterColor(Vector2 delta)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x921CC4", Offset = "0x921CC4", VA = "0x921CC4")]
	public static Color HSVToRGB(float H, float S, float V)
	{
		return default(Color);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x921EE0", Offset = "0x921EE0", VA = "0x921EE0")]
	public static Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x921F40", Offset = "0x921F40", VA = "0x921F40")]
	public ColorSelector()
	{
	}
}
[Token(Token = "0x200002C")]
public class ResetPosition : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToReset;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPosition;

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x956384", Offset = "0x956384", VA = "0x956384")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x9563C0", Offset = "0x9563C0", VA = "0x9563C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x9564C8", Offset = "0x9564C8", VA = "0x9564C8")]
	public ResetPosition()
	{
	}
}
[Token(Token = "0x200002D")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200045D")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x8ED58C", Offset = "0x8ED58C", VA = "0x8ED58C")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x200045E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714E6C", Offset = "0x714E6C")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x1700026B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x8ED51C", Offset = "0x8ED51C", VA = "0x8ED51C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x8ED584", Offset = "0x8ED584", VA = "0x8ED584", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x8ECDA0", Offset = "0x8ECDA0", VA = "0x8ECDA0")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x8ECE54", Offset = "0x8ECE54", VA = "0x8ECE54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x8ECEC8", Offset = "0x8ECEC8", VA = "0x8ECEC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x8ECE70", Offset = "0x8ECE70", VA = "0x8ECE70")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x8ED524", Offset = "0x8ED524", VA = "0x8ED524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x8EB4C4", Offset = "0x8EB4C4", VA = "0x8EB4C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x8EB7F4", Offset = "0x8EB7F4", VA = "0x8EB7F4")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x8EB8C4", Offset = "0x8EB8C4", VA = "0x8EB8C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x8EBD74", Offset = "0x8EBD74", VA = "0x8EBD74")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x8EB614", Offset = "0x8EB614", VA = "0x8EB614")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x8ECBFC", Offset = "0x8ECBFC", VA = "0x8ECBFC")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x8EBB40", Offset = "0x8EBB40", VA = "0x8EBB40")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x8ECB7C", Offset = "0x8ECB7C", VA = "0x8ECB7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71D1F4", Offset = "0x71D1F4")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x8ECDCC", Offset = "0x8ECDCC", VA = "0x8ECDCC")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x200002E")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	[HideInInspector]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseCurvature;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[SerializeField]
	[HideInInspector]
	private bool m_bDataDirty;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xC12D00", Offset = "0xC12D00", VA = "0xC12D00")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xC12DF4", Offset = "0xC12DF4", VA = "0xC12DF4")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xC12F5C", Offset = "0xC12F5C", VA = "0xC12F5C")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xC12F64", Offset = "0xC12F64", VA = "0xC12F64")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xC12FC0", Offset = "0xC12FC0", VA = "0xC12FC0")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xC12FC8", Offset = "0xC12FC8", VA = "0xC12FC8")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xC12FD8", Offset = "0xC12FD8", VA = "0xC12FD8")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xC13008", Offset = "0xC13008", VA = "0xC13008")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xC1313C", Offset = "0xC1313C", VA = "0xC1313C")]
	private void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xC132E8", Offset = "0xC132E8", VA = "0xC132E8")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xC132F0", Offset = "0xC132F0", VA = "0xC132F0")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xC13334", Offset = "0xC13334", VA = "0xC13334")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xC13C18", Offset = "0xC13C18", VA = "0xC13C18")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xC13CEC", Offset = "0xC13CEC", VA = "0xC13CEC")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xC13D88", Offset = "0xC13D88", VA = "0xC13D88")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xC13DCC", Offset = "0xC13DCC", VA = "0xC13DCC")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xC14264", Offset = "0xC14264", VA = "0xC14264")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xC14298", Offset = "0xC14298", VA = "0xC14298")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xC144C0", Offset = "0xC144C0", VA = "0xC144C0")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xC14504", Offset = "0xC14504", VA = "0xC14504")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xC14774", Offset = "0xC14774", VA = "0xC14774")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xC147A8", Offset = "0xC147A8", VA = "0xC147A8")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xC14A24", Offset = "0xC14A24", VA = "0xC14A24")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xC14A58", Offset = "0xC14A58", VA = "0xC14A58")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xC14BF0", Offset = "0xC14BF0", VA = "0xC14BF0")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xC14C3C", Offset = "0xC14C3C", VA = "0xC14C3C")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xC14DC8", Offset = "0xC14DC8", VA = "0xC14DC8")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xC14E14", Offset = "0xC14E14", VA = "0xC14E14")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xC14FA0", Offset = "0xC14FA0", VA = "0xC14FA0")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xC13BE4", Offset = "0xC13BE4", VA = "0xC13BE4")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xC15068", Offset = "0xC15068", VA = "0xC15068")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xC152C4", Offset = "0xC152C4", VA = "0xC152C4")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x712A24", Offset = "0x712A24")]
public class MultiKeyDictionary<T1, T2, T3> : Dictionary<T1, Dictionary<T2, T3>>
{
	[Token(Token = "0x17000030")]
	public new Dictionary<T2, T3> Item
	{
		[Token(Token = "0x600010B")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010C")]
	public bool ContainsKey(T1 key1, T2 key2)
	{
		return default(bool);
	}

	[Token(Token = "0x600010D")]
	public MultiKeyDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class Images
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D clearImage;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D collapseImage;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D clearOnNewSceneImage;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D showTimeImage;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D showSceneImage;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D userImage;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D showMemoryImage;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D softwareImage;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D dateImage;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D showFpsImage;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D infoImage;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D searchImage;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D closeImage;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D buildFromImage;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture2D systemInfoImage;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture2D graphicsInfoImage;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture2D backImage;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture2D logImage;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Texture2D warningImage;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Texture2D errorImage;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Texture2D barImage;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Texture2D button_activeImage;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Texture2D even_logImage;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Texture2D odd_logImage;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Texture2D selectedImage;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GUISkin reporterScrollerSkin;

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB41B5C", Offset = "0xB41B5C", VA = "0xB41B5C")]
	public Images()
	{
	}
}
[Token(Token = "0x2000031")]
public class Reporter : MonoBehaviour
{
	[Token(Token = "0x200045F")]
	public enum _LogType
	{
		[Token(Token = "0x4001B9C")]
		Assert = 1,
		[Token(Token = "0x4001B9D")]
		Error = 0,
		[Token(Token = "0x4001B9E")]
		Exception = 4,
		[Token(Token = "0x4001B9F")]
		Log = 3,
		[Token(Token = "0x4001BA0")]
		Warning = 2
	}

	[Token(Token = "0x2000460")]
	public class Sample
	{
		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public byte loadedScene;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float memory;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fps;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fpsText;

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x94BBF4", Offset = "0x94BBF4", VA = "0x94BBF4")]
		public static float MemSize()
		{
			return default(float);
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x9524BC", Offset = "0x9524BC", VA = "0x9524BC")]
		public string GetSceneName()
		{
			return null;
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x94BBEC", Offset = "0x94BBEC", VA = "0x94BBEC")]
		public Sample()
		{
		}
	}

	[Token(Token = "0x2000461")]
	public class Log
	{
		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int count;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public _LogType logType;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string condition;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stacktrace;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sampleId;

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x9560F0", Offset = "0x9560F0", VA = "0x9560F0")]
		public Log CreateCopy()
		{
			return null;
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x95571C", Offset = "0x95571C", VA = "0x95571C")]
		public float GetMemoryUsage()
		{
			return default(float);
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x95570C", Offset = "0x95570C", VA = "0x95570C")]
		public Log()
		{
		}
	}

	[Token(Token = "0x2000462")]
	private enum ReportView
	{
		[Token(Token = "0x4001BAC")]
		None,
		[Token(Token = "0x4001BAD")]
		Logs,
		[Token(Token = "0x4001BAE")]
		Info,
		[Token(Token = "0x4001BAF")]
		Snapshot
	}

	[Token(Token = "0x2000463")]
	private enum DetailView
	{
		[Token(Token = "0x4001BB1")]
		None,
		[Token(Token = "0x4001BB2")]
		StackTrace,
		[Token(Token = "0x4001BB3")]
		Graph
	}

	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714E7C", Offset = "0x714E7C")]
	private sealed class <readInfo>d__183 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Reporter <>4__this;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x1700026D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x956080", Offset = "0x956080", VA = "0x956080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x9560E8", Offset = "0x9560E8", VA = "0x9560E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x955C0C", Offset = "0x955C0C", VA = "0x955C0C")]
		[DebuggerHidden]
		public <readInfo>d__183(int <>1__state)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x955E78", Offset = "0x955E78", VA = "0x955E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x955E7C", Offset = "0x955E7C", VA = "0x955E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x956088", Offset = "0x956088", VA = "0x956088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Sample> samples;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Log> logs;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Log> collapsedLogs;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Log> currentLog;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MultiKeyDictionary<string, string, Log> logsDic;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, string> cachedString;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool show;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool collapse;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool clearOnNewSceneLoaded;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool showTime;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool showScene;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool showMemory;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool showFps;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool showGraph;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool showLog;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool showWarning;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool showError;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int numOfLogs;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int numOfLogsWarning;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int numOfLogsError;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int numOfCollapsedLogs;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int numOfCollapsedLogsWarning;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int numOfCollapsedLogsError;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool showClearOnNewSceneLoadedButton;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool showTimeButton;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool showSceneButton;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	private bool showMemButton;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool showFpsButton;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool showSearchText;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string buildDate;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string logDate;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float logsMemUsage;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float graphMemUsage;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float gcTotalMemory;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string UserData;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float fps;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string fpsText;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ReportView currentView;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool created;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Images images;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GUIContent clearContent;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GUIContent collapseContent;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GUIContent clearOnNewSceneContent;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GUIContent showTimeContent;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GUIContent showSceneContent;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GUIContent userContent;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GUIContent showMemoryContent;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GUIContent softwareContent;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GUIContent dateContent;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GUIContent showFpsContent;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GUIContent infoContent;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GUIContent searchContent;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GUIContent closeContent;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GUIContent buildFromContent;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GUIContent systemInfoContent;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GUIContent graphicsInfoContent;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GUIContent backContent;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private GUIContent logContent;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GUIContent warningContent;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GUIContent errorContent;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GUIStyle barStyle;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GUIStyle buttonActiveStyle;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GUIStyle nonStyle;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GUIStyle lowerLeftFontStyle;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private GUIStyle backStyle;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private GUIStyle evenLogStyle;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GUIStyle oddLogStyle;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private GUIStyle logButtonStyle;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private GUIStyle selectedLogStyle;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private GUIStyle selectedLogFontStyle;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private GUIStyle stackLabelStyle;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private GUIStyle scrollerStyle;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private GUIStyle searchStyle;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private GUIStyle sliderBackStyle;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private GUIStyle sliderThumbStyle;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private GUISkin toolbarScrollerSkin;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private GUISkin logScrollerSkin;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private GUISkin graphScrollerSkin;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Vector2 size;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float maxSize;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int numOfCircleToShow;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string[] scenes;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private string currentScene;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private string filterText;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private string deviceModel;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private string deviceType;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private string deviceName;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private string graphicsMemorySize;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private string maxTextureSize;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private string systemMemorySize;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public bool Initialized;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private Rect screenRect;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private Rect toolBarRect;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private Rect logsRect;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private Rect stackRect;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private Rect graphRect;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private Rect graphMinRect;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private Rect graphMaxRect;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private Rect buttomRect;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private Vector2 stackRectTopLeft;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private Rect detailRect;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private Vector2 scrollPosition;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private Vector2 scrollPosition2;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private Vector2 toolbarScrollPosition;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private Log selectedLog;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private float toolbarOldDrag;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private float oldDrag;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private float oldDrag2;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private float oldDrag3;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private int startIndex;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private Rect countRect;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	private Rect timeRect;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private Rect timeLabelRect;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private Rect sceneRect;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	private Rect sceneLabelRect;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	private Rect memoryRect;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	private Rect memoryLabelRect;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	private Rect fpsRect;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	private Rect fpsLabelRect;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private GUIContent tempContent;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private Vector2 infoScrollPosition;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private Vector2 oldInfoDrag;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private Rect tempRect;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private float graphSize;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	private int startFrame;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private int currentFrame;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	private Vector3 tempVector1;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private Vector3 tempVector2;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
	private Vector2 graphScrollerPos;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
	private float maxFpsValue;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	private float minFpsValue;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
	private float maxMemoryValue;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	private float minMemoryValue;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private List<Vector2> gestureDetector;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	private Vector2 gestureSum;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	private float gestureLength;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
	private int gestureCount;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	private float lastClickTime;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
	private Vector2 startPos;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
	private Vector2 downPos;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
	private Vector2 mousePosition;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
	private int frames;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	private bool firstTime;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
	private float lastUpdate;

	[Token(Token = "0x40001AB")]
	private const int requiredFrames = 10;

	[Token(Token = "0x40001AC")]
	private const float updateInterval = 0.25f;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	private List<Log> threadedLogs;

	[Token(Token = "0x17000031")]
	public float TotalMemUsage
	{
		[Token(Token = "0x600010F")]
		[Address(RVA = "0x94AE78", Offset = "0x94AE78", VA = "0x94AE78")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x94AE84", Offset = "0x94AE84", VA = "0x94AE84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x94B980", Offset = "0x94B980", VA = "0x94B980")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x94BAD0", Offset = "0x94BAD0", VA = "0x94BAD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x94BAD4", Offset = "0x94BAD4", VA = "0x94BAD4")]
	private void addSample()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x94AE94", Offset = "0x94AE94", VA = "0x94AE94")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x94BBFC", Offset = "0x94BBFC", VA = "0x94BBFC")]
	private void initializeStyle()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x94C990", Offset = "0x94C990", VA = "0x94C990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x94B9E4", Offset = "0x94B9E4", VA = "0x94B9E4")]
	private void clear()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x94CA30", Offset = "0x94CA30", VA = "0x94CA30")]
	private void calculateCurrentLog()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x94CD18", Offset = "0x94CD18", VA = "0x94CD18")]
	private void DrawInfo()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x94EE90", Offset = "0x94EE90", VA = "0x94EE90")]
	private void drawInfo_enableDisableToolBarButtons()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x94F870", Offset = "0x94F870", VA = "0x94F870")]
	private void DrawReport()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x94FD58", Offset = "0x94FD58", VA = "0x94FD58")]
	private void drawToolBar()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x951380", Offset = "0x951380", VA = "0x951380")]
	private void DrawLogs()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x952554", Offset = "0x952554", VA = "0x952554")]
	private void drawGraph()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x9537A0", Offset = "0x9537A0", VA = "0x9537A0")]
	private void drawStack()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x95434C", Offset = "0x95434C", VA = "0x95434C")]
	public void OnGUIDraw()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x9546A0", Offset = "0x9546A0", VA = "0x9546A0")]
	private bool isGestureDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x954BE0", Offset = "0x954BE0", VA = "0x954BE0")]
	private bool isDoubleClickDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x954574", Offset = "0x954574", VA = "0x954574")]
	private Vector2 getDownPos()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x94ECF0", Offset = "0x94ECF0", VA = "0x94ECF0")]
	private Vector2 getDrag()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x954CF0", Offset = "0x954CF0", VA = "0x954CF0")]
	private void calculateStartIndex()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x94C858", Offset = "0x94C858", VA = "0x94C858")]
	private void doShow()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x954D94", Offset = "0x954D94", VA = "0x954D94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x955708", Offset = "0x955708", VA = "0x955708")]
	private void CaptureLog(string condition, string stacktrace, LogType type)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x95511C", Offset = "0x95511C", VA = "0x95511C")]
	private void AddLog(string condition, string stacktrace, LogType type)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x955758", Offset = "0x955758", VA = "0x955758")]
	private void CaptureLogThread(string condition, string stacktrace, LogType type)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x95586C", Offset = "0x95586C", VA = "0x95586C")]
	private void OnLevelWasLoaded()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x955978", Offset = "0x955978", VA = "0x955978")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x955B9C", Offset = "0x955B9C", VA = "0x955B9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71D258", Offset = "0x71D258")]
	private IEnumerator readInfo()
	{
		return null;
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x955C38", Offset = "0x955C38", VA = "0x955C38")]
	public Reporter()
	{
	}
}
[Token(Token = "0x2000032")]
public class ReporterGUI : MonoBehaviour
{
	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Reporter reporter;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x956178", Offset = "0x956178", VA = "0x956178")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x9561E0", Offset = "0x9561E0", VA = "0x9561E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x9561F8", Offset = "0x9561F8", VA = "0x9561F8")]
	public ReporterGUI()
	{
	}
}
[Token(Token = "0x2000033")]
public class ReporterMessageReceiver : MonoBehaviour
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Reporter reporter;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x956200", Offset = "0x956200", VA = "0x956200")]
	private void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x956268", Offset = "0x956268", VA = "0x956268")]
	private void OnPreStart()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x956370", Offset = "0x956370", VA = "0x956370")]
	private void OnHideReporter()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x956374", Offset = "0x956374", VA = "0x956374")]
	private void OnShowReporter()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x956378", Offset = "0x956378", VA = "0x956378")]
	private void OnLog(Reporter.Log log)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x95637C", Offset = "0x95637C", VA = "0x95637C")]
	public ReporterMessageReceiver()
	{
	}
}
[Token(Token = "0x2000034")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 angle;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x95773C", Offset = "0x95773C", VA = "0x95773C")]
	private void Start()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x957778", Offset = "0x957778", VA = "0x957778")]
	private void Update()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x9577DC", Offset = "0x9577DC", VA = "0x9577DC")]
	public Rotate()
	{
	}
}
[Token(Token = "0x2000035")]
public class TestReporter : MonoBehaviour
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int logTestCount;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int threadLogTestCount;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool logEverySecond;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentLogTestCount;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Reporter reporter;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GUIStyle style;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rect rect1;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rect rect2;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rect rect3;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rect rect4;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Rect rect5;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Rect rect6;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Thread thread;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float elapsed;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x8F8E50", Offset = "0x8F8E50", VA = "0x8F8E50")]
	private void Start()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x8F9358", Offset = "0x8F9358", VA = "0x8F9358")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x8F9374", Offset = "0x8F9374", VA = "0x8F9374")]
	private void threadLogTest()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x8F9440", Offset = "0x8F9440", VA = "0x8F9440")]
	private void Update()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x8F9610", Offset = "0x8F9610", VA = "0x8F9610")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x8F990C", Offset = "0x8F990C", VA = "0x8F990C")]
	public TestReporter()
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712A5C", Offset = "0x712A5C")]
public class GvrReticlePointer : GvrBasePointer
{
	[Token(Token = "0x40001BF")]
	public const float RETICLE_MIN_INNER_ANGLE = 0f;

	[Token(Token = "0x40001C0")]
	public const float RETICLE_MIN_OUTER_ANGLE = 0.5f;

	[Token(Token = "0x40001C1")]
	public const float RETICLE_GROWTH_ANGLE = 0f;

	[Token(Token = "0x40001C2")]
	public const float RETICLE_DISTANCE_MIN = 0.45f;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxReticleDistance;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int reticleSegments;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float reticleGrowthSpeed;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7163AC", Offset = "0x7163AC")]
	public int reticleSortingOrder;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7163CC", Offset = "0x7163CC")]
	private Material <MaterialComp>k__BackingField;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7163DC", Offset = "0x7163DC")]
	private float <ReticleInnerAngle>k__BackingField;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7163EC", Offset = "0x7163EC")]
	private float <ReticleOuterAngle>k__BackingField;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7163FC", Offset = "0x7163FC")]
	private float <ReticleDistanceInMeters>k__BackingField;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71640C", Offset = "0x71640C")]
	private float <ReticleInnerDiameter>k__BackingField;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71641C", Offset = "0x71641C")]
	private float <ReticleOuterDiameter>k__BackingField;

	[Token(Token = "0x17000032")]
	public Material MaterialComp
	{
		[Token(Token = "0x6000142")]
		[Address(RVA = "0xD9F1BC", Offset = "0xD9F1BC", VA = "0xD9F1BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D2BC", Offset = "0x71D2BC")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000143")]
		[Address(RVA = "0xD9F1C4", Offset = "0xD9F1C4", VA = "0xD9F1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D2CC", Offset = "0x71D2CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public float ReticleInnerAngle
	{
		[Token(Token = "0x6000144")]
		[Address(RVA = "0xD9F1CC", Offset = "0xD9F1CC", VA = "0xD9F1CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D2DC", Offset = "0x71D2DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000145")]
		[Address(RVA = "0xD9F1D4", Offset = "0xD9F1D4", VA = "0xD9F1D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D2EC", Offset = "0x71D2EC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public float ReticleOuterAngle
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0xD9F1DC", Offset = "0xD9F1DC", VA = "0xD9F1DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D2FC", Offset = "0x71D2FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000147")]
		[Address(RVA = "0xD9F1E4", Offset = "0xD9F1E4", VA = "0xD9F1E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D30C", Offset = "0x71D30C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public float ReticleDistanceInMeters
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0xD9F1EC", Offset = "0xD9F1EC", VA = "0xD9F1EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D31C", Offset = "0x71D31C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000149")]
		[Address(RVA = "0xD9F1F4", Offset = "0xD9F1F4", VA = "0xD9F1F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D32C", Offset = "0x71D32C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public float ReticleInnerDiameter
	{
		[Token(Token = "0x600014A")]
		[Address(RVA = "0xD9F1FC", Offset = "0xD9F1FC", VA = "0xD9F1FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D33C", Offset = "0x71D33C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600014B")]
		[Address(RVA = "0xD9F204", Offset = "0xD9F204", VA = "0xD9F204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D34C", Offset = "0x71D34C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public float ReticleOuterDiameter
	{
		[Token(Token = "0x600014C")]
		[Address(RVA = "0xD9F20C", Offset = "0xD9F20C", VA = "0xD9F20C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D35C", Offset = "0x71D35C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600014D")]
		[Address(RVA = "0xD9F214", Offset = "0xD9F214", VA = "0xD9F214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D36C", Offset = "0x71D36C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public override float MaxPointerDistance
	{
		[Token(Token = "0x600014E")]
		[Address(RVA = "0xD9F21C", Offset = "0xD9F21C", VA = "0xD9F21C", Slot = "16")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xD9F224", Offset = "0xD9F224", VA = "0xD9F224", Slot = "17")]
	public override void OnPointerEnter(RaycastResult raycastResultResult, bool isInteractive)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xD9F398", Offset = "0xD9F398", VA = "0xD9F398", Slot = "18")]
	public override void OnPointerHover(RaycastResult raycastResultResult, bool isInteractive)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xD9F3A8", Offset = "0xD9F3A8", VA = "0xD9F3A8", Slot = "19")]
	public override void OnPointerExit(GameObject previousObject)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xD9F3C0", Offset = "0xD9F3C0", VA = "0xD9F3C0", Slot = "20")]
	public override void OnPointerClickDown()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xD9F3C4", Offset = "0xD9F3C4", VA = "0xD9F3C4", Slot = "21")]
	public override void OnPointerClickUp()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xD9F3C8", Offset = "0xD9F3C8", VA = "0xD9F3C8", Slot = "22")]
	public override void GetPointerRadius(out float enterRadius, out float exitRadius)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xD9F43C", Offset = "0xD9F43C", VA = "0xD9F43C")]
	public void UpdateDiameters()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xD9F604", Offset = "0xD9F604", VA = "0xD9F604", Slot = "23")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xD9F9C0", Offset = "0xD9F9C0", VA = "0xD9F9C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xD9F9D0", Offset = "0xD9F9D0", VA = "0xD9F9D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xD9F234", Offset = "0xD9F234", VA = "0xD9F234")]
	private bool SetPointerTarget(Vector3 target, bool interactive)
	{
		return default(bool);
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xD9F690", Offset = "0xD9F690", VA = "0xD9F690")]
	private void CreateReticleVertices()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xD9F9D4", Offset = "0xD9F9D4", VA = "0xD9F9D4")]
	public GvrReticlePointer()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712A94", Offset = "0x712A94")]
public class GvrArmModel : GvrBaseArmModel, IGvrControllerInputDeviceReceiver
{
	[Token(Token = "0x40001CD")]
	public const float DEFAULT_ELBOW_BEND_RATIO = 0.6f;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector3 DEFAULT_ELBOW_REST_POSITION;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Vector3 DEFAULT_WRIST_REST_POSITION;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector3 DEFAULT_CONTROLLER_REST_POSITION;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static readonly Vector3 DEFAULT_ARM_EXTENSION_OFFSET;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 elbowRestPosition;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 wristRestPosition;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 controllerRestPosition;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 armExtensionOffset;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71642C", Offset = "0x71642C")]
	public float elbowBendRatio;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x716444", Offset = "0x716444")]
	public float fadeControllerOffset;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x716460", Offset = "0x716460")]
	public float fadeDistanceFromHeadForward;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71647C", Offset = "0x71647C")]
	public float fadeDistanceFromHeadSide;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x716498", Offset = "0x716498")]
	public float tooltipMinDistanceFromFace;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7164B8", Offset = "0x7164B8")]
	public int tooltipMaxAngleFromCamera;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isLockedToNeck;

	[Token(Token = "0x40001DD")]
	protected const float EXTENSION_WEIGHT = 0.4f;

	[Token(Token = "0x40001DE")]
	protected const float DELTA_ALPHA = 4f;

	[Token(Token = "0x40001DF")]
	protected const float MIN_EXTENSION_ANGLE = 7f;

	[Token(Token = "0x40001E0")]
	protected const float MAX_EXTENSION_ANGLE = 60f;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static readonly Vector3 SHOULDER_POSITION;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected static readonly Vector3 NECK_OFFSET;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Vector3 neckPosition;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 elbowPosition;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Quaternion elbowRotation;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 wristPosition;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Quaternion wristRotation;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 controllerPosition;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected Quaternion controllerRotation;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected float preferredAlpha;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected float tooltipAlphaValue;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected Vector3 handedMultiplier;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Vector3 torsoDirection;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected Quaternion torsoRotation;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7164D4", Offset = "0x7164D4")]
	private GvrControllerInputDevice <ControllerInputDevice>k__BackingField;

	[Token(Token = "0x17000039")]
	public override Vector3 ControllerPositionFromHead
	{
		[Token(Token = "0x600015C")]
		[Address(RVA = "0xB07B4C", Offset = "0xB07B4C", VA = "0xB07B4C", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700003A")]
	public override Quaternion ControllerRotationFromHead
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0xB07B58", Offset = "0xB07B58", VA = "0xB07B58", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700003B")]
	public override float PreferredAlpha
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0xB07B64", Offset = "0xB07B64", VA = "0xB07B64", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700003C")]
	public override float TooltipAlphaValue
	{
		[Token(Token = "0x600015F")]
		[Address(RVA = "0xB07B6C", Offset = "0xB07B6C", VA = "0xB07B6C", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700003D")]
	public Vector3 NeckPosition
	{
		[Token(Token = "0x6000160")]
		[Address(RVA = "0xB07B74", Offset = "0xB07B74", VA = "0xB07B74")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700003E")]
	public Vector3 ShoulderPosition
	{
		[Token(Token = "0x6000161")]
		[Address(RVA = "0xB07B80", Offset = "0xB07B80", VA = "0xB07B80")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700003F")]
	public Quaternion ShoulderRotation
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0xB07CEC", Offset = "0xB07CEC", VA = "0xB07CEC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000040")]
	public Vector3 ElbowPosition
	{
		[Token(Token = "0x6000163")]
		[Address(RVA = "0xB07CF8", Offset = "0xB07CF8", VA = "0xB07CF8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000041")]
	public Quaternion ElbowRotation
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0xB07D04", Offset = "0xB07D04", VA = "0xB07D04")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000042")]
	public Vector3 WristPosition
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0xB07D10", Offset = "0xB07D10", VA = "0xB07D10")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000043")]
	public Quaternion WristRotation
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0xB07D1C", Offset = "0xB07D1C", VA = "0xB07D1C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000044")]
	public GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x6000167")]
		[Address(RVA = "0xB07D28", Offset = "0xB07D28", VA = "0xB07D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D37C", Offset = "0x71D37C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000168")]
		[Address(RVA = "0xB07D30", Offset = "0xB07D30", VA = "0xB07D30", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D38C", Offset = "0x71D38C")]
		set
		{
		}
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xB07D38", Offset = "0xB07D38", VA = "0xB07D38", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xB07EE4", Offset = "0xB07EE4", VA = "0xB07EE4", Slot = "10")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xB08068", Offset = "0xB08068", VA = "0xB08068", Slot = "11")]
	protected virtual void OnControllerInputUpdated()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xB080E0", Offset = "0xB080E0", VA = "0xB080E0", Slot = "12")]
	protected virtual void UpdateHandedness()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xB081A8", Offset = "0xB081A8", VA = "0xB081A8", Slot = "13")]
	protected virtual void UpdateTorsoDirection(bool forceImmediate)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xB08424", Offset = "0xB08424", VA = "0xB08424", Slot = "14")]
	protected virtual void UpdateNeckPosition()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xB084C4", Offset = "0xB084C4", VA = "0xB084C4", Slot = "15")]
	protected virtual void ApplyArmModel()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xB087B0", Offset = "0xB087B0", VA = "0xB087B0", Slot = "16")]
	protected virtual void SetUntransformedJointPositions()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xB088B8", Offset = "0xB088B8", VA = "0xB088B8", Slot = "17")]
	protected virtual float CalculateExtensionRatio(float xAngle)
	{
		return default(float);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xB08940", Offset = "0xB08940", VA = "0xB08940", Slot = "18")]
	protected virtual void ApplyExtensionOffset(float extensionRatio)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xB08A30", Offset = "0xB08A30", VA = "0xB08A30", Slot = "19")]
	protected virtual Quaternion CalculateLerpRotation(Quaternion xyRotation, float extensionRatio)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xB08B78", Offset = "0xB08B78", VA = "0xB08B78", Slot = "20")]
	protected virtual void CalculateFinalJointRotations(Quaternion controllerOrientation, Quaternion xyRotation, Quaternion lerpRotation)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xB08CC8", Offset = "0xB08CC8", VA = "0xB08CC8", Slot = "21")]
	protected virtual void ApplyRotationToJoints()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xB08E7C", Offset = "0xB08E7C", VA = "0xB08E7C", Slot = "22")]
	protected virtual Vector3 ApplyInverseNeckModel(Vector3 headPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xB09008", Offset = "0xB09008", VA = "0xB09008", Slot = "23")]
	protected virtual void UpdateTransparency()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xB085E8", Offset = "0xB085E8", VA = "0xB085E8")]
	protected void GetControllerRotation(out Quaternion rotation, out Quaternion xyRotation, out float xAngle)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xB09474", Offset = "0xB09474", VA = "0xB09474")]
	public GvrArmModel()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712ACC", Offset = "0x712ACC")]
public abstract class GvrBaseArmModel : MonoBehaviour
{
	[Token(Token = "0x17000045")]
	public abstract Vector3 ControllerPositionFromHead
	{
		[Token(Token = "0x600017B")]
		get;
	}

	[Token(Token = "0x17000046")]
	public abstract Quaternion ControllerRotationFromHead
	{
		[Token(Token = "0x600017C")]
		get;
	}

	[Token(Token = "0x17000047")]
	public abstract float PreferredAlpha
	{
		[Token(Token = "0x600017D")]
		get;
	}

	[Token(Token = "0x17000048")]
	public abstract float TooltipAlphaValue
	{
		[Token(Token = "0x600017E")]
		get;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xB09554", Offset = "0xB09554", VA = "0xB09554")]
	protected GvrBaseArmModel()
	{
	}
}
[Token(Token = "0x2000039")]
public interface IGvrArmModelReceiver
{
	[Token(Token = "0x17000049")]
	GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000180")]
		get;
		[Token(Token = "0x6000181")]
		set;
	}
}
[Token(Token = "0x200003A")]
public enum GvrConnectionState
{
	[Token(Token = "0x40001F1")]
	Error = -1,
	[Token(Token = "0x40001F2")]
	Disconnected,
	[Token(Token = "0x40001F3")]
	Scanning,
	[Token(Token = "0x40001F4")]
	Connecting,
	[Token(Token = "0x40001F5")]
	Connected
}
[Token(Token = "0x200003B")]
public enum GvrControllerApiStatus
{
	[Token(Token = "0x40001F7")]
	Error = -1,
	[Token(Token = "0x40001F8")]
	Ok,
	[Token(Token = "0x40001F9")]
	Unsupported,
	[Token(Token = "0x40001FA")]
	NotAuthorized,
	[Token(Token = "0x40001FB")]
	Unavailable,
	[Token(Token = "0x40001FC")]
	ApiServiceObsolete,
	[Token(Token = "0x40001FD")]
	ApiClientObsolete,
	[Token(Token = "0x40001FE")]
	ApiMalfunction
}
[Token(Token = "0x200003C")]
public enum GvrControllerBatteryLevel
{
	[Token(Token = "0x4000200")]
	Error = -1,
	[Token(Token = "0x4000201")]
	Unknown,
	[Token(Token = "0x4000202")]
	CriticalLow,
	[Token(Token = "0x4000203")]
	Low,
	[Token(Token = "0x4000204")]
	Medium,
	[Token(Token = "0x4000205")]
	AlmostFull,
	[Token(Token = "0x4000206")]
	Full
}
[Token(Token = "0x200003D")]
public enum GvrControllerButton
{
	[Token(Token = "0x4000208")]
	TouchPadButton = 2,
	[Token(Token = "0x4000209")]
	TouchPadTouch = int.MinValue,
	[Token(Token = "0x400020A")]
	App = 8,
	[Token(Token = "0x400020B")]
	System = 4,
	[Token(Token = "0x400020C")]
	Trigger = 64,
	[Token(Token = "0x400020D")]
	Grip = 128,
	[Token(Token = "0x400020E")]
	Reserved2 = 256
}
[Token(Token = "0x200003E")]
public enum GvrControllerHand
{
	[Token(Token = "0x4000210")]
	Right,
	[Token(Token = "0x4000211")]
	Left,
	[Token(Token = "0x4000212")]
	Dominant,
	[Token(Token = "0x4000213")]
	NonDominant
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712B04", Offset = "0x712B04")]
public class GvrControllerInput : MonoBehaviour
{
	[Token(Token = "0x2000465")]
	public delegate void OnStateChangedEvent(GvrConnectionState state, GvrConnectionState oldState);

	[Token(Token = "0x2000466")]
	public enum EmulatorConnectionMode
	{
		[Token(Token = "0x4001BB9")]
		OFF,
		[Token(Token = "0x4001BBA")]
		USB,
		[Token(Token = "0x4001BBB")]
		WIFI
	}

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EmulatorConnectionMode emulatorConnectionMode;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrControllerInputDevice[] instances;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IControllerProvider controllerProvider;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static GvrSettings.UserPrefsHandedness handedness;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Action onDevicesChangedInternal;

	[Token(Token = "0x1700004A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724624", Offset = "0x724624")]
	public static GvrConnectionState State
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0xB0AF8C", Offset = "0xB0AF8C", VA = "0xB0AF8C")]
		get
		{
			return default(GvrConnectionState);
		}
	}

	[Token(Token = "0x1700004B")]
	public static GvrControllerApiStatus ApiStatus
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0xB0B054", Offset = "0xB0B054", VA = "0xB0B054")]
		get
		{
			return default(GvrControllerApiStatus);
		}
	}

	[Token(Token = "0x1700004C")]
	public static bool SupportsBatteryStatus
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0xB0B14C", Offset = "0xB0B14C", VA = "0xB0B14C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x72465C", Offset = "0x72465C")]
	public static Quaternion Orientation
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0xB0B254", Offset = "0xB0B254", VA = "0xB0B254")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700004E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724694", Offset = "0x724694")]
	public static Vector3 Gyro
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xB0B33C", Offset = "0xB0B33C", VA = "0xB0B33C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7246CC", Offset = "0x7246CC")]
	public static Vector3 Accel
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0xB0B424", Offset = "0xB0B424", VA = "0xB0B424")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000050")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724704", Offset = "0x724704")]
	public static bool IsTouching
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0xB0B540", Offset = "0xB0B540", VA = "0xB0B540")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000051")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x72473C", Offset = "0x72473C")]
	public static bool TouchDown
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0xB0B60C", Offset = "0xB0B60C", VA = "0xB0B60C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000052")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724774", Offset = "0x724774")]
	public static bool TouchUp
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0xB0B6D8", Offset = "0xB0B6D8", VA = "0xB0B6D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000053")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7247AC", Offset = "0x7247AC")]
	public static Vector2 TouchPos
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xB0B7A4", Offset = "0xB0B7A4", VA = "0xB0B7A4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000054")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7247E4", Offset = "0x7247E4")]
	public static Vector2 TouchPosCentered
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0xB0B8A0", Offset = "0xB0B8A0", VA = "0xB0B8A0")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000055")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x72481C", Offset = "0x72481C")]
	public static bool Recentering
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0xB0B990", Offset = "0xB0B990", VA = "0xB0B990")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000056")]
	public static bool Recentered
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xB0B998", Offset = "0xB0B998", VA = "0xB0B998")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724854", Offset = "0x724854")]
	public static bool ClickButton
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0xB0BA60", Offset = "0xB0BA60", VA = "0xB0BA60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000058")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x72488C", Offset = "0x72488C")]
	public static bool ClickButtonDown
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0xB0BB2C", Offset = "0xB0BB2C", VA = "0xB0BB2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000059")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7248C4", Offset = "0x7248C4")]
	public static bool ClickButtonUp
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0xB0BBF8", Offset = "0xB0BBF8", VA = "0xB0BBF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7248FC", Offset = "0x7248FC")]
	public static bool AppButton
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0xB0BCC4", Offset = "0xB0BCC4", VA = "0xB0BCC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724934", Offset = "0x724934")]
	public static bool AppButtonDown
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0xB0BD90", Offset = "0xB0BD90", VA = "0xB0BD90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x72496C", Offset = "0x72496C")]
	public static bool AppButtonUp
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0xB0BE5C", Offset = "0xB0BE5C", VA = "0xB0BE5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7249A4", Offset = "0x7249A4")]
	public static bool HomeButtonDown
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0xB0BF28", Offset = "0xB0BF28", VA = "0xB0BF28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7249DC", Offset = "0x7249DC")]
	public static bool HomeButtonState
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0xB0BFF4", Offset = "0xB0BFF4", VA = "0xB0BFF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724A14", Offset = "0x724A14")]
	public static string ErrorDetails
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0xB0C0C0", Offset = "0xB0C0C0", VA = "0xB0C0C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724A4C", Offset = "0x724A4C")]
	public static IntPtr StatePtr
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xB0C200", Offset = "0xB0C200", VA = "0xB0C200")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000061")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724A84", Offset = "0x724A84")]
	public static bool IsCharging
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xB0C2F8", Offset = "0xB0C2F8", VA = "0xB0C2F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000062")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724ABC", Offset = "0x724ABC")]
	public static GvrControllerBatteryLevel BatteryLevel
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xB0C3F0", Offset = "0xB0C3F0", VA = "0xB0C3F0")]
		get
		{
			return default(GvrControllerBatteryLevel);
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action OnControllerInputUpdated
	{
		[Token(Token = "0x6000182")]
		[Address(RVA = "0xB07DF4", Offset = "0xB07DF4", VA = "0xB07DF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D39C", Offset = "0x71D39C")]
		add
		{
		}
		[Token(Token = "0x6000183")]
		[Address(RVA = "0xB07F78", Offset = "0xB07F78", VA = "0xB07F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D3AC", Offset = "0x71D3AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action OnPostControllerInputUpdated
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0xB0A914", Offset = "0xB0A914", VA = "0xB0A914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D3BC", Offset = "0x71D3BC")]
		add
		{
		}
		[Token(Token = "0x6000185")]
		[Address(RVA = "0xB0AA04", Offset = "0xB0AA04", VA = "0xB0AA04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D3CC", Offset = "0x71D3CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event Action OnDevicesChanged
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xB0AAF4", Offset = "0xB0AAF4", VA = "0xB0AAF4")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D3DC", Offset = "0x71D3DC")]
		add
		{
		}
		[Token(Token = "0x6000187")]
		[Address(RVA = "0xB0ABA8", Offset = "0xB0ABA8", VA = "0xB0ABA8")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D41C", Offset = "0x71D41C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7245DC", Offset = "0x7245DC")]
	public static event OnStateChangedEvent OnStateChanged
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0xB0AC4C", Offset = "0xB0AC4C", VA = "0xB0AC4C")]
		add
		{
		}
		[Token(Token = "0x6000189")]
		[Address(RVA = "0xB0ADEC", Offset = "0xB0ADEC", VA = "0xB0ADEC")]
		remove
		{
		}
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xB04388", Offset = "0xB04388", VA = "0xB04388")]
	public static GvrControllerInputDevice GetDevice(GvrControllerHand hand)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xB0C4E8", Offset = "0xB0C4E8", VA = "0xB0C4E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB0C830", Offset = "0xB0C830", VA = "0xB0C830")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB0CB4C", Offset = "0xB0CB4C", VA = "0xB0CB4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xB0CC90", Offset = "0xB0CC90", VA = "0xB0CC90")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xB0CE40", Offset = "0xB0CE40", VA = "0xB0CE40")]
	public GvrControllerInput()
	{
	}
}
[Token(Token = "0x2000040")]
public class GvrControllerInputDevice
{
	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IControllerProvider controllerProvider;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int controllerId;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ControllerState controllerState;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 touchPosCentered;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastUpdatedFrameCount;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool valid;

	[Token(Token = "0x17000063")]
	public bool IsDominantHand
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xB0D200", Offset = "0xB0D200", VA = "0xB0D200")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000064")]
	public bool IsRightHand
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xB0816C", Offset = "0xB0816C", VA = "0xB0816C")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D47C", Offset = "0x71D47C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000065")]
	public GvrConnectionState State
	{
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xB02E7C", Offset = "0xB02E7C", VA = "0xB02E7C")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D4B0", Offset = "0x71D4B0")]
		get
		{
			return default(GvrConnectionState);
		}
	}

	[Token(Token = "0x17000066")]
	public GvrControllerApiStatus ApiStatus
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xB0B11C", Offset = "0xB0B11C", VA = "0xB0B11C")]
		get
		{
			return default(GvrControllerApiStatus);
		}
	}

	[Token(Token = "0x17000067")]
	public Quaternion Orientation
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xB09440", Offset = "0xB09440", VA = "0xB09440")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000068")]
	public Vector3 Position
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xB0D210", Offset = "0xB0D210", VA = "0xB0D210")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000069")]
	public Vector3 Gyro
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xB083F0", Offset = "0xB083F0", VA = "0xB083F0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006A")]
	public Vector3 Accel
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xB0B50C", Offset = "0xB0B50C", VA = "0xB0B50C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006B")]
	public Vector2 TouchPos
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xB02EE8", Offset = "0xB02EE8", VA = "0xB02EE8")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700006C")]
	public bool Recentered
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xB083C0", Offset = "0xB083C0", VA = "0xB083C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006D")]
	public GvrControllerButton Buttons
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xB0D244", Offset = "0xB0D244", VA = "0xB0D244")]
		get
		{
			return default(GvrControllerButton);
		}
	}

	[Token(Token = "0x1700006E")]
	public GvrControllerButton ButtonsDown
	{
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xB0A3E4", Offset = "0xB0A3E4", VA = "0xB0A3E4")]
		get
		{
			return default(GvrControllerButton);
		}
	}

	[Token(Token = "0x1700006F")]
	public GvrControllerButton ButtonsUp
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xB0A400", Offset = "0xB0A400", VA = "0xB0A400")]
		get
		{
			return default(GvrControllerButton);
		}
	}

	[Token(Token = "0x17000070")]
	public string ErrorDetails
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xB0C190", Offset = "0xB0C190", VA = "0xB0C190")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000071")]
	public IntPtr StatePtr
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xB0C2C8", Offset = "0xB0C2C8", VA = "0xB0C2C8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000072")]
	public bool IsCharging
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xB0C3C0", Offset = "0xB0C3C0", VA = "0xB0C3C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000073")]
	public GvrControllerBatteryLevel BatteryLevel
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xB0C4B8", Offset = "0xB0C4B8", VA = "0xB0C4B8")]
		get
		{
			return default(GvrControllerBatteryLevel);
		}
	}

	[Token(Token = "0x17000074")]
	internal bool SupportsPositionalTracking
	{
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xB0A3C8", Offset = "0xB0A3C8", VA = "0xB0A3C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000005")]
	public event GvrControllerInput.OnStateChangedEvent OnStateChanged
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xB0AD48", Offset = "0xB0AD48", VA = "0xB0AD48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D45C", Offset = "0x71D45C")]
		add
		{
		}
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xB0AEE8", Offset = "0xB0AEE8", VA = "0xB0AEE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D46C", Offset = "0x71D46C")]
		remove
		{
		}
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xB0C774", Offset = "0xB0C774", VA = "0xB0C774")]
	internal GvrControllerInputDevice(IControllerProvider provider, int controller_id)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xB02EAC", Offset = "0xB02EAC", VA = "0xB02EAC")]
	public bool GetButton(GvrControllerButton buttons)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xB045D0", Offset = "0xB045D0", VA = "0xB045D0")]
	public bool GetButtonDown(GvrControllerButton buttons)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xB04720", Offset = "0xB04720", VA = "0xB04720")]
	public bool GetButtonUp(GvrControllerButton buttons)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xB0CC88", Offset = "0xB0CC88", VA = "0xB0CC88")]
	internal void Invalidate()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xB0C9AC", Offset = "0xB0C9AC", VA = "0xB0C9AC")]
	internal void Update()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xB0D260", Offset = "0xB0D260", VA = "0xB0D260")]
	private void UpdateTouchPosCentered()
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x712B3C", Offset = "0x712B3C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x712B3C", Offset = "0x712B3C")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712B3C", Offset = "0x712B3C")]
public class GvrControllerReticleVisual : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000467")]
	public struct FaceCameraData
	{
		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool alongXAxis;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool alongYAxis;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool alongZAxis;

		[Token(Token = "0x1700026F")]
		public bool IsAnyAxisOff
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x79DD10", Offset = "0x79DD10", VA = "0x79DD10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x79DCFC", Offset = "0x79DCFC", VA = "0x79DCFC")]
		public FaceCameraData(bool startEnabled)
		{
		}
	}

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716514", Offset = "0x716514")]
	public bool isSizeBasedOnCameraDistance;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71654C", Offset = "0x71654C")]
	public float sizeMeters;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716584", Offset = "0x716584")]
	public FaceCameraData doesReticleFaceCamera;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7165BC", Offset = "0x7165BC")]
	public int sortingOrder;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected MeshFilter meshFilter;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 preRenderLocalScale;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion preRenderLocalRotation;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7165DC", Offset = "0x7165DC")]
	private float <ReticleMeshSizeMeters>k__BackingField;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7165EC", Offset = "0x7165EC")]
	private float <ReticleMeshSizeRatio>k__BackingField;

	[Token(Token = "0x17000075")]
	public float ReticleMeshSizeMeters
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xB0D2D8", Offset = "0xB0D2D8", VA = "0xB0D2D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D4E4", Offset = "0x71D4E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xB0D2E0", Offset = "0xB0D2E0", VA = "0xB0D2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D4F4", Offset = "0x71D4F4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public float ReticleMeshSizeRatio
	{
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xB0D2E8", Offset = "0xB0D2E8", VA = "0xB0D2E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D504", Offset = "0x71D504")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xB0D2F0", Offset = "0xB0D2F0", VA = "0xB0D2F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D514", Offset = "0x71D514")]
		private set
		{
		}
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB0D2F8", Offset = "0xB0D2F8", VA = "0xB0D2F8")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D524", Offset = "0x71D524")]
	public void RefreshMesh()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xB0D470", Offset = "0xB0D470", VA = "0xB0D470", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB0D4E0", Offset = "0xB0D4E0", VA = "0xB0D4E0", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB0D4E4", Offset = "0xB0D4E4", VA = "0xB0D4E4", Slot = "6")]
	protected virtual void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB0D570", Offset = "0xB0D570", VA = "0xB0D570", Slot = "7")]
	protected virtual void OnRenderObject()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB0D5C8", Offset = "0xB0D5C8", VA = "0xB0D5C8", Slot = "8")]
	protected virtual void UpdateReticleSize(Camera camera)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB0D77C", Offset = "0xB0D77C", VA = "0xB0D77C", Slot = "9")]
	protected virtual void UpdateReticleOrientation(Camera camera)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB0D9E0", Offset = "0xB0D9E0", VA = "0xB0D9E0", Slot = "10")]
	protected virtual void OnValidate()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB0DA28", Offset = "0xB0DA28", VA = "0xB0DA28")]
	public GvrControllerReticleVisual()
	{
	}
}
[Token(Token = "0x2000042")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x712BEC", Offset = "0x712BEC")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712BEC", Offset = "0x712BEC")]
public class GvrControllerVisual : MonoBehaviour, IGvrArmModelReceiver, IGvrControllerInputDeviceReceiver
{
	[Serializable]
	[Token(Token = "0x2000468")]
	public struct ControllerDisplayState
	{
		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GvrControllerBatteryLevel batteryLevel;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool batteryCharging;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool clickButton;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool appButton;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool homeButton;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool touching;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 touchPos;
	}

	[Serializable]
	[Token(Token = "0x2000469")]
	public struct VisualAssets
	{
		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;
	}

	[Token(Token = "0x400022C")]
	public const float APP_BUTTON_ACTIVE_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x400022D")]
	public const float APP_BUTTON_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x400022E")]
	public const float SYSTEM_BUTTON_ACTIVE_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x400022F")]
	public const float SYSTEM_BUTTON_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x4000230")]
	public const float TOUCHPAD_CLICK_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x4000231")]
	public const float TOUCHPAD_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x4000232")]
	public const float TOUCHPAD_CLICK_SCALE_DURATION_SECONDS = 0.075f;

	[Token(Token = "0x4000233")]
	public const float TOUCHPAD_POINT_SCALE_DURATION_SECONDS = 0.15f;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7165FC", Offset = "0x7165FC")]
	public bool readControllerState;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ControllerDisplayState displayState;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x716634", Offset = "0x716634")]
	public float maximumAlpha;

	[Token(Token = "0x4000237")]
	private const float BATTERY_FULL = 0f;

	[Token(Token = "0x4000238")]
	private const float BATTERY_ALMOST_FULL = 0.125f;

	[Token(Token = "0x4000239")]
	private const float BATTERY_MEDIUM = 0.225f;

	[Token(Token = "0x400023A")]
	private const float BATTERY_LOW = 0.325f;

	[Token(Token = "0x400023B")]
	private const float BATTERY_CRITICAL = 0.425f;

	[Token(Token = "0x400023C")]
	private const float BATTERY_HIDDEN = 0.525f;

	[Token(Token = "0x400023D")]
	private const float IMMEDIATE_UPDATE_TIME = 10f;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly Color GVR_BATTERY_CRITICAL_COLOR;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly Color GVR_BATTERY_LOW_COLOR;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly Color GVR_BATTERY_MED_COLOR;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private readonly Color GVR_BATTERY_FULL_COLOR;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject[] attachmentPrefabs;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderer;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MeshFilter meshFilter;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int alphaId;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int touchId;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int touchPadId;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int appButtonId;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int systemButtonId;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int batteryColorId;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool wasTouching;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float touchTime;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector4 controllerShaderData;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector4 controllerShaderData2;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color currentBatteryColor;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Color touchPadColor;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Color appButtonColor;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Color systemButtonColor;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71668C", Offset = "0x71668C")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71669C", Offset = "0x71669C")]
	private GvrControllerInputDevice <ControllerInputDevice>k__BackingField;

	[Token(Token = "0x17000077")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xB0DDB4", Offset = "0xB0DDB4", VA = "0xB0DDB4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D568", Offset = "0x71D568")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xB0DDBC", Offset = "0xB0DDBC", VA = "0xB0DDBC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D578", Offset = "0x71D578")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xB0DDC4", Offset = "0xB0DDC4", VA = "0xB0DDC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D588", Offset = "0x71D588")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xB0DDCC", Offset = "0xB0DDCC", VA = "0xB0DDCC", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D598", Offset = "0x71D598")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public virtual float PreferredAlpha
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xB0DDD4", Offset = "0xB0DDD4", VA = "0xB0DDD4", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700007A")]
	public Color TouchPadColor
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xB0DE78", Offset = "0xB0DE78", VA = "0xB0DE78")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xB0DE84", Offset = "0xB0DE84", VA = "0xB0DE84")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public Color AppButtonColor
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xB0DEA8", Offset = "0xB0DEA8", VA = "0xB0DEA8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xB0DEB8", Offset = "0xB0DEB8", VA = "0xB0DEB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public Color SystemButtonColor
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xB0DEE0", Offset = "0xB0DEE0", VA = "0xB0DEE0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xB0DEF4", Offset = "0xB0DEF4", VA = "0xB0DEF4")]
		set
		{
		}
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xB0DF20", Offset = "0xB0DF20", VA = "0xB0DF20")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D5A8", Offset = "0x71D5A8")]
	public void SetControllerTexture(Texture newTexture)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xB0DF5C", Offset = "0xB0DF5C", VA = "0xB0DF5C", Slot = "8")]
	protected virtual VisualAssets GetVisualAssets()
	{
		return default(VisualAssets);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xB0DFAC", Offset = "0xB0DFAC", VA = "0xB0DFAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xB0E2DC", Offset = "0xB0E2DC", VA = "0xB0E2DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB0E36C", Offset = "0xB0E36C", VA = "0xB0E36C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB0E3FC", Offset = "0xB0E3FC", VA = "0xB0E3FC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xB0E838", Offset = "0xB0E838", VA = "0xB0E838")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xB0E1E0", Offset = "0xB0E1E0", VA = "0xB0E1E0")]
	private void CreateAttachments()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xB0DFD0", Offset = "0xB0DFD0", VA = "0xB0DFD0")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xB0E840", Offset = "0xB0E840", VA = "0xB0E840")]
	private void UpdateControllerState()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB0E440", Offset = "0xB0E440", VA = "0xB0E440")]
	private void OnVisualUpdate(bool updateImmediately = false)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB0E910", Offset = "0xB0E910", VA = "0xB0E910")]
	private void UpdateBatteryIndicator()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB0E9F0", Offset = "0xB0E9F0", VA = "0xB0E9F0")]
	public GvrControllerVisual()
	{
	}
}
[Token(Token = "0x2000043")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x712C74", Offset = "0x712C74")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712C74", Offset = "0x712C74")]
public class GvrLaserPointer : GvrBasePointer
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7166AC", Offset = "0x7166AC")]
	public float maxPointerDistance;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7166E4", Offset = "0x7166E4")]
	public float defaultReticleDistance;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71671C", Offset = "0x71671C")]
	public float overrideCameraRayIntersectionDistance;

	[Token(Token = "0x4000259")]
	private const float RETICLE_VISUAL_RATIO = 0.1f;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isHittingTarget;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716754", Offset = "0x716754")]
	private GvrLaserVisual <LaserVisual>k__BackingField;

	[Token(Token = "0x1700007D")]
	public GvrLaserVisual LaserVisual
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xD95984", Offset = "0xD95984", VA = "0xD95984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D5EC", Offset = "0x71D5EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xD9598C", Offset = "0xD9598C", VA = "0xD9598C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D5FC", Offset = "0x71D5FC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public override float MaxPointerDistance
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xD95994", Offset = "0xD95994", VA = "0xD95994", Slot = "16")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700007F")]
	public override float CameraRayIntersectionDistance
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xD9599C", Offset = "0xD9599C", VA = "0xD9599C", Slot = "15")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xD95A40", Offset = "0xD95A40", VA = "0xD95A40", Slot = "17")]
	public override void OnPointerEnter(RaycastResult raycastResult, bool isInteractive)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xD95A84", Offset = "0xD95A84", VA = "0xD95A84", Slot = "18")]
	public override void OnPointerHover(RaycastResult raycastResult, bool isInteractive)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xD95AC8", Offset = "0xD95AC8", VA = "0xD95AC8", Slot = "19")]
	public override void OnPointerExit(GameObject previousObject)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xD95AD0", Offset = "0xD95AD0", VA = "0xD95AD0", Slot = "20")]
	public override void OnPointerClickDown()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD95AD4", Offset = "0xD95AD4", VA = "0xD95AD4", Slot = "21")]
	public override void OnPointerClickUp()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD95AD8", Offset = "0xD95AD8", VA = "0xD95AD8", Slot = "22")]
	public override void GetPointerRadius(out float enterRadius, out float exitRadius)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xD95BE8", Offset = "0xD95BE8", VA = "0xD95BE8", Slot = "23")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xD95C94", Offset = "0xD95C94", VA = "0xD95C94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xD95CEC", Offset = "0xD95CEC", VA = "0xD95CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xD95D24", Offset = "0xD95D24", VA = "0xD95D24")]
	public GvrLaserPointer()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x712CFC", Offset = "0x712CFC")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712CFC", Offset = "0x712CFC")]
public class GvrLaserVisual : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x200046A")]
	public delegate Vector3 GetPointForDistanceDelegate(float distance);

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716764", Offset = "0x716764")]
	public GvrControllerReticleVisual reticle;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71679C", Offset = "0x71679C")]
	public Transform controller;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7167D4", Offset = "0x7167D4")]
	public Color laserColor;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71680C", Offset = "0x71680C")]
	public Color laserColorEnd;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716844", Offset = "0x716844")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x716844", Offset = "0x716844")]
	public float maxLaserDistance;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716898", Offset = "0x716898")]
	public float lerpSpeed;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7168D0", Offset = "0x7168D0")]
	public float lerpThreshold;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716908", Offset = "0x716908")]
	public bool shrinkLaser;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x716940", Offset = "0x716940")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716940", Offset = "0x716940")]
	public float shrunkScale;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x716994", Offset = "0x716994")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716994", Offset = "0x716994")]
	public float beginShrinkAngleDegrees;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7169E8", Offset = "0x7169E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7169E8", Offset = "0x7169E8")]
	public float endShrinkAngleDegrees;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float shrinkRatio;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float targetDistance;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected float currentDistance;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 currentPosition;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 currentLocalPosition;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Quaternion currentLocalRotation;

	[Token(Token = "0x400026D")]
	private const float LERP_CLAMP_THRESHOLD = 0.02f;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716A3C", Offset = "0x716A3C")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716A4C", Offset = "0x716A4C")]
	private LineRenderer <Laser>k__BackingField;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716A5C", Offset = "0x716A5C")]
	private GetPointForDistanceDelegate <GetPointForDistanceFunction>k__BackingField;

	[Token(Token = "0x17000080")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xD95D34", Offset = "0xD95D34", VA = "0xD95D34", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D60C", Offset = "0x71D60C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xD95D3C", Offset = "0xD95D3C", VA = "0xD95D3C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D61C", Offset = "0x71D61C")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public LineRenderer Laser
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xD95D44", Offset = "0xD95D44", VA = "0xD95D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D62C", Offset = "0x71D62C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xD95D4C", Offset = "0xD95D4C", VA = "0xD95D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D63C", Offset = "0x71D63C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public GetPointForDistanceDelegate GetPointForDistanceFunction
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xD95D54", Offset = "0xD95D54", VA = "0xD95D54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D64C", Offset = "0x71D64C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xD95D5C", Offset = "0xD95D5C", VA = "0xD95D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D65C", Offset = "0x71D65C")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public float CurrentDistance
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xD95D64", Offset = "0xD95D64", VA = "0xD95D64")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xD95D6C", Offset = "0xD95D6C", VA = "0xD95D6C", Slot = "6")]
	public virtual void SetDistance(float distance, bool immediate = false)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xD95D8C", Offset = "0xD95D8C", VA = "0xD95D8C", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xD95DE4", Offset = "0xD95DE4", VA = "0xD95DE4", Slot = "8")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xD95E4C", Offset = "0xD95E4C", VA = "0xD95E4C", Slot = "9")]
	protected virtual void UpdateCurrentPosition()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xD96308", Offset = "0xD96308", VA = "0xD96308", Slot = "10")]
	protected virtual void UpdateControllerOrientation()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xD963A4", Offset = "0xD963A4", VA = "0xD963A4", Slot = "11")]
	protected virtual void UpdateReticlePosition()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xD9644C", Offset = "0xD9644C", VA = "0xD9644C", Slot = "12")]
	protected virtual void UpdateLaserEndPoint()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xD96A4C", Offset = "0xD96A4C", VA = "0xD96A4C", Slot = "13")]
	protected virtual void UpdateLaserAlpha()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xD96C34", Offset = "0xD96C34", VA = "0xD96C34", Slot = "14")]
	protected virtual float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xD96C6C", Offset = "0xD96C6C", VA = "0xD96C6C")]
	public GvrLaserVisual()
	{
	}
}
[Token(Token = "0x2000045")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712D84", Offset = "0x712D84")]
public class GvrRecenterOnlyController : MonoBehaviour
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion lastAppliedYawCorrection;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion yawCorrection;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xD9EBA4", Offset = "0xD9EBA4", VA = "0xD9EBA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xD9EF38", Offset = "0xD9EF38", VA = "0xD9EF38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xD9ED4C", Offset = "0xD9ED4C", VA = "0xD9ED4C")]
	private void ApplyYawCorrection()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xD9EFAC", Offset = "0xD9EFAC", VA = "0xD9EFAC")]
	private void RemoveLastYawCorrection()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xD9EE58", Offset = "0xD9EE58", VA = "0xD9EE58")]
	private Quaternion GetYawCorrection()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xD9F134", Offset = "0xD9F134", VA = "0xD9F134")]
	public GvrRecenterOnlyController()
	{
	}
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712DBC", Offset = "0x712DBC")]
public class GvrTrackedController : MonoBehaviour
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716A6C", Offset = "0x716A6C")]
	private GvrBaseArmModel armModel;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GvrControllerInputDevice controllerInputDevice;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716AB8", Offset = "0x716AB8")]
	private bool isDeactivatedWhenDisconnected;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716B04", Offset = "0x716B04")]
	private GvrControllerHand controllerHand;

	[Token(Token = "0x17000084")]
	public GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xDA0D70", Offset = "0xDA0D70", VA = "0xDA0D70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	public GvrControllerHand ControllerHand
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xDA0D78", Offset = "0xDA0D78", VA = "0xDA0D78")]
		get
		{
			return default(GvrControllerHand);
		}
		[Token(Token = "0x6000211")]
		[Address(RVA = "0xDA0D80", Offset = "0xDA0D80", VA = "0xDA0D80")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0xDA0F00", Offset = "0xDA0F00", VA = "0xDA0F00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xDA0F08", Offset = "0xDA0F08", VA = "0xDA0F08")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public bool IsDeactivatedWhenDisconnected
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xDA1234", Offset = "0xDA1234", VA = "0xDA1234")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xDA123C", Offset = "0xDA123C", VA = "0xDA123C")]
		set
		{
		}
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xDA110C", Offset = "0xDA110C", VA = "0xDA110C")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D66C", Offset = "0x71D66C")]
	public void PropagateArmModel()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xDA1318", Offset = "0xDA1318", VA = "0xDA1318")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xDA13AC", Offset = "0xDA13AC", VA = "0xDA13AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xDA1654", Offset = "0xDA1654", VA = "0xDA1654")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xDA16E8", Offset = "0xDA16E8", VA = "0xDA16E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xDA1880", Offset = "0xDA1880", VA = "0xDA1880")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xDA1758", Offset = "0xDA1758", VA = "0xDA1758")]
	private void PropagateControllerInputDevice()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xDA0FAC", Offset = "0xDA0FAC", VA = "0xDA0FAC")]
	private void PropagateControllerInputDeviceToArmModel()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xDA0D98", Offset = "0xDA0D98", VA = "0xDA0D98")]
	private void SetupControllerInputDevice()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xDA197C", Offset = "0xDA197C", VA = "0xDA197C")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xDA12B8", Offset = "0xDA12B8", VA = "0xDA12B8")]
	private void OnControllerStateChanged(GvrConnectionState state, GvrConnectionState oldState)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xDA14DC", Offset = "0xDA14DC", VA = "0xDA14DC")]
	private void UpdatePose()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xDA1980", Offset = "0xDA1980", VA = "0xDA1980")]
	public GvrTrackedController()
	{
	}
}
[Token(Token = "0x2000047")]
public interface IGvrControllerInputDeviceReceiver
{
	[Token(Token = "0x17000088")]
	GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x6000223")]
		set;
	}
}
[Token(Token = "0x2000048")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712DF4", Offset = "0x712DF4")]
public class GvrControllerTooltipsSimple : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer tooltipRenderer;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int colorId;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716B50", Offset = "0x716B50")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x17000089")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xB0DA64", Offset = "0xB0DA64", VA = "0xB0DA64", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D6AC", Offset = "0x71D6AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xB0DA6C", Offset = "0xB0DA6C", VA = "0xB0DA6C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D6BC", Offset = "0x71D6BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xB0DA74", Offset = "0xB0DA74", VA = "0xB0DA74")]
	protected void OnVisualUpdate()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xB0DB74", Offset = "0xB0DB74", VA = "0xB0DB74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xB0DC48", Offset = "0xB0DC48", VA = "0xB0DC48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xB0DCD8", Offset = "0xB0DCD8", VA = "0xB0DCD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xB0DD68", Offset = "0xB0DD68", VA = "0xB0DD68")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xB0DB78", Offset = "0xB0DB78", VA = "0xB0DB78")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xB0DDA8", Offset = "0xB0DDA8", VA = "0xB0DDA8")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xB0DDAC", Offset = "0xB0DDAC", VA = "0xB0DDAC")]
	public GvrControllerTooltipsSimple()
	{
	}
}
[Token(Token = "0x2000049")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x712E40", Offset = "0x712E40")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x712E40", Offset = "0x712E40")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712E40", Offset = "0x712E40")]
public class GvrTooltip : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x200046B")]
	internal enum Location
	{
		[Token(Token = "0x4001BC9")]
		TouchPadOutside,
		[Token(Token = "0x4001BCA")]
		TouchPadInside,
		[Token(Token = "0x4001BCB")]
		AppButtonOutside,
		[Token(Token = "0x4001BCC")]
		AppButtonInside,
		[Token(Token = "0x4001BCD")]
		Custom
	}

	[Token(Token = "0x400027B")]
	protected const float TOUCH_PAD_Y_POSITION_METERS = 0.0385f;

	[Token(Token = "0x400027C")]
	protected const float APP_BUTTON_Y_POSITION_METERS = 0.0105f;

	[Token(Token = "0x400027D")]
	protected const float TOOLTIP_Z_POSITION_METERS = 0.0098f;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Quaternion RIGHT_SIDE_ROTATION;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static readonly Quaternion LEFT_SIDE_ROTATION;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static readonly Vector2 SQUARE_CENTER;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static readonly Vector2 PIVOT;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716B60", Offset = "0x716B60")]
	[SerializeField]
	private Location location;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716BAC", Offset = "0x716BAC")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716BF8", Offset = "0x716BF8")]
	[SerializeField]
	private bool alwaysVisible;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isOnLeft;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716C44", Offset = "0x716C44")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x1700008A")]
	public Text TooltipText
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xDA037C", Offset = "0xDA037C", VA = "0xDA037C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008B")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0xDA0384", Offset = "0xDA0384", VA = "0xDA0384", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D6CC", Offset = "0x71D6CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000230")]
		[Address(RVA = "0xDA038C", Offset = "0xDA038C", VA = "0xDA038C", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D6DC", Offset = "0x71D6DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xDA0394", Offset = "0xDA0394", VA = "0xDA0394")]
	public bool IsTooltipInside()
	{
		return default(bool);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xDA03C0", Offset = "0xDA03C0", VA = "0xDA03C0")]
	public bool IsTooltipOnLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xDA0408", Offset = "0xDA0408", VA = "0xDA0408", Slot = "6")]
	protected virtual void OnSideChanged(bool IsLocationOnLeft)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xDA05FC", Offset = "0xDA05FC", VA = "0xDA05FC")]
	protected float GetMetersToCanvasScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xDA06F0", Offset = "0xDA06F0", VA = "0xDA06F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xDA0888", Offset = "0xDA0888", VA = "0xDA0888")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xDA0934", Offset = "0xDA0934", VA = "0xDA0934")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xDA09C8", Offset = "0xDA09C8", VA = "0xDA09C8")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xDA0B44", Offset = "0xDA0B44", VA = "0xDA0B44")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xDA0BA0", Offset = "0xDA0BA0", VA = "0xDA0BA0")]
	private Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xDA0ACC", Offset = "0xDA0ACC", VA = "0xDA0ACC")]
	private void CheckTooltipSide()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xDA0798", Offset = "0xDA0798", VA = "0xDA0798")]
	private void RefreshTooltip()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xDA0C54", Offset = "0xDA0C54", VA = "0xDA0C54")]
	public GvrTooltip()
	{
	}
}
[Token(Token = "0x200004A")]
public abstract class GvrBasePointer : MonoBehaviour, IGvrControllerInputDeviceReceiver
{
	[Token(Token = "0x200046C")]
	public enum RaycastMode
	{
		[Token(Token = "0x4001BCF")]
		Camera,
		[Token(Token = "0x4001BD0")]
		Direct,
		[Token(Token = "0x4001BD1")]
		Hybrid
	}

	[Token(Token = "0x200046D")]
	public struct PointerRay
	{
		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Ray ray;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distanceFromStart;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float distance;
	}

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716C54", Offset = "0x716C54")]
	public RaycastMode raycastMode;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716C8C", Offset = "0x716C8C")]
	public Camera overridePointerCamera;

	[Token(Token = "0x400028B")]
	private const GvrControllerButton LEFT_BUTTON_MASK_3DOF = GvrControllerButton.TouchPadButton;

	[Token(Token = "0x400028C")]
	private const GvrControllerButton LEFT_BUTTON_MASK_6DOF = (GvrControllerButton)66;

	[Token(Token = "0x400028D")]
	private const GvrControllerButton RIGHT_BUTTON_MASK_6DOF = (GvrControllerButton)136;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GvrControllerButton triggerButton;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GvrControllerButton triggerButtonDown;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GvrControllerButton triggerButtonUp;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastUpdateFrame;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716CC4", Offset = "0x716CC4")]
	private bool <ShouldUseExitRadiusForRaycast>k__BackingField;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716CD4", Offset = "0x716CD4")]
	private GvrControllerInputDevice <ControllerInputDevice>k__BackingField;

	[Token(Token = "0x1700008C")]
	public RaycastResult CurrentRaycastResult
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0xAFC558", Offset = "0xAFC558", VA = "0xAFC558")]
		get
		{
			return default(RaycastResult);
		}
	}

	[Token(Token = "0x1700008D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724AF4", Offset = "0x724AF4")]
	public Vector3 PointerIntersection
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xB0972C", Offset = "0xB0972C", VA = "0xB0972C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700008E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x724B2C", Offset = "0x724B2C")]
	public bool IsPointerIntersecting
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xB09758", Offset = "0xB09758", VA = "0xB09758")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	public bool ShouldUseExitRadiusForRaycast
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xB097E0", Offset = "0xB097E0", VA = "0xB097E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D6EC", Offset = "0x71D6EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xB097E8", Offset = "0xB097E8", VA = "0xB097E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D6FC", Offset = "0x71D6FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public float CurrentPointerRadius
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xB097F4", Offset = "0xB097F4", VA = "0xB097F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000091")]
	public virtual Transform PointerTransform
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xB0984C", Offset = "0xB0984C", VA = "0xB0984C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000092")]
	public GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xB09854", Offset = "0xB09854", VA = "0xB09854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D70C", Offset = "0x71D70C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xB0985C", Offset = "0xB0985C", VA = "0xB0985C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D71C", Offset = "0x71D71C")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public virtual bool TriggerDown
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xB09864", Offset = "0xB09864", VA = "0xB09864", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000094")]
	public virtual bool Triggering
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xB09970", Offset = "0xB09970", VA = "0xB09970", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000095")]
	public virtual bool TriggerUp
	{
		[Token(Token = "0x600024A")]
		[Address(RVA = "0xB0999C", Offset = "0xB0999C", VA = "0xB0999C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000096")]
	public virtual bool TouchDown
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xB099C8", Offset = "0xB099C8", VA = "0xB099C8", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000097")]
	public virtual bool IsTouching
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xB099DC", Offset = "0xB099DC", VA = "0xB099DC", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000098")]
	public virtual bool TouchUp
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0xB099F0", Offset = "0xB099F0", VA = "0xB099F0", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000099")]
	public virtual Vector2 TouchPos
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xB09A04", Offset = "0xB09A04", VA = "0xB09A04", Slot = "12")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700009A")]
	public virtual Vector3 MaxPointerEndPoint
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xB09A98", Offset = "0xB09A98", VA = "0xB09A98", Slot = "13")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700009B")]
	public virtual bool IsAvailable
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xB09BFC", Offset = "0xB09BFC", VA = "0xB09BFC", Slot = "14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009C")]
	public virtual float CameraRayIntersectionDistance
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xB09CC4", Offset = "0xB09CC4", VA = "0xB09CC4", Slot = "15")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009D")]
	public Camera PointerCamera
	{
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xB09CD4", Offset = "0xB09CD4", VA = "0xB09CD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	public abstract float MaxPointerDistance
	{
		[Token(Token = "0x6000253")]
		get;
	}

	[Token(Token = "0x1700009F")]
	internal PointerEventData.InputButton InputButtonDown
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xB09D60", Offset = "0xB09D60", VA = "0xB09D60")]
		get
		{
			return default(PointerEventData.InputButton);
		}
	}

	[Token(Token = "0x170000A0")]
	internal GvrControllerButton ControllerButtonDown
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xB09D80", Offset = "0xB09D80", VA = "0xB09D80")]
		get
		{
			return default(GvrControllerButton);
		}
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xB09D88", Offset = "0xB09D88", VA = "0xB09D88")]
	public static PointerRay CalculateRay(GvrBasePointer pointer, RaycastMode mode)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xB0A220", Offset = "0xB0A220", VA = "0xB0A220")]
	public static PointerRay CalculateHybridRay(GvrBasePointer pointer, RaycastMode hybridMode)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x6000258")]
	public abstract void OnPointerEnter(RaycastResult raycastResult, bool isInteractive);

	[Token(Token = "0x6000259")]
	public abstract void OnPointerHover(RaycastResult raycastResultResult, bool isInteractive);

	[Token(Token = "0x600025A")]
	public abstract void OnPointerExit(GameObject previousObject);

	[Token(Token = "0x600025B")]
	public abstract void OnPointerClickDown();

	[Token(Token = "0x600025C")]
	public abstract void OnPointerClickUp();

	[Token(Token = "0x600025D")]
	public abstract void GetPointerRadius(out float enterRadius, out float exitRadius);

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xB09BB0", Offset = "0xB09BB0", VA = "0xB09BB0")]
	public Vector3 GetPointAlongPointer(float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xB02F0C", Offset = "0xB02F0C", VA = "0xB02F0C")]
	public PointerRay GetRayForDistance(float distance)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xB0A3B4", Offset = "0xB0A3B4", VA = "0xB0A3B4", Slot = "23")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xB0A3BC", Offset = "0xB0A3BC", VA = "0xB0A3BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xB09890", Offset = "0xB09890", VA = "0xB09890")]
	private void UpdateTriggerState()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xB0A41C", Offset = "0xB0A41C", VA = "0xB0A41C")]
	protected GvrBasePointer()
	{
	}
}
[Token(Token = "0x200004B")]
public abstract class GvrBasePointerRaycaster : BaseRaycaster
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GvrBasePointer.PointerRay lastRay;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716CE4", Offset = "0x716CE4")]
	private GvrBasePointer.RaycastMode <CurrentRaycastModeForHybrid>k__BackingField;

	[Token(Token = "0x170000A1")]
	protected GvrBasePointer.RaycastMode CurrentRaycastModeForHybrid
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xB0A434", Offset = "0xB0A434", VA = "0xB0A434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D72C", Offset = "0x71D72C")]
		get
		{
			return default(GvrBasePointer.RaycastMode);
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xB0A43C", Offset = "0xB0A43C", VA = "0xB0A43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D73C", Offset = "0x71D73C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xB0A42C", Offset = "0xB0A42C", VA = "0xB0A42C")]
	protected GvrBasePointerRaycaster()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xB0A444", Offset = "0xB0A444", VA = "0xB0A444")]
	public GvrBasePointer.PointerRay GetLastRay()
	{
		return default(GvrBasePointer.PointerRay);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xB0A450", Offset = "0xB0A450", VA = "0xB0A450", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000269")]
	protected abstract bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList);

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xB0A540", Offset = "0xB0A540", VA = "0xB0A540")]
	private void RaycastHybrid(GvrBasePointer pointer, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xB0A678", Offset = "0xB0A678", VA = "0xB0A678")]
	private void RaycastDefault(GvrBasePointer pointer, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}
}
[Token(Token = "0x200004C")]
public static class GvrExecuteEventsExtension
{
	[Token(Token = "0x170000A2")]
	public static ExecuteEvents.EventFunction<IGvrPointerHoverHandler> pointerHoverHandler
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xD90628", Offset = "0xD90628", VA = "0xD90628")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xD9069C", Offset = "0xD9069C", VA = "0xD9069C")]
	private static void Execute(IGvrPointerHoverHandler handler, BaseEventData eventData)
	{
	}
}
[Token(Token = "0x200004D")]
public class GvrPointerEventData : PointerEventData
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GvrControllerButton gvrButtonsDown;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xD97F84", Offset = "0xD97F84", VA = "0xD97F84")]
	public GvrPointerEventData(EventSystem eventSystem)
	{
	}
}
[Token(Token = "0x200004E")]
public static class GvrPointerEventDataExtension
{
	[Token(Token = "0x600026F")]
	[Address(RVA = "0xD97F8C", Offset = "0xD97F8C", VA = "0xD97F8C")]
	public static GvrControllerButton GvrGetButtonsDown(this PointerEventData pointerEventData)
	{
		return default(GvrControllerButton);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xD9801C", Offset = "0xD9801C", VA = "0xD9801C")]
	public static GvrControllerInputDevice GvrGetControllerInputDevice(this PointerEventData pointerEventData)
	{
		return null;
	}
}
[Token(Token = "0x200004F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x712F10", Offset = "0x712F10")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x712F10", Offset = "0x712F10")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712F10", Offset = "0x712F10")]
public class GvrPointerGraphicRaycaster : GvrBasePointerRaycaster
{
	[Token(Token = "0x200046E")]
	public enum BlockingObjects
	{
		[Token(Token = "0x4001BD6")]
		None,
		[Token(Token = "0x4001BD7")]
		TwoD,
		[Token(Token = "0x4001BD8")]
		ThreeD,
		[Token(Token = "0x4001BD9")]
		All
	}

	[Serializable]
	[Token(Token = "0x200046F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714E8C", Offset = "0x714E8C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Graphic> <>9__13_0;

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xD993B4", Offset = "0xD993B4", VA = "0xD993B4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xD993BC", Offset = "0xD993BC", VA = "0xD993BC")]
		internal int <Raycast>b__13_0(Graphic g1, Graphic g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool ignoreReversedGraphics;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BlockingObjects blockingObjects;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask blockingMask;

	[Token(Token = "0x400029A")]
	private const int NO_EVENT_MASK_SET = -1;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Graphic> sortedGraphics;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Canvas targetCanvas;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Graphic> raycastResults;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera cachedPointerEventCamera;

	[Token(Token = "0x170000A3")]
	public override Camera eventCamera
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xD98120", Offset = "0xD98120", VA = "0xD98120", Slot = "18")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D76C", Offset = "0x71D76C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xD98090", Offset = "0xD98090", VA = "0xD98090")]
	protected GvrPointerGraphicRaycaster()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xD98298", Offset = "0xD98298", VA = "0xD98298", Slot = "22")]
	protected override bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
		return default(bool);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xD98BA8", Offset = "0xD98BA8", VA = "0xD98BA8")]
	private static void Raycast(Canvas canvas, Ray ray, Camera cam, float distance, List<Graphic> results, out Ray finalRay)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xD98270", Offset = "0xD98270", VA = "0xD98270")]
	private Camera GetCameraForRaycastMode(GvrBasePointer pointer, GvrBasePointer.RaycastMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xD99094", Offset = "0xD99094", VA = "0xD99094")]
	private Camera GetCameraForRaycastModeDirect(GvrBasePointer pointer)
	{
		return null;
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xD99238", Offset = "0xD99238", VA = "0xD99238")]
	private Camera AddDummyCameraToPointer(GvrBasePointer pointer)
	{
		return null;
	}
}
[Token(Token = "0x2000050")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x712FBC", Offset = "0x712FBC")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x712FBC", Offset = "0x712FBC")]
public class GvrPointerPhysicsRaycaster : GvrBasePointerRaycaster
{
	[Token(Token = "0x2000470")]
	private class HitComparer : IComparer<RaycastHit>
	{
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xD9DCA8", Offset = "0xD9DCA8", VA = "0xD9DCA8", Slot = "4")]
		public int Compare(RaycastHit lhs, RaycastHit rhs)
		{
			return default(int);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xD9D488", Offset = "0xD9D488", VA = "0xD9D488")]
		public HitComparer()
		{
		}
	}

	[Token(Token = "0x400029F")]
	protected const int NO_EVENT_MASK_SET = -1;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected LayerMask raycasterEventMask;

	[Token(Token = "0x40002A1")]
	private const int MAX_RAYCAST_HITS_MAX = 512;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x716D04", Offset = "0x716D04")]
	private int maxRaycastHits;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit[] hits;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HitComparer hitComparer;

	[Token(Token = "0x170000A4")]
	public int MaxRaycastHits
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xD9D490", Offset = "0xD9D490", VA = "0xD9D490")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xD9D498", Offset = "0xD9D498", VA = "0xD9D498")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public override Camera eventCamera
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xD9D550", Offset = "0xD9D550", VA = "0xD9D550", Slot = "18")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D7B0", Offset = "0x71D7B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A6")]
	public int finalEventMask
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xD9D5EC", Offset = "0xD9D5EC", VA = "0xD9D5EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A7")]
	public LayerMask eventMask
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xD9D6C0", Offset = "0xD9D6C0", VA = "0xD9D6C0")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xD9D6C8", Offset = "0xD9D6C8", VA = "0xD9D6C8")]
		set
		{
		}
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xD9D40C", Offset = "0xD9D40C", VA = "0xD9D40C")]
	protected GvrPointerPhysicsRaycaster()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xD9D6D0", Offset = "0xD9D6D0", VA = "0xD9D6D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xD9D734", Offset = "0xD9D734", VA = "0xD9D734", Slot = "22")]
	protected override bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000051")]
public class GvrPointerScrollInput
{
	[Token(Token = "0x2000471")]
	private class ScrollInfo
	{
		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isScrollingX;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isScrollingY;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 initScroll;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 lastScroll;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 scrollVelocity;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IGvrScrollSettings scrollSettings;

		[Token(Token = "0x17000270")]
		public bool IsScrolling
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xD9E86C", Offset = "0xD9E86C", VA = "0xD9E86C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xD9EB18", Offset = "0xD9EB18", VA = "0xD9EB18")]
		public ScrollInfo()
		{
		}
	}

	[Token(Token = "0x40002A5")]
	public const string PROPERTY_NAME_INERTIA = "inertia";

	[Token(Token = "0x40002A6")]
	public const string PROPERTY_NAME_DECELERATION_RATE = "decelerationRate";

	[Token(Token = "0x40002A7")]
	public const float SCROLL_DELTA_MULTIPLIER = 1000f;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716D48", Offset = "0x716D48")]
	public bool inertia;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716D80", Offset = "0x716D80")]
	public float decelerationRate;

	[Token(Token = "0x40002AA")]
	private const float CUTOFF_HZ = 10f;

	[Token(Token = "0x40002AB")]
	private const float RC = 1f / (20f * (float)Math.PI);

	[Token(Token = "0x40002AC")]
	private const float SPEED_CLAMP_RATIO = 0.05f;

	[Token(Token = "0x40002AD")]
	private const float SPEED_CLAMP = 50f;

	[Token(Token = "0x40002AE")]
	private const float SPEED_CLAMP_SQUARED = 2500f;

	[Token(Token = "0x40002AF")]
	private const float INERTIA_THRESHOLD_RATIO = 0.2f;

	[Token(Token = "0x40002B0")]
	private const float INERTIA_THRESHOLD = 200f;

	[Token(Token = "0x40002B1")]
	private const float INERTIA_THRESHOLD_SQUARED = 40000f;

	[Token(Token = "0x40002B2")]
	private const float SLOP_VERTICAL = 165f;

	[Token(Token = "0x40002B3")]
	private const float SLOP_HORIZONTAL = 150f;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, ScrollInfo> scrollHandlers;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> scrollingObjects;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xD9CE04", Offset = "0xD9CE04", VA = "0xD9CE04")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D7F4", Offset = "0x71D7F4")]
	public void HandleScroll(GameObject currentGameObject, PointerEventData pointerData, GvrBasePointer pointer, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xD9E66C", Offset = "0xD9E66C", VA = "0xD9E66C")]
	private static bool CanScrollStartX(ScrollInfo scrollInfo, Vector2 currentScroll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xD9E6FC", Offset = "0xD9E6FC", VA = "0xD9E6FC")]
	private static bool CanScrollStartY(ScrollInfo scrollInfo, Vector2 currentScroll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xD9DDB4", Offset = "0xD9DDB4", VA = "0xD9DDB4")]
	private void OnTouchingScrollHandler(GameObject currentScrollHandler, PointerEventData pointerData, Vector2 currentScroll, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xD9E0B0", Offset = "0xD9E0B0", VA = "0xD9E0B0")]
	private void OnReleaseScrollHandler(GameObject currentScrollHandler)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xD9E88C", Offset = "0xD9E88C", VA = "0xD9E88C")]
	private void UpdateVelocity(ScrollInfo scrollInfo, Vector2 scrollDisplacement)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xD9E168", Offset = "0xD9E168", VA = "0xD9E168")]
	private void StopScrollingIfNecessary(bool touching, GameObject currentScrollHandler)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xD9E308", Offset = "0xD9E308", VA = "0xD9E308")]
	private void UpdateInertiaScrollHandlers(bool touching, GameObject currentScrollHandler, PointerEventData pointerData, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xD9E78C", Offset = "0xD9E78C", VA = "0xD9E78C")]
	private ScrollInfo AddScrollHandler(GameObject scrollHandler, Vector2 currentScroll)
	{
		return null;
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xD9DCEC", Offset = "0xD9DCEC", VA = "0xD9DCEC")]
	private void RemoveScrollHandler(GameObject scrollHandler)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xD9E974", Offset = "0xD9E974", VA = "0xD9E974")]
	private bool ShouldUseInertia(ScrollInfo scrollInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xD9EA44", Offset = "0xD9EA44", VA = "0xD9EA44")]
	private float GetDecelerationRate(ScrollInfo scrollInfo)
	{
		return default(float);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xD99F50", Offset = "0xD99F50", VA = "0xD99F50")]
	public GvrPointerScrollInput()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x71301C", Offset = "0x71301C")]
public class GvrScrollSettings : MonoBehaviour, IGvrScrollSettings
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716DB8", Offset = "0x716DB8")]
	public bool inertiaOverride;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716DF0", Offset = "0x716DF0")]
	public float decelerationRateOverride;

	[Token(Token = "0x170000A8")]
	public bool InertiaOverride
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xD9F9F0", Offset = "0xD9F9F0", VA = "0xD9F9F0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A9")]
	public float DecelerationRateOverride
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xD9F9F8", Offset = "0xD9F9F8", VA = "0xD9F9F8", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xD9FA00", Offset = "0xD9FA00", VA = "0xD9FA00")]
	public GvrScrollSettings()
	{
	}
}
[Token(Token = "0x2000053")]
public class GvrXREventsSubscriber : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrXREventsSubscriber instance;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string instanceLoadedDeviceName;

	[Token(Token = "0x170000AA")]
	public static string loadedDeviceName
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xDA01FC", Offset = "0xDA01FC", VA = "0xDA01FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xDA6A2C", Offset = "0xDA6A2C", VA = "0xDA6A2C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xDA6A58", Offset = "0xDA6A58", VA = "0xDA6A58")]
	private static void OnDeviceLoadAction(string newLoadedDeviceName)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xDA6958", Offset = "0xDA6958", VA = "0xDA6958")]
	private static GvrXREventsSubscriber GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xDA6A84", Offset = "0xDA6A84", VA = "0xDA6A84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xDA6B50", Offset = "0xDA6B50", VA = "0xDA6B50")]
	public GvrXREventsSubscriber()
	{
	}
}
[Token(Token = "0x2000054")]
public interface IGvrPointerHoverHandler : IEventSystemHandler
{
	[Token(Token = "0x6000298")]
	void OnGvrPointerHover(PointerEventData eventData);
}
[Token(Token = "0x2000055")]
public interface IGvrScrollSettings
{
	[Token(Token = "0x170000AB")]
	bool InertiaOverride
	{
		[Token(Token = "0x6000299")]
		get;
	}

	[Token(Token = "0x170000AC")]
	float DecelerationRateOverride
	{
		[Token(Token = "0x600029A")]
		get;
	}
}
[Token(Token = "0x2000056")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x713054", Offset = "0x713054")]
public class GvrAllEventsTrigger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000472")]
	public class TriggerEvent : UnityEvent<GameObject, PointerEventData>
	{
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xB07AFC", Offset = "0xB07AFC", VA = "0xB07AFC")]
		public TriggerEvent()
		{
		}
	}

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TriggerEvent OnPointerClick;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TriggerEvent OnPointerDown;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TriggerEvent OnPointerUp;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TriggerEvent OnPointerEnter;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TriggerEvent OnPointerExit;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TriggerEvent OnScroll;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool listenersAdded;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xB074FC", Offset = "0xB074FC", VA = "0xB074FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xB076A8", Offset = "0xB076A8", VA = "0xB076A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xB07850", Offset = "0xB07850", VA = "0xB07850")]
	private void Start()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xB07500", Offset = "0xB07500", VA = "0xB07500")]
	private void AddListeners()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xB076AC", Offset = "0xB076AC", VA = "0xB076AC")]
	private void RemoveListeners()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xB07854", Offset = "0xB07854", VA = "0xB07854")]
	private void OnPointerClickHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xB078C4", Offset = "0xB078C4", VA = "0xB078C4")]
	private void OnPointerDownHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xB07934", Offset = "0xB07934", VA = "0xB07934")]
	private void OnPointerUpHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xB079A4", Offset = "0xB079A4", VA = "0xB079A4")]
	private void OnPointerEnterHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xB07A14", Offset = "0xB07A14", VA = "0xB07A14")]
	private void OnPointerExitHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xB07A84", Offset = "0xB07A84", VA = "0xB07A84")]
	private void OnScrollHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xB07AF4", Offset = "0xB07AF4", VA = "0xB07AF4")]
	public GvrAllEventsTrigger()
	{
	}
}
[Token(Token = "0x2000057")]
public class GvrEventExecutor : IGvrEventExecutor
{
	[Token(Token = "0x2000473")]
	public delegate void EventDelegate(GameObject target, PointerEventData eventData);

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Type, EventDelegate> eventTable;

	[Token(Token = "0x14000006")]
	public event EventDelegate OnPointerClick
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xD8FD74", Offset = "0xD8FD74", VA = "0xD8FD74")]
		add
		{
		}
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xD8FDD4", Offset = "0xD8FDD4", VA = "0xD8FDD4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event EventDelegate OnPointerDown
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xD8FE34", Offset = "0xD8FE34", VA = "0xD8FE34")]
		add
		{
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xD8FE94", Offset = "0xD8FE94", VA = "0xD8FE94")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event EventDelegate OnPointerUp
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xD8FEF4", Offset = "0xD8FEF4", VA = "0xD8FEF4")]
		add
		{
		}
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xD8FF54", Offset = "0xD8FF54", VA = "0xD8FF54")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event EventDelegate OnPointerEnter
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xD8FFB4", Offset = "0xD8FFB4", VA = "0xD8FFB4")]
		add
		{
		}
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xD90014", Offset = "0xD90014", VA = "0xD90014")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event EventDelegate OnPointerExit
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xD90074", Offset = "0xD90074", VA = "0xD90074")]
		add
		{
		}
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xD900D4", Offset = "0xD900D4", VA = "0xD900D4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event EventDelegate OnScroll
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xD90134", Offset = "0xD90134", VA = "0xD90134")]
		add
		{
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xD90194", Offset = "0xD90194", VA = "0xD90194")]
		remove
		{
		}
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xD8FD00", Offset = "0xD8FD00", VA = "0xD8FD00")]
	public GvrEventExecutor()
	{
	}

	[Token(Token = "0x60002B4")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D838", Offset = "0x71D838")]
	public bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) where T : IEventSystemHandler
	{
		return default(bool);
	}

	[Token(Token = "0x60002B5")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D87C", Offset = "0x71D87C")]
	public GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) where T : IEventSystemHandler
	{
		return null;
	}

	[Token(Token = "0x60002B6")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D8C0", Offset = "0x71D8C0")]
	public GameObject GetEventHandler<T>(GameObject root) where T : IEventSystemHandler
	{
		return null;
	}

	[Token(Token = "0x60002B7")]
	private void CallEventDelegate<T>(GameObject target, BaseEventData eventData) where T : IEventSystemHandler
	{
	}

	[Token(Token = "0x60002B8")]
	private void AddEventDelegate<T>(EventDelegate eventDelegate)
	{
	}

	[Token(Token = "0x60002B9")]
	private void RemoveEventDelegate<T>(EventDelegate eventDelegate)
	{
	}
}
[Token(Token = "0x2000058")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x71308C", Offset = "0x71308C")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x71308C", Offset = "0x71308C")]
public class GvrPointerInputModule : BaseInputModule, IGvrInputModuleController
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716E28", Offset = "0x716E28")]
	public bool vrModeOnly;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x716E60", Offset = "0x716E60")]
	public GvrPointerScrollInput scrollInput;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716E98", Offset = "0x716E98")]
	private GvrPointerInputModuleImpl <Impl>k__BackingField;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716EA8", Offset = "0x716EA8")]
	private GvrEventExecutor <EventExecutor>k__BackingField;

	[Token(Token = "0x170000AD")]
	public static GvrBasePointer Pointer
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xD981D0", Offset = "0xD981D0", VA = "0xD981D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xD9953C", Offset = "0xD9953C", VA = "0xD9953C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public static RaycastResult CurrentRaycastResult
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xD9966C", Offset = "0xD9966C", VA = "0xD9966C")]
		get
		{
			return default(RaycastResult);
		}
	}

	[Token(Token = "0x170000AF")]
	public GvrPointerInputModuleImpl Impl
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xD9972C", Offset = "0xD9972C", VA = "0xD9972C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D904", Offset = "0x71D904")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xD99734", Offset = "0xD99734", VA = "0xD99734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D914", Offset = "0x71D914")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public GvrEventExecutor EventExecutor
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xD9973C", Offset = "0xD9973C", VA = "0xD9973C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D924", Offset = "0x71D924")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xD99744", Offset = "0xD99744", VA = "0xD99744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D934", Offset = "0x71D934")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public new EventSystem eventSystem
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xD9974C", Offset = "0xD9974C", VA = "0xD9974C", Slot = "26")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public List<RaycastResult> RaycastResultCache
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xD99754", Offset = "0xD99754", VA = "0xD99754", Slot = "27")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xD9975C", Offset = "0xD9975C", VA = "0xD9975C")]
	public static void OnPointerCreated(GvrBasePointer createdPointer)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xD99840", Offset = "0xD99840", VA = "0xD99840")]
	public static GvrEventExecutor FindEventExecutor()
	{
		return null;
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xD99414", Offset = "0xD99414", VA = "0xD99414")]
	public static GvrPointerInputModule FindInputModule()
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xD998D0", Offset = "0xD998D0", VA = "0xD998D0", Slot = "21")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D944", Offset = "0x71D944")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xD999E4", Offset = "0xD999E4", VA = "0xD999E4", Slot = "22")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D988", Offset = "0x71D988")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xD99BD4", Offset = "0xD99BD4", VA = "0xD99BD4", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xD99C98", Offset = "0xD99C98", VA = "0xD99C98", Slot = "17")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71D9CC", Offset = "0x71D9CC")]
	public override void Process()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xD99E24", Offset = "0xD99E24", VA = "0xD99E24", Slot = "28")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DA10", Offset = "0x71DA10")]
	public bool ShouldActivate()
	{
		return default(bool);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xD99E2C", Offset = "0xD99E2C", VA = "0xD99E2C", Slot = "29")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xD99E34", Offset = "0xD99E34", VA = "0xD99E34", Slot = "30")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DA54", Offset = "0x71DA54")]
	public new GameObject FindCommonRoot(GameObject g1, GameObject g2)
	{
		return null;
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xD99E44", Offset = "0xD99E44", VA = "0xD99E44", Slot = "31")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DA98", Offset = "0x71DA98")]
	public new BaseEventData GetBaseEventData()
	{
		return null;
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xD99E4C", Offset = "0xD99E4C", VA = "0xD99E4C", Slot = "32")]
	public new RaycastResult FindFirstRaycast(List<RaycastResult> candidates)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xD99E58", Offset = "0xD99E58", VA = "0xD99E58", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xD99CC4", Offset = "0xD99CC4", VA = "0xD99CC4")]
	private void UpdateImplProperties()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xD99EEC", Offset = "0xD99EEC", VA = "0xD99EEC")]
	public GvrPointerInputModule()
	{
	}
}
[Token(Token = "0x2000059")]
public class GvrPointerInputModuleImpl
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GvrBasePointer pointer;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 lastPose;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isPointerHovering;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isActive;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716EB8", Offset = "0x716EB8")]
	private IGvrInputModuleController <ModuleController>k__BackingField;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716EC8", Offset = "0x716EC8")]
	private IGvrEventExecutor <EventExecutor>k__BackingField;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716ED8", Offset = "0x716ED8")]
	private bool <VrModeOnly>k__BackingField;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716EE8", Offset = "0x716EE8")]
	private GvrPointerScrollInput <ScrollInput>k__BackingField;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716EF8", Offset = "0x716EF8")]
	private GvrPointerEventData <CurrentEventData>k__BackingField;

	[Token(Token = "0x170000B3")]
	public IGvrInputModuleController ModuleController
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xD99FFC", Offset = "0xD99FFC", VA = "0xD99FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DADC", Offset = "0x71DADC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xD9A004", Offset = "0xD9A004", VA = "0xD9A004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DAEC", Offset = "0x71DAEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public IGvrEventExecutor EventExecutor
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xD9A00C", Offset = "0xD9A00C", VA = "0xD9A00C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DAFC", Offset = "0x71DAFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xD9A014", Offset = "0xD9A014", VA = "0xD9A014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DB0C", Offset = "0x71DB0C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public bool VrModeOnly
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xD9A01C", Offset = "0xD9A01C", VA = "0xD9A01C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DB1C", Offset = "0x71DB1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xD9A024", Offset = "0xD9A024", VA = "0xD9A024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DB2C", Offset = "0x71DB2C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public GvrPointerScrollInput ScrollInput
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xD9A030", Offset = "0xD9A030", VA = "0xD9A030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DB3C", Offset = "0x71DB3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xD9A038", Offset = "0xD9A038", VA = "0xD9A038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DB4C", Offset = "0x71DB4C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public GvrPointerEventData CurrentEventData
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xD9A040", Offset = "0xD9A040", VA = "0xD9A040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DB5C", Offset = "0x71DB5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xD9A048", Offset = "0xD9A048", VA = "0xD9A048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DB6C", Offset = "0x71DB6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public GvrBasePointer Pointer
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xD9A050", Offset = "0xD9A050", VA = "0xD9A050")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xD995DC", Offset = "0xD995DC", VA = "0xD995DC")]
		set
		{
		}
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xD998E8", Offset = "0xD998E8", VA = "0xD998E8")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DB7C", Offset = "0x71DB7C")]
	public bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xD999FC", Offset = "0xD999FC", VA = "0xD999FC")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DBC0", Offset = "0x71DBC0")]
	public void DeactivateModule()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xD99BEC", Offset = "0xD99BEC", VA = "0xD99BEC")]
	public bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xD99D14", Offset = "0xD99D14", VA = "0xD99D14")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DC04", Offset = "0x71DC04")]
	public void Process()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xD9D0F4", Offset = "0xD9D0F4", VA = "0xD9D0F4")]
	private static bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xD9AFD4", Offset = "0xD9AFD4", VA = "0xD9AFD4")]
	private void CastRay()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xD9BA3C", Offset = "0xD9BA3C", VA = "0xD9BA3C")]
	private void UpdateCurrentObject(GameObject previousObject)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xD9BF6C", Offset = "0xD9BF6C", VA = "0xD9BF6C")]
	private void UpdatePointer(GameObject previousObject)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xD9C370", Offset = "0xD9C370", VA = "0xD9C370")]
	private void HandleDrag()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xD9A140", Offset = "0xD9A140", VA = "0xD9A140")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xD9C904", Offset = "0xD9C904", VA = "0xD9C904")]
	private void HandleTriggerDown()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xD9AFBC", Offset = "0xD9AFBC", VA = "0xD9AFBC")]
	private GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xD9A75C", Offset = "0xD9A75C", VA = "0xD9A75C")]
	private void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xD9A058", Offset = "0xD9A058", VA = "0xD9A058")]
	private void TryExitPointer()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xD9AF1C", Offset = "0xD9AF1C", VA = "0xD9AF1C")]
	private bool IsPointerActiveAndAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xD9D248", Offset = "0xD9D248", VA = "0xD9D248")]
	private void RaycastAll()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xD99EE4", Offset = "0xD99EE4", VA = "0xD99EE4")]
	public GvrPointerInputModuleImpl()
	{
	}
}
[Token(Token = "0x200005A")]
public interface IGvrEventExecutor
{
	[Token(Token = "0x60002EF")]
	bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) where T : IEventSystemHandler;

	[Token(Token = "0x60002F0")]
	GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) where T : IEventSystemHandler;

	[Token(Token = "0x60002F1")]
	GameObject GetEventHandler<T>(GameObject root) where T : IEventSystemHandler;
}
[Token(Token = "0x200005B")]
public interface IGvrInputModuleController
{
	[Token(Token = "0x170000B9")]
	EventSystem eventSystem
	{
		[Token(Token = "0x60002F2")]
		get;
	}

	[Token(Token = "0x170000BA")]
	List<RaycastResult> RaycastResultCache
	{
		[Token(Token = "0x60002F3")]
		get;
	}

	[Token(Token = "0x60002F4")]
	bool ShouldActivate();

	[Token(Token = "0x60002F5")]
	void Deactivate();

	[Token(Token = "0x60002F6")]
	GameObject FindCommonRoot(GameObject g1, GameObject g2);

	[Token(Token = "0x60002F7")]
	BaseEventData GetBaseEventData();

	[Token(Token = "0x60002F8")]
	RaycastResult FindFirstRaycast(List<RaycastResult> candidates);
}
[Token(Token = "0x200005C")]
public class GvrCardboardHelpers
{
	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xAFAB80", Offset = "0xAFAB80", VA = "0xAFAB80")]
	public static void Recenter()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB0A7C4", Offset = "0xB0A7C4", VA = "0xB0A7C4")]
	public static void SetViewerProfile(string viewerProfileUri)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB0A744", Offset = "0xB0A744", VA = "0xB0A744")]
	private static extern void gvr_reset_tracking(IntPtr gvr_context);

	[PreserveSig]
	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB0A868", Offset = "0xB0A868", VA = "0xB0A868")]
	private static extern void gvr_set_default_viewer_profile(IntPtr gvr_context, string viewer_profile_uri);

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB0A90C", Offset = "0xB0A90C", VA = "0xB0A90C")]
	public GvrCardboardHelpers()
	{
	}
}
[Token(Token = "0x200005D")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7130EC", Offset = "0x7130EC")]
public class GvrEditorEmulator : MonoBehaviour
{
	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xD8FCF8", Offset = "0xD8FCF8", VA = "0xD8FCF8")]
	public GvrEditorEmulator()
	{
	}
}
[Token(Token = "0x200005E")]
public static class GvrSettings
{
	[Token(Token = "0x2000474")]
	public enum ViewerPlatformType
	{
		[Token(Token = "0x4001BE3")]
		Error = -1,
		[Token(Token = "0x4001BE4")]
		Cardboard,
		[Token(Token = "0x4001BE5")]
		Daydream
	}

	[Token(Token = "0x2000475")]
	public enum UserPrefsHandedness
	{
		[Token(Token = "0x4001BE7")]
		Error = -1,
		[Token(Token = "0x4001BE8")]
		Right,
		[Token(Token = "0x4001BE9")]
		Left
	}

	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714E9C", Offset = "0x714E9C")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AndroidJavaObject androidWindow;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enabled;

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xDA021C", Offset = "0xDA021C", VA = "0xDA021C")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xDA0224", Offset = "0xDA0224", VA = "0xDA0224")]
		internal void <SetSustainedPerformanceMode>b__0()
		{
		}
	}

	[Token(Token = "0x40002CF")]
	public const string VR_SDK_NONE = "None";

	[Token(Token = "0x40002D0")]
	public const string VR_SDK_DAYDREAM = "daydream";

	[Token(Token = "0x40002D1")]
	public const string VR_SDK_CARDBOARD = "cardboard";

	[Token(Token = "0x40002D2")]
	private const string METHOD_GET_WINDOW = "getWindow";

	[Token(Token = "0x40002D3")]
	private const string METHOD_RUN_ON_UI_THREAD = "runOnUiThread";

	[Token(Token = "0x40002D4")]
	private const string METHOD_SET_SUSTAINED_PERFORMANCE_MODE = "setSustainedPerformanceMode";

	[Token(Token = "0x170000BB")]
	public static ViewerPlatformType ViewerPlatform
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xD9FA1C", Offset = "0xD9FA1C", VA = "0xD9FA1C")]
		get
		{
			return default(ViewerPlatformType);
		}
	}

	[Token(Token = "0x170000BC")]
	public static bool SustainedPerformanceMode
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xD9FD38", Offset = "0xD9FD38", VA = "0xD9FD38")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public static UserPrefsHandedness Handedness
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xDA000C", Offset = "0xDA000C", VA = "0xDA000C")]
		get
		{
			return default(UserPrefsHandedness);
		}
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xD9FA84", Offset = "0xD9FA84", VA = "0xD9FA84")]
	public static IntPtr GetValidGvrNativePtrOrLogError()
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6000303")]
	[Address(RVA = "0xDA00FC", Offset = "0xDA00FC", VA = "0xDA00FC")]
	internal static extern IntPtr gvr_get_user_prefs(IntPtr gvrContextPtr);

	[PreserveSig]
	[Token(Token = "0x6000304")]
	[Address(RVA = "0xD9FCB8", Offset = "0xD9FCB8", VA = "0xD9FCB8")]
	private static extern int gvr_get_viewer_type(IntPtr gvrContextPtr);

	[PreserveSig]
	[Token(Token = "0x6000305")]
	[Address(RVA = "0xDA017C", Offset = "0xDA017C", VA = "0xDA017C")]
	private static extern int gvr_user_prefs_get_controller_handedness(IntPtr gvrUserPrefsPtr);

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xD9FD40", Offset = "0xD9FD40", VA = "0xD9FD40")]
	private static void SetSustainedPerformanceMode(bool enabled)
	{
	}
}
[Token(Token = "0x200005F")]
public class GvrUnitySdkVersion
{
	[Token(Token = "0x40002D5")]
	public const string GVR_SDK_VERSION = "1.200.1";

	[Token(Token = "0x40002D6")]
	private const string VERSION_HEADER = "GVR SDK for Unity version: ";

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xDA1998", Offset = "0xDA1998", VA = "0xDA1998")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x71DC48", Offset = "0x71DC48")]
	private static void LogGvrUnitySdkVersion()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xDA1A04", Offset = "0xDA1A04", VA = "0xDA1A04")]
	public GvrUnitySdkVersion()
	{
	}
}
[Token(Token = "0x2000060")]
public enum GvrErrorType
{
	[Token(Token = "0x40002D8")]
	None = 0,
	[Token(Token = "0x40002D9")]
	ControllerCreateFailed = 2,
	[Token(Token = "0x40002DA")]
	NoFrameAavilable = 3,
	[Token(Token = "0x40002DB")]
	NoEventAvailable = 1000000,
	[Token(Token = "0x40002DC")]
	NoPropertyAvailable = 1000001
}
[Token(Token = "0x2000061")]
public enum GvrEventType
{
	[Token(Token = "0x40002DE")]
	Invalid = -1,
	[Token(Token = "0x40002DF")]
	Recenter = 1,
	[Token(Token = "0x40002E0")]
	SafetyRegionExit = 2,
	[Token(Token = "0x40002E1")]
	SafetyRegionEnter = 3
}
[Token(Token = "0x2000062")]
public enum GvrRecenterEventType
{
	[Token(Token = "0x40002E3")]
	Invalid = -1,
	[Token(Token = "0x40002E4")]
	RecenterEventRestart = 1,
	[Token(Token = "0x40002E5")]
	RecenterEventAligned = 2
}
[Token(Token = "0x2000063")]
public enum GvrRecenterFlags
{
	[Token(Token = "0x40002E7")]
	None
}
[Token(Token = "0x2000064")]
public enum GvrSafetyRegionType
{
	[Token(Token = "0x40002E9")]
	None,
	[Token(Token = "0x40002EA")]
	Cylinder
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x713124", Offset = "0x713124")]
public class GvrHeadset : MonoBehaviour
{
	[Token(Token = "0x2000477")]
	public delegate void OnSafetyRegionEvent(bool enter);

	[Token(Token = "0x2000478")]
	public delegate void OnRecenterEvent(GvrRecenterEventType recenterType, GvrRecenterFlags recenterFlags, Vector3 recenteredPosition, Quaternion recenteredOrientation);

	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714EAC", Offset = "0x714EAC")]
	private sealed class <EndOfFrame>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GvrHeadset <>4__this;

		[Token(Token = "0x17000271")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xD91E48", Offset = "0xD91E48", VA = "0xD91E48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xD91EB0", Offset = "0xD91EB0", VA = "0xD91EB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xD91DA8", Offset = "0xD91DA8", VA = "0xD91DA8")]
		[DebuggerHidden]
		public <EndOfFrame>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xD91DD4", Offset = "0xD91DD4", VA = "0xD91DD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xD91DD8", Offset = "0xD91DD8", VA = "0xD91DD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xD91E50", Offset = "0xD91E50", VA = "0xD91E50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrHeadset instance;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IHeadsetProvider headsetProvider;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HeadsetState headsetState;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IEnumerator headsetUpdate;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OnSafetyRegionEvent safetyRegionDelegate;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OnRecenterEvent recenterDelegate;

	[Token(Token = "0x170000BE")]
	public static bool SupportsPositionalTracking
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xD90B64", Offset = "0xD90B64", VA = "0xD90B64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BF")]
	public bool ProvidesEditorEmulator
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0xD90D5C", Offset = "0xD90D5C", VA = "0xD90D5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000C")]
	public static event OnSafetyRegionEvent OnSafetyRegionChange
	{
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xD90804", Offset = "0xD90804", VA = "0xD90804")]
		add
		{
		}
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xD908DC", Offset = "0xD908DC", VA = "0xD908DC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event OnRecenterEvent OnRecenter
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xD909B4", Offset = "0xD909B4", VA = "0xD909B4")]
		add
		{
		}
		[Token(Token = "0x600030D")]
		[Address(RVA = "0xD90A8C", Offset = "0xD90A8C", VA = "0xD90A8C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xD90790", Offset = "0xD90790", VA = "0xD90790")]
	protected GvrHeadset()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xD90DE0", Offset = "0xD90DE0", VA = "0xD90DE0")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DC5C", Offset = "0x71DC5C")]
	public static bool TryGetFloorHeight(ref float floorHeight)
	{
		return default(bool);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xD90F0C", Offset = "0xD90F0C", VA = "0xD90F0C")]
	public static bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xD91040", Offset = "0xD91040", VA = "0xD91040")]
	public static bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xD9116C", Offset = "0xD9116C", VA = "0xD9116C")]
	public static bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xD91298", Offset = "0xD91298", VA = "0xD91298")]
	public static bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xD913C4", Offset = "0xD913C4", VA = "0xD913C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xD914C4", Offset = "0xD914C4", VA = "0xD914C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xD9157C", Offset = "0xD9157C", VA = "0xD9157C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xD915BC", Offset = "0xD915BC", VA = "0xD915BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xD91614", Offset = "0xD91614", VA = "0xD91614")]
	private void UpdateStandalone()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xD9150C", Offset = "0xD9150C", VA = "0xD9150C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71DCA0", Offset = "0x71DCA0")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}
}
[Token(Token = "0x2000066")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x71315C", Offset = "0x71315C")]
public class InstantPreviewHelper : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string adbPath;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string aaptPath;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xB43C98", Offset = "0xB43C98", VA = "0xB43C98")]
	private int[] GetIntValuesFromString(string DirPath)
	{
		return null;
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xB43DFC", Offset = "0xB43DFC", VA = "0xB43DFC")]
	private string GetLatestBuildToolsDir(string sdkRoot)
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xB44060", Offset = "0xB44060", VA = "0xB44060")]
	public InstantPreviewHelper()
	{
	}
}
[Token(Token = "0x2000067")]
public enum GvrKeyboardEvent
{
	[Token(Token = "0x40002F5")]
	GVR_KEYBOARD_ERROR_UNKNOWN,
	[Token(Token = "0x40002F6")]
	GVR_KEYBOARD_ERROR_SERVICE_NOT_CONNECTED,
	[Token(Token = "0x40002F7")]
	GVR_KEYBOARD_ERROR_NO_LOCALES_FOUND,
	[Token(Token = "0x40002F8")]
	GVR_KEYBOARD_ERROR_SDK_LOAD_FAILED,
	[Token(Token = "0x40002F9")]
	GVR_KEYBOARD_SHOWN,
	[Token(Token = "0x40002FA")]
	GVR_KEYBOARD_HIDDEN,
	[Token(Token = "0x40002FB")]
	GVR_KEYBOARD_TEXT_UPDATED,
	[Token(Token = "0x40002FC")]
	GVR_KEYBOARD_TEXT_COMMITTED
}
[Token(Token = "0x2000068")]
public enum GvrKeyboardError
{
	[Token(Token = "0x40002FE")]
	UNKNOWN,
	[Token(Token = "0x40002FF")]
	SERVICE_NOT_CONNECTED,
	[Token(Token = "0x4000300")]
	NO_LOCALES_FOUND,
	[Token(Token = "0x4000301")]
	SDK_LOAD_FAILED
}
[Token(Token = "0x2000069")]
public enum GvrKeyboardInputMode
{
	[Token(Token = "0x4000303")]
	DEFAULT,
	[Token(Token = "0x4000304")]
	NUMERIC
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7131A8", Offset = "0x7131A8")]
public class GvrKeyboard : MonoBehaviour
{
	[Token(Token = "0x200047A")]
	public delegate void StandardCallback();

	[Token(Token = "0x200047B")]
	public delegate void EditTextCallback(string edit_text);

	[Token(Token = "0x200047C")]
	public delegate void ErrorCallback(GvrKeyboardError err);

	[Token(Token = "0x200047D")]
	public delegate void KeyboardCallback(IntPtr closure, GvrKeyboardEvent evt);

	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714EBC", Offset = "0x714EBC")]
	private sealed class <Executer>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GvrKeyboard <>4__this;

		[Token(Token = "0x17000273")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xD95170", Offset = "0xD95170", VA = "0xD95170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xD951D8", Offset = "0xD951D8", VA = "0xD951D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xD943E4", Offset = "0xD943E4", VA = "0xD943E4")]
		[DebuggerHidden]
		public <Executer>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xD94F54", Offset = "0xD94F54", VA = "0xD94F54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xD94F58", Offset = "0xD94F58", VA = "0xD94F58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xD95178", Offset = "0xD95178", VA = "0xD95178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GvrKeyboardDelegateBase keyboardDelegate;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GvrKeyboardInputMode inputMode;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useRecommended;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x4000309")]
	private const float EXECUTOR_WAIT = 0.01f;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrKeyboard instance;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IKeyboardProvider keyboardProvider;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<GvrKeyboardEvent> threadSafeCallbacks;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static object callbacksLock;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private KeyboardState keyboardState;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IEnumerator keyboardUpdate;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ErrorCallback errorCallback;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StandardCallback showCallback;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StandardCallback hideCallback;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EditTextCallback updateCallback;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EditTextCallback enterCallback;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isRight;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool isKeyboardHidden;

	[Token(Token = "0x170000C0")]
	public string EditorText
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xD92720", Offset = "0xD92720", VA = "0xD92720")]
		get
		{
			return null;
		}
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xD92808", Offset = "0xD92808", VA = "0xD92808")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public GvrKeyboardInputMode Mode
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xD928E8", Offset = "0xD928E8", VA = "0xD928E8")]
		get
		{
			return default(GvrKeyboardInputMode);
		}
	}

	[Token(Token = "0x170000C2")]
	public bool IsValid
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0xD929C8", Offset = "0xD929C8", VA = "0xD929C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C3")]
	public bool IsReady
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0xD92AB0", Offset = "0xD92AB0", VA = "0xD92AB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C4")]
	public Matrix4x4 WorldMatrix
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xD92B98", Offset = "0xD92B98", VA = "0xD92B98")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xD92CC0", Offset = "0xD92CC0", VA = "0xD92CC0")]
	public void ClearText()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xD92DD8", Offset = "0xD92DD8", VA = "0xD92DD8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xD93554", Offset = "0xD93554", VA = "0xD93554")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xD9365C", Offset = "0xD9365C", VA = "0xD9365C")]
	public void OnPointerClick(BaseEventData data)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xD9260C", Offset = "0xD9260C", VA = "0xD9260C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x71DD04", Offset = "0x71DD04")]
	private static void OnKeyboardCallback(IntPtr closure, GvrKeyboardEvent keyboardEvent)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xD9366C", Offset = "0xD9366C", VA = "0xD9366C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xD937D4", Offset = "0xD937D4", VA = "0xD937D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xD9385C", Offset = "0xD9385C", VA = "0xD9385C")]
	private void Start()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xD93CE4", Offset = "0xD93CE4", VA = "0xD93CE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xD93EE4", Offset = "0xD93EE4", VA = "0xD93EE4")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xD941A4", Offset = "0xD941A4", VA = "0xD941A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xD94244", Offset = "0xD94244", VA = "0xD94244")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xD94250", Offset = "0xD94250", VA = "0xD94250")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xD941D4", Offset = "0xD941D4", VA = "0xD941D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71DD68", Offset = "0x71DD68")]
	private IEnumerator Executer()
	{
		return null;
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xD94410", Offset = "0xD94410", VA = "0xD94410")]
	private void PoolKeyboardCallbacks(GvrKeyboardEvent keyboardEvent)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xD94E34", Offset = "0xD94E34", VA = "0xD94E34")]
	private void KeyboardDelegate_KeyboardShown(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xD94E3C", Offset = "0xD94E3C", VA = "0xD94E3C")]
	private void KeyboardDelegate_KeyboardHidden(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xD9329C", Offset = "0xD9329C", VA = "0xD9329C")]
	private Matrix4x4 GetKeyboardObjectMatrix(Vector3 position)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xD94E48", Offset = "0xD94E48", VA = "0xD94E48")]
	public GvrKeyboard()
	{
	}
}
[Token(Token = "0x200006B")]
public abstract class GvrKeyboardDelegateBase : MonoBehaviour
{
	[Token(Token = "0x1400000E")]
	[method: Token(Token = "0x6000338")]
	[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DDCC", Offset = "0x71DDCC")]
	public abstract event EventHandler KeyboardHidden;

	[Token(Token = "0x1400000F")]
	[method: Token(Token = "0x600033A")]
	[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DDEC", Offset = "0x71DDEC")]
	public abstract event EventHandler KeyboardShown;

	[Token(Token = "0x600033C")]
	public abstract void OnKeyboardShow();

	[Token(Token = "0x600033D")]
	public abstract void OnKeyboardHide();

	[Token(Token = "0x600033E")]
	public abstract void OnKeyboardUpdate(string edit_text);

	[Token(Token = "0x600033F")]
	public abstract void OnKeyboardEnterPressed(string edit_text);

	[Token(Token = "0x6000340")]
	public abstract void OnKeyboardError(GvrKeyboardError errorCode);

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xD95614", Offset = "0xD95614", VA = "0xD95614")]
	protected GvrKeyboardDelegateBase()
	{
	}
}
[Token(Token = "0x200006C")]
public class GvrKeyboardIntent
{
	[Token(Token = "0x200047F")]
	internal class KeyboardCallback : AndroidJavaProxy
	{
		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xD95908", Offset = "0xD95908", VA = "0xD95908")]
		internal KeyboardCallback()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xD9597C", Offset = "0xD9597C", VA = "0xD9597C")]
		private void onPlayStoreResult()
		{
		}
	}

	[Token(Token = "0x4000317")]
	private const string FRAGMENT_CLASSNAME = "com.google.gvr.keyboardsupport.KeyboardFragment";

	[Token(Token = "0x4000318")]
	private const string CALLBACK_CLASSNAME = "com.google.gvr.keyboardsupport.KeyboardFragment$KeyboardCallback";

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrKeyboardIntent theInstance;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject keyboardFragment;

	[Token(Token = "0x170000C5")]
	public static GvrKeyboardIntent Instance
	{
		[Token(Token = "0x6000342")]
		[Address(RVA = "0xD9561C", Offset = "0xD9561C", VA = "0xD9561C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xD9582C", Offset = "0xD9582C", VA = "0xD9582C")]
	public void LaunchPlayStore()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xD956FC", Offset = "0xD956FC", VA = "0xD956FC")]
	protected bool InitializeFragment()
	{
		return default(bool);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xD956F4", Offset = "0xD956F4", VA = "0xD956F4")]
	public GvrKeyboardIntent()
	{
	}
}
[Token(Token = "0x200006D")]
public class KeyboardState
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal string editorText;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal GvrKeyboardInputMode mode;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal bool isValid;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	internal bool isReady;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal Matrix4x4 worldMatrix;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB47FF0", Offset = "0xB47FF0", VA = "0xB47FF0")]
	public void CopyFrom(KeyboardState other)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xB48034", Offset = "0xB48034", VA = "0xB48034")]
	public KeyboardState()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7131E0", Offset = "0x7131E0")]
public class GvrPermissionsRequester
{
	[Token(Token = "0x2000480")]
	public class PermissionStatus
	{
		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D018", Offset = "0x71D018")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D028", Offset = "0x71D028")]
		private bool <Granted>k__BackingField;

		[Token(Token = "0x17000275")]
		public string Name
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xD97CCC", Offset = "0xD97CCC", VA = "0xD97CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72218C", Offset = "0x72218C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xD97CD4", Offset = "0xD97CD4", VA = "0xD97CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72219C", Offset = "0x72219C")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public bool Granted
		{
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xD97CDC", Offset = "0xD97CDC", VA = "0xD97CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7221AC", Offset = "0x7221AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0xD97CE4", Offset = "0xD97CE4", VA = "0xD97CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7221BC", Offset = "0x7221BC")]
			set
			{
			}
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xD97C8C", Offset = "0xD97C8C", VA = "0xD97C8C")]
		public PermissionStatus(string name, bool granted)
		{
		}
	}

	[Token(Token = "0x2000481")]
	internal class PermissionsCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] permissionNames;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<PermissionStatus[]> callback;

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xD97C00", Offset = "0xD97C00", VA = "0xD97C00")]
		internal PermissionsCallback(string[] requestedPermissions, Action<PermissionStatus[]> callback)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xD97CF0", Offset = "0xD97CF0", VA = "0xD97CF0")]
		private void onRequestPermissionResult(bool allPermissionsGranted)
		{
		}
	}

	[Token(Token = "0x4000320")]
	private const string FRAGMENT_CLASSNAME = "com.google.gvr.permissionsupport.PermissionsFragment";

	[Token(Token = "0x4000321")]
	private const string CALLBACK_CLASSNAME = "com.google.gvr.permissionsupport.PermissionsFragment$PermissionsCallback";

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrPermissionsRequester theInstance;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject permissionsFragment;

	[Token(Token = "0x170000C6")]
	public static GvrPermissionsRequester Instance
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0xD97564", Offset = "0xD97564", VA = "0xD97564")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DE0C", Offset = "0x71DE0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xD97774", Offset = "0xD97774", VA = "0xD97774")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DE4C", Offset = "0x71DE4C")]
	public bool IsPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xD97844", Offset = "0xD97844", VA = "0xD97844")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x71DE80", Offset = "0x71DE80")]
	public bool[] HasPermissionsGranted(string[] permissions)
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xD979B4", Offset = "0xD979B4", VA = "0xD979B4")]
	public bool ShouldShowRational(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xD97AB8", Offset = "0xD97AB8", VA = "0xD97AB8")]
	public void RequestPermissions(string[] permissionArray, Action<PermissionStatus[]> callback)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xD97644", Offset = "0xD97644", VA = "0xD97644")]
	protected bool InitializeFragment()
	{
		return default(bool);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xD9763C", Offset = "0xD9763C", VA = "0xD9763C")]
	public GvrPermissionsRequester()
	{
	}
}
[Token(Token = "0x200006F")]
public class Pose3D
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Matrix4x4 FLIP_Z;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716F08", Offset = "0x716F08")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716F18", Offset = "0x716F18")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x716F28", Offset = "0x716F28")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x170000C7")]
	public Vector3 Position
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x946E08", Offset = "0x946E08", VA = "0x946E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DEB4", Offset = "0x71DEB4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x946E14", Offset = "0x946E14", VA = "0x946E14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DEC4", Offset = "0x71DEC4")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x946E20", Offset = "0x946E20", VA = "0x946E20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DED4", Offset = "0x71DED4")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000355")]
		[Address(RVA = "0x946E2C", Offset = "0x946E2C", VA = "0x946E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DEE4", Offset = "0x71DEE4")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x946E38", Offset = "0x946E38", VA = "0x946E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DEF4", Offset = "0x71DEF4")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x946E54", Offset = "0x946E54", VA = "0x946E54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71DF04", Offset = "0x71DF04")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x946E70", Offset = "0x946E70", VA = "0x946E70")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x9469A8", Offset = "0x9469A8", VA = "0x9469A8")]
	public Pose3D()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x946AA0", Offset = "0x946AA0", VA = "0x946AA0")]
	public Pose3D(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x946C50", Offset = "0x946C50", VA = "0x946C50")]
	public Pose3D(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x946F18", Offset = "0x946F18", VA = "0x946F18")]
	public static Matrix4x4 FlipHandedness(Matrix4x4 matrix)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x946B20", Offset = "0x946B20", VA = "0x946B20")]
	protected void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x946C9C", Offset = "0x946C9C", VA = "0x946C9C")]
	protected void Set(Matrix4x4 matrix)
	{
	}
}
[Token(Token = "0x2000070")]
public class MutablePose3D : Pose3D
{
	[Token(Token = "0x600035D")]
	[Address(RVA = "0xDEF2D0", Offset = "0xDEF2D0", VA = "0xDEF2D0")]
	public new void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xDEF2D8", Offset = "0xDEF2D8", VA = "0xDEF2D8")]
	public new void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xDEF30C", Offset = "0xDEF30C", VA = "0xDEF30C")]
	public void SetRightHanded(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xDEF3D0", Offset = "0xDEF3D0", VA = "0xDEF3D0")]
	public MutablePose3D()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x713218", Offset = "0x713218")]
public class GvrDropdown : Dropdown
{
	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject currentBlocker;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xD8F880", Offset = "0xD8F880", VA = "0xD8F880", Slot = "42")]
	public override void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xD8F950", Offset = "0xD8F950", VA = "0xD8F950", Slot = "43")]
	public override void OnSubmit(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xD8F978", Offset = "0xD8F978", VA = "0xD8F978", Slot = "45")]
	protected override GameObject CreateBlocker(Canvas rootCanvas)
	{
		return null;
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xD8F9A0", Offset = "0xD8F9A0", VA = "0xD8F9A0", Slot = "47")]
	protected override GameObject CreateDropdownList(GameObject template)
	{
		return null;
	}

	[Token(Token = "0x6000365")]
	private static T GetOrAddComponent<T>(GameObject go, out bool addedComponent) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xD8F8A8", Offset = "0xD8F8A8", VA = "0xD8F8A8")]
	private void FixTemplateAndBlockerRaycasters()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xD8F9DC", Offset = "0xD8F9DC", VA = "0xD8F9DC")]
	private void FixRaycaster(GameObject go, bool shouldCopyProperties)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xD8FB24", Offset = "0xD8FB24", VA = "0xD8FB24")]
	private GvrPointerGraphicRaycaster GetTemplateRaycaster()
	{
		return null;
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xD8FBC0", Offset = "0xD8FBC0", VA = "0xD8FBC0")]
	private void CopyRaycasterProperties(GvrPointerGraphicRaycaster source, GvrPointerGraphicRaycaster dest)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xD8FC90", Offset = "0xD8FC90", VA = "0xD8FC90")]
	public GvrDropdown()
	{
	}
}
[Token(Token = "0x2000072")]
public static class GvrActivityHelper
{
	[Token(Token = "0x4000329")]
	public const string GVR_DLL_NAME = "gvr";

	[Token(Token = "0x400032A")]
	public const string GVR_SHIM_DLL_NAME = "gvrshim";

	[Token(Token = "0x400032B")]
	public const string PACKAGE_UNITY_PLAYER = "com.unity3d.player.UnityPlayer";

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB02058", Offset = "0xB02058", VA = "0xB02058")]
	public static AndroidJavaObject GetActivity()
	{
		return null;
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xB021B8", Offset = "0xB021B8", VA = "0xB021B8")]
	public static AndroidJavaObject GetApplicationContext(AndroidJavaObject activity)
	{
		return null;
	}
}
[Token(Token = "0x2000073")]
public class GvrDaydreamApi : IDisposable
{
	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714ECC", Offset = "0x714ECC")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AndroidJavaObject context;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<bool> callback;

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xD8F564", Offset = "0xD8F564", VA = "0xD8F564")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xD8F56C", Offset = "0xD8F56C", VA = "0xD8F56C")]
		internal void <CreateAsync>b__0()
		{
		}
	}

	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714EDC", Offset = "0x714EDC")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> callback;

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xD8F72C", Offset = "0xD8F72C", VA = "0xD8F72C")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xD8F734", Offset = "0xD8F734", VA = "0xD8F734")]
		internal void <LaunchVrHomeAsync>b__0(bool success)
		{
		}
	}

	[Token(Token = "0x400032C")]
	private const string METHOD_CREATE = "create";

	[Token(Token = "0x400032D")]
	private const string METHOD_LAUNCH_VR_HOMESCREEN = "launchVrHomescreen";

	[Token(Token = "0x400032E")]
	private const string METHOD_RUN_ON_UI_THREAD = "runOnUiThread";

	[Token(Token = "0x400032F")]
	private const string PACKAGE_DAYDREAM_API = "com.google.vr.ndk.base.DaydreamApi";

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrDaydreamApi instance;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject daydreamApiObject;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AndroidJavaClass daydreamApiClass;

	[Token(Token = "0x170000CB")]
	public static AndroidJavaObject JavaInstance
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xB0EB78", Offset = "0xB0EB78", VA = "0xB0EB78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CC")]
	public static bool IsCreated
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0xB0EC50", Offset = "0xB0EC50", VA = "0xB0EC50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xB0ECB8", Offset = "0xB0ECB8", VA = "0xB0ECB8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x71DF14", Offset = "0x71DF14")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xAFA4C0", Offset = "0xAFA4C0", VA = "0xAFA4C0")]
	public static void CreateAsync(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xB0ED34", Offset = "0xB0ED34", VA = "0xB0ED34")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x71DF4C", Offset = "0x71DF4C")]
	public static void LaunchVrHome()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xAFA348", Offset = "0xAFA348", VA = "0xAFA348")]
	public static void LaunchVrHomeAsync(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xB0ED3C", Offset = "0xB0ED3C", VA = "0xB0ED3C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xB0EBDC", Offset = "0xB0EBDC", VA = "0xB0EBDC")]
	private static void EnsureCreated(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB0ECC0", Offset = "0xB0ECC0", VA = "0xB0ECC0")]
	public GvrDaydreamApi()
	{
	}
}
[Token(Token = "0x2000074")]
public static class GvrIntent
{
	[Token(Token = "0x4000333")]
	private const string METHOD_GET_INTENT = "getIntent";

	[Token(Token = "0x4000334")]
	private const string METHOD_HASH_CODE = "hashCode";

	[Token(Token = "0x4000335")]
	private const string METHOD_INTENT_GET_DATA_STRING = "getDataString";

	[Token(Token = "0x4000336")]
	private const string METHOD_INTENT_GET_BOOLEAN_EXTRA = "getBooleanExtra";

	[Token(Token = "0x4000337")]
	private const string EXTRA_VR_LAUNCH = "android.intent.extra.VR_LAUNCH";

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xD92070", Offset = "0xD92070", VA = "0xD92070")]
	public static string GetData()
	{
		return null;
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xD9236C", Offset = "0xD9236C", VA = "0xD9236C")]
	public static bool IsLaunchedFromVr()
	{
		return default(bool);
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xD924CC", Offset = "0xD924CC", VA = "0xD924CC")]
	public static int GetIntentHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xD921A8", Offset = "0xD921A8", VA = "0xD921A8")]
	private static AndroidJavaObject GetIntent()
	{
		return null;
	}
}
[Token(Token = "0x2000075")]
public static class GvrMathHelpers
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MutablePose3D transientPose;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xD96DE4", Offset = "0xD96DE4", VA = "0xD96DE4")]
	public static Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xD96F84", Offset = "0xD96F84", VA = "0xD96F84")]
	public static Vector2 NormalizedCartesianToSpherical(Vector3 cartCoords)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xD96828", Offset = "0xD96828", VA = "0xD96828")]
	public static float EaseOutCubic(float min, float max, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xD97098", Offset = "0xD97098", VA = "0xD97098")]
	public static void GvrMatrixToUnitySpace(Matrix4x4 gvrMatrix, out Vector3 position, out Quaternion orientation)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xD971FC", Offset = "0xD971FC", VA = "0xD971FC")]
	public static Matrix4x4 ConvertFloatArrayToMatrix(float[] floatArray)
	{
		return default(Matrix4x4);
	}
}
[Token(Token = "0x2000076")]
public static class GvrUIHelpers
{
	[Token(Token = "0x6000380")]
	[Address(RVA = "0xDA0614", Offset = "0xDA0614", VA = "0xDA0614")]
	public static float GetMetersToCanvasScale(Transform canvasObject)
	{
		return default(float);
	}
}
[Token(Token = "0x2000077")]
public static class GvrVRHelpers
{
	[Token(Token = "0x6000381")]
	[Address(RVA = "0xD9D1C4", Offset = "0xD9D1C4", VA = "0xD9D1C4")]
	public static Vector2 GetViewportCenter()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xDA1A0C", Offset = "0xDA1A0C", VA = "0xDA1A0C")]
	public static Vector3 GetHeadForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xD9F0D0", Offset = "0xD9F0D0", VA = "0xD9F0D0")]
	public static Quaternion GetHeadRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xDA1AF0", Offset = "0xDA1AF0", VA = "0xDA1AF0")]
	public static Vector3 GetHeadPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xDA1B54", Offset = "0xDA1B54", VA = "0xDA1B54")]
	public static float GetRecommendedMaxLaserDistance(GvrBasePointer.RaycastMode mode)
	{
		return default(float);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xDA1B74", Offset = "0xDA1B74", VA = "0xDA1B74")]
	public static float GetRayIntersection(GvrBasePointer.RaycastMode mode)
	{
		return default(float);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xDA1B94", Offset = "0xDA1B94", VA = "0xDA1B94")]
	public static bool GetShrinkLaser(GvrBasePointer.RaycastMode mode)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000078")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x713250", Offset = "0x713250")]
public class GvrVideoPlayerTexture : MonoBehaviour
{
	[Token(Token = "0x2000484")]
	internal delegate void OnVideoEventCallback(IntPtr cbdata, int eventId);

	[Token(Token = "0x2000485")]
	internal delegate void OnExceptionCallback(string type, string msg, IntPtr cbdata);

	[Token(Token = "0x2000486")]
	public enum VideoType
	{
		[Token(Token = "0x4001BFA")]
		Dash = 0,
		[Token(Token = "0x4001BFB")]
		HLS = 2,
		[Token(Token = "0x4001BFC")]
		Other = 3
	}

	[Token(Token = "0x2000487")]
	public enum VideoResolution
	{
		[Token(Token = "0x4001BFE")]
		Lowest = 1,
		[Token(Token = "0x4001BFF")]
		_720 = 720,
		[Token(Token = "0x4001C00")]
		_1080 = 1080,
		[Token(Token = "0x4001C01")]
		_2048 = 2048,
		[Token(Token = "0x4001C02")]
		Highest = 4096
	}

	[Token(Token = "0x2000488")]
	public enum VideoPlayerState
	{
		[Token(Token = "0x4001C04")]
		Idle = 1,
		[Token(Token = "0x4001C05")]
		Preparing,
		[Token(Token = "0x4001C06")]
		Buffering,
		[Token(Token = "0x4001C07")]
		Ready,
		[Token(Token = "0x4001C08")]
		Ended
	}

	[Token(Token = "0x2000489")]
	public enum VideoEvents
	{
		[Token(Token = "0x4001C0A")]
		VideoReady = 1,
		[Token(Token = "0x4001C0B")]
		VideoStartPlayback,
		[Token(Token = "0x4001C0C")]
		VideoFormatChanged,
		[Token(Token = "0x4001C0D")]
		VideoSurfaceSet,
		[Token(Token = "0x4001C0E")]
		VideoSizeChanged
	}

	[Token(Token = "0x200048A")]
	public enum StereoMode
	{
		[Token(Token = "0x4001C10")]
		NoValue = -1,
		[Token(Token = "0x4001C11")]
		Mono,
		[Token(Token = "0x4001C12")]
		TopBottom,
		[Token(Token = "0x4001C13")]
		LeftRight
	}

	[Token(Token = "0x200048B")]
	private enum RenderCommand
	{
		[Token(Token = "0x4001C15")]
		None = -1,
		[Token(Token = "0x4001C16")]
		InitializePlayer,
		[Token(Token = "0x4001C17")]
		UpdateVideo,
		[Token(Token = "0x4001C18")]
		RenderMono,
		[Token(Token = "0x4001C19")]
		RenderLeftEye,
		[Token(Token = "0x4001C1A")]
		RenderRightEye,
		[Token(Token = "0x4001C1B")]
		Shutdown
	}

	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714EEC", Offset = "0x714EEC")]
	private sealed class <>c__DisplayClass118_0
	{
		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GvrVideoPlayerTexture player;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int eventId;

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xDA50DC", Offset = "0xDA50DC", VA = "0xDA50DC")]
		public <>c__DisplayClass118_0()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xDA6128", Offset = "0xDA6128", VA = "0xDA6128")]
		internal void <InternalOnVideoEventCallback>b__0()
		{
		}
	}

	[Token(Token = "0x200048D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714EFC", Offset = "0x714EFC")]
	private sealed class <>c__DisplayClass119_0
	{
		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GvrVideoPlayerTexture player;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string type;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string msg;

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xDA50E4", Offset = "0xDA50E4", VA = "0xDA50E4")]
		public <>c__DisplayClass119_0()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xDA6148", Offset = "0xDA6148", VA = "0xDA6148")]
		internal void <InternalOnExceptionCallback>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200048E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F0C", Offset = "0x714F0C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<string, string> <>9__121_1;

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xDA607C", Offset = "0xDA607C", VA = "0xDA607C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xDA6084", Offset = "0xDA6084", VA = "0xDA6084")]
		internal void <CreatePlayer>b__121_1(string type, string msg)
		{
		}
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text statusText;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoType videoType;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string videoURL;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string videoContentID;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string videoProviderId;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VideoResolution initialResolution;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool adjustAspectRatio;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool useSecurePath;

	[Token(Token = "0x4000341")]
	private const string DLL_NAME = "gvrvideo";

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Queue<Action> executeOnMainThread;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IntPtr videoPlayerPtr;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int videoPlayerEventBase;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Texture initialTexture;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture surfaceTexture;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] videoMatrixRaw;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Matrix4x4 videoMatrix;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int videoMatrixPropertyId;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private long lastVideoTimestamp;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool initialized;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int texWidth;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int texHeight;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private long lastBufferedPosition;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float framecount;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Renderer screen;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private IntPtr renderEventFunction;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool playOnResume;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Action<int>> onEventCallbacks;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<Action<string, string>> onExceptionCallbacks;

	[Token(Token = "0x170000CD")]
	public bool VideoReady
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0xDA22B4", Offset = "0xDA22B4", VA = "0xDA22B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000CE")]
	public long CurrentPosition
	{
		[Token(Token = "0x6000389")]
		[Address(RVA = "0xDA23C4", Offset = "0xDA23C4", VA = "0xDA23C4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600038A")]
		[Address(RVA = "0xDA24CC", Offset = "0xDA24CC", VA = "0xDA24CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public long VideoDuration
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0xDA25DC", Offset = "0xDA25DC", VA = "0xDA25DC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000D0")]
	public long BufferedPosition
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0xDA26E4", Offset = "0xDA26E4", VA = "0xDA26E4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000D1")]
	public int BufferedPercentage
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0xDA27EC", Offset = "0xDA27EC", VA = "0xDA27EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D2")]
	public bool IsPaused
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0xDA28F4", Offset = "0xDA28F4", VA = "0xDA28F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D3")]
	public VideoPlayerState PlayerState
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0xDA2A0C", Offset = "0xDA2A0C", VA = "0xDA2A0C")]
		get
		{
			return default(VideoPlayerState);
		}
	}

	[Token(Token = "0x170000D4")]
	public int MaxVolume
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0xDA2B14", Offset = "0xDA2B14", VA = "0xDA2B14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D5")]
	public int CurrentVolume
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0xDA2C1C", Offset = "0xDA2C1C", VA = "0xDA2C1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000392")]
		[Address(RVA = "0xDA2D24", Offset = "0xDA2D24", VA = "0xDA2D24")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public StereoMode CurrentStereoMode
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0xDA2DA0", Offset = "0xDA2DA0", VA = "0xDA2DA0")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x170000D7")]
	public bool HasProjection
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0xDA2EA8", Offset = "0xDA2EA8", VA = "0xDA2EA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D8")]
	public Renderer Screen
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0xDA2FB8", Offset = "0xDA2FB8", VA = "0xDA2FB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000396")]
		[Address(RVA = "0xDA2FC0", Offset = "0xDA2FC0", VA = "0xDA2FC0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public Texture CurrentFrameTexture
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0xDA3118", Offset = "0xDA3118", VA = "0xDA3118")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DA")]
	public int Width
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0xDA3120", Offset = "0xDA3120", VA = "0xDA3120")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DB")]
	public int Height
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0xDA3128", Offset = "0xDA3128", VA = "0xDA3128")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DC")]
	public float AspectRatio
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xDA3130", Offset = "0xDA3130", VA = "0xDA3130")]
		get
		{
			return default(float);
		}
	}

	[PreserveSig]
	[Token(Token = "0x600039B")]
	[Address(RVA = "0xDA3154", Offset = "0xDA3154", VA = "0xDA3154")]
	public static extern IntPtr CreateVideoPlayer();

	[PreserveSig]
	[Token(Token = "0x600039C")]
	[Address(RVA = "0xDA31C8", Offset = "0xDA31C8", VA = "0xDA31C8")]
	public static extern void DestroyVideoPlayer(IntPtr videoPlayerPtr);

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xDA3244", Offset = "0xDA3244", VA = "0xDA3244")]
	public void SetDisplayTexture(Texture texture)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xDA3354", Offset = "0xDA3354", VA = "0xDA3354")]
	public void CleanupVideo()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xDA34D8", Offset = "0xDA34D8", VA = "0xDA34D8")]
	public void ReInitializeVideo()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xDA3BBC", Offset = "0xDA3BBC", VA = "0xDA3BBC")]
	public void RestartVideo()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xDA2D28", Offset = "0xDA2D28", VA = "0xDA2D28")]
	public void SetCurrentVolume(int val)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xDA385C", Offset = "0xDA385C", VA = "0xDA385C")]
	public bool Init()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xDA4164", Offset = "0xDA4164", VA = "0xDA4164")]
	public bool Play()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xDA42E4", Offset = "0xDA42E4", VA = "0xDA42E4")]
	public bool Pause()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xDA442C", Offset = "0xDA442C", VA = "0xDA442C")]
	public void RemoveOnVideoEventCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xDA3CC4", Offset = "0xDA3CC4", VA = "0xDA3CC4")]
	public void SetOnVideoEventCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xDA4570", Offset = "0xDA4570", VA = "0xDA4570")]
	public void SetOnExceptionCallback(Action<string, string> callback)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xDA44B0", Offset = "0xDA44B0", VA = "0xDA44B0")]
	internal static IntPtr ToIntPtr(object obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xDA4730", Offset = "0xDA4730", VA = "0xDA4730")]
	internal void FireVideoEvent(int eventId)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xDA48EC", Offset = "0xDA48EC", VA = "0xDA48EC")]
	internal void FireOnException(string type, string msg)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xDA3DD4", Offset = "0xDA3DD4", VA = "0xDA3DD4")]
	internal string ProcessURL()
	{
		return null;
	}

	[PreserveSig]
	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xDA4B08", Offset = "0xDA4B08", VA = "0xDA4B08")]
	private static extern IntPtr GetRenderEventFunc();

	[PreserveSig]
	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xDA4B7C", Offset = "0xDA4B7C", VA = "0xDA4B7C")]
	private static extern void SetExternalTextures(IntPtr videoPlayerPtr, int[] texIds, int size, int w, int h);

	[PreserveSig]
	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xDA4C34", Offset = "0xDA4C34", VA = "0xDA4C34")]
	private static extern IntPtr GetRenderableTextureId(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xDA4CB0", Offset = "0xDA4CB0", VA = "0xDA4CB0")]
	private static extern int GetExternalSurfaceTextureId(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xDA4D2C", Offset = "0xDA4D2C", VA = "0xDA4D2C")]
	private static extern void GetVideoMatrix(IntPtr videoPlayerPtr, float[] videoMatrix);

	[PreserveSig]
	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xDA4DC4", Offset = "0xDA4DC4", VA = "0xDA4DC4")]
	private static extern long GetVideoTimestampNs(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xDA4E40", Offset = "0xDA4E40", VA = "0xDA4E40")]
	private static extern int GetVideoPlayerEventBase(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xDA3E40", Offset = "0xDA3E40", VA = "0xDA3E40")]
	private static extern IntPtr InitVideoPlayer(IntPtr videoPlayerPtr, int videoType, string videoURL, string contentID, string providerId, bool useSecurePath, bool useExisting);

	[PreserveSig]
	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xDA3FDC", Offset = "0xDA3FDC", VA = "0xDA3FDC")]
	private static extern void SetInitialResolution(IntPtr videoPlayerPtr, int initialResolution);

	[PreserveSig]
	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xDA2A98", Offset = "0xDA2A98", VA = "0xDA2A98")]
	private static extern int GetPlayerState(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xDA4EBC", Offset = "0xDA4EBC", VA = "0xDA4EBC")]
	private static extern int GetWidth(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xDA4F34", Offset = "0xDA4F34", VA = "0xDA4F34")]
	private static extern int GetHeight(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xDA4268", Offset = "0xDA4268", VA = "0xDA4268")]
	private static extern int PlayVideo(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xDA43B0", Offset = "0xDA43B0", VA = "0xDA43B0")]
	private static extern int PauseVideo(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xDA2340", Offset = "0xDA2340", VA = "0xDA2340")]
	private static extern bool IsVideoReady(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xDA2988", Offset = "0xDA2988", VA = "0xDA2988")]
	private static extern bool IsVideoPaused(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xDA2668", Offset = "0xDA2668", VA = "0xDA2668")]
	private static extern long GetDuration(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xDA2770", Offset = "0xDA2770", VA = "0xDA2770")]
	private static extern long GetBufferedPosition(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xDA2450", Offset = "0xDA2450", VA = "0xDA2450")]
	private static extern long GetCurrentPosition(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xDA254C", Offset = "0xDA254C", VA = "0xDA254C")]
	private static extern void SetCurrentPosition(IntPtr videoPlayerPtr, long pos);

	[PreserveSig]
	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xDA2878", Offset = "0xDA2878", VA = "0xDA2878")]
	private static extern int GetBufferedPercentage(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xDA2BA0", Offset = "0xDA2BA0", VA = "0xDA2BA0")]
	private static extern int GetMaxVolume(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xDA2CA8", Offset = "0xDA2CA8", VA = "0xDA2CA8")]
	private static extern int GetCurrentVolume(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xDA3F4C", Offset = "0xDA3F4C", VA = "0xDA3F4C")]
	private static extern void SetCurrentVolume(IntPtr videoPlayerPtr, int value);

	[PreserveSig]
	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xDA2E2C", Offset = "0xDA2E2C", VA = "0xDA2E2C")]
	private static extern int GetStereoMode(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xDA2F34", Offset = "0xDA2F34", VA = "0xDA2F34")]
	private static extern bool HasProjectionData(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xDA4FB0", Offset = "0xDA4FB0", VA = "0xDA4FB0")]
	private static extern bool SetVideoPlayerSupportClassname(IntPtr videoPlayerPtr, string classname);

	[PreserveSig]
	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xDA5060", Offset = "0xDA5060", VA = "0xDA5060")]
	private static extern IntPtr GetRawPlayer(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xDA44D0", Offset = "0xDA44D0", VA = "0xDA44D0")]
	private static extern void SetOnVideoEventCallback(IntPtr videoPlayerPtr, OnVideoEventCallback callback, IntPtr callback_arg);

	[PreserveSig]
	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xDA4690", Offset = "0xDA4690", VA = "0xDA4690")]
	private static extern void SetOnExceptionCallback(IntPtr videoPlayerPtr, OnExceptionCallback callback, IntPtr callback_arg);

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xDA1BA0", Offset = "0xDA1BA0", VA = "0xDA1BA0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x71DF84", Offset = "0x71DF84")]
	private static void InternalOnVideoEventCallback(IntPtr cbdata, int eventId)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xDA1F24", Offset = "0xDA1F24", VA = "0xDA1F24")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x71DFE8", Offset = "0x71DFE8")]
	private static void InternalOnExceptionCallback(string type, string msg, IntPtr cbdata)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xDA50EC", Offset = "0xDA50EC", VA = "0xDA50EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xDA3594", Offset = "0xDA3594", VA = "0xDA3594")]
	private void CreatePlayer()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xDA5180", Offset = "0xDA5180", VA = "0xDA5180")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xDA5240", Offset = "0xDA5240", VA = "0xDA5240")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xDA5244", Offset = "0xDA5244", VA = "0xDA5244")]
	private void OnApplicationPause(bool bPause)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xDA5334", Offset = "0xDA5334", VA = "0xDA5334")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xDA573C", Offset = "0xDA573C", VA = "0xDA573C")]
	private void OnRestartVideoEvent(int eventId)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xDA5810", Offset = "0xDA5810", VA = "0xDA5810")]
	private void AdjustAspectRatio()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xDA5910", Offset = "0xDA5910", VA = "0xDA5910")]
	private void UpdateStatusText()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xDA406C", Offset = "0xDA406C", VA = "0xDA406C")]
	private void IssuePlayerEvent(RenderCommand evt)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xDA5CC0", Offset = "0xDA5CC0", VA = "0xDA5CC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xDA5EC4", Offset = "0xDA5EC4", VA = "0xDA5EC4")]
	public GvrVideoPlayerTexture()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xDA5F50", Offset = "0xDA5F50", VA = "0xDA5F50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E04C", Offset = "0x71E04C")]
	private void <CreatePlayer>b__121_0(int eventId)
	{
	}
}
[Token(Token = "0x2000079")]
public class ButtonVirtual : MonoBehaviour, IDragHandler, IEventSystemHandler, IPointerUpHandler, IPointerDownHandler
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVirtualManager controlerVirtualScript;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private new string name;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RotateCameraByTouchYOnly rotateCamSript;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x916698", Offset = "0x916698", VA = "0x916698")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x916718", Offset = "0x916718", VA = "0x916718", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x91671C", Offset = "0x91671C", VA = "0x91671C", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x916744", Offset = "0x916744", VA = "0x916744", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x91676C", Offset = "0x91676C", VA = "0x91676C")]
	public ButtonVirtual()
	{
	}
}
[Token(Token = "0x200007A")]
public class ChangeActiveButton : MonoBehaviour
{
	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Excavator exScript;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button buttonScript;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image imageScript;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool status;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string buttonName;

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x91A418", Offset = "0x91A418", VA = "0x91A418")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x91A4F4", Offset = "0x91A4F4", VA = "0x91A4F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x91A5A8", Offset = "0x91A5A8", VA = "0x91A5A8")]
	public void setButtonStatus(bool _value)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x91A684", Offset = "0x91A684", VA = "0x91A684")]
	public ChangeActiveButton()
	{
	}
}
[Token(Token = "0x200007B")]
public class CheckActiveDumpSoil : MonoBehaviour
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button buttonScript;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image imageScript;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool status;

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x91D108", Offset = "0x91D108", VA = "0x91D108")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x91D178", Offset = "0x91D178", VA = "0x91D178")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x91D22C", Offset = "0x91D22C", VA = "0x91D22C")]
	private void setButtonStatus(bool _value)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x91D308", Offset = "0x91D308", VA = "0x91D308")]
	public CheckActiveDumpSoil()
	{
	}
}
[Token(Token = "0x200007C")]
public class CheckFirstUse : MonoBehaviour
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject BoxFirstUse;

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x91E4AC", Offset = "0x91E4AC", VA = "0x91E4AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x91E4CC", Offset = "0x91E4CC", VA = "0x91E4CC")]
	public void CancelUseBox()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x91E4EC", Offset = "0x91E4EC", VA = "0x91E4EC")]
	public void ShowUseBox()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x91E50C", Offset = "0x91E50C", VA = "0x91E50C")]
	public CheckFirstUse()
	{
	}
}
[Token(Token = "0x200007D")]
public class CheckRotateCameraByTouch : MonoBehaviour, IDragHandler, IEventSystemHandler, IPointerUpHandler, IPointerDownHandler
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RotateCameraByTouchYOnly rotateCamSript;

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x920018", Offset = "0x920018", VA = "0x920018")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x92007C", Offset = "0x92007C", VA = "0x92007C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x920080", Offset = "0x920080", VA = "0x920080", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x920084", Offset = "0x920084", VA = "0x920084", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x920088", Offset = "0x920088", VA = "0x920088", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x92008C", Offset = "0x92008C", VA = "0x92008C")]
	public CheckRotateCameraByTouch()
	{
	}
}
[Token(Token = "0x200007E")]
public class ConstraintRotateCamera : MonoBehaviour
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform[] ConstraintAreas;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RotateCameraByTouchYOnly rotateCamSript;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x923F24", Offset = "0x923F24", VA = "0x923F24")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x923F88", Offset = "0x923F88", VA = "0x923F88")]
	public bool IsTouchInConstraintArea(Touch touch)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x924088", Offset = "0x924088", VA = "0x924088")]
	public ConstraintRotateCamera()
	{
	}
}
[Token(Token = "0x200007F")]
public class ControllerVirtualManager : MonoBehaviour
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] rotatePress;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject basicMode;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject kidMode;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string m_sence;

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xAB6168", Offset = "0xAB6168", VA = "0xAB6168")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xAB6288", Offset = "0xAB6288", VA = "0xAB6288")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xAB6448", Offset = "0xAB6448", VA = "0xAB6448")]
	public void ChangePressKey(string _name, bool _value)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xAB637C", Offset = "0xAB637C", VA = "0xAB637C")]
	public void SetControllerMode()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xAB66BC", Offset = "0xAB66BC", VA = "0xAB66BC")]
	public ControllerVirtualManager()
	{
	}
}
[Token(Token = "0x2000080")]
public class FullScreenConstraint : MonoBehaviour
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera mainCam;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RotateCameraByTouchYOnly rotateCameraScript;

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xBFFB54", Offset = "0xBFFB54", VA = "0xBFFB54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xBFFBBC", Offset = "0xBFFBBC", VA = "0xBFFBBC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xBFFC50", Offset = "0xBFFC50", VA = "0xBFFC50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xBFFCE4", Offset = "0xBFFCE4", VA = "0xBFFCE4")]
	public FullScreenConstraint()
	{
	}
}
[Token(Token = "0x2000081")]
public class Joystick : MonoBehaviour, IDragHandler, IEventSystemHandler, IPointerUpHandler, IPointerDownHandler
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x716F68", Offset = "0x716F68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x716F68", Offset = "0x716F68")]
	public float handleLimit;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public JoystickMode joystickMode;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 inputVector;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x716FBC", Offset = "0x716FBC")]
	public RectTransform background;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform handle;

	[Token(Token = "0x170000DD")]
	public float Horizontal
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xB47EB4", Offset = "0xB47EB4", VA = "0xB47EB4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000DE")]
	public float Vertical
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xB47EBC", Offset = "0xB47EBC", VA = "0xB47EBC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000DF")]
	public Vector2 Direction
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xB47EC4", Offset = "0xB47EC4", VA = "0xB47EC4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xB47EF4", Offset = "0xB47EF4", VA = "0xB47EF4", Slot = "7")]
	public virtual void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xB47EF8", Offset = "0xB47EF8", VA = "0xB47EF8", Slot = "8")]
	public virtual void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xB47EFC", Offset = "0xB47EFC", VA = "0xB47EFC", Slot = "9")]
	public virtual void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xB47F00", Offset = "0xB47F00", VA = "0xB47F00")]
	protected void ClampJoystick()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xB47F74", Offset = "0xB47F74", VA = "0xB47F74")]
	public Joystick()
	{
	}
}
[Token(Token = "0x2000082")]
public enum JoystickMode
{
	[Token(Token = "0x4000372")]
	AllAxis,
	[Token(Token = "0x4000373")]
	Horizontal,
	[Token(Token = "0x4000374")]
	Vertical
}
[Token(Token = "0x2000083")]
public class FixedJoystick : Joystick
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 joystickPosition;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cam;

	[Token(Token = "0x14000010")]
	public event Action onDrag
	{
		[Token(Token = "0x6000405")]
		[Address(RVA = "0xBFC628", Offset = "0xBFC628", VA = "0xBFC628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E05C", Offset = "0x71E05C")]
		add
		{
		}
		[Token(Token = "0x6000406")]
		[Address(RVA = "0xBFC6CC", Offset = "0xBFC6CC", VA = "0xBFC6CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E06C", Offset = "0x71E06C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action onPointerDown
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0xBFC770", Offset = "0xBFC770", VA = "0xBFC770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E07C", Offset = "0x71E07C")]
		add
		{
		}
		[Token(Token = "0x6000408")]
		[Address(RVA = "0xBFC814", Offset = "0xBFC814", VA = "0xBFC814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E08C", Offset = "0x71E08C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action onPointerUp
	{
		[Token(Token = "0x6000409")]
		[Address(RVA = "0xBFC8B8", Offset = "0xBFC8B8", VA = "0xBFC8B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E09C", Offset = "0x71E09C")]
		add
		{
		}
		[Token(Token = "0x600040A")]
		[Address(RVA = "0xBFC95C", Offset = "0xBFC95C", VA = "0xBFC95C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E0AC", Offset = "0x71E0AC")]
		remove
		{
		}
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xBFCA00", Offset = "0xBFCA00", VA = "0xBFCA00")]
	private void Start()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xBFCA04", Offset = "0xBFCA04", VA = "0xBFCA04")]
	private void Update()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xBFCAFC", Offset = "0xBFCAFC", VA = "0xBFCAFC", Slot = "7")]
	public override void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xBFCCBC", Offset = "0xBFCCBC", VA = "0xBFCCBC", Slot = "8")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xBFCCFC", Offset = "0xBFCCFC", VA = "0xBFCCFC", Slot = "9")]
	public override void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xBFCD2C", Offset = "0xBFCD2C", VA = "0xBFCD2C")]
	public void ResetJoystick()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xBFCDB4", Offset = "0xBFCDB4", VA = "0xBFCDB4")]
	public FixedJoystick()
	{
	}
}
[Token(Token = "0x2000084")]
public class FloatingJoystick : Joystick
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 joystickCenter;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xBFDC54", Offset = "0xBFDC54", VA = "0xBFDC54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xBFDC84", Offset = "0xBFDC84", VA = "0xBFDC84", Slot = "7")]
	public override void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xBFDE34", Offset = "0xBFDE34", VA = "0xBFDE34", Slot = "8")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xBFDF1C", Offset = "0xBFDF1C", VA = "0xBFDF1C", Slot = "9")]
	public override void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xBFDFAC", Offset = "0xBFDFAC", VA = "0xBFDFAC")]
	public FloatingJoystick()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713288", Offset = "0x713288")]
public class HumanPlayerJoystick : MonoBehaviour
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isPointerDown;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FixedJoystick fixedJoystick;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HumanPlayerControl playerScript;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xDA8294", Offset = "0xDA8294", VA = "0xDA8294")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xDA831C", Offset = "0xDA831C", VA = "0xDA831C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xDA83E4", Offset = "0xDA83E4", VA = "0xDA83E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xDA84AC", Offset = "0xDA84AC", VA = "0xDA84AC")]
	private void OnPointerDown()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xDA84B8", Offset = "0xDA84B8", VA = "0xDA84B8")]
	private void OnPointerUp()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xDA84C0", Offset = "0xDA84C0", VA = "0xDA84C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xDA8500", Offset = "0xDA8500", VA = "0xDA8500")]
	public HumanPlayerJoystick()
	{
	}
}
[Token(Token = "0x2000086")]
public class VariableJoystick : Joystick
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x717034", Offset = "0x717034")]
	public bool isFixed;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector2 fixedScreenPosition;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 joystickCenter;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xD5D200", Offset = "0xD5D200", VA = "0xD5D200")]
	private void Start()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xD5D364", Offset = "0xD5D364", VA = "0xD5D364")]
	public void ChangeFixed(bool joystickFixed)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xD5D39C", Offset = "0xD5D39C", VA = "0xD5D39C", Slot = "7")]
	public override void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xD5D54C", Offset = "0xD5D54C", VA = "0xD5D54C", Slot = "8")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xD5D63C", Offset = "0xD5D63C", VA = "0xD5D63C", Slot = "9")]
	public override void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xD5D210", Offset = "0xD5D210", VA = "0xD5D210")]
	private void OnFixed()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xD5D2C8", Offset = "0xD5D2C8", VA = "0xD5D2C8")]
	private void OnFloat()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xD5D6EC", Offset = "0xD5D6EC", VA = "0xD5D6EC")]
	public VariableJoystick()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7132EC", Offset = "0x7132EC")]
public class YumboJoystick : MonoBehaviour
{
	[Token(Token = "0x4000381")]
	private const float ANGLE_JOYSTICK = 60f;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject Yumbo;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FixedJoystick fixedJoystick;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RotateCameraByTouchYOnly cameraRotateScript;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool a;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[HideInInspector]
	public bool d;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[HideInInspector]
	public bool s;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[HideInInspector]
	public bool w;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool i;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[HideInInspector]
	public bool l;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[HideInInspector]
	public bool k;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	[HideInInspector]
	public bool j;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isPointerUp;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private new string name;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xD7122C", Offset = "0xD7122C", VA = "0xD7122C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xD712A8", Offset = "0xD712A8", VA = "0xD712A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xD713AC", Offset = "0xD713AC", VA = "0xD713AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xD714B0", Offset = "0xD714B0", VA = "0xD714B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xD71578", Offset = "0xD71578", VA = "0xD71578")]
	private void Update()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xD715B0", Offset = "0xD715B0", VA = "0xD715B0")]
	private void OnDrag()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xD715B4", Offset = "0xD715B4", VA = "0xD715B4")]
	private void OnPointerDown()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xD715D4", Offset = "0xD715D4", VA = "0xD715D4")]
	private void OnPointerUp()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xD715F8", Offset = "0xD715F8", VA = "0xD715F8")]
	public YumboJoystick()
	{
	}
}
[Token(Token = "0x2000088")]
public class RotateCameraByTouchYOnly : MonoBehaviour
{
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F1C", Offset = "0x714F1C")]
	private sealed class <ValidCameras>d__23 : IEnumerator<Camera>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera <>2__current;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000277")]
		private Camera System.Collections.Generic.IEnumerator<UnityEngine.Camera>.Current
		{
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0x9581A0", Offset = "0x9581A0", VA = "0x9581A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0x958208", Offset = "0x958208", VA = "0x958208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x957F6C", Offset = "0x957F6C", VA = "0x957F6C")]
		[DebuggerHidden]
		public <ValidCameras>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x9580A0", Offset = "0x9580A0", VA = "0x9580A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x9580A4", Offset = "0x9580A4", VA = "0x9580A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x9581A8", Offset = "0x9581A8", VA = "0x9581A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000390")]
	private const string AXIS_MOUSE_X = "Mouse X";

	[Token(Token = "0x4000391")]
	private const string AXIS_MOUSE_Y = "Mouse Y";

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 NECK_OFFSET;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float mouseX;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseY;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseZ;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float horizontalInput;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float verticalInput;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7170EC", Offset = "0x7170EC")]
	private Vector3 <HeadPosition>k__BackingField;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7170FC", Offset = "0x7170FC")]
	private Quaternion <HeadRotation>k__BackingField;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform[] ConstraintAreas;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool canRotateCamera;

	[Token(Token = "0x170000E0")]
	public Vector3 HeadPosition
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x9577E4", Offset = "0x9577E4", VA = "0x9577E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E0BC", Offset = "0x71E0BC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x9577F0", Offset = "0x9577F0", VA = "0x9577F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E0CC", Offset = "0x71E0CC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public Quaternion HeadRotation
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x9577FC", Offset = "0x9577FC", VA = "0x9577FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E0DC", Offset = "0x71E0DC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x957808", Offset = "0x957808", VA = "0x957808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E0EC", Offset = "0x71E0EC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x957814", Offset = "0x957814", VA = "0x957814")]
	private void Start()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x957820", Offset = "0x957820", VA = "0x957820")]
	private void Update()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x957824", Offset = "0x957824", VA = "0x957824")]
	public void UpdateEditorEmulation()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x957C90", Offset = "0x957C90", VA = "0x957C90")]
	private bool IsTouchInConstraintArea(Touch touch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x957D94", Offset = "0x957D94", VA = "0x957D94")]
	private void UpdateHeadPositionAndRotation()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x957F0C", Offset = "0x957F0C", VA = "0x957F0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E0FC", Offset = "0x71E0FC")]
	private IEnumerator<Camera> ValidCameras()
	{
		return null;
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x957F98", Offset = "0x957F98", VA = "0x957F98")]
	private bool CanChangeYawPitch()
	{
		return default(bool);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x957FCC", Offset = "0x957FCC", VA = "0x957FCC")]
	private bool CanChangeRoll()
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x958000", Offset = "0x958000", VA = "0x958000")]
	public RotateCameraByTouchYOnly()
	{
	}
}
[Token(Token = "0x2000089")]
public class SetUpMenu : MonoBehaviour
{
	[Token(Token = "0x600043D")]
	[Address(RVA = "0x8E90E8", Offset = "0x8E90E8", VA = "0x8E90E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x8E922C", Offset = "0x8E922C", VA = "0x8E922C")]
	public SetUpMenu()
	{
	}
}
[Token(Token = "0x200008A")]
public class ButtonGuide : NextStepCondition
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CommandID commandID;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> listButton;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string description;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string signal;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isRun;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image image;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color buttonColor;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeWatting;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timePress;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TutorialPanel tutorialPanelScript;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Excavator exScript;

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x9153FC", Offset = "0x9153FC", VA = "0x9153FC")]
	public ButtonGuide(TutorialPanel _tutorialPanel, CommandID _commandID, List<GameObject> _listButton, string _description, string _signal, Excavator _exScript)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x915460", Offset = "0x915460", VA = "0x915460", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x915858", Offset = "0x915858", VA = "0x915858")]
	private void ChangeDescriptionJIS()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x915920", Offset = "0x915920", VA = "0x915920", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x915F98", Offset = "0x915F98", VA = "0x915F98", Slot = "6")]
	public override void OnComplete()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x915EAC", Offset = "0x915EAC", VA = "0x915EAC")]
	private bool StatusExc(string _signal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x9160D4", Offset = "0x9160D4", VA = "0x9160D4")]
	private bool YumboDriveStatus(string _val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x9156D0", Offset = "0x9156D0", VA = "0x9156D0")]
	private void CacheButtons(List<GameObject> _list)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x915FA0", Offset = "0x915FA0", VA = "0x915FA0")]
	private void ResetButtons(List<GameObject> _list)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x9159E0", Offset = "0x9159E0", VA = "0x9159E0")]
	private void EffectButton(List<GameObject> _list)
	{
	}
}
[Token(Token = "0x200008B")]
public class ChoosePattern : NextStepCondition
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject tutorialPanel;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TutorialPanel tutorialPanelScript;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TutorialManager tutorialManager;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x9210E4", Offset = "0x9210E4", VA = "0x9210E4")]
	public ChoosePattern(GameObject _tutorialPanel, TutorialManager _tutorialManager)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x921120", Offset = "0x921120", VA = "0x921120", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x9211EC", Offset = "0x9211EC", VA = "0x9211EC", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x921208", Offset = "0x921208", VA = "0x921208", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x200008C")]
public class TutorialManager : StageManager
{
	[Token(Token = "0x2000490")]
	private class ButtonAction
	{
		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CommandID commandID;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> listButton;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string signal;

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x8FD760", Offset = "0x8FD760", VA = "0x8FD760")]
		public ButtonAction(CommandID _commandID, List<GameObject> _listButton, string _description, string _signal)
		{
		}
	}

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject arrowUpLeft;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject arrowDownLeft;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject arrowUpRight;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject arrowDownRight;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject handleLeft;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject handleRight;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject tutorialPanel;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<ButtonAction> ListAction;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> buttons;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Excavator exScript;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private new int index;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isUpdate;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TutorialPanel tutorialPanelScript;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x8FC9F4", Offset = "0x8FC9F4", VA = "0x8FC9F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x8FCA6C", Offset = "0x8FCA6C", VA = "0x8FCA6C")]
	private new void Awake()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x8FD25C", Offset = "0x8FD25C", VA = "0x8FD25C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x8FD49C", Offset = "0x8FD49C", VA = "0x8FD49C")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x8FD4C4", Offset = "0x8FD4C4", VA = "0x8FD4C4")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x8FD59C", Offset = "0x8FD59C", VA = "0x8FD59C")]
	private void FinishActivity()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x8FCAF4", Offset = "0x8FCAF4", VA = "0x8FCAF4")]
	private void CacheObjects()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x8FCC44", Offset = "0x8FCC44", VA = "0x8FCC44")]
	public void ConfigListAction()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x8FD688", Offset = "0x8FD688", VA = "0x8FD688")]
	private List<GameObject> ConvertToList(GameObject _button1, [Optional] GameObject _button2)
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x8FD7B0", Offset = "0x8FD7B0", VA = "0x8FD7B0")]
	public TutorialManager()
	{
	}
}
[Token(Token = "0x200008D")]
public class TutorialPanel : MonoBehaviour
{
	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool tutorialStatus;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isChoosePattern;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject okButton;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject backButton;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject jisButton;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject komatsuButton;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Excavator exScript;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SettingPatternLayer settingPattern;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x8FD820", Offset = "0x8FD820", VA = "0x8FD820")]
	private void Start()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x8FD8A4", Offset = "0x8FD8A4", VA = "0x8FD8A4")]
	public void ChangeTutorialStatus(bool _val)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x8FD648", Offset = "0x8FD648", VA = "0x8FD648")]
	public void ChangeOKButtonActive(bool _val)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x8FD668", Offset = "0x8FD668", VA = "0x8FD668")]
	public void ChangeBackButtonActive(bool _val)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x8FD8B0", Offset = "0x8FD8B0", VA = "0x8FD8B0")]
	public void ChangeJISButtonActive(bool _val)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x8FD8D0", Offset = "0x8FD8D0", VA = "0x8FD8D0")]
	public void ChangeKomatsuButtonActive(bool _val)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x8FD8F0", Offset = "0x8FD8F0", VA = "0x8FD8F0")]
	public void ChangePattern(string _val)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x8FD9BC", Offset = "0x8FD9BC", VA = "0x8FD9BC")]
	public TutorialPanel()
	{
	}
}
[Token(Token = "0x200008E")]
public class MainMenuController : MonoBehaviour
{
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string newGameSceneName;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int quickSaveSlotID;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7171BC", Offset = "0x7171BC")]
	public GameObject MainOptionsPanel;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject StartGameOptionsPanel;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject GamePanel;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ControlsPanel;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject GfxPanel;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject LoadGamePanel;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xC0EE74", Offset = "0xC0EE74", VA = "0xC0EE74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xC0EEE0", Offset = "0xC0EEE0", VA = "0xC0EEE0")]
	public void openOptions()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xC0EF68", Offset = "0xC0EF68", VA = "0xC0EF68")]
	public void openStartGameOptions()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xC0EFEC", Offset = "0xC0EFEC", VA = "0xC0EFEC")]
	public void openOptions_Game()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xC0F098", Offset = "0xC0F098", VA = "0xC0F098")]
	public void openOptions_Controls()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xC0F144", Offset = "0xC0F144", VA = "0xC0F144")]
	public void openOptions_Gfx()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xC0F1F0", Offset = "0xC0F1F0", VA = "0xC0F1F0")]
	public void openContinue_Load()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xC0F29C", Offset = "0xC0F29C", VA = "0xC0F29C")]
	public void newGame()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xC0F354", Offset = "0xC0F354", VA = "0xC0F354")]
	public void back_options()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xC0F3B0", Offset = "0xC0F3B0", VA = "0xC0F3B0")]
	public void back_options_panels()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xC0F40C", Offset = "0xC0F40C", VA = "0xC0F40C")]
	public void Quit()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xC0F414", Offset = "0xC0F414", VA = "0xC0F414")]
	public void playHoverClip()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xC0EF64", Offset = "0xC0EF64", VA = "0xC0EF64")]
	private void playClickSound()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xC0F418", Offset = "0xC0F418", VA = "0xC0F418")]
	public MainMenuController()
	{
	}
}
[Token(Token = "0x200008F")]
public class Player2DExample : MonoBehaviour
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Joystick joystick;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xA8F430", Offset = "0xA8F430", VA = "0xA8F430")]
	private void Update()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xA8F694", Offset = "0xA8F694", VA = "0xA8F694")]
	public Player2DExample()
	{
	}
}
[Token(Token = "0x2000090")]
public class Player3DExample : MonoBehaviour
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float moveSpeed;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Joystick joystick;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xA8F6A4", Offset = "0xA8F6A4", VA = "0xA8F6A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xA8F8FC", Offset = "0xA8F8FC", VA = "0xA8F8FC")]
	public Player3DExample()
	{
	}
}
[Token(Token = "0x2000091")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x713350", Offset = "0x713350")]
public class FastList<T>
{
	[Token(Token = "0x2000491")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000492")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F2C", Offset = "0x714F2C")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000279")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001BFE")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700027A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C00")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BFB")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001BFC")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BFD")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFF")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x170000E2")]
	public int Count
	{
		[Token(Token = "0x6000473")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000474")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public T Item
	{
		[Token(Token = "0x6000475")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000476")]
		set
		{
		}
	}

	[Token(Token = "0x6000471")]
	public FastList()
	{
	}

	[Token(Token = "0x6000472")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000477")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000478")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000479")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600047A")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600047B")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600047C")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600047D")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600047E")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600047F")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000480")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000481")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000482")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000483")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000484")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000485")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E160", Offset = "0x71E160")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000486")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000487")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000488")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000489")]
	public void Clear()
	{
	}

	[Token(Token = "0x600048A")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000092")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xB43C60", Offset = "0xB43C60", VA = "0xB43C60")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000093")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xB43C34", Offset = "0xB43C34", VA = "0xB43C34")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000094")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xA88E04", Offset = "0xA88E04", VA = "0xA88E04")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xA88F70", Offset = "0xA88F70", VA = "0xA88F70")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xA89314", Offset = "0xA89314", VA = "0xA89314")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xA8956C", Offset = "0xA8956C", VA = "0xA8956C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xA89598", Offset = "0xA89598", VA = "0xA89598")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000095")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x94710C", Offset = "0x94710C", VA = "0x94710C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x947198", Offset = "0x947198", VA = "0x947198")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x947304", Offset = "0x947304", VA = "0x947304")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000096")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x170000E4")]
	public bool IsVisible
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0xC01728", Offset = "0xC01728", VA = "0xC01728")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000496")]
		[Address(RVA = "0xC01730", Offset = "0xC01730", VA = "0xC01730")]
		set
		{
		}
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xC01858", Offset = "0xC01858", VA = "0xC01858")]
	private void Start()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xC01A74", Offset = "0xC01A74", VA = "0xC01A74")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xC01A7C", Offset = "0xC01A7C", VA = "0xC01A7C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000097")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000493")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x94AC48", Offset = "0x94AC48", VA = "0x94AC48")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000494")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71D038", Offset = "0x71D038")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71D050", Offset = "0x71D050")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71D068", Offset = "0x71D068")]
		public float LatencyWeight;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71D080", Offset = "0x71D080")]
		public int MaxSamples;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x94AC50", Offset = "0x94AC50", VA = "0x94AC50")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x94ADE8", Offset = "0x94ADE8", VA = "0x94ADE8")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x94A2E8", Offset = "0x94A2E8", VA = "0x94A2E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x94A40C", Offset = "0x94A40C", VA = "0x94A40C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x94A770", Offset = "0x94A770", VA = "0x94A770")]
	private void Update()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x94A6D4", Offset = "0x94A6D4", VA = "0x94A6D4")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x94A9CC", Offset = "0x94A9CC", VA = "0x94A9CC")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x94AD5C", Offset = "0x94AD5C", VA = "0x94AD5C")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000098")]
public class P2PManager
{
	[Token(Token = "0x2000495")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001C38")]
		Update = 1
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xA8A4D4", Offset = "0xA8A4D4", VA = "0xA8A4D4")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xA8A594", Offset = "0xA8A594", VA = "0xA8A594")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xA8A678", Offset = "0xA8A678", VA = "0xA8A678")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xA8A6FC", Offset = "0xA8A6FC", VA = "0xA8A6FC")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xA8A858", Offset = "0xA8A858", VA = "0xA8A858")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xA8AB08", Offset = "0xA8AB08", VA = "0xA8AB08")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xA8AEFC", Offset = "0xA8AEFC", VA = "0xA8AEFC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xA8B1A0", Offset = "0xA8B1A0", VA = "0xA8B1A0")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xA8ACCC", Offset = "0xA8ACCC", VA = "0xA8ACCC")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xA8B0D0", Offset = "0xA8B0D0", VA = "0xA8B0D0")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xA8ADB4", Offset = "0xA8ADB4", VA = "0xA8ADB4")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xA8B3B8", Offset = "0xA8B3B8", VA = "0xA8B3B8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xA8AD14", Offset = "0xA8AD14", VA = "0xA8AD14")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xA8B114", Offset = "0xA8B114", VA = "0xA8B114")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xA8AE5C", Offset = "0xA8AE5C", VA = "0xA8AE5C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xA8B444", Offset = "0xA8B444", VA = "0xA8B444")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000099")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xA8F970", Offset = "0xA8F970", VA = "0xA8F970", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xA8F9AC", Offset = "0xA8F9AC", VA = "0xA8F9AC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xA8F9E4", Offset = "0xA8F9E4", VA = "0xA8F9E4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xA8FA0C", Offset = "0xA8FA0C", VA = "0xA8FA0C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xA8FBAC", Offset = "0xA8FBAC", VA = "0xA8FBAC")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xA8FC2C", Offset = "0xA8FC2C", VA = "0xA8FC2C")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xA8FC80", Offset = "0xA8FC80", VA = "0xA8FC80")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200009A")]
public class RemotePlayer
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x94AE70", Offset = "0x94AE70", VA = "0x94AE70")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200009B")]
public class RoomManager
{
	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x956568", Offset = "0x956568", VA = "0x956568")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x956634", Offset = "0x956634", VA = "0x956634")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x956794", Offset = "0x956794", VA = "0x956794")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x9568A4", Offset = "0x9568A4", VA = "0x9568A4")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x956958", Offset = "0x956958", VA = "0x956958")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x956A8C", Offset = "0x956A8C", VA = "0x956A8C")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x9567C4", Offset = "0x9567C4", VA = "0x9567C4")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x956B18", Offset = "0x956B18", VA = "0x956B18")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x9571B4", Offset = "0x9571B4", VA = "0x9571B4")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x957484", Offset = "0x957484", VA = "0x957484")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x956DB8", Offset = "0x956DB8", VA = "0x956DB8")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200009C")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000496")]
	public enum State
	{
		[Token(Token = "0x4001C3A")]
		INITIALIZING,
		[Token(Token = "0x4001C3B")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001C3C")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001C3D")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001C3E")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001C3F")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001C40")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001C41")]
		SHUTDOWN
	}

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x170000E5")]
	public static State CurrentState
	{
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x8EFD40", Offset = "0x8EFD40", VA = "0x8EFD40")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x170000E6")]
	public static ulong MyID
	{
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x8EFDB4", Offset = "0x8EFDB4", VA = "0x8EFDB4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170000E7")]
	public static string MyOculusID
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x8EFE8C", Offset = "0x8EFE8C", VA = "0x8EFE8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x8EDFD8", Offset = "0x8EDFD8", VA = "0x8EDFD8", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x8EE364", Offset = "0x8EE364", VA = "0x8EE364", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x8EEA40", Offset = "0x8EEA40", VA = "0x8EEA40")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x8EED08", Offset = "0x8EED08", VA = "0x8EED08", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x8EED0C", Offset = "0x8EED0C", VA = "0x8EED0C")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x8EEE00", Offset = "0x8EEE00", VA = "0x8EEE00")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x8EF4F4", Offset = "0x8EF4F4", VA = "0x8EF4F4")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x8EF9B4", Offset = "0x8EF9B4", VA = "0x8EF9B4")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x8EFB80", Offset = "0x8EFB80", VA = "0x8EFB80")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x8EFCD0", Offset = "0x8EFCD0", VA = "0x8EFCD0")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x8EE664", Offset = "0x8EE664", VA = "0x8EE664")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x8EEB9C", Offset = "0x8EEB9C", VA = "0x8EEB9C")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x8EE718", Offset = "0x8EE718", VA = "0x8EE718")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x8EFFA0", Offset = "0x8EFFA0", VA = "0x8EFFA0")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x8F0120", Offset = "0x8F0120", VA = "0x8F0120")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x8F0208", Offset = "0x8F0208", VA = "0x8F0208")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x8F032C", Offset = "0x8F032C", VA = "0x8F032C")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x8F03FC", Offset = "0x8F03FC", VA = "0x8F03FC")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x8EEC4C", Offset = "0x8EEC4C", VA = "0x8EEC4C")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x8F0828", Offset = "0x8F0828", VA = "0x8F0828")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x8F08B4", Offset = "0x8F08B4", VA = "0x8F08B4")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x8F064C", Offset = "0x8F064C", VA = "0x8F064C")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x8F0A88", Offset = "0x8F0A88", VA = "0x8F0A88")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x8EDF50", Offset = "0x8EDF50", VA = "0x8EDF50")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x71E1C4", Offset = "0x71E1C4")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x8F0BC4", Offset = "0x8F0BC4", VA = "0x8F0BC4")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x8F0C8C", Offset = "0x8F0C8C", VA = "0x8F0C8C")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200009D")]
public class VoipManager
{
	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xD6DAE8", Offset = "0xD6DAE8", VA = "0xD6DAE8")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xD6DBA8", Offset = "0xD6DBA8", VA = "0xD6DBA8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xD6DC8C", Offset = "0xD6DC8C", VA = "0xD6DC8C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xD6DD10", Offset = "0xD6DD10", VA = "0xD6DD10")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xD6DE6C", Offset = "0xD6DE6C", VA = "0xD6DE6C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200009E")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xC013B4", Offset = "0xC013B4", VA = "0xC013B4")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xC01424", Offset = "0xC01424", VA = "0xC01424")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xC015A0", Offset = "0xC015A0", VA = "0xC015A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xC01604", Offset = "0xC01604", VA = "0xC01604")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xC01460", Offset = "0xC01460", VA = "0xC01460")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xC016C0", Offset = "0xC016C0", VA = "0xC016C0")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xC01720", Offset = "0xC01720", VA = "0xC01720")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200009F")]
public class AvatarLayer
{
	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x9121F4", Offset = "0x9121F4", VA = "0x9121F4")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A0")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xA8B4D0", Offset = "0xA8B4D0", VA = "0xA8B4D0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20000A1")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000497")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xA7AE24", Offset = "0xA7AE24", VA = "0xA7AE24")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000498")]
	public enum HandType
	{
		[Token(Token = "0x4001C44")]
		Right,
		[Token(Token = "0x4001C45")]
		Left,
		[Token(Token = "0x4001C46")]
		Max
	}

	[Token(Token = "0x2000499")]
	public enum HandJoint
	{
		[Token(Token = "0x4001C48")]
		HandBase,
		[Token(Token = "0x4001C49")]
		IndexBase,
		[Token(Token = "0x4001C4A")]
		IndexTip,
		[Token(Token = "0x4001C4B")]
		ThumbBase,
		[Token(Token = "0x4001C4C")]
		ThumbTip,
		[Token(Token = "0x4001C4D")]
		Max
	}

	[Token(Token = "0x200049A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F3C", Offset = "0x714F3C")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700027B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xA7ADB4", Offset = "0xA7ADB4", VA = "0xA7ADB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xA7AE1C", Offset = "0xA7AE1C", VA = "0xA7AE1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xA7ABF8", Offset = "0xA7ABF8", VA = "0xA7ABF8")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xA7AC24", Offset = "0xA7AC24", VA = "0xA7AC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xA7AC28", Offset = "0xA7AC28", VA = "0xA7AC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xA7ADBC", Offset = "0xA7ADBC", VA = "0xA7ADBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x717204", Offset = "0x717204")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71723C", Offset = "0x71723C")]
	public bool EnableBody;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x717274", Offset = "0x717274")]
	public bool RecordPackets;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7172AC", Offset = "0x7172AC")]
	public bool StartWithControllers;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7172E4", Offset = "0x7172E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7172E4", Offset = "0x7172E4")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717354", Offset = "0x717354")]
	private bool CombineMeshes;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71738C", Offset = "0x71738C")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7173C4", Offset = "0x7173C4")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7173FC", Offset = "0x7173FC")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717434", Offset = "0x717434")]
	public bool EnableLaughter;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000455")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000457")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000458")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000459")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400045A")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400045B")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x9D2B34", Offset = "0x9D2B34", VA = "0x9D2B34")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x9D2E9C", Offset = "0x9D2E9C", VA = "0x9D2E9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x9D2F28", Offset = "0x9D2F28", VA = "0x9D2F28")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x9D2F94", Offset = "0x9D2F94", VA = "0x9D2F94")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x9D30BC", Offset = "0x9D30BC", VA = "0x9D30BC")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x9D31A0", Offset = "0x9D31A0", VA = "0x9D31A0")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x9D3280", Offset = "0x9D3280", VA = "0x9D3280")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x9D3468", Offset = "0x9D3468", VA = "0x9D3468")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x9D3530", Offset = "0x9D3530", VA = "0x9D3530")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x9D35B4", Offset = "0x9D35B4", VA = "0x9D35B4")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x9D369C", Offset = "0x9D369C", VA = "0x9D369C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x9D3728", Offset = "0x9D3728", VA = "0x9D3728")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x9D3844", Offset = "0x9D3844", VA = "0x9D3844")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x9D38A4", Offset = "0x9D38A4", VA = "0x9D38A4")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60004FD")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x9D3D28", Offset = "0x9D3D28", VA = "0x9D3D28")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x9D4088", Offset = "0x9D4088", VA = "0x9D4088")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x9D41EC", Offset = "0x9D41EC", VA = "0x9D41EC")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x9D44B4", Offset = "0x9D44B4", VA = "0x9D44B4")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x9D45A0", Offset = "0x9D45A0", VA = "0x9D45A0")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x9D4954", Offset = "0x9D4954", VA = "0x9D4954")]
	private void Start()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x9D4CC8", Offset = "0x9D4CC8", VA = "0x9D4CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x9D56E0", Offset = "0x9D56E0", VA = "0x9D56E0")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x9D5734", Offset = "0x9D5734", VA = "0x9D5734")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x9D481C", Offset = "0x9D481C", VA = "0x9D481C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x9D48B8", Offset = "0x9D48B8", VA = "0x9D48B8")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x9D5764", Offset = "0x9D5764", VA = "0x9D5764")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x9D503C", Offset = "0x9D503C", VA = "0x9D503C")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x9D59B0", Offset = "0x9D59B0", VA = "0x9D59B0")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x9D57CC", Offset = "0x9D57CC", VA = "0x9D57CC")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x9D5C4C", Offset = "0x9D5C4C", VA = "0x9D5C4C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x9D6050", Offset = "0x9D6050", VA = "0x9D6050")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x9D6280", Offset = "0x9D6280", VA = "0x9D6280")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x9D63C0", Offset = "0x9D63C0", VA = "0x9D63C0")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x9D6578", Offset = "0x9D6578", VA = "0x9D6578")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x9D51DC", Offset = "0x9D51DC", VA = "0x9D51DC")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x9D6650", Offset = "0x9D6650", VA = "0x9D6650")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x9D504C", Offset = "0x9D504C", VA = "0x9D504C")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x9D6744", Offset = "0x9D6744", VA = "0x9D6744")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x9D6CF0", Offset = "0x9D6CF0", VA = "0x9D6CF0")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x9D71B0", Offset = "0x9D71B0", VA = "0x9D71B0")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x9D7228", Offset = "0x9D7228", VA = "0x9D7228")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x9D72A4", Offset = "0x9D72A4", VA = "0x9D72A4")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x9D5574", Offset = "0x9D5574", VA = "0x9D5574")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x9D6800", Offset = "0x9D6800", VA = "0x9D6800")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x9D773C", Offset = "0x9D773C", VA = "0x9D773C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E228", Offset = "0x71E228")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x9D77AC", Offset = "0x9D77AC", VA = "0x9D77AC")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x9D75E0", Offset = "0x9D75E0", VA = "0x9D75E0")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x9D7874", Offset = "0x9D7874", VA = "0x9D7874")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x9D7960", Offset = "0x9D7960", VA = "0x9D7960")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x9D7374", Offset = "0x9D7374", VA = "0x9D7374")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x9D7A4C", Offset = "0x9D7A4C", VA = "0x9D7A4C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20000A2")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xA7AEA0", Offset = "0xA7AEA0", VA = "0xA7AEA0")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20000A3")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xA7AF50", Offset = "0xA7AF50", VA = "0xA7AF50")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xA7C230", Offset = "0xA7C230", VA = "0xA7C230")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xA7BDD4", Offset = "0xA7BDD4", VA = "0xA7BDD4")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xA7BB78", Offset = "0xA7BB78", VA = "0xA7BB78")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xA7BC48", Offset = "0xA7BC48", VA = "0xA7BC48")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xA7C494", Offset = "0xA7C494", VA = "0xA7C494")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20000A4")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000478")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xA7CA14", Offset = "0xA7CA14", VA = "0xA7CA14")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20000A5")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xA7CC7C", Offset = "0xA7CC7C", VA = "0xA7CC7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xA7D07C", Offset = "0xA7D07C", VA = "0xA7D07C")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20000A6")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xA7D178", Offset = "0xA7D178", VA = "0xA7D178")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xA7D2D4", Offset = "0xA7D2D4", VA = "0xA7D2D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xA7D3F0", Offset = "0xA7D3F0", VA = "0xA7D3F0")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20000A7")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xA7D454", Offset = "0xA7D454", VA = "0xA7D454")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xA7CD98", Offset = "0xA7CD98", VA = "0xA7CD98")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xA7DA38", Offset = "0xA7DA38", VA = "0xA7DA38")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xA7DA98", Offset = "0xA7DA98", VA = "0xA7DA98")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xA7E27C", Offset = "0xA7E27C", VA = "0xA7E27C")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xA7D0E0", Offset = "0xA7D0E0", VA = "0xA7D0E0")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20000A8")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200049B")]
	public enum PacketMode
	{
		[Token(Token = "0x4001C52")]
		SDK,
		[Token(Token = "0x4001C53")]
		Unity
	}

	[Token(Token = "0x200049C")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xA7F94C", Offset = "0xA7F94C", VA = "0xA7F94C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200049D")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xA7FAA8", Offset = "0xA7FAA8", VA = "0xA7FAA8")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xA7F578", Offset = "0xA7F578", VA = "0xA7F578")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000538")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xA7F588", Offset = "0xA7F588", VA = "0xA7F588")]
	private void Start()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xA7F628", Offset = "0xA7F628", VA = "0xA7F628")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xA7F8A0", Offset = "0xA7F8A0", VA = "0xA7F8A0")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xA7F93C", Offset = "0xA7F93C", VA = "0xA7F93C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20000A9")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xA7FE60", Offset = "0xA7FE60", VA = "0xA7FE60")]
	private void Update()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xA7FFBC", Offset = "0xA7FFBC", VA = "0xA7FFBC")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20000AA")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xA80028", Offset = "0xA80028", VA = "0xA80028")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xA80194", Offset = "0xA80194", VA = "0xA80194")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xA80538", Offset = "0xA80538", VA = "0xA80538")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xA80804", Offset = "0xA80804", VA = "0xA80804", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xA80830", Offset = "0xA80830", VA = "0xA80830")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20000AB")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200049E")]
	public enum TextureType
	{
		[Token(Token = "0x4001C64")]
		DiffuseTextures,
		[Token(Token = "0x4001C65")]
		NormalMaps,
		[Token(Token = "0x4001C66")]
		RoughnessMaps,
		[Token(Token = "0x4001C67")]
		Count
	}

	[Token(Token = "0x200049F")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20004A0")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20004A1")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20004A2")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xA82A50", Offset = "0xA82A50", VA = "0xA82A50")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20004A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F4C", Offset = "0x714F4C")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700027D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xA83360", Offset = "0xA83360", VA = "0xA83360", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xA833C8", Offset = "0xA833C8", VA = "0xA833C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xA828B8", Offset = "0xA828B8", VA = "0xA828B8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xA82CE8", Offset = "0xA82CE8", VA = "0xA82CE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xA82CEC", Offset = "0xA82CEC", VA = "0xA82CEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xA83368", Offset = "0xA83368", VA = "0xA83368", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40004AC")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40004AD")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40004AE")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40004AF")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xA808E0", Offset = "0xA808E0", VA = "0xA808E0")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xA80A40", Offset = "0xA80A40", VA = "0xA80A40")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xA80A68", Offset = "0xA80A68", VA = "0xA80A68")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xA81180", Offset = "0xA81180", VA = "0xA81180")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xA81400", Offset = "0xA81400", VA = "0xA81400")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xA80AFC", Offset = "0xA80AFC", VA = "0xA80AFC")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xA814F0", Offset = "0xA814F0", VA = "0xA814F0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xA80EFC", Offset = "0xA80EFC", VA = "0xA80EFC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xA81758", Offset = "0xA81758", VA = "0xA81758")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xA819D0", Offset = "0xA819D0", VA = "0xA819D0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xA81ACC", Offset = "0xA81ACC", VA = "0xA81ACC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xA81B04", Offset = "0xA81B04", VA = "0xA81B04")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xA81104", Offset = "0xA81104", VA = "0xA81104")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E28C", Offset = "0x71E28C")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xA828E4", Offset = "0xA828E4", VA = "0xA828E4")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20000AC")]
public class OvrAvatarMeshInstance : MonoBehaviour
{
	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<ulong> AssetsToLoad;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ulong MeshID;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong MaterialID;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong FadeTextureID;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarBodyPartType MeshType;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ovrAvatarMaterialState MaterialState;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MeshFilter Mesh;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MeshRenderer MeshInstance;

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xA833D0", Offset = "0xA833D0", VA = "0xA833D0")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xA83EB0", Offset = "0xA83EB0", VA = "0xA83EB0")]
	public void SetMeshAssets(ulong fadeTexture, ulong meshID, ulong materialID, ovrAvatarBodyPartType type)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xA83474", Offset = "0xA83474", VA = "0xA83474")]
	private void HandleAssetAvailable(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xA840F8", Offset = "0xA840F8", VA = "0xA840F8")]
	public void ChangeMaterial(ulong assetID)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xA83F64", Offset = "0xA83F64", VA = "0xA83F64")]
	private void RequestAsset(ulong assetID)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xA8405C", Offset = "0xA8405C", VA = "0xA8405C")]
	private void RequestMaterialTextures()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xA8421C", Offset = "0xA8421C", VA = "0xA8421C")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xA83640", Offset = "0xA83640", VA = "0xA83640")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xA8426C", Offset = "0xA8426C", VA = "0xA8426C")]
	public OvrAvatarMeshInstance()
	{
	}
}
[Token(Token = "0x20000AD")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x170000E8")]
	public float Duration
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xA84274", Offset = "0xA84274", VA = "0xA84274")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E9")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xA842E0", Offset = "0xA842E0", VA = "0xA842E0")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xA84364", Offset = "0xA84364", VA = "0xA84364")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xA84428", Offset = "0xA84428", VA = "0xA84428")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xA84568", Offset = "0xA84568", VA = "0xA84568")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xA84644", Offset = "0xA84644", VA = "0xA84644")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xA84714", Offset = "0xA84714", VA = "0xA84714")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xA8491C", Offset = "0xA8491C", VA = "0xA8491C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xA84B74", Offset = "0xA84B74", VA = "0xA84B74")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20000AE")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000565")]
	[Address(RVA = "0x913010", Offset = "0x913010", VA = "0x913010")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x913124", Offset = "0x913124", VA = "0x913124")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x9132D0", Offset = "0x9132D0", VA = "0x9132D0")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x913194", Offset = "0x913194", VA = "0x913194")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x913228", Offset = "0x913228", VA = "0x913228")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20000AF")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x600056A")]
	[Address(RVA = "0x912C10", Offset = "0x912C10", VA = "0x912C10")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x912FB4", Offset = "0x912FB4", VA = "0x912FB4")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x912DB0", Offset = "0x912DB0", VA = "0x912DB0")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x912E28", Offset = "0x912E28", VA = "0x912E28")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x912EC4", Offset = "0x912EC4", VA = "0x912EC4")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000B0")]
public class OvrAvatarProjectorRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xA84D64", Offset = "0xA84D64", VA = "0xA84D64")]
	internal void InitializeProjectorRender(ovrAvatarRenderPart_ProjectorRender render, Shader shader, OvrAvatarRenderComponent target)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xA85028", Offset = "0xA85028", VA = "0xA85028")]
	internal void UpdateProjectorRender(OvrAvatarComponent component, ovrAvatarRenderPart_ProjectorRender render)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xA85190", Offset = "0xA85190", VA = "0xA85190")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xA8570C", Offset = "0xA8570C", VA = "0xA8570C")]
	public OvrAvatarProjectorRenderComponent()
	{
	}
}
[Token(Token = "0x20000B1")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40004C0")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40004C1")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xA8572C", Offset = "0xA8572C", VA = "0xA8572C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xA857B8", Offset = "0xA857B8", VA = "0xA857B8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xA857D4", Offset = "0xA857D4", VA = "0xA857D4")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xA85980", Offset = "0xA85980", VA = "0xA85980")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xA85B28", Offset = "0xA85B28", VA = "0xA85B28")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000B2")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xA85BA8", Offset = "0xA85BA8", VA = "0xA85BA8")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xA85C8C", Offset = "0xA85C8C", VA = "0xA85C8C")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xA85E80", Offset = "0xA85E80", VA = "0xA85E80")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xA84F30", Offset = "0xA84F30", VA = "0xA84F30")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xA8571C", Offset = "0xA8571C", VA = "0xA8571C")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000B3")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40004CA")]
	Body = 1,
	[Token(Token = "0x40004CB")]
	Hands = 2,
	[Token(Token = "0x40004CC")]
	Base = 4,
	[Token(Token = "0x40004CD")]
	BodyTilt = 0x10,
	[Token(Token = "0x40004CE")]
	Expressive = 0x20,
	[Token(Token = "0x40004CF")]
	All = -1
}
[Token(Token = "0x20000B4")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40004D1")]
	AvatarSpecification,
	[Token(Token = "0x40004D2")]
	AssetLoaded,
	[Token(Token = "0x40004D3")]
	Count
}
[Token(Token = "0x20000B5")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000B6")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000B7")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40004D9")]
	Mesh,
	[Token(Token = "0x40004DA")]
	Texture,
	[Token(Token = "0x40004DB")]
	Pose,
	[Token(Token = "0x40004DC")]
	Material,
	[Token(Token = "0x40004DD")]
	CombinedMesh,
	[Token(Token = "0x40004DE")]
	PBSMaterial,
	[Token(Token = "0x40004DF")]
	FailedLoad,
	[Token(Token = "0x40004E0")]
	Count
}
[Token(Token = "0x20000B8")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000BA")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000BB")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000BC")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000BD")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000515")]
	RGB24,
	[Token(Token = "0x4000516")]
	DXT1,
	[Token(Token = "0x4000517")]
	DXT5,
	[Token(Token = "0x4000518")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000519")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400051A")]
	Count
}
[Token(Token = "0x20000BE")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000BF")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000522")]
	SkinnedMeshRender,
	[Token(Token = "0x4000523")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000524")]
	ProjectorRender,
	[Token(Token = "0x4000525")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000526")]
	Count
}
[Token(Token = "0x20000C0")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000528")]
	Unknown,
	[Token(Token = "0x4000529")]
	Default,
	[Token(Token = "0x400052A")]
	Verbose,
	[Token(Token = "0x400052B")]
	Debug,
	[Token(Token = "0x400052C")]
	Info,
	[Token(Token = "0x400052D")]
	Warn,
	[Token(Token = "0x400052E")]
	Error,
	[Token(Token = "0x400052F")]
	Fatal,
	[Token(Token = "0x4000530")]
	Silent
}
[Token(Token = "0x20000C1")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000C2")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000535")]
	One = 1,
	[Token(Token = "0x4000536")]
	Two = 2,
	[Token(Token = "0x4000537")]
	Three = 4,
	[Token(Token = "0x4000538")]
	Joystick = 8
}
[Token(Token = "0x20000C3")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400053A")]
	One = 1,
	[Token(Token = "0x400053B")]
	Two = 2,
	[Token(Token = "0x400053C")]
	Joystick = 4,
	[Token(Token = "0x400053D")]
	ThumbRest = 8,
	[Token(Token = "0x400053E")]
	Index = 0x10,
	[Token(Token = "0x400053F")]
	Pointing = 0x40,
	[Token(Token = "0x4000540")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000C4")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000C5")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000C6")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000C7")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000C8")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000C9")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000CA")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000CB")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000CC")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000560")]
	Add,
	[Token(Token = "0x4000561")]
	Multiply,
	[Token(Token = "0x4000562")]
	Count
}
[Token(Token = "0x20000CD")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000564")]
	Color,
	[Token(Token = "0x4000565")]
	Texture,
	[Token(Token = "0x4000566")]
	TextureSingleChannel,
	[Token(Token = "0x4000567")]
	Parallax,
	[Token(Token = "0x4000568")]
	Count
}
[Token(Token = "0x20000CE")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x400056A")]
	None,
	[Token(Token = "0x400056B")]
	Positional,
	[Token(Token = "0x400056C")]
	ViewReflection,
	[Token(Token = "0x400056D")]
	Fresnel,
	[Token(Token = "0x400056E")]
	Pulse,
	[Token(Token = "0x400056F")]
	Count
}
[Token(Token = "0x20000CF")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000571")]
	Touch,
	[Token(Token = "0x4000572")]
	Malibu,
	[Token(Token = "0x4000573")]
	Go,
	[Token(Token = "0x4000574")]
	Quest,
	[Token(Token = "0x4000575")]
	Count
}
[Token(Token = "0x20000D0")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000577")]
	Lowest = 1,
	[Token(Token = "0x4000578")]
	Medium = 3,
	[Token(Token = "0x4000579")]
	Highest = 5
}
[Token(Token = "0x20000D1")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400057B")]
	Unknown = -1,
	[Token(Token = "0x400057C")]
	One,
	[Token(Token = "0x400057D")]
	Two
}
[Token(Token = "0x20000D2")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x11209F0", Offset = "0x11209F0", VA = "0x11209F0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x7B3234", Offset = "0x7B3234", VA = "0x7B3234", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x7B323C", Offset = "0x7B323C", VA = "0x7B323C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D3")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1120D24", Offset = "0x1120D24", VA = "0x1120D24")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x7B3474", Offset = "0x7B3474", VA = "0x7B3474", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x7B347C", Offset = "0x7B347C", VA = "0x7B347C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D4")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1120098", Offset = "0x1120098", VA = "0x1120098")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x7B2F7C", Offset = "0x7B2F7C", VA = "0x7B2F7C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x7B2F84", Offset = "0x7B2F84", VA = "0x7B2F84", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D5")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1121250", Offset = "0x1121250", VA = "0x1121250")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x7B3CFC", Offset = "0x7B3CFC", VA = "0x7B3CFC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x7B3D04", Offset = "0x7B3D04", VA = "0x7B3D04", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D6")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xA7AEA8", Offset = "0xA7AEA8", VA = "0xA7AEA8")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000D7")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000D8")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40005B2")]
	FirstPerson = 1,
	[Token(Token = "0x40005B3")]
	ThirdPerson = 2,
	[Token(Token = "0x40005B4")]
	SelfOccluding = 4
}
[Token(Token = "0x20000D9")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000DA")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000DB")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000DC")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000DD")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40005CA")]
	Default,
	[Token(Token = "0x40005CB")]
	GripSphere,
	[Token(Token = "0x40005CC")]
	GripCube,
	[Token(Token = "0x40005CD")]
	Count
}
[Token(Token = "0x20000DE")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40005CF")]
	Body,
	[Token(Token = "0x40005D0")]
	Clothing,
	[Token(Token = "0x40005D1")]
	Eyewear,
	[Token(Token = "0x40005D2")]
	Hair,
	[Token(Token = "0x40005D3")]
	Beard,
	[Token(Token = "0x40005D4")]
	Count
}
[Token(Token = "0x20000DF")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000E0")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000E1")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000E2")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000E3")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40005DE")]
	AvatarHead,
	[Token(Token = "0x40005DF")]
	AvatarHand,
	[Token(Token = "0x40005E0")]
	Object,
	[Token(Token = "0x40005E1")]
	ObjectStatic,
	[Token(Token = "0x40005E2")]
	Count
}
[Token(Token = "0x20000E4")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000E5")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000E6")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000E7")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000E8")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40005EE")]
	Point,
	[Token(Token = "0x40005EF")]
	Direction,
	[Token(Token = "0x40005F0")]
	Spot,
	[Token(Token = "0x40005F1")]
	Count
}
[Token(Token = "0x20000E9")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000EA")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000EB")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000EC")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000ED")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000607")]
	None = 0u,
	[Token(Token = "0x4000608")]
	GazeTarget = 1u,
	[Token(Token = "0x4000609")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000EE")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000EF")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000F0")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000F1")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000F2")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000F3")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20004A4")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x79C4BC", Offset = "0x79C4BC", VA = "0x79C4BC")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400061E")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x170000EA")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xA7E310", Offset = "0xA7E310", VA = "0xA7E310")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xA86214", Offset = "0xA86214", VA = "0xA86214")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xA86460", Offset = "0xA86460", VA = "0xA86460")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xA864D4", Offset = "0xA864D4", VA = "0xA864D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xA86D18", Offset = "0xA86D18", VA = "0xA86D18")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xA86D70", Offset = "0xA86D70", VA = "0xA86D70")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xA86DC8", Offset = "0xA86DC8", VA = "0xA86DC8")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xA86E30", Offset = "0xA86E30", VA = "0xA86E30")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xA86E98", Offset = "0xA86E98", VA = "0xA86E98")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xA86B50", Offset = "0xA86B50", VA = "0xA86B50")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xA84100", Offset = "0xA84100", VA = "0xA84100")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xA86F78", Offset = "0xA86F78", VA = "0xA86F78")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xA7E4A0", Offset = "0xA7E4A0", VA = "0xA7E4A0")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xA87058", Offset = "0xA87058", VA = "0xA87058")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xA86414", Offset = "0xA86414", VA = "0xA86414")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xA811E0", Offset = "0xA811E0", VA = "0xA811E0")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xA87130", Offset = "0xA87130", VA = "0xA87130")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000F4")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x170000EB")]
	public static string AppID
	{
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xA870F0", Offset = "0xA870F0", VA = "0xA870F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xA87288", Offset = "0xA87288", VA = "0xA87288")]
		set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public static string MobileAppID
	{
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xA87110", Offset = "0xA87110", VA = "0xA87110")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xA872B4", Offset = "0xA872B4", VA = "0xA872B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xA87174", Offset = "0xA87174", VA = "0xA87174")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xA872E0", Offset = "0xA872E0", VA = "0xA872E0")]
		set
		{
		}
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xA87334", Offset = "0xA87334", VA = "0xA87334")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000F5")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xA88A10", Offset = "0xA88A10", VA = "0xA88A10")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xA7D45C", Offset = "0xA7D45C", VA = "0xA7D45C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xA88B54", Offset = "0xA88B54", VA = "0xA88B54")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xA88CB4", Offset = "0xA88CB4", VA = "0xA88CB4")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000F6")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xA88CC4", Offset = "0xA88CC4", VA = "0xA88CC4")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xA7D684", Offset = "0xA7D684", VA = "0xA7D684")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xA88DF4", Offset = "0xA88DF4", VA = "0xA88DF4")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000F7")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400062D")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400062E")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400062F")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xA8738C", Offset = "0xA8738C", VA = "0xA8738C")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xA7D81C", Offset = "0xA7D81C", VA = "0xA7D81C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xA881CC", Offset = "0xA881CC", VA = "0xA881CC")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xA87960", Offset = "0xA87960", VA = "0xA87960")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xA87730", Offset = "0xA87730", VA = "0xA87730")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xA87844", Offset = "0xA87844", VA = "0xA87844")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xA88A00", Offset = "0xA88A00", VA = "0xA88A00")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000F8")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004A5")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20004A6")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x79C524", Offset = "0x79C524", VA = "0x79C524")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20004A7")]
	public struct TextureSet
	{
		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x79C5AC", Offset = "0x79C5AC", VA = "0x79C5AC")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20004A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F5C", Offset = "0x714F5C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700027F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xA8A29C", Offset = "0xA8A29C", VA = "0xA8A29C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xA8A304", Offset = "0xA8A304", VA = "0xA8A304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xA89C60", Offset = "0xA89C60", VA = "0xA89C60")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xA89DC8", Offset = "0xA89DC8", VA = "0xA89DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xA89DCC", Offset = "0xA89DCC", VA = "0xA89DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xA8A2A4", Offset = "0xA8A2A4", VA = "0xA8A2A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000633")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000634")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000637")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000638")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000639")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x400063A")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400063B")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400063C")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400063D")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xA89658", Offset = "0xA89658", VA = "0xA89658")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xA899B4", Offset = "0xA899B4", VA = "0xA899B4")]
	public void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xA83310", Offset = "0xA83310", VA = "0xA83310")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xA815D4", Offset = "0xA815D4", VA = "0xA815D4")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xA89B1C", Offset = "0xA89B1C", VA = "0xA89B1C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xA81264", Offset = "0xA81264", VA = "0xA81264")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xA81448", Offset = "0xA81448", VA = "0xA81448")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xA89BCC", Offset = "0xA89BCC", VA = "0xA89BCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E390", Offset = "0x71E390")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xA86F2C", Offset = "0xA86F2C", VA = "0xA86F2C")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xA89C8C", Offset = "0xA89C8C", VA = "0xA89C8C")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000F9")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xA8A30C", Offset = "0xA8A30C", VA = "0xA8A30C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xA8A468", Offset = "0xA8A468", VA = "0xA8A468")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000FA")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60005D0")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xBF1D80", Offset = "0xBF1D80", VA = "0xBF1D80")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000FB")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71748C", Offset = "0x71748C")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7174C4", Offset = "0x7174C4")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7174FC", Offset = "0x7174FC")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xB48D4C", Offset = "0xB48D4C", VA = "0xB48D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xB48D50", Offset = "0xB48D50", VA = "0xB48D50")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xB48DD0", Offset = "0xB48DD0", VA = "0xB48DD0")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xB48FBC", Offset = "0xB48FBC", VA = "0xB48FBC")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000FC")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xB48FEC", Offset = "0xB48FEC", VA = "0xB48FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xB490F0", Offset = "0xB490F0", VA = "0xB490F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xB491C4", Offset = "0xB491C4", VA = "0xB491C4")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xB49450", Offset = "0xB49450", VA = "0xB49450")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xB494A0", Offset = "0xB494A0", VA = "0xB494A0")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000FD")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x170000EE")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xC6DD6C", Offset = "0xC6DD6C", VA = "0xC6DD6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xC6E024", Offset = "0xC6E024", VA = "0xC6E024")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xC6E160", Offset = "0xC6E160", VA = "0xC6E160")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xC6E094", Offset = "0xC6E094", VA = "0xC6E094")]
	public void Init()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xC6C014", Offset = "0xC6C014", VA = "0xC6C014")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xC6E2E8", Offset = "0xC6E2E8", VA = "0xC6E2E8")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xC6BFAC", Offset = "0xC6BFAC", VA = "0xC6BFAC")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xC6C094", Offset = "0xC6C094", VA = "0xC6C094")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xC6E1F8", Offset = "0xC6E1F8", VA = "0xC6E1F8")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xC6E388", Offset = "0xC6E388", VA = "0xC6E388")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xC6E3C4", Offset = "0xC6E3C4", VA = "0xC6E3C4")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xC6E5B8", Offset = "0xC6E5B8", VA = "0xC6E5B8")]
	private void Prune()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xC6E3D4", Offset = "0xC6E3D4", VA = "0xC6E3D4")]
	private void Display()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xC6E668", Offset = "0xC6E668", VA = "0xC6E668")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000FE")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xC6F12C", Offset = "0xC6F12C", VA = "0xC6F12C")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000FF")]
public static class OVRTouchpad
{
	[Token(Token = "0x20004A9")]
	public enum TouchEvent
	{
		[Token(Token = "0x4001C9A")]
		SingleTap,
		[Token(Token = "0x4001C9B")]
		DoubleTap,
		[Token(Token = "0x4001C9C")]
		Left,
		[Token(Token = "0x4001C9D")]
		Right,
		[Token(Token = "0x4001C9E")]
		Up,
		[Token(Token = "0x4001C9F")]
		Down
	}

	[Token(Token = "0x20004AA")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xC6AC28", Offset = "0xC6AC28", VA = "0xC6AC28")]
	public static void Create()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xC74178", Offset = "0xC74178", VA = "0xC74178")]
	public static void Update()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xC74498", Offset = "0xC74498", VA = "0xC74498")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xC742E8", Offset = "0xC742E8", VA = "0xC742E8")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xC6BB08", Offset = "0xC6BB08", VA = "0xC6BB08")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000100")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xC74548", Offset = "0xC74548", VA = "0xC74548")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xC745C4", Offset = "0xC745C4", VA = "0xC745C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xC7465C", Offset = "0xC7465C", VA = "0xC7465C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xC746B8", Offset = "0xC746B8", VA = "0xC746B8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xC7471C", Offset = "0xC7471C", VA = "0xC7471C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xC74720", Offset = "0xC74720", VA = "0xC74720")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000101")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20004AB")]
	public enum Result
	{
		[Token(Token = "0x4001CA1")]
		Success = 0,
		[Token(Token = "0x4001CA2")]
		Unknown = -2200,
		[Token(Token = "0x4001CA3")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4001CA4")]
		InvalidParam = -2202,
		[Token(Token = "0x4001CA5")]
		BadSampleRate = -2203,
		[Token(Token = "0x4001CA6")]
		MissingDLL = -2204,
		[Token(Token = "0x4001CA7")]
		BadVersion = -2205,
		[Token(Token = "0x4001CA8")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20004AC")]
	public enum AudioDataType
	{
		[Token(Token = "0x4001CAA")]
		S16_Mono,
		[Token(Token = "0x4001CAB")]
		S16_Stereo,
		[Token(Token = "0x4001CAC")]
		F32_Mono,
		[Token(Token = "0x4001CAD")]
		F32_Stereo
	}

	[Token(Token = "0x20004AD")]
	public enum Viseme
	{
		[Token(Token = "0x4001CAF")]
		sil,
		[Token(Token = "0x4001CB0")]
		PP,
		[Token(Token = "0x4001CB1")]
		FF,
		[Token(Token = "0x4001CB2")]
		TH,
		[Token(Token = "0x4001CB3")]
		DD,
		[Token(Token = "0x4001CB4")]
		kk,
		[Token(Token = "0x4001CB5")]
		CH,
		[Token(Token = "0x4001CB6")]
		SS,
		[Token(Token = "0x4001CB7")]
		nn,
		[Token(Token = "0x4001CB8")]
		RR,
		[Token(Token = "0x4001CB9")]
		aa,
		[Token(Token = "0x4001CBA")]
		E,
		[Token(Token = "0x4001CBB")]
		ih,
		[Token(Token = "0x4001CBC")]
		oh,
		[Token(Token = "0x4001CBD")]
		ou
	}

	[Token(Token = "0x20004AE")]
	public enum Signals
	{
		[Token(Token = "0x4001CBF")]
		VisemeOn,
		[Token(Token = "0x4001CC0")]
		VisemeOff,
		[Token(Token = "0x4001CC1")]
		VisemeAmount,
		[Token(Token = "0x4001CC2")]
		VisemeSmoothing,
		[Token(Token = "0x4001CC3")]
		LaughterAmount
	}

	[Token(Token = "0x20004AF")]
	public enum ContextProviders
	{
		[Token(Token = "0x4001CC5")]
		Original,
		[Token(Token = "0x4001CC6")]
		Enhanced,
		[Token(Token = "0x4001CC7")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20004B0")]
	public class Frame
	{
		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xC6B870", Offset = "0xC6B870", VA = "0xC6B870")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xC6B8C8", Offset = "0xC6B8C8", VA = "0xC6B8C8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xC6B958", Offset = "0xC6B958", VA = "0xC6B958")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000657")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xC6A1F8", Offset = "0xC6A1F8", VA = "0xC6A1F8")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xC6A288", Offset = "0xC6A288", VA = "0xC6A288")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xC6A2F8", Offset = "0xC6A2F8", VA = "0xC6A2F8")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xC6A38C", Offset = "0xC6A38C", VA = "0xC6A38C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xC6A434", Offset = "0xC6A434", VA = "0xC6A434")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xC6A500", Offset = "0xC6A500", VA = "0xC6A500")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xC6A580", Offset = "0xC6A580", VA = "0xC6A580")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xC6A600", Offset = "0xC6A600", VA = "0xC6A600")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xC6A6A8", Offset = "0xC6A6A8", VA = "0xC6A6A8")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xC6A7B0", Offset = "0xC6A7B0", VA = "0xC6A7B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xC6AC2C", Offset = "0xC6AC2C", VA = "0xC6AC2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xC6AAF0", Offset = "0xC6AAF0", VA = "0xC6AAF0")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xC6AD0C", Offset = "0xC6AD0C", VA = "0xC6AD0C")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xC6AE20", Offset = "0xC6AE20", VA = "0xC6AE20")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xC6AE90", Offset = "0xC6AE90", VA = "0xC6AE90")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xC6AEF8", Offset = "0xC6AEF8", VA = "0xC6AEF8")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xC6B01C", Offset = "0xC6B01C", VA = "0xC6B01C")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xC6B154", Offset = "0xC6B154", VA = "0xC6B154")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xC6B234", Offset = "0xC6B234", VA = "0xC6B234")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xC6B314", Offset = "0xC6B314", VA = "0xC6B314")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xC6B418", Offset = "0xC6B418", VA = "0xC6B418")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xC6B5BC", Offset = "0xC6B5BC", VA = "0xC6B5BC")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xC6B758", Offset = "0xC6B758", VA = "0xC6B758")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000102")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7133F8", Offset = "0x7133F8")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717534", Offset = "0x717534")]
	public bool enableKeyboardInput;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71756C", Offset = "0x71756C")]
	public bool enableTouchInput;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7175A4", Offset = "0x7175A4")]
	public bool audioLoopback;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7175DC", Offset = "0x7175DC")]
	public KeyCode loopbackKey;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717614", Offset = "0x717614")]
	public bool showVisemes;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71764C", Offset = "0x71764C")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717684", Offset = "0x717684")]
	public bool skipAudioSource;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7176BC", Offset = "0x7176BC")]
	public float gain;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xC6B9E0", Offset = "0xC6B9E0", VA = "0xC6B9E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xC6BBC8", Offset = "0xC6BBC8", VA = "0xC6BBC8")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xC6C114", Offset = "0xC6C114", VA = "0xC6C114")]
	private void Update()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xC6C3C0", Offset = "0xC6C3C0", VA = "0xC6C3C0")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xC6C424", Offset = "0xC6C424", VA = "0xC6C424")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xC6C490", Offset = "0xC6C490", VA = "0xC6C490")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xC6C5F4", Offset = "0xC6C5F4", VA = "0xC6C5F4")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xC6C758", Offset = "0xC6C758", VA = "0xC6C758")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xC6C88C", Offset = "0xC6C88C", VA = "0xC6C88C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xC6C158", Offset = "0xC6C158", VA = "0xC6C158")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xC6BED8", Offset = "0xC6BED8", VA = "0xC6BED8")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xC6C89C", Offset = "0xC6C89C", VA = "0xC6C89C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xC6C9C8", Offset = "0xC6C9C8", VA = "0xC6C9C8")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000103")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x71345C", Offset = "0x71345C")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7176F4", Offset = "0x7176F4")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71772C", Offset = "0x71772C")]
	public bool enableAcceleration;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x170000EF")]
	public int Smoothing
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0xC6CB48", Offset = "0xC6CB48", VA = "0xC6CB48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600061C")]
		[Address(RVA = "0xC6CA5C", Offset = "0xC6CA5C", VA = "0xC6CA5C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public uint Context
	{
		[Token(Token = "0x600061E")]
		[Address(RVA = "0xC6CB50", Offset = "0xC6CB50", VA = "0xC6CB50")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000F1")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x600061F")]
		[Address(RVA = "0xC6CB58", Offset = "0xC6CB58", VA = "0xC6CB58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xC6CB60", Offset = "0xC6CB60", VA = "0xC6CB60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xC6CCF0", Offset = "0xC6CCF0", VA = "0xC6CCF0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xC6CE0C", Offset = "0xC6CE0C", VA = "0xC6CE0C")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xC6CE14", Offset = "0xC6CE14", VA = "0xC6CE14")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xC6CF08", Offset = "0xC6CF08", VA = "0xC6CF08")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xC6CFD0", Offset = "0xC6CFD0", VA = "0xC6CFD0")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xC6C9EC", Offset = "0xC6C9EC", VA = "0xC6C9EC")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000104")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7134C0", Offset = "0x7134C0")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717764", Offset = "0x717764")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xC6D048", Offset = "0xC6D048", VA = "0xC6D048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xC6D1B8", Offset = "0xC6D1B8", VA = "0xC6D1B8")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000105")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71779C", Offset = "0x71779C")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7177D4", Offset = "0x7177D4")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71780C", Offset = "0x71780C")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717844", Offset = "0x717844")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71787C", Offset = "0x71787C")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7178B4", Offset = "0x7178B4")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7178EC", Offset = "0x7178EC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7178EC", Offset = "0x7178EC")]
	public float laughterThreshold;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x717940", Offset = "0x717940")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717940", Offset = "0x717940")]
	public float laughterMultiplier;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x717994", Offset = "0x717994")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717994", Offset = "0x717994")]
	public int smoothAmount;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xC6D1BC", Offset = "0xC6D1BC", VA = "0xC6D1BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xC6D300", Offset = "0xC6D300", VA = "0xC6D300")]
	private void Update()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xC6D5B0", Offset = "0xC6D5B0", VA = "0xC6D5B0")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xC6D40C", Offset = "0xC6D40C", VA = "0xC6D40C")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xC6D4C0", Offset = "0xC6D4C0", VA = "0xC6D4C0")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xC6D680", Offset = "0xC6D680", VA = "0xC6D680")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xC6D744", Offset = "0xC6D744", VA = "0xC6D744")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xC6D7AC", Offset = "0xC6D7AC", VA = "0xC6D7AC")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000106")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7179EC", Offset = "0x7179EC")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x7179EC", Offset = "0x7179EC")]
	public Texture[] Textures;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x717B68", Offset = "0x717B68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717B68", Offset = "0x717B68")]
	public int smoothAmount;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xC6D8A4", Offset = "0xC6D8A4", VA = "0xC6D8A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xC6D9F8", Offset = "0xC6D9F8", VA = "0xC6D9F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xC6DB9C", Offset = "0xC6DB9C", VA = "0xC6DB9C")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xC6DCC0", Offset = "0xC6DCC0", VA = "0xC6DCC0")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000107")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713524", Offset = "0x713524")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20004B1")]
	public enum micActivation
	{
		[Token(Token = "0x4001CCD")]
		HoldToSpeak,
		[Token(Token = "0x4001CCE")]
		PushToSpeak,
		[Token(Token = "0x4001CCF")]
		ConstantSpeak
	}

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717BC0", Offset = "0x717BC0")]
	public AudioSource audioSource;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717BF8", Offset = "0x717BF8")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717C30", Offset = "0x717C30")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x717C68", Offset = "0x717C68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717C68", Offset = "0x717C68")]
	private float micInputVolume;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717CD0", Offset = "0x717CD0")]
	private int micFrequency;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717D1C", Offset = "0x717D1C")]
	public micActivation micControl;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717D54", Offset = "0x717D54")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717D8C", Offset = "0x717D8C")]
	public string selectedDevice;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x170000F2")]
	public float MicFrequency
	{
		[Token(Token = "0x6000635")]
		[Address(RVA = "0xC6E6DC", Offset = "0xC6E6DC", VA = "0xC6E6DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000636")]
		[Address(RVA = "0xC6E6E8", Offset = "0xC6E6E8", VA = "0xC6E6E8")]
		set
		{
		}
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xC6E774", Offset = "0xC6E774", VA = "0xC6E774")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xC6E834", Offset = "0xC6E834", VA = "0xC6E834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xC6E880", Offset = "0xC6E880", VA = "0xC6E880")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xC6E9C4", Offset = "0xC6E9C4", VA = "0xC6E9C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xC6EDFC", Offset = "0xC6EDFC", VA = "0xC6EDFC")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xC6EE10", Offset = "0xC6EE10", VA = "0xC6EE10")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xC6EE28", Offset = "0xC6EE28", VA = "0xC6EE28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xC6EE2C", Offset = "0xC6EE2C", VA = "0xC6EE2C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xC6EEA4", Offset = "0xC6EEA4", VA = "0xC6EEA4")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xC6E908", Offset = "0xC6E908", VA = "0xC6E908")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xC6EC68", Offset = "0xC6EC68", VA = "0xC6EC68")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xC6EB20", Offset = "0xC6EB20", VA = "0xC6EB20")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xC6F084", Offset = "0xC6F084", VA = "0xC6F084")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xC6F08C", Offset = "0xC6F08C", VA = "0xC6F08C")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000108")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xC6D114", Offset = "0xC6D114", VA = "0xC6D114")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xC6F0BC", Offset = "0xC6F0BC", VA = "0xC6F0BC")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000109")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20004B2")]
	public delegate void OnClick();

	[Token(Token = "0x20004B3")]
	public delegate void OnToggleValueChange(UnityEngine.UI.Toggle t);

	[Token(Token = "0x20004B4")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20004B5")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20004B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F6C", Offset = "0x714F6C")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xABA924", Offset = "0xABA924", VA = "0xABA924")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xABB2C4", Offset = "0xABB2C4", VA = "0xABB2C4")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F7C", Offset = "0x714F7C")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xABAB98", Offset = "0xABAB98", VA = "0xABAB98")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xABB4E8", Offset = "0xABB4E8", VA = "0xABB4E8")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20004B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F8C", Offset = "0x714F8C")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle t;

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xABADB0", Offset = "0xABADB0", VA = "0xABADB0")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xABB760", Offset = "0xABB760", VA = "0xABB760")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20004B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714F9C", Offset = "0x714F9C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle t;

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xABAF44", Offset = "0xABAF44", VA = "0xABAF44")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xABBB14", Offset = "0xABBB14", VA = "0xABBB14")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714FAC", Offset = "0x714FAC")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle tb;

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xABB19C", Offset = "0xABB19C", VA = "0xABB19C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xABBB34", Offset = "0xABBB34", VA = "0xABBB34")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400068B")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x400068C")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400068D")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x400069A")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400069B")]
	private const float marginH = 16f;

	[Token(Token = "0x400069C")]
	private const float marginV = 16f;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xAB98D0", Offset = "0xAB98D0", VA = "0xAB98D0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xAB9CD4", Offset = "0xAB9CD4", VA = "0xAB9CD4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xABA2A0", Offset = "0xABA2A0", VA = "0xABA2A0")]
	public void Hide()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xABA04C", Offset = "0xABA04C", VA = "0xABA04C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xABA448", Offset = "0xABA448", VA = "0xABA448")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xABA6FC", Offset = "0xABA6FC", VA = "0xABA6FC")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xABA92C", Offset = "0xABA92C", VA = "0xABA92C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xABAA10", Offset = "0xABAA10", VA = "0xABAA10")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xABABA0", Offset = "0xABABA0", VA = "0xABABA0")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xABAC3C", Offset = "0xABAC3C", VA = "0xABAC3C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xABADB8", Offset = "0xABADB8", VA = "0xABADB8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xABAF4C", Offset = "0xABAF4C", VA = "0xABAF4C")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xABB1A4", Offset = "0xABB1A4", VA = "0xABB1A4")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xABB254", Offset = "0xABB254", VA = "0xABB254")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200010A")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xDA6B58", Offset = "0xDA6B58", VA = "0xDA6B58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xDA6BE0", Offset = "0xDA6BE0", VA = "0xDA6BE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xDA6CA8", Offset = "0xDA6CA8", VA = "0xDA6CA8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xDA6CE4", Offset = "0xDA6CE4", VA = "0xDA6CE4")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200010B")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20004BB")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001CD9")]
		On,
		[Token(Token = "0x4001CDA")]
		Off,
		[Token(Token = "0x4001CDB")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x170000F3")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600065A")]
		[Address(RVA = "0xB484FC", Offset = "0xB484FC", VA = "0xB484FC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000659")]
		[Address(RVA = "0xB484B8", Offset = "0xB484B8", VA = "0xB484B8")]
		set
		{
		}
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xB48504", Offset = "0xB48504", VA = "0xB48504")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xB4855C", Offset = "0xB4855C", VA = "0xB4855C")]
	private void Start()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xB48674", Offset = "0xB48674", VA = "0xB48674", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xB48690", Offset = "0xB48690", VA = "0xB48690", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xB486E4", Offset = "0xB486E4", VA = "0xB486E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xB48940", Offset = "0xB48940", VA = "0xB48940")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xB48A54", Offset = "0xB48A54", VA = "0xB48A54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xB48AE8", Offset = "0xB48AE8", VA = "0xB48AE8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xB48BB8", Offset = "0xB48BB8", VA = "0xB48BB8")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xB48C70", Offset = "0xB48C70", VA = "0xB48C70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xB48D3C", Offset = "0xB48D3C", VA = "0xB48D3C")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200010C")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x913324", Offset = "0x913324", VA = "0x913324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x913530", Offset = "0x913530", VA = "0x913530")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x9139D0", Offset = "0x9139D0", VA = "0x9139D0")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200010D")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xAFF12C", Offset = "0xAFF12C", VA = "0xAFF12C")]
	private void Start()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xAFF260", Offset = "0xAFF260", VA = "0xAFF260")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xAFF4B0", Offset = "0xAFF4B0", VA = "0xAFF4B0")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200010E")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x170000F4")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x600066E")]
		[Address(RVA = "0xAFF55C", Offset = "0xAFF55C", VA = "0xAFF55C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000013")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x600066C")]
		[Address(RVA = "0xAFF1BC", Offset = "0xAFF1BC", VA = "0xAFF1BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E3F4", Offset = "0x71E3F4")]
		add
		{
		}
		[Token(Token = "0x600066D")]
		[Address(RVA = "0xAFF4B8", Offset = "0xAFF4B8", VA = "0xAFF4B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E404", Offset = "0x71E404")]
		remove
		{
		}
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xAFF568", Offset = "0xAFF568", VA = "0xAFF568")]
	private void Start()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xAFF6C0", Offset = "0xAFF6C0", VA = "0xAFF6C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xAFF834", Offset = "0xAFF834", VA = "0xAFF834")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xAFF83C", Offset = "0xAFF83C", VA = "0xAFF83C")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200010F")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717E74", Offset = "0x717E74")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717EAC", Offset = "0x717EAC")]
	public bool EnableCollision;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717EE4", Offset = "0x717EE4")]
	public float MaxFade;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717F1C", Offset = "0x717F1C")]
	public float FadeMinDistance;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717F54", Offset = "0x717F54")]
	public float FadeMaxDistance;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x91B644", Offset = "0x91B644", VA = "0x91B644")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x91B6CC", Offset = "0x91B6CC", VA = "0x91B6CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x91B73C", Offset = "0x91B73C", VA = "0x91B73C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x91B740", Offset = "0x91B740", VA = "0x91B740")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x91B764", Offset = "0x91B764", VA = "0x91B764")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x91B788", Offset = "0x91B788", VA = "0x91B788")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000110")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xB49B54", Offset = "0xB49B54", VA = "0xB49B54")]
	private void Start()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xB49C00", Offset = "0xB49C00", VA = "0xB49C00")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000111")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20004BC")]
	public enum States
	{
		[Token(Token = "0x4001CDD")]
		Ready,
		[Token(Token = "0x4001CDE")]
		Aim,
		[Token(Token = "0x4001CDF")]
		CancelAim,
		[Token(Token = "0x4001CE0")]
		PreTeleport,
		[Token(Token = "0x4001CE1")]
		CancelTeleport,
		[Token(Token = "0x4001CE2")]
		Teleporting,
		[Token(Token = "0x4001CE3")]
		PostTeleport
	}

	[Token(Token = "0x20004BD")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001CE5")]
		None,
		[Token(Token = "0x4001CE6")]
		Aim,
		[Token(Token = "0x4001CE7")]
		PreTeleport,
		[Token(Token = "0x4001CE8")]
		Teleport
	}

	[Token(Token = "0x20004BE")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001CEA")]
		Point,
		[Token(Token = "0x4001CEB")]
		Sphere,
		[Token(Token = "0x4001CEC")]
		Capsule
	}

	[Token(Token = "0x20004BF")]
	public class AimData
	{
		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71D098", Offset = "0x71D098")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000281")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xB4CDC4", Offset = "0xB4CDC4", VA = "0xB4CDC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72235C", Offset = "0x72235C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xB4CDCC", Offset = "0xB4CDCC", VA = "0xB4CDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72236C", Offset = "0x72236C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xB4CD50", Offset = "0xB4CD50", VA = "0xB4CD50")]
		public AimData()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xB4CDD4", Offset = "0xB4CDD4", VA = "0xB4CDD4")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714FBC", Offset = "0x714FBC")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000282")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0xB4CB9C", Offset = "0xB4CB9C", VA = "0xB4CB9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xB4CC04", Offset = "0xB4CC04", VA = "0xB4CC04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xB4B0A0", Offset = "0xB4B0A0", VA = "0xB4B0A0")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xB4CAB4", Offset = "0xB4CAB4", VA = "0xB4CAB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xB4CAB8", Offset = "0xB4CAB8", VA = "0xB4CAB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xB4CBA4", Offset = "0xB4CBA4", VA = "0xB4CBA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714FCC", Offset = "0x714FCC")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000284")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0xB4C57C", Offset = "0xB4C57C", VA = "0xB4C57C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xB4C5E4", Offset = "0xB4C5E4", VA = "0xB4C5E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xB4B588", Offset = "0xB4B588", VA = "0xB4B588")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xB4C444", Offset = "0xB4C444", VA = "0xB4C444", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xB4C448", Offset = "0xB4C448", VA = "0xB4C448", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xB4C584", Offset = "0xB4C584", VA = "0xB4C584", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714FDC", Offset = "0x714FDC")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000286")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xB4C690", Offset = "0xB4C690", VA = "0xB4C690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xB4C6F8", Offset = "0xB4C6F8", VA = "0xB4C6F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xB4B76C", Offset = "0xB4B76C", VA = "0xB4B76C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xB4C5EC", Offset = "0xB4C5EC", VA = "0xB4C5EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xB4C5F0", Offset = "0xB4C5F0", VA = "0xB4C5F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xB4C698", Offset = "0xB4C698", VA = "0xB4C698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714FEC", Offset = "0x714FEC")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000288")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xB4CA44", Offset = "0xB4CA44", VA = "0xB4CA44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000289")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xB4CAAC", Offset = "0xB4CAAC", VA = "0xB4CAAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xB4B950", Offset = "0xB4B950", VA = "0xB4B950")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xB4C96C", Offset = "0xB4C96C", VA = "0xB4C96C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xB4C970", Offset = "0xB4C970", VA = "0xB4C970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xB4CA4C", Offset = "0xB4CA4C", VA = "0xB4CA4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714FFC", Offset = "0x714FFC")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700028A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xB4C7A4", Offset = "0xB4C7A4", VA = "0xB4C7A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xB4C80C", Offset = "0xB4C80C", VA = "0xB4C80C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xB4BB34", Offset = "0xB4BB34", VA = "0xB4BB34")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xB4C700", Offset = "0xB4C700", VA = "0xB4C700", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xB4C704", Offset = "0xB4C704", VA = "0xB4C704", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xB4C7AC", Offset = "0xB4C7AC", VA = "0xB4C7AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71500C", Offset = "0x71500C")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700028C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xB4CCE0", Offset = "0xB4CCE0", VA = "0xB4CCE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xB4CD48", Offset = "0xB4CD48", VA = "0xB4CD48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xB4BD18", Offset = "0xB4BD18", VA = "0xB4BD18")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xB4CC0C", Offset = "0xB4CC0C", VA = "0xB4CC0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xB4CC10", Offset = "0xB4CC10", VA = "0xB4CC10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xB4CCE8", Offset = "0xB4CCE8", VA = "0xB4CCE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71501C", Offset = "0x71501C")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700028E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xB4C8FC", Offset = "0xB4C8FC", VA = "0xB4C8FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xB4C964", Offset = "0xB4C964", VA = "0xB4C964", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xB4BEFC", Offset = "0xB4BEFC", VA = "0xB4BEFC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xB4C814", Offset = "0xB4C814", VA = "0xB4C814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xB4C818", Offset = "0xB4C818", VA = "0xB4C818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xB4C904", Offset = "0xB4C904", VA = "0xB4C904", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717F8C", Offset = "0x717F8C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717FC4", Offset = "0x717FC4")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x717FFC", Offset = "0x717FFC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718034", Offset = "0x718034")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71806C", Offset = "0x71806C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7180A4", Offset = "0x7180A4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7180DC", Offset = "0x7180DC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718114", Offset = "0x718114")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71814C", Offset = "0x71814C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71815C", Offset = "0x71815C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718194", Offset = "0x718194")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7181DC", Offset = "0x7181DC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7181EC", Offset = "0x7181EC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718224", Offset = "0x718224")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71825C", Offset = "0x71825C")]
	public float AimCollisionRadius;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718294", Offset = "0x718294")]
	public float AimCollisionHeight;

	[Token(Token = "0x170000F5")]
	public States CurrentState
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0xB4A5E4", Offset = "0xB4A5E4", VA = "0xB4A5E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E414", Offset = "0x71E414")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600067E")]
		[Address(RVA = "0xB4A5EC", Offset = "0xB4A5EC", VA = "0xB4A5EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E424", Offset = "0x71E424")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000682")]
		[Address(RVA = "0xB4A81C", Offset = "0xB4A81C", VA = "0xB4A81C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000F7")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0xB4A844", Offset = "0xB4A844", VA = "0xB4A844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E454", Offset = "0x71E454")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000684")]
		[Address(RVA = "0xB4A84C", Offset = "0xB4A84C", VA = "0xB4A84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E464", Offset = "0x71E464")]
		private set
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0xB4A5F4", Offset = "0xB4A5F4", VA = "0xB4A5F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E434", Offset = "0x71E434")]
		add
		{
		}
		[Token(Token = "0x6000680")]
		[Address(RVA = "0xB4A698", Offset = "0xB4A698", VA = "0xB4A698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E444", Offset = "0x71E444")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0xB4AF58", Offset = "0xB4AF58", VA = "0xB4AF58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E4AC", Offset = "0x71E4AC")]
		add
		{
		}
		[Token(Token = "0x600068F")]
		[Address(RVA = "0xB4AFFC", Offset = "0xB4AFFC", VA = "0xB4AFFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E4BC", Offset = "0x71E4BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000691")]
		[Address(RVA = "0xB4B0CC", Offset = "0xB4B0CC", VA = "0xB4B0CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E530", Offset = "0x71E530")]
		add
		{
		}
		[Token(Token = "0x6000692")]
		[Address(RVA = "0xB4B170", Offset = "0xB4B170", VA = "0xB4B170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E540", Offset = "0x71E540")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000693")]
		[Address(RVA = "0xB4B214", Offset = "0xB4B214", VA = "0xB4B214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E550", Offset = "0x71E550")]
		add
		{
		}
		[Token(Token = "0x6000694")]
		[Address(RVA = "0xB4B2B8", Offset = "0xB4B2B8", VA = "0xB4B2B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E560", Offset = "0x71E560")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000696")]
		[Address(RVA = "0xB4B3D0", Offset = "0xB4B3D0", VA = "0xB4B3D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E570", Offset = "0x71E570")]
		add
		{
		}
		[Token(Token = "0x6000697")]
		[Address(RVA = "0xB4B474", Offset = "0xB4B474", VA = "0xB4B474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E580", Offset = "0x71E580")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0xB4B5B4", Offset = "0xB4B5B4", VA = "0xB4B5B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E5F4", Offset = "0x71E5F4")]
		add
		{
		}
		[Token(Token = "0x600069A")]
		[Address(RVA = "0xB4B658", Offset = "0xB4B658", VA = "0xB4B658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E604", Offset = "0x71E604")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0xB4B798", Offset = "0xB4B798", VA = "0xB4B798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E678", Offset = "0x71E678")]
		add
		{
		}
		[Token(Token = "0x600069D")]
		[Address(RVA = "0xB4B83C", Offset = "0xB4B83C", VA = "0xB4B83C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E688", Offset = "0x71E688")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600069F")]
		[Address(RVA = "0xB4B97C", Offset = "0xB4B97C", VA = "0xB4B97C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E6FC", Offset = "0x71E6FC")]
		add
		{
		}
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xB4BA20", Offset = "0xB4BA20", VA = "0xB4BA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E70C", Offset = "0x71E70C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xB4BB60", Offset = "0xB4BB60", VA = "0xB4BB60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E780", Offset = "0x71E780")]
		add
		{
		}
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xB4BC04", Offset = "0xB4BC04", VA = "0xB4BC04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E790", Offset = "0x71E790")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xB4BD44", Offset = "0xB4BD44", VA = "0xB4BD44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E804", Offset = "0x71E804")]
		add
		{
		}
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xB4BDE8", Offset = "0xB4BDE8", VA = "0xB4BDE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E814", Offset = "0x71E814")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xB4BF28", Offset = "0xB4BF28", VA = "0xB4BF28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E888", Offset = "0x71E888")]
		add
		{
		}
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xB4BFCC", Offset = "0xB4BFCC", VA = "0xB4BFCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E898", Offset = "0x71E898")]
		remove
		{
		}
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xB4A2B4", Offset = "0xB4A2B4", VA = "0xB4A2B4")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xB4A2D8", Offset = "0xB4A2D8", VA = "0xB4A2D8")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xB4A73C", Offset = "0xB4A73C", VA = "0xB4A73C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xB4A854", Offset = "0xB4A854", VA = "0xB4A854")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xB4ABAC", Offset = "0xB4ABAC", VA = "0xB4ABAC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x71E474", Offset = "0x71E474")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xB4AC64", Offset = "0xB4AC64", VA = "0xB4AC64")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xB4AD2C", Offset = "0xB4AD2C", VA = "0xB4AD2C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xB4AD48", Offset = "0xB4AD48", VA = "0xB4AD48")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xB4AE10", Offset = "0xB4AE10", VA = "0xB4AE10")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xB4AE54", Offset = "0xB4AE54", VA = "0xB4AE54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xB4AEB0", Offset = "0xB4AEB0", VA = "0xB4AEB0", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xB4AF50", Offset = "0xB4AF50", VA = "0xB4AF50", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xB4AEE0", Offset = "0xB4AEE0", VA = "0xB4AEE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E4CC", Offset = "0x71E4CC")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xB4B35C", Offset = "0xB4B35C", VA = "0xB4B35C")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xB4B518", Offset = "0xB4B518", VA = "0xB4B518")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E590", Offset = "0x71E590")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xB4B6FC", Offset = "0xB4B6FC", VA = "0xB4B6FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E614", Offset = "0x71E614")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xB4B8E0", Offset = "0xB4B8E0", VA = "0xB4B8E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E698", Offset = "0x71E698")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xB4BAC4", Offset = "0xB4BAC4", VA = "0xB4BAC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E71C", Offset = "0x71E71C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xB4BCA8", Offset = "0xB4BCA8", VA = "0xB4BCA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E7A0", Offset = "0x71E7A0")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xB4BE8C", Offset = "0xB4BE8C", VA = "0xB4BE8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E824", Offset = "0x71E824")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xB4C070", Offset = "0xB4C070", VA = "0xB4C070")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xB4C1B4", Offset = "0xB4C1B4", VA = "0xB4C1B4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xB4C1E8", Offset = "0xB4C1E8", VA = "0xB4C1E8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xB4C308", Offset = "0xB4C308", VA = "0xB4C308")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xB4C434", Offset = "0xB4C434", VA = "0xB4C434")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000112")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400001F")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x8EA954", Offset = "0x8EA954", VA = "0x8EA954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E8A8", Offset = "0x71E8A8")]
		add
		{
		}
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x8EA9F8", Offset = "0x8EA9F8", VA = "0x8EA9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E8B8", Offset = "0x71E8B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x8EAA9C", Offset = "0x8EAA9C", VA = "0x8EAA9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E8C8", Offset = "0x71E8C8")]
		add
		{
		}
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x8EAB40", Offset = "0x8EAB40", VA = "0x8EAB40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E8D8", Offset = "0x71E8D8")]
		remove
		{
		}
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x8EABE4", Offset = "0x8EABE4", VA = "0x8EABE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x8EAC8C", Offset = "0x8EAC8C", VA = "0x8EAC8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x8EAC90", Offset = "0x8EAC90", VA = "0x8EAC90")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x8EAD04", Offset = "0x8EAD04", VA = "0x8EAD04")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x8EAE74", Offset = "0x8EAE74", VA = "0x8EAE74")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x8EB158", Offset = "0x8EB158", VA = "0x8EB158")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x8EB348", Offset = "0x8EB348", VA = "0x8EB348")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000113")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x8F34C0", Offset = "0x8F34C0", VA = "0x8F34C0", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x8F3554", Offset = "0x8F3554", VA = "0x8F3554", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60006BC")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x8F3624", Offset = "0x8F3624", VA = "0x8F3624")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000114")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71838C", Offset = "0x71838C")]
	public float Range;

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x8F3634", Offset = "0x8F3634", VA = "0x8F3634", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x8F3790", Offset = "0x8F3790", VA = "0x8F3790")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000115")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7183C4", Offset = "0x7183C4")]
	public float Range;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7183FC", Offset = "0x7183FC")]
	public float MinimumElevation;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718434", Offset = "0x718434")]
	public float Gravity;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71846C", Offset = "0x71846C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71846C", Offset = "0x71846C")]
	public float AimVelocity;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7184C8", Offset = "0x7184C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7184C8", Offset = "0x7184C8")]
	public float AimStep;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x8F37A0", Offset = "0x8F37A0", VA = "0x8F37A0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x8F39EC", Offset = "0x8F39EC", VA = "0x8F39EC")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000116")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718520", Offset = "0x718520")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x8F3A00", Offset = "0x8F3A00", VA = "0x8F3A00")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x8F3AE4", Offset = "0x8F3AE4", VA = "0x8F3AE4")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x8F3B14", Offset = "0x8F3B14", VA = "0x8F3B14")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x8F3B44", Offset = "0x8F3B44", VA = "0x8F3B44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x8F3BE4", Offset = "0x8F3BE4", VA = "0x8F3BE4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x8F3C50", Offset = "0x8F3C50", VA = "0x8F3C50", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x8F3CB8", Offset = "0x8F3CB8", VA = "0x8F3CB8")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000117")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x718558", Offset = "0x718558")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718568", Offset = "0x718568")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7185A0", Offset = "0x7185A0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7185D8", Offset = "0x7185D8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170000F8")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x8F3DD4", Offset = "0x8F3DD4", VA = "0x8F3DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E8E8", Offset = "0x71E8E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x8F3DDC", Offset = "0x8F3DDC", VA = "0x8F3DDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E8F8", Offset = "0x71E8F8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x8F3F8C", Offset = "0x8F3F8C", VA = "0x8F3F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E908", Offset = "0x71E908")]
		add
		{
		}
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x8F4030", Offset = "0x8F4030", VA = "0x8F4030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E918", Offset = "0x71E918")]
		remove
		{
		}
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x8F3DE8", Offset = "0x8F3DE8", VA = "0x8F3DE8")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x8F3E70", Offset = "0x8F3E70", VA = "0x8F3E70")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x8F3F48", Offset = "0x8F3F48", VA = "0x8F3F48")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x8F3F88", Offset = "0x8F3F88", VA = "0x8F3F88")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x8F40D4", Offset = "0x8F40D4", VA = "0x8F40D4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x8F413C", Offset = "0x8F413C", VA = "0x8F413C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x8F415C", Offset = "0x8F415C", VA = "0x8F415C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000118")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20004C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71502C", Offset = "0x71502C")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000290")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x8F4820", Offset = "0x8F4820", VA = "0x8F4820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0x8F4888", Offset = "0x8F4888", VA = "0x8F4888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x8F456C", Offset = "0x8F456C", VA = "0x8F456C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x8F4790", Offset = "0x8F4790", VA = "0x8F4790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x8F4794", Offset = "0x8F4794", VA = "0x8F4794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x8F4828", Offset = "0x8F4828", VA = "0x8F4828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71503C", Offset = "0x71503C")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000292")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x8F4720", Offset = "0x8F4720", VA = "0x8F4720", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000293")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x8F4788", Offset = "0x8F4788", VA = "0x8F4788", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x8F4608", Offset = "0x8F4608", VA = "0x8F4608")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x8F468C", Offset = "0x8F468C", VA = "0x8F468C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x8F4690", Offset = "0x8F4690", VA = "0x8F4690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x8F4728", Offset = "0x8F4728", VA = "0x8F4728", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x8F433C", Offset = "0x8F433C", VA = "0x8F433C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x8F43E8", Offset = "0x8F43E8", VA = "0x8F43E8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x8F4440", Offset = "0x8F4440", VA = "0x8F4440", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x8F44FC", Offset = "0x8F44FC", VA = "0x8F44FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E928", Offset = "0x71E928")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x8F4598", Offset = "0x8F4598", VA = "0x8F4598")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71E98C", Offset = "0x71E98C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006D9")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60006DA")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x8F4634", Offset = "0x8F4634", VA = "0x8F4634")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71E9F0", Offset = "0x71E9F0")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x8F4660", Offset = "0x8F4660", VA = "0x8F4660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EA00", Offset = "0x71EA00")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000119")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20004C9")]
	public enum InputModes
	{
		[Token(Token = "0x4001D0E")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001D0F")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001D10")]
		ThumbstickTeleport,
		[Token(Token = "0x4001D11")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20004CA")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001D13")]
		A,
		[Token(Token = "0x4001D14")]
		B,
		[Token(Token = "0x4001D15")]
		LeftTrigger,
		[Token(Token = "0x4001D16")]
		LeftThumbstick,
		[Token(Token = "0x4001D17")]
		RightTrigger,
		[Token(Token = "0x4001D18")]
		RightThumbstick,
		[Token(Token = "0x4001D19")]
		X,
		[Token(Token = "0x4001D1A")]
		Y
	}

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718620", Offset = "0x718620")]
	public OvrAvatar Avatar;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718658", Offset = "0x718658")]
	public InputModes InputMode;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718690", Offset = "0x718690")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7186C8", Offset = "0x7186C8")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718700", Offset = "0x718700")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x8F4890", Offset = "0x8F4890", VA = "0x8F4890")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x8F4970", Offset = "0x8F4970", VA = "0x8F4970", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x8F4F14", Offset = "0x8F4F14", VA = "0x8F4F14", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x8F4FEC", Offset = "0x8F4FEC", VA = "0x8F4FEC")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x200011A")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x718738", Offset = "0x718738")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718748", Offset = "0x718748")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718780", Offset = "0x718780")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7187B8", Offset = "0x7187B8")]
	public bool FastTeleport;

	[Token(Token = "0x170000F9")]
	public Transform Pointer
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x8F509C", Offset = "0x8F509C", VA = "0x8F509C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EA10", Offset = "0x71EA10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x8F50A4", Offset = "0x8F50A4", VA = "0x8F50A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EA20", Offset = "0x71EA20")]
		private set
		{
		}
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x8F4DB8", Offset = "0x8F4DB8", VA = "0x8F4DB8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x8F50AC", Offset = "0x8F50AC", VA = "0x8F50AC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x8F5098", Offset = "0x8F5098", VA = "0x8F5098")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200011B")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20004CB")]
	public enum InputModes
	{
		[Token(Token = "0x4001D1C")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001D1D")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001D1E")]
		ThumbstickTeleport,
		[Token(Token = "0x4001D1F")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20004CC")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001D21")]
		A,
		[Token(Token = "0x4001D22")]
		B,
		[Token(Token = "0x4001D23")]
		LeftTrigger,
		[Token(Token = "0x4001D24")]
		LeftThumbstick,
		[Token(Token = "0x4001D25")]
		RightTrigger,
		[Token(Token = "0x4001D26")]
		RightThumbstick,
		[Token(Token = "0x4001D27")]
		X,
		[Token(Token = "0x4001D28")]
		Y
	}

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7187F0", Offset = "0x7187F0")]
	public InputModes InputMode;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718828", Offset = "0x718828")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718860", Offset = "0x718860")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718898", Offset = "0x718898")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x8F5164", Offset = "0x8F5164", VA = "0x8F5164")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x8F5168", Offset = "0x8F5168", VA = "0x8F5168", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x8F55B0", Offset = "0x8F55B0", VA = "0x8F55B0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x8F5670", Offset = "0x8F5670", VA = "0x8F5670")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200011C")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20004CD")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001D2A")]
		HeadRelative,
		[Token(Token = "0x4001D2B")]
		ForwardFacing
	}

	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71504C", Offset = "0x71504C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000294")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x8F5B00", Offset = "0x8F5B00", VA = "0x8F5B00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x8F5B68", Offset = "0x8F5B68", VA = "0x8F5B68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x8F58DC", Offset = "0x8F58DC", VA = "0x8F58DC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x8F5A58", Offset = "0x8F5A58", VA = "0x8F5A58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x8F5A5C", Offset = "0x8F5A5C", VA = "0x8F5A5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x8F5B08", Offset = "0x8F5B08", VA = "0x8F5B08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x8F571C", Offset = "0x8F571C", VA = "0x8F571C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x8F57D0", Offset = "0x8F57D0", VA = "0x8F57D0")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x8F57D8", Offset = "0x8F57D8", VA = "0x8F57D8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x8F5824", Offset = "0x8F5824", VA = "0x8F5824", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x8F586C", Offset = "0x8F586C", VA = "0x8F586C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EA30", Offset = "0x71EA30")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006EF")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60006F0")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x8F5908", Offset = "0x8F5908", VA = "0x8F5908")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x8F5A2C", Offset = "0x8F5A2C", VA = "0x8F5A2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EA94", Offset = "0x71EA94")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200011D")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x8F5B70", Offset = "0x8F5B70", VA = "0x8F5B70", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x8F5B74", Offset = "0x8F5B74", VA = "0x8F5B74", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x8F5BF0", Offset = "0x8F5BF0", VA = "0x8F5BF0")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200011E")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7188D0", Offset = "0x7188D0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718908", Offset = "0x718908")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718940", Offset = "0x718940")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718978", Offset = "0x718978")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x8F5BF4", Offset = "0x8F5BF4", VA = "0x8F5BF4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x8F5C64", Offset = "0x8F5C64", VA = "0x8F5C64", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x8F60DC", Offset = "0x8F60DC", VA = "0x8F60DC")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200011F")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7189B0", Offset = "0x7189B0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7189E8", Offset = "0x7189E8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718A20", Offset = "0x718A20")]
	public float RotateStickThreshold;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x8F60E0", Offset = "0x8F60E0", VA = "0x8F60E0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x8F6124", Offset = "0x8F6124", VA = "0x8F6124", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x8F6594", Offset = "0x8F6594", VA = "0x8F6594")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000120")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x8F65A4", Offset = "0x8F65A4", VA = "0x8F65A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x8F65A8", Offset = "0x8F65A8", VA = "0x8F65A8")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x8F65B0", Offset = "0x8F65B0", VA = "0x8F65B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x8F6698", Offset = "0x8F6698", VA = "0x8F6698")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x8F66C0", Offset = "0x8F66C0", VA = "0x8F66C0")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000121")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x718A58", Offset = "0x718A58")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x170000FA")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x8F66D8", Offset = "0x8F66D8", VA = "0x8F66D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EAA4", Offset = "0x71EAA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x8F66E0", Offset = "0x8F66E0", VA = "0x8F66E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EAB4", Offset = "0x71EAB4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x8F34F0", Offset = "0x8F34F0", VA = "0x8F34F0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x8F35F8", Offset = "0x8F35F8", VA = "0x8F35F8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x8F66E8", Offset = "0x8F66E8", VA = "0x8F66E8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x71EAC4", Offset = "0x71EAC4")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x8F3C44", Offset = "0x8F3C44", VA = "0x8F3C44", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x8F3CB0", Offset = "0x8F3CB0", VA = "0x8F3CB0", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x8F362C", Offset = "0x8F362C", VA = "0x8F362C")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000122")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71505C", Offset = "0x71505C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000296")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x8F6D3C", Offset = "0x8F6D3C", VA = "0x8F6D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000297")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x8F6DA4", Offset = "0x8F6DA4", VA = "0x8F6DA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x8F6938", Offset = "0x8F6938", VA = "0x8F6938")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x8F6AD0", Offset = "0x8F6AD0", VA = "0x8F6AD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x8F6AD4", Offset = "0x8F6AD4", VA = "0x8F6AD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x8F6D44", Offset = "0x8F6D44", VA = "0x8F6D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718A68", Offset = "0x718A68")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400073D")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x8F67B0", Offset = "0x8F67B0", VA = "0x8F67B0")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x8F6874", Offset = "0x8F6874", VA = "0x8F6874", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x8F68A0", Offset = "0x8F68A0", VA = "0x8F68A0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x8F68C8", Offset = "0x8F68C8", VA = "0x8F68C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EAFC", Offset = "0x71EAFC")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x8F6964", Offset = "0x8F6964", VA = "0x8F6964", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x600070E")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x8F6980", Offset = "0x8F6980", VA = "0x8F6980", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x8F6AA4", Offset = "0x8F6AA4", VA = "0x8F6AA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EB60", Offset = "0x71EB60")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000123")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x8F6DAC", Offset = "0x8F6DAC", VA = "0x8F6DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x8F6E0C", Offset = "0x8F6E0C", VA = "0x8F6E0C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x8F6F90", Offset = "0x8F6F90", VA = "0x8F6F90", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x8F7080", Offset = "0x8F7080", VA = "0x8F7080")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x71EB70", Offset = "0x71EB70")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x8F7084", Offset = "0x8F7084", VA = "0x8F7084")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000124")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718AA0", Offset = "0x718AA0")]
	public float LOSOffset;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718AD8", Offset = "0x718AD8")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x8F7090", Offset = "0x8F7090", VA = "0x8F7090", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x8F72C0", Offset = "0x8F72C0", VA = "0x8F72C0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000125")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000718")]
	[Address(RVA = "0x8F72CC", Offset = "0x8F72CC", VA = "0x8F72CC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x8F7450", Offset = "0x8F7450", VA = "0x8F7450")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000126")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600071A")]
	[Address(RVA = "0x8F7454", Offset = "0x8F7454", VA = "0x8F7454", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x8F74EC", Offset = "0x8F74EC", VA = "0x8F74EC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600071C")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x8F7580", Offset = "0x8F7580", VA = "0x8F7580")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000127")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71506C", Offset = "0x71506C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000298")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x8F78E8", Offset = "0x8F78E8", VA = "0x8F78E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x8F7950", Offset = "0x8F7950", VA = "0x8F7950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x8F7624", Offset = "0x8F7624", VA = "0x8F7624")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x8F77E8", Offset = "0x8F77E8", VA = "0x8F77E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x8F77EC", Offset = "0x8F77EC", VA = "0x8F77EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x8F78F0", Offset = "0x8F78F0", VA = "0x8F78F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718B10", Offset = "0x718B10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x718B10", Offset = "0x718B10")]
	public float TransitionDuration;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718B68", Offset = "0x718B68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x718B68", Offset = "0x718B68")]
	public float TeleportDelay;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718BBC", Offset = "0x718BBC")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x8F7588", Offset = "0x8F7588", VA = "0x8F7588", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x8F75B4", Offset = "0x8F75B4", VA = "0x8F75B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EBA8", Offset = "0x71EBA8")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x8F7650", Offset = "0x8F7650", VA = "0x8F7650")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000128")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000721")]
	[Address(RVA = "0x8F7958", Offset = "0x8F7958", VA = "0x8F7958", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x8F7974", Offset = "0x8F7974", VA = "0x8F7974")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000129")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71507C", Offset = "0x71507C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700029A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x8F7BC0", Offset = "0x8F7BC0", VA = "0x8F7BC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x8F7C28", Offset = "0x8F7C28", VA = "0x8F7C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x8F7A18", Offset = "0x8F7A18", VA = "0x8F7A18")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x8F7A8C", Offset = "0x8F7A8C", VA = "0x8F7A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x8F7A90", Offset = "0x8F7A90", VA = "0x8F7A90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x8F7BC8", Offset = "0x8F7BC8", VA = "0x8F7BC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718BF4", Offset = "0x718BF4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x718BF4", Offset = "0x718BF4")]
	public float TransitionDuration;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x8F797C", Offset = "0x8F797C", VA = "0x8F797C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x8F79A8", Offset = "0x8F79A8", VA = "0x8F79A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EC0C", Offset = "0x71EC0C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x8F7A44", Offset = "0x8F7A44", VA = "0x8F7A44")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200012A")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xABBF04", Offset = "0xABBF04", VA = "0xABBF04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xABC2D4", Offset = "0xABC2D4", VA = "0xABC2D4")]
	public void TogglePressed(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xABC38C", Offset = "0xABC38C", VA = "0xABC38C")]
	public void RadioPressed(string radioLabel, string group, UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xABC58C", Offset = "0xABC58C", VA = "0xABC58C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xABC674", Offset = "0xABC674", VA = "0xABC674")]
	private void Update()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xABC750", Offset = "0xABC750", VA = "0xABC750")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xABC7BC", Offset = "0xABC7BC", VA = "0xABC7BC")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xABC7C4", Offset = "0xABC7C4", VA = "0xABC7C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EC70", Offset = "0x71EC70")]
	private void <Start>b__2_0(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xABC820", Offset = "0xABC820", VA = "0xABC820")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EC80", Offset = "0x71EC80")]
	private void <Start>b__2_1(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xABC87C", Offset = "0xABC87C", VA = "0xABC87C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EC90", Offset = "0x71EC90")]
	private void <Start>b__2_2(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xABC8D8", Offset = "0xABC8D8", VA = "0xABC8D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71ECA0", Offset = "0x71ECA0")]
	private void <Start>b__2_3(UnityEngine.UI.Toggle t)
	{
	}
}
[Token(Token = "0x200012B")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71508C", Offset = "0x71508C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700029C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xDA7138", Offset = "0xDA7138", VA = "0xDA7138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xDA71A0", Offset = "0xDA71A0", VA = "0xDA71A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xDA6FE8", Offset = "0xDA6FE8", VA = "0xDA6FE8")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xDA701C", Offset = "0xDA701C", VA = "0xDA701C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xDA7020", Offset = "0xDA7020", VA = "0xDA7020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xDA7140", Offset = "0xDA7140", VA = "0xDA7140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xDA6CEC", Offset = "0xDA6CEC", VA = "0xDA6CEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xDA6DEC", Offset = "0xDA6DEC", VA = "0xDA6DEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xDA6D7C", Offset = "0xDA6D7C", VA = "0xDA6D7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71ECB0", Offset = "0x71ECB0")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xDA7014", Offset = "0xDA7014", VA = "0xDA7014")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200012C")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x718C6C", Offset = "0x718C6C")]
	public int SubdivisionsU;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x718C88", Offset = "0x718C88")]
	public int SubdivisionsV;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x91BA34", Offset = "0x91BA34", VA = "0x91BA34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x91C4EC", Offset = "0x91C4EC", VA = "0x91C4EC")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200012D")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x170000FB")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000737")]
		[Address(RVA = "0xB49C08", Offset = "0xB49C08", VA = "0xB49C08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xB49C60", Offset = "0xB49C60", VA = "0xB49C60")]
	public void Start()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xB49FA4", Offset = "0xB49FA4", VA = "0xB49FA4")]
	public void Update()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xB4A088", Offset = "0xB4A088", VA = "0xB4A088")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x71ED14", Offset = "0x71ED14")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600073B")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600073D")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600073E")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600073F")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000740")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000741")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000742")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xB4A0F0", Offset = "0xB4A0F0", VA = "0xB4A0F0")]
	protected void UpdateToggle(UnityEngine.UI.Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xB4A12C", Offset = "0xB4A12C", VA = "0xB4A12C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xB4A1A0", Offset = "0xB4A1A0", VA = "0xB4A1A0")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xB4A2FC", Offset = "0xB4A2FC", VA = "0xB4A2FC")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xB4A3D0", Offset = "0xB4A3D0", VA = "0xB4A3D0")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xB49EB0", Offset = "0xB49EB0", VA = "0xB49EB0")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xB4A490", Offset = "0xB4A490", VA = "0xB4A490")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xB4A4F8", Offset = "0xB4A4F8", VA = "0xB4A4F8")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xB4A5DC", Offset = "0xB4A5DC", VA = "0xB4A5DC")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200012E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713598", Offset = "0x713598")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20004D3")]
	public enum DrawMode
	{
		[Token(Token = "0x4001D41")]
		Opaque,
		[Token(Token = "0x4001D42")]
		OpaqueWithClip,
		[Token(Token = "0x4001D43")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001D44")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x170000FC")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000752")]
		[Address(RVA = "0xC707C8", Offset = "0xC707C8", VA = "0xC707C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000753")]
		[Address(RVA = "0xC7085C", Offset = "0xC7085C", VA = "0xC7085C")]
		set
		{
		}
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xC6F158", Offset = "0xC6F158", VA = "0xC6F158")]
	private void Start()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xC6FDC8", Offset = "0xC6FDC8", VA = "0xC6FDC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xC6FE4C", Offset = "0xC6FE4C", VA = "0xC6FE4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xC6FF40", Offset = "0xC6FF40", VA = "0xC6FF40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xC70034", Offset = "0xC70034", VA = "0xC70034", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xC70238", Offset = "0xC70238", VA = "0xC70238")]
	private void Update()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xC7092C", Offset = "0xC7092C", VA = "0xC7092C")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200012F")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71509C", Offset = "0x71509C")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x8F2670", Offset = "0x8F2670", VA = "0x8F2670")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x8F2780", Offset = "0x8F2780", VA = "0x8F2780")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x8F24B0", Offset = "0x8F24B0", VA = "0x8F24B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x8F2678", Offset = "0x8F2678", VA = "0x8F2678")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x8F2778", Offset = "0x8F2778", VA = "0x8F2778")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000130")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x170000FD")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000759")]
		[Address(RVA = "0xDEF438", Offset = "0xDEF438", VA = "0xDEF438")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000FE")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600075A")]
		[Address(RVA = "0xDEF6F4", Offset = "0xDEF6F4", VA = "0xDEF6F4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000FF")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0xDEC8A0", Offset = "0xDEC8A0", VA = "0xDEC8A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000100")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600075C")]
		[Address(RVA = "0xDEDAC0", Offset = "0xDEDAC0", VA = "0xDEDAC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000101")]
	public static long Duration
	{
		[Token(Token = "0x600075D")]
		[Address(RVA = "0xDEDCA4", Offset = "0xDEDCA4", VA = "0xDEDCA4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000102")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600075E")]
		[Address(RVA = "0xDEDBB0", Offset = "0xDEDBB0", VA = "0xDEDBB0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600075F")]
		[Address(RVA = "0xDED284", Offset = "0xDED284", VA = "0xDED284")]
		set
		{
		}
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xDEE304", Offset = "0xDEE304", VA = "0xDEE304")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xDEE048", Offset = "0xDEE048", VA = "0xDEE048")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xDECF14", Offset = "0xDECF14", VA = "0xDECF14")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xDED098", Offset = "0xDED098", VA = "0xDED098")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xDEDE70", Offset = "0xDEDE70", VA = "0xDEDE70")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xDEE4F8", Offset = "0xDEE4F8", VA = "0xDEE4F8")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xDED904", Offset = "0xDED904", VA = "0xDED904")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000131")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000022")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x915298", Offset = "0x915298", VA = "0x915298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71ED4C", Offset = "0x71ED4C")]
		add
		{
		}
		[Token(Token = "0x6000769")]
		[Address(RVA = "0x91533C", Offset = "0x91533C", VA = "0x91533C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71ED5C", Offset = "0x71ED5C")]
		remove
		{
		}
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x9153E0", Offset = "0x9153E0", VA = "0x9153E0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x9153F4", Offset = "0x9153F4", VA = "0x9153F4")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000132")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20004D5")]
	public enum ButtonType
	{
		[Token(Token = "0x4001D48")]
		Play,
		[Token(Token = "0x4001D49")]
		Pause,
		[Token(Token = "0x4001D4A")]
		FastForward,
		[Token(Token = "0x4001D4B")]
		Rewind,
		[Token(Token = "0x4001D4C")]
		SkipForward,
		[Token(Token = "0x4001D4D")]
		SkipBack,
		[Token(Token = "0x4001D4E")]
		Stop
	}

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000103")]
	public ButtonType buttonType
	{
		[Token(Token = "0x600076C")]
		[Address(RVA = "0xC1138C", Offset = "0xC1138C", VA = "0xC1138C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x600076D")]
		[Address(RVA = "0xC11394", Offset = "0xC11394", VA = "0xC11394")]
		set
		{
		}
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xC113B8", Offset = "0xC113B8", VA = "0xC113B8", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xC12884", Offset = "0xC12884", VA = "0xC12884")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000133")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20004D6")]
	public enum VideoShape
	{
		[Token(Token = "0x4001D50")]
		_360,
		[Token(Token = "0x4001D51")]
		_180,
		[Token(Token = "0x4001D52")]
		Quad
	}

	[Token(Token = "0x20004D7")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001D54")]
		Mono,
		[Token(Token = "0x4001D55")]
		TopBottom,
		[Token(Token = "0x4001D56")]
		LeftRight
	}

	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7150AC", Offset = "0x7150AC")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700029E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0xDEE7C0", Offset = "0xDEE7C0", VA = "0xDEE7C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0xDEE828", Offset = "0xDEE828", VA = "0xDEE828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xDECC10", Offset = "0xDECC10", VA = "0xDECC10")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xDEE63C", Offset = "0xDEE63C", VA = "0xDEE63C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xDEE640", Offset = "0xDEE640", VA = "0xDEE640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xDEE7C8", Offset = "0xDEE7C8", VA = "0xDEE7C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7150BC", Offset = "0x7150BC")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xDECE78", Offset = "0xDECE78", VA = "0xDECE78")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xDEE230", Offset = "0xDEE230", VA = "0xDEE230")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x718D34", Offset = "0x718D34")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x718D44", Offset = "0x718D44")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x718D54", Offset = "0x718D54")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000104")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000770")]
		[Address(RVA = "0xDEC654", Offset = "0xDEC654", VA = "0xDEC654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71ED6C", Offset = "0x71ED6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000771")]
		[Address(RVA = "0xDEC65C", Offset = "0xDEC65C", VA = "0xDEC65C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71ED7C", Offset = "0x71ED7C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public long Duration
	{
		[Token(Token = "0x6000772")]
		[Address(RVA = "0xDEC668", Offset = "0xDEC668", VA = "0xDEC668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71ED8C", Offset = "0x71ED8C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000773")]
		[Address(RVA = "0xDEC670", Offset = "0xDEC670", VA = "0xDEC670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71ED9C", Offset = "0x71ED9C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000774")]
		[Address(RVA = "0xDEC678", Offset = "0xDEC678", VA = "0xDEC678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EDAC", Offset = "0x71EDAC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000775")]
		[Address(RVA = "0xDEC680", Offset = "0xDEC680", VA = "0xDEC680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71EDBC", Offset = "0x71EDBC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xDEC688", Offset = "0xDEC688", VA = "0xDEC688")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xDEC908", Offset = "0xDEC908", VA = "0xDEC908")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xDEC970", Offset = "0xDEC970", VA = "0xDEC970")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xDECBA0", Offset = "0xDECBA0", VA = "0xDECBA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EDCC", Offset = "0x71EDCC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xDECC3C", Offset = "0xDECC3C", VA = "0xDECC3C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xDECE80", Offset = "0xDECE80", VA = "0xDECE80")]
	public void Play()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xDED008", Offset = "0xDED008", VA = "0xDED008")]
	public void Pause()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xDED18C", Offset = "0xDED18C", VA = "0xDED18C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xDED3C4", Offset = "0xDED3C4", VA = "0xDED3C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xDEDD98", Offset = "0xDEDD98", VA = "0xDEDD98")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xDEDFB8", Offset = "0xDEDFB8", VA = "0xDEDFB8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xDEE13C", Offset = "0xDEE13C", VA = "0xDEE13C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xDEE220", Offset = "0xDEE220", VA = "0xDEE220")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000134")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20004DA")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001D5E")]
		Playing,
		[Token(Token = "0x4001D5F")]
		Paused,
		[Token(Token = "0x4001D60")]
		Rewinding,
		[Token(Token = "0x4001D61")]
		FastForwarding
	}

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xDEE830", Offset = "0xDEE830", VA = "0xDEE830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xDEEAE4", Offset = "0xDEEAE4", VA = "0xDEEAE4")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xDEEC10", Offset = "0xDEEC10", VA = "0xDEEC10")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xDEED1C", Offset = "0xDEED1C", VA = "0xDEED1C")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xDEEDFC", Offset = "0xDEEDFC", VA = "0xDEEDFC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xDEECF0", Offset = "0xDEECF0", VA = "0xDEECF0")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xDEEEC4", Offset = "0xDEEEC4", VA = "0xDEEEC4")]
	private void Update()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xDEE9D8", Offset = "0xDEE9D8", VA = "0xDEE9D8")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xDEF2C0", Offset = "0xDEF2C0", VA = "0xDEF2C0")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000135")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7135FC", Offset = "0x7135FC")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20004DB")]
	private enum CubeFace
	{
		[Token(Token = "0x4001D63")]
		Right,
		[Token(Token = "0x4001D64")]
		Left,
		[Token(Token = "0x4001D65")]
		Top,
		[Token(Token = "0x4001D66")]
		Bottom,
		[Token(Token = "0x4001D67")]
		Front,
		[Token(Token = "0x4001D68")]
		Back,
		[Token(Token = "0x4001D69")]
		COUNT
	}

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xC709E4", Offset = "0xC709E4", VA = "0xC709E4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xC70B44", Offset = "0xC70B44", VA = "0xC70B44")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xC70D00", Offset = "0xC70D00", VA = "0xC70D00")]
	private void Update()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xC711D8", Offset = "0xC711D8", VA = "0xC711D8")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xC714AC", Offset = "0xC714AC", VA = "0xC714AC")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xC72708", Offset = "0xC72708", VA = "0xC72708")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xC72768", Offset = "0xC72768", VA = "0xC72768")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xC7182C", Offset = "0xC7182C", VA = "0xC7182C")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xC72850", Offset = "0xC72850", VA = "0xC72850")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xC72A3C", Offset = "0xC72A3C", VA = "0xC72A3C")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xC71CE4", Offset = "0xC71CE4", VA = "0xC71CE4")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xC7200C", Offset = "0xC7200C", VA = "0xC7200C")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xC72364", Offset = "0xC72364", VA = "0xC72364")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xC72BF0", Offset = "0xC72BF0", VA = "0xC72BF0")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000136")]
public static class VectorUtil
{
	[Token(Token = "0x600079B")]
	[Address(RVA = "0xD5D768", Offset = "0xD5D768", VA = "0xD5D768")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000137")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x713680", Offset = "0x713680")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20004DC")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001D6B")]
		MouseXAndY,
		[Token(Token = "0x4001D6C")]
		MouseX,
		[Token(Token = "0x4001D6D")]
		MouseY
	}

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xDEA37C", Offset = "0xDEA37C", VA = "0xDEA37C")]
	private void Update()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xDEA5DC", Offset = "0xDEA5DC", VA = "0xDEA5DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xDEA69C", Offset = "0xDEA69C", VA = "0xDEA69C")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000138")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20004DD")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001D6F")]
		Uninitialized = -1,
		[Token(Token = "0x4001D70")]
		NotEnabled,
		[Token(Token = "0x4001D71")]
		Success,
		[Token(Token = "0x4001D72")]
		StreamError,
		[Token(Token = "0x4001D73")]
		ProcessError,
		[Token(Token = "0x4001D74")]
		MaxStatValue
	}

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000107")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600079F")]
		[Address(RVA = "0x101A704", Offset = "0x101A704", VA = "0x101A704")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x101A70C", Offset = "0x101A70C", VA = "0x101A70C")]
		set
		{
		}
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x101A718", Offset = "0x101A718", VA = "0x101A718")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x101A934", Offset = "0x101A934", VA = "0x101A934")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x101AB90", Offset = "0x101AB90", VA = "0x101AB90")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000139")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20004DE")]
	private enum Parameters
	{
		[Token(Token = "0x4001D76")]
		P_GAIN,
		[Token(Token = "0x4001D77")]
		P_USEINVSQR,
		[Token(Token = "0x4001D78")]
		P_NEAR,
		[Token(Token = "0x4001D79")]
		P_FAR,
		[Token(Token = "0x4001D7A")]
		P_RADIUS,
		[Token(Token = "0x4001D7B")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001D7C")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001D7D")]
		P_AMBISTAT,
		[Token(Token = "0x4001D7E")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001D7F")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001D80")]
		P_SENDLEVEL,
		[Token(Token = "0x4001D81")]
		P_NUM
	}

	[Token(Token = "0x40007CC")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000108")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x101AEFC", Offset = "0x101AEFC", VA = "0x101AEFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x101AF04", Offset = "0x101AF04", VA = "0x101AF04")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public float Gain
	{
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x101AF10", Offset = "0x101AF10", VA = "0x101AF10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x101AF18", Offset = "0x101AF18", VA = "0x101AF18")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x101AF9C", Offset = "0x101AF9C", VA = "0x101AF9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x101AFA4", Offset = "0x101AFA4", VA = "0x101AFA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public float Near
	{
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x101AFB0", Offset = "0x101AFB0", VA = "0x101AFB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x101AFB8", Offset = "0x101AFB8", VA = "0x101AFB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public float Far
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x101B040", Offset = "0x101B040", VA = "0x101B040")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x101B048", Offset = "0x101B048", VA = "0x101B048")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x101B0D0", Offset = "0x101B0D0", VA = "0x101B0D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x101B0D8", Offset = "0x101B0D8", VA = "0x101B0D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public float ReverbSend
	{
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x101B160", Offset = "0x101B160", VA = "0x101B160")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x101B168", Offset = "0x101B168", VA = "0x101B168")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public bool EnableRfl
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x101B1F0", Offset = "0x101B1F0", VA = "0x101B1F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x101B1F8", Offset = "0x101B1F8", VA = "0x101B1F8")]
		set
		{
		}
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x101AC14", Offset = "0x101AC14", VA = "0x101AC14")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x71EE40", Offset = "0x71EE40")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x101AE1C", Offset = "0x101AE1C", VA = "0x101AE1C")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x101B204", Offset = "0x101B204", VA = "0x101B204")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x101B378", Offset = "0x101B378", VA = "0x101B378")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x101B37C", Offset = "0x101B37C", VA = "0x101B37C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x101B270", Offset = "0x101B270", VA = "0x101B270")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x101B444", Offset = "0x101B444", VA = "0x101B444")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x101B8A4", Offset = "0x101B8A4", VA = "0x101B8A4")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x101AD9C", Offset = "0x101AD9C", VA = "0x101AD9C")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x101B974", Offset = "0x101B974", VA = "0x101B974")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x200013A")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40007D7")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40007D9")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x101B994", Offset = "0x101B994", VA = "0x101B994")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x101B9A0", Offset = "0x101B9A0", VA = "0x101B9A0")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x101BA58", Offset = "0x101BA58", VA = "0x101BA58")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x101B9D8", Offset = "0x101B9D8", VA = "0x101B9D8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x101BAD8", Offset = "0x101BAD8", VA = "0x101BAD8")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x200013B")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20004DF")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20004E0")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40007E0")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000110")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x101E554", Offset = "0x101E554", VA = "0x101E554")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000111")]
	public string filePath
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x101E5E0", Offset = "0x101E5E0", VA = "0x101E5E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x101E658", Offset = "0x101E658", VA = "0x101E658")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x101E7A0", Offset = "0x101E7A0", VA = "0x101E7A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x101E7A4", Offset = "0x101E7A4", VA = "0x101E7A4")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x101ED04", Offset = "0x101ED04", VA = "0x101ED04")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x101F09C", Offset = "0x101F09C", VA = "0x101F09C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x101F1F8", Offset = "0x101F1F8", VA = "0x101F1F8")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x101F8D0", Offset = "0x101F8D0", VA = "0x101F8D0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x101F90C", Offset = "0x101F90C", VA = "0x101F90C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x10210B4", Offset = "0x10210B4", VA = "0x10210B4")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1020F8C", Offset = "0x1020F8C", VA = "0x1020F8C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x101EB3C", Offset = "0x101EB3C", VA = "0x101EB3C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x101E970", Offset = "0x101E970", VA = "0x101E970")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x10216C8", Offset = "0x10216C8", VA = "0x10216C8")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1021B04", Offset = "0x1021B04", VA = "0x1021B04")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x200013C")]
internal class ONSPPropagation
{
	[Token(Token = "0x20004E1")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001D88")]
		Int8,
		[Token(Token = "0x4001D89")]
		UInt8,
		[Token(Token = "0x4001D8A")]
		Int16,
		[Token(Token = "0x4001D8B")]
		UInt16,
		[Token(Token = "0x4001D8C")]
		Int32,
		[Token(Token = "0x4001D8D")]
		UInt32,
		[Token(Token = "0x4001D8E")]
		Int64,
		[Token(Token = "0x4001D8F")]
		UInt64,
		[Token(Token = "0x4001D90")]
		Float16,
		[Token(Token = "0x4001D91")]
		Float32,
		[Token(Token = "0x4001D92")]
		Float64
	}

	[Token(Token = "0x20004E2")]
	public class ClientType
	{
		[Token(Token = "0x4001D93")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001D94")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001D95")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001D96")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001D97")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001D98")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001D99")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001D9A")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001D9B")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001D9C")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001D9D")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001D9E")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001D9F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001DA0")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x101BF8C", Offset = "0x101BF8C", VA = "0x101BF8C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20004E3")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001CA1")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001CA2")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001CA3")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001CA4")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001CA5")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001CA6")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001CA7")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001CA8")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001CA9")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001CAA")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001CAB")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001CAC")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001CAD")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001CAE")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001CAF")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20004E4")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001DA1")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170002A0")]
		private IntPtr context
		{
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x101CBFC", Offset = "0x101CBFC", VA = "0x101CBFC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x101CC60", Offset = "0x101CC60", VA = "0x101CC60")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x101CCF0", Offset = "0x101CCF0", VA = "0x101CCF0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x101CD80", Offset = "0x101CD80", VA = "0x101CD80", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x101CDA4", Offset = "0x101CDA4", VA = "0x101CDA4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x101CE34", Offset = "0x101CE34", VA = "0x101CE34", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x101CE58", Offset = "0x101CE58", VA = "0x101CE58")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x101CEE4", Offset = "0x101CEE4", VA = "0x101CEE4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x101CF08", Offset = "0x101CF08", VA = "0x101CF08")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x101CF88", Offset = "0x101CF88", VA = "0x101CF88", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x101CF90", Offset = "0x101CF90", VA = "0x101CF90")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x101D0B0", Offset = "0x101D0B0", VA = "0x101D0B0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x101D1A8", Offset = "0x101D1A8", VA = "0x101D1A8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x101D240", Offset = "0x101D240", VA = "0x101D240", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x101D24C", Offset = "0x101D24C", VA = "0x101D24C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x101D378", Offset = "0x101D378", VA = "0x101D378", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x101D384", Offset = "0x101D384", VA = "0x101D384")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x101D430", Offset = "0x101D430", VA = "0x101D430", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x101D43C", Offset = "0x101D43C", VA = "0x101D43C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x101D4E8", Offset = "0x101D4E8", VA = "0x101D4E8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x101D4F4", Offset = "0x101D4F4", VA = "0x101D4F4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x101D5A0", Offset = "0x101D5A0", VA = "0x101D5A0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x101D5AC", Offset = "0x101D5AC", VA = "0x101D5AC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x101D638", Offset = "0x101D638", VA = "0x101D638", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x101D65C", Offset = "0x101D65C", VA = "0x101D65C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x101D6DC", Offset = "0x101D6DC", VA = "0x101D6DC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x101D6E4", Offset = "0x101D6E4", VA = "0x101D6E4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x101D78C", Offset = "0x101D78C", VA = "0x101D78C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x101D798", Offset = "0x101D798", VA = "0x101D798")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x101D840", Offset = "0x101D840", VA = "0x101D840", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x101D850", Offset = "0x101D850", VA = "0x101D850")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x101D8E0", Offset = "0x101D8E0", VA = "0x101D8E0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x101BF38", Offset = "0x101BF38", VA = "0x101BF38")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20004E5")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001DA3")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170002A1")]
		private IntPtr context
		{
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0x101D8EC", Offset = "0x101D8EC", VA = "0x101D8EC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x101BD80", Offset = "0x101BD80", VA = "0x101BD80")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x101D950", Offset = "0x101D950", VA = "0x101D950")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x101D9E0", Offset = "0x101D9E0", VA = "0x101D9E0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x101DA04", Offset = "0x101DA04", VA = "0x101DA04")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x101DA94", Offset = "0x101DA94", VA = "0x101DA94", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x101DAB8", Offset = "0x101DAB8", VA = "0x101DAB8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x101DB48", Offset = "0x101DB48", VA = "0x101DB48", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x101DB6C", Offset = "0x101DB6C", VA = "0x101DB6C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x101DBEC", Offset = "0x101DBEC", VA = "0x101DBEC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x101DBF4", Offset = "0x101DBF4", VA = "0x101DBF4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x101DD14", Offset = "0x101DD14", VA = "0x101DD14", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x101DE0C", Offset = "0x101DE0C", VA = "0x101DE0C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x101DEA4", Offset = "0x101DEA4", VA = "0x101DEA4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x101DEB0", Offset = "0x101DEB0", VA = "0x101DEB0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x101DFDC", Offset = "0x101DFDC", VA = "0x101DFDC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x101DFE8", Offset = "0x101DFE8", VA = "0x101DFE8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x101E094", Offset = "0x101E094", VA = "0x101E094", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x101E0A0", Offset = "0x101E0A0", VA = "0x101E0A0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x101E14C", Offset = "0x101E14C", VA = "0x101E14C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x101E158", Offset = "0x101E158", VA = "0x101E158")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x101E204", Offset = "0x101E204", VA = "0x101E204", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x101E210", Offset = "0x101E210", VA = "0x101E210")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x101E2A0", Offset = "0x101E2A0", VA = "0x101E2A0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x101E2C4", Offset = "0x101E2C4", VA = "0x101E2C4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x101E344", Offset = "0x101E344", VA = "0x101E344", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x101E34C", Offset = "0x101E34C", VA = "0x101E34C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x101E3F4", Offset = "0x101E3F4", VA = "0x101E3F4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x101E400", Offset = "0x101E400", VA = "0x101E400")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x101E4A8", Offset = "0x101E4A8", VA = "0x101E4A8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x101E4B8", Offset = "0x101E4B8", VA = "0x101E4B8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x101E548", Offset = "0x101E548", VA = "0x101E548", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x101BE10", Offset = "0x101BE10", VA = "0x101BE10")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20004E6")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001DA5")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170002A2")]
		private IntPtr context
		{
			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0x101BF94", Offset = "0x101BF94", VA = "0x101BF94")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x101BE5C", Offset = "0x101BE5C", VA = "0x101BE5C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x101BFF8", Offset = "0x101BFF8", VA = "0x101BFF8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x101C088", Offset = "0x101C088", VA = "0x101C088", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x101C0AC", Offset = "0x101C0AC", VA = "0x101C0AC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x101C13C", Offset = "0x101C13C", VA = "0x101C13C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x101C160", Offset = "0x101C160", VA = "0x101C160")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x101C1F0", Offset = "0x101C1F0", VA = "0x101C1F0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x101C214", Offset = "0x101C214", VA = "0x101C214")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x101C294", Offset = "0x101C294", VA = "0x101C294", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x101C29C", Offset = "0x101C29C", VA = "0x101C29C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x101C3BC", Offset = "0x101C3BC", VA = "0x101C3BC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x101C4B4", Offset = "0x101C4B4", VA = "0x101C4B4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x101C54C", Offset = "0x101C54C", VA = "0x101C54C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x101C558", Offset = "0x101C558", VA = "0x101C558")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x101C684", Offset = "0x101C684", VA = "0x101C684", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x101C690", Offset = "0x101C690", VA = "0x101C690")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x101C73C", Offset = "0x101C73C", VA = "0x101C73C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x101C748", Offset = "0x101C748", VA = "0x101C748")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x101C7F4", Offset = "0x101C7F4", VA = "0x101C7F4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x101C800", Offset = "0x101C800", VA = "0x101C800")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x101C8AC", Offset = "0x101C8AC", VA = "0x101C8AC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x101C8B8", Offset = "0x101C8B8", VA = "0x101C8B8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x101C948", Offset = "0x101C948", VA = "0x101C948", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x101C96C", Offset = "0x101C96C", VA = "0x101C96C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x101C9EC", Offset = "0x101C9EC", VA = "0x101C9EC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x101C9F4", Offset = "0x101C9F4", VA = "0x101C9F4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x101CA9C", Offset = "0x101CA9C", VA = "0x101CA9C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x101CAA8", Offset = "0x101CAA8", VA = "0x101CAA8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x101CB50", Offset = "0x101CB50", VA = "0x101CB50", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x101CB60", Offset = "0x101CB60", VA = "0x101CB60")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x101CBF0", Offset = "0x101CBF0", VA = "0x101CBF0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x101BEEC", Offset = "0x101BEEC", VA = "0x101BEEC")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000112")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x101BAE8", Offset = "0x101BAE8", VA = "0x101BAE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x101BB58", Offset = "0x101BB58", VA = "0x101BB58")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x101BF84", Offset = "0x101BF84", VA = "0x101BF84")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x200013D")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20004E7")]
	public enum Preset
	{
		[Token(Token = "0x4001DA8")]
		Custom,
		[Token(Token = "0x4001DA9")]
		AcousticTile,
		[Token(Token = "0x4001DAA")]
		Brick,
		[Token(Token = "0x4001DAB")]
		BrickPainted,
		[Token(Token = "0x4001DAC")]
		Carpet,
		[Token(Token = "0x4001DAD")]
		CarpetHeavy,
		[Token(Token = "0x4001DAE")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001DAF")]
		CeramicTile,
		[Token(Token = "0x4001DB0")]
		Concrete,
		[Token(Token = "0x4001DB1")]
		ConcreteRough,
		[Token(Token = "0x4001DB2")]
		ConcreteBlock,
		[Token(Token = "0x4001DB3")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001DB4")]
		Curtain,
		[Token(Token = "0x4001DB5")]
		Foliage,
		[Token(Token = "0x4001DB6")]
		Glass,
		[Token(Token = "0x4001DB7")]
		GlassHeavy,
		[Token(Token = "0x4001DB8")]
		Grass,
		[Token(Token = "0x4001DB9")]
		Gravel,
		[Token(Token = "0x4001DBA")]
		GypsumBoard,
		[Token(Token = "0x4001DBB")]
		PlasterOnBrick,
		[Token(Token = "0x4001DBC")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001DBD")]
		Soil,
		[Token(Token = "0x4001DBE")]
		SoundProof,
		[Token(Token = "0x4001DBF")]
		Snow,
		[Token(Token = "0x4001DC0")]
		Steel,
		[Token(Token = "0x4001DC1")]
		Water,
		[Token(Token = "0x4001DC2")]
		WoodThin,
		[Token(Token = "0x4001DC3")]
		WoodThick,
		[Token(Token = "0x4001DC4")]
		WoodFloor,
		[Token(Token = "0x4001DC5")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20004E8")]
	public sealed class Point
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x10299D8", Offset = "0x10299D8", VA = "0x10299D8")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1029B20", Offset = "0x1029B20", VA = "0x1029B20")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x1029B90", Offset = "0x1029B90", VA = "0x1029B90")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20004E9")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7150CC", Offset = "0x7150CC")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715904", Offset = "0x715904")]
		private sealed class <>c
		{
			[Token(Token = "0x40021C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6002074")]
			[Address(RVA = "0x1029FE8", Offset = "0x1029FE8", VA = "0x1029FE8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002075")]
			[Address(RVA = "0x1029FF0", Offset = "0x1029FF0", VA = "0x1029FF0")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6002076")]
			[Address(RVA = "0x102A008", Offset = "0x102A008", VA = "0x102A008")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170002A3")]
		public float Item
		{
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x1029BC8", Offset = "0x1029BC8", VA = "0x1029BC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x1029AA8", Offset = "0x1029AA8", VA = "0x1029AA8")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718DF4", Offset = "0x718DF4")]
	public Spectrum absorption;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718E2C", Offset = "0x718E2C")]
	public Spectrum transmission;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x718E64", Offset = "0x718E64")]
	public Spectrum scattering;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000113")]
	public Preset preset
	{
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1021BDC", Offset = "0x1021BDC", VA = "0x1021BDC")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1021BE4", Offset = "0x1021BE4", VA = "0x1021BE4")]
		set
		{
		}
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1021C0C", Offset = "0x1021C0C", VA = "0x1021C0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x102155C", Offset = "0x102155C", VA = "0x102155C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x10221BC", Offset = "0x10221BC", VA = "0x10221BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x10221C0", Offset = "0x10221C0", VA = "0x10221C0")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1021C10", Offset = "0x1021C10", VA = "0x1021C10")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x1020DF8", Offset = "0x1020DF8", VA = "0x1020DF8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x10222A4", Offset = "0x10222A4", VA = "0x10222A4")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1022704", Offset = "0x1022704", VA = "0x1022704")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1022B64", Offset = "0x1022B64", VA = "0x1022B64")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1022FC4", Offset = "0x1022FC4", VA = "0x1022FC4")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1023424", Offset = "0x1023424", VA = "0x1023424")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1023884", Offset = "0x1023884", VA = "0x1023884")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x1023CE4", Offset = "0x1023CE4", VA = "0x1023CE4")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1024144", Offset = "0x1024144", VA = "0x1024144")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x10245A4", Offset = "0x10245A4", VA = "0x10245A4")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x1024A04", Offset = "0x1024A04", VA = "0x1024A04")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1024E64", Offset = "0x1024E64", VA = "0x1024E64")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x10252C4", Offset = "0x10252C4", VA = "0x10252C4")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1025724", Offset = "0x1025724", VA = "0x1025724")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1025B84", Offset = "0x1025B84", VA = "0x1025B84")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1025FDC", Offset = "0x1025FDC", VA = "0x1025FDC")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x102643C", Offset = "0x102643C", VA = "0x102643C")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1026778", Offset = "0x1026778", VA = "0x1026778")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1026AB4", Offset = "0x1026AB4", VA = "0x1026AB4")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1026F14", Offset = "0x1026F14", VA = "0x1026F14")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1027374", Offset = "0x1027374", VA = "0x1027374")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x10277D4", Offset = "0x10277D4", VA = "0x10277D4")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1027B10", Offset = "0x1027B10", VA = "0x1027B10")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1027C6C", Offset = "0x1027C6C", VA = "0x1027C6C")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1027FA8", Offset = "0x1027FA8", VA = "0x1027FA8")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1028400", Offset = "0x1028400", VA = "0x1028400")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1028860", Offset = "0x1028860", VA = "0x1028860")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1028CB8", Offset = "0x1028CB8", VA = "0x1028CB8")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1029118", Offset = "0x1029118", VA = "0x1029118")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1029578", Offset = "0x1029578", VA = "0x1029578")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1029A10", Offset = "0x1029A10", VA = "0x1029A10")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200013E")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x102A020", Offset = "0x102A020", VA = "0x102A020")]
	private void Update()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x102A0F0", Offset = "0x102A0F0", VA = "0x102A0F0")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200013F")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000114")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x101AC88", Offset = "0x101AC88", VA = "0x101AC88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x102A6AC", Offset = "0x102A6AC", VA = "0x102A6AC")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000140")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40007EB")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000803")]
	[Address(RVA = "0x102A6BC", Offset = "0x102A6BC", VA = "0x102A6BC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x102A754", Offset = "0x102A754", VA = "0x102A754")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x102A860", Offset = "0x102A860", VA = "0x102A860")]
	private void Start()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x102A864", Offset = "0x102A864", VA = "0x102A864")]
	private void Update()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x102A868", Offset = "0x102A868", VA = "0x102A868")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000141")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20004EA")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x40007FB")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000801")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x9CFD90", Offset = "0x9CFD90", VA = "0x9CFD90")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x9CFDC8", Offset = "0x9CFDC8", VA = "0x9CFDC8")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x9CFF98", Offset = "0x9CFF98", VA = "0x9CFF98")]
	private void Start()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x9D0048", Offset = "0x9D0048", VA = "0x9D0048")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x9D013C", Offset = "0x9D013C", VA = "0x9D013C")]
	private void Update()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x9D0AA4", Offset = "0x9D0AA4", VA = "0x9D0AA4")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600080E")]
	[Address(RVA = "0x9D002C", Offset = "0x9D002C", VA = "0x9D002C")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600080F")]
	[Address(RVA = "0x9D00AC", Offset = "0x9D00AC", VA = "0x9D00AC")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000810")]
	[Address(RVA = "0x9D080C", Offset = "0x9D080C", VA = "0x9D080C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000811")]
	[Address(RVA = "0x9D088C", Offset = "0x9D088C", VA = "0x9D088C")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000812")]
	[Address(RVA = "0x9D0914", Offset = "0x9D0914", VA = "0x9D0914")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000813")]
	[Address(RVA = "0x9D099C", Offset = "0x9D099C", VA = "0x9D099C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000814")]
	[Address(RVA = "0x9D0A1C", Offset = "0x9D0A1C", VA = "0x9D0A1C")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000815")]
	[Address(RVA = "0x9D18DC", Offset = "0x9D18DC", VA = "0x9D18DC")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000816")]
	[Address(RVA = "0x9D1984", Offset = "0x9D1984", VA = "0x9D1984")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x9D1A2C", Offset = "0x9D1A2C", VA = "0x9D1A2C")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000142")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000143")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x102A100", Offset = "0x102A100", VA = "0x102A100")]
	private void Start()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x102A104", Offset = "0x102A104", VA = "0x102A104")]
	private void Update()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x102A108", Offset = "0x102A108", VA = "0x102A108")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x102A270", Offset = "0x102A270", VA = "0x102A270")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x102A154", Offset = "0x102A154", VA = "0x102A154")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x102A1E4", Offset = "0x102A1E4", VA = "0x102A1E4")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x102A2BC", Offset = "0x102A2BC", VA = "0x102A2BC")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x102A354", Offset = "0x102A354", VA = "0x102A354")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x102A4BC", Offset = "0x102A4BC", VA = "0x102A4BC")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x102A624", Offset = "0x102A624", VA = "0x102A624")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000144")]
public class HumanPlayerControl : MonoBehaviour
{
	[Token(Token = "0x4000808")]
	private const float PLAYER_HEIGHT = 2f;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Cam;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotSpeed;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float moveSpeed;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask ConstraintLayer;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 direction;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xDA7B58", Offset = "0xDA7B58", VA = "0xDA7B58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xDA7BB0", Offset = "0xDA7BB0", VA = "0xDA7BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xDA7EB4", Offset = "0xDA7EB4", VA = "0xDA7EB4")]
	public void Move(Vector2 _joystickValue)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xDA7C78", Offset = "0xDA7C78", VA = "0xDA7C78")]
	public void MoveByKeyboad()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xDA8000", Offset = "0xDA8000", VA = "0xDA8000")]
	private bool WasDetectObstacle(Vector3 localDirection)
	{
		return default(bool);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xDA8224", Offset = "0xDA8224", VA = "0xDA8224")]
	public void StopMove()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xDA8284", Offset = "0xDA8284", VA = "0xDA8284")]
	public HumanPlayerControl()
	{
	}
}
[Token(Token = "0x2000145")]
public class PlayerCamera : MonoBehaviour
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CameraTarget;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xA8F90C", Offset = "0xA8F90C", VA = "0xA8F90C")]
	private void Start()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xA8F910", Offset = "0xA8F910", VA = "0xA8F910")]
	private void Update()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xA8F968", Offset = "0xA8F968", VA = "0xA8F968")]
	public PlayerCamera()
	{
	}
}
[Token(Token = "0x2000146")]
public class Rope : MonoBehaviour
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] vertices;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer line;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x957548", Offset = "0x957548", VA = "0x957548")]
	private void Start()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x957640", Offset = "0x957640", VA = "0x957640")]
	private void Update()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x9576DC", Offset = "0x9576DC", VA = "0x9576DC")]
	public Rope()
	{
	}
}
[Token(Token = "0x2000147")]
public class ArrowMove : MonoBehaviour
{
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minPosYArrow;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startArrow;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x912050", Offset = "0x912050", VA = "0x912050")]
	private void Start()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x912098", Offset = "0x912098", VA = "0x912098")]
	private void Update()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x91209C", Offset = "0x91209C", VA = "0x91209C")]
	private void AutoMoveArrow()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x9121EC", Offset = "0x9121EC", VA = "0x9121EC")]
	public ArrowMove()
	{
	}
}
[Token(Token = "0x2000148")]
public class CheckGotoGoal : MonoBehaviour
{
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGotoGoal;

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x91E8D0", Offset = "0x91E8D0", VA = "0x91E8D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x91E95C", Offset = "0x91E95C", VA = "0x91E95C")]
	public CheckGotoGoal()
	{
	}
}
[Token(Token = "0x2000149")]
public class WorkerManager : MonoBehaviour
{
	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isFreeze;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject targetLookat;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool isNearYumbo;

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xD6FB24", Offset = "0xD6FB24", VA = "0xD6FB24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xD6FC08", Offset = "0xD6FC08", VA = "0xD6FC08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xD6FC18", Offset = "0xD6FC18", VA = "0xD6FC18")]
	public void Freeze()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xD6FBA0", Offset = "0xD6FBA0", VA = "0xD6FBA0")]
	public void Thawing()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xD6FC84", Offset = "0xD6FC84", VA = "0xD6FC84")]
	public bool GetIsFreeze()
	{
		return default(bool);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xD6FC8C", Offset = "0xD6FC8C", VA = "0xD6FC8C")]
	public WorkerManager()
	{
	}
}
[Token(Token = "0x200014A")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7136B8", Offset = "0x7136B8")]
public class NoVRSafety1Manager : StageManager
{
	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Arrow;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject GoalPoint;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject yumbo;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject yumboCamera;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject yumboController;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject humanPlayer;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform humanPlayerTarget;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ElectricalWireCollision wireScript1;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ElectricalWireCollision wireScript2;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image FadeImage;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject solutionButton;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject goinYumboButton;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject WireView;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject choosePanel;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Wire;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Excavator exScript;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 defaultYumboPos;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xCFBCDC", Offset = "0xCFBCDC", VA = "0xCFBCDC")]
	private new void Awake()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xCFBD94", Offset = "0xCFBD94", VA = "0xCFBD94")]
	private void Start()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xCFC168", Offset = "0xCFC168", VA = "0xCFC168")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xCFC1C0", Offset = "0xCFC1C0", VA = "0xCFC1C0")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xCFC298", Offset = "0xCFC298", VA = "0xCFC298")]
	public NoVRSafety1Manager()
	{
	}
}
[Token(Token = "0x200014B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7136CC", Offset = "0x7136CC")]
public class NoVRSafety2Manager : StageManager
{
	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject yumbo;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject shovel;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rope;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject arrow;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject rock;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject rock2;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject worker;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject attachPoint;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject checkCollArea;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform workerTarget;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject solutionButton;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image FadeImage;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject yumboCamera;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject yumboController;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject humanPlayer;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject TalkButton;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject GoInYumboButton;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject GoOutYumboButton;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject choosePanel;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform humanPlayerTarget;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Excavator exScript;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xCFC2A0", Offset = "0xCFC2A0", VA = "0xCFC2A0")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xCFC3D4", Offset = "0xCFC3D4", VA = "0xCFC3D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xCFC44C", Offset = "0xCFC44C", VA = "0xCFC44C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xCFC9AC", Offset = "0xCFC9AC", VA = "0xCFC9AC")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xCFC9EC", Offset = "0xCFC9EC", VA = "0xCFC9EC")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xCFCAC4", Offset = "0xCFCAC4", VA = "0xCFCAC4")]
	private void FinishActivity()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xCFC314", Offset = "0xCFC314", VA = "0xCFC314")]
	private void ActiveOutline(bool _isActive)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xCFCB78", Offset = "0xCFCB78", VA = "0xCFCB78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xCFCBF0", Offset = "0xCFCBF0", VA = "0xCFCBF0")]
	public NoVRSafety2Manager()
	{
	}
}
[Token(Token = "0x200014C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7136E0", Offset = "0x7136E0")]
public class NoVRSafety3Manager : StageManager
{
	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject yumbo;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rope;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sandBag;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject shovel;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject yumboCamera;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject yumboController;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject humanPlayer;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject solutionButton;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CheckColliderSandBag sandBagScript;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Image FadeImage;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Excavator exScript;

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xCFCBF8", Offset = "0xCFCBF8", VA = "0xCFCBF8")]
	private new void Awake()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xCFCCC8", Offset = "0xCFCCC8", VA = "0xCFCCC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xCFCFAC", Offset = "0xCFCFAC", VA = "0xCFCFAC")]
	private new void Update()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xCFCFD8", Offset = "0xCFCFD8", VA = "0xCFCFD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xCFD050", Offset = "0xCFD050", VA = "0xCFD050")]
	private void FinishActivity()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xCFD104", Offset = "0xCFD104", VA = "0xCFD104")]
	public NoVRSafety3Manager()
	{
	}
}
[Token(Token = "0x200014D")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7136F4", Offset = "0x7136F4")]
public class NoVRSafety4Manager : StageManager
{
	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject yumbo;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject worker;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform workerTarget;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image FadeImage;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject solutionButton;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject GoOutYumboButton;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject TalkButton;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject GoInYumboButton;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject choosePanel;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject yumboCamera;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject yumboController;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject humanPlayer;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform humanPlayerTarget;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Excavator exScript;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xCFD10C", Offset = "0xCFD10C", VA = "0xCFD10C")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xCFD27C", Offset = "0xCFD27C", VA = "0xCFD27C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xCFD884", Offset = "0xCFD884", VA = "0xCFD884")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xCFD8C8", Offset = "0xCFD8C8", VA = "0xCFD8C8")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xCFD1BC", Offset = "0xCFD1BC", VA = "0xCFD1BC")]
	private void ActiveOutline(bool _isActive)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xCFD9A0", Offset = "0xCFD9A0", VA = "0xCFD9A0")]
	private void FinishActivity()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xCFDA54", Offset = "0xCFDA54", VA = "0xCFDA54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xCFDACC", Offset = "0xCFDACC", VA = "0xCFDACC")]
	public NoVRSafety4Manager()
	{
	}
}
[Token(Token = "0x200014E")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x713708", Offset = "0x713708")]
public class NoVRSafety5Controller : StageManager
{
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x718ECC", Offset = "0x718ECC")]
	public Image FadeImage;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject broadDrop;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject broadFake;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject yumbo;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject localDrop;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject arrowGuide;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 startPoint;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x718F04", Offset = "0x718F04")]
	public Transform humanPlayerTarget;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject yumboCamera;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject yumboController;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject humanPlayer;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject solutionButton;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject truck;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CheckGotoGoal checkGotoScript;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x718F3C", Offset = "0x718F3C")]
	public GameObject goinYumboButton;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject choosePanel;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x718F74", Offset = "0x718F74")]
	public GameObject finishTarget;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Excavator exScript;

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xCFDAD4", Offset = "0xCFDAD4", VA = "0xCFDAD4")]
	private new void Awake()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xCFDB78", Offset = "0xCFDB78", VA = "0xCFDB78")]
	private void Start()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xCFDFA8", Offset = "0xCFDFA8", VA = "0xCFDFA8")]
	private new void Update()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xCFDFB0", Offset = "0xCFDFB0", VA = "0xCFDFB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xCFE028", Offset = "0xCFE028", VA = "0xCFE028")]
	private void FinishActivity()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xCFE0C4", Offset = "0xCFE0C4", VA = "0xCFE0C4")]
	public NoVRSafety5Controller()
	{
	}
}
[Token(Token = "0x200014F")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x71371C", Offset = "0x71371C")]
public class NoVRSafety6Controller : StageManager
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x718FAC", Offset = "0x718FAC")]
	[SerializeField]
	private GameObject yumbo;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject bucket;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject bucketSoil;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject soilEffect;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject truck;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject dumperColliderGO;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject worker;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string guide;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x719068", Offset = "0x719068")]
	[SerializeField]
	private GameObject solutionButton;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Image fadeImage;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform workerTarget;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string solution;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7190E4", Offset = "0x7190E4")]
	[SerializeField]
	private GameObject goOutYumboButton;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject choosePanel;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x719140", Offset = "0x719140")]
	[SerializeField]
	private Transform hummanPlayerTarget;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject yumboCamera;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject yumboController;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject humanPlayer;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject GoInYumboButton;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject TalkButton;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Transform workerTarget2;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Excavator exScript;

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xCFE0CC", Offset = "0xCFE0CC", VA = "0xCFE0CC")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xCFE138", Offset = "0xCFE138", VA = "0xCFE138")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xCFE1B0", Offset = "0xCFE1B0", VA = "0xCFE1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xCFE80C", Offset = "0xCFE80C", VA = "0xCFE80C")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xCFE834", Offset = "0xCFE834", VA = "0xCFE834")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xCFE90C", Offset = "0xCFE90C", VA = "0xCFE90C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xCFE984", Offset = "0xCFE984", VA = "0xCFE984")]
	private void FinishActivity()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xCFEA20", Offset = "0xCFEA20", VA = "0xCFEA20")]
	public NoVRSafety6Controller()
	{
	}
}
[Token(Token = "0x2000150")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x713730", Offset = "0x713730")]
public class NoVRSafety7Controller : StageManager
{
	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7191EC", Offset = "0x7191EC")]
	[SerializeField]
	private GameObject yumbo;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject bucket;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject bucketSoil;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject soilEffect;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject truck;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject dumperColliderGO;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject worker;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string guide;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7192A8", Offset = "0x7192A8")]
	[SerializeField]
	private GameObject solutionButton;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Image fadeImage;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform workerTarget;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string solution;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x719324", Offset = "0x719324")]
	[SerializeField]
	private GameObject goOutYumboButton;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject choosePanel;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x719380", Offset = "0x719380")]
	[SerializeField]
	private Transform hummanPlayerTarget;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject yumboCamera;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject yumboController;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject humanPlayer;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject GoInYumboButton;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject TalkButton;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Transform workerTarget2;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Excavator exScript;

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xCFEA28", Offset = "0xCFEA28", VA = "0xCFEA28")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xCFEA90", Offset = "0xCFEA90", VA = "0xCFEA90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xCFEB08", Offset = "0xCFEB08", VA = "0xCFEB08")]
	private void Start()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xCFEEB4", Offset = "0xCFEEB4", VA = "0xCFEEB4")]
	private new void Update()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xCFEEDC", Offset = "0xCFEEDC", VA = "0xCFEEDC")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xCFEFB4", Offset = "0xCFEFB4", VA = "0xCFEFB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xCFF02C", Offset = "0xCFF02C", VA = "0xCFF02C")]
	private void FinishActivity()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xCFF0C8", Offset = "0xCFF0C8", VA = "0xCFF0C8")]
	public NoVRSafety7Controller()
	{
	}
}
[Token(Token = "0x2000151")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x713744", Offset = "0x713744")]
public class NoVRSafety8Controller : StageManager
{
	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71942C", Offset = "0x71942C")]
	[SerializeField]
	private Transform workerTarget;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject yumbo;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject bucket;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject bucketSoil;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject soilEffect;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject dirtPile;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject truck;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject dumperColliderGO;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject worker;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string guide;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x719508", Offset = "0x719508")]
	[SerializeField]
	private GameObject solutionButton;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Image fadeImage;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private string solution;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x719574", Offset = "0x719574")]
	[SerializeField]
	private GameObject goOutYumboButton;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject choosePanel;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7195D0", Offset = "0x7195D0")]
	[SerializeField]
	private Transform hummanPlayerTarget;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject yumboCamera;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GameObject yumboController;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GameObject humanPlayer;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private GameObject GoInYumboButton;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private GameObject TalkButton;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Transform workerTarget2;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Excavator exScript;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xCFF0D0", Offset = "0xCFF0D0", VA = "0xCFF0D0")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xCFF138", Offset = "0xCFF138", VA = "0xCFF138")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xCFF1B0", Offset = "0xCFF1B0", VA = "0xCFF1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xCFF55C", Offset = "0xCFF55C", VA = "0xCFF55C")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xCFF584", Offset = "0xCFF584", VA = "0xCFF584")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xCFF65C", Offset = "0xCFF65C", VA = "0xCFF65C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xCFF6D4", Offset = "0xCFF6D4", VA = "0xCFF6D4")]
	private void FinishActivity()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xCFF770", Offset = "0xCFF770", VA = "0xCFF770")]
	public NoVRSafety8Controller()
	{
	}
}
[Token(Token = "0x2000152")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x713758", Offset = "0x713758")]
public class NoVRSafety9Manager : StageManager
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject worker;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject yumbo;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Instructor;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject yumboCamera;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject yumboController;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject humanPlayer;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject GoOutYumboButton;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject GoInYumboButton;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject TalkButton;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject choosePanel;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform humanPlayerTarget;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform targetComplete;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image FadeImage;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Excavator exScript;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private NavMeshObstacle exObs;

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xCFF778", Offset = "0xCFF778", VA = "0xCFF778")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xCFF84C", Offset = "0xCFF84C", VA = "0xCFF84C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xCFFD3C", Offset = "0xCFFD3C", VA = "0xCFFD3C")]
	private new void Update()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xCFFD80", Offset = "0xCFFD80", VA = "0xCFFD80")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xCFFE58", Offset = "0xCFFE58", VA = "0xCFFE58")]
	private void FinishActivity()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xCFFF0C", Offset = "0xCFFF0C", VA = "0xCFFF0C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xCFFF84", Offset = "0xCFFF84", VA = "0xCFFF84")]
	public NoVRSafety9Manager()
	{
	}
}
[Token(Token = "0x2000153")]
public class CheckCollisonDirPile : MonoBehaviour
{
	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isCollisonDirtPile;

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x91DB74", Offset = "0x91DB74", VA = "0x91DB74")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x91DC04", Offset = "0x91DC04", VA = "0x91DC04")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x91DC90", Offset = "0x91DC90", VA = "0x91DC90")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x91DD20", Offset = "0x91DD20", VA = "0x91DD20")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x91DDAC", Offset = "0x91DDAC", VA = "0x91DDAC")]
	public CheckCollisonDirPile()
	{
	}
}
[Token(Token = "0x2000154")]
public class DiggingDirPile : MonoBehaviour
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckCollisonDirPile scriptCheckCollisonDirPile;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject bucket;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider[] bucketColliders;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bucketTrigger;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xABF41C", Offset = "0xABF41C", VA = "0xABF41C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xABF490", Offset = "0xABF490", VA = "0xABF490")]
	private void Start()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xABF4F0", Offset = "0xABF4F0", VA = "0xABF4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xABF5C4", Offset = "0xABF5C4", VA = "0xABF5C4")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xABF540", Offset = "0xABF540", VA = "0xABF540")]
	private void ChangeTriggerBucket(bool _value)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xABF680", Offset = "0xABF680", VA = "0xABF680")]
	public DiggingDirPile()
	{
	}
}
[Token(Token = "0x2000155")]
public class CheckCollisionShovel : MonoBehaviour
{
	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool wasPickUp;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x91DADC", Offset = "0x91DADC", VA = "0x91DADC")]
	private void Start()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x91DAE0", Offset = "0x91DAE0", VA = "0x91DAE0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x91DB6C", Offset = "0x91DB6C", VA = "0x91DB6C")]
	public CheckCollisionShovel()
	{
	}
}
[Token(Token = "0x2000156")]
public class RockControl : MonoBehaviour
{
	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool wasIntoPlaneTruck;

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x9564D8", Offset = "0x9564D8", VA = "0x9564D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x9564DC", Offset = "0x9564DC", VA = "0x9564DC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x956560", Offset = "0x956560", VA = "0x956560")]
	public RockControl()
	{
	}
}
[Token(Token = "0x2000157")]
public class WorkerCollider : MonoBehaviour
{
	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isColliderShovel;

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xD6EE5C", Offset = "0xD6EE5C", VA = "0xD6EE5C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xD6EEE8", Offset = "0xD6EEE8", VA = "0xD6EEE8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xD6EF70", Offset = "0xD6EF70", VA = "0xD6EF70")]
	public WorkerCollider()
	{
	}
}
[Token(Token = "0x2000158")]
public class ElectricalWireCollision : MonoBehaviour
{
	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isCollisonWire;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource source;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform wireSegment1;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform wireSegment2;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spark1;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform spark2;

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xBF16C8", Offset = "0xBF16C8", VA = "0xBF16C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xBF1720", Offset = "0xBF1720", VA = "0xBF1720")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xBF17CC", Offset = "0xBF17CC", VA = "0xBF17CC")]
	private void ActivityCollisionWire()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xBF1CAC", Offset = "0xBF1CAC", VA = "0xBF1CAC")]
	private void PlaySparkParticle(Transform spark)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xBF1D5C", Offset = "0xBF1D5C", VA = "0xBF1D5C")]
	public void DisableActivityCollision()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xBF1D78", Offset = "0xBF1D78", VA = "0xBF1D78")]
	public ElectricalWireCollision()
	{
	}
}
[Token(Token = "0x2000159")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x71376C", Offset = "0x71376C")]
public class Safety5Controller : MonoBehaviour
{
	[Token(Token = "0x20004EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715104", Offset = "0x715104")]
	private sealed class <BeginFade>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Safety5Controller <>4__this;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color startCol;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color endCol;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float duration;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <timer>5__2;

		[Token(Token = "0x170002A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0x95A444", Offset = "0x95A444", VA = "0x95A444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0x95A4AC", Offset = "0x95A4AC", VA = "0x95A4AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x95A31C", Offset = "0x95A31C", VA = "0x95A31C")]
		[DebuggerHidden]
		public <BeginFade>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x95A350", Offset = "0x95A350", VA = "0x95A350", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x95A354", Offset = "0x95A354", VA = "0x95A354", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x95A44C", Offset = "0x95A44C", VA = "0x95A44C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject broadDrop;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject broadFake;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Yumbo;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CheckGotoGoal checkGotoScript;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Excavator exScript;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color m_FadeColor;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image m_FadeImage;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color m_FadeOutColor;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool showAlert;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool isDim;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool isClear;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float time;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeDim;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 dropPos;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine dim;

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x959D1C", Offset = "0x959D1C", VA = "0x959D1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x959E18", Offset = "0x959E18", VA = "0x959E18")]
	private void Start()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x959F24", Offset = "0x959F24", VA = "0x959F24")]
	private void Update()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x95A254", Offset = "0x95A254", VA = "0x95A254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EE54", Offset = "0x71EE54")]
	private IEnumerator BeginFade(Color startCol, Color endCol, float duration)
	{
		return null;
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x95A348", Offset = "0x95A348", VA = "0x95A348")]
	public Safety5Controller()
	{
	}
}
[Token(Token = "0x200015A")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x713780", Offset = "0x713780")]
public class Safety6Controller : MonoBehaviour
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject yumbo;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bucket;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dirtPile;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject truck;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject dumperColliderGO;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject worker;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CheckDiggingArea checkDiggingAreaScript;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PhysicsDeformer physicsDeformerScript;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider bucketCollider;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 bucketCenter;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TruckControl truckControl;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Collider dumperCollider;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Excavator exScript;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float time;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float timeShowSolution;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float checkRotateTime;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isDig;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	private bool showSotution;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WorkerSetMove workerMoveScript;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WorkerController workerScript;

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x95A4B4", Offset = "0x95A4B4", VA = "0x95A4B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x95A5B0", Offset = "0x95A5B0", VA = "0x95A5B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x95A71C", Offset = "0x95A71C", VA = "0x95A71C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x95A930", Offset = "0x95A930", VA = "0x95A930")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x95A9E0", Offset = "0x95A9E0", VA = "0x95A9E0")]
	private void checkFallSoil()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x95AAA8", Offset = "0x95AAA8", VA = "0x95AAA8")]
	public Safety6Controller()
	{
	}
}
[Token(Token = "0x200015B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x713794", Offset = "0x713794")]
public class Safety7Controller : MonoBehaviour
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject yumbo;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bucket;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dirtPile;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject truck;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject dumperColliderGO;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject worker;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider bucketCollider;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 bucketCenter;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TruckControl truckControl;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Excavator exScript;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Collider dumperCollider;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float time;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float checkRotateTime;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool showSotution;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WorkerSetMove workerMoveScript;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WorkerController workerScript;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CheckDiggingArea checkDiggingAreaScript;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PhysicsDeformer physicsDeformerScript;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x95AAB0", Offset = "0x95AAB0", VA = "0x95AAB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x95ABAC", Offset = "0x95ABAC", VA = "0x95ABAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x95AD14", Offset = "0x95AD14", VA = "0x95AD14")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x95AF1C", Offset = "0x95AF1C", VA = "0x95AF1C")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x95AFCC", Offset = "0x95AFCC", VA = "0x95AFCC")]
	private void checkFallSoil()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x95B094", Offset = "0x95B094", VA = "0x95B094")]
	public Safety7Controller()
	{
	}
}
[Token(Token = "0x200015C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7137A8", Offset = "0x7137A8")]
public class Safety8Controller : MonoBehaviour
{
	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject yumbo;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bucket;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dirtPile;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject truck;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject dumperColliderGO;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject worker;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider bucketCollider;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 bucketCenter;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TruckControl truckControl;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Excavator exScript;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Collider dumperCollider;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WorkerSetMove workerMoveScript;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WorkerController workerScript;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float time;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float checkRotateTime;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool showSotution;

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x95B09C", Offset = "0x95B09C", VA = "0x95B09C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x95B198", Offset = "0x95B198", VA = "0x95B198")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x95B308", Offset = "0x95B308", VA = "0x95B308")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x95B4F4", Offset = "0x95B4F4", VA = "0x95B4F4")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x95B5A4", Offset = "0x95B5A4", VA = "0x95B5A4")]
	private void checkFallSoil()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x95B678", Offset = "0x95B678", VA = "0x95B678")]
	public Safety8Controller()
	{
	}
}
[Token(Token = "0x200015D")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7137BC", Offset = "0x7137BC")]
public class Safety9Controller : MonoBehaviour
{
	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject worker;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject yumbo;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Excavator exScript;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool showSotution;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool wasGoStraight;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float speed;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WorkerSetMove workerMoveScript;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WorkerController workerScript;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 checkYumboPositon;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x95B680", Offset = "0x95B680", VA = "0x95B680")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x95B7E0", Offset = "0x95B7E0", VA = "0x95B7E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x95B860", Offset = "0x95B860", VA = "0x95B860")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x95BBD4", Offset = "0x95BBD4", VA = "0x95BBD4")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x95BCC4", Offset = "0x95BCC4", VA = "0x95BCC4")]
	private void FakeShaking()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x95BC84", Offset = "0x95BC84", VA = "0x95BC84")]
	private bool CheckCompleteGoStraight()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x95BEFC", Offset = "0x95BEFC", VA = "0x95BEFC")]
	public Safety9Controller()
	{
	}
}
[Token(Token = "0x200015E")]
public class SafetySim2Control : MonoBehaviour
{
	[Token(Token = "0x20004EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715114", Offset = "0x715114")]
	private sealed class <ShowSolution>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SafetySim2Control <>4__this;

		[Token(Token = "0x170002A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D25")]
			[Address(RVA = "0x8E44C8", Offset = "0x8E44C8", VA = "0x8E44C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0x8E4530", Offset = "0x8E4530", VA = "0x8E4530", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x8E42C0", Offset = "0x8E42C0", VA = "0x8E42C0")]
		[DebuggerHidden]
		public <ShowSolution>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x8E43BC", Offset = "0x8E43BC", VA = "0x8E43BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x8E43C0", Offset = "0x8E43C0", VA = "0x8E43C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x8E44D0", Offset = "0x8E44D0", VA = "0x8E44D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject yumbo;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shovel;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rope;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject arrow;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rock;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rock2;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject worker;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject attachPoint;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject checkCollArea;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform workerTarget;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Excavator exScript;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource workerSource;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int index;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isUpdate;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool isFinish;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<NextStepCondition> tutorialSteps;

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x8E3B2C", Offset = "0x8E3B2C", VA = "0x8E3B2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x8E3D14", Offset = "0x8E3D14", VA = "0x8E3D14")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x8E3F20", Offset = "0x8E3F20", VA = "0x8E3F20")]
	public void NextStep()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x8E410C", Offset = "0x8E410C", VA = "0x8E410C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x8E4210", Offset = "0x8E4210", VA = "0x8E4210")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x8E409C", Offset = "0x8E409C", VA = "0x8E409C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EEB8", Offset = "0x71EEB8")]
	private IEnumerator ShowSolution()
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x8E42EC", Offset = "0x8E42EC", VA = "0x8E42EC")]
	private void HidesObject()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x8E4344", Offset = "0x8E4344", VA = "0x8E4344")]
	public SafetySim2Control()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7137D0", Offset = "0x7137D0")]
public class SafetySimStage1Control : MonoBehaviour
{
	[Token(Token = "0x20004ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715124", Offset = "0x715124")]
	private sealed class <ShowSolution>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0x8E61E8", Offset = "0x8E61E8", VA = "0x8E61E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0x8E6250", Offset = "0x8E6250", VA = "0x8E6250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x8E60A0", Offset = "0x8E60A0", VA = "0x8E60A0")]
		[DebuggerHidden]
		public <ShowSolution>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x8E60D4", Offset = "0x8E60D4", VA = "0x8E60D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0x8E60D8", Offset = "0x8E60D8", VA = "0x8E60D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x8E61F0", Offset = "0x8E61F0", VA = "0x8E61F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Arrow;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject GoalPoint;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject yumbo;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ElectricalWireCollision wireScript;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isComplete;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Excavator exScript;

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x8E5AEC", Offset = "0x8E5AEC", VA = "0x8E5AEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x8E5BE4", Offset = "0x8E5BE4", VA = "0x8E5BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x8E5CA0", Offset = "0x8E5CA0", VA = "0x8E5CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x8E5F90", Offset = "0x8E5F90", VA = "0x8E5F90")]
	private void SetYumboFalling()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x8E6040", Offset = "0x8E6040", VA = "0x8E6040")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EF1C", Offset = "0x71EF1C")]
	private IEnumerator ShowSolution()
	{
		return null;
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x8E5DD8", Offset = "0x8E5DD8", VA = "0x8E5DD8")]
	private void LookAtGoalPoint()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x8E60CC", Offset = "0x8E60CC", VA = "0x8E60CC")]
	public SafetySimStage1Control()
	{
	}
}
[Token(Token = "0x2000160")]
public class ActiveButtonManager : MonoBehaviour
{
	[Token(Token = "0x20004EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715134", Offset = "0x715134")]
	private sealed class <LoadSenceStage2Ver1>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _senceName;

		[Token(Token = "0x170002AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x91074C", Offset = "0x91074C", VA = "0x91074C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x9107B4", Offset = "0x9107B4", VA = "0x9107B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x9104A4", Offset = "0x9104A4", VA = "0x9104A4")]
		[DebuggerHidden]
		public <LoadSenceStage2Ver1>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x9106A4", Offset = "0x9106A4", VA = "0x9106A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x9106A8", Offset = "0x9106A8", VA = "0x9106A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x910754", Offset = "0x910754", VA = "0x910754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715144", Offset = "0x715144")]
	private sealed class <IELoadSceneMenu>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x170002AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x910634", Offset = "0x910634", VA = "0x910634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x91069C", Offset = "0x91069C", VA = "0x91069C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x9104D0", Offset = "0x9104D0", VA = "0x9104D0")]
		[DebuggerHidden]
		public <IELoadSceneMenu>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x910504", Offset = "0x910504", VA = "0x910504", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x910508", Offset = "0x910508", VA = "0x910508", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x91063C", Offset = "0x91063C", VA = "0x91063C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject loading;

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x90FD48", Offset = "0x90FD48", VA = "0x90FD48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x90FDA8", Offset = "0x90FDA8", VA = "0x90FDA8")]
	public void Setting()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x90FE68", Offset = "0x90FE68", VA = "0x90FE68")]
	public void ActiveInfo()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x90FEDC", Offset = "0x90FEDC", VA = "0x90FEDC")]
	public void ActiveEyeBroadash()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x90FF40", Offset = "0x90FF40", VA = "0x90FF40")]
	public void QuitInfo()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x90FFB4", Offset = "0x90FFB4", VA = "0x90FFB4")]
	public void ReloadAction()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x910178", Offset = "0x910178", VA = "0x910178")]
	public void LoadSceneMenu()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x910264", Offset = "0x910264", VA = "0x910264")]
	public void ExitStage2Option()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x9102C8", Offset = "0x9102C8", VA = "0x9102C8")]
	public void QuitApp()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x910334", Offset = "0x910334", VA = "0x910334")]
	public void SetLangguage(string langguage)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x910434", Offset = "0x910434", VA = "0x910434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EF80", Offset = "0x71EF80")]
	public IEnumerator LoadSenceStage2Ver1(string _senceName)
	{
		return null;
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x910204", Offset = "0x910204", VA = "0x910204")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71EFE4", Offset = "0x71EFE4")]
	private IEnumerator IELoadSceneMenu()
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x9100B0", Offset = "0x9100B0", VA = "0x9100B0")]
	private void ChangeActiveChildButtons(bool _val)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x9104FC", Offset = "0x9104FC", VA = "0x9104FC")]
	public ActiveButtonManager()
	{
	}
}
[Token(Token = "0x2000161")]
public class ChoosePanelSetting : MonoBehaviour
{
	[Token(Token = "0x14000023")]
	public event Action OnOK
	{
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x920CCC", Offset = "0x920CCC", VA = "0x920CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F048", Offset = "0x71F048")]
		add
		{
		}
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x920D70", Offset = "0x920D70", VA = "0x920D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F058", Offset = "0x71F058")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event Action OnCancel
	{
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x920E14", Offset = "0x920E14", VA = "0x920E14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F068", Offset = "0x71F068")]
		add
		{
		}
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x920EB8", Offset = "0x920EB8", VA = "0x920EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F078", Offset = "0x71F078")]
		remove
		{
		}
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x920F5C", Offset = "0x920F5C", VA = "0x920F5C")]
	public void ShowChoosePanel(bool isShow)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x920FEC", Offset = "0x920FEC", VA = "0x920FEC")]
	public void ChooseOK()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x921064", Offset = "0x921064", VA = "0x921064")]
	public void ChooseCancel()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x9210DC", Offset = "0x9210DC", VA = "0x9210DC")]
	public ChoosePanelSetting()
	{
	}
}
[Token(Token = "0x2000162")]
public class CameraFade : MonoBehaviour
{
	[Token(Token = "0x20004F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715154", Offset = "0x715154")]
	private sealed class <BeginFadeOut>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFade <>4__this;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170002AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x91894C", Offset = "0x91894C", VA = "0x91894C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0x9189B4", Offset = "0x9189B4", VA = "0x9189B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x918468", Offset = "0x918468", VA = "0x918468")]
		[DebuggerHidden]
		public <BeginFadeOut>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x9188B4", Offset = "0x9188B4", VA = "0x9188B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x9188B8", Offset = "0x9188B8", VA = "0x9188B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x918954", Offset = "0x918954", VA = "0x918954", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715164", Offset = "0x715164")]
	private sealed class <BeginFadeIn>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFade <>4__this;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x170002B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0x918844", Offset = "0x918844", VA = "0x918844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D45")]
			[Address(RVA = "0x9188AC", Offset = "0x9188AC", VA = "0x9188AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x918514", Offset = "0x918514", VA = "0x918514")]
		[DebuggerHidden]
		public <BeginFadeIn>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x9187AC", Offset = "0x9187AC", VA = "0x9187AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x9187B0", Offset = "0x9187B0", VA = "0x9187B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x91884C", Offset = "0x91884C", VA = "0x91884C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715174", Offset = "0x715174")]
	private sealed class <BeginFade>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFade <>4__this;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color startCol;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color endCol;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float duration;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <timer>5__2;

		[Token(Token = "0x170002B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x91873C", Offset = "0x91873C", VA = "0x91873C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x9187A4", Offset = "0x9187A4", VA = "0x9187A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x918540", Offset = "0x918540", VA = "0x918540")]
		[DebuggerHidden]
		public <BeginFade>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x9185D8", Offset = "0x9185D8", VA = "0x9185D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x9185DC", Offset = "0x9185DC", VA = "0x9185DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x918744", Offset = "0x918744", VA = "0x918744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715184", Offset = "0x715184")]
	private sealed class <RemoveBackground>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CameraFade <>4__this;

		[Token(Token = "0x170002B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x918C88", Offset = "0x918C88", VA = "0x918C88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x918CF0", Offset = "0x918CF0", VA = "0x918CF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x91856C", Offset = "0x91856C", VA = "0x91856C")]
		[DebuggerHidden]
		public <RemoveBackground>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x9189BC", Offset = "0x9189BC", VA = "0x9189BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x9189C0", Offset = "0x9189C0", VA = "0x9189C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x918C90", Offset = "0x918C90", VA = "0x918C90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool onFirstStart;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image m_FadeImage;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color m_FadeColor;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_StandByDuration;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_FadeDuration;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool m_FadeInOnSceneLoad;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool m_FadeInOnStart;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool m_IsFading;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_FadeStartTime;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color m_FadeOutColor;

	[Token(Token = "0x17000115")]
	public bool IsFading
	{
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x918034", Offset = "0x918034", VA = "0x918034")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x91803C", Offset = "0x91803C", VA = "0x91803C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x71F088", Offset = "0x71F088")]
	private static void OnRuntimeMethodLoad()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x9180A8", Offset = "0x9180A8", VA = "0x9180A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x9181DC", Offset = "0x9181DC", VA = "0x9181DC")]
	public void FadeOut(bool fadeAudio)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x9181E8", Offset = "0x9181E8", VA = "0x9181E8")]
	public void FadeOut(float duration, bool fadeAudio)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x9181D4", Offset = "0x9181D4", VA = "0x9181D4")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x918308", Offset = "0x918308", VA = "0x918308")]
	public void FadeIn(float duration)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x9183E8", Offset = "0x9183E8", VA = "0x9183E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F098", Offset = "0x71F098")]
	public IEnumerator BeginFadeOut(float duration)
	{
		return null;
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x918494", Offset = "0x918494", VA = "0x918494")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F0FC", Offset = "0x71F0FC")]
	public IEnumerator BeginFadeIn(float duration)
	{
		return null;
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x918240", Offset = "0x918240", VA = "0x918240")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F160", Offset = "0x71F160")]
	private IEnumerator BeginFade(Color startCol, Color endCol, float duration)
	{
		return null;
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x918378", Offset = "0x918378", VA = "0x918378")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F1C4", Offset = "0x71F1C4")]
	private IEnumerator RemoveBackground()
	{
		return null;
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x918598", Offset = "0x918598", VA = "0x918598")]
	public CameraFade()
	{
	}
}
[Token(Token = "0x2000163")]
public class GUIComponent : GUIControl
{
	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIName nameGUI;

	[Token(Token = "0x17000116")]
	public override GUIName NameGUI
	{
		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xBFFE34", Offset = "0xBFFE34", VA = "0xBFFE34", Slot = "4")]
		get
		{
			return default(GUIName);
		}
	}

	[Token(Token = "0x14000025")]
	public event Action OnInit
	{
		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xBFFCEC", Offset = "0xBFFCEC", VA = "0xBFFCEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F228", Offset = "0x71F228")]
		add
		{
		}
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xBFFD90", Offset = "0xBFFD90", VA = "0xBFFD90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F238", Offset = "0x71F238")]
		remove
		{
		}
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xBFFE3C", Offset = "0xBFFE3C", VA = "0xBFFE3C", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xBFFE54", Offset = "0xBFFE54", VA = "0xBFFE54")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xBFFE68", Offset = "0xBFFE68", VA = "0xBFFE68")]
	public GUIComponent()
	{
	}
}
[Token(Token = "0x2000164")]
public abstract class GUIControl : MonoBehaviour
{
	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x17000117")]
	public abstract GUIName NameGUI
	{
		[Token(Token = "0x60008EE")]
		get;
	}

	[Token(Token = "0x14000026")]
	public event Action OnShowLargeBoard
	{
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xBFFE78", Offset = "0xBFFE78", VA = "0xBFFE78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F248", Offset = "0x71F248")]
		add
		{
		}
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xBFFF1C", Offset = "0xBFFF1C", VA = "0xBFFF1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F258", Offset = "0x71F258")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event Action OnHideLargeBoard
	{
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xBFFFC0", Offset = "0xBFFFC0", VA = "0xBFFFC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F268", Offset = "0x71F268")]
		add
		{
		}
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xC00064", Offset = "0xC00064", VA = "0xC00064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F278", Offset = "0x71F278")]
		remove
		{
		}
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xC00108", Offset = "0xC00108", VA = "0xC00108")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xC00160", Offset = "0xC00160", VA = "0xC00160")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xBFFE50", Offset = "0xBFFE50", VA = "0xBFFE50", Slot = "5")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xC00164", Offset = "0xC00164", VA = "0xC00164")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xC00304", Offset = "0xC00304", VA = "0xC00304", Slot = "6")]
	public virtual void OnShow()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xC003D4", Offset = "0xC003D4", VA = "0xC003D4", Slot = "7")]
	public virtual void OnHide()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xC004EC", Offset = "0xC004EC", VA = "0xC004EC", Slot = "8")]
	public virtual void OnChangeActiveCollider(bool _val)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xC007CC", Offset = "0xC007CC", VA = "0xC007CC", Slot = "9")]
	public virtual GUIControl OnGetGUI()
	{
		return null;
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xC007D0", Offset = "0xC007D0", VA = "0xC007D0", Slot = "10")]
	public virtual bool IsGUIActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xBFFE70", Offset = "0xBFFE70", VA = "0xBFFE70")]
	protected GUIControl()
	{
	}
}
[Token(Token = "0x2000165")]
public static class GUIManager
{
	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<GUIName, GUIControl> m_Controls;

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xC007F4", Offset = "0xC007F4", VA = "0xC007F4")]
	public static void Register(GUIControl control)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xC001C8", Offset = "0xC001C8", VA = "0xC001C8")]
	public static void UnRegister(GUIControl control)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xC00934", Offset = "0xC00934", VA = "0xC00934")]
	public static void Start()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xC00AFC", Offset = "0xC00AFC", VA = "0xC00AFC")]
	private static void RegisterAllGUI()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xC00DC4", Offset = "0xC00DC4", VA = "0xC00DC4")]
	public static void CleanGUIManager()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xBF1450", Offset = "0xBF1450", VA = "0xBF1450")]
	public static void ShowGUI(GUIName nameGUI)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xBF1208", Offset = "0xBF1208", VA = "0xBF1208")]
	public static void HideGUI(GUIName nameGUI)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xC00C18", Offset = "0xC00C18", VA = "0xC00C18")]
	public static void HideAllGUI()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xC00EF8", Offset = "0xC00EF8", VA = "0xC00EF8")]
	public static bool HaveGUIActiveAtScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xC01030", Offset = "0xC01030", VA = "0xC01030")]
	public static bool HaveGUIBoardActiveAtScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xC00E40", Offset = "0xC00E40", VA = "0xC00E40")]
	public static void ChangeActiveColliderGUI(GUIName nameGUI, bool _val)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xC01198", Offset = "0xC01198", VA = "0xC01198")]
	public static bool IsGUIActive(GUIName nameGUI)
	{
		return default(bool);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xC01288", Offset = "0xC01288", VA = "0xC01288")]
	public static GUIControl GetGUI(GUIName nameGUI)
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xC00D40", Offset = "0xC00D40", VA = "0xC00D40")]
	public static bool IsContainsKey(GUIName nameGUI)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000166")]
public class YumboLargeBoard : MonoBehaviour
{
	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71975C", Offset = "0x71975C")]
	private bool <IsLargeBoardActive>k__BackingField;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject Yumbo;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject CameraObject;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody yumboRigidbody;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource yumboSound;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Excavator yumboScript;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform defaultCamParent;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 defaultLocalCamPos;

	[Token(Token = "0x17000118")]
	public bool IsLargeBoardActive
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xD71600", Offset = "0xD71600", VA = "0xD71600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F288", Offset = "0x71F288")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600090D")]
		[Address(RVA = "0xD71608", Offset = "0xD71608", VA = "0xD71608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F298", Offset = "0x71F298")]
		private set
		{
		}
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xD71614", Offset = "0xD71614", VA = "0xD71614")]
	private void Awake()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xD717F8", Offset = "0xD717F8", VA = "0xD717F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xD717FC", Offset = "0xD717FC", VA = "0xD717FC")]
	private void OnShow()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xD71984", Offset = "0xD71984", VA = "0xD71984")]
	private void OnHide()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xD71AD4", Offset = "0xD71AD4", VA = "0xD71AD4")]
	public YumboLargeBoard()
	{
	}
}
[Token(Token = "0x2000167")]
public class TextComponent : MonoBehaviour
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DynamicTextName textName;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Localize localizeText;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LocalizeTM localizeTMText;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text text;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextMeshProUGUI textMeshPro;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string currentlocalizeKey;

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x8F9924", Offset = "0x8F9924", VA = "0x8F9924")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x8F9AF4", Offset = "0x8F9AF4", VA = "0x8F9AF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x8F9C60", Offset = "0x8F9C60", VA = "0x8F9C60")]
	public void SetText(string _text)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x8F9DEC", Offset = "0x8F9DEC", VA = "0x8F9DEC")]
	public string GetCurrentLocalizeKey()
	{
		return null;
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x8F9DF4", Offset = "0x8F9DF4", VA = "0x8F9DF4")]
	public TextComponent()
	{
	}
}
[Token(Token = "0x2000168")]
public static class TextManager
{
	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<DynamicTextName, TextComponent> m_listText;

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x8F99E8", Offset = "0x8F99E8", VA = "0x8F99E8")]
	public static void Register(TextComponent textComponent)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x8F9B58", Offset = "0x8F9B58", VA = "0x8F9B58")]
	public static void UnRegister(TextComponent textComponent)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x8F9DFC", Offset = "0x8F9DFC", VA = "0x8F9DFC")]
	public static void SetText(DynamicTextName textName, string text)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x8F9EAC", Offset = "0x8F9EAC", VA = "0x8F9EAC")]
	public static string GetCurrentLocalizeKey(DynamicTextName textName)
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x8F9F50", Offset = "0x8F9F50", VA = "0x8F9F50")]
	public static bool CompareCurrentKey(DynamicTextName textName, string key)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000169")]
public class ConfigPositionCamera : MonoBehaviour
{
	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool wasRound;

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x923E6C", Offset = "0x923E6C", VA = "0x923E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x923F1C", Offset = "0x923F1C", VA = "0x923F1C")]
	public ConfigPositionCamera()
	{
	}
}
[Token(Token = "0x200016A")]
public class DistanceTerrain : MonoBehaviour
{
	[Token(Token = "0x6000920")]
	[Address(RVA = "0xBF0160", Offset = "0xBF0160", VA = "0xBF0160")]
	public static float CalculateDistanceTerrain(GameObject needCalculateObj)
	{
		return default(float);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xBF04A8", Offset = "0xBF04A8", VA = "0xBF04A8")]
	public DistanceTerrain()
	{
	}
}
[Token(Token = "0x200016B")]
public class EventDisPatcher : MonoBehaviour
{
	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventDisPatcher s_instance;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<EventID, Action<object>> listeners;

	[Token(Token = "0x17000119")]
	public static EventDisPatcher Instance
	{
		[Token(Token = "0x6000922")]
		[Address(RVA = "0xBF1D88", Offset = "0xBF1D88", VA = "0xBF1D88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000923")]
		[Address(RVA = "0xBF1E74", Offset = "0xBF1E74", VA = "0xBF1E74")]
		private set
		{
		}
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xBF1E78", Offset = "0xBF1E78", VA = "0xBF1E78")]
	public static bool HasInstance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xBF1EF4", Offset = "0xBF1EF4", VA = "0xBF1EF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xBF1FC0", Offset = "0xBF1FC0", VA = "0xBF1FC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xBF20BC", Offset = "0xBF20BC", VA = "0xBF20BC")]
	public void RegisterListener(EventID eventID, Action<object> callback)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xBF2210", Offset = "0xBF2210", VA = "0xBF2210")]
	public void PostEvent(EventID eventID, [Optional] object param)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xBF22EC", Offset = "0xBF22EC", VA = "0xBF22EC")]
	public void RemoveListener(EventID eventID, Action<object> callback)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xBF2064", Offset = "0xBF2064", VA = "0xBF2064")]
	public void ClearAllListener()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xBF23D8", Offset = "0xBF23D8", VA = "0xBF23D8")]
	public EventDisPatcher()
	{
	}
}
[Token(Token = "0x200016C")]
public static class EventDisPatcherExtension
{
	[Token(Token = "0x600092C")]
	[Address(RVA = "0xBF2448", Offset = "0xBF2448", VA = "0xBF2448")]
	public static void RegisterListener(this MonoBehaviour listener, EventID eventID, Action<object> callback)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xBF247C", Offset = "0xBF247C", VA = "0xBF247C")]
	public static void PostEvent(this MonoBehaviour listener, EventID eventID, object param)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xBF24B0", Offset = "0xBF24B0", VA = "0xBF24B0")]
	public static void PostEvent(this MonoBehaviour listener, EventID eventID)
	{
	}
}
[Token(Token = "0x200016D")]
public class HightScoreManager : Singleton<HightScoreManager>
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string path;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<HightScoreValue> listHightScore;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float hightScoreTime;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool existHightScore;

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xDA7280", Offset = "0xDA7280", VA = "0xDA7280")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xDA72D8", Offset = "0xDA72D8", VA = "0xDA72D8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xDA748C", Offset = "0xDA748C", VA = "0xDA748C")]
	private void CheckYumboDumpAfterReload()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xDA75B8", Offset = "0xDA75B8", VA = "0xDA75B8")]
	public string GetHightScore(string _nameScene, float _value)
	{
		return null;
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xDA792C", Offset = "0xDA792C", VA = "0xDA792C")]
	public void CheckAndSetHightScore(string _nameScene, float _value)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xDA7724", Offset = "0xDA7724", VA = "0xDA7724")]
	private string ConvertTimeString(float t)
	{
		return null;
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xDA73BC", Offset = "0xDA73BC", VA = "0xDA73BC")]
	private void SetDefaultConfig()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xDA7AE8", Offset = "0xDA7AE8", VA = "0xDA7AE8")]
	public HightScoreManager()
	{
	}
}
[Token(Token = "0x200016E")]
public static class InteractiveJson
{
	[Token(Token = "0x6000937")]
	public static void SaveJson<T>(T data, string _path)
	{
	}

	[Token(Token = "0x6000938")]
	public static T LoadJson<T>(string _path)
	{
		return (T)null;
	}
}
[Token(Token = "0x200016F")]
public class LoadData : MonoBehaviour
{
	[Token(Token = "0x6000939")]
	[Address(RVA = "0xB494B0", Offset = "0xB494B0", VA = "0xB494B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xB495E8", Offset = "0xB495E8", VA = "0xB495E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xB49648", Offset = "0xB49648", VA = "0xB49648")]
	public LoadData()
	{
	}
}
[Token(Token = "0x2000170")]
public static class MD5HashControl
{
	[Token(Token = "0x600093C")]
	[Address(RVA = "0xC0ABBC", Offset = "0xC0ABBC", VA = "0xC0ABBC")]
	public static bool IsVerifyMD5Hash(string text1, string text2)
	{
		return default(bool);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xC0ACDC", Offset = "0xC0ACDC", VA = "0xC0ACDC")]
	private static string GetMd5Hash(MD5 md5Hash, string input)
	{
		return null;
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xC0AE08", Offset = "0xC0AE08", VA = "0xC0AE08")]
	private static bool VerifyMd5Hash(MD5 md5Hash, string input, string hash)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000171")]
public class MainMenuManager : MonoBehaviour
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ver1SceneIndex;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ver2SceneIndex;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xC0F420", Offset = "0xC0F420", VA = "0xC0F420")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xC0F424", Offset = "0xC0F424", VA = "0xC0F424")]
	private void LoadData()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xC0F5A8", Offset = "0xC0F5A8", VA = "0xC0F5A8")]
	public MainMenuManager()
	{
	}
}
[Token(Token = "0x2000172")]
public class MenuManager : Singleton<MenuManager>
{
	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public SystemLanguage currentLangguage;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AudioSource> list_sound;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xC128EC", Offset = "0xC128EC", VA = "0xC128EC")]
	protected MenuManager()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xC1295C", Offset = "0xC1295C", VA = "0xC1295C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xC129F8", Offset = "0xC129F8", VA = "0xC129F8")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xC12BAC", Offset = "0xC12BAC", VA = "0xC12BAC")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xC12C5C", Offset = "0xC12C5C", VA = "0xC12C5C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xC0F57C", Offset = "0xC0F57C", VA = "0xC0F57C")]
	public void SetLangguage(SystemLanguage langguage)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xC12A98", Offset = "0xC12A98", VA = "0xC12A98")]
	private void SetSound(float _volume)
	{
	}
}
[Token(Token = "0x2000173")]
public class NotifyScript : MonoBehaviour
{
	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Timer timerScript;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isShowFinishDialog;

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x101A3BC", Offset = "0x101A3BC", VA = "0x101A3BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x101A440", Offset = "0x101A440", VA = "0x101A440")]
	private void Start()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x101A45C", Offset = "0x101A45C", VA = "0x101A45C")]
	public void ShowFinishedGUINotify(bool isSuccess)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x101A674", Offset = "0x101A674", VA = "0x101A674")]
	public NotifyScript()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x101A67C", Offset = "0x101A67C", VA = "0x101A67C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F2D8", Offset = "0x71F2D8")]
	private void <Awake>b__2_0(object obj)
	{
	}
}
[Token(Token = "0x2000174")]
public enum EventID
{
	[Token(Token = "0x4000964")]
	None,
	[Token(Token = "0x4000965")]
	OnModifyGuideText,
	[Token(Token = "0x4000966")]
	OnModifyInfoText,
	[Token(Token = "0x4000967")]
	OnShowYumboFallingNotify,
	[Token(Token = "0x4000968")]
	OnShowFinishNotify,
	[Token(Token = "0x4000969")]
	OnModifyAlertText,
	[Token(Token = "0x400096A")]
	OnModifyWorkEvaluationText,
	[Token(Token = "0x400096B")]
	FinishedNotify,
	[Token(Token = "0x400096C")]
	OnFallSoilSuccess,
	[Token(Token = "0x400096D")]
	OnSettingSound,
	[Token(Token = "0x400096E")]
	OnCallObiCollision
}
[Token(Token = "0x2000175")]
public enum GUIName
{
	[Token(Token = "0x4000970")]
	None,
	[Token(Token = "0x4000971")]
	GuideDialog,
	[Token(Token = "0x4000972")]
	AlertDialog,
	[Token(Token = "0x4000973")]
	InfoStageDialog,
	[Token(Token = "0x4000974")]
	FinishDialog,
	[Token(Token = "0x4000975")]
	CompleteStepDialog,
	[Token(Token = "0x4000976")]
	NegativePanel,
	[Token(Token = "0x4000977")]
	SettingBoard,
	[Token(Token = "0x4000978")]
	QuestionBoard,
	[Token(Token = "0x4000979")]
	CameraSelectBox,
	[Token(Token = "0x400097A")]
	Stage2Option,
	[Token(Token = "0x400097B")]
	SolutionBoard,
	[Token(Token = "0x400097C")]
	ChooseTutorial,
	[Token(Token = "0x400097D")]
	SafetyStage5Choose,
	[Token(Token = "0x400097E")]
	ResetDialog,
	[Token(Token = "0x400097F")]
	QuitDialog,
	[Token(Token = "0x4000980")]
	PauseDialog,
	[Token(Token = "0x4000981")]
	TutorialDialog,
	[Token(Token = "0x4000982")]
	FallDialog,
	[Token(Token = "0x4000983")]
	LoadingIcon
}
[Token(Token = "0x2000176")]
public enum DynamicTextName
{
	[Token(Token = "0x4000985")]
	None,
	[Token(Token = "0x4000986")]
	Alert,
	[Token(Token = "0x4000987")]
	Guide,
	[Token(Token = "0x4000988")]
	Percent,
	[Token(Token = "0x4000989")]
	InfoState,
	[Token(Token = "0x400098A")]
	TotalTime,
	[Token(Token = "0x400098B")]
	NumberDrop,
	[Token(Token = "0x400098C")]
	NumberCollision,
	[Token(Token = "0x400098D")]
	NumberDump,
	[Token(Token = "0x400098E")]
	WorkEvaluation,
	[Token(Token = "0x400098F")]
	CollisionCone,
	[Token(Token = "0x4000990")]
	DrumCollision,
	[Token(Token = "0x4000991")]
	NumberStepComplete,
	[Token(Token = "0x4000992")]
	NumbertimeRemain,
	[Token(Token = "0x4000993")]
	NumberSuccessStepTitle,
	[Token(Token = "0x4000994")]
	NumberDropTitle,
	[Token(Token = "0x4000995")]
	NumberDrumTitle,
	[Token(Token = "0x4000996")]
	NumberCollisonTitle,
	[Token(Token = "0x4000997")]
	Question_QuestionContent,
	[Token(Token = "0x4000998")]
	Question_AnswerAContent,
	[Token(Token = "0x4000999")]
	Question_AnswerBContent,
	[Token(Token = "0x400099A")]
	Question_AnswerCContent,
	[Token(Token = "0x400099B")]
	Question_AnswerDContent,
	[Token(Token = "0x400099C")]
	SolutionContent,
	[Token(Token = "0x400099D")]
	FinishTitle,
	[Token(Token = "0x400099E")]
	HightScoreTime,
	[Token(Token = "0x400099F")]
	EvaluationUnit,
	[Token(Token = "0x40009A0")]
	QuitText,
	[Token(Token = "0x40009A1")]
	TutorialDescription,
	[Token(Token = "0x40009A2")]
	Falling,
	[Token(Token = "0x40009A3")]
	ControllerName
}
[Token(Token = "0x2000177")]
public enum ControllerID
{
	[Token(Token = "0x40009A5")]
	PS4,
	[Token(Token = "0x40009A6")]
	PS3,
	[Token(Token = "0x40009A7")]
	TAITO,
	[Token(Token = "0x40009A8")]
	XboxOne,
	[Token(Token = "0x40009A9")]
	OculusTouch,
	[Token(Token = "0x40009AA")]
	OtherBluetooth
}
[Token(Token = "0x2000178")]
public enum PatternLayerID
{
	[Token(Token = "0x40009AC")]
	None,
	[Token(Token = "0x40009AD")]
	JIS,
	[Token(Token = "0x40009AE")]
	Komatsu,
	[Token(Token = "0x40009AF")]
	Kid,
	[Token(Token = "0x40009B0")]
	Custom
}
[Token(Token = "0x2000179")]
public enum ControllerButtonType
{
	[Token(Token = "0x40009B2")]
	None,
	[Token(Token = "0x40009B3")]
	Button,
	[Token(Token = "0x40009B4")]
	AxisNegative,
	[Token(Token = "0x40009B5")]
	AxisPositive
}
[Token(Token = "0x200017A")]
public enum CommandID
{
	[Token(Token = "0x40009B7")]
	None,
	[Token(Token = "0x40009B8")]
	DriveLeftFrontWheel,
	[Token(Token = "0x40009B9")]
	DriveLeftBackWheel,
	[Token(Token = "0x40009BA")]
	DriveRightFrontWheel,
	[Token(Token = "0x40009BB")]
	DriveRightBackWheel,
	[Token(Token = "0x40009BC")]
	RotateGrappleFollowClockwise,
	[Token(Token = "0x40009BD")]
	RotateGrappleCounterClockwise,
	[Token(Token = "0x40009BE")]
	RotateRight,
	[Token(Token = "0x40009BF")]
	RotateLeft,
	[Token(Token = "0x40009C0")]
	CloseSmallArm,
	[Token(Token = "0x40009C1")]
	OpenSmallArm,
	[Token(Token = "0x40009C2")]
	OpenShovel,
	[Token(Token = "0x40009C3")]
	CloseShovel,
	[Token(Token = "0x40009C4")]
	RiseBigArm,
	[Token(Token = "0x40009C5")]
	DownBigArm,
	[Token(Token = "0x40009C6")]
	RotateArmRight,
	[Token(Token = "0x40009C7")]
	RotateArmLeft,
	[Token(Token = "0x40009C8")]
	DrivingForward,
	[Token(Token = "0x40009C9")]
	DrivingReverse,
	[Token(Token = "0x40009CA")]
	DrivingLeft,
	[Token(Token = "0x40009CB")]
	DrivingRight,
	[Token(Token = "0x40009CC")]
	ShovelingSoil,
	[Token(Token = "0x40009CD")]
	DumpSoil,
	[Token(Token = "0x40009CE")]
	KidRotateLeft,
	[Token(Token = "0x40009CF")]
	KidRotateRight,
	[Token(Token = "0x40009D0")]
	KidUpBigArm,
	[Token(Token = "0x40009D1")]
	KidDownBigArm,
	[Token(Token = "0x40009D2")]
	ClickButton,
	[Token(Token = "0x40009D3")]
	Pause
}
[Token(Token = "0x200017B")]
public enum LevelDigging
{
	[Token(Token = "0x40009D5")]
	None,
	[Token(Token = "0x40009D6")]
	Level1,
	[Token(Token = "0x40009D7")]
	Level2,
	[Token(Token = "0x40009D8")]
	Level3
}
[Token(Token = "0x200017C")]
public enum GamePadButtonName
{
	[Token(Token = "0x40009DA")]
	None,
	[Token(Token = "0x40009DB")]
	L1,
	[Token(Token = "0x40009DC")]
	L2,
	[Token(Token = "0x40009DD")]
	R1,
	[Token(Token = "0x40009DE")]
	R2,
	[Token(Token = "0x40009DF")]
	B,
	[Token(Token = "0x40009E0")]
	X,
	[Token(Token = "0x40009E1")]
	Y,
	[Token(Token = "0x40009E2")]
	A,
	[Token(Token = "0x40009E3")]
	MarkButtonLeft,
	[Token(Token = "0x40009E4")]
	MarkButtonRight,
	[Token(Token = "0x40009E5")]
	MarkButtonUp,
	[Token(Token = "0x40009E6")]
	MarkButtonDown,
	[Token(Token = "0x40009E7")]
	DpadLelf,
	[Token(Token = "0x40009E8")]
	DpadRight,
	[Token(Token = "0x40009E9")]
	DpadUp,
	[Token(Token = "0x40009EA")]
	DpadDown,
	[Token(Token = "0x40009EB")]
	RightJoystickLeft,
	[Token(Token = "0x40009EC")]
	RightJoystickRight,
	[Token(Token = "0x40009ED")]
	RightJoystickUp,
	[Token(Token = "0x40009EE")]
	RightJoystickDown,
	[Token(Token = "0x40009EF")]
	LeftJoystickLeft,
	[Token(Token = "0x40009F0")]
	LeftJoystickRight,
	[Token(Token = "0x40009F1")]
	LeftJoystickUp,
	[Token(Token = "0x40009F2")]
	LeftJoystickDown,
	[Token(Token = "0x40009F3")]
	CrossButton,
	[Token(Token = "0x40009F4")]
	SquareButton,
	[Token(Token = "0x40009F5")]
	CircleButton,
	[Token(Token = "0x40009F6")]
	TriangleButton,
	[Token(Token = "0x40009F7")]
	LGrip,
	[Token(Token = "0x40009F8")]
	LTrigger,
	[Token(Token = "0x40009F9")]
	RGrip,
	[Token(Token = "0x40009FA")]
	RTrigger
}
[Token(Token = "0x200017D")]
public enum VRButtonType
{
	[Token(Token = "0x40009FC")]
	LoadingSelect,
	[Token(Token = "0x40009FD")]
	ButtonSelect,
	[Token(Token = "0x40009FE")]
	Continuous,
	[Token(Token = "0x40009FF")]
	Simplest,
	[Token(Token = "0x4000A00")]
	Itself
}
[Token(Token = "0x200017E")]
public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object _lock;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool applicationIsQuitting;

	[Token(Token = "0x1700011A")]
	public static T Instance
	{
		[Token(Token = "0x600094E")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600094F")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000950")]
	public Singleton()
	{
	}
}
[Token(Token = "0x200017F")]
public class Timer : MonoBehaviour
{
	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text timerText;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float startTime;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeSuccess;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isUpdateTime;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string totalTime;

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x8FACDC", Offset = "0x8FACDC", VA = "0x8FACDC")]
	public void StartUpdateTime()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x8FAD0C", Offset = "0x8FAD0C", VA = "0x8FAD0C")]
	public void FinishUpdateTime()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x8FAD4C", Offset = "0x8FAD4C", VA = "0x8FAD4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x8FAD50", Offset = "0x8FAD50", VA = "0x8FAD50")]
	public void TimeStopWatch()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x8FAFDC", Offset = "0x8FAFDC", VA = "0x8FAFDC")]
	public Timer()
	{
	}
}
[Token(Token = "0x2000180")]
public class TruckControl : MonoBehaviour
{
	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject truckSoil;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject truckSoilEffect;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x8FB868", Offset = "0x8FB868", VA = "0x8FB868")]
	private void Start()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x8FB904", Offset = "0x8FB904", VA = "0x8FB904")]
	private void Update()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x8FB908", Offset = "0x8FB908", VA = "0x8FB908")]
	private void ShowTruckSoil(bool _isActive)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x8FB938", Offset = "0x8FB938", VA = "0x8FB938")]
	public void ActiveTruckSoilEffect(bool _isActive)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x8FB958", Offset = "0x8FB958", VA = "0x8FB958")]
	public TruckControl()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x8FB960", Offset = "0x8FB960", VA = "0x8FB960")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F2E8", Offset = "0x71F2E8")]
	private void <Start>b__2_0(object obj)
	{
	}
}
[Token(Token = "0x2000181")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7137F4", Offset = "0x7137F4")]
public class DeformableMesh : MonoBehaviour
{
	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maximumDepression;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject pitSample;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bucket;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bucketBlades;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoxCollider pit;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoxCollider pitDown;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoxCollider pitup11;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BoxCollider pitup2;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BoxCollider pitup12;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GeneratePlaneMesh plane;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> modifiedVertices;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> originalVertices;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeUpdate;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool updateCollider;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MeshFilter meshFilter;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MeshCollider meshCollider;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 newVer;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 curPos;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 lastPos;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 curRot;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 lastRot;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool existNewDeform;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform colliderBucket;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject soilOnBucket;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public CalculateAmountOfSoil amountSoil;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject soilOnBucketClone;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float flatAmount;

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xABCC74", Offset = "0xABCC74", VA = "0xABCC74")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xABCD14", Offset = "0xABCD14", VA = "0xABCD14")]
	public void Start()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xABCE68", Offset = "0xABCE68", VA = "0xABCE68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xABD098", Offset = "0xABD098", VA = "0xABD098")]
	public void AddDepression(Vector3 depressionPoint)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xABCDC0", Offset = "0xABCDC0", VA = "0xABCDC0")]
	private void MeshRegenerated()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xABCF04", Offset = "0xABCF04", VA = "0xABCF04")]
	private void UpdateMeshCollider()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xABCF5C", Offset = "0xABCF5C", VA = "0xABCF5C")]
	private void UpdateColliderBucket()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xABD720", Offset = "0xABD720", VA = "0xABD720")]
	public DeformableMesh()
	{
	}
}
[Token(Token = "0x2000182")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713858", Offset = "0x713858")]
public class GeneratePlaneMesh : MonoBehaviour
{
	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float size;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int gridSize;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter filter;

	[Token(Token = "0x1700011B")]
	public Mesh mesh
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0xC02810", Offset = "0xC02810", VA = "0xC02810")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xC0282C", Offset = "0xC0282C", VA = "0xC0282C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xC028A4", Offset = "0xC028A4", VA = "0xC028A4")]
	private Mesh GenerateMesh()
	{
		return null;
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xC02C2C", Offset = "0xC02C2C", VA = "0xC02C2C")]
	public GeneratePlaneMesh()
	{
	}
}
[Token(Token = "0x2000183")]
public class PaintingTexture : MonoBehaviour
{
	[Token(Token = "0x4000A2A")]
	private const int MAX_BRUSH_COUNT = 1000;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject brushContainer;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera canvasCam;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture canvasTexture;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material baseMaterial;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float brushSize;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color brushColor;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int brushCounter;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int index;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 uvCoord;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2 lastUvCoord;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool saving;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityEngine.Object resourceBrush;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xA8B4E4", Offset = "0xA8B4E4", VA = "0xA8B4E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xA8B554", Offset = "0xA8B554", VA = "0xA8B554")]
	private void Update()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xA8B6AC", Offset = "0xA8B6AC", VA = "0xA8B6AC")]
	private void PaintColor()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xA8BA84", Offset = "0xA8BA84", VA = "0xA8BA84")]
	private void SaveTexture()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xA8BE40", Offset = "0xA8BE40", VA = "0xA8BE40")]
	private void Saved()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xA8B8BC", Offset = "0xA8B8BC", VA = "0xA8B8BC")]
	private void InstantiateNewBrush(Vector2 _uvWorldPos)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xA8B7D4", Offset = "0xA8B7D4", VA = "0xA8B7D4")]
	private bool HitTestUVPosition(ref Vector3 uvWorldPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xA8BE48", Offset = "0xA8BE48", VA = "0xA8BE48")]
	public void SetUVCoordCollider(Vector2 _uvCoord)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xA8BE50", Offset = "0xA8BE50", VA = "0xA8BE50")]
	public PaintingTexture()
	{
	}
}
[Token(Token = "0x2000184")]
public class PhysicsDeformer : MonoBehaviour
{
	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float collisionRadius;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DeformableMesh deformableMesh;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CalculateAmountOfSoil amountSoil;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PaintingTexture paintScript;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BucketShaveSoil bucketScript;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CheckDiggingArea checkDiggingArea;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform targetDeform;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform bucketPoint1;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public bool isSetCollider;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[HideInInspector]
	public bool triggerExit;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[HideInInspector]
	public bool isOutDiggingArea;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	[HideInInspector]
	public bool isDeform;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit hit;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Ray ray;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool canDeform;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool canPaint;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 collisionTerrainPoint;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 defaultLocalPos;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion defaultLocalRotation;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xA8DCA8", Offset = "0xA8DCA8", VA = "0xA8DCA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xA8DD0C", Offset = "0xA8DD0C", VA = "0xA8DD0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xA8DFFC", Offset = "0xA8DFFC", VA = "0xA8DFFC")]
	private Vector3 getPointDeform()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xA8E260", Offset = "0xA8E260", VA = "0xA8E260")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xA8E390", Offset = "0xA8E390", VA = "0xA8E390")]
	public PhysicsDeformer()
	{
	}
}
[Token(Token = "0x2000185")]
public class SetLocationPrefab : MonoBehaviour
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string locationParentName;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 defaultPos;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 defaultScale;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion defaultRot;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x8E88CC", Offset = "0x8E88CC", VA = "0x8E88CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x8E8974", Offset = "0x8E8974", VA = "0x8E8974")]
	private void SetLocationPrefabs()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x8E88F8", Offset = "0x8E88F8", VA = "0x8E88F8")]
	private void SaveDefaultLocation()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x8E8D44", Offset = "0x8E8D44", VA = "0x8E8D44")]
	private void SetTransform()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x8E8DBC", Offset = "0x8E8DBC", VA = "0x8E8DBC")]
	public SetLocationPrefab()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x8E8DC4", Offset = "0x8E8DC4", VA = "0x8E8DC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F2F8", Offset = "0x71F2F8")]
	private bool <SetLocationPrefabs>b__5_0(GameObject obj)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000186")]
public class ChangeSpeedSetting : MonoBehaviour
{
	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public YUMBO_SPEED speedID;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider speedSlider;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI txtPercent;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool WasRegisterApply;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x91AE00", Offset = "0x91AE00", VA = "0x91AE00")]
	private void Start()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x91AF78", Offset = "0x91AF78", VA = "0x91AF78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x91B09C", Offset = "0x91B09C", VA = "0x91B09C")]
	public void PlusSpeed()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x91B188", Offset = "0x91B188", VA = "0x91B188")]
	public void MinusSpeed()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x91B274", Offset = "0x91B274", VA = "0x91B274")]
	private void ApplySpeedSetting()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x91B524", Offset = "0x91B524", VA = "0x91B524")]
	private void RevertSpeedSetting()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x91B344", Offset = "0x91B344", VA = "0x91B344")]
	private void ChangeSpeed(float _value)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x91B410", Offset = "0x91B410", VA = "0x91B410")]
	private void UnRegisterSetting()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x91B63C", Offset = "0x91B63C", VA = "0x91B63C")]
	public ChangeSpeedSetting()
	{
	}
}
[Token(Token = "0x2000187")]
public class CheckGamePadExist : MonoBehaviour
{
	[Token(Token = "0x20004F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715194", Offset = "0x715194")]
	private sealed class <ShowAlertDialog>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string gamePadNames;

		[Token(Token = "0x170002B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x91E860", Offset = "0x91E860", VA = "0x91E860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0x91E8C8", Offset = "0x91E8C8", VA = "0x91E8C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x91E6E8", Offset = "0x91E6E8", VA = "0x91E6E8")]
		[DebuggerHidden]
		public <ShowAlertDialog>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x91E71C", Offset = "0x91E71C", VA = "0x91E71C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x91E720", Offset = "0x91E720", VA = "0x91E720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x91E868", Offset = "0x91E868", VA = "0x91E868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x91E514", Offset = "0x91E514", VA = "0x91E514")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x91E518", Offset = "0x91E518", VA = "0x91E518")]
	public void CheckConnectGamePad()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x91E678", Offset = "0x91E678", VA = "0x91E678")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F308", Offset = "0x71F308")]
	private IEnumerator ShowAlertDialog(string gamePadNames)
	{
		return null;
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x91E714", Offset = "0x91E714", VA = "0x91E714")]
	public CheckGamePadExist()
	{
	}
}
[Token(Token = "0x2000188")]
public class ConfigControllerSetting : Singleton<ConfigControllerSetting>
{
	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string path;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Controller> listController;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Controller selectedController;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Pattern selectedPattern;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Command selectedCommand;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool haveKidMode;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string[] sceneHaveKidMode;

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x921FB4", Offset = "0x921FB4", VA = "0x921FB4")]
	public void Init()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x922454", Offset = "0x922454", VA = "0x922454")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x9224F0", Offset = "0x9224F0", VA = "0x9224F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x92203C", Offset = "0x92203C", VA = "0x92203C")]
	private void CheckKidMode(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x9220FC", Offset = "0x9220FC", VA = "0x9220FC")]
	private void InitConfigData()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x9222D4", Offset = "0x9222D4", VA = "0x9222D4")]
	private void InitSelectedController()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x922384", Offset = "0x922384", VA = "0x922384")]
	private void InitSelectedPattern()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x92258C", Offset = "0x92258C", VA = "0x92258C")]
	private void SetPatternNoKidMode()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x922628", Offset = "0x922628", VA = "0x922628")]
	private bool IsNeedUpdateDefaultConfig()
	{
		return default(bool);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x922A10", Offset = "0x922A10", VA = "0x922A10")]
	private Controller GetController(ControllerID _controllerID)
	{
		return null;
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x922854", Offset = "0x922854", VA = "0x922854")]
	private List<Controller> GetDefaultControllerConfig()
	{
		return null;
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x922E3C", Offset = "0x922E3C", VA = "0x922E3C")]
	public void SelectNextController()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x922F08", Offset = "0x922F08", VA = "0x922F08")]
	public void SelectBackController()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x922B64", Offset = "0x922B64", VA = "0x922B64")]
	public Pattern GetPattern(ControllerID _controllerID, PatternLayerID _patternID)
	{
		return null;
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x922FCC", Offset = "0x922FCC", VA = "0x922FCC")]
	public GamePadButtonName GetGamePadButtonName(string _buttonKeyCode)
	{
		return default(GamePadButtonName);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x9230FC", Offset = "0x9230FC", VA = "0x9230FC")]
	public void UpdatePatternConfig()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x92324C", Offset = "0x92324C", VA = "0x92324C")]
	public void UpdateCurPatternDefault()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x9232C4", Offset = "0x9232C4", VA = "0x9232C4")]
	private Pattern GetDefaultPatternConfig(ControllerID _controllerID, PatternLayerID _patternLayerID)
	{
		return null;
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x9238D8", Offset = "0x9238D8", VA = "0x9238D8")]
	public List<Command> GetDuplicateCommand()
	{
		return null;
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x923ADC", Offset = "0x923ADC", VA = "0x923ADC")]
	public void CancelConfig()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x923B8C", Offset = "0x923B8C", VA = "0x923B8C")]
	public void SaveConfig()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x923C20", Offset = "0x923C20", VA = "0x923C20")]
	public Command GetCommand(CommandID _commandID)
	{
		return null;
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x923DBC", Offset = "0x923DBC", VA = "0x923DBC")]
	public ConfigControllerSetting()
	{
	}
}
[Token(Token = "0x2000189")]
public class OculusTouchInputConverter : MonoBehaviour
{
	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x9D2030", Offset = "0x9D2030", VA = "0x9D2030")]
	public string ConvertInputQuest(OVRInput.RawButton rawButton)
	{
		return null;
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x9D21F0", Offset = "0x9D21F0", VA = "0x9D21F0")]
	public OVRInput.RawButton ConvertInputUnity(string inputName)
	{
		return default(OVRInput.RawButton);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x9D25F0", Offset = "0x9D25F0", VA = "0x9D25F0")]
	public OculusTouchInputConverter()
	{
	}
}
[Token(Token = "0x200018A")]
public class LangguageSettingControl : MonoBehaviour
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool WasRegisterApply;

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xB48094", Offset = "0xB48094", VA = "0xB48094")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xB481B8", Offset = "0xB481B8", VA = "0xB481B8")]
	private void ApplyLangguageSetting()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xB483D8", Offset = "0xB483D8", VA = "0xB483D8")]
	private void RevertLangguageSetting()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xB482C4", Offset = "0xB482C4", VA = "0xB482C4")]
	private void UnRegisterSetting()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xB484B0", Offset = "0xB484B0", VA = "0xB484B0")]
	public LangguageSettingControl()
	{
	}
}
[Token(Token = "0x200018B")]
public class SettingConfig : Singleton<SettingConfig>
{
	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string path;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SettingValue> listSetting;

	[Token(Token = "0x14000028")]
	public event Action OnApplySetting
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x8E9280", Offset = "0x8E9280", VA = "0x8E9280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F36C", Offset = "0x71F36C")]
		add
		{
		}
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x8E9324", Offset = "0x8E9324", VA = "0x8E9324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F37C", Offset = "0x71F37C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action OnRevertSetting
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x8E93C8", Offset = "0x8E93C8", VA = "0x8E93C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F38C", Offset = "0x71F38C")]
		add
		{
		}
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x8E946C", Offset = "0x8E946C", VA = "0x8E946C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F39C", Offset = "0x71F39C")]
		remove
		{
		}
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x8E3C5C", Offset = "0x8E3C5C", VA = "0x8E3C5C")]
	public void Init()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x8E9770", Offset = "0x8E9770", VA = "0x8E9770")]
	public float GetValue(SettingID _id, int _kindSetting = 0)
	{
		return default(float);
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x8E9938", Offset = "0x8E9938", VA = "0x8E9938")]
	public void SetValue(SettingID _id, float _value, int _kindSetting = 0)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x8E9A74", Offset = "0x8E9A74", VA = "0x8E9A74")]
	public void ApplySetting()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x8E9AD4", Offset = "0x8E9AD4", VA = "0x8E9AD4")]
	public void RevertSetting()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x8E9510", Offset = "0x8E9510", VA = "0x8E9510")]
	private void SetDefaultConfig()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x8E9B48", Offset = "0x8E9B48", VA = "0x8E9B48")]
	private void SetDefaultConfigTest()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x8E9D78", Offset = "0x8E9D78", VA = "0x8E9D78")]
	public float GetSettingValue(YUMBO_SPEED _value)
	{
		return default(float);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x8E9EA0", Offset = "0x8E9EA0", VA = "0x8E9EA0")]
	public SettingConfig()
	{
	}
}
[Token(Token = "0x200018C")]
public class SoundSettingControl : MonoBehaviour
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider soundSlider;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject OnSound;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject OffSound;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AudioSource> list_sound;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VRActiveButton onSoundScript;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRActiveButton offSoundScript;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float tempSoundValue;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool WasRegisterApply;

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x8F1214", Offset = "0x8F1214", VA = "0x8F1214")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x8F12C4", Offset = "0x8F12C4", VA = "0x8F12C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x8F1498", Offset = "0x8F1498", VA = "0x8F1498")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x8F15B4", Offset = "0x8F15B4", VA = "0x8F15B4")]
	public void PlusSound()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x8F1654", Offset = "0x8F1654", VA = "0x8F1654")]
	public void MinusSound()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x8F1700", Offset = "0x8F1700", VA = "0x8F1700")]
	public void SetOffSound()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x8F17A4", Offset = "0x8F17A4", VA = "0x8F17A4")]
	public void SetOnSound()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x8F13E4", Offset = "0x8F13E4", VA = "0x8F13E4")]
	private void SetActiveSound(bool isOnSound)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x8F184C", Offset = "0x8F184C", VA = "0x8F184C")]
	private void SetSound(float _volume)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x8F1990", Offset = "0x8F1990", VA = "0x8F1990")]
	private void ApplySoundSetting()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x8F1B68", Offset = "0x8F1B68", VA = "0x8F1B68")]
	private void RevertSoundSetting()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x8F1A5C", Offset = "0x8F1A5C", VA = "0x8F1A5C")]
	private void UnRegisterSetting()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x8F1C2C", Offset = "0x8F1C2C", VA = "0x8F1C2C")]
	public SoundSettingControl()
	{
	}
}
[Token(Token = "0x200018D")]
public class TabSetting : MonoBehaviour
{
	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SoundContent;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LangguageContent;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ControllerContent;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpeedContent;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI txtSound;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI txtLangguage;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI txtController;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI txtSpeed;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image imgSound;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image imgLangguage;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image imgController;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image imgSpeed;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color lightBlue;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PatternGuideControl patternScript;

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x8F2C24", Offset = "0x8F2C24", VA = "0x8F2C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x8F2C7C", Offset = "0x8F2C7C", VA = "0x8F2C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x8F2D60", Offset = "0x8F2D60", VA = "0x8F2D60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x8F2DAC", Offset = "0x8F2DAC", VA = "0x8F2DAC")]
	public void SetColorMenuTab(string menuTab)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x8F3000", Offset = "0x8F3000", VA = "0x8F3000")]
	public void SetActiveTab(string menuTab)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x8F32A8", Offset = "0x8F32A8", VA = "0x8F32A8")]
	private void SetColorTextMenuTab(string menuTab)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x8F2FF8", Offset = "0x8F2FF8", VA = "0x8F2FF8")]
	private Color SetAlphaColor(Color color, float alphaIndex)
	{
		return default(Color);
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x8F3468", Offset = "0x8F3468", VA = "0x8F3468")]
	public TabSetting()
	{
	}
}
[Token(Token = "0x200018E")]
public class ChangeIsDiggingWithTerrain : MonoBehaviour
{
	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckTriggerWithTerrain checkTriggerTerrainScript;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BucketShaveSoil bucketShaveSoilScript;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject bucket;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x91A98C", Offset = "0x91A98C", VA = "0x91A98C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x91AA00", Offset = "0x91AA00", VA = "0x91AA00")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x91AA30", Offset = "0x91AA30", VA = "0x91AA30")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x91AB08", Offset = "0x91AB08", VA = "0x91AB08")]
	public ChangeIsDiggingWithTerrain()
	{
	}
}
[Token(Token = "0x200018F")]
public class CheckButtonKidExist : MonoBehaviour
{
	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x91D7BC", Offset = "0x91D7BC", VA = "0x91D7BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x91D860", Offset = "0x91D860", VA = "0x91D860")]
	public CheckButtonKidExist()
	{
	}
}
[Token(Token = "0x2000190")]
public class CheckDiggingArea : MonoBehaviour
{
	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDiggingArea;

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x91DDB4", Offset = "0x91DDB4", VA = "0x91DDB4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x91DE40", Offset = "0x91DE40", VA = "0x91DE40")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x91DEC8", Offset = "0x91DEC8", VA = "0x91DEC8")]
	public CheckDiggingArea()
	{
	}
}
[Token(Token = "0x2000191")]
public class CheckTriggerWithTerrain : MonoBehaviour
{
	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isTriggerTerrain;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject bucket;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BucketShaveSoil bucketShaveSoilScript;

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x92035C", Offset = "0x92035C", VA = "0x92035C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x9203D0", Offset = "0x9203D0", VA = "0x9203D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x920454", Offset = "0x920454", VA = "0x920454")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x920514", Offset = "0x920514", VA = "0x920514")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x9205A0", Offset = "0x9205A0", VA = "0x9205A0")]
	public CheckTriggerWithTerrain()
	{
	}
}
[Token(Token = "0x2000192")]
public class FakeDigging : MonoBehaviour
{
	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoxCollider boxCollider;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ManaDownArm manaDownArmScript;

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xBFC0E8", Offset = "0xBFC0E8", VA = "0xBFC0E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xBFC180", Offset = "0xBFC180", VA = "0xBFC180")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xBFC22C", Offset = "0xBFC22C", VA = "0xBFC22C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xBFC31C", Offset = "0xBFC31C", VA = "0xBFC31C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xBFC3BC", Offset = "0xBFC3BC", VA = "0xBFC3BC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xBFC45C", Offset = "0xBFC45C", VA = "0xBFC45C")]
	public FakeDigging()
	{
	}
}
[Token(Token = "0x2000193")]
public class ManaDownArm : MonoBehaviour
{
	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public GameObject curStone;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject parentCurStone;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public GameObject fences;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float pointDisBigTime;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float pointDisSmallTime;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isDisArm;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Ver1Stage1Manager ver1Stage1Script;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Excavator exScript;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xC1102C", Offset = "0xC1102C", VA = "0xC1102C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xC11104", Offset = "0xC11104", VA = "0xC11104")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xC1122C", Offset = "0xC1122C", VA = "0xC1122C")]
	public void SetPointDisArm(GameObject _object)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xC11384", Offset = "0xC11384", VA = "0xC11384")]
	public ManaDownArm()
	{
	}
}
[Token(Token = "0x2000194")]
public class PitSampleManager : MonoBehaviour
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xA8E65C", Offset = "0xA8E65C", VA = "0xA8E65C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xA8E660", Offset = "0xA8E660", VA = "0xA8E660")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xA8E664", Offset = "0xA8E664", VA = "0xA8E664")]
	public PitSampleManager()
	{
	}
}
[Token(Token = "0x2000195")]
public class SetColliderBucket : MonoBehaviour
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isChangeTrigger;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool changeTrue;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool changeFalse;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider[] boxChildCollider;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BoxCollider[] fenceColliders;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject fences;

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x8E82BC", Offset = "0x8E82BC", VA = "0x8E82BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x8E8398", Offset = "0x8E8398", VA = "0x8E8398")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x8E83FC", Offset = "0x8E83FC", VA = "0x8E83FC")]
	public void setChildCollider(bool value)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x8E8464", Offset = "0x8E8464", VA = "0x8E8464")]
	private void changeCollider(BoxCollider[] colliders, bool _value)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x8E84E0", Offset = "0x8E84E0", VA = "0x8E84E0")]
	public SetColliderBucket()
	{
	}
}
[Token(Token = "0x2000196")]
public class SoilFlatter : MonoBehaviour
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isColliding;

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x8F1024", Offset = "0x8F1024", VA = "0x8F1024")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x8F1074", Offset = "0x8F1074", VA = "0x8F1074")]
	private void Update()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x8F1078", Offset = "0x8F1078", VA = "0x8F1078")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x8F1100", Offset = "0x8F1100", VA = "0x8F1100")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x8F1188", Offset = "0x8F1188", VA = "0x8F1188")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x8F120C", Offset = "0x8F120C", VA = "0x8F120C")]
	public SoilFlatter()
	{
	}
}
[Token(Token = "0x2000197")]
public class DiggingSoil : NextStepCondition
{
	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isChangeText;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject volvo;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject arrow;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject diggingArea;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject bucket;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 target;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PhysicsDeformer deformerScript;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BucketShaveSoil bucketShaveSoil;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CheckDiggingArea checkDiggingScript;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Ver1Stage1Manager controlStage1;

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xABF688", Offset = "0xABF688", VA = "0xABF688")]
	public DiggingSoil(GameObject _volvo, GameObject _arrow, GameObject _diggingArea, GameObject _bucket, PhysicsDeformer _deformerScript, Ver1Stage1Manager _controlStage1)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xABF6EC", Offset = "0xABF6EC", VA = "0xABF6EC", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xABF83C", Offset = "0xABF83C", VA = "0xABF83C", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xABFC34", Offset = "0xABFC34", VA = "0xABFC34", Slot = "6")]
	public override void OnComplete()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xABFA04", Offset = "0xABFA04", VA = "0xABFA04")]
	private void LookAtDiggingArea()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xABFB9C", Offset = "0xABFB9C", VA = "0xABFB9C")]
	private void ChangeTextGuide()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xABF7BC", Offset = "0xABF7BC", VA = "0xABF7BC")]
	private void CacheObjects()
	{
	}
}
[Token(Token = "0x2000198")]
public class DumpingSoil : NextStepCondition
{
	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int MAX_DUMPING_SOIL;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeShowSuccess;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float successTime;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isSuccessTime;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool isPlusNumberSuccess;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject volvo;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject truck;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject arrow;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject truckSoil;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject DumperColliderGO;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject bucket;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject soilOnBucket;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider dumperCollider;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider bucketCollider;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 bucketCenter;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private TruckControl truckControl;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CalculateAmountOfSoil amountSoil;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Ver1Stage1Manager controlStage1;

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xBF0840", Offset = "0xBF0840", VA = "0xBF0840")]
	public DumpingSoil(GameObject _volvo, GameObject _truck, GameObject _arrow, GameObject _truckSoil, GameObject _DumperColliderGO, GameObject _bucket, GameObject _soilOnBucket, int _MAX_DUMPING_SOIL, Ver1Stage1Manager _control)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xBF08C0", Offset = "0xBF08C0", VA = "0xBF08C0", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xBF0A14", Offset = "0xBF0A14", VA = "0xBF0A14", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xBF1110", Offset = "0xBF1110", VA = "0xBF1110")]
	private void ShowCompleteStepDialog()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xBF1678", Offset = "0xBF1678", VA = "0xBF1678", Slot = "6")]
	public override void OnComplete()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xBF0C0C", Offset = "0xBF0C0C", VA = "0xBF0C0C")]
	private void LookAtDiggingArea()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xBF0DC4", Offset = "0xBF0DC4", VA = "0xBF0DC4")]
	private void SetAmountSoilOnBucket()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xBF0F20", Offset = "0xBF0F20", VA = "0xBF0F20")]
	private void checkFallSoil()
	{
	}
}
[Token(Token = "0x2000199")]
public class MoveStone : NextStepCondition
{
	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject stone_shovel;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject cricle;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int MAX_MOVE_SOLID;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isChangeText;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isSuccess;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool isPlusNumberSuccess;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float successTime;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timeShowSuccess;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject yumbo;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject arrow;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject moveStone;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject bucket;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject bucketCenter;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] stones;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject[] cricles;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 target;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Ver1Stage1Manager controlStage1;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xDEB56C", Offset = "0xDEB56C", VA = "0xDEB56C")]
	public MoveStone(GameObject _yumbo, GameObject _arrow, GameObject _moveStone, GameObject _bucket, GameObject _bucketCenter, GameObject[] _stones, GameObject[] _cricles, int _MAX_MOVE_SOLID, Ver1Stage1Manager _control)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xDEB5F4", Offset = "0xDEB5F4", VA = "0xDEB5F4", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xDEC414", Offset = "0xDEC414", VA = "0xDEC414", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xDEC4EC", Offset = "0xDEC4EC", VA = "0xDEC4EC", Slot = "6")]
	public override void OnComplete()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xDEBDE0", Offset = "0xDEBDE0", VA = "0xDEBDE0")]
	private void SetStoneLocation()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xDEC0A0", Offset = "0xDEC0A0", VA = "0xDEC0A0")]
	private bool StoneShovelIsDrop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xDEC308", Offset = "0xDEC308", VA = "0xDEC308")]
	private void ShowCompleteStepDialog()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xDEBAA0", Offset = "0xDEBAA0", VA = "0xDEBAA0")]
	private void SetDragShovelStone()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xDEBE88", Offset = "0xDEBE88", VA = "0xDEBE88")]
	private void LookAtPourArea()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xDEBCBC", Offset = "0xDEBCBC", VA = "0xDEBCBC")]
	private void SetStoneShovel()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xDEC550", Offset = "0xDEC550", VA = "0xDEC550")]
	private bool checkStoneInBucket(GameObject _stonne)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xDEC14C", Offset = "0xDEC14C", VA = "0xDEC14C")]
	private void ChangeTextGuide()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xDEC1EC", Offset = "0xDEC1EC", VA = "0xDEC1EC")]
	private bool CheckDumpStoneCricle()
	{
		return default(bool);
	}
}
[Token(Token = "0x200019A")]
public class ShovelStone : NextStepCondition
{
	[Token(Token = "0x4000ABF")]
	private const float MAX_DISTANCE_WITH_BUCKET = 1f;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isChangeText;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isSuccess;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float dis;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject volvo;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject truck;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject arrow;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject stoneArea;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject bucket;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject[] stones;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BucketShaveSoil bucketShaveSoil;

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x8EA274", Offset = "0x8EA274", VA = "0x8EA274")]
	public ShovelStone(GameObject _volvo, GameObject _truck, GameObject _arrow, GameObject _stoneArea, GameObject _bucket, GameObject[] _stones)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x8EA2D4", Offset = "0x8EA2D4", VA = "0x8EA2D4", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x8EA740", Offset = "0x8EA740", VA = "0x8EA740", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x8EA85C", Offset = "0x8EA85C", VA = "0x8EA85C", Slot = "6")]
	public override void OnComplete()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x8EA454", Offset = "0x8EA454", VA = "0x8EA454")]
	private void LookAtStoneArea()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x8EA60C", Offset = "0x8EA60C", VA = "0x8EA60C")]
	private void ChangeTextGuide()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x8EA6A4", Offset = "0x8EA6A4", VA = "0x8EA6A4")]
	private bool CheckShovel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x8EA860", Offset = "0x8EA860", VA = "0x8EA860")]
	private float takeDistanceWithBucket(GameObject _object, GameObject _bucket)
	{
		return default(float);
	}
}
[Token(Token = "0x200019B")]
public class StoneManage : MonoBehaviour
{
	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDrop;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rig;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform parrentStone;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x8F279C", Offset = "0x8F279C", VA = "0x8F279C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x8F2820", Offset = "0x8F2820", VA = "0x8F2820")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x8F2970", Offset = "0x8F2970", VA = "0x8F2970")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x8F29F4", Offset = "0x8F29F4", VA = "0x8F29F4")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x8F2AC8", Offset = "0x8F2AC8", VA = "0x8F2AC8")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x8F2B98", Offset = "0x8F2B98", VA = "0x8F2B98")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x8F2C1C", Offset = "0x8F2C1C", VA = "0x8F2C1C")]
	public StoneManage()
	{
	}
}
[Token(Token = "0x200019C")]
public class FlatDirt : MonoBehaviour
{
	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maximumDistanceTerrain;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dirtPlane;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem effect;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MainTarget;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject CenterTarget;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject RightTarget;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject LeftTarget;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ListEffectDropSoil;

	[Token(Token = "0x4000AD5")]
	private const float FAIL_RAYCAST_TERRAIN_VALUE = 1000f;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int TimeUp;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int time;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit hit;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 tmppoint;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 point;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ParticleSystem effectDropSoil;

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xBFCE48", Offset = "0xBFCE48", VA = "0xBFCE48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xBFCEBC", Offset = "0xBFCEBC", VA = "0xBFCEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xBFCEDC", Offset = "0xBFCEDC", VA = "0xBFCEDC")]
	private void doFlat()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xBFD5F4", Offset = "0xBFD5F4", VA = "0xBFD5F4")]
	private void EffectDropSoil()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xBFD228", Offset = "0xBFD228", VA = "0xBFD228")]
	private float GetDisWithTerrain(GameObject _object)
	{
		return default(float);
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xBFD03C", Offset = "0xBFD03C", VA = "0xBFD03C")]
	private Vector3 GetHitPointTerrain(GameObject _object)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xBFD46C", Offset = "0xBFD46C", VA = "0xBFD46C")]
	private void DrawFake(Vector3 _des)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xBFD750", Offset = "0xBFD750", VA = "0xBFD750")]
	public FlatDirt()
	{
	}
}
[Token(Token = "0x200019D")]
public class ChangeCenterGrapple : MonoBehaviour
{
	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isSet;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CheckGrappleAction checkGrappleScript;

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x91A68C", Offset = "0x91A68C", VA = "0x91A68C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x91A6E4", Offset = "0x91A6E4", VA = "0x91A6E4")]
	public void changeCenterGrapple(bool change, Transform tran)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x91A784", Offset = "0x91A784", VA = "0x91A784")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x91A894", Offset = "0x91A894", VA = "0x91A894")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x91A984", Offset = "0x91A984", VA = "0x91A984")]
	public ChangeCenterGrapple()
	{
	}
}
[Token(Token = "0x200019E")]
public class ChangePraviteGrappleWhenClose : MonoBehaviour
{
	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoxCollider boxCollider;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CheckGrappleAction bucketScript;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isTriggerObjectStage4;

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x91AB10", Offset = "0x91AB10", VA = "0x91AB10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x91ABA8", Offset = "0x91ABA8", VA = "0x91ABA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x91AC94", Offset = "0x91AC94", VA = "0x91AC94")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x91AD0C", Offset = "0x91AD0C", VA = "0x91AD0C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x91AD80", Offset = "0x91AD80", VA = "0x91AD80")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x91ADF8", Offset = "0x91ADF8", VA = "0x91ADF8")]
	public ChangePraviteGrappleWhenClose()
	{
	}
}
[Token(Token = "0x200019F")]
public enum LevelWrapperGrapple
{
	[Token(Token = "0x4000AE2")]
	Level0,
	[Token(Token = "0x4000AE3")]
	Level1,
	[Token(Token = "0x4000AE4")]
	Level2,
	[Token(Token = "0x4000AE5")]
	Level3
}
[Token(Token = "0x20001A0")]
public class CheckColliderOutsiteGrapple : MonoBehaviour
{
	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CheckGrappleAction checkGrappleScript;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelWrapperGrapple level;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x91D868", Offset = "0x91D868", VA = "0x91D868")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x91D8C0", Offset = "0x91D8C0", VA = "0x91D8C0")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x91DAD4", Offset = "0x91DAD4", VA = "0x91DAD4")]
	public CheckColliderOutsiteGrapple()
	{
	}
}
[Token(Token = "0x20001A1")]
public class CheckGrappleAction : MonoBehaviour
{
	[Token(Token = "0x4000AE8")]
	private const float GRAPPLE_OPEN_LARGE = 25f;

	[Token(Token = "0x4000AE9")]
	private const float GRAPPLE_CLOSE = 55f;

	[Token(Token = "0x4000AEA")]
	private const float GRAPPLE_CLOSE_MIN = 75f;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float GRAPPLE_ANGLE_MAX;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float grappleAngle;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float hand1currentPoint;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float timeSmallArm;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float timeRotate;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float timeS;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float timeW;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float timeA;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float timeD;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float timePressForLeft;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float timePressForRight;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float timePressBackLeft;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public float timePressBackRight;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isTouchGrapple1;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool isTouchGrapple2;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool isTouchGrapple3;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	public bool barIntoGrapple;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isChildYumbo;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool objThroughtGrapple;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public GameObject hand1;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Excavator exScript;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int numberHandTouch;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int touch1;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int touch2;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int touch3;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int touch;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int number;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int levelCollider;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<string> listObject;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<string> listTouch;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timeCountDown;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float timeWaittingLevel3;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 normalVec;

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x91EA8C", Offset = "0x91EA8C", VA = "0x91EA8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x91EB74", Offset = "0x91EB74", VA = "0x91EB74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x91AC7C", Offset = "0x91AC7C", VA = "0x91AC7C")]
	public bool IsGrappleClose()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x91F29C", Offset = "0x91F29C", VA = "0x91F29C")]
	public bool IsGrappleCloseMin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x91F2B4", Offset = "0x91F2B4", VA = "0x91F2B4")]
	public bool IsGrappleOpenLarge()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x91F2C8", Offset = "0x91F2C8", VA = "0x91F2C8")]
	public void AddObject(string _value)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x91F45C", Offset = "0x91F45C", VA = "0x91F45C")]
	public void RemoveObject(string _value)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x91EDD8", Offset = "0x91EDD8", VA = "0x91EDD8")]
	private void ManagerGrappleAction()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x91A86C", Offset = "0x91A86C", VA = "0x91A86C")]
	public bool IsTouchGrappleAll()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x91F350", Offset = "0x91F350", VA = "0x91F350")]
	private bool CheckExitsIn(List<string> _list, string _value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x91F4E4", Offset = "0x91F4E4", VA = "0x91F4E4")]
	public void PlusCountDown()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x91EE94", Offset = "0x91EE94", VA = "0x91EE94")]
	private void ResetStatusTouchGrapple()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x91F25C", Offset = "0x91F25C", VA = "0x91F25C")]
	private void ResetWattingLevel3()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x91EEE4", Offset = "0x91EEE4", VA = "0x91EEE4")]
	private void ChangeYumboAction()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x91DA20", Offset = "0x91DA20", VA = "0x91DA20")]
	public void ChangeLevelCollider(LevelWrapperGrapple _level)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x91EC38", Offset = "0x91EC38", VA = "0x91EC38")]
	private void CheckTimeUseWhenColliderObject4()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x91F530", Offset = "0x91F530", VA = "0x91F530")]
	public CheckGrappleAction()
	{
	}
}
[Token(Token = "0x20001A2")]
public enum GrappleType
{
	[Token(Token = "0x4000B0D")]
	Grapple1,
	[Token(Token = "0x4000B0E")]
	Grapple2,
	[Token(Token = "0x4000B0F")]
	Grapple3
}
[Token(Token = "0x20001A3")]
public class CheckGrappleHand : MonoBehaviour
{
	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckGrappleAction checkGrappleScript;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GrappleCollision grappleCollision;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GrappleType grappleType;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _tag;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool success;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rigi;

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x91F590", Offset = "0x91F590", VA = "0x91F590")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x91F608", Offset = "0x91F608", VA = "0x91F608")]
	private void SetGrappleType()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x91F6D4", Offset = "0x91F6D4", VA = "0x91F6D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x91F8E4", Offset = "0x91F8E4", VA = "0x91F8E4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x91FA68", Offset = "0x91FA68", VA = "0x91FA68")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x91FB9C", Offset = "0x91FB9C", VA = "0x91FB9C")]
	private void ChangeCollisonDetectDynamic(bool _val)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x91F820", Offset = "0x91F820", VA = "0x91F820")]
	private void SetParentGrappleCollision(Collider _collider)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x91FBCC", Offset = "0x91FBCC", VA = "0x91FBCC")]
	public CheckGrappleHand()
	{
	}
}
[Token(Token = "0x20001A4")]
public class CheckLevelDigging : MonoBehaviour
{
	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BucketShaveSoil bucketScript;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelDigging level;

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x91FBD4", Offset = "0x91FBD4", VA = "0x91FBD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x91FC44", Offset = "0x91FC44", VA = "0x91FC44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x91FD90", Offset = "0x91FD90", VA = "0x91FD90")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x91FEDC", Offset = "0x91FEDC", VA = "0x91FEDC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x920010", Offset = "0x920010", VA = "0x920010")]
	public CheckLevelDigging()
	{
	}
}
[Token(Token = "0x20001A5")]
public class GrappleCollision : MonoBehaviour
{
	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PERCENT_BAR;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform grapple;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform objMaterial;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject poin1;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject poin2;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float rigid_mass;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rigid_drag;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rigid_angularDrag;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool isCollisionTruckPlane;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[HideInInspector]
	public bool isCollisionObjectStage4;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public GameObject itself;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isCollisionTerrain;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool isLeaveGrapple;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[HideInInspector]
	public bool hand1Collision;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	[HideInInspector]
	public bool hand2Collision;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public bool hand3Collision;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject Yumbo;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject centerGrapple;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Excavator exScript;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CheckGrappleAction checkGrappleScript;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isPlusDrop;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float hand1ClosePoint;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timeWatting;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timeCountDown;

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xAFE438", Offset = "0xAFE438", VA = "0xAFE438")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xAFE610", Offset = "0xAFE610", VA = "0xAFE610")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xAFEA5C", Offset = "0xAFEA5C", VA = "0xAFEA5C")]
	private void CalculateNumberDrop()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xAFE850", Offset = "0xAFE850", VA = "0xAFE850")]
	private bool isCurBar()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xAFE674", Offset = "0xAFE674", VA = "0xAFE674")]
	private void LeaveGrapple()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xAFE8D4", Offset = "0xAFE8D4", VA = "0xAFE8D4")]
	private void ChangeContraintBar()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xAFEABC", Offset = "0xAFEABC", VA = "0xAFEABC")]
	private bool isYumboSharking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xAFED28", Offset = "0xAFED28", VA = "0xAFED28")]
	private bool isCollisonAllHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xAFED50", Offset = "0xAFED50", VA = "0xAFED50")]
	private void PlusTimeCountDown()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xAFED9C", Offset = "0xAFED9C", VA = "0xAFED9C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xAFEEDC", Offset = "0xAFEEDC", VA = "0xAFEEDC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xAFEFF4", Offset = "0xAFEFF4", VA = "0xAFEFF4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xAFE530", Offset = "0xAFE530", VA = "0xAFE530")]
	private void SetNameColliderObj()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xAFEB08", Offset = "0xAFEB08", VA = "0xAFEB08")]
	private bool checkGrapple()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xAFF11C", Offset = "0xAFF11C", VA = "0xAFF11C")]
	public GrappleCollision()
	{
	}
}
[Token(Token = "0x20001A6")]
public class MoveArrow : MonoBehaviour
{
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minPosYArrow;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject shovel;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject obj;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject arrow;

	[Token(Token = "0x4000B34")]
	private const float MIN_DISTANCE_YUMBO_OBJ = 2.5f;

	[Token(Token = "0x4000B35")]
	private const float MAX_DISTANCE_YUMBO_OBJ = 3f;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startArrow;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xDEB26C", Offset = "0xDEB26C", VA = "0xDEB26C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xDEB2B4", Offset = "0xDEB2B4", VA = "0xDEB2B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xDEB2D8", Offset = "0xDEB2D8", VA = "0xDEB2D8")]
	private void CheckDisYumboWood()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xDEB414", Offset = "0xDEB414", VA = "0xDEB414")]
	private void AutoMoveArrow()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xDEB564", Offset = "0xDEB564", VA = "0xDEB564")]
	public MoveArrow()
	{
	}
}
[Token(Token = "0x20001A7")]
public class PlaneTruckCollision : MonoBehaviour
{
	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int percent;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int per;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string objName;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> listGameobjectOnTruck;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider truckPlaneCollider;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isActiveAlert;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string alertWoodKey;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string alertSteelPipeKey;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string alertTreeKey;

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xA8E66C", Offset = "0xA8E66C", VA = "0xA8E66C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xA8E6F4", Offset = "0xA8E6F4", VA = "0xA8E6F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xA8EA94", Offset = "0xA8EA94", VA = "0xA8EA94")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xA8ED38", Offset = "0xA8ED38", VA = "0xA8ED38")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xA8E914", Offset = "0xA8E914", VA = "0xA8E914")]
	private int CalculatePercent()
	{
		return default(int);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xA8E72C", Offset = "0xA8E72C", VA = "0xA8E72C")]
	private void CheckObjOutsiteTruck(string _objName)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xA8F028", Offset = "0xA8F028", VA = "0xA8F028")]
	private bool IsOutSideAlertKey()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xA8EE88", Offset = "0xA8EE88", VA = "0xA8EE88")]
	private bool IsExistObjOutSideTruck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xA8EAF8", Offset = "0xA8EAF8", VA = "0xA8EAF8")]
	private void TakeNumberObjectOnTruck(Collider _other, string _objName, string _change)
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xA8F114", Offset = "0xA8F114", VA = "0xA8F114")]
	public void SetobjName(string _objName)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xA8ED9C", Offset = "0xA8ED9C", VA = "0xA8ED9C")]
	private bool CheckInsideTruck(GameObject p1, GameObject p2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xA8F11C", Offset = "0xA8F11C", VA = "0xA8F11C")]
	public PlaneTruckCollision()
	{
	}
}
[Token(Token = "0x20001A8")]
public class PlaneTruckPlatform : MonoBehaviour
{
	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AlertYumboCollider[] list_alertScripts;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform rootTrans;

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xA8F18C", Offset = "0xA8F18C", VA = "0xA8F18C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xA8F264", Offset = "0xA8F264", VA = "0xA8F264")]
	private void ConstraintDetectAlert()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xA8F2D8", Offset = "0xA8F2D8", VA = "0xA8F2D8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xA8F390", Offset = "0xA8F390", VA = "0xA8F390")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xA8F428", Offset = "0xA8F428", VA = "0xA8F428")]
	public PlaneTruckPlatform()
	{
	}
}
[Token(Token = "0x20001A9")]
public class SetSoundDrop : MonoBehaviour
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isSetSound;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GrappleCollision grappleScript;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x8E8F6C", Offset = "0x8E8F6C", VA = "0x8E8F6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x8E8FDC", Offset = "0x8E8FDC", VA = "0x8E8FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x8E9050", Offset = "0x8E9050", VA = "0x8E9050")]
	private void SetSound()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x8E90E0", Offset = "0x8E90E0", VA = "0x8E90E0")]
	public SetSoundDrop()
	{
	}
}
[Token(Token = "0x20001AA")]
public class PickMaterialObject : NextStepCondition
{
	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string objName;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string guideLocalizeKey;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string infoLocalizeKey;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numberPickObj;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject volvo;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject planeTruck;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlaneTruckCollision planeScript;

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xA8E3A4", Offset = "0xA8E3A4", VA = "0xA8E3A4")]
	public PickMaterialObject(GameObject _volvo, GameObject _planeTruck, string _guideLocalizeKey, string _infoLocalizeKey, string _objName, int _numberPickObj)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xA8E408", Offset = "0xA8E408", VA = "0xA8E408", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xA8E4B4", Offset = "0xA8E4B4", VA = "0xA8E4B4", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xA8E5B4", Offset = "0xA8E5B4", VA = "0xA8E5B4")]
	private float GetPercent()
	{
		return default(float);
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xA8E5EC", Offset = "0xA8E5EC", VA = "0xA8E5EC", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x20001AB")]
public class CheckBoughCollision : MonoBehaviour
{
	[Token(Token = "0x20004F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7151A4", Offset = "0x7151A4")]
	private sealed class <HideAlertWhenDropPartTree>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckBoughCollision <>4__this;

		[Token(Token = "0x170002B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x91D74C", Offset = "0x91D74C", VA = "0x91D74C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0x91D7B4", Offset = "0x91D7B4", VA = "0x91D7B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x91D648", Offset = "0x91D648", VA = "0x91D648")]
		[DebuggerHidden]
		public <HideAlertWhenDropPartTree>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x91D67C", Offset = "0x91D67C", VA = "0x91D67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x91D680", Offset = "0x91D680", VA = "0x91D680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x91D754", Offset = "0x91D754", VA = "0x91D754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GrappleCollision grappleCollision;

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x91D310", Offset = "0x91D310", VA = "0x91D310")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x91D5D8", Offset = "0x91D5D8", VA = "0x91D5D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F3AC", Offset = "0x71F3AC")]
	private IEnumerator HideAlertWhenDropPartTree()
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x91D674", Offset = "0x91D674", VA = "0x91D674")]
	public CheckBoughCollision()
	{
	}
}
[Token(Token = "0x20001AC")]
public class NextStepCondition : MonoBehaviour
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float fadedTime;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float localTime;

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xDEF99C", Offset = "0xDEF99C", VA = "0xDEF99C", Slot = "4")]
	public virtual void OnStart()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xDEF9A0", Offset = "0xDEF9A0", VA = "0xDEF9A0", Slot = "5")]
	public virtual bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xDEF9A8", Offset = "0xDEF9A8", VA = "0xDEF9A8", Slot = "6")]
	public virtual void OnComplete()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xDEF9AC", Offset = "0xDEF9AC", VA = "0xDEF9AC")]
	public bool WasFadedIn(Image FadeImage, float duration)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xDEFA94", Offset = "0xDEFA94", VA = "0xDEFA94")]
	public bool WasFadedOut(Image FadeImage, float duration)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xDEFB98", Offset = "0xDEFB98", VA = "0xDEFB98")]
	public bool WaitForSeconds(float duration)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xDEB5EC", Offset = "0xDEB5EC", VA = "0xDEB5EC")]
	public NextStepCondition()
	{
	}
}
[Token(Token = "0x20001AD")]
public class StageManager : MonoBehaviour
{
	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<NextStepCondition> tutorialSteps;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int index;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isUpdate;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool wasFinish;

	[Token(Token = "0x1400002A")]
	protected event Action OnFinish
	{
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x8F1F6C", Offset = "0x8F1F6C", VA = "0x8F1F6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F410", Offset = "0x71F410")]
		add
		{
		}
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x8F2010", Offset = "0x8F2010", VA = "0x8F2010")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F420", Offset = "0x71F420")]
		remove
		{
		}
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x8F20B4", Offset = "0x8F20B4", VA = "0x8F20B4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x8F21E8", Offset = "0x8F21E8", VA = "0x8F21E8")]
	protected void NextStep()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x8F2360", Offset = "0x8F2360", VA = "0x8F2360")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x8F232C", Offset = "0x8F232C", VA = "0x8F232C")]
	private void Finish()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x8F2438", Offset = "0x8F2438", VA = "0x8F2438")]
	public StageManager()
	{
	}
}
[Token(Token = "0x20001AE")]
public class Ver1Stage1Manager : StageManager
{
	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MAX_DUMPING_SOIL;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MAX_MOVE_SOLID;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject arrow;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject bucket;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject bucketCenter;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject yumbo;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71998C", Offset = "0x71998C")]
	public GameObject dumperColliderGO;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject soilOnBucket;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject truckSoil;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject truck;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject diggingArea;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PhysicsDeformer deformScript;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7199C4", Offset = "0x7199C4")]
	public GameObject stoneArea;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] stones;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] cricles;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject moveStoneArea;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public int numberSuccessStep;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public bool isDiggingFail;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	[HideInInspector]
	public bool isComplete;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	[HideInInspector]
	public bool isFinished;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	[HideInInspector]
	public bool isEnableAlert;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public bool isStoneInBucket;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public GameObject mainStone;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float timeWaitting;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool truckActive;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Excavator exScript;

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xD5D7FC", Offset = "0xD5D7FC", VA = "0xD5D7FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xD5D874", Offset = "0xD5D874", VA = "0xD5D874")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xD5D908", Offset = "0xD5D908", VA = "0xD5D908")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xD5DB78", Offset = "0xD5DB78", VA = "0xD5DB78")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xD5DD10", Offset = "0xD5DD10", VA = "0xD5DD10")]
	private void CheckDiggingFail()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xD5D89C", Offset = "0xD5D89C", VA = "0xD5D89C")]
	private void CacheObjects()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xD5DE3C", Offset = "0xD5DE3C", VA = "0xD5DE3C")]
	private void CheckTruckActive()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xD5DFC0", Offset = "0xD5DFC0", VA = "0xD5DFC0")]
	private void ShowFinishNotify()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xD5DBB0", Offset = "0xD5DBB0", VA = "0xD5DBB0")]
	private void CheckYumboFalling()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xD5E0E8", Offset = "0xD5E0E8", VA = "0xD5E0E8")]
	private void SetFinishBoxTitle()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xD5E180", Offset = "0xD5E180", VA = "0xD5E180")]
	public Ver1Stage1Manager()
	{
	}
}
[Token(Token = "0x20001AF")]
public class Ver1Stage2Manager : MonoBehaviour
{
	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PERCENT_COMPLETE;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject yumbo;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject target;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject arrow;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GeneratePlaneMesh planeMeshScript;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool isChangeText;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[HideInInspector]
	public bool isCheckStage2Option;

	[Token(Token = "0x4000B75")]
	private const int TimeUpdate = 50;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startTime;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float percent_process;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeWaitting;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int index;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int percent;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int countColl;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Excavator exScript;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshFilter meshTerrain;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Matrix4x4 localToWorld;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 normalVec;

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xD60AFC", Offset = "0xD60AFC", VA = "0xD60AFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xD60C34", Offset = "0xD60C34", VA = "0xD60C34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xD60F88", Offset = "0xD60F88", VA = "0xD60F88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xD61734", Offset = "0xD61734", VA = "0xD61734")]
	private bool checkSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xD6130C", Offset = "0xD6130C", VA = "0xD6130C")]
	private void LookAtDiggingArea()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xD60D28", Offset = "0xD60D28", VA = "0xD60D28")]
	private void CalculateNormalVector()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xD614C4", Offset = "0xD614C4", VA = "0xD614C4")]
	private void CalculatePercentProcess()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xD617F8", Offset = "0xD617F8", VA = "0xD617F8")]
	private void ShowFinishNotify()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xD611D0", Offset = "0xD611D0", VA = "0xD611D0")]
	private void CheckYumboFalling()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xD618F0", Offset = "0xD618F0", VA = "0xD618F0")]
	private void SetFinishBoxTitle()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xD61998", Offset = "0xD61998", VA = "0xD61998")]
	public Ver1Stage2Manager()
	{
	}
}
[Token(Token = "0x20001B0")]
public class Ver1Stage4Manager : StageManager
{
	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MAX_PICK_OBJECT;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string objName;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string guideLocalizeKey;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string infoLocalizeKey;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string numberDropTitle;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject volvo;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject planeTruck;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isUpdate;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float alertTime;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeWaitting;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Excavator exScript;

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xD69720", Offset = "0xD69720", VA = "0xD69720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xD69798", Offset = "0xD69798", VA = "0xD69798")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xD69804", Offset = "0xD69804", VA = "0xD69804")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xD698EC", Offset = "0xD698EC", VA = "0xD698EC")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xD69A9C", Offset = "0xD69A9C", VA = "0xD69A9C")]
	private void ShowFinishNotify()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xD69914", Offset = "0xD69914", VA = "0xD69914")]
	private void CheckYumboFalling()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xD69BE0", Offset = "0xD69BE0", VA = "0xD69BE0")]
	private void SetFinishBoxTitle()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xD69C68", Offset = "0xD69C68", VA = "0xD69C68")]
	public Ver1Stage4Manager()
	{
	}
}
[Token(Token = "0x20001B1")]
public class Ver2Stage1Manager : StageManager
{
	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject yumbo;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject goal1;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject goal12;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject goal2;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject goal3;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject goal4;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject goal5;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject target;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject questionBoard;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool isFinished;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[HideInInspector]
	public bool isComplete;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int percent;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int total;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timeWaitting;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ItselfSelection scriptCheckTargetSection;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Excavator exScript;

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xD6A3E0", Offset = "0xD6A3E0", VA = "0xD6A3E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xD6A458", Offset = "0xD6A458", VA = "0xD6A458")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xD6A504", Offset = "0xD6A504", VA = "0xD6A504")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xD6A7C0", Offset = "0xD6A7C0", VA = "0xD6A7C0")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xD6A980", Offset = "0xD6A980", VA = "0xD6A980")]
	private void updatePercentNumber()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xD6AA58", Offset = "0xD6AA58", VA = "0xD6AA58")]
	public void UpdatePercent(int _val)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xD6AA30", Offset = "0xD6AA30", VA = "0xD6AA30")]
	private void CalculatePercent()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xD6A480", Offset = "0xD6A480", VA = "0xD6A480")]
	private void CacheObjects()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xD6AA68", Offset = "0xD6AA68", VA = "0xD6AA68")]
	private void ShowFinishNotify()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xD6A7F0", Offset = "0xD6A7F0", VA = "0xD6A7F0")]
	private void CheckYumboFalling()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xD6ABBC", Offset = "0xD6ABBC", VA = "0xD6ABBC")]
	private void SetFinishBoxTitle()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xD6AC44", Offset = "0xD6AC44", VA = "0xD6AC44")]
	public Ver2Stage1Manager()
	{
	}
}
[Token(Token = "0x20001B2")]
public class Ver2Stage2Manager : StageManager
{
	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MAX_DUMPING_SOIL;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject yumbo;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject dirtPile;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject truck;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject truckSoil;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject bucketSoil;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject dumperColliderGO;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject bucket;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject questionBoard;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CheckDiggingArea checkDiggingAreaScript;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PhysicsDeformer physicsDeformerScript;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float successTime;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float timeShowSuccess;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timeWaitting;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isUpdate;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool isFinish;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	private bool isPlusNumberSuccess;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
	private bool isCompleteStep;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int workEvaluation;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int numberSuccess;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int totalWarningArea;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Excavator exScript;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ItselfSelection targetScript;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private QuestionManager questionManagerScript;

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xD6B7B4", Offset = "0xD6B7B4", VA = "0xD6B7B4")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xD6B89C", Offset = "0xD6B89C", VA = "0xD6B89C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xD6BA60", Offset = "0xD6BA60", VA = "0xD6BA60")]
	private new void NextStep()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xD6BD1C", Offset = "0xD6BD1C", VA = "0xD6BD1C")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xD6C098", Offset = "0xD6C098", VA = "0xD6C098")]
	private void CalculateWorkEvaluation()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xD6C138", Offset = "0xD6C138", VA = "0xD6C138")]
	private float OneScoreCalculation()
	{
		return default(float);
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xD6BE24", Offset = "0xD6BE24", VA = "0xD6BE24")]
	private void CheckNumberStepSuccess()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xD6C1C4", Offset = "0xD6C1C4", VA = "0xD6C1C4")]
	private void ShowCompleteStepDialog()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xD6B7DC", Offset = "0xD6B7DC", VA = "0xD6B7DC")]
	private void CacheObjects()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xD6BBD4", Offset = "0xD6BBD4", VA = "0xD6BBD4")]
	private void ShowFinishNotify()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xD6BF18", Offset = "0xD6BF18", VA = "0xD6BF18")]
	private void CheckYumboFalling()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xD6C2AC", Offset = "0xD6C2AC", VA = "0xD6C2AC")]
	private void SetFinishBoxTitle()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xD6C334", Offset = "0xD6C334", VA = "0xD6C334")]
	public Ver2Stage2Manager()
	{
	}
}
[Token(Token = "0x20001B3")]
public class General_NoVR_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Button SettingBtn;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Button InfoBtn;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Button HomeBtn;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Button BackBtn;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xC01A90", Offset = "0xC01A90", VA = "0xC01A90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xC01BA0", Offset = "0xC01BA0", VA = "0xC01BA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xC020D8", Offset = "0xC020D8", VA = "0xC020D8")]
	public General_NoVR_InputSim()
	{
	}
}
[Token(Token = "0x20001B4")]
public class General_VR_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xC020E0", Offset = "0xC020E0", VA = "0xC020E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xC021A4", Offset = "0xC021A4", VA = "0xC021A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xC02808", Offset = "0xC02808", VA = "0xC02808")]
	public General_VR_InputSim()
	{
	}
}
[Token(Token = "0x20001B5")]
public class InputListener : MonoBehaviour
{
	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string inputStringA;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string inputStringS;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string inputStringD;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string inputStringW;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string inputStringF;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string inputStringR;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string inputStringH;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string inputStringY;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string inputStringJ;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string inputStringK;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string inputStringL;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string inputStringI;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string path;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool A;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool S;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool D;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	private bool W;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool F;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool R;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool H;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
	private bool Y;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool J;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool K;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool L;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool I;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject loading;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject cam;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string inputStringCam;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool getCamRote;

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xB41B64", Offset = "0xB41B64", VA = "0xB41B64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xB41BD4", Offset = "0xB41BD4", VA = "0xB41BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xB41FF0", Offset = "0xB41FF0", VA = "0xB41FF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xB43844", Offset = "0xB43844", VA = "0xB43844")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xB43960", Offset = "0xB43960", VA = "0xB43960")]
	private void handleInputString(ref string _input, ref bool _val)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xB43C2C", Offset = "0xB43C2C", VA = "0xB43C2C")]
	public InputListener()
	{
	}
}
[Token(Token = "0x20001B6")]
public class MainMenuOculus14_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject camHolder;

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xC0F5B0", Offset = "0xC0F5B0", VA = "0xC0F5B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xC0F70C", Offset = "0xC0F70C", VA = "0xC0F70C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xC0FBD8", Offset = "0xC0FBD8", VA = "0xC0FBD8")]
	private void Rotate(Vector3 v, float speed)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xC0FD04", Offset = "0xC0FD04", VA = "0xC0FD04")]
	public MainMenuOculus14_InputSim()
	{
	}
}
[Token(Token = "0x20001B7")]
public class MainMenuOculusPlus_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject camHolder;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xC0FD0C", Offset = "0xC0FD0C", VA = "0xC0FD0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xC0FE68", Offset = "0xC0FE68", VA = "0xC0FE68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xC10648", Offset = "0xC10648", VA = "0xC10648")]
	private void Rotate(Vector3 v, float speed)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xC10774", Offset = "0xC10774", VA = "0xC10774")]
	public MainMenuOculusPlus_InputSim()
	{
	}
}
[Token(Token = "0x20001B8")]
public class MainMenu_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject camHolder;

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xC1077C", Offset = "0xC1077C", VA = "0xC1077C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xC108D8", Offset = "0xC108D8", VA = "0xC108D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xC10EF8", Offset = "0xC10EF8", VA = "0xC10EF8")]
	private void Rotate(Vector3 v, float speed)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xC11024", Offset = "0xC11024", VA = "0xC11024")]
	public MainMenu_InputSim()
	{
	}
}
[Token(Token = "0x20001B9")]
public class NoVRMainMenu1vs3_InputSim : MonoBehaviour
{
	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xCFBC88", Offset = "0xCFBC88", VA = "0xCFBC88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xCFBC8C", Offset = "0xCFBC8C", VA = "0xCFBC8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xCFBC90", Offset = "0xCFBC90", VA = "0xCFBC90")]
	public NoVRMainMenu1vs3_InputSim()
	{
	}
}
[Token(Token = "0x20001BA")]
public class NoVRMainMenu_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float t;

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xCFBC98", Offset = "0xCFBC98", VA = "0xCFBC98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xCFBC9C", Offset = "0xCFBC9C", VA = "0xCFBC9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xCFBCD4", Offset = "0xCFBCD4", VA = "0xCFBCD4")]
	public NoVRMainMenu_InputSim()
	{
	}
}
[Token(Token = "0x20001BB")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7138BC", Offset = "0x7138BC")]
public class NoVRTutorial_JIS_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject JISbtn;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject OKbtn;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ControllerVirtualManager VirtualController;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FixedJoystick JoystickLeft;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FixedJoystick JoystickRight;

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xD07654", Offset = "0xD07654", VA = "0xD07654")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xD07744", Offset = "0xD07744", VA = "0xD07744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xD07CC0", Offset = "0xD07CC0", VA = "0xD07CC0")]
	public NoVRTutorial_JIS_InputSim()
	{
	}
}
[Token(Token = "0x20001BC")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7138D0", Offset = "0x7138D0")]
public class NoVRTutorial_Komatsu_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject Komatsubtn;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject OKbtn;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ControllerVirtualManager VirtualController;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FixedJoystick JoystickLeft;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FixedJoystick JoystickRight;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xD07CC8", Offset = "0xD07CC8", VA = "0xD07CC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xD07DB8", Offset = "0xD07DB8", VA = "0xD07DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xD08334", Offset = "0xD08334", VA = "0xD08334")]
	public NoVRTutorial_Komatsu_InputSim()
	{
	}
}
[Token(Token = "0x20001BD")]
public class NoVRVer1Stage1_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xD0833C", Offset = "0xD0833C", VA = "0xD0833C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xD083D8", Offset = "0xD083D8", VA = "0xD083D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xD08CA8", Offset = "0xD08CA8", VA = "0xD08CA8")]
	public NoVRVer1Stage1_InputSim()
	{
	}
}
[Token(Token = "0x20001BE")]
public class NoVRVer1Stage22_InputSim : MonoBehaviour
{
	[Token(Token = "0x20004F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7151B4", Offset = "0x7151B4")]
	private sealed class <WaitClick>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xD0A4E4", Offset = "0xD0A4E4", VA = "0xD0A4E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xD0A54C", Offset = "0xD0A54C", VA = "0xD0A54C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xD08DCC", Offset = "0xD08DCC", VA = "0xD08DCC")]
		[DebuggerHidden]
		public <WaitClick>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xD0A408", Offset = "0xD0A408", VA = "0xD0A408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xD0A40C", Offset = "0xD0A40C", VA = "0xD0A40C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xD0A4EC", Offset = "0xD0A4EC", VA = "0xD0A4EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xD08CB0", Offset = "0xD08CB0", VA = "0xD08CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xD08D4C", Offset = "0xD08D4C", VA = "0xD08D4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F430", Offset = "0x71F430")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xD08DF8", Offset = "0xD08DF8", VA = "0xD08DF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xD0A400", Offset = "0xD0A400", VA = "0xD0A400")]
	public NoVRVer1Stage22_InputSim()
	{
	}
}
[Token(Token = "0x20001BF")]
public class NoVRVer1Stage2_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xD0A554", Offset = "0xD0A554", VA = "0xD0A554")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xD0A5F0", Offset = "0xD0A5F0", VA = "0xD0A5F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xD0B924", Offset = "0xD0B924", VA = "0xD0B924")]
	public NoVRVer1Stage2_InputSim()
	{
	}
}
[Token(Token = "0x20001C0")]
public class NoVRVer1Stage3_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xD0B92C", Offset = "0xD0B92C", VA = "0xD0B92C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xD0B9C8", Offset = "0xD0B9C8", VA = "0xD0B9C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xD0D870", Offset = "0xD0D870", VA = "0xD0D870")]
	public NoVRVer1Stage3_InputSim()
	{
	}
}
[Token(Token = "0x20001C1")]
public class NoVRVer1Stage41_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ver1Stage4Manager v1s4Manager;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo StartManager;

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xD0D878", Offset = "0xD0D878", VA = "0xD0D878")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xD0DAAC", Offset = "0xD0DAAC", VA = "0xD0DAAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xD0E350", Offset = "0xD0E350", VA = "0xD0E350")]
	public NoVRVer1Stage41_InputSim()
	{
	}
}
[Token(Token = "0x20001C2")]
public class NoVRVer1Stage42_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ver1Stage4Manager v1s4Manager;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo StartManager;

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xD0E358", Offset = "0xD0E358", VA = "0xD0E358")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xD0E58C", Offset = "0xD0E58C", VA = "0xD0E58C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xD0ED64", Offset = "0xD0ED64", VA = "0xD0ED64")]
	public NoVRVer1Stage42_InputSim()
	{
	}
}
[Token(Token = "0x20001C3")]
public class NoVRVer1Stage43_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ver1Stage4Manager v1s4Manager;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo StartManager;

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xD0ED6C", Offset = "0xD0ED6C", VA = "0xD0ED6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xD0EFA0", Offset = "0xD0EFA0", VA = "0xD0EFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xD0F49C", Offset = "0xD0F49C", VA = "0xD0F49C")]
	public NoVRVer1Stage43_InputSim()
	{
	}
}
[Token(Token = "0x20001C4")]
public class NoVR_SafetyStage1_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xD0F4A4", Offset = "0xD0F4A4", VA = "0xD0F4A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xD0F540", Offset = "0xD0F540", VA = "0xD0F540")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xD0F9C4", Offset = "0xD0F9C4", VA = "0xD0F9C4")]
	public NoVR_SafetyStage1_InputSim()
	{
	}
}
[Token(Token = "0x20001C5")]
public class NoVR_SafetyStage2_InputSim : MonoBehaviour
{
	[Token(Token = "0x20004F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7151C4", Offset = "0x7151C4")]
	private sealed class <WaitClick>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xD102B8", Offset = "0xD102B8", VA = "0xD102B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xD10320", Offset = "0xD10320", VA = "0xD10320", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xD0FC14", Offset = "0xD0FC14", VA = "0xD0FC14")]
		[DebuggerHidden]
		public <WaitClick>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xD101DC", Offset = "0xD101DC", VA = "0xD101DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xD101E0", Offset = "0xD101E0", VA = "0xD101E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xD102C0", Offset = "0xD102C0", VA = "0xD102C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xD0F9CC", Offset = "0xD0F9CC", VA = "0xD0F9CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xD0FB94", Offset = "0xD0FB94", VA = "0xD0FB94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F494", Offset = "0x71F494")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xD0FC40", Offset = "0xD0FC40", VA = "0xD0FC40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xD101D4", Offset = "0xD101D4", VA = "0xD101D4")]
	public NoVR_SafetyStage2_InputSim()
	{
	}
}
[Token(Token = "0x20001C6")]
public class NoVR_SafetyStage3_InputSim : MonoBehaviour
{
	[Token(Token = "0x20004F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7151D4", Offset = "0x7151D4")]
	private sealed class <WaitClick>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xD1073C", Offset = "0xD1073C", VA = "0xD1073C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0xD107A4", Offset = "0xD107A4", VA = "0xD107A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xD10490", Offset = "0xD10490", VA = "0xD10490")]
		[DebuggerHidden]
		public <WaitClick>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xD10660", Offset = "0xD10660", VA = "0xD10660", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xD10664", Offset = "0xD10664", VA = "0xD10664", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xD10744", Offset = "0xD10744", VA = "0xD10744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xD10328", Offset = "0xD10328", VA = "0xD10328")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xD10410", Offset = "0xD10410", VA = "0xD10410")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F4F8", Offset = "0x71F4F8")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xD104BC", Offset = "0xD104BC", VA = "0xD104BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xD10658", Offset = "0xD10658", VA = "0xD10658")]
	public NoVR_SafetyStage3_InputSim()
	{
	}
}
[Token(Token = "0x20001C7")]
public class NoVR_SafetyStage4_InputSim : MonoBehaviour
{
	[Token(Token = "0x20004F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7151E4", Offset = "0x7151E4")]
	private sealed class <WaitClick>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xD10E7C", Offset = "0xD10E7C", VA = "0xD10E7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xD10EE4", Offset = "0xD10EE4", VA = "0xD10EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xD109F4", Offset = "0xD109F4", VA = "0xD109F4")]
		[DebuggerHidden]
		public <WaitClick>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xD10DA0", Offset = "0xD10DA0", VA = "0xD10DA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xD10DA4", Offset = "0xD10DA4", VA = "0xD10DA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xD10E84", Offset = "0xD10E84", VA = "0xD10E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xD107AC", Offset = "0xD107AC", VA = "0xD107AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xD10974", Offset = "0xD10974", VA = "0xD10974")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F55C", Offset = "0x71F55C")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xD10A20", Offset = "0xD10A20", VA = "0xD10A20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xD10D98", Offset = "0xD10D98", VA = "0xD10D98")]
	public NoVR_SafetyStage4_InputSim()
	{
	}
}
[Token(Token = "0x20001C8")]
public class NoVR_SafetyStage5_InputSim : MonoBehaviour
{
	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7151F4", Offset = "0x7151F4")]
	private sealed class <WaitClick>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xD1147C", Offset = "0xD1147C", VA = "0xD1147C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xD114E4", Offset = "0xD114E4", VA = "0xD114E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xD1107C", Offset = "0xD1107C", VA = "0xD1107C")]
		[DebuggerHidden]
		public <WaitClick>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xD113A0", Offset = "0xD113A0", VA = "0xD113A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xD113A4", Offset = "0xD113A4", VA = "0xD113A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xD11484", Offset = "0xD11484", VA = "0xD11484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xD10EEC", Offset = "0xD10EEC", VA = "0xD10EEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xD10FFC", Offset = "0xD10FFC", VA = "0xD10FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F5C0", Offset = "0x71F5C0")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xD110A8", Offset = "0xD110A8", VA = "0xD110A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xD11398", Offset = "0xD11398", VA = "0xD11398")]
	public NoVR_SafetyStage5_InputSim()
	{
	}
}
[Token(Token = "0x20001C9")]
public class NoVR_SafetyStage6_InputSim : MonoBehaviour
{
	[Token(Token = "0x20004FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715204", Offset = "0x715204")]
	private sealed class <WaitClick>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x1018464", Offset = "0x1018464", VA = "0x1018464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x10184CC", Offset = "0x10184CC", VA = "0x10184CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x101835C", Offset = "0x101835C", VA = "0x101835C")]
		[DebuggerHidden]
		public <WaitClick>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x1018388", Offset = "0x1018388", VA = "0x1018388", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x101838C", Offset = "0x101838C", VA = "0x101838C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x101846C", Offset = "0x101846C", VA = "0x101846C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform cam;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject camHolder;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 offset;

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xD114EC", Offset = "0xD114EC", VA = "0xD114EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xD11808", Offset = "0xD11808", VA = "0xD11808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F624", Offset = "0x71F624")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xD11888", Offset = "0xD11888", VA = "0xD11888")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xD11F38", Offset = "0xD11F38", VA = "0xD11F38")]
	public NoVR_SafetyStage6_InputSim()
	{
	}
}
[Token(Token = "0x20001CA")]
public class NoVR_SafetyStage7_InputSim : MonoBehaviour
{
	[Token(Token = "0x20004FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715214", Offset = "0x715214")]
	private sealed class <WaitClick>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x1018F18", Offset = "0x1018F18", VA = "0x1018F18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x1018F80", Offset = "0x1018F80", VA = "0x1018F80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x1018870", Offset = "0x1018870", VA = "0x1018870")]
		[DebuggerHidden]
		public <WaitClick>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x1018E3C", Offset = "0x1018E3C", VA = "0x1018E3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x1018E40", Offset = "0x1018E40", VA = "0x1018E40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x1018F20", Offset = "0x1018F20", VA = "0x1018F20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform cam;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject camHolder;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 offset;

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x10184D4", Offset = "0x10184D4", VA = "0x10184D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x10187F0", Offset = "0x10187F0", VA = "0x10187F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F688", Offset = "0x71F688")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x101889C", Offset = "0x101889C", VA = "0x101889C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1018DD8", Offset = "0x1018DD8", VA = "0x1018DD8")]
	public NoVR_SafetyStage7_InputSim()
	{
	}
}
[Token(Token = "0x20001CB")]
public class NoVR_SafetyStage8_InputSim : MonoBehaviour
{
	[Token(Token = "0x20004FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715224", Offset = "0x715224")]
	private sealed class <WaitClick>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x10198E0", Offset = "0x10198E0", VA = "0x10198E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x1019948", Offset = "0x1019948", VA = "0x1019948", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x1019324", Offset = "0x1019324", VA = "0x1019324")]
		[DebuggerHidden]
		public <WaitClick>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x1019804", Offset = "0x1019804", VA = "0x1019804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x1019808", Offset = "0x1019808", VA = "0x1019808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x10198E8", Offset = "0x10198E8", VA = "0x10198E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform cam;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject camHolder;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 offset;

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1018F88", Offset = "0x1018F88", VA = "0x1018F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x10192A4", Offset = "0x10192A4", VA = "0x10192A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F6EC", Offset = "0x71F6EC")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1019350", Offset = "0x1019350", VA = "0x1019350")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x10197A0", Offset = "0x10197A0", VA = "0x10197A0")]
	public NoVR_SafetyStage8_InputSim()
	{
	}
}
[Token(Token = "0x20001CC")]
public class NoVR_SafetyStage9_InputSim : MonoBehaviour
{
	[Token(Token = "0x20004FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715234", Offset = "0x715234")]
	private sealed class <WaitClick>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x101A34C", Offset = "0x101A34C", VA = "0x101A34C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x101A3B4", Offset = "0x101A3B4", VA = "0x101A3B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x1019CC4", Offset = "0x1019CC4", VA = "0x1019CC4")]
		[DebuggerHidden]
		public <WaitClick>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x101A270", Offset = "0x101A270", VA = "0x101A270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x101A274", Offset = "0x101A274", VA = "0x101A274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x101A354", Offset = "0x101A354", VA = "0x101A354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform cam;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject camHolder;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 offset;

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1019950", Offset = "0x1019950", VA = "0x1019950")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1019C44", Offset = "0x1019C44", VA = "0x1019C44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F750", Offset = "0x71F750")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1019CF0", Offset = "0x1019CF0", VA = "0x1019CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x101A20C", Offset = "0x101A20C", VA = "0x101A20C")]
	public NoVR_SafetyStage9_InputSim()
	{
	}
}
[Token(Token = "0x20001CD")]
public class SafetyStage1_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x8E6258", Offset = "0x8E6258", VA = "0x8E6258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x8E631C", Offset = "0x8E631C", VA = "0x8E631C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x8E64A0", Offset = "0x8E64A0", VA = "0x8E64A0")]
	public SafetyStage1_InputSim()
	{
	}
}
[Token(Token = "0x20001CE")]
public class SafetyStage1_InputSim1_Test : MonoBehaviour
{
	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cam;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject camHolder;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 offset;

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x8E64A8", Offset = "0x8E64A8", VA = "0x8E64A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x8E6694", Offset = "0x8E6694", VA = "0x8E6694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x8E6808", Offset = "0x8E6808", VA = "0x8E6808")]
	public SafetyStage1_InputSim1_Test()
	{
	}
}
[Token(Token = "0x20001CF")]
public class SafetyStage2_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x8E686C", Offset = "0x8E686C", VA = "0x8E686C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x8E6930", Offset = "0x8E6930", VA = "0x8E6930")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x8E6D98", Offset = "0x8E6D98", VA = "0x8E6D98")]
	public SafetyStage2_InputSim()
	{
	}
}
[Token(Token = "0x20001D0")]
public class SafetyStage3_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x8E6DA0", Offset = "0x8E6DA0", VA = "0x8E6DA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x8E6E64", Offset = "0x8E6E64", VA = "0x8E6E64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x8E6FBC", Offset = "0x8E6FBC", VA = "0x8E6FBC")]
	public SafetyStage3_InputSim()
	{
	}
}
[Token(Token = "0x20001D1")]
public class SafetyStage4_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x8E6FC4", Offset = "0x8E6FC4", VA = "0x8E6FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x8E7088", Offset = "0x8E7088", VA = "0x8E7088")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x8E727C", Offset = "0x8E727C", VA = "0x8E727C")]
	public SafetyStage4_InputSim()
	{
	}
}
[Token(Token = "0x20001D2")]
public class SafetyStage5_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x8E7284", Offset = "0x8E7284", VA = "0x8E7284")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x8E7348", Offset = "0x8E7348", VA = "0x8E7348")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x8E74F4", Offset = "0x8E74F4", VA = "0x8E74F4")]
	public SafetyStage5_InputSim()
	{
	}
}
[Token(Token = "0x20001D3")]
public class SafetyStage6_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x8E74FC", Offset = "0x8E74FC", VA = "0x8E74FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x8E75C0", Offset = "0x8E75C0", VA = "0x8E75C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x8E7944", Offset = "0x8E7944", VA = "0x8E7944")]
	public SafetyStage6_InputSim()
	{
	}
}
[Token(Token = "0x20001D4")]
public class SafetyStage7_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x8E794C", Offset = "0x8E794C", VA = "0x8E794C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x8E7A10", Offset = "0x8E7A10", VA = "0x8E7A10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x8E7CE0", Offset = "0x8E7CE0", VA = "0x8E7CE0")]
	public SafetyStage7_InputSim()
	{
	}
}
[Token(Token = "0x20001D5")]
public class SafetyStage8_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x8E7CE8", Offset = "0x8E7CE8", VA = "0x8E7CE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x8E7DAC", Offset = "0x8E7DAC", VA = "0x8E7DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x8E7FF4", Offset = "0x8E7FF4", VA = "0x8E7FF4")]
	public SafetyStage8_InputSim()
	{
	}
}
[Token(Token = "0x20001D6")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7138E4", Offset = "0x7138E4")]
public class SafetyStage9_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x8E7FFC", Offset = "0x8E7FFC", VA = "0x8E7FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x8E80C0", Offset = "0x8E80C0", VA = "0x8E80C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x8E82B4", Offset = "0x8E82B4", VA = "0x8E82B4")]
	public SafetyStage9_InputSim()
	{
	}
}
[Token(Token = "0x20001D7")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x7138F8", Offset = "0x7138F8")]
public class Tutorial_JIS_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x8FD9C4", Offset = "0x8FD9C4", VA = "0x8FD9C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x8FDA88", Offset = "0x8FDA88", VA = "0x8FDA88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x8FDF08", Offset = "0x8FDF08", VA = "0x8FDF08")]
	public Tutorial_JIS_InputSim()
	{
	}
}
[Token(Token = "0x20001D8")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x71390C", Offset = "0x71390C")]
public class Tutorial_Komatsu_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cam;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform camHolder;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Excavator exScript;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x8FDF10", Offset = "0x8FDF10", VA = "0x8FDF10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x8FDFD4", Offset = "0x8FDFD4", VA = "0x8FDFD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x8FE454", Offset = "0x8FE454", VA = "0x8FE454")]
	public Tutorial_Komatsu_InputSim()
	{
	}
}
[Token(Token = "0x20001D9")]
public class Ver1Stage1_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xD5E19C", Offset = "0xD5E19C", VA = "0xD5E19C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xD5E238", Offset = "0xD5E238", VA = "0xD5E238")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xD5E980", Offset = "0xD5E980", VA = "0xD5E980")]
	public Ver1Stage1_InputSim()
	{
	}
}
[Token(Token = "0x20001DA")]
public class Ver1Stage22_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xD5E988", Offset = "0xD5E988", VA = "0xD5E988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xD5EA24", Offset = "0xD5EA24", VA = "0xD5EA24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xD60AF4", Offset = "0xD60AF4", VA = "0xD60AF4")]
	public Ver1Stage22_InputSim()
	{
	}
}
[Token(Token = "0x20001DB")]
public class Ver1Stage2_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xD619A8", Offset = "0xD619A8", VA = "0xD619A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xD61A44", Offset = "0xD61A44", VA = "0xD61A44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xD62ACC", Offset = "0xD62ACC", VA = "0xD62ACC")]
	public Ver1Stage2_InputSim()
	{
	}
}
[Token(Token = "0x20001DC")]
public class Ver1Stage3_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xD65E48", Offset = "0xD65E48", VA = "0xD65E48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xD65EE4", Offset = "0xD65EE4", VA = "0xD65EE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xD67D8C", Offset = "0xD67D8C", VA = "0xD67D8C")]
	public Ver1Stage3_InputSim()
	{
	}
}
[Token(Token = "0x20001DD")]
public class Ver1Stage41_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ver1Stage4Manager v1s4Manager;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo StartManager;

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xD67D94", Offset = "0xD67D94", VA = "0xD67D94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xD67FC8", Offset = "0xD67FC8", VA = "0xD67FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xD6886C", Offset = "0xD6886C", VA = "0xD6886C")]
	public Ver1Stage41_InputSim()
	{
	}
}
[Token(Token = "0x20001DE")]
public class Ver1Stage42_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ver1Stage4Manager v1s4Manager;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo StartManager;

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xD68874", Offset = "0xD68874", VA = "0xD68874")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xD68AA8", Offset = "0xD68AA8", VA = "0xD68AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xD68FE0", Offset = "0xD68FE0", VA = "0xD68FE0")]
	public Ver1Stage42_InputSim()
	{
	}
}
[Token(Token = "0x20001DF")]
public class Ver1Stage43_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ver1Stage4Manager v1s4Manager;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo StartManager;

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xD68FE8", Offset = "0xD68FE8", VA = "0xD68FE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xD6921C", Offset = "0xD6921C", VA = "0xD6921C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xD69718", Offset = "0xD69718", VA = "0xD69718")]
	public Ver1Stage43_InputSim()
	{
	}
}
[Token(Token = "0x20001E0")]
public class Ver2Stage1_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cam;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform camHolder;

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xD6AC4C", Offset = "0xD6AC4C", VA = "0xD6AC4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xD6AD10", Offset = "0xD6AD10", VA = "0xD6AD10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xD6B7A4", Offset = "0xD6B7A4", VA = "0xD6B7A4")]
	public Ver2Stage1_InputSim()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Ver2Stage2_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cam;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform camHolder;

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xD6C34C", Offset = "0xD6C34C", VA = "0xD6C34C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xD6C410", Offset = "0xD6C410", VA = "0xD6C410")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xD6CF68", Offset = "0xD6CF68", VA = "0xD6CF68")]
	public Ver2Stage2_InputSim()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xD6CE3C", Offset = "0xD6CE3C", VA = "0xD6CE3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F7B4", Offset = "0x71F7B4")]
	private void <Update>g__Rotate|6_0(Vector3 v, float speed)
	{
	}
}
[Token(Token = "0x20001E2")]
public class Ver2Stage3_InputSim : MonoBehaviour
{
	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cam;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform camHolder;

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xD6D114", Offset = "0xD6D114", VA = "0xD6D114")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xD6D1D8", Offset = "0xD6D1D8", VA = "0xD6D1D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xD6DAD8", Offset = "0xD6DAD8", VA = "0xD6DAD8")]
	public Ver2Stage3_InputSim()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xD6D9AC", Offset = "0xD6D9AC", VA = "0xD6D9AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F7C4", Offset = "0x71F7C4")]
	private void <Update>g__Rotate|6_0(Vector3 v, float speed)
	{
	}
}
[Token(Token = "0x20001E3")]
public class testInputSim : MonoBehaviour
{
	[Token(Token = "0x20004FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715244", Offset = "0x715244")]
	private sealed class <WaitClick>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeWating;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x170002CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x15CE440", Offset = "0x15CE440", VA = "0x15CE440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x15CE4A8", Offset = "0x15CE4A8", VA = "0x15CE4A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x15CE16C", Offset = "0x15CE16C", VA = "0x15CE16C")]
		[DebuggerHidden]
		public <WaitClick>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x15CE364", Offset = "0x15CE364", VA = "0x15CE364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x15CE368", Offset = "0x15CE368", VA = "0x15CE368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x15CE448", Offset = "0x15CE448", VA = "0x15CE448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double t;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Excavator exScript;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject NoVRHumanPlayer;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HumanPlayerControl humanScript;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MethodInfo UpdateMotionState;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform cam;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject camHolder;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 offset;

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x15CDEFC", Offset = "0x15CDEFC", VA = "0x15CDEFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x15CE0EC", Offset = "0x15CE0EC", VA = "0x15CE0EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F7D4", Offset = "0x71F7D4")]
	private IEnumerator WaitClick(string path, float timeWating)
	{
		return null;
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x15CE198", Offset = "0x15CE198", VA = "0x15CE198")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x15CE300", Offset = "0x15CE300", VA = "0x15CE300")]
	public testInputSim()
	{
	}
}
[Token(Token = "0x20001E4")]
public class ChoiceViewMode : MonoBehaviour
{
	[Token(Token = "0x2000500")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715254", Offset = "0x715254")]
	private sealed class <SwitchToVR>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x920C5C", Offset = "0x920C5C", VA = "0x920C5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x920CC4", Offset = "0x920CC4", VA = "0x920CC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x9208C8", Offset = "0x9208C8", VA = "0x9208C8")]
		[DebuggerHidden]
		public <SwitchToVR>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x920B98", Offset = "0x920B98", VA = "0x920B98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x920B9C", Offset = "0x920B9C", VA = "0x920B9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x920C64", Offset = "0x920C64", VA = "0x920C64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000501")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715264", Offset = "0x715264")]
	private sealed class <SwitchTo2D>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChoiceViewMode <>4__this;

		[Token(Token = "0x170002D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x920B28", Offset = "0x920B28", VA = "0x920B28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x920B90", Offset = "0x920B90", VA = "0x920B90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x9208F4", Offset = "0x9208F4", VA = "0x9208F4")]
		[DebuggerHidden]
		public <SwitchTo2D>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x920A8C", Offset = "0x920A8C", VA = "0x920A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x920A90", Offset = "0x920A90", VA = "0x920A90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x920B30", Offset = "0x920B30", VA = "0x920B30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text txt;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x9206FC", Offset = "0x9206FC", VA = "0x9206FC")]
	public void ClickToSwitchVR()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x9207D8", Offset = "0x9207D8", VA = "0x9207D8")]
	public void ClickToSwitch2D()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x920778", Offset = "0x920778", VA = "0x920778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F838", Offset = "0x71F838")]
	private IEnumerator SwitchToVR()
	{
		return null;
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x920858", Offset = "0x920858", VA = "0x920858")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F89C", Offset = "0x71F89C")]
	private IEnumerator SwitchTo2D()
	{
		return null;
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x920920", Offset = "0x920920", VA = "0x920920")]
	private void ResetCameras()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x920A84", Offset = "0x920A84", VA = "0x920A84")]
	public ChoiceViewMode()
	{
	}
}
[Token(Token = "0x20001E5")]
public class FixPosAnimationCharactor : MonoBehaviour
{
	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fixPosY;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anim;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 firstPos;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float localTime;

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xBFC464", Offset = "0xBFC464", VA = "0xBFC464")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xBFC4EC", Offset = "0xBFC4EC", VA = "0xBFC4EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xBFC620", Offset = "0xBFC620", VA = "0xBFC620")]
	public FixPosAnimationCharactor()
	{
	}
}
[Token(Token = "0x20001E6")]
public class RefactorManager : MonoBehaviour
{
	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x94A2D8", Offset = "0x94A2D8", VA = "0x94A2D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x94A2DC", Offset = "0x94A2DC", VA = "0x94A2DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x94A2E0", Offset = "0x94A2E0", VA = "0x94A2E0")]
	public RefactorManager()
	{
	}
}
[Token(Token = "0x20001E7")]
public class WalkMana : MonoBehaviour
{
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float localTime;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xD6E11C", Offset = "0xD6E11C", VA = "0xD6E11C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xD6E174", Offset = "0xD6E174", VA = "0xD6E174")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xD6E210", Offset = "0xD6E210", VA = "0xD6E210")]
	public WalkMana()
	{
	}
}
[Token(Token = "0x20001E8")]
public class lookat : MonoBehaviour
{
	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x111FA78", Offset = "0x111FA78", VA = "0x111FA78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x111FAC4", Offset = "0x111FAC4", VA = "0x111FAC4")]
	public lookat()
	{
	}
}
[Token(Token = "0x20001E9")]
public class move : MonoBehaviour
{
	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x111FACC", Offset = "0x111FACC", VA = "0x111FACC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x111FAD0", Offset = "0x111FAD0", VA = "0x111FAD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x111FBA4", Offset = "0x111FBA4", VA = "0x111FBA4")]
	public move()
	{
	}
}
[Token(Token = "0x20001EA")]
public class SetPatternTutorial : MonoBehaviour
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainCamera;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRTutorialManager TutorialManager;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Excavator exScript;

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x8E8DFC", Offset = "0x8E8DFC", VA = "0x8E8DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x8E8E90", Offset = "0x8E8E90", VA = "0x8E8E90")]
	public void ExitBoxTutorial()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x8E8F60", Offset = "0x8E8F60", VA = "0x8E8F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x8E8F64", Offset = "0x8E8F64", VA = "0x8E8F64")]
	public SetPatternTutorial()
	{
	}
}
[Token(Token = "0x20001EB")]
public class SpecifiedRectabgleRange : MonoBehaviour
{
	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject pointOne;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject pointTwo;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool basePointZ;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x8F1C34", Offset = "0x8F1C34", VA = "0x8F1C34")]
	public static void PointInit()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x8F1C90", Offset = "0x8F1C90", VA = "0x8F1C90")]
	public static bool CheckInTheRectangularRange(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x8F1E18", Offset = "0x8F1E18", VA = "0x8F1E18")]
	public static bool PointSet()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x8F1F64", Offset = "0x8F1F64", VA = "0x8F1F64")]
	public SpecifiedRectabgleRange()
	{
	}
}
[Token(Token = "0x20001EC")]
public class TemporarilyDisabled : MonoBehaviour
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float stopTime;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BoxCollider[] boxColliders;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SphereCollider[] sphereColliders;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CapsuleCollider[] capsuleColliders;

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x8F8C30", Offset = "0x8F8C30", VA = "0x8F8C30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x8F8C94", Offset = "0x8F8C94", VA = "0x8F8C94")]
	private void AllPreasenceConversion(bool validlnvalid)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x8F8DB8", Offset = "0x8F8DB8", VA = "0x8F8DB8")]
	private void Activatio()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x8F8DC0", Offset = "0x8F8DC0", VA = "0x8F8DC0")]
	public TemporarilyDisabled()
	{
	}
}
[Token(Token = "0x20001ED")]
public class CameraLocationControl : MonoBehaviour
{
	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject frontLocal;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftLocal;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rightLocal;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject behindLocal;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject mainCamera;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Excavator exScript;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isGoOut;

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x91922C", Offset = "0x91922C", VA = "0x91922C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x91929C", Offset = "0x91929C", VA = "0x91929C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x919350", Offset = "0x919350", VA = "0x919350")]
	public void ChangeCameraLocation(string name)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x9192A0", Offset = "0x9192A0", VA = "0x9192A0")]
	public void GotoCabin()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x919668", Offset = "0x919668", VA = "0x919668")]
	public void ChangeCanGoing(bool _value)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x919638", Offset = "0x919638", VA = "0x919638")]
	public void ChangeCanGoingBack(bool _value)
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x919688", Offset = "0x919688", VA = "0x919688")]
	public void CloseBox()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x9196EC", Offset = "0x9196EC", VA = "0x9196EC")]
	public CameraLocationControl()
	{
	}
}
[Token(Token = "0x20001EE")]
public class CheckDownBucket : MonoBehaviour
{
	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isDownBucket;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isGotoDown;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[HideInInspector]
	public bool isBoolTankThread;

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x91E29C", Offset = "0x91E29C", VA = "0x91E29C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x91E3A0", Offset = "0x91E3A0", VA = "0x91E3A0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x91E498", Offset = "0x91E498", VA = "0x91E498")]
	public void ChangeIsDownBucket(bool _value)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x91E4A4", Offset = "0x91E4A4", VA = "0x91E4A4")]
	public CheckDownBucket()
	{
	}
}
[Token(Token = "0x20001EF")]
public class CheckGotoGoal1 : MonoBehaviour
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGotoGoal1;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x91E964", Offset = "0x91E964", VA = "0x91E964")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x91E9F0", Offset = "0x91E9F0", VA = "0x91E9F0")]
	public CheckGotoGoal1()
	{
	}
}
[Token(Token = "0x20001F0")]
public class CheckGotoTarget : MonoBehaviour
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGotoTarget;

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x91E9F8", Offset = "0x91E9F8", VA = "0x91E9F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x91EA84", Offset = "0x91EA84", VA = "0x91EA84")]
	public CheckGotoTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F1")]
public class AnswerButton
{
	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DynamicTextName answerName;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject button;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string answerContent;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isCorrectAnswer;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x912048", Offset = "0x912048", VA = "0x912048")]
	public AnswerButton()
	{
	}
}
[Token(Token = "0x20001F2")]
public class QuestionManager : MonoBehaviour
{
	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string questionContent;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnswerButton[] ListAnswer;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject reportTxt;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject submitButton;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject doneButton;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isRightResult;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isSuccess;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject correctAnswer;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject chooseAnswer;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LocalizeTM localizeReportText;

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x94761C", Offset = "0x94761C", VA = "0x94761C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x9476C0", Offset = "0x9476C0", VA = "0x9476C0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x947724", Offset = "0x947724", VA = "0x947724")]
	public void SetUpQuestion()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x9478AC", Offset = "0x9478AC", VA = "0x9478AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x9478B0", Offset = "0x9478B0", VA = "0x9478B0")]
	private void checkAnswer()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x947934", Offset = "0x947934", VA = "0x947934")]
	public void setChooseAnswer(GameObject _val)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x94793C", Offset = "0x94793C", VA = "0x94793C")]
	public void changeAnswerCollor()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x947B54", Offset = "0x947B54", VA = "0x947B54")]
	public void SubmitAnswer()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x947F00", Offset = "0x947F00", VA = "0x947F00")]
	public void DisableAnswer()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x947FBC", Offset = "0x947FBC", VA = "0x947FBC")]
	public void SubmitDone()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x947FC8", Offset = "0x947FC8", VA = "0x947FC8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x94806C", Offset = "0x94806C", VA = "0x94806C")]
	public QuestionManager()
	{
	}
}
[Token(Token = "0x20001F3")]
public class SetContraintDrive : MonoBehaviour
{
	[Token(Token = "0x2000502")]
	public enum PositionThread
	{
		[Token(Token = "0x4001E22")]
		LeftBack,
		[Token(Token = "0x4001E23")]
		LeftForward,
		[Token(Token = "0x4001E24")]
		RightBack,
		[Token(Token = "0x4001E25")]
		RightForward
	}

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Excavator exScript;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PositionThread positionThread;

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x8E84E8", Offset = "0x8E84E8", VA = "0x8E84E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x8E8558", Offset = "0x8E8558", VA = "0x8E8558")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x8E8674", Offset = "0x8E8674", VA = "0x8E8674")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x8E85F4", Offset = "0x8E85F4", VA = "0x8E85F4")]
	private void SetContraint(bool _canDrive)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x8E8710", Offset = "0x8E8710", VA = "0x8E8710")]
	public SetContraintDrive()
	{
	}
}
[Token(Token = "0x20001F4")]
public class DownBucket : NextStepCondition
{
	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject vovlo;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject goal2;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CheckDownBucket scriptDownBucket;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Excavator exScript;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Ver2Stage1Manager stage1Controler;

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xBF06E8", Offset = "0xBF06E8", VA = "0xBF06E8")]
	public DownBucket(GameObject _vovlo, GameObject _target, Ver2Stage1Manager _stageControl)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xBF0728", Offset = "0xBF0728", VA = "0xBF0728", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xBF0744", Offset = "0xBF0744", VA = "0xBF0744", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xBF07FC", Offset = "0xBF07FC", VA = "0xBF07FC", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x20001F5")]
public class GoToDown : NextStepCondition
{
	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject vovlo;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject goal2;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject goal5;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CheckDownBucket goal2Script;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CheckDownBucket goal5Script;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Excavator exScript;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ver2Stage1Manager stage1Controler;

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xC02C40", Offset = "0xC02C40", VA = "0xC02C40")]
	public GoToDown(GameObject _vovlo, GameObject _targetForwardThread, GameObject _targetTankThread, Ver2Stage1Manager _stageControl)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xC02C90", Offset = "0xC02C90", VA = "0xC02C90", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xC02CCC", Offset = "0xC02CCC", VA = "0xC02CCC", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0xC02D9C", Offset = "0xC02D9C", VA = "0xC02D9C", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x20001F6")]
public class GoToFoward : NextStepCondition
{
	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject vovlo;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject goal1;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CheckGotoGoal1 scriptGoal1;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Excavator exScript;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Ver2Stage1Manager stage1Controler;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool addPercent;

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0xC02DE0", Offset = "0xC02DE0", VA = "0xC02DE0")]
	public GoToFoward(GameObject _vovlo, GameObject _target, Ver2Stage1Manager _stageControl)
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0xC02E20", Offset = "0xC02E20", VA = "0xC02E20", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xC02E3C", Offset = "0xC02E3C", VA = "0xC02E3C", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xC02F0C", Offset = "0xC02F0C", VA = "0xC02F0C", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x20001F7")]
public class GotoTarget : NextStepCondition
{
	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject target;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CheckGotoTarget scriptDownBucket;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ver2Stage1Manager stage1Controler;

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xAFE328", Offset = "0xAFE328", VA = "0xAFE328")]
	public GotoTarget(GameObject _target, Ver2Stage1Manager _stageControl)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xAFE364", Offset = "0xAFE364", VA = "0xAFE364", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xAFE380", Offset = "0xAFE380", VA = "0xAFE380", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xAFE418", Offset = "0xAFE418", VA = "0xAFE418", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x20001F8")]
public class PullUpBucket : NextStepCondition
{
	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject vovlo;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject goal2;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CheckDownBucket scriptCheckDownBucket;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Excavator exScript;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Ver2Stage1Manager stage1Controler;

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x94730C", Offset = "0x94730C", VA = "0x94730C")]
	public PullUpBucket(GameObject _vovlo, GameObject _target, Ver2Stage1Manager _stageControl)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x94734C", Offset = "0x94734C", VA = "0x94734C", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x947368", Offset = "0x947368", VA = "0x947368", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x947424", Offset = "0x947424", VA = "0x947424", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x20001F9")]
public class QuestionControl : NextStepCondition
{
	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject questionBroad;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Ver2Stage1Manager stage1Controler;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private QuestionManager questionManagerScript;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool addPercent;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x947464", Offset = "0x947464", VA = "0x947464")]
	public QuestionControl(GameObject _quesBroad, Ver2Stage1Manager _stageControl)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x94749C", Offset = "0x94749C", VA = "0x94749C", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x9474B8", Offset = "0x9474B8", VA = "0x9474B8", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x94757C", Offset = "0x94757C", VA = "0x94757C", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x20001FA")]
public class TurnTowardBucket : NextStepCondition
{
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject vovlo;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject goal3;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CheckDownBucket scriptDownBucket;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Excavator exScript;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Ver2Stage1Manager stage1Controler;

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x8FB9E8", Offset = "0x8FB9E8", VA = "0x8FB9E8")]
	public TurnTowardBucket(GameObject _vovlo, GameObject _target, Ver2Stage1Manager _stageControl)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x8FBA28", Offset = "0x8FBA28", VA = "0x8FBA28", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x8FBA44", Offset = "0x8FBA44", VA = "0x8FBA44", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x8FBAFC", Offset = "0x8FBAFC", VA = "0x8FBAFC", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x20001FB")]
public class InstructorManager : WorkerController
{
	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] raycatTargets;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] instructorTarget;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform yumbo;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform instructor;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform centerCamera;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform viewPointCamera;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool canMove;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool detectHuman;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 movePosition;

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xB44068", Offset = "0xB44068", VA = "0xB44068")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xB44100", Offset = "0xB44100", VA = "0xB44100")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xB44420", Offset = "0xB44420", VA = "0xB44420")]
	private void CheckStopMove()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xB44150", Offset = "0xB44150", VA = "0xB44150")]
	private void NextMovePosition()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xB440DC", Offset = "0xB440DC", VA = "0xB440DC")]
	private bool CheckTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xB445A8", Offset = "0xB445A8", VA = "0xB445A8")]
	public InstructorManager()
	{
	}
}
[Token(Token = "0x20001FC")]
public interface IHumanNav
{
	[Token(Token = "0x6000BCF")]
	void Falling();

	[Token(Token = "0x6000BD0")]
	bool IsActiveObstacle();
}
[Token(Token = "0x20001FD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713920", Offset = "0x713920")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713920", Offset = "0x713920")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713920", Offset = "0x713920")]
public class WorkerController : MonoBehaviour, IHumanNav
{
	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x719AEC", Offset = "0x719AEC")]
	private bool <isStop>k__BackingField;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x719AFC", Offset = "0x719AFC")]
	private bool <isFall>k__BackingField;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x719B0C", Offset = "0x719B0C")]
	private bool <isWork>k__BackingField;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x719B1C", Offset = "0x719B1C")]
	private List<AnimatorControllerParameter> <list_AnimBoolParameter>k__BackingField;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected NavMeshAgent agent;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected NavMeshObstacle obstacle;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected NavMeshPath path;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource source;

	[Token(Token = "0x1700011C")]
	public bool isStop
	{
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xD6EF78", Offset = "0xD6EF78", VA = "0xD6EF78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F900", Offset = "0x71F900")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xD6EF80", Offset = "0xD6EF80", VA = "0xD6EF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F910", Offset = "0x71F910")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public bool isFall
	{
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xD6EF8C", Offset = "0xD6EF8C", VA = "0xD6EF8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F920", Offset = "0x71F920")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xD6EF94", Offset = "0xD6EF94", VA = "0xD6EF94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F930", Offset = "0x71F930")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	public bool isWork
	{
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xD6EFA0", Offset = "0xD6EFA0", VA = "0xD6EFA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F940", Offset = "0x71F940")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xD6EFA8", Offset = "0xD6EFA8", VA = "0xD6EFA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F950", Offset = "0x71F950")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public List<AnimatorControllerParameter> list_AnimBoolParameter
	{
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xD6EFB4", Offset = "0xD6EFB4", VA = "0xD6EFB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F960", Offset = "0x71F960")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xD6EFBC", Offset = "0xD6EFBC", VA = "0xD6EFBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71F970", Offset = "0x71F970")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xD6EFC4", Offset = "0xD6EFC4", VA = "0xD6EFC4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xD6F1AC", Offset = "0xD6F1AC", VA = "0xD6F1AC")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xD6E3C4", Offset = "0xD6E3C4", VA = "0xD6E3C4")]
	public void Move(Vector3 target)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xD6F414", Offset = "0xD6F414", VA = "0xD6F414", Slot = "4")]
	public void Falling()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xD6F540", Offset = "0xD6F540", VA = "0xD6F540")]
	public void Work()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xD6F5BC", Offset = "0xD6F5BC", VA = "0xD6F5BC")]
	public void SittingAndWorking()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xD6EC44", Offset = "0xD6EC44", VA = "0xD6EC44")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xD6F1E8", Offset = "0xD6F1E8", VA = "0xD6F1E8")]
	public void ActiveAnimation(string animParam)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xD6F638", Offset = "0xD6F638", VA = "0xD6F638")]
	public void ActiveIdleAnimation()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xD6F760", Offset = "0xD6F760", VA = "0xD6F760")]
	public void LookAtTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xD6F7C8", Offset = "0xD6F7C8", VA = "0xD6F7C8")]
	public void ChangeWorkerSpeed(float _speed)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xD6E5D8", Offset = "0xD6E5D8", VA = "0xD6E5D8")]
	public bool IsStopMove()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xD6F7E4", Offset = "0xD6F7E4", VA = "0xD6F7E4")]
	public bool IsFinishWork()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xD6F8EC", Offset = "0xD6F8EC", VA = "0xD6F8EC")]
	public bool WasMoveToTarget(Vector3 target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xD6FA10", Offset = "0xD6FA10", VA = "0xD6FA10", Slot = "5")]
	public bool IsActiveObstacle()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xD6FA2C", Offset = "0xD6FA2C", VA = "0xD6FA2C")]
	public bool IsActiveAgent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xD6FA48", Offset = "0xD6FA48", VA = "0xD6FA48")]
	public void SetActiveAgent(bool _isEnable)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xD6F488", Offset = "0xD6F488", VA = "0xD6F488")]
	private void SetSoundHumanFalling()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xD6F384", Offset = "0xD6F384", VA = "0xD6F384")]
	private Vector3 CalculateAgentTarget(Vector3 target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xD6F0D0", Offset = "0xD6F0D0", VA = "0xD6F0D0")]
	private void AddListAnimBoolParameter()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xD6FA68", Offset = "0xD6FA68", VA = "0xD6FA68")]
	public NavMeshPath CalculatePath(Vector3 _target)
	{
		return null;
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xD6FB1C", Offset = "0xD6FB1C", VA = "0xD6FB1C")]
	public WorkerController()
	{
	}
}
[Token(Token = "0x20001FE")]
public class WorkerSetMove : MonoBehaviour
{
	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLoop;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> targets;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isMove;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public List<Vector3> targetVecs;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WorkerController workerScript;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NavMeshObstacle obstacle;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 oldTarget;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 target;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 beginTarget;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int targetCount;

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xD6FC94", Offset = "0xD6FC94", VA = "0xD6FC94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xD6FEDC", Offset = "0xD6FEDC", VA = "0xD6FEDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xD6FF64", Offset = "0xD6FF64", VA = "0xD6FF64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xD701F0", Offset = "0xD701F0", VA = "0xD701F0")]
	public void StopMove()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xD7000C", Offset = "0xD7000C", VA = "0xD7000C")]
	public void SetMove()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xD6FD7C", Offset = "0xD6FD7C", VA = "0xD6FD7C")]
	private void CacheVariable()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xD70208", Offset = "0xD70208", VA = "0xD70208")]
	public WorkerSetMove()
	{
	}
}
[Token(Token = "0x20001FF")]
public class CheckSignalWorker : MonoBehaviour
{
	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Yumbo;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject instructor;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InstructorManager instructorScript;

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x920094", Offset = "0x920094", VA = "0x920094")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x9200F4", Offset = "0x9200F4", VA = "0x9200F4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x920254", Offset = "0x920254", VA = "0x920254")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x920354", Offset = "0x920354", VA = "0x920354")]
	public CheckSignalWorker()
	{
	}
}
[Token(Token = "0x2000200")]
public class HideObject : MonoBehaviour
{
	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectHide;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WorkerController workerScript;

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xDA71A8", Offset = "0xDA71A8", VA = "0xDA71A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xDA7200", Offset = "0xDA7200", VA = "0xDA7200")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xDA723C", Offset = "0xDA723C", VA = "0xDA723C")]
	public HideObject()
	{
	}
}
[Token(Token = "0x2000201")]
public class ButtonSelection : DefaultSelection
{
	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject btnSelectionA;

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x916438", Offset = "0x916438", VA = "0x916438", Slot = "6")]
	public override void ActiveSelection(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x916558", Offset = "0x916558", VA = "0x916558", Slot = "7")]
	public override void ObjProcess(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x916668", Offset = "0x916668", VA = "0x916668", Slot = "8")]
	public override void DisActiveSelection()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x916690", Offset = "0x916690", VA = "0x916690")]
	public ButtonSelection()
	{
	}
}
[Token(Token = "0x2000202")]
public class ContinuosSelection : DefaultSelection
{
	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x924090", Offset = "0x924090", VA = "0x924090", Slot = "6")]
	public override void ActiveSelection(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x924234", Offset = "0x924234", VA = "0x924234", Slot = "7")]
	public override void ObjProcess(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x924268", Offset = "0x924268", VA = "0x924268", Slot = "8")]
	public override void DisActiveSelection()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x924288", Offset = "0x924288", VA = "0x924288")]
	public ContinuosSelection()
	{
	}
}
[Token(Token = "0x2000203")]
public abstract class DefaultSelection : MonoBehaviour
{
	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objSelection;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float m_SelectionDuration;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	protected Image m_Selection;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Animator anim;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool isComplete;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected bool loadingComplete;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected VRActiveButton btnActiveScript;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Coroutine fillCorotine;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float loadingTime;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Command command_click;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distance;

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xABC934", Offset = "0xABC934", VA = "0xABC934", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xABC9BC", Offset = "0xABC9BC", VA = "0xABC9BC", Slot = "5")]
	public virtual void SetSelection(GameObject _selection)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xABCA28", Offset = "0xABCA28", VA = "0xABCA28", Slot = "6")]
	public virtual void ActiveSelection(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xABCB30", Offset = "0xABCB30", VA = "0xABCB30", Slot = "7")]
	public virtual void ObjProcess(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xABCBEC", Offset = "0xABCBEC", VA = "0xABCBEC", Slot = "8")]
	public virtual void DisActiveSelection()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xABCBF0", Offset = "0xABCBF0", VA = "0xABCBF0", Slot = "9")]
	public virtual void ButtonClickProcess(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xABCC64", Offset = "0xABCC64", VA = "0xABCC64")]
	protected DefaultSelection()
	{
	}
}
[Token(Token = "0x2000204")]
public class ItselfSelection : DefaultSelection
{
	[Token(Token = "0x2000503")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715274", Offset = "0x715274")]
	private sealed class <FillTargetSelectionRadial>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image m_selection;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ItselfSelection <>4__this;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x170002D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0xB47E44", Offset = "0xB47E44", VA = "0xB47E44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0xB47EAC", Offset = "0xB47EAC", VA = "0xB47EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xB47D1C", Offset = "0xB47D1C", VA = "0xB47D1C")]
		[DebuggerHidden]
		public <FillTargetSelectionRadial>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xB47D50", Offset = "0xB47D50", VA = "0xB47D50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xB47D54", Offset = "0xB47D54", VA = "0xB47D54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xB47E4C", Offset = "0xB47E4C", VA = "0xB47E4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public int numberCheck;

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xB47AF4", Offset = "0xB47AF4", VA = "0xB47AF4")]
	public void addNumberCheck()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xB47B04", Offset = "0xB47B04", VA = "0xB47B04", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xB47B30", Offset = "0xB47B30", VA = "0xB47B30", Slot = "6")]
	public override void ActiveSelection(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xB47C38", Offset = "0xB47C38", VA = "0xB47C38", Slot = "7")]
	public override void ObjProcess(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xB47C70", Offset = "0xB47C70", VA = "0xB47C70", Slot = "8")]
	public override void DisActiveSelection()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xB47BBC", Offset = "0xB47BBC", VA = "0xB47BBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F980", Offset = "0x71F980")]
	private IEnumerator FillTargetSelectionRadial(Image m_selection)
	{
		return null;
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xB47D48", Offset = "0xB47D48", VA = "0xB47D48")]
	public ItselfSelection()
	{
	}
}
[Token(Token = "0x2000205")]
public class LoadingSelection : DefaultSelection
{
	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715284", Offset = "0x715284")]
	private sealed class <FillSelectionRadial>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image m_Select;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LoadingSelection <>4__this;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x170002D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0xB49AE4", Offset = "0xB49AE4", VA = "0xB49AE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0xB49B4C", Offset = "0xB49B4C", VA = "0xB49B4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xB4994C", Offset = "0xB4994C", VA = "0xB4994C")]
		[DebuggerHidden]
		public <FillSelectionRadial>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xB49980", Offset = "0xB49980", VA = "0xB49980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xB49984", Offset = "0xB49984", VA = "0xB49984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xB49AEC", Offset = "0xB49AEC", VA = "0xB49AEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xB49650", Offset = "0xB49650", VA = "0xB49650", Slot = "6")]
	public override void ActiveSelection(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xB49824", Offset = "0xB49824", VA = "0xB49824", Slot = "7")]
	public override void ObjProcess(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xB4989C", Offset = "0xB4989C", VA = "0xB4989C", Slot = "8")]
	public override void DisActiveSelection()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xB497A8", Offset = "0xB497A8", VA = "0xB497A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71F9E4", Offset = "0x71F9E4")]
	private IEnumerator FillSelectionRadial(Image m_Select)
	{
		return null;
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xB49978", Offset = "0xB49978", VA = "0xB49978")]
	public LoadingSelection()
	{
	}
}
[Token(Token = "0x2000206")]
public class MainCameraRaycastController : MonoBehaviour
{
	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cam;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ray rayPointer;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RaycastHit hitPointer;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private RaycastHit curHit;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VRActiveButton btnActiveScript;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private DefaultSelection m_objSelection;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject imgSection;

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xC0EA1C", Offset = "0xC0EA1C", VA = "0xC0EA1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xC0EA74", Offset = "0xC0EA74", VA = "0xC0EA74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xC0EE6C", Offset = "0xC0EE6C", VA = "0xC0EE6C")]
	public MainCameraRaycastController()
	{
	}
}
[Token(Token = "0x2000207")]
public class SimplestSelection : DefaultSelection
{
	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x8EB438", Offset = "0x8EB438", VA = "0x8EB438", Slot = "6")]
	public override void ActiveSelection(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x8EB484", Offset = "0x8EB484", VA = "0x8EB484", Slot = "7")]
	public override void ObjProcess(RaycastHit hitPointer)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x8EB4B8", Offset = "0x8EB4B8", VA = "0x8EB4B8", Slot = "8")]
	public override void DisActiveSelection()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x8EB4BC", Offset = "0x8EB4BC", VA = "0x8EB4BC")]
	public SimplestSelection()
	{
	}
}
[Token(Token = "0x2000208")]
public class VRActiveButton : MonoBehaviour
{
	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRButtonType btnType;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canWorkContinuously;

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x906FB4", Offset = "0x906FB4", VA = "0x906FB4")]
	public VRActiveButton()
	{
	}
}
[Token(Token = "0x2000209")]
public class BackgroundSound : MonoBehaviour
{
	[Token(Token = "0x2000505")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715294", Offset = "0x715294")]
	private sealed class <PlayNonFadeSound>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BackgroundSound <>4__this;

		[Token(Token = "0x170002D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0x91240C", Offset = "0x91240C", VA = "0x91240C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x912474", Offset = "0x912474", VA = "0x912474", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x9122FC", Offset = "0x9122FC", VA = "0x9122FC")]
		[DebuggerHidden]
		public <PlayNonFadeSound>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x912330", Offset = "0x912330", VA = "0x912330", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x912334", Offset = "0x912334", VA = "0x912334", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x912414", Offset = "0x912414", VA = "0x912414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip nonFadeBgSound;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource source;

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x9121FC", Offset = "0x9121FC", VA = "0x9121FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x91228C", Offset = "0x91228C", VA = "0x91228C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FA48", Offset = "0x71FA48")]
	private IEnumerator PlayNonFadeSound()
	{
		return null;
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x912328", Offset = "0x912328", VA = "0x912328")]
	public BackgroundSound()
	{
	}
}
[Token(Token = "0x200020A")]
public class BucketShaveSoil : MonoBehaviour
{
	[Token(Token = "0x4000D41")]
	private const double OPEN_ANGLE = 0.10000000149011612;

	[Token(Token = "0x4000D42")]
	private const double DIG_ANGLE = 0.1599999964237213;

	[Token(Token = "0x4000D43")]
	private const double CLOSE_ANGLE = -0.30000001192092896;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bucketSoil;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fallSoilParticle;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bucketPoint1;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bucketPoint2;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fallSoilPoint;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float bucketAngle;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float bucketAngleWhenDig;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public int levelDigging;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public int levelDeep;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public bool isDigging;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[HideInInspector]
	public bool isColliderDirtPile;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[HideInInspector]
	public bool isCanFallSoil;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	[HideInInspector]
	public bool isOpenBucket;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool isBucketSoil;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[HideInInspector]
	public bool isShaveSoil;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	[HideInInspector]
	public bool digLevel1;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	[HideInInspector]
	public bool digLevel2;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public bool digLevel3;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[HideInInspector]
	public bool deepLevel1;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[HideInInspector]
	public bool deepLevel2;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	[HideInInspector]
	public bool deepLevel3;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public bool isRevertDigging;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 digPoint;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timeRotateLeft;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeRotateRight;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float timeForward;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timeReverse;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool status;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool existenceOfRange;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 pointFallSoilEffect;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 normalVec;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Excavator exScript;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CalculateAmountOfSoil amountSoil;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool bucketForward;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform jackBase;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float dis;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform yumboBody;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform pitUp;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform pitDown;

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x9139D8", Offset = "0x9139D8", VA = "0x9139D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x913A48", Offset = "0x913A48", VA = "0x913A48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x913B30", Offset = "0x913B30", VA = "0x913B30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x913B6C", Offset = "0x913B6C", VA = "0x913B6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x9148BC", Offset = "0x9148BC", VA = "0x9148BC")]
	public void ChangeStatus(bool _status)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x9148C8", Offset = "0x9148C8", VA = "0x9148C8")]
	public void changeIsBucketSoil(bool _value)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x9148D4", Offset = "0x9148D4", VA = "0x9148D4")]
	public bool CanDiging()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x9148EC", Offset = "0x9148EC", VA = "0x9148EC")]
	public bool IsCloseBucket()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x914904", Offset = "0x914904", VA = "0x914904")]
	public bool IsOpenBucket()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x91491C", Offset = "0x91491C", VA = "0x91491C")]
	public bool CanFallSoil()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x914978", Offset = "0x914978", VA = "0x914978")]
	public bool CanShaveSoil()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x91401C", Offset = "0x91401C", VA = "0x91401C")]
	private void CalculateDiggingLevel()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x914058", Offset = "0x914058", VA = "0x914058")]
	private void CalculateDeepLeve()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x913F3C", Offset = "0x913F3C", VA = "0x913F3C")]
	private void ChangeDriveAndMotionWhenDigging()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x914A68", Offset = "0x914A68", VA = "0x914A68")]
	private void RevertBeforeDigging()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x914A14", Offset = "0x914A14", VA = "0x914A14")]
	private void ChangeSpeedWhenSoinOnBucket()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x914C10", Offset = "0x914C10", VA = "0x914C10")]
	private void ChangeDiggingLevel1()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x914C54", Offset = "0x914C54", VA = "0x914C54")]
	private void ChangeDiggingLevel2()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x914CD8", Offset = "0x914CD8", VA = "0x914CD8")]
	private void ChangeDiggingLevel3()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x914D44", Offset = "0x914D44", VA = "0x914D44")]
	private void RotateWhenDigging(float timeWatting)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x914D74", Offset = "0x914D74", VA = "0x914D74")]
	private void MoveWhenDigging(float timeWatting)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x913CE8", Offset = "0x913CE8", VA = "0x913CE8")]
	private void CalculateBucketAngle()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x913E74", Offset = "0x913E74", VA = "0x913E74")]
	private void CheckOpenBucket()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x913E90", Offset = "0x913E90", VA = "0x913E90")]
	private void CheckShaveSoil()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x913ED8", Offset = "0x913ED8", VA = "0x913ED8")]
	private void CheckFallSoil()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x915078", Offset = "0x915078", VA = "0x915078")]
	private void FallSoil(Vector3 point)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x914E50", Offset = "0x914E50", VA = "0x914E50")]
	public void ShaveSoil()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x915184", Offset = "0x915184", VA = "0x915184")]
	private void PlayEffectFallSoil()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x91446C", Offset = "0x91446C", VA = "0x91446C")]
	private void PitPositioner()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x914094", Offset = "0x914094", VA = "0x914094")]
	public bool CheckBucketForward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x915230", Offset = "0x915230", VA = "0x915230")]
	public BucketShaveSoil()
	{
	}
}
[Token(Token = "0x200020B")]
public class CalculateAmountOfSoil : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000506")]
	public struct SoilOnBucketLevel
	{
		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 SoilBucketPos;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float soilBucketScale;
	}

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxAmountShaveSoil;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float minAmountShaveSoil;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float maxDepression;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float maxFallSoilOnTruck;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SoilOnBucketLevel[] SoilBucketlevels;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isCalculateSoil;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x719CDC", Offset = "0x719CDC")]
	private float <AmountShaveSoil>k__BackingField;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x719CEC", Offset = "0x719CEC")]
	private float <AmountDepression>k__BackingField;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x719CFC", Offset = "0x719CFC")]
	private float <AmountFallSoilOnTruck>k__BackingField;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x719D0C", Offset = "0x719D0C")]
	private Vector3 <AmountSoilOnBucketPos>k__BackingField;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x719D1C", Offset = "0x719D1C")]
	private float <AmountSoilOnBucketScale>k__BackingField;

	[Token(Token = "0x17000120")]
	public float AmountShaveSoil
	{
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x91725C", Offset = "0x91725C", VA = "0x91725C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FAAC", Offset = "0x71FAAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x917264", Offset = "0x917264", VA = "0x917264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FABC", Offset = "0x71FABC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public float AmountDepression
	{
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x91726C", Offset = "0x91726C", VA = "0x91726C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FACC", Offset = "0x71FACC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x917274", Offset = "0x917274", VA = "0x917274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FADC", Offset = "0x71FADC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public float AmountFallSoilOnTruck
	{
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x91727C", Offset = "0x91727C", VA = "0x91727C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FAEC", Offset = "0x71FAEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x917284", Offset = "0x917284", VA = "0x917284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FAFC", Offset = "0x71FAFC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public Vector3 AmountSoilOnBucketPos
	{
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x91728C", Offset = "0x91728C", VA = "0x91728C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FB0C", Offset = "0x71FB0C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x917298", Offset = "0x917298", VA = "0x917298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FB1C", Offset = "0x71FB1C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public float AmountSoilOnBucketScale
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x9172A4", Offset = "0x9172A4", VA = "0x9172A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FB2C", Offset = "0x71FB2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x9172AC", Offset = "0x9172AC", VA = "0x9172AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FB3C", Offset = "0x71FB3C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x9172B4", Offset = "0x9172B4", VA = "0x9172B4")]
	public void SetAmountShaveSoil(float distShaveSoil)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x917398", Offset = "0x917398", VA = "0x917398")]
	public void ResetAmountShaveSoil()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x917378", Offset = "0x917378", VA = "0x917378")]
	private void UpdateProperties()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x9173DC", Offset = "0x9173DC", VA = "0x9173DC")]
	private void UpdateSoilOnBucket()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x917464", Offset = "0x917464", VA = "0x917464")]
	public CalculateAmountOfSoil()
	{
	}
}
[Token(Token = "0x200020C")]
public class DisActiveGameObject : MonoBehaviour
{
	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xBF0130", Offset = "0xBF0130", VA = "0xBF0130")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xBF0158", Offset = "0xBF0158", VA = "0xBF0158")]
	public DisActiveGameObject()
	{
	}
}
[Token(Token = "0x200020D")]
public enum KidShavelSoilLevel
{
	[Token(Token = "0x4000D77")]
	None,
	[Token(Token = "0x4000D78")]
	Level1,
	[Token(Token = "0x4000D79")]
	Level2,
	[Token(Token = "0x4000D7A")]
	Level3
}
[Token(Token = "0x200020E")]
public enum KidDumpSoilLevel
{
	[Token(Token = "0x4000D7C")]
	None,
	[Token(Token = "0x4000D7D")]
	Level1,
	[Token(Token = "0x4000D7E")]
	Level2,
	[Token(Token = "0x4000D7F")]
	Level3
}
[Token(Token = "0x200020F")]
public class Excavator : MonoBehaviour
{
	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public BucketShaveSoil bucketScript;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool isKidShavelSoil;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[HideInInspector]
	public bool isKidDumpSoil;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private KidShavelSoilLevel ksLevel;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private KidDumpSoilLevel kdLevel;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int BigArmLayerIndex;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int SmallArmLayerIndex;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ShovelLayerIndex;

	[Token(Token = "0x4000D88")]
	private const float MAX_ANGLE_ROTATE = 300f;

	[Token(Token = "0x4000D89")]
	private const float MIN_ANGLE_ROTATE = 50f;

	[Token(Token = "0x4000D8A")]
	private const float default_multiply_MoveSpeed = 2f;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x719D5C", Offset = "0x719D5C")]
	public GameObject leftTread;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rightTread;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool InDriveMode;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool isPress;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[HideInInspector]
	public bool isChangeSpeed;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	[HideInInspector]
	public bool canDriveLeftForwardThread;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public bool canDriveLeftBackThread;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	[HideInInspector]
	public bool canDriveRightForwardThread;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	[HideInInspector]
	public bool canDriveRightBackThread;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float scrollSpeed;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float moveSpeed;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotWheelSpeed;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _scrollSpeed;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _moveSpeed;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _rotWheelSpeed;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform myTransform;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 joystickleftVector;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2 joystickrightVector;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isPointerUpLeft;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isPointerUpRight;

	[Token(Token = "0x4000D9F")]
	private const float ANGLE_JOYSTICK = 60f;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool virtualL1;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool virtualR1;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool virtualL2;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool virtualR2;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool virtualGrappleRotateLeft;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	private bool virtualGrappleRotateRight;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool virtualO;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool virtualTriangle;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject body;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool isRotateRight;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[HideInInspector]
	public bool isRotateLeft;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	[HideInInspector]
	public bool isCloseSmallArm;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	[HideInInspector]
	public bool isOpenSmallArm;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[HideInInspector]
	public bool isDownBigArm;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	[HideInInspector]
	public bool isRiseBigArm;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	[HideInInspector]
	public bool isCloseShovel;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
	[HideInInspector]
	public bool isOpenShovel;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public bool isPressForLeft;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[HideInInspector]
	public bool isPressForRight;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	[HideInInspector]
	public bool isPressBackLeft;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	[HideInInspector]
	public bool isPressBackRight;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public bool isGrappleRotateRight;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	[HideInInspector]
	public bool isGrappleRotateLeft;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	[HideInInspector]
	public bool canForLeft;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
	[HideInInspector]
	public bool canForRight;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public bool canBackLeft;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[HideInInspector]
	public bool canBackRight;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	[HideInInspector]
	public bool canMoveForward;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	[HideInInspector]
	public bool canMoveReverse;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public bool canRotateRight;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	[HideInInspector]
	public bool canCloseSmallArm;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	[HideInInspector]
	public bool canRotateLeft;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	[HideInInspector]
	public bool canOpenSmallArm;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public bool canDownBigArm;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[HideInInspector]
	public bool canCloseShovel;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	[HideInInspector]
	public bool canRiseBigArm;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	[HideInInspector]
	public bool canOpenShovel;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public bool isMoveForward;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	[HideInInspector]
	public bool isMoveReverse;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	[HideInInspector]
	public bool isMoveLeft;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
	[HideInInspector]
	public bool isMoveRight;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public bool isDumpingSoil;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	[HideInInspector]
	public bool isShovelingSoil;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	[HideInInspector]
	public bool isKidRotateLeft;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
	[HideInInspector]
	public bool isKidRotateRight;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	public bool isKidDownBigArm;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	[HideInInspector]
	public bool isKidUpBigArm;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private KIND_INPUT currentInput;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private NavMeshObstacle navMeshObstacle;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OculusTouchInputConverter oculusTouchInput;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AnimatorStateInfo rightLevelForwardState;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private AnimatorStateInfo rightLeverBackState;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AnimatorStateInfo rightLeverLeftState;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private AnimatorStateInfo rightLeverRightState;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AnimatorStateInfo leftLevelForwardState;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private AnimatorStateInfo leftLeverBackState;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private AnimatorStateInfo leftLeverLeftState;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private AnimatorStateInfo leftLeverRightState;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private AnimatorStateInfo rightDriveLevelForwardState;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private AnimatorStateInfo rightDriveLeverBackState;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private AnimatorStateInfo leftDriveLevelForwardState;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private AnimatorStateInfo leftDriveLeverBackState;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private float rightLeverForwardTime;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float rightLeverBackTime;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float rightLeverLeftTime;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private float rightLeverRightTime;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float leftLeverForwardTime;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float leftLeverBackTime;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float leftLeverLeftTime;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float leftLeverRightTime;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float rightDriveLeverForwardTime;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private float rightDriveLeverBackTime;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float leftDriveLeverForwardTime;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private float leftDriveLeverBackTime;

	[Token(Token = "0x4000DEA")]
	private const float RANGE = 70f;

	[Token(Token = "0x4000DEB")]
	private const int MAXCOUNTSHOVEL = 10;

	[Token(Token = "0x4000DEC")]
	private const int MINCOUNTSHOVEL = -20;

	[Token(Token = "0x4000DED")]
	private const float default_multiply_MotionSpeed = 6f;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float ROTATE_SPEED;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	private float rotate_speed;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private float SMALL_ARM_SPEED;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private float small_arm_speed;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private float BIG_ARM_SPEED;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float big_arm_speed;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private float SHOVEL_SPEED;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float shovel_speed;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float GRAPPLE_SPEED;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private float grapple_speed;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private float GRAPPLE_ROTATE_SPEED;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private float graple_rotate_speed;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool isPressWorS;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E9")]
	private bool isPressAorD;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EA")]
	private bool isPressIorK;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EB")]
	private bool isPressJorL;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private bool isArmMotion;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2ED")]
	private bool isGrappleStop;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EE")]
	private bool isGrappleOpen;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private AnimatorStateInfo bigState;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private AnimatorStateInfo smallState;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private AnimatorStateInfo shovelState;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private AnimatorStateInfo grapleStage;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private AnimatorStateInfo rotateStage;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	private float tmp;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private int shovelCount;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	private float bigTime;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private float smallTime;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	private float shovelTime;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private float grapleTime;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	private float rotateTime;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public float MAX__HIGH_YUMBO;

	[Token(Token = "0x4000E0E")]
	private const float MIN_HIGH_YUMBO = 0.1f;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public GameObject pointHigh1;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public GameObject pointHigh2;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public GameObject pointHigh3;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	[HideInInspector]
	public int totalCollision;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
	[HideInInspector]
	public int totalDump;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	[HideInInspector]
	public int totalDrop;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	private Rigidbody physicScript;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	private bool wasCalculateDump;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F9")]
	private bool isJustPlus;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
	private float plusTime;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	private AudioSource source;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public AudioClip[] clip;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	[HideInInspector]
	public bool isCollison;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x411")]
	private bool isFall;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
	private int soundIndex;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public GameObject TreadsL;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public GameObject TreadsR;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	private Material matL;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	private Material matR;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	private bool V;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x439")]
	private bool U;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
	private float offsetL;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	private float offsetR;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
	[HideInInspector]
	public bool CanRotating;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x445")]
	private bool istest;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x446")]
	[HideInInspector]
	public bool CanGoing;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x447")]
	[HideInInspector]
	public bool isFalling;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	[HideInInspector]
	public bool canWorking;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	[HideInInspector]
	public Animator anim;

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xBF3338", Offset = "0xBF3338", VA = "0xBF3338")]
	private void StartKidMotion()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xBF340C", Offset = "0xBF340C", VA = "0xBF340C")]
	private void UpdateKidMotion()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xBF348C", Offset = "0xBF348C", VA = "0xBF348C")]
	private void MotionKidDumpSoil()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xBF34C4", Offset = "0xBF34C4", VA = "0xBF34C4")]
	private void MotionKidShavelSoil()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xBF3738", Offset = "0xBF3738", VA = "0xBF3738")]
	private void KidDumpSoil()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xBF3A2C", Offset = "0xBF3A2C", VA = "0xBF3A2C")]
	private void KidShavelSoil()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xBF34FC", Offset = "0xBF34FC", VA = "0xBF34FC")]
	private void KidMotionRotateYumbo()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xBF3610", Offset = "0xBF3610", VA = "0xBF3610")]
	private void KidMotionBigArm()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xBF3E04", Offset = "0xBF3E04", VA = "0xBF3E04")]
	private bool CheckNormallizedTime(int _index, string _compare, float _val)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xBF3D2C", Offset = "0xBF3D2C", VA = "0xBF3D2C")]
	private void SetAnimator(string _animator, float speed)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xBF3A14", Offset = "0xBF3A14", VA = "0xBF3A14")]
	private bool IsKidDumpSoil()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xBF3D14", Offset = "0xBF3D14", VA = "0xBF3D14")]
	private bool IsKidShovelSoil()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xBF3FD0", Offset = "0xBF3FD0", VA = "0xBF3FD0")]
	private bool IsKidLettingingBigArmDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xBF4074", Offset = "0xBF4074", VA = "0xBF4074")]
	private bool IsKidRaisingBigArm()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xBF3F14", Offset = "0xBF3F14", VA = "0xBF3F14")]
	private bool IsKidRotatingRightYumbo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xBF3FB0", Offset = "0xBF3FB0", VA = "0xBF3FB0")]
	private bool IsKidRotatingLeftYumbo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xBF4184", Offset = "0xBF4184", VA = "0xBF4184")]
	private void AwakeDriveSript()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xBF4190", Offset = "0xBF4190", VA = "0xBF4190")]
	public void StartDriveScript()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xBF4334", Offset = "0xBF4334", VA = "0xBF4334")]
	public void UpdateDriveState()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xBF41C4", Offset = "0xBF41C4", VA = "0xBF41C4")]
	private void ApplyYumboMoveSpeed()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xBF449C", Offset = "0xBF449C", VA = "0xBF449C")]
	private void DriveMove()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xBF45E8", Offset = "0xBF45E8", VA = "0xBF45E8")]
	private void SetDriveForward()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xBF47B4", Offset = "0xBF47B4", VA = "0xBF47B4")]
	private void SetDriveReverse()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xBF4958", Offset = "0xBF4958", VA = "0xBF4958")]
	private void SetDriveRightFrontWheel()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xBF4AA4", Offset = "0xBF4AA4", VA = "0xBF4AA4")]
	private void SetDriveRightRearWheel()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xBF4BE8", Offset = "0xBF4BE8", VA = "0xBF4BE8")]
	private void SetDriveLeftFrontWheel()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xBF4D2C", Offset = "0xBF4D2C", VA = "0xBF4D2C")]
	private void SetDriveLeftRearWheel()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xBF45A8", Offset = "0xBF45A8", VA = "0xBF45A8")]
	private bool IsDrivingForward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xBF4774", Offset = "0xBF4774", VA = "0xBF4774")]
	private bool IsDrivingReverse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xBF4938", Offset = "0xBF4938", VA = "0xBF4938")]
	public bool IsDrivingRightFrontWheel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xBF4A84", Offset = "0xBF4A84", VA = "0xBF4A84")]
	public bool IsDrivingRightRearWheel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xBF4BC8", Offset = "0xBF4BC8", VA = "0xBF4BC8")]
	public bool IsDrivingLeftFrontWheel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xBF4D0C", Offset = "0xBF4D0C", VA = "0xBF4D0C")]
	public bool IsDrivingLeftRearWheel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xBF4E58", Offset = "0xBF4E58", VA = "0xBF4E58")]
	public void SetMoveSpeed(float _speed)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xBF4E60", Offset = "0xBF4E60", VA = "0xBF4E60")]
	public float GetMoveSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xBF4578", Offset = "0xBF4578", VA = "0xBF4578")]
	public void ChangeMoveSpeed(float multiplySpeed)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xBF4E68", Offset = "0xBF4E68", VA = "0xBF4E68")]
	public void SetRotateWheelSpeed(float _speed)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xBF4E70", Offset = "0xBF4E70", VA = "0xBF4E70")]
	public float GetRotateWheelSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xBF4E78", Offset = "0xBF4E78", VA = "0xBF4E78")]
	private string ConvertAxis(string axisCode)
	{
		return null;
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xBF5924", Offset = "0xBF5924", VA = "0xBF5924")]
	private KeyCode ConvertButtonJoystick(string keycode)
	{
		return default(KeyCode);
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xBF5DF8", Offset = "0xBF5DF8", VA = "0xBF5DF8")]
	private bool keyboardW()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xBF5E44", Offset = "0xBF5E44", VA = "0xBF5E44")]
	private bool keyboardS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xBF5E90", Offset = "0xBF5E90", VA = "0xBF5E90")]
	private bool keyboardA()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xBF5EDC", Offset = "0xBF5EDC", VA = "0xBF5EDC")]
	private bool keyboardD()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xBF5F28", Offset = "0xBF5F28", VA = "0xBF5F28")]
	private bool keyboardI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xBF5F74", Offset = "0xBF5F74", VA = "0xBF5F74")]
	private bool keyboardK()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xBF5FC0", Offset = "0xBF5FC0", VA = "0xBF5FC0")]
	private bool keyboardJ()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xBF600C", Offset = "0xBF600C", VA = "0xBF600C")]
	private bool keyboardL()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xBF6058", Offset = "0xBF6058", VA = "0xBF6058")]
	private bool keyboardR()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xBF60A4", Offset = "0xBF60A4", VA = "0xBF60A4")]
	private bool keyboardY()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xBF60F0", Offset = "0xBF60F0", VA = "0xBF60F0")]
	private bool keyboardF()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xBF613C", Offset = "0xBF613C", VA = "0xBF613C")]
	private bool keyboardH()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xBF6188", Offset = "0xBF6188", VA = "0xBF6188")]
	private bool keyboardGrappleRotateRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xBF61D4", Offset = "0xBF61D4", VA = "0xBF61D4")]
	private bool keyboardGrappleRotateLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xBF6220", Offset = "0xBF6220", VA = "0xBF6220")]
	public void GetJoyStickValues(string local, Vector2 _value, bool _isPointerUp)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xBF62D4", Offset = "0xBF62D4", VA = "0xBF62D4")]
	private bool virtualS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xBF6398", Offset = "0xBF6398", VA = "0xBF6398")]
	private bool virtualW()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xBF645C", Offset = "0xBF645C", VA = "0xBF645C")]
	private bool virtualA()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xBF6520", Offset = "0xBF6520", VA = "0xBF6520")]
	private bool virtualD()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xBF65E4", Offset = "0xBF65E4", VA = "0xBF65E4")]
	private bool virtualI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xBF66A8", Offset = "0xBF66A8", VA = "0xBF66A8")]
	private bool virtualK()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xBF676C", Offset = "0xBF676C", VA = "0xBF676C")]
	private bool virtualJ()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xBF6830", Offset = "0xBF6830", VA = "0xBF6830")]
	private bool virtualL()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xBF68F4", Offset = "0xBF68F4", VA = "0xBF68F4")]
	public void ChangeVirtualKey(string _name, bool _value)
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xBF6B30", Offset = "0xBF6B30", VA = "0xBF6B30")]
	private void StartInputControlScript()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xBF6BEC", Offset = "0xBF6BEC", VA = "0xBF6BEC")]
	private void UpdateInputControlScript()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xBF712C", Offset = "0xBF712C", VA = "0xBF712C")]
	public void ResetInput()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xBF6BF0", Offset = "0xBF6BF0", VA = "0xBF6BF0")]
	private void UpdateCustomInput()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xBF76B8", Offset = "0xBF76B8", VA = "0xBF76B8")]
	private bool IsPress(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xBF77E4", Offset = "0xBF77E4", VA = "0xBF77E4")]
	private bool IsQuestPress(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xBF7138", Offset = "0xBF7138", VA = "0xBF7138")]
	private bool IsDriveLeftBackWheel(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xBF717C", Offset = "0xBF717C", VA = "0xBF717C")]
	private bool IsDriveLeftFrontWheel(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xBF71C0", Offset = "0xBF71C0", VA = "0xBF71C0")]
	private bool IsDriveRightBackWheel(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xBF7204", Offset = "0xBF7204", VA = "0xBF7204")]
	private bool IsDriveRightFrontWheel(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xBF7248", Offset = "0xBF7248", VA = "0xBF7248")]
	private bool IsRotateRight(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xBF728C", Offset = "0xBF728C", VA = "0xBF728C")]
	private bool IsRotateLeft(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xBF72D0", Offset = "0xBF72D0", VA = "0xBF72D0")]
	private bool IsOpenSmallArm(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xBF7314", Offset = "0xBF7314", VA = "0xBF7314")]
	private bool IsCloseSmallArm(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xBF7358", Offset = "0xBF7358", VA = "0xBF7358")]
	private bool IsRiseBigArm(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xBF739C", Offset = "0xBF739C", VA = "0xBF739C")]
	private bool IsDownBigArm(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xBF73E0", Offset = "0xBF73E0", VA = "0xBF73E0")]
	private bool IsOpenShovel(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xBF7424", Offset = "0xBF7424", VA = "0xBF7424")]
	private bool IsCloseShovel(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xBF7468", Offset = "0xBF7468", VA = "0xBF7468")]
	private bool IsRotateGrappleFollowClockwise(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xBF74AC", Offset = "0xBF74AC", VA = "0xBF74AC")]
	private bool IsRotateGrappleCounterClockwise(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xBF74F0", Offset = "0xBF74F0", VA = "0xBF74F0")]
	private bool IsDriveForward(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xBF7528", Offset = "0xBF7528", VA = "0xBF7528")]
	private bool IsDriveReverse(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xBF7560", Offset = "0xBF7560", VA = "0xBF7560")]
	private bool IsDriveLeft(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xBF7598", Offset = "0xBF7598", VA = "0xBF7598")]
	private bool IsDriveRight(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xBF75D8", Offset = "0xBF75D8", VA = "0xBF75D8")]
	private bool IsKidRotateLeft(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xBF7610", Offset = "0xBF7610", VA = "0xBF7610")]
	private bool IsKidRotateRight(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xBF7648", Offset = "0xBF7648", VA = "0xBF7648")]
	private bool IsKidDownBigArm(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xBF7680", Offset = "0xBF7680", VA = "0xBF7680")]
	private bool IsKidUpBigArm(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xBF75D0", Offset = "0xBF75D0", VA = "0xBF75D0")]
	private bool IsShovelSoil(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xBF75D4", Offset = "0xBF75D4", VA = "0xBF75D4")]
	private bool IsDumpSoil(Command command)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xBF4484", Offset = "0xBF4484", VA = "0xBF4484")]
	private void UpdateKidDrive()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xBF7880", Offset = "0xBF7880", VA = "0xBF7880")]
	private void KidDriveMove()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xBF79F8", Offset = "0xBF79F8", VA = "0xBF79F8")]
	private bool IsKidDrivingForward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xBF7A30", Offset = "0xBF7A30", VA = "0xBF7A30")]
	private bool IsKidDrivingReverse()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xBF7958", Offset = "0xBF7958", VA = "0xBF7958")]
	public bool IsKidDrivingRightFrontWheel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xBF7980", Offset = "0xBF7980", VA = "0xBF7980")]
	public bool IsKidDrivingRightRearWheel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xBF79A8", Offset = "0xBF79A8", VA = "0xBF79A8")]
	public bool IsKidDrivingLeftFrontWheel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xBF79D0", Offset = "0xBF79D0", VA = "0xBF79D0")]
	public bool IsKidDrivingLeftRearWheel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xBF7A68", Offset = "0xBF7A68", VA = "0xBF7A68")]
	private void MotionLeverUpdateState(bool _isLeftForward, bool _isLeftBack, bool _isLeftRight, bool _isLeftLeft, bool _isRightForward, bool _isRightLeft, bool _isRightBack, bool _isRightRight)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xBF4418", Offset = "0xBF4418", VA = "0xBF4418")]
	private void DriveLeverUpdateState(bool _isPressForRight, bool _isPressBackRight, bool _isPressForLeft, bool _isPressBackLeft)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xBF87F0", Offset = "0xBF87F0", VA = "0xBF87F0")]
	private void SetMotionRightForward(bool _isPressY)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xBF88D0", Offset = "0xBF88D0", VA = "0xBF88D0")]
	private void SetMotionRightBack(bool _isPressH)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xBF89B0", Offset = "0xBF89B0", VA = "0xBF89B0")]
	private void SetMotionLeftForward(bool _isPressR)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xBF8A90", Offset = "0xBF8A90", VA = "0xBF8A90")]
	private void SetMotionLeftBack(bool _isPressF)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xBF8614", Offset = "0xBF8614", VA = "0xBF8614")]
	private void CheckDriveLeverAnimatorState()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xBF7E94", Offset = "0xBF7E94", VA = "0xBF7E94")]
	private void MotionRightLeverBack(bool _isPressK)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xBF7F84", Offset = "0xBF7F84", VA = "0xBF7F84")]
	private void MotionRightLeverForward(bool _isPressI)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xBF8074", Offset = "0xBF8074", VA = "0xBF8074")]
	private void MotionRightLeverLeft(bool _isPressJ)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xBF8164", Offset = "0xBF8164", VA = "0xBF8164")]
	private void MotionRightLeverRight(bool _isPressL)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xBF8524", Offset = "0xBF8524", VA = "0xBF8524")]
	private void MotionLeftLeverForward(bool _isPressW)
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xBF8254", Offset = "0xBF8254", VA = "0xBF8254")]
	private void MotionLeftLeverBack(bool _isPressS)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xBF8344", Offset = "0xBF8344", VA = "0xBF8344")]
	private void MotionLeftLeverLeft(bool _isPressA)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xBF8434", Offset = "0xBF8434", VA = "0xBF8434")]
	private void MotionLeftLeverRight(bool _isPressD)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xBF7B24", Offset = "0xBF7B24", VA = "0xBF7B24")]
	private void CheckMotionLeverAnimatorState()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xBF8B70", Offset = "0xBF8B70", VA = "0xBF8B70")]
	private void StartMotionState()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xBF8CB0", Offset = "0xBF8CB0", VA = "0xBF8CB0")]
	private void UpdateMotionState()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xBF9148", Offset = "0xBF9148", VA = "0xBF9148")]
	private void SettingPattern()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xBF9940", Offset = "0xBF9940", VA = "0xBF9940")]
	public float getNormalizedTime(string _time)
	{
		return default(float);
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xBF99F8", Offset = "0xBF99F8", VA = "0xBF99F8")]
	public void ChangeGrappleStop(bool change)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xBF9A04", Offset = "0xBF9A04", VA = "0xBF9A04")]
	public bool IsGrappleStop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xBF9A0C", Offset = "0xBF9A0C", VA = "0xBF9A0C")]
	public bool getGrappleOpenStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xBF9A14", Offset = "0xBF9A14", VA = "0xBF9A14")]
	public void changeBigArmSpeed(float _speed)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xBF9A1C", Offset = "0xBF9A1C", VA = "0xBF9A1C")]
	public void changeRotateSpeed(float _speed)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xBF9A24", Offset = "0xBF9A24", VA = "0xBF9A24")]
	public void changeSmallArmSpeed(float _speed)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xBF9A2C", Offset = "0xBF9A2C", VA = "0xBF9A2C")]
	public void changeCanDownBigArm(bool _val)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xBF9A38", Offset = "0xBF9A38", VA = "0xBF9A38")]
	public void ChangeMotionSpeed(YUMBO_SPEED speed_kind, float multiplySpeed)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xBF9AF4", Offset = "0xBF9AF4", VA = "0xBF9AF4")]
	public void ChangeMotionsSpeed(float percent)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xBF91EC", Offset = "0xBF91EC", VA = "0xBF91EC")]
	private void MotionRotateYumbo()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xBF9300", Offset = "0xBF9300", VA = "0xBF9300")]
	private void MotionSmallArm()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xBF9428", Offset = "0xBF9428", VA = "0xBF9428")]
	private void MotionBigArm()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xBF9550", Offset = "0xBF9550", VA = "0xBF9550")]
	private void MotionShovel()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xBF97B0", Offset = "0xBF97B0", VA = "0xBF97B0")]
	private void MotionGraple()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xBF96BC", Offset = "0xBF96BC", VA = "0xBF96BC")]
	private void MotionRotateShovel()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xBF8F08", Offset = "0xBF8F08", VA = "0xBF8F08")]
	private void CheckMotionAnimatorState()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xBF8B74", Offset = "0xBF8B74", VA = "0xBF8B74")]
	private void ApplyYumboMotionSpeed()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xBF9C70", Offset = "0xBF9C70", VA = "0xBF9C70")]
	private bool IsRotatingRightYumbo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xBF9C90", Offset = "0xBF9C90", VA = "0xBF9C90")]
	private bool IsRotatingLeftYumbo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xBF9CB0", Offset = "0xBF9CB0", VA = "0xBF9CB0")]
	private bool IsOpeningSmallArm()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xBF9D44", Offset = "0xBF9D44", VA = "0xBF9D44")]
	private bool IsClosingSmallArm()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xBF9DD0", Offset = "0xBF9DD0", VA = "0xBF9DD0")]
	private bool IsLettingingBigArmDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xBF9E74", Offset = "0xBF9E74", VA = "0xBF9E74")]
	private bool IsRaisingBigArm()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xBF9F08", Offset = "0xBF9F08", VA = "0xBF9F08")]
	private bool IsClosingShovel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xBF9F9C", Offset = "0xBF9F9C", VA = "0xBF9F9C")]
	private bool IsOpeningShovel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xBFA04C", Offset = "0xBFA04C", VA = "0xBFA04C")]
	private bool IsClosingGraple()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xBFA0E0", Offset = "0xBFA0E0", VA = "0xBFA0E0")]
	private bool IsOpeningGraple()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xBFA174", Offset = "0xBFA174", VA = "0xBFA174")]
	private bool IsRotatingRightGrapple()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xBFA17C", Offset = "0xBFA17C", VA = "0xBFA17C")]
	private bool IsRotatingLeftGrapple()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xBFA184", Offset = "0xBFA184", VA = "0xBFA184")]
	private void StartPhysic()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xBFA214", Offset = "0xBFA214", VA = "0xBFA214")]
	private void PlusTotalCollision()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xBFA238", Offset = "0xBFA238", VA = "0xBFA238")]
	private void UpdatePhysic()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xBFA3C8", Offset = "0xBFA3C8", VA = "0xBFA3C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xBFA4E4", Offset = "0xBFA4E4", VA = "0xBFA4E4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xBFA600", Offset = "0xBFA600", VA = "0xBFA600")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xBFA71C", Offset = "0xBFA71C", VA = "0xBFA71C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xBFA88C", Offset = "0xBFA88C", VA = "0xBFA88C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xBFA9B4", Offset = "0xBFA9B4", VA = "0xBFA9B4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xBFA374", Offset = "0xBFA374", VA = "0xBFA374")]
	private void resetPlusTime()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xBFA2F8", Offset = "0xBFA2F8", VA = "0xBFA2F8")]
	private void CalculateYumboFalling()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xBFA298", Offset = "0xBFA298", VA = "0xBFA298")]
	private void SetConstraintYumbo()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xBF4108", Offset = "0xBF4108", VA = "0xBF4108")]
	private bool IsYumboTooHigh(float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xBF3F34", Offset = "0xBF3F34", VA = "0xBF3F34")]
	public void SoundPriority(int index, int clipIndex)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xBFA030", Offset = "0xBFA030", VA = "0xBFA030")]
	public void StopSound()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xBFAC38", Offset = "0xBFAC38", VA = "0xBFAC38")]
	private void StartSoundState()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xBFACE8", Offset = "0xBFACE8", VA = "0xBFACE8")]
	private void UpdateSoundState()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xBFAADC", Offset = "0xBFAADC", VA = "0xBFAADC")]
	private void SetSoundYumbo(int clipIndex)
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xBFAF2C", Offset = "0xBFAF2C", VA = "0xBFAF2C")]
	private void StartUvScript()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xBFAFBC", Offset = "0xBFAFBC", VA = "0xBFAFBC")]
	private void UpdateUvState()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xBFB0E0", Offset = "0xBFB0E0", VA = "0xBFB0E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xBFB1D4", Offset = "0xBFB1D4", VA = "0xBFB1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xBFB23C", Offset = "0xBFB23C", VA = "0xBFB23C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xBFB2D0", Offset = "0xBFB2D0", VA = "0xBFB2D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xBFAEFC", Offset = "0xBFAEFC", VA = "0xBFAEFC")]
	public bool IsYumboWorking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xBFB3FC", Offset = "0xBFB3FC", VA = "0xBFB3FC")]
	public bool IsYumboFalling()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xBFB338", Offset = "0xBFB338", VA = "0xBFB338")]
	private void CheckFalling()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xBFB404", Offset = "0xBFB404", VA = "0xBFB404")]
	public void makeYumboFall()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xBFB55C", Offset = "0xBFB55C", VA = "0xBFB55C")]
	public void changeRotationYumbo(Quaternion euler)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xBFB154", Offset = "0xBFB154", VA = "0xBFB154")]
	public void SetDefaultAnimation()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xBFB1D8", Offset = "0xBFB1D8", VA = "0xBFB1D8")]
	private void StartAllScriptExtension()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xBFB2F4", Offset = "0xBFB2F4", VA = "0xBFB2F4")]
	private void UpdateAllScriptExtension()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xBFB6A8", Offset = "0xBFB6A8", VA = "0xBFB6A8")]
	public Excavator()
	{
	}
}
[Token(Token = "0x2000210")]
internal enum KIND_INPUT
{
	[Token(Token = "0x4000E2D")]
	None,
	[Token(Token = "0x4000E2E")]
	KeyBoard,
	[Token(Token = "0x4000E2F")]
	GamePad,
	[Token(Token = "0x4000E30")]
	VirtualKeyBoard
}
[Token(Token = "0x2000211")]
public enum YUMBO_SPEED
{
	[Token(Token = "0x4000E32")]
	None,
	[Token(Token = "0x4000E33")]
	ROTATE_SPEED,
	[Token(Token = "0x4000E34")]
	SMALL_ARM_SPEED,
	[Token(Token = "0x4000E35")]
	BIG_ARM_SPEED,
	[Token(Token = "0x4000E36")]
	SHOVEL_SPEED,
	[Token(Token = "0x4000E37")]
	MOVE_SPEED,
	[Token(Token = "0x4000E38")]
	GRAPPLE_SPEED,
	[Token(Token = "0x4000E39")]
	GRAPPLE_ROTATE_SPEED
}
[Token(Token = "0x2000212")]
public class ShovelReference : MonoBehaviour
{
	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject shovelReference;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HeightShovelRefer;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x8E9F38", Offset = "0x8E9F38", VA = "0x8E9F38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x8EA048", Offset = "0x8EA048", VA = "0x8EA048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x8EA260", Offset = "0x8EA260", VA = "0x8EA260")]
	public ShovelReference()
	{
	}
}
[Token(Token = "0x2000213")]
public class YumboColliderScript : MonoBehaviour
{
	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isTriggerTruck;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool isTriggerTarget;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[HideInInspector]
	public bool isEnableAlert;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[HideInInspector]
	public bool isCollisonTerrain;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool isColliderInstructor;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool isCollisonStone;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[HideInInspector]
	public bool isInsidePlaneTruck;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[HideInInspector]
	public bool treeInGrappleColliderPlaneTruck;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool isCollisonBar;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[HideInInspector]
	public bool isOutSite;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[HideInInspector]
	public bool isCollisonWorker;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int totalCollision;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int totalDump;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int totalCollisionWorker;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int totalDrop;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Excavator exScript;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool wasCalculateDump;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool changeAlertTime;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool isTriggerSound;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool isJustPlus;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool wasInsidePlaneTruck;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<string> listCan;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float plusTime;

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xD70218", Offset = "0xD70218", VA = "0xD70218")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xD702BC", Offset = "0xD702BC", VA = "0xD702BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xD70678", Offset = "0xD70678", VA = "0xD70678")]
	private void PlusTotalCollision()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xD70624", Offset = "0xD70624", VA = "0xD70624")]
	private void resetPlusTime()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xD7069C", Offset = "0xD7069C", VA = "0xD7069C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xD70A14", Offset = "0xD70A14", VA = "0xD70A14")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xD70C88", Offset = "0xD70C88", VA = "0xD70C88")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xD70E28", Offset = "0xD70E28", VA = "0xD70E28")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xD71034", Offset = "0xD71034", VA = "0xD71034")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xD70594", Offset = "0xD70594", VA = "0xD70594")]
	private void CalculateYumboFalling()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xD70330", Offset = "0xD70330", VA = "0xD70330")]
	public void ManagerAlertCollison()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xD711BC", Offset = "0xD711BC", VA = "0xD711BC")]
	public YumboColliderScript()
	{
	}
}
[Token(Token = "0x2000214")]
public class YumboSettingConfig : MonoBehaviour
{
	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A1E4", Offset = "0x71A1E4")]
	public bool showShovelReference;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xD71ADC", Offset = "0xD71ADC", VA = "0xD71ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xD71B4C", Offset = "0xD71B4C", VA = "0xD71B4C")]
	public YumboSettingConfig()
	{
	}
}
[Token(Token = "0x2000215")]
public static class AlertYumboControl
{
	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x911EA0", Offset = "0x911EA0", VA = "0x911EA0")]
	public static void ShowAlert(string keyAlert)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x911F38", Offset = "0x911F38", VA = "0x911F38")]
	public static void HideAlert(string keyAlert)
	{
	}
}
[Token(Token = "0x2000216")]
public class SetEffectDirtPile : MonoBehaviour
{
	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ratio_pos;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratio_scale;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BucketShaveSoil bucketScript;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool canDigging;

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x8E8718", Offset = "0x8E8718", VA = "0x8E8718")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x8E871C", Offset = "0x8E871C", VA = "0x8E871C")]
	public void EffectDigDirtPile()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x8E88C4", Offset = "0x8E88C4", VA = "0x8E88C4")]
	public SetEffectDirtPile()
	{
	}
}
[Token(Token = "0x2000217")]
public class CheckDistanceWorker : MonoBehaviour
{
	[Token(Token = "0x4000E58")]
	private const float MIN_DISTANCE_WORKER_YUMBO = 5f;

	[Token(Token = "0x4000E59")]
	private const float WORKER_HEIGHT = 2f;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject dirtPile;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject yumbo;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InstructorManager instructorScript;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WorkerController workerScript;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WorkerSetMove workerSetMove;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Excavator exScript;

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x91DED0", Offset = "0x91DED0", VA = "0x91DED0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x91DF64", Offset = "0x91DF64", VA = "0x91DF64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x91E02C", Offset = "0x91E02C", VA = "0x91E02C")]
	private bool IsWorkerNearYumbo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x91E030", Offset = "0x91E030", VA = "0x91E030")]
	private bool IsRayCastYumbo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x91E294", Offset = "0x91E294", VA = "0x91E294")]
	public CheckDistanceWorker()
	{
	}
}
[Token(Token = "0x2000218")]
public class ChoiceQuestion : NextStepCondition
{
	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private QuestionManager questionManagerScript;

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x9205A8", Offset = "0x9205A8", VA = "0x9205A8")]
	public ChoiceQuestion(QuestionManager _questionManager)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x9205D4", Offset = "0x9205D4", VA = "0x9205D4", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x9205F0", Offset = "0x9205F0", VA = "0x9205F0", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x920698", Offset = "0x920698", VA = "0x920698", Slot = "6")]
	public override void OnComplete()
	{
	}
}
[Token(Token = "0x2000219")]
public class Ver2DiggingSoil : NextStepCondition
{
	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject bucket;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject dirtPile;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider bucketCollider;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider dirtPileCollider;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 bucketCenter;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xD69C80", Offset = "0xD69C80", VA = "0xD69C80")]
	public Ver2DiggingSoil(GameObject _bucket, GameObject _dirtPile)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xD69CB8", Offset = "0xD69CB8", VA = "0xD69CB8", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xD69DA4", Offset = "0xD69DA4", VA = "0xD69DA4", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xD69EA8", Offset = "0xD69EA8", VA = "0xD69EA8", Slot = "6")]
	public override void OnComplete()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xD69DE8", Offset = "0xD69DE8", VA = "0xD69DE8")]
	public bool IsDigging()
	{
		return default(bool);
	}
}
[Token(Token = "0x200021A")]
public class Ver2DumpingSoil : NextStepCondition
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int MAX_DUMPING_SOIL;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject truck;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject truckSoil;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject dirtPile;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject DumperColliderGO;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject bucket;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Collider dumperCollider;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider bucketCollider;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider dirtPileCollider;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BucketShaveSoil bucketScript;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 bucketCenter;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TruckControl truckControl;

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xD69EC8", Offset = "0xD69EC8", VA = "0xD69EC8")]
	public Ver2DumpingSoil(GameObject _truck, GameObject _dirtPile, GameObject _truckSoil, GameObject _DumperColliderGO, GameObject _bucket, int _max_dumping_soil)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xD69F2C", Offset = "0xD69F2C", VA = "0xD69F2C", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xD6A074", Offset = "0xD6A074", VA = "0xD6A074", Slot = "5")]
	public override bool CheckSuccess()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xD6A338", Offset = "0xD6A338", VA = "0xD6A338", Slot = "6")]
	public override void OnComplete()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xD6A170", Offset = "0xD6A170", VA = "0xD6A170")]
	private bool checkFallSoil()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xD6A0B0", Offset = "0xD6A0B0", VA = "0xD6A0B0")]
	public bool IsDigging()
	{
		return default(bool);
	}
}
[Token(Token = "0x200021B")]
public class WorkerActivityControl : MonoBehaviour
{
	[Token(Token = "0x2000507")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7152A4", Offset = "0x7152A4")]
	private sealed class <DisableWhenFalling>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorkerActivityControl <>4__this;

		[Token(Token = "0x170002D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0xD6EDEC", Offset = "0xD6EDEC", VA = "0xD6EDEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0xD6EE54", Offset = "0xD6EE54", VA = "0xD6EE54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xD6E92C", Offset = "0xD6E92C", VA = "0xD6E92C")]
		[DebuggerHidden]
		public <DisableWhenFalling>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xD6ED30", Offset = "0xD6ED30", VA = "0xD6ED30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xD6ED34", Offset = "0xD6ED34", VA = "0xD6ED34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xD6EDF4", Offset = "0xD6EDF4", VA = "0xD6EDF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E74")]
	private const float WORKER_HEIGHT = 2f;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform raycastTarget;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 beginTarget;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WorkerController workerScript;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NavMeshObstacle obstacle;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 currentTarget;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 beginTransform;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool wasDetectedHuman;

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xD6E288", Offset = "0xD6E288", VA = "0xD6E288")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xD6E354", Offset = "0xD6E354", VA = "0xD6E354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xD6E4EC", Offset = "0xD6E4EC", VA = "0xD6E4EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xD6E6B0", Offset = "0xD6E6B0", VA = "0xD6E6B0")]
	private void SetMoveTarget()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xD6E568", Offset = "0xD6E568", VA = "0xD6E568")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FB4C", Offset = "0x71FB4C")]
	private IEnumerator DisableWhenFalling()
	{
		return null;
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xD6E7E4", Offset = "0xD6E7E4", VA = "0xD6E7E4")]
	private void ActivityDetectedHuman()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xD6E958", Offset = "0xD6E958", VA = "0xD6E958")]
	private GameObject HumanDetected()
	{
		return null;
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xD6ED28", Offset = "0xD6ED28", VA = "0xD6ED28")]
	public WorkerActivityControl()
	{
	}
}
[Token(Token = "0x200021C")]
public class CameraFreeflight : MonoBehaviour
{
	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedNormal;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedFast;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mouseSensitivityX;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseSensitivityY;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotY;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x918CF8", Offset = "0x918CF8", VA = "0x918CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x918DB8", Offset = "0x918DB8", VA = "0x918DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x919218", Offset = "0x919218", VA = "0x919218")]
	public CameraFreeflight()
	{
	}
}
[Token(Token = "0x200021D")]
public class OpenElement : MonoBehaviour
{
	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator Opening;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode keyboard;

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x9D25F8", Offset = "0x9D25F8", VA = "0x9D25F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x9D2650", Offset = "0x9D2650", VA = "0x9D2650")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x9D26F4", Offset = "0x9D26F4", VA = "0x9D26F4")]
	public OpenElement()
	{
	}
}
[Token(Token = "0x200021E")]
public class brake_light : MonoBehaviour
{
	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light[] lights;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode keyboard;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode keyboard2;

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xD71F28", Offset = "0xD71F28", VA = "0xD71F28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xD72070", Offset = "0xD72070", VA = "0xD72070")]
	public brake_light()
	{
	}
}
[Token(Token = "0x200021F")]
public class on_off_light : MonoBehaviour
{
	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light[] lights;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode keyboard;

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x111FBAC", Offset = "0x111FBAC", VA = "0x111FBAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x111FC58", Offset = "0x111FC58", VA = "0x111FC58")]
	public on_off_light()
	{
	}
}
[Token(Token = "0x2000220")]
public class FreeflightCamera : MonoBehaviour
{
	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedNormal;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedFast;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mouseSensitivityX;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseSensitivityY;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotY;

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xBFE020", Offset = "0xBFE020", VA = "0xBFE020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xBFE0E0", Offset = "0xBFE0E0", VA = "0xBFE0E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xBFE540", Offset = "0xBFE540", VA = "0xBFE540")]
	public FreeflightCamera()
	{
	}
}
[Token(Token = "0x2000221")]
public class ParticleForceFieldsDemo : MonoBehaviour
{
	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A21C", Offset = "0x71A21C")]
	public Text FPSText;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text particleCountText;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.UI.Toggle postProcessingToggle;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MonoBehaviour postProcessing;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A254", Offset = "0x71A254")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.MainModule particleSystemMainModule;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem.EmissionModule particleSystemEmissionModule;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text maxParticlesText;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text particlesPerSecondText;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider maxParticlesSlider;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider particlesPerSecondSlider;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A28C", Offset = "0x71A28C")]
	public AttractionParticleForceField attractionParticleForceField;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text attractionParticleForceFieldRadiusText;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text attractionParticleForceFieldMaxForceText;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text attractionParticleForceFieldArrivalRadiusText;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text attractionParticleForceFieldArrivedRadiusText;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text attractionParticleForceFieldPositionTextX;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text attractionParticleForceFieldPositionTextY;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text attractionParticleForceFieldPositionTextZ;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Slider attractionParticleForceFieldRadiusSlider;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Slider attractionParticleForceFieldMaxForceSlider;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Slider attractionParticleForceFieldArrivalRadiusSlider;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Slider attractionParticleForceFieldArrivedRadiusSlider;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Slider attractionParticleForceFieldPositionSliderX;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Slider attractionParticleForceFieldPositionSliderY;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Slider attractionParticleForceFieldPositionSliderZ;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A2C4", Offset = "0x71A2C4")]
	public VortexParticleForceField vortexParticleForceField;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text vortexParticleForceFieldRadiusText;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text vortexParticleForceFieldMaxForceText;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text vortexParticleForceFieldRotationTextX;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text vortexParticleForceFieldRotationTextY;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text vortexParticleForceFieldRotationTextZ;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text vortexParticleForceFieldPositionTextX;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text vortexParticleForceFieldPositionTextY;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text vortexParticleForceFieldPositionTextZ;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Slider vortexParticleForceFieldRadiusSlider;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Slider vortexParticleForceFieldMaxForceSlider;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Slider vortexParticleForceFieldRotationSliderX;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Slider vortexParticleForceFieldRotationSliderY;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Slider vortexParticleForceFieldRotationSliderZ;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Slider vortexParticleForceFieldPositionSliderX;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Slider vortexParticleForceFieldPositionSliderY;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Slider vortexParticleForceFieldPositionSliderZ;

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xA8BE8C", Offset = "0xA8BE8C", VA = "0xA8BE8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xA8C8AC", Offset = "0xA8C8AC", VA = "0xA8C8AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xA8C9C4", Offset = "0xA8C9C4", VA = "0xA8C9C4")]
	public void ReloadScene()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xA8CA44", Offset = "0xA8CA44", VA = "0xA8CA44")]
	public void SetMaxParticles(float value)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xA8CAF8", Offset = "0xA8CAF8", VA = "0xA8CAF8")]
	public void SetParticleEmissionPerSecond(float value)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xA8CBD0", Offset = "0xA8CBD0", VA = "0xA8CBD0")]
	public void SetAttractionParticleForceFieldRadius(float value)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xA8CC80", Offset = "0xA8CC80", VA = "0xA8CC80")]
	public void SetAttractionParticleForceFieldMaxForce(float value)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xA8CD30", Offset = "0xA8CD30", VA = "0xA8CD30")]
	public void SetAttractionParticleForceFieldArrivalRadius(float value)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xA8CDE0", Offset = "0xA8CDE0", VA = "0xA8CDE0")]
	public void SetAttractionParticleForceFieldArrivedRadius(float value)
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xA8CE90", Offset = "0xA8CE90", VA = "0xA8CE90")]
	public void SetAttractionParticleForceFieldPositionX(float value)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xA8CF88", Offset = "0xA8CF88", VA = "0xA8CF88")]
	public void SetAttractionParticleForceFieldPositionY(float value)
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xA8D080", Offset = "0xA8D080", VA = "0xA8D080")]
	public void SetAttractionParticleForceFieldPositionZ(float value)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xA8D178", Offset = "0xA8D178", VA = "0xA8D178")]
	public void SetVortexParticleForceFieldRadius(float value)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xA8D228", Offset = "0xA8D228", VA = "0xA8D228")]
	public void SetVortexParticleForceFieldMaxForce(float value)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xA8D2D8", Offset = "0xA8D2D8", VA = "0xA8D2D8")]
	public void SetVortexParticleForceFieldRotationX(float value)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xA8D3D0", Offset = "0xA8D3D0", VA = "0xA8D3D0")]
	public void SetVortexParticleForceFieldRotationY(float value)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xA8D4C8", Offset = "0xA8D4C8", VA = "0xA8D4C8")]
	public void SetVortexParticleForceFieldRotationZ(float value)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xA8D5C0", Offset = "0xA8D5C0", VA = "0xA8D5C0")]
	public void SetVortexParticleForceFieldPositionX(float value)
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xA8D6B8", Offset = "0xA8D6B8", VA = "0xA8D6B8")]
	public void SetVortexParticleForceFieldPositionY(float value)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xA8D7B0", Offset = "0xA8D7B0", VA = "0xA8D7B0")]
	public void SetVortexParticleForceFieldPositionZ(float value)
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xA8D8A8", Offset = "0xA8D8A8", VA = "0xA8D8A8")]
	public ParticleForceFieldsDemo()
	{
	}
}
[Token(Token = "0x2000222")]
public class ParticleForceFieldsDemo_CameraRig : MonoBehaviour
{
	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pivot;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 targetRotation;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A2FC", Offset = "0x71A2FC")]
	public float rotationLimit;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeed;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationLerpSpeed;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startRotation;

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xA8D8B0", Offset = "0xA8D8B0", VA = "0xA8D8B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xA8D8F0", Offset = "0xA8D8F0", VA = "0xA8D8F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xA8DA90", Offset = "0xA8DA90", VA = "0xA8DA90")]
	public ParticleForceFieldsDemo_CameraRig()
	{
	}
}
[Token(Token = "0x2000223")]
public class ParticlePlexusDemo_CameraRig : MonoBehaviour
{
	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pivot;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 targetRotation;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A318", Offset = "0x71A318")]
	public float rotationLimit;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeed;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotationLerpSpeed;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startRotation;

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xA8DAAC", Offset = "0xA8DAAC", VA = "0xA8DAAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xA8DAEC", Offset = "0xA8DAEC", VA = "0xA8DAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xA8DC8C", Offset = "0xA8DC8C", VA = "0xA8DC8C")]
	public ParticlePlexusDemo_CameraRig()
	{
	}
}
[Token(Token = "0x2000224")]
public class DoNotDestroyOnLoad_perName : MonoBehaviour
{
	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<string> list;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xBF04B0", Offset = "0xBF04B0", VA = "0xBF04B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xBF0594", Offset = "0xBF0594", VA = "0xBF0594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xBF0668", Offset = "0xBF0668", VA = "0xBF0668")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xBF066C", Offset = "0xBF066C", VA = "0xBF066C")]
	public DoNotDestroyOnLoad_perName()
	{
	}
}
[Token(Token = "0x2000225")]
public class ExampleCam : MonoBehaviour
{
	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MouseOrbitImproved mouseOrbit;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MonoBehaviour> ImageEffectsList;

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xBF24E0", Offset = "0xBF24E0", VA = "0xBF24E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xBF24E4", Offset = "0xBF24E4", VA = "0xBF24E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xBF24E8", Offset = "0xBF24E8", VA = "0xBF24E8")]
	public ExampleCam()
	{
	}
}
[Token(Token = "0x2000226")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7139D4", Offset = "0x7139D4")]
public class ExampleUI : MonoBehaviour
{
	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text displayedName;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InterfaceAnimManager current;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int indexInterface;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InterfaceAnimManager[] holoInterfaceList;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ExampleCam currentCam;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string searchTarget;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string searchCam;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int indexScene;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool allDelaysStatus;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool allImgEffectsStatus;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<string> loadableScenes;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject fullscreenSwith;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource audioSource;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xBF2558", Offset = "0xBF2558", VA = "0xBF2558")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xBF29F8", Offset = "0xBF29F8", VA = "0xBF29F8")]
	private void playSound()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xBF2A9C", Offset = "0xBF2A9C", VA = "0xBF2A9C")]
	public void DoOutFullscreen()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xBF2AD4", Offset = "0xBF2AD4", VA = "0xBF2AD4")]
	public void DoChangeEnvironment()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xBF2B98", Offset = "0xBF2B98", VA = "0xBF2B98")]
	private void OnLevelWasLoaded()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xBF273C", Offset = "0xBF273C", VA = "0xBF273C")]
	private void InitCam()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xBF2B9C", Offset = "0xBF2B9C", VA = "0xBF2B9C")]
	public void DoSwitchAutoCam()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xBF2BE4", Offset = "0xBF2BE4", VA = "0xBF2BE4")]
	public void DoSwitchCameraEffects()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xBF2DA4", Offset = "0xBF2DA4", VA = "0xBF2DA4")]
	public void DoSwitchAnimDelays()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xBF2F04", Offset = "0xBF2F04", VA = "0xBF2F04")]
	public void DoAppear()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xBF2FB8", Offset = "0xBF2FB8", VA = "0xBF2FB8")]
	public void DoDisappear()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xBF304C", Offset = "0xBF304C", VA = "0xBF304C")]
	public void DoNext()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xBF30C8", Offset = "0xBF30C8", VA = "0xBF30C8")]
	public void DoPrevious()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xBF2628", Offset = "0xBF2628", VA = "0xBF2628")]
	private void CallInterface(InterfaceAnimManager _interface)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xBF3144", Offset = "0xBF3144", VA = "0xBF3144")]
	public void UpdateDisplayedInfo()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xBF3210", Offset = "0xBF3210", VA = "0xBF3210")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xBF3248", Offset = "0xBF3248", VA = "0xBF3248")]
	public ExampleUI()
	{
	}
}
[Token(Token = "0x2000227")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x713A0C", Offset = "0x713A0C")]
public class ExcelsiorUtils : MonoBehaviour
{
	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip audioClip;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text textContent;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider slider;

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xBFB718", Offset = "0xBFB718", VA = "0xBFB718")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xBFB71C", Offset = "0xBFB71C", VA = "0xBFB71C")]
	private void playSound()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xBFB7C8", Offset = "0xBFB7C8", VA = "0xBFB7C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xBFB7CC", Offset = "0xBFB7CC", VA = "0xBFB7CC")]
	public void SetPosition(int _scaleValue)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xBFB87C", Offset = "0xBFB87C", VA = "0xBFB87C")]
	public void SetPositionAndScaleTo(GameObject _object)
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xBFB9A0", Offset = "0xBFB9A0", VA = "0xBFB9A0")]
	public void SetUniformScale(int _scaleValue)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xBFBA50", Offset = "0xBFBA50", VA = "0xBFBA50")]
	public void SetUniformWidthHeight(int _widthHeightValue)
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xBFBB64", Offset = "0xBFBB64", VA = "0xBFBB64")]
	public void SetImageColor(int _colorID)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xBFBC38", Offset = "0xBFBC38", VA = "0xBFBC38")]
	public void OpenWebPage()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xBFBC90", Offset = "0xBFBC90", VA = "0xBFBC90")]
	public void GetSliderValue_ToText()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xBFBCFC", Offset = "0xBFBCFC", VA = "0xBFBCFC")]
	public ExcelsiorUtils()
	{
	}
}
[Token(Token = "0x2000228")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x713A44", Offset = "0x713A44")]
public class InterfaceAnimManager : MonoBehaviour
{
	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7152B4", Offset = "0x7152B4")]
	private sealed class <Disable_OnDisappearEnd>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InterfaceAnimManager <>4__this;

		[Token(Token = "0x170002DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0xB477E4", Offset = "0xB477E4", VA = "0xB477E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xB4784C", Offset = "0xB4784C", VA = "0xB4784C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xB468C4", Offset = "0xB468C4", VA = "0xB468C4")]
		[DebuggerHidden]
		public <Disable_OnDisappearEnd>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xB47420", Offset = "0xB47420", VA = "0xB47420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xB47424", Offset = "0xB47424", VA = "0xB47424", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xB477EC", Offset = "0xB477EC", VA = "0xB477EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7152C4", Offset = "0x7152C4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<InterfaceAnmElement, int> <>9__27_0;

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xB47400", Offset = "0xB47400", VA = "0xB47400")]
		public <>c()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xB47408", Offset = "0xB47408", VA = "0xB47408")]
		internal int <UpdateAnimClips>b__27_0(InterfaceAnmElement x)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<InterfaceAnmElement> elementsList;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoStart;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool invertDelays;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool cloneDelays;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timer;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int timeBetweenLoops;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool testLoop;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool autoLinearAppearDelay;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float appearDelay_SpeedMultiplier;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float disappearDelay_SpeedMultiplier;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CSFHIAnimableState currentState;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool useDelays;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource audioSource;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip openSound;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip closeSound;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<InterfaceAnimManager> nestedIAM;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool waitAppear_Nested;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool waitDisappear_Nested;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InterfaceAnmElement waitElementFullAnim;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xB445B8", Offset = "0xB445B8", VA = "0xB445B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xB44610", Offset = "0xB44610", VA = "0xB44610")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xB455EC", Offset = "0xB455EC", VA = "0xB455EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xB464B4", Offset = "0xB464B4", VA = "0xB464B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FBB0", Offset = "0x71FBB0")]
	public IEnumerator Disable_OnDisappearEnd()
	{
		return null;
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xB468F0", Offset = "0xB468F0", VA = "0xB468F0", Slot = "4")]
	public virtual void startAppear(bool direct = false)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xB464A4", Offset = "0xB464A4", VA = "0xB464A4")]
	private void endAppear()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xB46CD0", Offset = "0xB46CD0", VA = "0xB46CD0", Slot = "5")]
	public virtual void startDisappear(bool direct = false)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xB46524", Offset = "0xB46524", VA = "0xB46524")]
	private void endDisappear()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xB44678", Offset = "0xB44678", VA = "0xB44678")]
	public void UpdateAnimClips()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xB46EA4", Offset = "0xB46EA4", VA = "0xB46EA4")]
	public bool isIAM_Root()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xB472DC", Offset = "0xB472DC", VA = "0xB472DC")]
	public InterfaceAnimManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000229")]
public enum CSFHIAnimableState
{
	[Token(Token = "0x4000EED")]
	appearing,
	[Token(Token = "0x4000EEE")]
	appeared,
	[Token(Token = "0x4000EEF")]
	disappearing,
	[Token(Token = "0x4000EF0")]
	disappeared
}
[Serializable]
[Token(Token = "0x200022A")]
public class InterfaceAnmElement : MonoBehaviour
{
	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gameObjectRef;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeAppear;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeDisappear;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool recycling;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int sortID;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationClip[] animClips;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<InterfaceAnmElement> list;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CSFHIAnimableState currentState;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isNested_IAM;

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xB46FA8", Offset = "0xB46FA8", VA = "0xB46FA8")]
	public static InterfaceAnmElement Create(GameObject _gameObjectRef, int _newSortID, bool _isNested_IAM)
	{
		return null;
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xB47854", Offset = "0xB47854", VA = "0xB47854", Slot = "4")]
	public virtual InterfaceAnmElement Confirm(GameObject _gameObjectRef, int _newSortID, bool isNested_IAM)
	{
		return null;
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xB471B0", Offset = "0xB471B0", VA = "0xB471B0")]
	public void UpdateProperties()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xB47970", Offset = "0xB47970", VA = "0xB47970", Slot = "5")]
	public virtual void Delete()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xB47998", Offset = "0xB47998", VA = "0xB47998")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xB47A68", Offset = "0xB47A68", VA = "0xB47A68")]
	public InterfaceAnmElement()
	{
	}
}
[Token(Token = "0x200022B")]
public class MouseOrbitImproved : MonoBehaviour
{
	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distanceMin;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMax;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float smoothTime;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rotationYAxis;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationXAxis;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float velocityX;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityY;

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xDEACC4", Offset = "0xDEACC4", VA = "0xDEACC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xDEADA0", Offset = "0xDEADA0", VA = "0xDEADA0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xDEB1A0", Offset = "0xDEB1A0", VA = "0xDEB1A0")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xDEB250", Offset = "0xDEB250", VA = "0xDEB250")]
	public MouseOrbitImproved()
	{
	}
}
[Token(Token = "0x200022C")]
public class SimpleLoading : MonoBehaviour
{
	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform rectComponent;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image imageComp;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotateSpeed;

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x8EB368", Offset = "0x8EB368", VA = "0x8EB368")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x8EB3DC", Offset = "0x8EB3DC", VA = "0x8EB3DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x8EB428", Offset = "0x8EB428", VA = "0x8EB428")]
	public SimpleLoading()
	{
	}
}
[Token(Token = "0x200022D")]
public class rotatetotate : MonoBehaviour
{
	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform rectComponent;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image imageComp;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool up;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotateSpeed;

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x15CDB28", Offset = "0x15CDB28", VA = "0x15CDB28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x15CDB9C", Offset = "0x15CDB9C", VA = "0x15CDB9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x15CDBE8", Offset = "0x15CDBE8", VA = "0x15CDBE8")]
	public rotatetotate()
	{
	}
}
[Token(Token = "0x200022E")]
public class CamTarget : MonoBehaviour
{
	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float camSpeed;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lerpPos;

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x917478", Offset = "0x917478", VA = "0x917478")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x9175C8", Offset = "0x9175C8", VA = "0x9175C8")]
	public CamTarget()
	{
	}
}
[Token(Token = "0x200022F")]
public class CharacterDemoController : MonoBehaviour
{
	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject floorPlane;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WeaponState;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool wasAttacking;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotateSpeed;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 movementTargetPosition;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 attackPos;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 lookAtPos;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float gravity;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit hit;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Ray ray;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool rightButtonDown;

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x91C4F4", Offset = "0x91C4F4", VA = "0x91C4F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x91C570", Offset = "0x91C570", VA = "0x91C570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x91D044", Offset = "0x91D044", VA = "0x91D044")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x91D0EC", Offset = "0x91D0EC", VA = "0x91D0EC")]
	public CharacterDemoController()
	{
	}
}
[Token(Token = "0x2000230")]
public class MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float distance;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float xSpeed;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float ySpeed;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float x;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float y;

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xDEA6BC", Offset = "0xDEA6BC", VA = "0xDEA6BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xDEA798", Offset = "0xDEA798", VA = "0xDEA798")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xDEABCC", Offset = "0xDEABCC", VA = "0xDEABCC")]
	private float ClampAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xDEABF8", Offset = "0xDEABF8", VA = "0xDEABF8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xDEACA0", Offset = "0xDEACA0", VA = "0xDEACA0")]
	public MouseOrbit()
	{
	}
}
[Serializable]
[Token(Token = "0x2000231")]
public class Outfitter : MonoBehaviour
{
	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterDemoController ac;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int oldWeaponIndex;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<WeaponSlot> weapons;

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x9D26FC", Offset = "0x9D26FC", VA = "0x9D26FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x9D2928", Offset = "0x9D2928", VA = "0x9D2928")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x9D2B2C", Offset = "0x9D2B2C", VA = "0x9D2B2C")]
	public Outfitter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000232")]
public class WeaponSlot
{
	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public List<Renderer> models;

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xD6E218", Offset = "0xD6E218", VA = "0xD6E218")]
	public WeaponSlot()
	{
	}
}
[Token(Token = "0x2000233")]
public class RootMotionOff : StateMachineBehaviour
{
	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ColliderTestTime;

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x957500", Offset = "0x957500", VA = "0x957500", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x957520", Offset = "0x957520", VA = "0x957520", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x957540", Offset = "0x957540", VA = "0x957540")]
	public RootMotionOff()
	{
	}
}
[Token(Token = "0x2000234")]
public class SkinnedMeshCombiner : MonoBehaviour
{
	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material baseMat;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer newSkin;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SkinnedMeshRenderer> smRenderers;

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x8ED604", Offset = "0x8ED604", VA = "0x8ED604")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x8EDF48", Offset = "0x8EDF48", VA = "0x8EDF48")]
	public SkinnedMeshCombiner()
	{
	}
}
[Token(Token = "0x2000235")]
public class Cabin : MonoBehaviour
{
	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Door_Left;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode keyLeftDoor;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float angelFB_LeftDoor;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float smooth;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion tRotationLeft_Door;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool a;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Door_Right;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public KeyCode keyRightDoor;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float angelFB_RightDoor;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion tRotationRight_Door;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool b;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform Window_Left;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public KeyCode keyLeftWindow;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float angelFB_LeftWindow;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion tRotationLeft_Window;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool c;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform Window_Right;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public KeyCode keyRightWindow;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float angelFB_RightWindow;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion tRotationRight_Window;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool d;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AudioSource sound_Door;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip doorS;

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x916774", Offset = "0x916774", VA = "0x916774")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x916860", Offset = "0x916860", VA = "0x916860")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x917234", Offset = "0x917234", VA = "0x917234")]
	public Cabin()
	{
	}
}
[Token(Token = "0x2000236")]
public class CameraOrbitCar : MonoBehaviour
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target_Car;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float x;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float y;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float xSpeed;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float ySpeed;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float yMinLi;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float yMaxLi;

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x9196F4", Offset = "0x9196F4", VA = "0x9196F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x9199C4", Offset = "0x9199C4", VA = "0x9199C4")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x919A74", Offset = "0x919A74", VA = "0x919A74")]
	public CameraOrbitCar()
	{
	}
}
[Token(Token = "0x2000237")]
public class CarController : MonoBehaviour
{
	[Token(Token = "0x200050A")]
	public class WheelData
	{
		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform wheelTransform;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WheelCollider col;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 wheelStartPos;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rotation;

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x919D24", Offset = "0x919D24", VA = "0x919D24")]
		public WheelData()
		{
		}
	}

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rg;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WheelCollider[] WColForward;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WheelCollider[] WColBack;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] wheelsF;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] wheelsB;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float wheelOffset;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float wheelRadius;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxSteer;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxAccel;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxBrake;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float braking_on_the_go;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform COM;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected WheelData[] wheels;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float startPitch;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float minPitch;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float maxPitch;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource audioSourceCar;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float starSCar;

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x919A90", Offset = "0x919A90", VA = "0x919A90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x919C88", Offset = "0x919C88", VA = "0x919C88")]
	private WheelData SetupWheels(Transform wheel, WheelCollider col)
	{
		return null;
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x919D2C", Offset = "0x919D2C", VA = "0x919D2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x919E6C", Offset = "0x919E6C", VA = "0x919E6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x91A104", Offset = "0x91A104", VA = "0x91A104")]
	private void UpdateWheels()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x919EF4", Offset = "0x919EF4", VA = "0x919EF4")]
	private void CarMove(float accel, float steer)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x919D30", Offset = "0x919D30", VA = "0x919D30")]
	private void SoundCar()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x91A3F0", Offset = "0x91A3F0", VA = "0x91A3F0")]
	public CarController()
	{
	}
}
[Token(Token = "0x2000238")]
[ExecuteInEditMode]
public class FrontArrow : MonoBehaviour
{
	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode KeyFOR1;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode KeyAB1;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode KeyBAK1;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode KeyFOR2;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode KeyAB2;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode KeyBAK2;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Det;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform arm;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform plate;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 armRot;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 plateRot;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 DetRot;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float DetSpeed;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float armSpeed;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float plateSpeed;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float minArmAngle;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float maxArmAngle;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float minDetAngle;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float maxDetAngle;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float minPlateAngle;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float maxPlateAngle;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform Pis1T;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform Pis2T;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform Pis1J;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform Pis2J;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform Pis1K;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform Pis2K;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform Pis1H;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform Pis2H;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform Pis1C;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform Pis2C;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioSource audioF;

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xBFE554", Offset = "0xBFE554", VA = "0xBFE554")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xBFE5F8", Offset = "0xBFE5F8", VA = "0xBFE5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xBFE9A8", Offset = "0xBFE9A8", VA = "0xBFE9A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xBFEF70", Offset = "0xBFEF70", VA = "0xBFEF70")]
	public FrontArrow()
	{
	}
}
[Token(Token = "0x2000239")]
[ExecuteInEditMode]
public class FrontBucket : MonoBehaviour
{
	[Token(Token = "0x200050B")]
	public enum RotAxis
	{
		[Token(Token = "0x4001E42")]
		XAxis,
		[Token(Token = "0x4001E43")]
		YAxis,
		[Token(Token = "0x4001E44")]
		ZAxis
	}

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Pis1T;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Pis2T;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode KeyFOR;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode KeyAB;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode KeyBAK;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minValue;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxValue;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 myRotation;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform target;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RotAxis myRotAxis;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RearArron soundT;

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xBFEF78", Offset = "0xBFEF78", VA = "0xBFEF78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xBFEFB0", Offset = "0xBFEFB0", VA = "0xBFEFB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xBFF3A0", Offset = "0xBFF3A0", VA = "0xBFF3A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xBFF0B8", Offset = "0xBFF0B8", VA = "0xBFF0B8")]
	public void Frontbucketfor()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xBFF22C", Offset = "0xBFF22C", VA = "0xBFF22C")]
	public void Frontbucketrea()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xBFF528", Offset = "0xBFF528", VA = "0xBFF528")]
	public FrontBucket()
	{
	}
}
[Token(Token = "0x200023A")]
public class FrontLift : MonoBehaviour
{
	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetA_L;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetB_R;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode KeyFOR_L;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode KeyAB_L;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public KeyCode KeyBAK_L;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 forwardPos_L;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 rearPos_L;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public KeyCode KeyFOR_R;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode KeyAB_R;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public KeyCode KeyBAK_R;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 forwardPos_R;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 rearPos_R;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RearArron soundG;

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xBFF530", Offset = "0xBFF530", VA = "0xBFF530")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xBFF534", Offset = "0xBFF534", VA = "0xBFF534")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xBFF71C", Offset = "0xBFF71C", VA = "0xBFF71C")]
	public void FrontliftupL()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xBFF828", Offset = "0xBFF828", VA = "0xBFF828")]
	public void FrontliftdowenL()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xBFF934", Offset = "0xBFF934", VA = "0xBFF934")]
	public void FrontliftupR()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xBFFA40", Offset = "0xBFFA40", VA = "0xBFFA40")]
	public void FrontliftdowenR()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xBFFB4C", Offset = "0xBFFB4C", VA = "0xBFFB4C")]
	public FrontLift()
	{
	}
}
[Token(Token = "0x200023B")]
[ExecuteInEditMode]
public class RearArron : MonoBehaviour
{
	[Token(Token = "0x200050C")]
	public enum RotAxis_Arrow1
	{
		[Token(Token = "0x4001E46")]
		XAxis,
		[Token(Token = "0x4001E47")]
		YAxis,
		[Token(Token = "0x4001E48")]
		ZAxis
	}

	[Token(Token = "0x200050D")]
	public enum RotAxis_Arrow2
	{
		[Token(Token = "0x4001E4A")]
		XAxis,
		[Token(Token = "0x4001E4B")]
		YAxis,
		[Token(Token = "0x4001E4C")]
		ZAxis
	}

	[Token(Token = "0x200050E")]
	public enum RotAxis_Arrow3
	{
		[Token(Token = "0x4001E4E")]
		XAxis,
		[Token(Token = "0x4001E4F")]
		YAxis,
		[Token(Token = "0x4001E50")]
		ZAxis
	}

	[Token(Token = "0x200050F")]
	public enum RotAxis_Arrow4
	{
		[Token(Token = "0x4001E52")]
		XAxis,
		[Token(Token = "0x4001E53")]
		YAxis,
		[Token(Token = "0x4001E54")]
		ZAxis
	}

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetA_L;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetB_R;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode KeyFOR_L;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode KeyAB_L;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public KeyCode KeyBAK_L;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 forwardPos_L;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 rearPos_L;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public KeyCode KeyFOR_R;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode KeyAB_R;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public KeyCode KeyBAK_R;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 forwardPos_R;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 rearPos_R;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform arrow0;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public KeyCode KeyFOR_Arrow;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public KeyCode KeyAB_Arrow;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public KeyCode KeyBAK_Arrow;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 forwardPos_Arrow;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 rearPos_Arrow;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float speedRear_Arron;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform Arrow1;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public KeyCode KeyFOR_Arrow1;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public KeyCode KeyAB_Arrow1;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public KeyCode KeyBAK_Arrow1;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float speedRear_Arrow1;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float minValue_Arrow1;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float maxValue_Arrow1;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 myRotation_Arrow1;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public RotAxis_Arrow1 myRotAxis_Arrow1;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform Arrow2;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public KeyCode KeyFOR_Arrow2;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public KeyCode KeyAB_Arrow2;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public KeyCode KeyBAK_Arrow2;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float speedRear_Arrow2;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float minValue_Arrow2;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float maxValue_Arrow2;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 myRotation_Arrow2;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public RotAxis_Arrow2 myRotAxis_Arrow2;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform Arrow3;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public KeyCode KeyFOR_Arrow3;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public KeyCode KeyAB_Arrow3;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public KeyCode KeyBAK_Arrow3;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float speedRear_Arrow3;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float minValue_Arrow3;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float maxValue_Arrow3;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 myRotation_Arrow3;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public RotAxis_Arrow3 myRotAxis_Arrow3;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform Arrow4;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public KeyCode KeyFOR_Arrow4;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public KeyCode KeyAB_Arrow4;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public KeyCode KeyBAK_Arrow4;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float speedRear_Arrow4;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float minValue_Arrow4;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float maxValue_Arrow4;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 myRotation_Arrow4;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public RotAxis_Arrow4 myRotAxis_Arrow4;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform arrow5;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public KeyCode KeyFOR_Arrow5;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public KeyCode KeyAB_Arrow5;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public KeyCode KeyBAK_Arrow5;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Vector3 forwardPos_Arrow5;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Vector3 rearPos_Arrow5;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float speedRear_Arron5;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform Piston1F;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform Piston2F;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform Piston1G;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform Piston2G;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform Piston1B;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform Piston2B;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform Piston1D;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Transform Piston2D;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Transform Piston1C;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Transform Piston2C;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Transform Det1D;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Transform Det2D;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Transform Det1C;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Transform Det2C;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public AudioSource audioF;

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x948074", Offset = "0x948074", VA = "0x948074")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x94813C", Offset = "0x94813C", VA = "0x94813C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x949AE8", Offset = "0x949AE8", VA = "0x949AE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x948764", Offset = "0x948764", VA = "0x948764")]
	public void RearliftupL()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x948870", Offset = "0x948870", VA = "0x948870")]
	public void RearliftdowenL()
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x94897C", Offset = "0x94897C", VA = "0x94897C")]
	public void RearliftupR()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x948A88", Offset = "0x948A88", VA = "0x948A88")]
	public void RearliftdowenR()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x948B94", Offset = "0x948B94", VA = "0x948B94")]
	public void Arrow0up()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x948CA0", Offset = "0x948CA0", VA = "0x948CA0")]
	public void Arrow0dowen()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x9498C8", Offset = "0x9498C8", VA = "0x9498C8")]
	public void Arrow5up()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x9499D8", Offset = "0x9499D8", VA = "0x9499D8")]
	public void Arrow5dowen()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x948DA8", Offset = "0x948DA8", VA = "0x948DA8")]
	public void Arrow1up()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x948F1C", Offset = "0x948F1C", VA = "0x948F1C")]
	public void Arrow1dowen()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x949090", Offset = "0x949090", VA = "0x949090")]
	public void Arrow2up()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x949204", Offset = "0x949204", VA = "0x949204")]
	public void Arrow2dowen()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x949378", Offset = "0x949378", VA = "0x949378")]
	public void Arrow3up()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x9494CC", Offset = "0x9494CC", VA = "0x9494CC")]
	public void Arrow3dowen()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x949620", Offset = "0x949620", VA = "0x949620")]
	public void Arrow4up()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x949774", Offset = "0x949774", VA = "0x949774")]
	public void Arrow4dowen()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x94A2D0", Offset = "0x94A2D0", VA = "0x94A2D0")]
	public RearArron()
	{
	}
}
[Token(Token = "0x200023C")]
[ExecuteInEditMode]
public class Ticks : MonoBehaviour
{
	[Token(Token = "0x2000510")]
	public enum RotAxis
	{
		[Token(Token = "0x4001E56")]
		XAxis,
		[Token(Token = "0x4001E57")]
		YAxis,
		[Token(Token = "0x4001E58")]
		ZAxis
	}

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Piston1A;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Piston2A;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode KeyFOR;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode KeyAB;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode KeyBAK;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minValue;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxValue;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 myRotation;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform target_Ticks;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RotAxis myRotAxis;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RearArron soundR;

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x8FA724", Offset = "0x8FA724", VA = "0x8FA724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x8FA75C", Offset = "0x8FA75C", VA = "0x8FA75C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x8FAB4C", Offset = "0x8FAB4C", VA = "0x8FAB4C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x8FA864", Offset = "0x8FA864", VA = "0x8FA864")]
	public void Ticksup()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x8FA9D8", Offset = "0x8FA9D8", VA = "0x8FA9D8")]
	public void Ticksdowen()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x8FACD4", Offset = "0x8FACD4", VA = "0x8FACD4")]
	public Ticks()
	{
	}
}
[Token(Token = "0x200023D")]
[ExecuteInEditMode]
public class Truck : MonoBehaviour
{
	[Token(Token = "0x2000511")]
	public enum RotAxis_Ladle
	{
		[Token(Token = "0x4001E5A")]
		XAxis,
		[Token(Token = "0x4001E5B")]
		YAxis,
		[Token(Token = "0x4001E5C")]
		ZAxis
	}

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cover;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode key_cover;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float angelFB_cover;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float smooth;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion tRotation_cover;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool a;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Piston1;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform Piston2;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Ladle;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public KeyCode KeyFOR_Ladle;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public KeyCode KeyAB_Ladle;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public KeyCode KeyBAK_Ladle;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float speedRear_Ladle;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minValue_Ladle;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxValue_Ladle;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 myRotation_Ladle;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public RotAxis_Ladle myRotAxis_Ladle;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource audioSourceLod;

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x8FAFE4", Offset = "0x8FAFE4", VA = "0x8FAFE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x8FB040", Offset = "0x8FB040", VA = "0x8FB040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x8FB6C4", Offset = "0x8FB6C4", VA = "0x8FB6C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x8FB3DC", Offset = "0x8FB3DC", VA = "0x8FB3DC")]
	public void Ladleup()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x8FB550", Offset = "0x8FB550", VA = "0x8FB550")]
	public void Ladledowen()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x8FB84C", Offset = "0x8FB84C", VA = "0x8FB84C")]
	public Truck()
	{
	}
}
[Token(Token = "0x200023E")]
public class UICont : MonoBehaviour
{
	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Hencock;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Truck;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FrontBucket;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject FrontLift;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Forks;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera Camera_Truck;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Camera Camera_Hencock;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera Start_Camera;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject openKey;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject controlMenu;

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x8FE45C", Offset = "0x8FE45C", VA = "0x8FE45C")]
	public void ControlUIHencock()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x8FE96C", Offset = "0x8FE96C", VA = "0x8FE96C")]
	public void ControlUiTruck()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x8FE4FC", Offset = "0x8FE4FC", VA = "0x8FE4FC")]
	public void SoundMy()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x8FE79C", Offset = "0x8FE79C", VA = "0x8FE79C")]
	public void Dop_ObHencock()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x8FE6BC", Offset = "0x8FE6BC", VA = "0x8FE6BC")]
	public void Dop_ObTruck()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x8FEA0C", Offset = "0x8FEA0C", VA = "0x8FEA0C")]
	public void MenuKey()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x8FEAF4", Offset = "0x8FEAF4", VA = "0x8FEAF4")]
	public void Equipment_A()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x8FEB4C", Offset = "0x8FEB4C", VA = "0x8FEB4C")]
	public void Equipment_B()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x8FEBA4", Offset = "0x8FEBA4", VA = "0x8FEBA4")]
	public void Equipment_C()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x8FEBFC", Offset = "0x8FEBFC", VA = "0x8FEBFC")]
	public void ControlMenu()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x8FEC70", Offset = "0x8FEC70", VA = "0x8FEC70")]
	public UICont()
	{
	}
}
[Token(Token = "0x200023F")]
public class FaceUpdate : MonoBehaviour
{
	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip[] animations;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator anim;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delayWeight;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float current;

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xBFBE60", Offset = "0xBFBE60", VA = "0xBFBE60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xBFBEB8", Offset = "0xBFBEB8", VA = "0xBFBEB8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xBFC030", Offset = "0xBFC030", VA = "0xBFC030")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xBFC0E0", Offset = "0xBFC0E0", VA = "0xBFC0E0")]
	public FaceUpdate()
	{
	}
}
[Token(Token = "0x2000240")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713ACC", Offset = "0x713ACC")]
public class IdleChanger : MonoBehaviour
{
	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7152D4", Offset = "0x7152D4")]
	private sealed class <RandomChange>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IdleChanger <>4__this;

		[Token(Token = "0x170002DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xB41AEC", Offset = "0xB41AEC", VA = "0xB41AEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0xB41B54", Offset = "0xB41B54", VA = "0xB41B54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xB419B8", Offset = "0xB419B8", VA = "0xB419B8")]
		[DebuggerHidden]
		public <RandomChange>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xB419E4", Offset = "0xB419E4", VA = "0xB419E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xB419E8", Offset = "0xB419E8", VA = "0xB419E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xB41AF4", Offset = "0xB41AF4", VA = "0xB41AF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimatorStateInfo currentState;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private AnimatorStateInfo previousState;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool _random;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _threshold;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _interval;

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xDA8508", Offset = "0xDA8508", VA = "0xDA8508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xDA85C4", Offset = "0xDA85C4", VA = "0xDA85C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xDA87E8", Offset = "0xDA87E8", VA = "0xDA87E8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xDA89A4", Offset = "0xDA89A4", VA = "0xDA89A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FC14", Offset = "0x71FC14")]
	private IEnumerator RandomChange()
	{
		return null;
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xDA8A14", Offset = "0xDA8A14", VA = "0xDA8A14")]
	public IdleChanger()
	{
	}
}
[Token(Token = "0x2000241")]
public class ThirdPersonCamera : MonoBehaviour
{
	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float smooth;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform standardPos;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform frontPos;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform jumpPos;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool bQuickSwitch;

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x8FA088", Offset = "0x8FA088", VA = "0x8FA088")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x8FA224", Offset = "0x8FA224", VA = "0x8FA224")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x8FA4E8", Offset = "0x8FA4E8", VA = "0x8FA4E8")]
	private void setCameraPositionNormalView()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x8FA2B8", Offset = "0x8FA2B8", VA = "0x8FA2B8")]
	private void setCameraPositionFrontView()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x8FA340", Offset = "0x8FA340", VA = "0x8FA340")]
	private void setCameraPositionJumpView()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x8FA714", Offset = "0x8FA714", VA = "0x8FA714")]
	public ThirdPersonCamera()
	{
	}
}
[Token(Token = "0x2000242")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713B30", Offset = "0x713B30")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713B30", Offset = "0x713B30")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713B30", Offset = "0x713B30")]
public class UnityChanControlScriptWithRgidBody : MonoBehaviour
{
	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float animSpeed;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lookSmoother;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useCurves;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float useCurvesHeight;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forwardSpeed;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float backwardSpeed;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotateSpeed;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float jumpPower;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CapsuleCollider col;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 velocity;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float orgColHight;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 orgVectColCenter;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator anim;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimatorStateInfo currentBaseState;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject cameraObject;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int idleState;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int locoState;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int jumpState;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int restState;

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x9063B0", Offset = "0x9063B0", VA = "0x9063B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x906484", Offset = "0x906484", VA = "0x906484")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x906C38", Offset = "0x906C38", VA = "0x906C38")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x906BF0", Offset = "0x906BF0", VA = "0x906BF0")]
	private void resetCollider()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x906EC0", Offset = "0x906EC0", VA = "0x906EC0")]
	public UnityChanControlScriptWithRgidBody()
	{
	}
}
[Token(Token = "0x2000243")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int frameCount;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float prevTime;

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xBFBD04", Offset = "0xBFBD04", VA = "0xBFBD04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xBFBD0C", Offset = "0xBFBD0C", VA = "0xBFBD0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xBFBE58", Offset = "0xBFBE58", VA = "0xBFBE58")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x2000244")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x713BE4", Offset = "0x713BE4")]
public class FloatingAssistant : MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform hmd;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshAgent agent;

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xBFD76C", Offset = "0xBFD76C", VA = "0xBFD76C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xBFD7C4", Offset = "0xBFD7C4", VA = "0xBFD7C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xBFDC44", Offset = "0xBFDC44", VA = "0xBFDC44")]
	public FloatingAssistant()
	{
	}
}
[Token(Token = "0x2000245")]
[ExecuteInEditMode]
public class restore : MonoBehaviour
{
	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x15CDAA0", Offset = "0x15CDAA0", VA = "0x15CDAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x15CDAA4", Offset = "0x15CDAA4", VA = "0x15CDAA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x15CDB20", Offset = "0x15CDB20", VA = "0x15CDB20")]
	public restore()
	{
	}
}
namespace VREasy
{
	[Token(Token = "0x2000246")]
	public class GenericVRcontroller : MonoBehaviour
	{
		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRNode vrnode;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool autohandconfig;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool state;

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x907D2C", Offset = "0x907D2C", VA = "0x907D2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x907DE0", Offset = "0x907DE0", VA = "0x907DE0")]
		private void activateNode(bool s)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x908050", Offset = "0x908050", VA = "0x908050")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x9081C8", Offset = "0x9081C8", VA = "0x9081C8")]
		public GenericVRcontroller()
		{
		}
	}
	[Token(Token = "0x2000247")]
	[ExecuteInEditMode]
	public class CrossSectionController : MonoBehaviour
	{
		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject crossSectionPlane;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 normal;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 position;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer rend;

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x9077A4", Offset = "0x9077A4", VA = "0x9077A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x9077FC", Offset = "0x9077FC", VA = "0x9077FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x9079B8", Offset = "0x9079B8", VA = "0x9079B8")]
		public CrossSectionController()
		{
		}
	}
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713C68", Offset = "0x713C68")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713C68", Offset = "0x713C68")]
	public class MoviePlayer : MonoBehaviour
	{
		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VideoPlayer videoPlayer;

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x90A40C", Offset = "0x90A40C", VA = "0x90A40C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x90A494", Offset = "0x90A494", VA = "0x90A494")]
		public void PlayMovie()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x90A4B0", Offset = "0x90A4B0", VA = "0x90A4B0")]
		public void PauseMovie()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x90A4CC", Offset = "0x90A4CC", VA = "0x90A4CC")]
		public void StopMovie()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x90A4E8", Offset = "0x90A4E8", VA = "0x90A4E8")]
		public MoviePlayer()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class ScreenshotMaker : MonoBehaviour
	{
		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRGrabTrigger trigger;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filename;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int screenshotMultiplier;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float lastTake;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float COOLDOWN;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader shader;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_Material;

		[Token(Token = "0x17000125")]
		private Material material
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x90CC00", Offset = "0x90CC00", VA = "0x90CC00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x90C980", Offset = "0x90C980", VA = "0x90C980")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x90CA9C", Offset = "0x90CA9C", VA = "0x90CA9C")]
		private void flashAnimationDelay()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x90CAC4", Offset = "0x90CAC4", VA = "0x90CAC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x90CCC4", Offset = "0x90CCC4", VA = "0x90CCC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x90CD74", Offset = "0x90CD74", VA = "0x90CD74")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x90CE84", Offset = "0x90CE84", VA = "0x90CE84")]
		public ScreenshotMaker()
		{
		}
	}
	[Token(Token = "0x200024A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713CF4", Offset = "0x713CF4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713CF4", Offset = "0x713CF4")]
	public class SplineController : MonoBehaviour
	{
		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _lineWidth;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _verticalAngle;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int _arrowCount;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Transform> ControlPoints;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ScrollSpeed;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int BEZIER_MULTIPLIER;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 up;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int curveCount;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector4 uvOffset;

		[Token(Token = "0x17000126")]
		public float LineWidth
		{
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x90DD84", Offset = "0x90DD84", VA = "0x90DD84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x90D9C4", Offset = "0x90D9C4", VA = "0x90D9C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public int VerticalAngle
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x90DEC8", Offset = "0x90DEC8", VA = "0x90DEC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x90DD8C", Offset = "0x90DD8C", VA = "0x90DD8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public MeshFilter Mesh_Filter
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x90DED0", Offset = "0x90DED0", VA = "0x90DED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private MeshRenderer meshRenderer
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x90DF68", Offset = "0x90DF68", VA = "0x90DF68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public int ArrowCount
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x90E000", Offset = "0x90E000", VA = "0x90E000")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x90E008", Offset = "0x90E008", VA = "0x90E008")]
			set
			{
			}
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x90E020", Offset = "0x90E020", VA = "0x90E020")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x90E0F8", Offset = "0x90E0F8", VA = "0x90E0F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x90D9DC", Offset = "0x90D9DC", VA = "0x90D9DC")]
		public void DrawCurve()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x90E5B0", Offset = "0x90E5B0", VA = "0x90E5B0")]
		private void createMesh(List<Vector3> points)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x90E3E8", Offset = "0x90E3E8", VA = "0x90E3E8")]
		private Vector3 CalculateCubicBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x90E288", Offset = "0x90E288", VA = "0x90E288")]
		private Vector3 CalculateQuadraticBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x90E17C", Offset = "0x90E17C", VA = "0x90E17C")]
		private bool checkPoints(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x90EBDC", Offset = "0x90EBDC", VA = "0x90EBDC")]
		public SplineController()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class StereoscopicViewer : MonoBehaviour
	{
		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D leftEyeImage;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D rightEyeImage;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VideoClip leftEyeClip;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VideoClip rightEyeClip;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float imageScale;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public STEREOSCOPIC_MODE mode;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int leftEyeLayer;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int rightEyeLayer;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool autodetectImageSize;

		[Token(Token = "0x1700012B")]
		public Texture2D LeftEyeImage
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xDF24A8", Offset = "0xDF24A8", VA = "0xDF24A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xDF24B0", Offset = "0xDF24B0", VA = "0xDF24B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public Texture2D RightEyeImage
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xDF28BC", Offset = "0xDF28BC", VA = "0xDF28BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0xDF28C4", Offset = "0xDF28C4", VA = "0xDF28C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public VideoClip LeftEyeClip
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xDF2CD0", Offset = "0xDF2CD0", VA = "0xDF2CD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xDF2CD8", Offset = "0xDF2CD8", VA = "0xDF2CD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public VideoClip RightEyeClip
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xDF3060", Offset = "0xDF3060", VA = "0xDF3060")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xDF3068", Offset = "0xDF3068", VA = "0xDF3068")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public float ImageScale
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0xDF3070", Offset = "0xDF3070", VA = "0xDF3070")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0xDF3078", Offset = "0xDF3078", VA = "0xDF3078")]
			set
			{
			}
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xDF3168", Offset = "0xDF3168", VA = "0xDF3168")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xDF3480", Offset = "0xDF3480", VA = "0xDF3480")]
		public void ClearVideoPlayers()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xDF2CE0", Offset = "0xDF2CE0", VA = "0xDF2CE0")]
		public void SetVideoPlayers()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xDF3484", Offset = "0xDF3484", VA = "0xDF3484")]
		public StereoscopicViewer()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class VRAnimatorExposer : MonoBehaviour
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ANIMATION_TYPE type;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float animationTime;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator _animator;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationClip selectedAnimation;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animation _animation;

		[Token(Token = "0x17000130")]
		public float AnimationTime
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xDF6B18", Offset = "0xDF6B18", VA = "0xDF6B18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xDF6B10", Offset = "0xDF6B10", VA = "0xDF6B10")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public Animator animator
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xDF6B20", Offset = "0xDF6B20", VA = "0xDF6B20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public Animation animation
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xDF6BB8", Offset = "0xDF6BB8", VA = "0xDF6BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xDF6C50", Offset = "0xDF6C50", VA = "0xDF6C50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xDF6EB8", Offset = "0xDF6EB8", VA = "0xDF6EB8")]
		public VRAnimatorExposer()
		{
		}
	}
	[Token(Token = "0x200024D")]
	[ExecuteInEditMode]
	public class VRCamera : MonoBehaviour
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VR_HMD hmd;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private VR_HMD previous_hmd;

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xDF6EC8", Offset = "0xDF6EC8", VA = "0xDF6EC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xDF6F00", Offset = "0xDF6F00", VA = "0xDF6F00")]
		private bool CleanUp(VR_HMD newHmd)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xDF6F20", Offset = "0xDF6F20", VA = "0xDF6F20")]
		public VRCamera()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public enum VR_HMD
	{
		[Token(Token = "0x4001060")]
		OCULUS,
		[Token(Token = "0x4001061")]
		GEAR_VR,
		[Token(Token = "0x4001062")]
		GOOGLE_VR,
		[Token(Token = "0x4001063")]
		HTC_VIVE
	}
	[Token(Token = "0x200024F")]
	public class VRMaterialPropertyExposer : MonoBehaviour
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string customFloatShaderProperty;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string customColourShaderProperty;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material mat;

		[Token(Token = "0x17000133")]
		public Material Material
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0xDFBBA0", Offset = "0xDFBBA0", VA = "0xDFBBA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0xDFBC84", Offset = "0xDFBC84", VA = "0xDFBC84")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public Color CustomColour
		{
			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0xDFBC8C", Offset = "0xDFBC8C", VA = "0xDFBC8C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0xDFBEA8", Offset = "0xDFBEA8", VA = "0xDFBEA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public float CustomFloat
		{
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xDFC18C", Offset = "0xDFC18C", VA = "0xDFC18C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xDFC3A8", Offset = "0xDFC3A8", VA = "0xDFC3A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public Color Color
		{
			[Token(Token = "0x6000E62")]
			[Address(RVA = "0xDFC644", Offset = "0xDFC644", VA = "0xDFC644")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E63")]
			[Address(RVA = "0xDFC73C", Offset = "0xDFC73C", VA = "0xDFC73C")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public float Cutoff
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0xDFC864", Offset = "0xDFC864", VA = "0xDFC864")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0xDFC95C", Offset = "0xDFC95C", VA = "0xDFC95C")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public float Glossiness
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0xDFCA64", Offset = "0xDFCA64", VA = "0xDFCA64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xDFCB5C", Offset = "0xDFCB5C", VA = "0xDFCB5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public float Metallic
		{
			[Token(Token = "0x6000E68")]
			[Address(RVA = "0xDFCC64", Offset = "0xDFCC64", VA = "0xDFCC64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0xDFCD5C", Offset = "0xDFCD5C", VA = "0xDFCD5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float BumpScale
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0xDFCE64", Offset = "0xDFCE64", VA = "0xDFCE64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xDFCF5C", Offset = "0xDFCF5C", VA = "0xDFCF5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public float Parallax
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0xDFD064", Offset = "0xDFD064", VA = "0xDFD064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xDFD15C", Offset = "0xDFD15C", VA = "0xDFD15C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public float OcclusionStrength
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xDFD264", Offset = "0xDFD264", VA = "0xDFD264")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0xDFD35C", Offset = "0xDFD35C", VA = "0xDFD35C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public Color EmissionColor
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0xDFD464", Offset = "0xDFD464", VA = "0xDFD464")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0xDFD55C", Offset = "0xDFD55C", VA = "0xDFD55C")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public float DetailNormalMapScale
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xDFD684", Offset = "0xDFD684", VA = "0xDFD684")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xDFD77C", Offset = "0xDFD77C", VA = "0xDFD77C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xDFC298", Offset = "0xDFC298", VA = "0xDFC298")]
		private float getFloatProperty(string property)
		{
			return default(float);
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xDFC4C4", Offset = "0xDFC4C4", VA = "0xDFC4C4")]
		private void setProperty(string property, float value)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xDFBD98", Offset = "0xDFBD98", VA = "0xDFBD98")]
		private Color getColorProperty(string property)
		{
			return default(Color);
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xDFBFE4", Offset = "0xDFBFE4", VA = "0xDFBFE4")]
		private void setProperty(string property, Color value)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xDFD884", Offset = "0xDFD884", VA = "0xDFD884")]
		public VRMaterialPropertyExposer()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class LoadSceneManager : MonoBehaviour
	{
		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7152E4", Offset = "0x7152E4")]
		private sealed class <loadAsync>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool doFadeOut;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LoadSceneManager <>4__this;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeToLoad;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string sceneToLoad;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x170002DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD1")]
				[Address(RVA = "0x909D98", Offset = "0x909D98", VA = "0x909D98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD3")]
				[Address(RVA = "0x909E00", Offset = "0x909E00", VA = "0x909E00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0x909598", Offset = "0x909598", VA = "0x909598")]
			[DebuggerHidden]
			public <loadAsync>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x909BE4", Offset = "0x909BE4", VA = "0x909BE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x909BE8", Offset = "0x909BE8", VA = "0x909BE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0x909DA0", Offset = "0x909DA0", VA = "0x909DA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7152F4", Offset = "0x7152F4")]
		private sealed class <BeginFade>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadSceneManager <>4__this;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startCol;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endCol;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <timer>5__2;

			[Token(Token = "0x170002E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD7")]
				[Address(RVA = "0x909B74", Offset = "0x909B74", VA = "0x909B74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD9")]
				[Address(RVA = "0x909BDC", Offset = "0x909BDC", VA = "0x909BDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x909960", Offset = "0x909960", VA = "0x909960")]
			[DebuggerHidden]
			public <BeginFade>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x909A20", Offset = "0x909A20", VA = "0x909A20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x909A24", Offset = "0x909A24", VA = "0x909A24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x909B7C", Offset = "0x909B7C", VA = "0x909B7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LoadSceneManager _instance;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, Vector3> lastScenePositions;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string playerName;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image m_FadeImage;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color m_FadeColor;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_FadeDuration;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool m_FadeInOnSceneLoad;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool m_FadeOut;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool m_IsFading;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_FadeStartTime;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color m_FadeOutColor;

		[Token(Token = "0x1700013F")]
		public static LoadSceneManager instance
		{
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x90888C", Offset = "0x90888C", VA = "0x90888C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x908A00", Offset = "0x908A00", VA = "0x908A00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x908AA4", Offset = "0x908AA4", VA = "0x908AA4")]
		private void Init()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x9092E4", Offset = "0x9092E4", VA = "0x9092E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x9087D8", Offset = "0x9087D8", VA = "0x9087D8")]
		public void LoadScene(string sceneToLoad, bool remember, Transform player)
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x908774", Offset = "0x908774", VA = "0x908774")]
		public void LoadScene(string sceneToLoad, bool remember, Transform player, float timeToLoad, bool doFadeOut)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x909380", Offset = "0x909380", VA = "0x909380")]
		private void rememberLastLocation(bool remember, Transform player)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x9094FC", Offset = "0x9094FC", VA = "0x9094FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FC78", Offset = "0x71FC78")]
		private IEnumerator loadAsync(string sceneToLoad, float timeToLoad, bool doFadeOut)
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x9095C4", Offset = "0x9095C4", VA = "0x9095C4")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x909840", Offset = "0x909840", VA = "0x909840")]
		public void FadeOut(float duration)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x9097E8", Offset = "0x9097E8", VA = "0x9097E8")]
		public void FadeIn(float duration)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x909898", Offset = "0x909898", VA = "0x909898")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FCDC", Offset = "0x71FCDC")]
		private IEnumerator BeginFade(Color startCol, Color endCol, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x90998C", Offset = "0x90998C", VA = "0x90998C")]
		public LoadSceneManager()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[ExecuteInEditMode]
	public class MouseHMD : MonoBehaviour
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool inverseY;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool hideMouse;

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x909E1C", Offset = "0x909E1C", VA = "0x909E1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x909E34", Offset = "0x909E34", VA = "0x909E34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x909FA4", Offset = "0x909FA4", VA = "0x909FA4")]
		public MouseHMD()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713DB0", Offset = "0x713DB0")]
	public class TeleportController : MonoBehaviour
	{
		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRGrabTrigger trigger;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask walkableLayers;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color validMoveColour;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color invalidMoveColour;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxStepDown;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float reach;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LineRenderer parabola;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float _lineThickness;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TeleportAction teleportAction;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool hasFuturePosition;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 futurePosition;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Vector3> positions;

		[Token(Token = "0x17000140")]
		public LineRenderer Parabola
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0xDF4B20", Offset = "0xDF4B20", VA = "0xDF4B20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xDF4D48", Offset = "0xDF4D48", VA = "0xDF4D48")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public float LineThickness
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xDF4D50", Offset = "0xDF4D50", VA = "0xDF4D50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xDF4D58", Offset = "0xDF4D58", VA = "0xDF4D58")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public TeleportAction Teleport
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xDF4DA4", Offset = "0xDF4DA4", VA = "0xDF4DA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xDF4EA4", Offset = "0xDF4EA4", VA = "0xDF4EA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xDF4FDC", Offset = "0xDF4FDC", VA = "0xDF4FDC")]
		private bool createAndDetectParabole()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xDF5100", Offset = "0xDF5100", VA = "0xDF5100")]
		public bool StartTrajectory(float v, float angle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xDF50CC", Offset = "0xDF50CC", VA = "0xDF50CC")]
		private void teleport()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xDF54A0", Offset = "0xDF54A0", VA = "0xDF54A0")]
		public TeleportController()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class TransformController : MonoBehaviour
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 position;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 rotation;

		[Token(Token = "0x17000143")]
		public float X_Position
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0xDF5ED8", Offset = "0xDF5ED8", VA = "0xDF5ED8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0xDF5E74", Offset = "0xDF5E74", VA = "0xDF5E74")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public float Y_Position
		{
			[Token(Token = "0x6000E97")]
			[Address(RVA = "0xDF5F60", Offset = "0xDF5F60", VA = "0xDF5F60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xDF5EFC", Offset = "0xDF5EFC", VA = "0xDF5EFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public float Z_Position
		{
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xDF5FF0", Offset = "0xDF5FF0", VA = "0xDF5FF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xDF5F8C", Offset = "0xDF5F8C", VA = "0xDF5F8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public float X_Rotation
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xDF6080", Offset = "0xDF6080", VA = "0xDF6080")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xDF601C", Offset = "0xDF601C", VA = "0xDF601C")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public float Y_Rotation
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0xDF6108", Offset = "0xDF6108", VA = "0xDF6108")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xDF60A4", Offset = "0xDF60A4", VA = "0xDF60A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public float Z_Rotation
		{
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0xDF6198", Offset = "0xDF6198", VA = "0xDF6198")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xDF6134", Offset = "0xDF6134", VA = "0xDF6134")]
			set
			{
			}
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xDF61C4", Offset = "0xDF61C4", VA = "0xDF61C4")]
		public TransformController()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class VRSimpleFPSLocomotion : MonoBehaviour
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform head;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRLOCOMOTION_INPUT input;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float forwardAngle;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRGrabTrigger trigger;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool fixedHeight;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool fixedForward;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fixedMovement;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public X_AXIS_TYPE xAxisType;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool mobileMoving;

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xDFF128", Offset = "0xDFF128", VA = "0xDFF128")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xDFF2D8", Offset = "0xDFF2D8", VA = "0xDFF2D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xDFF754", Offset = "0xDFF754", VA = "0xDFF754")]
		public VRSimpleFPSLocomotion()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class ActionList : MonoBehaviour
	{
		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715304", Offset = "0x715304")]
		private sealed class <triggerActions>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ActionList <>4__this;

			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<VRAction>.Enumerator <>7__wrap1;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private VRAction <a>5__3;

			[Token(Token = "0x170002E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DDE")]
				[Address(RVA = "0x907370", Offset = "0x907370", VA = "0x907370", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE0")]
				[Address(RVA = "0x9073D8", Offset = "0x9073D8", VA = "0x9073D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x907058", Offset = "0x907058", VA = "0x907058")]
			[DebuggerHidden]
			public <triggerActions>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x9070F4", Offset = "0x9070F4", VA = "0x9070F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x907168", Offset = "0x907168", VA = "0x907168", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x907110", Offset = "0x907110", VA = "0x907110")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x907378", Offset = "0x907378", VA = "0x907378", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VRAction> list;

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x906FBC", Offset = "0x906FBC", VA = "0x906FBC")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x906FE8", Offset = "0x906FE8", VA = "0x906FE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FD40", Offset = "0x71FD40")]
		private IEnumerator triggerActions()
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x907084", Offset = "0x907084", VA = "0x907084")]
		public ActionList()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class ActivateComponentAction : VRAction
	{
		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Component component;

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x9073E0", Offset = "0x9073E0", VA = "0x9073E0", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x907654", Offset = "0x907654", VA = "0x907654")]
		public ActivateComponentAction()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class ActivateObjectAction : VRAction
	{
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] targets;

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x90765C", Offset = "0x90765C", VA = "0x90765C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x9076E8", Offset = "0x9076E8", VA = "0x9076E8")]
		public ActivateObjectAction()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class ActivateVRElements : VRAction
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRElement[] targets;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool toggle;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool activate;

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x9076F0", Offset = "0x9076F0", VA = "0x9076F0", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x907794", Offset = "0x907794", VA = "0x907794")]
		public ActivateVRElements()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class LoadSceneAction : VRAction
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool useCustomParameters;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object sceneObject;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneToLoad;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool rememberLastLocation;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform player;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float timeToLoad;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool doFadeOut;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LoadSceneManager _loadSceneManager;

		[Token(Token = "0x17000149")]
		public UnityEngine.Object SceneObject
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x9085EC", Offset = "0x9085EC", VA = "0x9085EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x9085F4", Offset = "0x9085F4", VA = "0x9085F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public Transform Player
		{
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x908690", Offset = "0x908690", VA = "0x908690")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x908698", Offset = "0x908698", VA = "0x908698")]
			set
			{
			}
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x9086A0", Offset = "0x9086A0", VA = "0x9086A0", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x908824", Offset = "0x908824", VA = "0x908824")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x9089F8", Offset = "0x9089F8", VA = "0x9089F8")]
		public LoadSceneAction()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class MoveObjectAction : VRAction
	{
		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] pivots;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool updatePosition;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float positionInterpolationSpeed;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updateRotation;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float rotationInterpolationSpeed;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int pivotIndex;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _transitioningPosition;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool _transitioningRotation;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float threshold;

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x909FBC", Offset = "0x909FBC", VA = "0x909FBC", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x90A010", Offset = "0x90A010", VA = "0x90A010")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x90A3D8", Offset = "0x90A3D8", VA = "0x90A3D8")]
		public MoveObjectAction()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public abstract class PlayAction : VRAction
	{
		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PLAY_ACTION playType;

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x90A500", Offset = "0x90A500", VA = "0x90A500", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EB8")]
		protected abstract bool getToggleState();

		[Token(Token = "0x6000EB9")]
		protected abstract void Play();

		[Token(Token = "0x6000EBA")]
		protected abstract void Stop();

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x90A574", Offset = "0x90A574", VA = "0x90A574")]
		protected PlayAction()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class PlayAnimationAction : PlayAction
	{
		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ANIMATION_TYPE type;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animation animation;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string clip;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float speed;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator animator;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string targetParameter;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ANIMATOR_PARAMETER_TYPE parameterType;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool parameterValue_b;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float parameterValue_f;

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x90A57C", Offset = "0x90A57C", VA = "0x90A57C")]
		private void playAnimation(bool play)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x90A86C", Offset = "0x90A86C", VA = "0x90A86C")]
		private void playAnimator()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x90A930", Offset = "0x90A930", VA = "0x90A930", Slot = "6")]
		protected override void Play()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x90A950", Offset = "0x90A950", VA = "0x90A950", Slot = "7")]
		protected override void Stop()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x90A970", Offset = "0x90A970", VA = "0x90A970", Slot = "5")]
		protected override bool getToggleState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x90A99C", Offset = "0x90A99C", VA = "0x90A99C")]
		public PlayAnimationAction()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public enum ANIMATION_TYPE
	{
		[Token(Token = "0x40010B0")]
		LEGACY,
		[Token(Token = "0x40010B1")]
		ANIMATOR
	}
	[Token(Token = "0x200025E")]
	public enum ANIMATOR_PARAMETER_TYPE
	{
		[Token(Token = "0x40010B3")]
		FLOAT,
		[Token(Token = "0x40010B4")]
		INT,
		[Token(Token = "0x40010B5")]
		BOOL,
		[Token(Token = "0x40010B6")]
		TRIGGER
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713E14", Offset = "0x713E14")]
	public class PlayAudioAction : PlayAction
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip clip;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audio;

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x90A9AC", Offset = "0x90A9AC", VA = "0x90A9AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x90AA14", Offset = "0x90AA14", VA = "0x90AA14", Slot = "6")]
		protected override void Play()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x90AA30", Offset = "0x90AA30", VA = "0x90AA30", Slot = "7")]
		protected override void Stop()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x90AA4C", Offset = "0x90AA4C", VA = "0x90AA4C", Slot = "5")]
		protected override bool getToggleState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x90AA68", Offset = "0x90AA68", VA = "0x90AA68")]
		public PlayAudioAction()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class PlayParticlesAction : PlayAction
	{
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x90AA70", Offset = "0x90AA70", VA = "0x90AA70", Slot = "6")]
		protected override void Play()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x90AB30", Offset = "0x90AB30", VA = "0x90AB30", Slot = "7")]
		protected override void Stop()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x90ABF0", Offset = "0x90ABF0", VA = "0x90ABF0", Slot = "5")]
		protected override bool getToggleState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x90AC88", Offset = "0x90AC88", VA = "0x90AC88")]
		public PlayParticlesAction()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class PlaymakerInteractionAction : VRAction
	{
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x90AC90", Offset = "0x90AC90", VA = "0x90AC90", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x90ACFC", Offset = "0x90ACFC", VA = "0x90ACFC")]
		public PlaymakerInteractionAction()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class PopUpAction : VRAction
	{
		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 _templateScale;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject _template;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hideTime;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public DISPLAY_IMAGE_TYPE type;

		[Token(Token = "0x1700014B")]
		public UnityEngine.Object Image
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x90B900", Offset = "0x90B900", VA = "0x90B900")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x90BB38", Offset = "0x90BB38", VA = "0x90BB38")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public Vector2 TemplateScale
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x90BD04", Offset = "0x90BD04", VA = "0x90BD04")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x90BD0C", Offset = "0x90BD0C", VA = "0x90BD0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public GameObject Template
		{
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x90BA9C", Offset = "0x90BA9C", VA = "0x90BA9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x90C304", Offset = "0x90C304", VA = "0x90C304")]
			set
			{
			}
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x90C30C", Offset = "0x90C30C", VA = "0x90C30C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x90C3C4", Offset = "0x90C3C4", VA = "0x90C3C4", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x90C310", Offset = "0x90C310", VA = "0x90C310")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x90C458", Offset = "0x90C458", VA = "0x90C458")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x90BE30", Offset = "0x90BE30", VA = "0x90BE30")]
		private void generatePanel()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x90BD14", Offset = "0x90BD14", VA = "0x90BD14")]
		private void setScale()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x90C50C", Offset = "0x90C50C", VA = "0x90C50C")]
		public PopUpAction()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class ResetTransformAction : VRAction
	{
		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool snap;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float interpolationSpeed;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _originalPosition;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool reset;

		[Token(Token = "0x40010C4")]
		private const float EPSILON = 0.01f;

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x90C588", Offset = "0x90C588", VA = "0x90C588")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x90C5D8", Offset = "0x90C5D8", VA = "0x90C5D8", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x90C694", Offset = "0x90C694", VA = "0x90C694")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x90C970", Offset = "0x90C970", VA = "0x90C970")]
		public ResetTransformAction()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class SendMessageAction : VRAction
	{
		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject messageReceiver;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string messageName;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Type parameterType;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public object parameter;

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x90CEA0", Offset = "0x90CEA0", VA = "0x90CEA0", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x90CF3C", Offset = "0x90CF3C", VA = "0x90CF3C")]
		public SendMessageAction()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class SwapObjectsAction : VRAction
	{
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> swapObjects;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _swapIndex;

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xDF349C", Offset = "0xDF349C", VA = "0xDF349C", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xDF34D0", Offset = "0xDF34D0", VA = "0xDF34D0")]
		private bool updateSwapCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xDF3580", Offset = "0xDF3580", VA = "0xDF3580")]
		private void swapGOs()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xDF3624", Offset = "0xDF3624", VA = "0xDF3624")]
		public SwapObjectsAction()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class SwitchAction : VRAction
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string propertyName;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> swapObjects;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool storeOption;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string optionName;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _swapIndex;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.Object _target;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SWITCH_TYPE _type;

		[Token(Token = "0x1700014E")]
		public SWITCH_TYPE Type
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0xDF369C", Offset = "0xDF369C", VA = "0xDF369C")]
			get
			{
				return default(SWITCH_TYPE);
			}
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0xDF36A4", Offset = "0xDF36A4", VA = "0xDF36A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public UnityEngine.Object Target
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0xDF38F8", Offset = "0xDF38F8", VA = "0xDF38F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0xDF37D8", Offset = "0xDF37D8", VA = "0xDF37D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xDF3ACC", Offset = "0xDF3ACC", VA = "0xDF3ACC", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xDF3E28", Offset = "0xDF3E28", VA = "0xDF3E28")]
		public void SwapTo(int index)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xDF3EB0", Offset = "0xDF3EB0", VA = "0xDF3EB0")]
		private bool updateSwapCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xDF3B88", Offset = "0xDF3B88", VA = "0xDF3B88")]
		private void switchValues(string propertyName, bool isProperty = true)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xDF3900", Offset = "0xDF3900", VA = "0xDF3900")]
		private UnityEngine.Object getDefaultSwap()
		{
			return null;
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xDF373C", Offset = "0xDF373C", VA = "0xDF373C")]
		private void processType()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xDF3F60", Offset = "0xDF3F60", VA = "0xDF3F60")]
		private void store()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xDF447C", Offset = "0xDF447C", VA = "0xDF447C")]
		public SwitchAction()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class TeleportAction : VRAction
	{
		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715314", Offset = "0x715314")]
		private sealed class <doTeleport>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportAction <>4__this;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 futurePosition;

			[Token(Token = "0x170002E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DE4")]
				[Address(RVA = "0xDF4AB0", Offset = "0xDF4AB0", VA = "0xDF4AB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE6")]
				[Address(RVA = "0xDF4B18", Offset = "0xDF4B18", VA = "0xDF4B18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0xDF46E8", Offset = "0xDF46E8", VA = "0xDF46E8")]
			[DebuggerHidden]
			public <doTeleport>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0xDF495C", Offset = "0xDF495C", VA = "0xDF495C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0xDF4960", Offset = "0xDF4960", VA = "0xDF4960", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0xDF4AB8", Offset = "0xDF4AB8", VA = "0xDF4AB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetPosition;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform HMD;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeTimer;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LoadSceneManager _loadSceneManager;

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xDF44EC", Offset = "0xDF44EC", VA = "0xDF44EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xDF4558", Offset = "0xDF4558", VA = "0xDF4558", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xDF458C", Offset = "0xDF458C", VA = "0xDF458C")]
		public void teleport(Vector3 futurePosition)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xDF4654", Offset = "0xDF4654", VA = "0xDF4654")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FDA4", Offset = "0x71FDA4")]
		private IEnumerator doTeleport(Vector3 futurePosition)
		{
			return null;
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xDF4714", Offset = "0xDF4714", VA = "0xDF4714")]
		private Vector3 correctHeight(Vector3 currentPos, Vector3 futurePosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xDF4948", Offset = "0xDF4948", VA = "0xDF4948")]
		public TeleportAction()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class ToggleLightmapAction : VRAction
	{
		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Texture2D> Day_near_dir;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Texture2D> Day_far_light;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Texture2D> Night_near_dir;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Texture2D> Night_far_light;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LIGHTMAP_STATE lightmapState;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LightmapData[] dayLightMaps;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LightmapData[] nightLightMaps;

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xDF5578", Offset = "0xDF5578", VA = "0xDF5578", Slot = "4")]
		public override void Trigger()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xDF55C0", Offset = "0xDF55C0", VA = "0xDF55C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xDF559C", Offset = "0xDF559C", VA = "0xDF559C")]
		private void toggleLightmap()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xDF5904", Offset = "0xDF5904", VA = "0xDF5904")]
		private void setLightmap(LIGHTMAP_STATE state)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xDF592C", Offset = "0xDF592C", VA = "0xDF592C")]
		public ToggleLightmapAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000269")]
	public abstract class VRAction : MonoBehaviour
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x6000EFB")]
		public abstract void Trigger();

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xDF3694", Offset = "0xDF3694", VA = "0xDF3694")]
		protected VRAction()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class GearVR_MobileTapTrigger : VRGrabTrigger
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x9079C0", Offset = "0x9079C0", VA = "0x9079C0", Slot = "4")]
		public override bool Triggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x9079CC", Offset = "0x9079CC", VA = "0x9079CC")]
		public GearVR_MobileTapTrigger()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class GenericControllerTrigger : VRGrabTrigger
	{
		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GENERIC_VR_BUTTON vr_button;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private KeyCode key;

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x9079D4", Offset = "0x9079D4", VA = "0x9079D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x907C60", Offset = "0x907C60", VA = "0x907C60")]
		private KeyCode getKeyCode(int joystick, int button)
		{
			return default(KeyCode);
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x907D18", Offset = "0x907D18", VA = "0x907D18", Slot = "4")]
		public override bool Triggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x907D24", Offset = "0x907D24", VA = "0x907D24")]
		public GenericControllerTrigger()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class GoogleVRControllerTrigger : VRGrabTrigger
	{
		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GOOGLEVR_CONTROLLER_INPUT input;

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x9081D8", Offset = "0x9081D8", VA = "0x9081D8", Slot = "4")]
		public override bool Triggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x9081E0", Offset = "0x9081E0", VA = "0x9081E0")]
		public GoogleVRControllerTrigger()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class KeyboardGrab : VRGrabTrigger
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode key;

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x9083B0", Offset = "0x9083B0", VA = "0x9083B0", Slot = "4")]
		public override bool Triggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x9083BC", Offset = "0x9083BC", VA = "0x9083BC")]
		public KeyboardGrab()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class LeapMotion_PinchTrigger : VRGrabTrigger
	{
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x9085DC", Offset = "0x9085DC", VA = "0x9085DC", Slot = "4")]
		public override bool Triggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x9085E4", Offset = "0x9085E4", VA = "0x9085E4")]
		public LeapMotion_PinchTrigger()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class MouseGrab : VRGrabTrigger
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mouseButton;

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x909E08", Offset = "0x909E08", VA = "0x909E08", Slot = "4")]
		public override bool Triggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x909E14", Offset = "0x909E14", VA = "0x909E14")]
		public MouseGrab()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class OculusControllerTrigger : VRGrabTrigger
	{
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x90A4F0", Offset = "0x90A4F0", VA = "0x90A4F0", Slot = "4")]
		public override bool Triggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x90A4F8", Offset = "0x90A4F8", VA = "0x90A4F8")]
		public OculusControllerTrigger()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class SteamControllerGrab : VRGrabTrigger
	{
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xDF2490", Offset = "0xDF2490", VA = "0xDF2490", Slot = "4")]
		public override bool Triggered()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xDF2498", Offset = "0xDF2498", VA = "0xDF2498")]
		public SteamControllerGrab()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public abstract class VRGrabTrigger : MonoBehaviour
	{
		[Token(Token = "0x6000F0F")]
		public abstract bool Triggered();

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xDF24A0", Offset = "0xDF24A0", VA = "0xDF24A0")]
		protected VRGrabTrigger()
		{
		}
	}
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713E78", Offset = "0x713E78")]
	public class VRGrabbable : VRElement
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ActionList endGrabActions;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ActionList startGrabActions;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GRAB_TYPE type;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool moveXAxis;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool moveYAxis;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool moveZAxis;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color grabColour;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool alignWithPivot;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool snapToOrigin;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float snapRadius;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rotateScale;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float minRotation;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float maxRotation;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool constraintRotation;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 rotateAround;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 originalPosition;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion originalRotation;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isGrabbed;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform selectorTransform;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 selectorOffset_rotation;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VRSelector currentSelector;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool wasKinematic;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Color> colourList;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rigidbody ownRb;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private FixedJoint joint;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool hadRb;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider _collider;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool wasTrigger;

		[Token(Token = "0x17000150")]
		public ActionList EndGrabActions
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0xDFA380", Offset = "0xDFA380", VA = "0xDFA380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		public ActionList StartGrabActions
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xDFA480", Offset = "0xDFA480", VA = "0xDFA480")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xDFA580", Offset = "0xDFA580", VA = "0xDFA580")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xDFA8E4", Offset = "0xDFA8E4", VA = "0xDFA8E4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xDFA968", Offset = "0xDFA968", VA = "0xDFA968", Slot = "5")]
		public virtual void StartGrab(VRSelector selector)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xDFAF88", Offset = "0xDFAF88", VA = "0xDFAF88", Slot = "6")]
		public virtual void StopGrab(VRSelector selector)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xDFB2C0", Offset = "0xDFB2C0", VA = "0xDFB2C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xDFB8D0", Offset = "0xDFB8D0", VA = "0xDFB8D0")]
		public float GetSignedAngle(Quaternion A, Quaternion B, Vector3 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xDFBA78", Offset = "0xDFBA78", VA = "0xDFBA78", Slot = "7")]
		protected virtual void ApplyMovement(Vector3 move)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xDFBAE4", Offset = "0xDFBAE4", VA = "0xDFBAE4", Slot = "8")]
		protected virtual Vector3 RestrictMovement(Vector3 move)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xDFA888", Offset = "0xDFA888", VA = "0xDFA888")]
		public void SetOrigins()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xDFB2BC", Offset = "0xDFB2BC", VA = "0xDFB2BC")]
		private void tossObject(VRSelector selector)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xDFB194", Offset = "0xDFB194", VA = "0xDFB194")]
		private void snapObjectToOrigin()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xDFA75C", Offset = "0xDFA75C", VA = "0xDFA75C")]
		private void loadDefaultColours()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xDFAD10", Offset = "0xDFAD10", VA = "0xDFAD10")]
		private void paintColours(bool defaultColour)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xDFBAE8", Offset = "0xDFBAE8", VA = "0xDFBAE8")]
		public VRGrabbable()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public abstract class LOSSelector : VRSelector
	{
		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float selectionDistance;

		[Token(Token = "0x6000F21")]
		protected T GetElement<T>() where T : VRElement
		{
			return null;
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x9083C4", Offset = "0x9083C4", VA = "0x9083C4", Slot = "6")]
		public override Vector3 GetEndPointPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x9085CC", Offset = "0x9085CC", VA = "0x9085CC")]
		protected LOSSelector()
		{
		}
	}
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713EDC", Offset = "0x713EDC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713EDC", Offset = "0x713EDC")]
	public class PointerSelector : LOSSelector
	{
		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool useReticle;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color reticleColour;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float reticleScale;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Color _mainColour;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color hoverColour;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public VRGrabTrigger grabTrigger;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float _lineWidth;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool isPointerActive;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool selectableActive;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float distanceToSelectable;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private VRGrabbable _grabbedObject;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public LineRenderer _line;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject reticle;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private VRSelectable _currentObservedSelectable;

		[Token(Token = "0x17000152")]
		public Color MainColour
		{
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x90AD04", Offset = "0x90AD04", VA = "0x90AD04")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x90AD10", Offset = "0x90AD10", VA = "0x90AD10")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public float LineWidth
		{
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x90AD78", Offset = "0x90AD78", VA = "0x90AD78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x90AD80", Offset = "0x90AD80", VA = "0x90AD80")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public LineRenderer Line
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x90ADCC", Offset = "0x90ADCC", VA = "0x90ADCC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x90AE64", Offset = "0x90AE64", VA = "0x90AE64")]
			set
			{
			}
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x90AE6C", Offset = "0x90AE6C", VA = "0x90AE6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x90AFF0", Offset = "0x90AFF0", VA = "0x90AFF0", Slot = "4")]
		protected override VRSelectable GetSelectable()
		{
			return null;
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x90B290", Offset = "0x90B290", VA = "0x90B290", Slot = "5")]
		protected override VRGrabbable GetGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x90B43C", Offset = "0x90B43C", VA = "0x90B43C", Slot = "7")]
		protected override void ChildUpdate()
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x90B818", Offset = "0x90B818", VA = "0x90B818")]
		public void ConfigureRigidbody()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x90B11C", Offset = "0x90B11C", VA = "0x90B11C")]
		private void drawLine()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x90B69C", Offset = "0x90B69C", VA = "0x90B69C")]
		private void drawReticle()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x90AD1C", Offset = "0x90AD1C", VA = "0x90AD1C")]
		private void setCurrentColour(Color col)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x90B890", Offset = "0x90B890", VA = "0x90B890")]
		public PointerSelector()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class SightSelector : LOSSelector
	{
		[Token(Token = "0x400110E")]
		private const string CROSSHAIR_NAME = "[vreasy]crosshair";

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool useCrosshair;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Sprite crosshairSprite;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float crosshairSize;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color crosshairActiveColour;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color crosshairIdleColour;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SpriteRenderer crosshair;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public CROSSHAIR_TYPE crosshairType;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Sprite idleSprite;

		[Token(Token = "0x17000155")]
		public Sprite CrosshairSprite
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0x90CF44", Offset = "0x90CF44", VA = "0x90CF44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x90CF4C", Offset = "0x90CF4C", VA = "0x90CF4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public float CrosshairSize
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x90D38C", Offset = "0x90D38C", VA = "0x90D38C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x90D394", Offset = "0x90D394", VA = "0x90D394")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public Color CrosshairActiveColour
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x90D3AC", Offset = "0x90D3AC", VA = "0x90D3AC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x90D3B8", Offset = "0x90D3B8", VA = "0x90D3B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public Color CrosshairIdleColour
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x90D558", Offset = "0x90D558", VA = "0x90D558")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x90D564", Offset = "0x90D564", VA = "0x90D564")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public SpriteRenderer Crosshair
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x90D5EC", Offset = "0x90D5EC", VA = "0x90D5EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x90D794", Offset = "0x90D794", VA = "0x90D794")]
			set
			{
			}
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x90D79C", Offset = "0x90D79C", VA = "0x90D79C", Slot = "4")]
		protected override VRSelectable GetSelectable()
		{
			return null;
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x90CFE8", Offset = "0x90CFE8", VA = "0x90CFE8")]
		public void reconfigureCrosshair()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x90D440", Offset = "0x90D440", VA = "0x90D440")]
		private void SetCrosshairState(bool isActive)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x90D88C", Offset = "0x90D88C", VA = "0x90D88C")]
		private void removeCrosshair()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x90D964", Offset = "0x90D964", VA = "0x90D964")]
		public SightSelector()
		{
		}
	}
	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713F68", Offset = "0x713F68")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713F68", Offset = "0x713F68")]
	public class TouchSelector : VRSelector
	{
		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public VRGrabTrigger grabTrigger;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRSelectable _selectObject;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VRGrabbable _grabObject;

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xDF59EC", Offset = "0xDF59EC", VA = "0xDF59EC", Slot = "4")]
		protected override VRSelectable GetSelectable()
		{
			return null;
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xDF59F4", Offset = "0xDF59F4", VA = "0xDF59F4", Slot = "5")]
		protected override VRGrabbable GetGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xDF59FC", Offset = "0xDF59FC", VA = "0xDF59FC")]
		public void ConfigureRigidbody()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xDF5A74", Offset = "0xDF5A74", VA = "0xDF5A74")]
		private void OnTriggerStay(Collider col)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xDF5CCC", Offset = "0xDF5CCC", VA = "0xDF5CCC")]
		private void OnCollisionStay(Collision col)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xDF5D20", Offset = "0xDF5D20", VA = "0xDF5D20")]
		private void OnTriggerExit(Collider col)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xDF5D28", Offset = "0xDF5D28", VA = "0xDF5D28")]
		private void OnCollisionExit(Collision col)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xDF5AA0", Offset = "0xDF5AA0", VA = "0xDF5AA0")]
		private void getTouchSelectable(Collider col)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xDF5B9C", Offset = "0xDF5B9C", VA = "0xDF5B9C")]
		private void getTouchGrabbable(Collider col)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xDF5D30", Offset = "0xDF5D30", VA = "0xDF5D30", Slot = "7")]
		protected override void ChildUpdate()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xDF5E18", Offset = "0xDF5E18", VA = "0xDF5E18")]
		public TouchSelector()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713FF4", Offset = "0x713FF4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x713FF4", Offset = "0x713FF4")]
	[ExecuteInEditMode]
	public class VR2DButton : VRSelectable_sprite
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text label;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public VRBUTTON_REFRESH_TYPE type;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public VRELEMENT_FACE_DIRECTION faceDirection;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected BoxCollider _collider;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float _localScale;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _lastParent;

		[Token(Token = "0x1700015A")]
		public Text Label
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xDF61CC", Offset = "0xDF61CC", VA = "0xDF61CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0xDF6260", Offset = "0xDF6260", VA = "0xDF6260")]
			set
			{
			}
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xDF6268", Offset = "0xDF6268", VA = "0xDF6268", Slot = "5")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xDF62E4", Offset = "0xDF62E4", VA = "0xDF62E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xDF6610", Offset = "0xDF6610", VA = "0xDF6610")]
		public void ConfigureCollider(float localScale, bool removePreviousCollider = true)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xDF6614", Offset = "0xDF6614", VA = "0xDF6614")]
		public void SetScale(float localScale)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xDF6748", Offset = "0xDF6748", VA = "0xDF6748", Slot = "12")]
		protected override void Selection()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xDF6750", Offset = "0xDF6750", VA = "0xDF6750", Slot = "13")]
		protected override void Pressed()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xDF6758", Offset = "0xDF6758", VA = "0xDF6758", Slot = "14")]
		protected override void Unselected()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xDF6308", Offset = "0xDF6308", VA = "0xDF6308")]
		private void Realign()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xDF6760", Offset = "0xDF6760", VA = "0xDF6760")]
		private void setRotation()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xDF63C4", Offset = "0xDF63C4", VA = "0xDF63C4")]
		private void checkParentChanged()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xDF6A48", Offset = "0xDF6A48", VA = "0xDF6A48")]
		public VR2DButton()
		{
		}
	}
	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714090", Offset = "0x714090")]
	[ExecuteInEditMode]
	public class VR3DButton : VRSelectable_colour
	{
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xDF6A9C", Offset = "0xDF6A9C", VA = "0xDF6A9C", Slot = "4")]
		protected override void activate(bool state)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xDF6AA0", Offset = "0xDF6AA0", VA = "0xDF6AA0")]
		public VR3DButton()
		{
		}
	}
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714104", Offset = "0x714104")]
	public class VRDisplayButton : VR2DButton
	{
		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Sprite> representations;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float timeToHide;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<VRDisplayButtonChild> buttonRepresentations;

		[Token(Token = "0x1700015B")]
		public SwitchAction Action
		{
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0xDF6F28", Offset = "0xDF6F28", VA = "0xDF6F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xDF6F78", Offset = "0xDF6F78", VA = "0xDF6F78", Slot = "5")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xDF70E0", Offset = "0xDF70E0", VA = "0xDF70E0", Slot = "12")]
		protected override void Selection()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xDF7748", Offset = "0xDF7748", VA = "0xDF7748", Slot = "13")]
		protected override void Pressed()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xDF77B4", Offset = "0xDF77B4", VA = "0xDF77B4", Slot = "14")]
		protected override void Unselected()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xDF77B8", Offset = "0xDF77B8", VA = "0xDF77B8", Slot = "15")]
		protected override void Trigger()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xDF77BC", Offset = "0xDF77BC", VA = "0xDF77BC", Slot = "17")]
		protected override void SetState()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xDF7918", Offset = "0xDF7918", VA = "0xDF7918")]
		public void SetRepresentationLength(int length)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xDF7A10", Offset = "0xDF7A10", VA = "0xDF7A10")]
		public void SwitchChild(string index)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xDF774C", Offset = "0xDF774C", VA = "0xDF774C")]
		public void ResetHideTimer()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xDF70E4", Offset = "0xDF70E4", VA = "0xDF70E4")]
		private void CreateChildButtons()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xDF7C38", Offset = "0xDF7C38", VA = "0xDF7C38")]
		private void hideDisplayButton()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xDF7CF4", Offset = "0xDF7CF4", VA = "0xDF7CF4")]
		private void hideChildren()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xDF7DEC", Offset = "0xDF7DEC", VA = "0xDF7DEC")]
		public VRDisplayButton()
		{
		}
	}
	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714168", Offset = "0x714168")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714168", Offset = "0x714168")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714168", Offset = "0x714168")]
	public class VRDisplayButtonChild : VRSelectable_colour
	{
		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SendMessageAction _action;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SpriteRenderer _renderer;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BoxCollider _collider;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private VRDisplayButton _parentDisplay;

		[Token(Token = "0x1700015C")]
		public SendMessageAction Action
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0xDF7BA0", Offset = "0xDF7BA0", VA = "0xDF7BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		public SpriteRenderer Renderer
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0xDF7A60", Offset = "0xDF7A60", VA = "0xDF7A60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		public BoxCollider Collider
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0xDF7EB8", Offset = "0xDF7EB8", VA = "0xDF7EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xDF7F50", Offset = "0xDF7F50", VA = "0xDF7F50", Slot = "5")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xDF8014", Offset = "0xDF8014", VA = "0xDF8014", Slot = "12")]
		protected override void Selection()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xDF8018", Offset = "0xDF8018", VA = "0xDF8018", Slot = "13")]
		protected override void Pressed()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xDF80D8", Offset = "0xDF80D8", VA = "0xDF80D8", Slot = "14")]
		protected override void Unselected()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xDF80DC", Offset = "0xDF80DC", VA = "0xDF80DC")]
		public void SetDisplayParent(VRDisplayButton parent)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xDF7AF8", Offset = "0xDF7AF8", VA = "0xDF7AF8")]
		public void ResizeSprite(float size)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xDF8980", Offset = "0xDF8980", VA = "0xDF8980")]
		public VRDisplayButtonChild()
		{
		}
	}
	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x71421C", Offset = "0x71421C")]
	public class VRGUIButton : VRSelectable
	{
		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Selectable unitySel;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventSystem eventSystem;

		[Token(Token = "0x1700015F")]
		public Selectable UnitySelectable
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xDF9B9C", Offset = "0xDF9B9C", VA = "0xDF9B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0xDF9C34", Offset = "0xDF9C34", VA = "0xDF9C34")]
			set
			{
			}
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xDF9C3C", Offset = "0xDF9C3C", VA = "0xDF9C3C", Slot = "5")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xDF9CB0", Offset = "0xDF9CB0", VA = "0xDF9CB0", Slot = "12")]
		protected override void Selection()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xDF9FA4", Offset = "0xDF9FA4", VA = "0xDF9FA4", Slot = "13")]
		protected override void Pressed()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xDFA118", Offset = "0xDFA118", VA = "0xDFA118", Slot = "14")]
		protected override void Unselected()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xDFA230", Offset = "0xDFA230", VA = "0xDFA230", Slot = "16")]
		protected override void Unpressed()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xDF9E24", Offset = "0xDF9E24", VA = "0xDF9E24")]
		private PointerEventData getPointerEventData()
		{
			return null;
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xDFA348", Offset = "0xDFA348", VA = "0xDFA348")]
		public VRGUIButton()
		{
		}
	}
	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714280", Offset = "0x714280")]
	[ExecuteInEditMode]
	public class VRPanoramaView : MonoBehaviour
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PANORAMA_MODE mode;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VideoClip _video;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D _image;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LoadSceneAction> Locations;

		[Token(Token = "0x17000160")]
		public VideoClip Video
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xDFD8DC", Offset = "0xDFD8DC", VA = "0xDFD8DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xDFD8E4", Offset = "0xDFD8E4", VA = "0xDFD8E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public VideoPlayer videoPlayer
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0xDFD918", Offset = "0xDFD918", VA = "0xDFD918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public Texture2D Image
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0xDFD9D8", Offset = "0xDFD9D8", VA = "0xDFD9D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xDFD9E0", Offset = "0xDFD9E0", VA = "0xDFD9E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		private MeshRenderer Rend
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xDFDA20", Offset = "0xDFDA20", VA = "0xDFDA20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xDFDA70", Offset = "0xDFDA70", VA = "0xDFDA70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xDFDA78", Offset = "0xDFDA78", VA = "0xDFDA78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xDFDA80", Offset = "0xDFDA80", VA = "0xDFDA80")]
		public VRPanoramaView()
		{
		}
	}
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7142F4", Offset = "0x7142F4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7142F4", Offset = "0x7142F4")]
	public class VRSelectable : VRElement
	{
		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float coolDownTime;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deactivationTime;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip activateSound;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip selectSound;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string tooltip;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected ActionList _actionList;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _lastSelectionTime;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected bool isPressed;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		protected bool isSelected;

		[Token(Token = "0x17000164")]
		private AudioSource _audio
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0xDFDAF0", Offset = "0xDFDAF0", VA = "0xDFDAF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public ActionList actionList
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0xDF7048", Offset = "0xDF7048", VA = "0xDF7048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xDFDB40", Offset = "0xDFDB40", VA = "0xDFDB40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xDF62E0", Offset = "0xDF62E0", VA = "0xDF62E0", Slot = "5")]
		protected virtual void Initialise()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xDFDC0C", Offset = "0xDFDC0C", VA = "0xDFDC0C", Slot = "6")]
		public virtual bool CanSelectWithSight()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xDFDC14", Offset = "0xDFDC14", VA = "0xDFDC14", Slot = "7")]
		public virtual bool CanSelectWithTouch()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xDFDC1C", Offset = "0xDFDC1C", VA = "0xDFDC1C", Slot = "8")]
		public virtual bool select()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xDFDD4C", Offset = "0xDFDD4C", VA = "0xDFDD4C", Slot = "9")]
		public virtual void unselect()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xDFDD7C", Offset = "0xDFDD7C", VA = "0xDFDD7C", Slot = "10")]
		public virtual void stopInteraction()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xDFDDAC", Offset = "0xDFDDAC", VA = "0xDFDDAC", Slot = "11")]
		public virtual void activate()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xDFDEA0", Offset = "0xDFDEA0", VA = "0xDFDEA0")]
		private void ToIdle()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xDFDC94", Offset = "0xDFDC94", VA = "0xDFDC94")]
		private void playSound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xDF674C", Offset = "0xDF674C", VA = "0xDF674C", Slot = "12")]
		protected virtual void Selection()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xDF6754", Offset = "0xDF6754", VA = "0xDF6754", Slot = "13")]
		protected virtual void Pressed()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xDF675C", Offset = "0xDF675C", VA = "0xDF675C", Slot = "14")]
		protected virtual void Unselected()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xDFDEB4", Offset = "0xDFDEB4", VA = "0xDFDEB4", Slot = "15")]
		protected virtual void Trigger()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xDFDED4", Offset = "0xDFDED4", VA = "0xDFDED4", Slot = "16")]
		protected virtual void Unpressed()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xDFA364", Offset = "0xDFA364", VA = "0xDFA364")]
		public VRSelectable()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class VRSelectable_colour : VRSelectable
	{
		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color idleColour;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color selectColour;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color activateColour;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool useColourHighlights;

		[Token(Token = "0x17000166")]
		public Color IdleColour
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0xDFDED8", Offset = "0xDFDED8", VA = "0xDFDED8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0xDFDEE4", Offset = "0xDFDEE4", VA = "0xDFDEE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public Color SelectColour
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0xDFDF74", Offset = "0xDFDF74", VA = "0xDFDF74")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0xDFDF80", Offset = "0xDFDF80", VA = "0xDFDF80")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public Color ActivateColour
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0xDFE010", Offset = "0xDFE010", VA = "0xDFE010")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xDFE01C", Offset = "0xDFE01C", VA = "0xDFE01C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xDFE0AC", Offset = "0xDFE0AC", VA = "0xDFE0AC", Slot = "17")]
		public virtual void SetState()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xDFE3EC", Offset = "0xDFE3EC", VA = "0xDFE3EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xDFE0E0", Offset = "0xDFE0E0", VA = "0xDFE0E0")]
		private void setColour(Color colour)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xDF6AA4", Offset = "0xDF6AA4", VA = "0xDF6AA4")]
		public VRSelectable_colour()
		{
		}
	}
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714380", Offset = "0x714380")]
	public class VRSelectable_sprite : VRSelectable
	{
		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite idleIcon;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Sprite selectIcon;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Sprite activateIcon;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float width;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float height;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected SpriteRenderer _renderer;

		[Token(Token = "0x17000169")]
		public Sprite IdleIcon
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0xDFE3FC", Offset = "0xDFE3FC", VA = "0xDFE3FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xDFE404", Offset = "0xDFE404", VA = "0xDFE404")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public Sprite SelectIcon
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0xDFE4AC", Offset = "0xDFE4AC", VA = "0xDFE4AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xDFE4B4", Offset = "0xDFE4B4", VA = "0xDFE4B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public Sprite ActivateIcon
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0xDFE55C", Offset = "0xDFE55C", VA = "0xDFE55C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xDFE564", Offset = "0xDFE564", VA = "0xDFE564")]
			set
			{
			}
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xDF7C5C", Offset = "0xDF7C5C", VA = "0xDF7C5C")]
		protected SpriteRenderer getRenderer()
		{
			return null;
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xDFE60C", Offset = "0xDFE60C", VA = "0xDFE60C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xDFE61C", Offset = "0xDFE61C", VA = "0xDFE61C", Slot = "17")]
		protected virtual void SetState()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xDF77DC", Offset = "0xDF77DC", VA = "0xDF77DC")]
		protected void setSprite(Sprite sp)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xDF664C", Offset = "0xDF664C", VA = "0xDF664C")]
		protected void refreshSprite()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xDF6A78", Offset = "0xDF6A78", VA = "0xDF6A78")]
		public VRSelectable_sprite()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public abstract class VRSelector : MonoBehaviour
	{
		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float activationTime;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool hasTooltip;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject canvasObject;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text tooltip;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font tooltipFont;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int tooltipSize;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color tooltipColour;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float tooltipDistance;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float _selectedTime;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VRSelectable _previouslySelectedObject;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected VRGrabbable _previouslyGrabbedObject;

		[Token(Token = "0x1700016C")]
		public Text Tooltip
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xDFE644", Offset = "0xDFE644", VA = "0xDFE644")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0xDFE6DC", Offset = "0xDFE6DC", VA = "0xDFE6DC")]
			set
			{
			}
		}

		[Token(Token = "0x6000FB0")]
		protected abstract VRSelectable GetSelectable();

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xDFE6E4", Offset = "0xDFE6E4", VA = "0xDFE6E4", Slot = "5")]
		protected virtual VRGrabbable GetGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xDFE6EC", Offset = "0xDFE6EC", VA = "0xDFE6EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xDFEA0C", Offset = "0xDFEA0C", VA = "0xDFEA0C", Slot = "6")]
		public virtual Vector3 GetEndPointPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xDFEA30", Offset = "0xDFEA30", VA = "0xDFEA30", Slot = "7")]
		protected virtual void ChildUpdate()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xDFEA34", Offset = "0xDFEA34", VA = "0xDFEA34")]
		private void setTooltip()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xDFED70", Offset = "0xDFED70", VA = "0xDFED70")]
		private void clearTooltip()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xDFEA48", Offset = "0xDFEA48", VA = "0xDFEA48")]
		public void reconfigureTooltip(VRSelectable selectable)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xDFE92C", Offset = "0xDFE92C", VA = "0xDFE92C")]
		private void CheckActivate()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xDFE73C", Offset = "0xDFE73C", VA = "0xDFE73C")]
		private void CheckSelectable()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xDFE94C", Offset = "0xDFE94C", VA = "0xDFE94C")]
		private void CheckGrabbable()
		{
		}

		[Token(Token = "0x6000FBB")]
		private T filterVRelement<T>(VRElement element) where T : VRElement
		{
			return null;
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xDFED84", Offset = "0xDFED84", VA = "0xDFED84")]
		private void ActivateSelectable(VRSelectable obj)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xDFEEAC", Offset = "0xDFEEAC", VA = "0xDFEEAC")]
		private bool SelectSelectable(VRSelectable obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xDFEF44", Offset = "0xDFEF44", VA = "0xDFEF44")]
		private void UnselectSelectable(VRSelectable obj)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xDFEE18", Offset = "0xDFEE18", VA = "0xDFEE18")]
		private void StoppedInteraction(VRSelectable obj)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xDFF080", Offset = "0xDFF080", VA = "0xDFF080")]
		private void ActivateGrabbable(VRGrabbable obj)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xDFEFD8", Offset = "0xDFEFD8", VA = "0xDFEFD8")]
		private void DeactivateGrabbable(VRGrabbable obj)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xDF5E1C", Offset = "0xDF5E1C", VA = "0xDF5E1C")]
		protected VRSelector()
		{
		}
	}
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7143E4", Offset = "0x7143E4")]
	public class VRSlider : VRGrabbable
	{
		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float value;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float min;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float max;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Component targetComponent;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public string targetProperty;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string targetField;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float MIN;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float MAX;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xDFF778", Offset = "0xDFF778", VA = "0xDFF778")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xDFF898", Offset = "0xDFF898", VA = "0xDFF898", Slot = "8")]
		protected override Vector3 RestrictMovement(Vector3 move)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xDFF9D8", Offset = "0xDFF9D8", VA = "0xDFF9D8", Slot = "7")]
		protected override void ApplyMovement(Vector3 move)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xDFF790", Offset = "0xDFF790", VA = "0xDFF790")]
		public void RecalculateBoundaries()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xE006C8", Offset = "0xE006C8", VA = "0xE006C8")]
		public void SetValue(float val)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xE007F8", Offset = "0xE007F8", VA = "0xE007F8")]
		public float GetRealValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xDFFA2C", Offset = "0xDFFA2C", VA = "0xDFFA2C")]
		private void calculateValue()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xDFFADC", Offset = "0xDFFADC", VA = "0xDFFADC")]
		private void broadcast()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xE00810", Offset = "0xE00810", VA = "0xE00810")]
		public VRSlider()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class VRSliderDisplay : VRElement
	{
		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRSlider _slider;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite _background;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite _handle;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SpriteRenderer backgroundRenderer;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SpriteRenderer handleRenderer;

		[Token(Token = "0x1700016D")]
		public VRSlider Slider
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xE00830", Offset = "0xE00830", VA = "0xE00830")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xE00B84", Offset = "0xE00B84", VA = "0xE00B84")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public Sprite Background
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0xE00B8C", Offset = "0xE00B8C", VA = "0xE00B8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0xE00B94", Offset = "0xE00B94", VA = "0xE00B94")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public Sprite Handle
		{
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0xE00BE4", Offset = "0xE00BE4", VA = "0xE00BE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xE00BEC", Offset = "0xE00BEC", VA = "0xE00BEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public float BackgroundScaleX
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xE00BF4", Offset = "0xE00BF4", VA = "0xE00BF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xE00E58", Offset = "0xE00E58", VA = "0xE00E58")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public float BackgroundScaleY
		{
			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0xE00EE8", Offset = "0xE00EE8", VA = "0xE00EE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0xE00F1C", Offset = "0xE00F1C", VA = "0xE00F1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public float HandleScaleX
		{
			[Token(Token = "0x6000FD6")]
			[Address(RVA = "0xE00F9C", Offset = "0xE00F9C", VA = "0xE00F9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD7")]
			[Address(RVA = "0xE00FC8", Offset = "0xE00FC8", VA = "0xE00FC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public float HandleScaleY
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0xE01048", Offset = "0xE01048", VA = "0xE01048")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0xE0107C", Offset = "0xE0107C", VA = "0xE0107C")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public SpriteRenderer BackgroundRenderer
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0xE00C20", Offset = "0xE00C20", VA = "0xE00C20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public SpriteRenderer HandleRenderer
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xE0094C", Offset = "0xE0094C", VA = "0xE0094C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xE00B9C", Offset = "0xE00B9C", VA = "0xE00B9C")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xE010FC", Offset = "0xE010FC", VA = "0xE010FC")]
		public VRSliderDisplay()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class VRToggle : VR2DButton
	{
		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool toggle_state;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ActionList idleActions;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ActionList selectActions;

		[Token(Token = "0x17000176")]
		public ActionList IdleActions
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xE0110C", Offset = "0xE0110C", VA = "0xE0110C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public ActionList SelectActions
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0xE0120C", Offset = "0xE0120C", VA = "0xE0120C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xE0130C", Offset = "0xE0130C", VA = "0xE0130C", Slot = "15")]
		protected override void Trigger()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xE01388", Offset = "0xE01388", VA = "0xE01388", Slot = "17")]
		protected override void SetState()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xE0131C", Offset = "0xE0131C", VA = "0xE0131C")]
		public void ActivateIdle()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xE01350", Offset = "0xE01350", VA = "0xE01350")]
		public void ActivateSelect()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xE013A0", Offset = "0xE013A0", VA = "0xE013A0")]
		public VRToggle()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714448", Offset = "0x714448")]
	public class VRTriggerArea : VRSelectable
	{
		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ActionList exitActions;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ActionList entryActions;

		[Token(Token = "0x17000178")]
		public ActionList ExitActions
		{
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xE013D4", Offset = "0xE013D4", VA = "0xE013D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public ActionList EntryActions
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xE014D4", Offset = "0xE014D4", VA = "0xE014D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xE015D4", Offset = "0xE015D4", VA = "0xE015D4", Slot = "5")]
		protected override void Initialise()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xE015DC", Offset = "0xE015DC", VA = "0xE015DC", Slot = "6")]
		public override bool CanSelectWithSight()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xE015E4", Offset = "0xE015E4", VA = "0xE015E4", Slot = "16")]
		protected override void Unpressed()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xE01604", Offset = "0xE01604", VA = "0xE01604", Slot = "13")]
		protected override void Pressed()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xE01634", Offset = "0xE01634", VA = "0xE01634", Slot = "15")]
		protected override void Trigger()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xE01638", Offset = "0xE01638", VA = "0xE01638")]
		public VRTriggerArea()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000286")]
	public class VRElement : MonoBehaviour
	{
		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float init_transition;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float activation_transition;

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xDF99E8", Offset = "0xDF99E8", VA = "0xDF99E8")]
		public void DeactivateElement()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xDF99FC", Offset = "0xDF99FC", VA = "0xDF99FC")]
		public void ReactivateElement()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xDF9A14", Offset = "0xDF9A14", VA = "0xDF9A14", Slot = "4")]
		protected virtual void activate(bool state)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xDF9A1C", Offset = "0xDF9A1C", VA = "0xDF9A1C")]
		private void activateAll(bool state)
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xDF9B8C", Offset = "0xDF9B8C", VA = "0xDF9B8C")]
		public VRElement()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public enum CROSSHAIR_TYPE
	{
		[Token(Token = "0x4001161")]
		SINGLE_SPRITE,
		[Token(Token = "0x4001162")]
		DUAL_SPRITE
	}
	[Token(Token = "0x2000288")]
	public enum VRELEMENT_TYPE
	{
		[Token(Token = "0x4001164")]
		BUTTON_2D,
		[Token(Token = "0x4001165")]
		BUTTON_3D,
		[Token(Token = "0x4001166")]
		DISPLAY_BUTTON,
		[Token(Token = "0x4001167")]
		GUI_BUTTON,
		[Token(Token = "0x4001168")]
		TOGGLE_BUTTON,
		[Token(Token = "0x4001169")]
		TRIGGER_AREA,
		[Token(Token = "0x400116A")]
		SLIDER,
		[Token(Token = "0x400116B")]
		PANORAMA_VIEW
	}
	[Token(Token = "0x2000289")]
	public enum VRELEMENT_FACE_DIRECTION
	{
		[Token(Token = "0x400116D")]
		UP,
		[Token(Token = "0x400116E")]
		FORWARD
	}
	[Token(Token = "0x200028A")]
	public enum VRBUTTON_REFRESH_TYPE
	{
		[Token(Token = "0x4001170")]
		NORMAL,
		[Token(Token = "0x4001171")]
		STICKY,
		[Token(Token = "0x4001172")]
		BILLBOARD
	}
	[Token(Token = "0x200028B")]
	public enum SWITCH_TYPE
	{
		[Token(Token = "0x4001174")]
		MESH,
		[Token(Token = "0x4001175")]
		MATERIAL,
		[Token(Token = "0x4001176")]
		TEXTURE,
		[Token(Token = "0x4001177")]
		SPRITE,
		[Token(Token = "0x4001178")]
		CUSTOM
	}
	[Token(Token = "0x200028C")]
	public enum VRBUTTON_COLLIDER_TYPE
	{
		[Token(Token = "0x400117A")]
		BOX,
		[Token(Token = "0x400117B")]
		MESH,
		[Token(Token = "0x400117C")]
		SPHERE,
		[Token(Token = "0x400117D")]
		CAPSULE
	}
	[Token(Token = "0x200028D")]
	public enum VROBJECTBUTTON_VALIDATE_ERROR
	{
		[Token(Token = "0x400117F")]
		NONE,
		[Token(Token = "0x4001180")]
		ALREADY_VROBJECTBUTTON,
		[Token(Token = "0x4001181")]
		NEEDS_COLLIDER
	}
	[Token(Token = "0x200028E")]
	public enum DISPLAY_IMAGE_TYPE
	{
		[Token(Token = "0x4001183")]
		SPRITE,
		[Token(Token = "0x4001184")]
		TEXTURE
	}
	[Token(Token = "0x200028F")]
	public enum VRSELECTOR_TYPE
	{
		[Token(Token = "0x4001186")]
		SIGHT,
		[Token(Token = "0x4001187")]
		POINTER,
		[Token(Token = "0x4001188")]
		TOUCH
	}
	[Token(Token = "0x2000290")]
	public enum VRLOCOMOTION_INPUT
	{
		[Token(Token = "0x400118A")]
		UNITY_INPUT,
		[Token(Token = "0x400118B")]
		GENERIC_VR_CONTROLLER,
		[Token(Token = "0x400118C")]
		STEAM_CONTROLLER,
		[Token(Token = "0x400118D")]
		MOBILE_TILT,
		[Token(Token = "0x400118E")]
		TRIGGER
	}
	[Token(Token = "0x2000291")]
	public enum PLAY_ACTION
	{
		[Token(Token = "0x4001190")]
		PLAY,
		[Token(Token = "0x4001191")]
		STOP,
		[Token(Token = "0x4001192")]
		TOGGLE
	}
	[Token(Token = "0x2000292")]
	public enum HOTSPOT_TYPE
	{
		[Token(Token = "0x4001194")]
		LOAD_LOCATION,
		[Token(Token = "0x4001195")]
		INFO
	}
	[Token(Token = "0x2000293")]
	public enum GRAB_TYPE
	{
		[Token(Token = "0x4001197")]
		SLIDE,
		[Token(Token = "0x4001198")]
		DRAG,
		[Token(Token = "0x4001199")]
		ROTATE
	}
	[Token(Token = "0x2000294")]
	public enum LIGHTMAP_STATE
	{
		[Token(Token = "0x400119B")]
		LIGHTMAP1,
		[Token(Token = "0x400119C")]
		LIGHTMAP2
	}
	[Token(Token = "0x2000295")]
	public enum GENERIC_VR_BUTTON
	{
		[Token(Token = "0x400119E")]
		STEAMVR_RIGHT_CONTROLLER_MENU,
		[Token(Token = "0x400119F")]
		STEAMVR_RIGHT_TRACKPAD_PRESS,
		[Token(Token = "0x40011A0")]
		STEAMVR_RIGHT_TRACKPAD_TOUCH,
		[Token(Token = "0x40011A1")]
		STEAMVR_RIGHT_TRIGGER_TOUCH,
		[Token(Token = "0x40011A2")]
		STEAMVR_LEFT_CONTROLLER_MENU,
		[Token(Token = "0x40011A3")]
		STEAMVR_LEFT_TRACKPAD_PRESS,
		[Token(Token = "0x40011A4")]
		STEAMVR_LEFT_TRACKPAD_TOUCH,
		[Token(Token = "0x40011A5")]
		STEAMVR_LEFT_TRIGGER_TOUCH,
		[Token(Token = "0x40011A6")]
		OCULUS_ONE,
		[Token(Token = "0x40011A7")]
		OCULUS_THREE,
		[Token(Token = "0x40011A8")]
		OCULUS_PRIMARY_THUMB_STICK_PRESS,
		[Token(Token = "0x40011A9")]
		OCULUS_SECONDARY_THUMB_STICK_PRESS,
		[Token(Token = "0x40011AA")]
		OCULUS_PRIMARY_THUMB_STICK_TOUCH,
		[Token(Token = "0x40011AB")]
		OCULUS_SECONDARY_THUMB_STICK_TOUCH,
		[Token(Token = "0x40011AC")]
		OCULUS_PRIMARY_INDEX_TRIGGER,
		[Token(Token = "0x40011AD")]
		OCULUS_SECONDARY_INDEX_TRIGGER
	}
	[Token(Token = "0x2000296")]
	public enum GOOGLEVR_CONTROLLER_INPUT
	{
		[Token(Token = "0x40011AF")]
		IS_TOUCHING,
		[Token(Token = "0x40011B0")]
		APP_BUTTON,
		[Token(Token = "0x40011B1")]
		HOME_BUTTON_STATE,
		[Token(Token = "0x40011B2")]
		HOME_BUTTON_DOWN,
		[Token(Token = "0x40011B3")]
		TOUCH_DOWN,
		[Token(Token = "0x40011B4")]
		TOUCH_UP,
		[Token(Token = "0x40011B5")]
		CLICK_BUTTON,
		[Token(Token = "0x40011B6")]
		CLICK_BUTTON_DOWN,
		[Token(Token = "0x40011B7")]
		CLICK_BUTTON_UP,
		[Token(Token = "0x40011B8")]
		APP_BUTTON_DOWN,
		[Token(Token = "0x40011B9")]
		APP_BUTTON_UP
	}
	[Token(Token = "0x2000297")]
	public enum X_AXIS_TYPE
	{
		[Token(Token = "0x40011BB")]
		TRANSLATE,
		[Token(Token = "0x40011BC")]
		ROTATE
	}
	[Token(Token = "0x2000298")]
	public enum STEREOSCOPIC_MODE
	{
		[Token(Token = "0x40011BE")]
		IMAGE,
		[Token(Token = "0x40011BF")]
		VIDEO
	}
	[Token(Token = "0x2000299")]
	public enum PANORAMA_MODE
	{
		[Token(Token = "0x40011C1")]
		IMAGE,
		[Token(Token = "0x40011C2")]
		VIDEO
	}
	[Serializable]
	[Token(Token = "0x200029A")]
	public class InvalidMaterialProperty : Exception
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x9081E8", Offset = "0x9081E8", VA = "0x9081E8")]
		public InvalidMaterialProperty()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x908250", Offset = "0x908250", VA = "0x908250")]
		public InvalidMaterialProperty(string message)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x9082C8", Offset = "0x9082C8", VA = "0x9082C8")]
		public InvalidMaterialProperty(string message, Exception inner)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x908348", Offset = "0x908348", VA = "0x908348")]
		protected InvalidMaterialProperty(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class VREasy_utils
	{
		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715324", Offset = "0x715324")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type parentType;

			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0xDF8DA0", Offset = "0xDF8DA0", VA = "0xDF8DA0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0xDF998C", Offset = "0xDF998C", VA = "0xDF998C")]
			internal bool <LoadClassesFromAssembly>b__0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715334", Offset = "0x715334")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer renderer;

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0xDF9758", Offset = "0xDF9758", VA = "0xDF9758")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0xDF98D4", Offset = "0xDF98D4", VA = "0xDF98D4")]
			internal bool <SetAndConfigureSprite>b__0(Transform go)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string STORE_OPTIONS_FILE;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string WEB_URL_LINK;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string LOGO_IMAGE;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string VREASY_VERSION;

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xDF8984", Offset = "0xDF8984", VA = "0xDF8984")]
		public static void LoadClassesFromAssembly(Type parentType, ref List<string> assemblyNames, ref List<string> names, string substractString = "")
		{
		}

		[Token(Token = "0x6000FF7")]
		public static T LoadAndSetClassFromAssembly<T>(GameObject obj, string assemblyName) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xDF8DA8", Offset = "0xDF8DA8", VA = "0xDF8DA8")]
		public static void LoadComponents(GameObject target, ref List<Component> components_list, ref List<string> componentNames_list)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xDF91AC", Offset = "0xDF91AC", VA = "0xDF91AC")]
		public static void LoadPropertiesFromComponent(Component c, ref List<string> properties)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xDF9514", Offset = "0xDF9514", VA = "0xDF9514")]
		public static void LoadMethods(Type myType, ref List<MethodInfo> methods_list, ref List<string> methodNames_list)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xDF965C", Offset = "0xDF965C", VA = "0xDF965C")]
		public static void LoadParameters(MethodInfo myMethodInfo, ref List<Type> parameters_list)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xDF80E4", Offset = "0xDF80E4", VA = "0xDF80E4")]
		public static void SetAndConfigureSprite(Sprite sp, SpriteRenderer renderer, float width, float height)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xDF9760", Offset = "0xDF9760", VA = "0xDF9760")]
		public static Camera GetMainCamera()
		{
			return null;
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xDF698C", Offset = "0xDF698C", VA = "0xDF698C")]
		public static Transform GetMainCameraTransform()
		{
			return null;
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xDF9830", Offset = "0xDF9830", VA = "0xDF9830")]
		public VREasy_utils()
		{
		}
	}
}
namespace CameraController
{
	[Token(Token = "0x200029C")]
	internal enum MouseButtonDown
	{
		[Token(Token = "0x40011C8")]
		MBD_LEFT,
		[Token(Token = "0x40011C9")]
		MBD_RIGHT,
		[Token(Token = "0x40011CA")]
		MBD_MIDDLE
	}
	[Token(Token = "0x200029D")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 focus;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject focusObj;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool showInstWindow;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 oldPos;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x9175D8", Offset = "0x9175D8", VA = "0x9175D8")]
		private void setupFocusObject(string name)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x9176A4", Offset = "0x9176A4", VA = "0x9176A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x917798", Offset = "0x917798", VA = "0x917798")]
		private void Update()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x91784C", Offset = "0x91784C", VA = "0x91784C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x91779C", Offset = "0x91779C", VA = "0x91779C")]
		private void mouseEvent()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x917BBC", Offset = "0x917BBC", VA = "0x917BBC")]
		private void mouseDragEvent(Vector3 mousePos)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x917A34", Offset = "0x917A34", VA = "0x917A34")]
		public void mouseWheelEvent(float delta)
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x917DA0", Offset = "0x917DA0", VA = "0x917DA0")]
		private void cameraTranslate(Vector3 vec)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x917E84", Offset = "0x917E84", VA = "0x917E84")]
		public void cameraRotate(Vector3 eulerAngle)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x917FB4", Offset = "0x917FB4", VA = "0x917FB4")]
		public CameraController()
		{
		}
	}
}
namespace MirzaBeig.Shaders.ImageEffects
{
	[Serializable]
	[Token(Token = "0x200029E")]
	[ExecuteInEditMode]
	public class Sharpen : IEBase
	{
		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A374", Offset = "0x71A374")]
		public float strength;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A38C", Offset = "0x71A38C")]
		public float edgeMult;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xDEA260", Offset = "0xDEA260", VA = "0xDEA260")]
		private void Awake()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xDEA2B8", Offset = "0xDEA2B8", VA = "0xDEA2B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xDEA2BC", Offset = "0xDEA2BC", VA = "0xDEA2BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xDEA2C0", Offset = "0xDEA2C0", VA = "0xDEA2C0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xDEA368", Offset = "0xDEA368", VA = "0xDEA368")]
		public Sharpen()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029F")]
	[ExecuteInEditMode]
	public class IEBase : MonoBehaviour
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _material;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71A3A4", Offset = "0x71A3A4")]
		private Shader <shader>k__BackingField;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _camera;

		[Token(Token = "0x1700017A")]
		protected Material material
		{
			[Token(Token = "0x6001010")]
			[Address(RVA = "0xDE9FA4", Offset = "0xDE9FA4", VA = "0xDE9FA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		protected Shader shader
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0xDEA064", Offset = "0xDEA064", VA = "0xDEA064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE08", Offset = "0x71FE08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001012")]
			[Address(RVA = "0xDEA06C", Offset = "0xDEA06C", VA = "0xDEA06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE18", Offset = "0x71FE18")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		protected Camera camera
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0xDEA074", Offset = "0xDEA074", VA = "0xDEA074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xDEA108", Offset = "0xDEA108", VA = "0xDEA108")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xDEA10C", Offset = "0xDEA10C", VA = "0xDEA10C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xDEA110", Offset = "0xDEA110", VA = "0xDEA110")]
		private void Update()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xDEA114", Offset = "0xDEA114", VA = "0xDEA114")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xDEA118", Offset = "0xDEA118", VA = "0xDEA118")]
		protected void blit(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xDEA1A8", Offset = "0xDEA1A8", VA = "0xDEA1A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xDEA258", Offset = "0xDEA258", VA = "0xDEA258")]
		public IEBase()
		{
		}
	}
}
namespace MirzaBeig.Scripting.Effects
{
	[Token(Token = "0x20002A0")]
	public class AttractionParticleAffector : ParticleAffector
	{
		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A3B4", Offset = "0x71A3B4")]
		public float arrivalRadius;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float arrivedRadius;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float arrivalRadiusSqr;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float arrivedRadiusSqr;

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xC1D7E4", Offset = "0xC1D7E4", VA = "0xC1D7E4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xC1D7EC", Offset = "0xC1D7EC", VA = "0xC1D7EC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xC1D7F4", Offset = "0xC1D7F4", VA = "0xC1D7F4", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xC1D7FC", Offset = "0xC1D7FC", VA = "0xC1D7FC", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xC1D848", Offset = "0xC1D848", VA = "0xC1D848", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xC1D94C", Offset = "0xC1D94C", VA = "0xC1D94C", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xC1DAD4", Offset = "0xC1DAD4", VA = "0xC1DAD4")]
		public AttractionParticleAffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class ParticleAffectorMT : MonoBehaviour
	{
		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float force;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float randomX;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float randomY;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float randomZ;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float offsetX;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float offsetY;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float offsetZ;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float deltaTime;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread t;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly object locker;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool processing;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isDoneAssigning;

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xDE53D8", Offset = "0xDE53D8", VA = "0xDE53D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xDE53DC", Offset = "0xDE53DC", VA = "0xDE53DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xDE54FC", Offset = "0xDE54FC", VA = "0xDE54FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xDE57B0", Offset = "0xDE57B0", VA = "0xDE57B0")]
		private void process()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xDE5AB0", Offset = "0xDE5AB0", VA = "0xDE5AB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xDE5AB4", Offset = "0xDE5AB4", VA = "0xDE5AB4")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xDE5AB8", Offset = "0xDE5AB8", VA = "0xDE5AB8")]
		public ParticleAffectorMT()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A2")]
	public class TurbulenceParticleAffectorMT : MonoBehaviour
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float force;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float randomX;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float randomY;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float randomZ;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float offsetX;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float offsetY;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float offsetZ;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float deltaTime;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Thread t;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly object locker;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool processing;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool isDoneAssigning;

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xDE89EC", Offset = "0xDE89EC", VA = "0xDE89EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xDE89F0", Offset = "0xDE89F0", VA = "0xDE89F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xDE8B10", Offset = "0xDE8B10", VA = "0xDE8B10")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xDE8DC4", Offset = "0xDE8DC4", VA = "0xDE8DC4")]
		private void process()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xDE90C4", Offset = "0xDE90C4", VA = "0xDE90C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xDE90C8", Offset = "0xDE90C8", VA = "0xDE90C8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xDE90CC", Offset = "0xDE90CC", VA = "0xDE90CC")]
		public TurbulenceParticleAffectorMT()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A3")]
	public static class Noise
	{
		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float F3;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float G3;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static byte[] perm;

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xDE0194", Offset = "0xDE0194", VA = "0xDE0194")]
		private static float smooth(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xDE01AC", Offset = "0xDE01AC", VA = "0xDE01AC")]
		private static float fade(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xDE01D8", Offset = "0xDE01D8", VA = "0xDE01D8")]
		private static int floor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xDE01EC", Offset = "0xDE01EC", VA = "0xDE01EC")]
		private static float lerp(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xDE01FC", Offset = "0xDE01FC", VA = "0xDE01FC")]
		private static float grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xDE026C", Offset = "0xDE026C", VA = "0xDE026C")]
		public static float perlin(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xDE0CC0", Offset = "0xDE0CC0", VA = "0xDE0CC0")]
		public static float simplex(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xDE147C", Offset = "0xDE147C", VA = "0xDE147C")]
		public static float octavePerlin(float x, float y, float z, float frequency, int octaves, float lacunarity, float persistence)
		{
			return default(float);
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xDE15B4", Offset = "0xDE15B4", VA = "0xDE15B4")]
		public static float octaveSimplex(float x, float y, float z, float frequency, int octaves, float lacunarity, float persistence)
		{
			return default(float);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xDE16EC", Offset = "0xDE16EC", VA = "0xDE16EC")]
		public static float perlinUnoptimized(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xDE1ABC", Offset = "0xDE1ABC", VA = "0xDE1ABC")]
		public static float simplexUnoptimized(float x, float y, float z)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002A4")]
	public abstract class ParticleAffector : MonoBehaviour
	{
		[Token(Token = "0x2000519")]
		protected struct GetForceParameters
		{
			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float distanceToAffectorCenterSqr;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 scaledDirectionToAffectorCenter;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 particlePosition;
		}

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A3EC", Offset = "0x71A3EC")]
		public float radius;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float force;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _radius;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float radiusSqr;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float forceDeltaTime;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 transformPosition;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] particleSystemExternalForcesMultipliers;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve scaleForceByDistance;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<ParticleSystem> _particleSystems;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int particleSystemsCount;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<ParticleSystem> particleSystems;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ParticleSystem.Particle[][] particleSystemParticles;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ParticleSystem.MainModule[] particleSystemMainModules;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Renderer[] particleSystemRenderers;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected ParticleSystem currentParticleSystem;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GetForceParameters parameters;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool alwaysUpdate;

		[Token(Token = "0x1700017D")]
		public float scaledRadius
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0xDE4104", Offset = "0xDE4104", VA = "0xDE4104")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xDE413C", Offset = "0xDE413C", VA = "0xDE413C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xDE4140", Offset = "0xDE4140", VA = "0xDE4140", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xDE4198", Offset = "0xDE4198", VA = "0xDE4198", Slot = "6")]
		protected virtual void PerParticleSystemSetup()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xDE419C", Offset = "0xDE419C", VA = "0xDE419C", Slot = "7")]
		protected virtual Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xDE41FC", Offset = "0xDE41FC", VA = "0xDE41FC", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xDE4200", Offset = "0xDE4200", VA = "0xDE4200")]
		public void AddParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xDE4268", Offset = "0xDE4268", VA = "0xDE4268")]
		public void RemoveParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xDE42D0", Offset = "0xDE42D0", VA = "0xDE42D0", Slot = "9")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xDE5130", Offset = "0xDE5130", VA = "0xDE5130")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xDE5134", Offset = "0xDE5134", VA = "0xDE5134", Slot = "10")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xDE5234", Offset = "0xDE5234", VA = "0xDE5234")]
		protected ParticleAffector()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class TurbulenceParticleAffector : ParticleAffector
	{
		[Token(Token = "0x200051A")]
		public enum NoiseType
		{
			[Token(Token = "0x4001E7D")]
			PseudoPerlin,
			[Token(Token = "0x4001E7E")]
			Perlin,
			[Token(Token = "0x4001E7F")]
			Simplex,
			[Token(Token = "0x4001E80")]
			OctavePerlin,
			[Token(Token = "0x4001E81")]
			OctaveSimplex
		}

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A424", Offset = "0x71A424")]
		public float speed;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A45C", Offset = "0x71A45C")]
		public float frequency;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public NoiseType noiseType;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A474", Offset = "0x71A474")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A474", Offset = "0x71A474")]
		public int octaves;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A4C8", Offset = "0x71A4C8")]
		public float lacunarity;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A4E0", Offset = "0x71A4E0")]
		public float persistence;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float time;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float randomX;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float randomY;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float randomZ;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float offsetX;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float offsetY;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float offsetZ;

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xDE8480", Offset = "0xDE8480", VA = "0xDE8480", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xDE8484", Offset = "0xDE8484", VA = "0xDE8484", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xDE84F8", Offset = "0xDE84F8", VA = "0xDE84F8", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xDE8520", Offset = "0xDE8520", VA = "0xDE8520", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xDE854C", Offset = "0xDE854C", VA = "0xDE854C", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xDE8998", Offset = "0xDE8998", VA = "0xDE8998", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xDE89D0", Offset = "0xDE89D0", VA = "0xDE89D0")]
		public TurbulenceParticleAffector()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class VortexParticleAffector : ParticleAffector
	{
		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 axisOfRotation;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A4F8", Offset = "0x71A4F8")]
		public Vector3 axisOfRotationOffset;

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xDE96A8", Offset = "0xDE96A8", VA = "0xDE96A8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xDE96AC", Offset = "0xDE96AC", VA = "0xDE96AC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xDE96B0", Offset = "0xDE96B0", VA = "0xDE96B0", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xDE96B4", Offset = "0xDE96B4", VA = "0xDE96B4", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xDE96B8", Offset = "0xDE96B8", VA = "0xDE96B8")]
		private void UpdateAxisOfRotation()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xDE979C", Offset = "0xDE979C", VA = "0xDE979C", Slot = "6")]
		protected override void PerParticleSystemSetup()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xDE97A0", Offset = "0xDE97A0", VA = "0xDE97A0", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xDE984C", Offset = "0xDE984C", VA = "0xDE984C", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xDE9ACC", Offset = "0xDE9ACC", VA = "0xDE9ACC")]
		public VortexParticleAffector()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7144CC", Offset = "0x7144CC")]
	public class ParticleFlocking : MonoBehaviour
	{
		[Token(Token = "0x200051B")]
		public struct Voxel
		{
			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Bounds bounds;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] particles;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int particleCount;
		}

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A530", Offset = "0x71A530")]
		public float maxDistance;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A568", Offset = "0x71A568")]
		public float cohesion;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float separation;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A5A0", Offset = "0x71A5A0")]
		public bool useVoxels;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool voxelLocalCenterFromBounds;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float voxelVolume;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int voxelsPerAxis;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int previousVoxelsPerAxisValue;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Voxel[] voxels;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] particlePositions;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem.MainModule particleSystemMainModule;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A5D8", Offset = "0x71A5D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A5D8", Offset = "0x71A5D8")]
		public float delay;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timer;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool alwaysUpdate;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool visible;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xDE5B28", Offset = "0xDE5B28", VA = "0xDE5B28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xDE5B94", Offset = "0xDE5B94", VA = "0xDE5B94")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xDE5BA0", Offset = "0xDE5BA0", VA = "0xDE5BA0")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xDE5BA8", Offset = "0xDE5BA8", VA = "0xDE5BA8")]
		private void buildVoxelGrid()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xDE5E10", Offset = "0xDE5E10", VA = "0xDE5E10")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xDE6908", Offset = "0xDE6908", VA = "0xDE6908")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xDE6B34", Offset = "0xDE6B34", VA = "0xDE6B34")]
		public ParticleFlocking()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x714530", Offset = "0x714530")]
	public class AttractionParticleForceField : ParticleForceField
	{
		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A62C", Offset = "0x71A62C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A62C", Offset = "0x71A62C")]
		public float arrivalRadius;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A68C", Offset = "0x71A68C")]
		public float arrivedRadius;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float arrivalRadiusSqr;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float arrivedRadiusSqr;

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xDDE98C", Offset = "0xDDE98C", VA = "0xDDE98C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xDDE994", Offset = "0xDDE994", VA = "0xDDE994", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xDDE9F0", Offset = "0xDDE9F0", VA = "0xDDE9F0", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xDDE9F8", Offset = "0xDDE9F8", VA = "0xDDE9F8", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xDDF8A0", Offset = "0xDDF8A0", VA = "0xDDF8A0", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xDDF9A4", Offset = "0xDDF9A4", VA = "0xDDF9A4", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xDDFC28", Offset = "0xDDFC28", VA = "0xDDFC28")]
		public AttractionParticleForceField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A9")]
	public static class Noise2
	{
		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float F3;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float G3;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static byte[] perm;

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xDE214C", Offset = "0xDE214C", VA = "0xDE214C")]
		private static float smooth(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xDE2164", Offset = "0xDE2164", VA = "0xDE2164")]
		private static float fade(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xDE2190", Offset = "0xDE2190", VA = "0xDE2190")]
		private static int floor(float x)
		{
			return default(int);
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xDE21A4", Offset = "0xDE21A4", VA = "0xDE21A4")]
		private static float lerp(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xDE21B4", Offset = "0xDE21B4", VA = "0xDE21B4")]
		private static float grad(int hash, float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xDE2224", Offset = "0xDE2224", VA = "0xDE2224")]
		public static float perlin(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xDE2C78", Offset = "0xDE2C78", VA = "0xDE2C78")]
		public static float simplex(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xDE3434", Offset = "0xDE3434", VA = "0xDE3434")]
		public static float octavePerlin(float x, float y, float z, float frequency, int octaves, float lacunarity, float persistence)
		{
			return default(float);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xDE356C", Offset = "0xDE356C", VA = "0xDE356C")]
		public static float octaveSimplex(float x, float y, float z, float frequency, int octaves, float lacunarity, float persistence)
		{
			return default(float);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xDE36A4", Offset = "0xDE36A4", VA = "0xDE36A4")]
		public static float perlinUnoptimized(float x, float y, float z)
		{
			return default(float);
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xDE3A74", Offset = "0xDE3A74", VA = "0xDE3A74")]
		public static float simplexUnoptimized(float x, float y, float z)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20002AA")]
	public abstract class ParticleForceField : MonoBehaviour
	{
		[Token(Token = "0x200051C")]
		protected struct GetForceParameters
		{
			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float distanceToForceFieldCenterSqr;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 scaledDirectionToForceFieldCenter;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 particlePosition;
		}

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A6C4", Offset = "0x71A6C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A6C4", Offset = "0x71A6C4")]
		public float radius;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A724", Offset = "0x71A724")]
		public float force;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A75C", Offset = "0x71A75C")]
		public Vector3 center;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _radius;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float radiusSqr;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float forceDeltaTime;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 transformPosition;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] particleSystemExternalForcesMultipliers;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A794", Offset = "0x71A794")]
		public AnimationCurve forceOverDistance;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A7CC", Offset = "0x71A7CC")]
		public List<ParticleSystem> _particleSystems;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int particleSystemsCount;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<ParticleSystem> particleSystems;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ParticleSystem.Particle[][] particleSystemParticles;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ParticleSystem.MainModule[] particleSystemMainModules;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Renderer[] particleSystemRenderers;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected ParticleSystem currentParticleSystem;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected GetForceParameters parameters;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A804", Offset = "0x71A804")]
		public bool alwaysUpdate;

		[Token(Token = "0x1700017E")]
		public float scaledRadius
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0xDE6B60", Offset = "0xDE6B60", VA = "0xDE6B60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xDDE990", Offset = "0xDDE990", VA = "0xDDE990", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xDDE998", Offset = "0xDDE998", VA = "0xDDE998", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xDE6B98", Offset = "0xDE6B98", VA = "0xDE6B98", Slot = "6")]
		protected virtual void PerParticleSystemSetup()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xDE6B9C", Offset = "0xDE6B9C", VA = "0xDE6B9C", Slot = "7")]
		protected virtual Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xDDE9F4", Offset = "0xDDE9F4", VA = "0xDDE9F4", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xDE6BFC", Offset = "0xDE6BFC", VA = "0xDE6BFC")]
		public void AddParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xDE6C64", Offset = "0xDE6C64", VA = "0xDE6C64")]
		public void RemoveParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xDDEA40", Offset = "0xDDEA40", VA = "0xDDEA40", Slot = "9")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xDE6CCC", Offset = "0xDE6CCC", VA = "0xDE6CCC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xDDFB28", Offset = "0xDDFB28", VA = "0xDDFB28", Slot = "10")]
		protected virtual void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xDDFC38", Offset = "0xDDFC38", VA = "0xDDFC38")]
		protected ParticleForceField()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x714568", Offset = "0x714568")]
	public class TurbulenceParticleForceField : ParticleForceField
	{
		[Token(Token = "0x200051D")]
		public enum NoiseType
		{
			[Token(Token = "0x4001E89")]
			PseudoPerlin,
			[Token(Token = "0x4001E8A")]
			Perlin,
			[Token(Token = "0x4001E8B")]
			Simplex,
			[Token(Token = "0x4001E8C")]
			OctavePerlin,
			[Token(Token = "0x4001E8D")]
			OctaveSimplex
		}

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A83C", Offset = "0x71A83C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A83C", Offset = "0x71A83C")]
		public float scrollSpeed;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A89C", Offset = "0x71A89C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A89C", Offset = "0x71A89C")]
		public float frequency;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public NoiseType noiseType;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71A8F0", Offset = "0x71A8F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A8F0", Offset = "0x71A8F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A8F0", Offset = "0x71A8F0")]
		public int octaves;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A968", Offset = "0x71A968")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A968", Offset = "0x71A968")]
		public float octaveMultiplier;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71A9BC", Offset = "0x71A9BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71A9BC", Offset = "0x71A9BC")]
		public float octaveScale;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float time;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float randomX;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float randomY;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float randomZ;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float offsetX;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float offsetY;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float offsetZ;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xDE913C", Offset = "0xDE913C", VA = "0xDE913C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xDE9140", Offset = "0xDE9140", VA = "0xDE9140", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xDE91B4", Offset = "0xDE91B4", VA = "0xDE91B4", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xDE91DC", Offset = "0xDE91DC", VA = "0xDE91DC", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xDE9208", Offset = "0xDE9208", VA = "0xDE9208", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xDE9654", Offset = "0xDE9654", VA = "0xDE9654", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xDE968C", Offset = "0xDE968C", VA = "0xDE968C")]
		public TurbulenceParticleForceField()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7145A0", Offset = "0x7145A0")]
	public class VortexParticleForceField : ParticleForceField
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 axisOfRotation;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71AA10", Offset = "0x71AA10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71AA10", Offset = "0x71AA10")]
		public Vector3 axisOfRotationOffset;

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xDE9B40", Offset = "0xDE9B40", VA = "0xDE9B40", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xDE9B44", Offset = "0xDE9B44", VA = "0xDE9B44", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xDE9B48", Offset = "0xDE9B48", VA = "0xDE9B48", Slot = "8")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xDE9B4C", Offset = "0xDE9B4C", VA = "0xDE9B4C", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xDE9B50", Offset = "0xDE9B50", VA = "0xDE9B50")]
		private void UpdateAxisOfRotation()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xDE9C34", Offset = "0xDE9C34", VA = "0xDE9C34", Slot = "6")]
		protected override void PerParticleSystemSetup()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xDE9C38", Offset = "0xDE9C38", VA = "0xDE9C38", Slot = "7")]
		protected override Vector3 GetForce()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xDE9CE4", Offset = "0xDE9CE4", VA = "0xDE9CE4", Slot = "10")]
		protected override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xDE9F30", Offset = "0xDE9F30", VA = "0xDE9F30")]
		public VortexParticleForceField()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7145D8", Offset = "0x7145D8")]
	public class ParticleLights : MonoBehaviour
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem ps;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Light> lights;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scale;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71AA70", Offset = "0x71AA70")]
		public float intensity;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color colour;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71AA88", Offset = "0x71AA88")]
		public float colourFromParticle;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LightShadows shadows;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject template;

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xDE6CD0", Offset = "0xDE6CD0", VA = "0xDE6CD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xDE6CD4", Offset = "0xDE6CD4", VA = "0xDE6CD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xDE6D9C", Offset = "0xDE6D9C", VA = "0xDE6D9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xDE6DA0", Offset = "0xDE6DA0", VA = "0xDE6DA0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xDE71B0", Offset = "0xDE71B0", VA = "0xDE71B0")]
		public ParticleLights()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x71463C", Offset = "0x71463C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x71463C", Offset = "0x71463C")]
	public class ParticlePlexus : MonoBehaviour
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDistance;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxConnections;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxLineRenderers;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71AAA0", Offset = "0x71AAA0")]
		public float widthFromParticle;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71AAB8", Offset = "0x71AAB8")]
		public float colourFromParticle;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71AAD0", Offset = "0x71AAD0")]
		public float alphaFromParticle;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] particlePositions;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color[] particleColours;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] particleSizes;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem.MainModule particleSystemMainModule;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LineRenderer lineRendererTemplate;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<LineRenderer> lineRenderers;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _transform;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71AAE8", Offset = "0x71AAE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71AAE8", Offset = "0x71AAE8")]
		public float delay;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float timer;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool alwaysUpdate;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool visible;

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xDE7244", Offset = "0xDE7244", VA = "0xDE7244")]
		private void Start()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xDE72C0", Offset = "0xDE72C0", VA = "0xDE72C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xDE735C", Offset = "0xDE735C", VA = "0xDE735C")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xDE7368", Offset = "0xDE7368", VA = "0xDE7368")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xDE7370", Offset = "0xDE7370", VA = "0xDE7370")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xDE83EC", Offset = "0xDE83EC", VA = "0xDE83EC")]
		public ParticlePlexus()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public static class CreateLUT
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0xDDFDDC", Offset = "0xDDFDDC", VA = "0xDDFDDC")]
		public static void fromGradient(int steps, Gradient gradient, ref Texture2D texture)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xDDFF74", Offset = "0xDDFF74", VA = "0xDDFF74")]
		public static void fromAnimationCurve(int steps, AnimationCurve curve, ref Texture2D texture)
		{
		}
	}
}
namespace MirzaBeig.ParticleSystems
{
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7146C4", Offset = "0x7146C4")]
	public class AnimatedLight : MonoBehaviour
	{
		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Light light;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71AB3C", Offset = "0x71AB3C")]
		private float <time>k__BackingField;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool evaluating;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colourOverLifetime;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve intensityOverLifetime;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool loop;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool autoDestruct;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color startColour;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float startIntensity;

		[Token(Token = "0x1700017F")]
		public float time
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0xC18580", Offset = "0xC18580", VA = "0xC18580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE28", Offset = "0x71FE28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600109C")]
			[Address(RVA = "0xC18588", Offset = "0xC18588", VA = "0xC18588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE38", Offset = "0x71FE38")]
			set
			{
			}
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xC18590", Offset = "0xC18590", VA = "0xC18590")]
		private void Awake()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xC185E8", Offset = "0xC185E8", VA = "0xC185E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xC186C8", Offset = "0xC186C8", VA = "0xC186C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xC186CC", Offset = "0xC186CC", VA = "0xC186CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xC187B8", Offset = "0xC187B8", VA = "0xC187B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xC1895C", Offset = "0xC1895C", VA = "0xC1895C")]
		public AnimatedLight()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class Billboard : MonoBehaviour
	{
		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xC18B04", Offset = "0xC18B04", VA = "0xC18B04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xC18B58", Offset = "0xC18B58", VA = "0xC18B58")]
		public Billboard()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class DestroyAfterTime : MonoBehaviour
	{
		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xC1C4CC", Offset = "0xC1C4CC", VA = "0xC1C4CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xC1C558", Offset = "0xC1C558", VA = "0xC1C558")]
		public DestroyAfterTime()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class DestroyOnParticlesDead : ParticleSystems
	{
		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xC1C568", Offset = "0xC1C568", VA = "0xC1C568", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xC1C5C4", Offset = "0xC1C5C4", VA = "0xC1C5C4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xC1C6EC", Offset = "0xC1C6EC", VA = "0xC1C6EC")]
		private void onParticleSystemsDead()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xC1C768", Offset = "0xC1C768", VA = "0xC1C768", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xC1C770", Offset = "0xC1C770", VA = "0xC1C770", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xC1C7B8", Offset = "0xC1C7B8", VA = "0xC1C7B8")]
		public DestroyOnParticlesDead()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class DestroyOnTrailsDestroyed : TrailRenderers
	{
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xC1C7C8", Offset = "0xC1C7C8", VA = "0xC1C7C8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xC1C7D0", Offset = "0xC1C7D0", VA = "0xC1C7D0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xC1C82C", Offset = "0xC1C82C", VA = "0xC1C82C", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xC1C934", Offset = "0xC1C934", VA = "0xC1C934")]
		public DestroyOnTrailsDestroyed()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class IgnoreTimeScale : MonoBehaviour
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem particleSystem;

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xC1C944", Offset = "0xC1C944", VA = "0xC1C944")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xC1C948", Offset = "0xC1C948", VA = "0xC1C948")]
		private void Start()
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xC1C9A0", Offset = "0xC1C9A0", VA = "0xC1C9A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xC1C9DC", Offset = "0xC1C9DC", VA = "0xC1C9DC")]
		public IgnoreTimeScale()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class ParticleSystems : MonoBehaviour
	{
		[Token(Token = "0x200051E")]
		public delegate void onParticleSystemsDeadEventHandler();

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71AB4C", Offset = "0x71AB4C")]
		private ParticleSystem[] <particleSystems>k__BackingField;

		[Token(Token = "0x17000180")]
		public ParticleSystem[] particleSystems
		{
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xC1C9E4", Offset = "0xC1C9E4", VA = "0xC1C9E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE48", Offset = "0x71FE48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xC1C9EC", Offset = "0xC1C9EC", VA = "0xC1C9EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE58", Offset = "0x71FE58")]
			set
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event onParticleSystemsDeadEventHandler onParticleSystemsDeadEvent
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xC1C648", Offset = "0xC1C648", VA = "0xC1C648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE68", Offset = "0x71FE68")]
			add
			{
			}
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xC1C9F4", Offset = "0xC1C9F4", VA = "0xC1C9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE78", Offset = "0x71FE78")]
			remove
			{
			}
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xC1C56C", Offset = "0xC1C56C", VA = "0xC1C56C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xC1C634", Offset = "0xC1C634", VA = "0xC1C634", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xC1C76C", Offset = "0xC1C76C", VA = "0xC1C76C", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xC1C774", Offset = "0xC1C774", VA = "0xC1C774", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xC1CD9C", Offset = "0xC1CD9C", VA = "0xC1CD9C")]
		public void reset()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xC1CE0C", Offset = "0xC1CE0C", VA = "0xC1CE0C")]
		public void play()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xC1CE7C", Offset = "0xC1CE7C", VA = "0xC1CE7C")]
		public void pause()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xC16B98", Offset = "0xC16B98", VA = "0xC16B98")]
		public void stop()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xC1CEEC", Offset = "0xC1CEEC", VA = "0xC1CEEC")]
		public void clear()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xC1CF5C", Offset = "0xC1CF5C", VA = "0xC1CF5C")]
		public void setLoop(bool loop)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xC1CFEC", Offset = "0xC1CFEC", VA = "0xC1CFEC")]
		public void setPlaybackSpeed(float speed)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xC1D07C", Offset = "0xC1D07C", VA = "0xC1D07C")]
		public void simulate(float time, bool reset = false)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xC1CA98", Offset = "0xC1CA98", VA = "0xC1CA98")]
		public bool isAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xC1D10C", Offset = "0xC1D10C", VA = "0xC1D10C")]
		public bool isPlaying(bool checkAll = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xC1BFC0", Offset = "0xC1BFC0", VA = "0xC1BFC0")]
		public int getParticleCount()
		{
			return default(int);
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xC1C7C0", Offset = "0xC1C7C0", VA = "0xC1C7C0")]
		public ParticleSystems()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class ParticleSystemsSimulationSpeed : ParticleSystems
	{
		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xC1D198", Offset = "0xC1D198", VA = "0xC1D198", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xC1D19C", Offset = "0xC1D19C", VA = "0xC1D19C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xC1D1A0", Offset = "0xC1D1A0", VA = "0xC1D1A0", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xC1D1A8", Offset = "0xC1D1A8", VA = "0xC1D1A8", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xC1D1AC", Offset = "0xC1D1AC", VA = "0xC1D1AC")]
		public ParticleSystemsSimulationSpeed()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B8")]
	public class PerlinNoise
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 offset;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float amplitude;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float frequency;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool unscaledTime;

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xC1818C", Offset = "0xC1818C", VA = "0xC1818C")]
		public void init()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xC18284", Offset = "0xC18284", VA = "0xC18284")]
		public float GetValue(float time)
		{
			return default(float);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xC1D1BC", Offset = "0xC1D1BC", VA = "0xC1D1BC")]
		public PerlinNoise()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002B9")]
	public class PerlinNoiseXYZ
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PerlinNoise x;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PerlinNoise y;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PerlinNoise z;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool unscaledTime;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float amplitudeScale;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float frequencyScale;

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xC1D1CC", Offset = "0xC1D1CC", VA = "0xC1D1CC")]
		public void init()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xC1D294", Offset = "0xC1D294", VA = "0xC1D294")]
		public Vector3 GetXYZ(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xC1D38C", Offset = "0xC1D38C", VA = "0xC1D38C")]
		public PerlinNoiseXYZ()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714728", Offset = "0x714728")]
	public class RendererSortingOrder : MonoBehaviour
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sortingOrder;

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xC1D39C", Offset = "0xC1D39C", VA = "0xC1D39C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xC1D3A0", Offset = "0xC1D3A0", VA = "0xC1D3A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xC1D404", Offset = "0xC1D404", VA = "0xC1D404")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xC1D408", Offset = "0xC1D408", VA = "0xC1D408")]
		public RendererSortingOrder()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localRotationSpeed;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 worldRotationSpeed;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool executeInEditMode;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool unscaledTime;

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xC1D410", Offset = "0xC1D410", VA = "0xC1D410")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xC1D414", Offset = "0xC1D414", VA = "0xC1D414")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xC1D418", Offset = "0xC1D418", VA = "0xC1D418")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xC1D648", Offset = "0xC1D648", VA = "0xC1D648")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xC1D458", Offset = "0xC1D458", VA = "0xC1D458")]
		private void rotate()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xC1D680", Offset = "0xC1D680", VA = "0xC1D680")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class TrailRenderers : MonoBehaviour
	{
		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public TrailRenderer[] trailRenderers;

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xC1C7CC", Offset = "0xC1C7CC", VA = "0xC1C7CC", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xC1C7D4", Offset = "0xC1C7D4", VA = "0xC1C7D4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xC1C930", Offset = "0xC1C930", VA = "0xC1C930", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xC1D688", Offset = "0xC1D688", VA = "0xC1D688")]
		public void setAutoDestruct(bool value)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xC1C93C", Offset = "0xC1C93C", VA = "0xC1C93C")]
		public TrailRenderers()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class TransformNoise : MonoBehaviour
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PerlinNoiseXYZ positionNoise;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PerlinNoiseXYZ rotationNoise;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool unscaledTime;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float time;

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xC1D704", Offset = "0xC1D704", VA = "0xC1D704")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xC1D738", Offset = "0xC1D738", VA = "0xC1D738")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xC1D7DC", Offset = "0xC1D7DC", VA = "0xC1D7DC")]
		public TransformNoise()
		{
		}
	}
}
namespace MirzaBeig.ParticleSystems.Demos
{
	[Serializable]
	[Token(Token = "0x20002BE")]
	public class DemoManager_XPTitles : MonoBehaviour
	{
		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LoopingParticleSystemsManager list;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text particleCountText;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text currentParticleSystemText;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rotator cameraRotator;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xC1B564", Offset = "0xC1B564", VA = "0xC1B564")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xC1B5C4", Offset = "0xC1B5C4", VA = "0xC1B5C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xC1B6DC", Offset = "0xC1B6DC", VA = "0xC1B6DC")]
		public void ToggleRotation()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xC1B71C", Offset = "0xC1B71C", VA = "0xC1B71C")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xC1B7AC", Offset = "0xC1B7AC", VA = "0xC1B7AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xC1B8AC", Offset = "0xC1B8AC", VA = "0xC1B8AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xC1B83C", Offset = "0xC1B83C", VA = "0xC1B83C")]
		public void Next()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xC1B874", Offset = "0xC1B874", VA = "0xC1B874")]
		public void previous()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xC1B62C", Offset = "0xC1B62C", VA = "0xC1B62C")]
		private void updateCurrentParticleSystemNameText()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xC1B9C4", Offset = "0xC1B9C4", VA = "0xC1B9C4")]
		public DemoManager_XPTitles()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public enum CameraShakeTarget
	{
		[Token(Token = "0x4001298")]
		Position,
		[Token(Token = "0x4001299")]
		Rotation
	}
	[Token(Token = "0x20002C0")]
	public enum CameraShakeAmplitudeCurve
	{
		[Token(Token = "0x400129B")]
		Constant,
		[Token(Token = "0x400129C")]
		FadeInOut25,
		[Token(Token = "0x400129D")]
		FadeInOut50,
		[Token(Token = "0x400129E")]
		FadeInOut75
	}
	[Token(Token = "0x20002C1")]
	public enum CameraShakeAmplitudeOverDistanceCurve
	{
		[Token(Token = "0x40012A0")]
		Constant,
		[Token(Token = "0x40012A1")]
		LinearFadeIn,
		[Token(Token = "0x40012A2")]
		LinearFadeOut
	}
	[Token(Token = "0x20002C2")]
	public class CameraShake : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200051F")]
		public class Shake
		{
			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float amplitude;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float frequency;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float duration;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[HideInInspector]
			public CameraShakeTarget target;

			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float timeRemaining;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Vector2 perlinNoiseX;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector2 perlinNoiseY;

			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector2 perlinNoiseZ;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[HideInInspector]
			public Vector3 noise;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AnimationCurve amplitudeOverLifetimeCurve;

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xC19AF0", Offset = "0xC19AF0", VA = "0xC19AF0")]
			public void Init()
			{
			}

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xC19BA8", Offset = "0xC19BA8", VA = "0xC19BA8")]
			private void Init(float amplitude, float frequency, float duration, CameraShakeTarget target)
			{
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xC19AFC", Offset = "0xC19AFC", VA = "0xC19AFC")]
			public void ApplyRandomSeed()
			{
			}

			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0xC18C1C", Offset = "0xC18C1C", VA = "0xC18C1C")]
			public Shake(float amplitude, float frequency, float duration, CameraShakeTarget target, AnimationCurve amplitudeOverLifetimeCurve)
			{
			}

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xC18E64", Offset = "0xC18E64", VA = "0xC18E64")]
			public Shake(float amplitude, float frequency, float duration, CameraShakeTarget target, CameraShakeAmplitudeCurve amplitudeOverLifetimeCurve)
			{
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xC19AE0", Offset = "0xC19AE0", VA = "0xC19AE0")]
			public bool IsAlive()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xC197C0", Offset = "0xC197C0", VA = "0xC197C0")]
			public void Update()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715344", Offset = "0x715344")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Shake> <>9__10_0;

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xC19AB8", Offset = "0xC19AB8", VA = "0xC19AB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xC19AC0", Offset = "0xC19AC0", VA = "0xC19AC0")]
			internal bool <Update>b__10_0(Shake x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float smoothDampTime;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 smoothDampPositionVelocity;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float smoothDampRotationVelocityX;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float smoothDampRotationVelocityY;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float smoothDampRotationVelocityZ;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Shake> shakes;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xC18B60", Offset = "0xC18B60", VA = "0xC18B60")]
		private void Start()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xC18B64", Offset = "0xC18B64", VA = "0xC18B64")]
		public void Add(float amplitude, float frequency, float duration, CameraShakeTarget target, AnimationCurve amplitudeOverLifetimeCurve)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xC18DAC", Offset = "0xC18DAC", VA = "0xC18DAC")]
		public void Add(float amplitude, float frequency, float duration, CameraShakeTarget target, CameraShakeAmplitudeCurve amplitudeOverLifetimeCurve)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xC19374", Offset = "0xC19374", VA = "0xC19374")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xC199D8", Offset = "0xC199D8", VA = "0xC199D8")]
		public CameraShake()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class DemoManager : MonoBehaviour
	{
		[Token(Token = "0x2000521")]
		public enum ParticleMode
		{
			[Token(Token = "0x4001E9B")]
			looping,
			[Token(Token = "0x4001E9C")]
			oneshot
		}

		[Token(Token = "0x2000522")]
		public enum Level
		{
			[Token(Token = "0x4001E9E")]
			none,
			[Token(Token = "0x4001E9F")]
			basic
		}

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform cameraRotationTransform;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTranslationTransform;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 cameraLookAtPosition;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MouseFollow mouse;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 targetCameraPosition;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 targetCameraRotation;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cameraPositionStart;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 cameraRotationStart;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 input;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 cameraRotation;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float cameraMoveAmount;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float cameraRotateAmount;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cameraMoveSpeed;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float cameraRotationSpeed;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector2 cameraAngleLimits;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject[] levels;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Level currentLevel;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public ParticleMode particleMode;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool advancedRendering;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UnityEngine.UI.Toggle loopingParticleModeToggle;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UnityEngine.UI.Toggle oneshotParticleModeToggle;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UnityEngine.UI.Toggle advancedRenderingToggle;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private UnityEngine.UI.Toggle[] levelToggles;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public ToggleGroup levelTogglesContainer;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private LoopingParticleSystemsManager loopingParticleSystems;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private OneshotParticleSystemsManager oneshotParticleSystems;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject ui;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Text particleCountText;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Text currentParticleSystemText;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Text particleSpawnInstructionText;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Slider timeScaleSlider;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Text timeScaleSliderValueText;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Camera mainCamera;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public MonoBehaviour[] mainCameraPostEffects;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 cameraPositionSmoothDampVelocity;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 cameraRotationSmoothDampVelocity;

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xC19BBC", Offset = "0xC19BBC", VA = "0xC19BBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xC19D5C", Offset = "0xC19D5C", VA = "0xC19D5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xC1A34C", Offset = "0xC1A34C", VA = "0xC1A34C")]
		public void OnTimeScaleSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xC1A008", Offset = "0xC1A008", VA = "0xC1A008")]
		public void SetToLoopingParticleMode(bool set)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xC1A0AC", Offset = "0xC1A0AC", VA = "0xC1A0AC")]
		public void SetToOneshotParticleMode(bool set)
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xC1A52C", Offset = "0xC1A52C", VA = "0xC1A52C")]
		public void SetLevel(Level level)
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xC1A5BC", Offset = "0xC1A5BC", VA = "0xC1A5BC")]
		public void SetLevelFromToggle(UnityEngine.UI.Toggle toggle)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xC1A148", Offset = "0xC1A148", VA = "0xC1A148")]
		public void SetAdvancedRendering(bool value)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xC1A648", Offset = "0xC1A648", VA = "0xC1A648")]
		public static Vector3 DampVector3(Vector3 from, Vector3 to, float speed, float dt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xC1A734", Offset = "0xC1A734", VA = "0xC1A734")]
		private void Update()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xC1B0B8", Offset = "0xC1B0B8", VA = "0xC1B0B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xC19FF4", Offset = "0xC19FF4", VA = "0xC19FF4")]
		private void ResetCameraTransformTargets()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xC1A2D8", Offset = "0xC1A2D8", VA = "0xC1A2D8")]
		private void UpdateCurrentParticleSystemNameText()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xC1AC8C", Offset = "0xC1AC8C", VA = "0xC1AC8C")]
		public void Next()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xC1ACDC", Offset = "0xC1ACDC", VA = "0xC1ACDC")]
		public void Previous()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xC1B4C8", Offset = "0xC1B4C8", VA = "0xC1B4C8")]
		public DemoManager()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class FPSDisplay : MonoBehaviour
	{
		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float updateTime;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frameCount;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float fpsAccum;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text fpsText;

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xC1B9CC", Offset = "0xC1B9CC", VA = "0xC1B9CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xC1B9D0", Offset = "0xC1B9D0", VA = "0xC1B9D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xC1BA28", Offset = "0xC1BA28", VA = "0xC1BA28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xC1BB58", Offset = "0xC1BB58", VA = "0xC1BB58")]
		public FPSDisplay()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class FPSTest : MonoBehaviour
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int targetFPS1;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int targetFPS2;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int previousVSyncCount;

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xC1BB68", Offset = "0xC1BB68", VA = "0xC1BB68")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xC1BB6C", Offset = "0xC1BB6C", VA = "0xC1BB6C")]
		private void Start()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xC1BB70", Offset = "0xC1BB70", VA = "0xC1BB70")]
		private void Update()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xC1BBEC", Offset = "0xC1BBEC", VA = "0xC1BBEC")]
		public FPSTest()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class LoopingParticleSystemsManager : ParticleManager
	{
		[Token(Token = "0x600110D")]
		[Address(RVA = "0xC1BC00", Offset = "0xC1BC00", VA = "0xC1BC00", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xC1BC08", Offset = "0xC1BC08", VA = "0xC1BC08", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xC1BCB0", Offset = "0xC1BCB0", VA = "0xC1BCB0", Slot = "6")]
		public override void Next()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xC1BDFC", Offset = "0xC1BDFC", VA = "0xC1BDFC", Slot = "7")]
		public override void Previous()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xC1BF44", Offset = "0xC1BF44", VA = "0xC1BF44", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xC1BF4C", Offset = "0xC1BF4C", VA = "0xC1BF4C", Slot = "8")]
		public override int GetParticleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xC1C0B4", Offset = "0xC1C0B4", VA = "0xC1C0B4")]
		public LoopingParticleSystemsManager()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class MouseFollow : MonoBehaviour
	{
		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float distanceFromCamera;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ignoreTimeScale;

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xC1C0E4", Offset = "0xC1C0E4", VA = "0xC1C0E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xC1C0E8", Offset = "0xC1C0E8", VA = "0xC1C0E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xC1C0EC", Offset = "0xC1C0EC", VA = "0xC1C0EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xC1C274", Offset = "0xC1C274", VA = "0xC1C274")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xC1C278", Offset = "0xC1C278", VA = "0xC1C278")]
		public MouseFollow()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class OneshotParticleSystemsManager : ParticleManager
	{
		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayerMask mouseRaycastLayerMask;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ParticleSystems> spawnedPrefabs;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71AB7C", Offset = "0x71AB7C")]
		private bool <disableSpawn>k__BackingField;

		[Token(Token = "0x17000181")]
		public bool disableSpawn
		{
			[Token(Token = "0x6001119")]
			[Address(RVA = "0xC1C28C", Offset = "0xC1C28C", VA = "0xC1C28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE88", Offset = "0x71FE88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600111A")]
			[Address(RVA = "0xC1C294", Offset = "0xC1C294", VA = "0xC1C294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FE98", Offset = "0x71FE98")]
			set
			{
			}
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xC1C2A0", Offset = "0xC1C2A0", VA = "0xC1C2A0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xC1C2A4", Offset = "0xC1C2A4", VA = "0xC1C2A4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xC1C320", Offset = "0xC1C320", VA = "0xC1C320")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xC1A3E4", Offset = "0xC1A3E4", VA = "0xC1A3E4")]
		public void Clear()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xC1C324", Offset = "0xC1C324", VA = "0xC1C324", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xC1AD2C", Offset = "0xC1AD2C", VA = "0xC1AD2C")]
		public void InstantiateParticlePrefab(Vector2 mousePosition, float maxDistance)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xC1C328", Offset = "0xC1C328", VA = "0xC1C328")]
		public void Randomize()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xC1C388", Offset = "0xC1C388", VA = "0xC1C388", Slot = "8")]
		public override int GetParticleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xC1C4AC", Offset = "0xC1C4AC", VA = "0xC1C4AC")]
		public OneshotParticleSystemsManager()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class ParticleManager : MonoBehaviour
	{
		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<ParticleSystems> particlePrefabs;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentParticlePrefabIndex;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ParticleSystems> particlePrefabsAppend;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int prefabNameUnderscoreCountCutoff;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool disableChildrenAtStart;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initialized;

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xC19C60", Offset = "0xC19C60", VA = "0xC19C60")]
		public void Init()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xC1BC04", Offset = "0xC1BC04", VA = "0xC1BC04", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xC1BCA0", Offset = "0xC1BCA0", VA = "0xC1BCA0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xC1BD90", Offset = "0xC1BD90", VA = "0xC1BD90", Slot = "6")]
		public virtual void Next()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xC1BEDC", Offset = "0xC1BEDC", VA = "0xC1BEDC", Slot = "7")]
		public virtual void Previous()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xC1B1D4", Offset = "0xC1B1D4", VA = "0xC1B1D4")]
		public string GetCurrentPrefabName(bool shorten = false)
		{
			return null;
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xC1C4C4", Offset = "0xC1C4C4", VA = "0xC1C4C4", Slot = "8")]
		public virtual int GetParticleCount()
		{
			return default(int);
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xC1BF48", Offset = "0xC1BF48", VA = "0xC1BF48", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xC1C0CC", Offset = "0xC1C0CC", VA = "0xC1C0CC")]
		public ParticleManager()
		{
		}
	}
}
namespace MirzaBeig.Demos
{
	[Token(Token = "0x20002CA")]
	public class MouseRotateCamera : MonoBehaviour
	{
		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxRotation;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speed;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool unscaledTime;

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xC15354", Offset = "0xC15354", VA = "0xC15354")]
		private void Awake()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xC15358", Offset = "0xC15358", VA = "0xC15358")]
		private void Start()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xC1535C", Offset = "0xC1535C", VA = "0xC1535C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xC15360", Offset = "0xC15360", VA = "0xC15360")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xC15548", Offset = "0xC15548", VA = "0xC15548")]
		public MouseRotateCamera()
		{
		}
	}
}
namespace MirzaBeig.Demos.Wallpapers
{
	[Token(Token = "0x20002CB")]
	public class GravityClockInteractivityUVFX : MonoBehaviour
	{
		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject forceAffectors;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject forceAffectors2;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem gravityClockPrefab;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem gravityClock;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool enableGravityClockVisualEffects;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool enableGravityClockAttractionForce;

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xC18338", Offset = "0xC18338", VA = "0xC18338")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xC1833C", Offset = "0xC1833C", VA = "0xC1833C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xC18340", Offset = "0xC18340", VA = "0xC18340")]
		private void Update()
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xC18344", Offset = "0xC18344", VA = "0xC18344")]
		public void SetGravityClockVisualEffectsActive(bool value)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xC184C0", Offset = "0xC184C0", VA = "0xC184C0")]
		public void SetGravityClockAttractionForceActive(bool value)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xC18570", Offset = "0xC18570", VA = "0xC18570")]
		public GravityClockInteractivityUVFX()
		{
		}
	}
}
namespace MirzaBeig.Demos.ParticlePlayground
{
	[Token(Token = "0x20002CC")]
	public class BillboardCameraPlaneUVFX : MonoBehaviour
	{
		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xC1555C", Offset = "0xC1555C", VA = "0xC1555C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xC15560", Offset = "0xC15560", VA = "0xC15560")]
		private void Start()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xC15598", Offset = "0xC15598", VA = "0xC15598")]
		private void Update()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xC1559C", Offset = "0xC1559C", VA = "0xC1559C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xC15660", Offset = "0xC15660", VA = "0xC15660")]
		public BillboardCameraPlaneUVFX()
		{
		}
	}
}
namespace MirzaBeig.Demos.TheLastParticle
{
	[Serializable]
	[Token(Token = "0x20002CD")]
	public class AudioPitchAndVolumeByVelocity : MonoBehaviour
	{
		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxSpeed;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 volumeRange;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 pitchRange;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xC15668", Offset = "0xC15668", VA = "0xC15668")]
		private void Awake()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xC1566C", Offset = "0xC1566C", VA = "0xC1566C")]
		private void Start()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xC156DC", Offset = "0xC156DC", VA = "0xC156DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xC157E0", Offset = "0xC157E0", VA = "0xC157E0")]
		public AudioPitchAndVolumeByVelocity()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CE")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x2000523")]
		public struct ClipPlanePoints
		{
			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 UpperLeft;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 UpperRight;

			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 LowerLeft;

			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 LowerRight;
		}

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera camera;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71AB8C", Offset = "0x71AB8C")]
		public Transform target;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform offset;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71ABC4", Offset = "0x71ABC4")]
		public float followTargetSpeed;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71ABFC", Offset = "0x71ABFC")]
		private Vector2 mouseInput;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float mouseRotateAmount;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float mouseRotateSpeed;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float rotateZSpeed;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float resetZRotationSpeed;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector2 lookUpDownRange;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71AC34", Offset = "0x71AC34")]
		public float zoomDistance;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float mouseZoomAmount;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float mouseZoomSpeed;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float mouseZoomMin;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float mouseZoomMax;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71AC6C", Offset = "0x71AC6C")]
		public float occlusionZoomSpeed;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float occlusionZoomOffset;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float occlusionRaycastDownDistance;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve occlisionRaycastDownCurve;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71ACA4", Offset = "0x71ACA4")]
		public float offsetFramingAmount;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float offsetFramingSpeed;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float minPlayerSpeedForOffsetFraming;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float minMouseMoveForOffsetFraming;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 offsetStartPosition;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 offsetPositionTarget;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 offsetMouseFramePosition;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 rotationEuler;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 targetRotationEuler;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Player player;

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xC15864", Offset = "0xC15864", VA = "0xC15864")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xC15868", Offset = "0xC15868", VA = "0xC15868")]
		private void Start()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xC159C4", Offset = "0xC159C4", VA = "0xC159C4")]
		private void lockMouse()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xC159E8", Offset = "0xC159E8", VA = "0xC159E8")]
		private void unlockMouse()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xC15A0C", Offset = "0xC15A0C", VA = "0xC15A0C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xC15A10", Offset = "0xC15A10", VA = "0xC15A10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xC15AD4", Offset = "0xC15AD4", VA = "0xC15AD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xC16304", Offset = "0xC16304", VA = "0xC16304")]
		private void checkIfPlayerOccluded(out RaycastHit hitInfo)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xC166E4", Offset = "0xC166E4", VA = "0xC166E4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xC16714", Offset = "0xC16714", VA = "0xC16714")]
		public CameraController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CF")]
	public class Collectable : MonoBehaviour
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] deathPrefabs;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SetParent sp;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MirzaBeig.ParticleSystems.ParticleSystems ps;

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xC168BC", Offset = "0xC168BC", VA = "0xC168BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xC1692C", Offset = "0xC1692C", VA = "0xC1692C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xC16C08", Offset = "0xC16C08", VA = "0xC16C08")]
		public Collectable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D0")]
	public class CollectableSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collectable collectable;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float collectablesPerSecond;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 spawnBoxScale;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xC16C10", Offset = "0xC16C10", VA = "0xC16C10")]
		private void Start()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xC16C18", Offset = "0xC16C18", VA = "0xC16C18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xC16E04", Offset = "0xC16E04", VA = "0xC16E04")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xC16E44", Offset = "0xC16E44", VA = "0xC16E44")]
		public CollectableSpawner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D1")]
	public static class Damping
	{
		[Token(Token = "0x6001152")]
		[Address(RVA = "0xC1626C", Offset = "0xC1626C", VA = "0xC1626C")]
		public static float dampFloat(float from, float to, float speed, float deltaTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xC16180", Offset = "0xC16180", VA = "0xC16180")]
		public static Vector3 dampVector3(Vector3 from, Vector3 to, float speed, float deltaTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xC16ED0", Offset = "0xC16ED0", VA = "0xC16ED0")]
		public static Quaternion dampQuaternion(Quaternion from, Quaternion to, float speed, float deltaTime)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x20002D2")]
	public class DestroyOnAudioStop : MonoBehaviour
	{
		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xC16FC8", Offset = "0xC16FC8", VA = "0xC16FC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xC17020", Offset = "0xC17020", VA = "0xC17020")]
		private void Update()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xC170C0", Offset = "0xC170C0", VA = "0xC170C0")]
		public DestroyOnAudioStop()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D3")]
	public class InstantiatePrefabOnCollisionEnter : MonoBehaviour
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] prefabs;

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xC17114", Offset = "0xC17114", VA = "0xC17114")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xC172D0", Offset = "0xC172D0", VA = "0xC172D0")]
		public InstantiatePrefabOnCollisionEnter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D4")]
	public class OnTriggerEvents : MonoBehaviour
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnTriggerEvent;

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xC17328", Offset = "0xC17328", VA = "0xC17328")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xC1733C", Offset = "0xC1733C", VA = "0xC1733C")]
		public OnTriggerEvents()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D5")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71ACDC", Offset = "0x71ACDC")]
		private Rigidbody <rb>k__BackingField;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float thrust;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float boostThrustMult;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera camera;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotateToCameraForwardSpeed;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float cameraFieldOfViewMaxSpeed;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 cameraFieldOfViewAngleRange;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 startPosition;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion startRotation;

		[Token(Token = "0x17000182")]
		public Rigidbody rb
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0xC17344", Offset = "0xC17344", VA = "0xC17344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FEA8", Offset = "0x71FEA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600115D")]
			[Address(RVA = "0xC1734C", Offset = "0xC1734C", VA = "0xC1734C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FEB8", Offset = "0x71FEB8")]
			set
			{
			}
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xC17354", Offset = "0xC17354", VA = "0xC17354")]
		private void Awake()
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xC17358", Offset = "0xC17358", VA = "0xC17358")]
		private void Start()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xC17418", Offset = "0xC17418", VA = "0xC17418")]
		private void lockMouse()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xC1743C", Offset = "0xC1743C", VA = "0xC1743C")]
		private void unlockMouse()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xC17460", Offset = "0xC17460", VA = "0xC17460")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xC176B0", Offset = "0xC176B0", VA = "0xC176B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xC17774", Offset = "0xC17774", VA = "0xC17774")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xC178CC", Offset = "0xC178CC", VA = "0xC178CC")]
		public Player()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D6")]
	[ExecuteInEditMode]
	public class RandomInvoke : MonoBehaviour
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float nextInvokeTime;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 timeRange;

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xC17934", Offset = "0xC17934", VA = "0xC17934", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xC17960", Offset = "0xC17960", VA = "0xC17960", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xC179C8", Offset = "0xC179C8", VA = "0xC179C8", Slot = "6")]
		protected virtual void doSomething()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xC179CC", Offset = "0xC179CC", VA = "0xC179CC")]
		public RandomInvoke()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D7")]
	[ExecuteInEditMode]
	public class RandomInvoke_EmitParticle : RandomInvoke
	{
		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem ps;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntRange count;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnEmit;

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xC17A14", Offset = "0xC17A14", VA = "0xC17A14", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xC17A7C", Offset = "0xC17A7C", VA = "0xC17A7C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xC17A80", Offset = "0xC17A80", VA = "0xC17A80", Slot = "6")]
		protected override void doSomething()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xC17AE4", Offset = "0xC17AE4", VA = "0xC17AE4")]
		public RandomInvoke_EmitParticle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D8")]
	[ExecuteInEditMode]
	public class RandomInvoke_PlayRandomSound : RandomInvoke
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource audioSource;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] audioClips;

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xC17B5C", Offset = "0xC17B5C", VA = "0xC17B5C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xC17B88", Offset = "0xC17B88", VA = "0xC17B88", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xC17B8C", Offset = "0xC17B8C", VA = "0xC17B8C", Slot = "6")]
		protected override void doSomething()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xC17C0C", Offset = "0xC17C0C", VA = "0xC17C0C")]
		public RandomInvoke_PlayRandomSound()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D9")]
	public class RandomSequence
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int currentIndex;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] randomSequence;

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xC17C10", Offset = "0xC17C10", VA = "0xC17C10")]
		public RandomSequence(int rangeMax, int loopCount)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xC17E0C", Offset = "0xC17E0C", VA = "0xC17E0C")]
		public int get()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20002DA")]
	public class RandomSoundOverTime : MonoBehaviour
	{
		[Token(Token = "0x2000524")]
		public class RandomInt
		{
			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int value;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool used;

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xC180A8", Offset = "0xC180A8", VA = "0xC180A8")]
			public RandomInt()
			{
			}
		}

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 timeRange;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 volumeRange;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 pitchRange;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float nextPlayTime;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RandomSequence randomSequence;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] audioClips;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xC17E60", Offset = "0xC17E60", VA = "0xC17E60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xC17E64", Offset = "0xC17E64", VA = "0xC17E64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xC17EFC", Offset = "0xC17EFC", VA = "0xC17EFC")]
		private void setNextPlayTime()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xC17F28", Offset = "0xC17F28", VA = "0xC17F28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xC1800C", Offset = "0xC1800C", VA = "0xC1800C")]
		public RandomSoundOverTime()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DB")]
	public class IntRange
	{
		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int min;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int max;

		[Token(Token = "0x17000183")]
		public int random
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0xC17318", Offset = "0xC17318", VA = "0xC17318")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xC172D8", Offset = "0xC172D8", VA = "0xC172D8")]
		public IntRange(int min, int max)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DC")]
	public class FloatRange
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float min;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float max;

		[Token(Token = "0x17000184")]
		public float random
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0xC17108", Offset = "0xC17108", VA = "0xC17108")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xC170C8", Offset = "0xC170C8", VA = "0xC170C8")]
		public FloatRange(float min, float max)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DD")]
	public class SetParent : MonoBehaviour
	{
		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform parent;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] objects;

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xC16B18", Offset = "0xC16B18", VA = "0xC16B18")]
		public void run()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xC180B0", Offset = "0xC180B0", VA = "0xC180B0")]
		public SetParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DE")]
	public class VolumeAndPitchNoiseOverTime : MonoBehaviour
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource audioSource;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float baseVolume;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float basePitch;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PerlinNoise volumeNoise;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PerlinNoise pitchNoise;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool unscaledTime;

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xC180B8", Offset = "0xC180B8", VA = "0xC180B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xC181E8", Offset = "0xC181E8", VA = "0xC181E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xC18324", Offset = "0xC18324", VA = "0xC18324")]
		public VolumeAndPitchNoiseOverTime()
		{
		}
	}
}
namespace MagicalFX
{
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7147CC", Offset = "0x7147CC")]
	public class FX_AddForceForward : MonoBehaviour
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Force;

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xC0B064", Offset = "0xC0B064", VA = "0xC0B064")]
		private void Start()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xC0B184", Offset = "0xC0B184", VA = "0xC0B184")]
		private void Update()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xC0B188", Offset = "0xC0B188", VA = "0xC0B188")]
		public FX_AddForceForward()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class FX_Camera : MonoBehaviour
	{
		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 positionTemp;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 forcePower;

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xC0B198", Offset = "0xC0B198", VA = "0xC0B198")]
		private void Start()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xC0AFCC", Offset = "0xC0AFCC", VA = "0xC0AFCC")]
		public void Shake(Vector3 power)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xC0B210", Offset = "0xC0B210", VA = "0xC0B210")]
		private void Update()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xC0B3C8", Offset = "0xC0B3C8", VA = "0xC0B3C8")]
		public FX_Camera()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public static class CameraEffect
	{
		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FX_Camera CameraFX;

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xC0AEF8", Offset = "0xC0AEF8", VA = "0xC0AEF8")]
		public static void Shake(Vector3 power)
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class FX_HitSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject FXSpawn;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DestoyOnHit;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool FixRotation;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float LifeTimeAfterHit;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LifeTime;

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xC0B3D0", Offset = "0xC0B3D0", VA = "0xC0B3D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xC0B3D4", Offset = "0xC0B3D4", VA = "0xC0B3D4")]
		private void Spawn()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xC0B638", Offset = "0xC0B638", VA = "0xC0B638")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xC0B63C", Offset = "0xC0B63C", VA = "0xC0B63C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xC0B640", Offset = "0xC0B640", VA = "0xC0B640")]
		public FX_HitSpawner()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class FX_LifeTime : MonoBehaviour
	{
		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LifeTime;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject SpawnAfterDead;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float timeTemp;

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xC0B650", Offset = "0xC0B650", VA = "0xC0B650")]
		private void Start()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xC0B734", Offset = "0xC0B734", VA = "0xC0B734")]
		private void Update()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xC0B8B4", Offset = "0xC0B8B4", VA = "0xC0B8B4")]
		public FX_LifeTime()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714830", Offset = "0x714830")]
	public class FX_Mover : MonoBehaviour
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Noise;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Damping;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion direction;

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xC0B8C4", Offset = "0xC0B8C4", VA = "0xC0B8C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xC0BA48", Offset = "0xC0BA48", VA = "0xC0BA48")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xC0BC30", Offset = "0xC0BC30", VA = "0xC0BC30")]
		public FX_Mover()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class FX_MoverRandom : MonoBehaviour
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Noise;

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xC0BCBC", Offset = "0xC0BCBC", VA = "0xC0BCBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xC0BCC0", Offset = "0xC0BCC0", VA = "0xC0BCC0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xC0BEDC", Offset = "0xC0BEDC", VA = "0xC0BEDC")]
		public FX_MoverRandom()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class FX_ParticlePreview : MonoBehaviour
	{
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] Particles;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RotationSpeed;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Index;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D logo;

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xC0BF5C", Offset = "0xC0BF5C", VA = "0xC0BF5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xC0BF60", Offset = "0xC0BF60", VA = "0xC0BF60")]
		public void AddParticle(Vector3 position)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xC0C118", Offset = "0xC0C118", VA = "0xC0C118")]
		private void Update()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xC0C2EC", Offset = "0xC0C2EC", VA = "0xC0C2EC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xC0C630", Offset = "0xC0C630", VA = "0xC0C630")]
		public FX_ParticlePreview()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class FX_Position : MonoBehaviour
	{
		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Offset;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool Normal;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnMode Mode;

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xC0C640", Offset = "0xC0C640", VA = "0xC0C640")]
		private void Start()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xC0C644", Offset = "0xC0C644", VA = "0xC0C644")]
		private void Awake()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xC0C678", Offset = "0xC0C678", VA = "0xC0C678")]
		public void PlaceNormal(Vector3 position)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xC0C67C", Offset = "0xC0C67C", VA = "0xC0C67C")]
		public FX_Position()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public enum SpawnMode
	{
		[Token(Token = "0x4001358")]
		Static,
		[Token(Token = "0x4001359")]
		OnDirection
	}
	[Token(Token = "0x20002E9")]
	public class FX_RandomRotation : MonoBehaviour
	{
		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Rotation;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xC0C6E0", Offset = "0xC0C6E0", VA = "0xC0C6E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xC0C78C", Offset = "0xC0C78C", VA = "0xC0C78C")]
		public FX_RandomRotation()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class FX_RandomScale : MonoBehaviour
	{
		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ScaleMin;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ScaleMax;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xC0C794", Offset = "0xC0C794", VA = "0xC0C794")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xC0C860", Offset = "0xC0C860", VA = "0xC0C860")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xC0C864", Offset = "0xC0C864", VA = "0xC0C864")]
		public FX_RandomScale()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class FX_Rotation : MonoBehaviour
	{
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Speed;

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xC0C874", Offset = "0xC0C874", VA = "0xC0C874")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xC0C878", Offset = "0xC0C878", VA = "0xC0C878")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xC0C8B0", Offset = "0xC0C8B0", VA = "0xC0C8B0")]
		public FX_Rotation()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class FX_ShakeCamera : MonoBehaviour
	{
		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Power;

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xC0C928", Offset = "0xC0C928", VA = "0xC0C928")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xC0C934", Offset = "0xC0C934", VA = "0xC0C934")]
		public FX_ShakeCamera()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class FX_SpawnDirection : MonoBehaviour
	{
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Number;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Frequency;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool FixRotation;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Normal;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject FXSpawn;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LifeTime;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float TimeSpawn;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timeTemp;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseObjectForward;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 Direction;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int counter;

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xC0C9AC", Offset = "0xC0C9AC", VA = "0xC0C9AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xC0CD78", Offset = "0xC0CD78", VA = "0xC0CD78")]
		private void Update()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xC0CB7C", Offset = "0xC0CB7C", VA = "0xC0CB7C")]
		private void Spawn(Vector3 position)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xC0CF34", Offset = "0xC0CF34", VA = "0xC0CF34")]
		public FX_SpawnDirection()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class FX_Spawner : MonoBehaviour
	{
		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool FixRotation;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool Normal;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject FXSpawn;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LifeTime;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float TimeSpawn;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timeTemp;

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xC0CFC0", Offset = "0xC0CFC0", VA = "0xC0CFC0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xC0D1EC", Offset = "0xC0D1EC", VA = "0xC0D1EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xC0D448", Offset = "0xC0D448", VA = "0xC0D448")]
		public FX_Spawner()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class RainFall : MonoBehaviour
	{
		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Skill;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float AreaSize;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int MaxSpawn;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Duration;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float DropRate;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timeTemp;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timeTempDuration;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int count;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool isRaining;

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xC0D450", Offset = "0xC0D450", VA = "0xC0D450")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xC0D478", Offset = "0xC0D478", VA = "0xC0D478")]
		private void Spawn(Vector3 position)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xC0D5BC", Offset = "0xC0D5BC", VA = "0xC0D5BC")]
		public void StartRain()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xC0D5EC", Offset = "0xC0D5EC", VA = "0xC0D5EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xC0D760", Offset = "0xC0D760", VA = "0xC0D760")]
		public RainFall()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class RaisingWall : MonoBehaviour
	{
		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Skill;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Offset;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Distance;

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xC0D77C", Offset = "0xC0D77C", VA = "0xC0D77C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xC0D870", Offset = "0xC0D870", VA = "0xC0D870")]
		private void Raising()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xC0DAE0", Offset = "0xC0DAE0", VA = "0xC0DAE0")]
		public RaisingWall()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class Wizard : MonoBehaviour
	{
		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] Skills;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 positionLook;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Index;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool Showtime;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Delay;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float RandomSize;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool RandomSkill;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float timeTemp;

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xC0DAF4", Offset = "0xC0DAF4", VA = "0xC0DAF4")]
		private void Start()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xC0DB1C", Offset = "0xC0DB1C", VA = "0xC0DB1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xC0DE8C", Offset = "0xC0DE8C", VA = "0xC0DE8C")]
		private void Deploy()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xC0E000", Offset = "0xC0E000", VA = "0xC0E000")]
		private void Aim()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xC0E530", Offset = "0xC0E530", VA = "0xC0E530")]
		private void Shoot(GameObject skill)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xC0E24C", Offset = "0xC0E24C", VA = "0xC0E24C")]
		private void Place(GameObject skill)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xC0E33C", Offset = "0xC0E33C", VA = "0xC0E33C")]
		private void PlaceDirection(GameObject skill)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xC0E768", Offset = "0xC0E768", VA = "0xC0E768")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xC0EA08", Offset = "0xC0EA08", VA = "0xC0EA08")]
		public Wizard()
		{
		}
	}
}
namespace Ver2Stage3
{
	[Token(Token = "0x20002F2")]
	public class CollisionDetectWithYumbo : MonoBehaviour, IColliderYumbo, ICalculateCollisionYumbo
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectCheckCollider objectCheck;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isUseCollision;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool isUseTrigger;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManaAlertYumbo manaAlertYumboScript;

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xD6CF78", Offset = "0xD6CF78", VA = "0xD6CF78", Slot = "4")]
		public void CollisionEnterYumbo()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xD6D00C", Offset = "0xD6D00C", VA = "0xD6D00C", Slot = "5")]
		public void CollisionStayYumbo()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xD6D020", Offset = "0xD6D020", VA = "0xD6D020", Slot = "6")]
		public void CollisionExitYumbo()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xD6D034", Offset = "0xD6D034", VA = "0xD6D034", Slot = "7")]
		public void TriggerEnterYumbo()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xD6D048", Offset = "0xD6D048", VA = "0xD6D048", Slot = "8")]
		public void TriggerStayYumbo()
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xD6D05C", Offset = "0xD6D05C", VA = "0xD6D05C", Slot = "9")]
		public void TriggerExitYumbo()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xD6CF8C", Offset = "0xD6CF8C", VA = "0xD6CF8C")]
		private void SetStatusCollider(bool _value)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xD6D070", Offset = "0xD6D070", VA = "0xD6D070")]
		public CollisionDetectWithYumbo()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public enum ObjectCheckCollider
	{
		[Token(Token = "0x4001389")]
		InSite,
		[Token(Token = "0x400138A")]
		OutSite,
		[Token(Token = "0x400138B")]
		Car,
		[Token(Token = "0x400138C")]
		Crone
	}
	[Token(Token = "0x20002F4")]
	public class ManaAlertYumbo : MonoBehaviour
	{
		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inSite;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool colliderCrone;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool bucketOutsite;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool colliderCar;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string AlertOutsite;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string AlertBucketOutsite;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string AlertColliderCrone;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string AlertColliderCar;

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xD6D078", Offset = "0xD6D078", VA = "0xD6D078")]
		private void Update()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xD6D10C", Offset = "0xD6D10C", VA = "0xD6D10C")]
		public ManaAlertYumbo()
		{
		}
	}
}
namespace Tutorial
{
	[Token(Token = "0x20002F5")]
	public enum GamePadButtonName
	{
		[Token(Token = "0x4001396")]
		NULL,
		[Token(Token = "0x4001397")]
		LeftJoystick_left,
		[Token(Token = "0x4001398")]
		LeftJoystick_right,
		[Token(Token = "0x4001399")]
		LeftJoystick_up,
		[Token(Token = "0x400139A")]
		LeftJoystick_down,
		[Token(Token = "0x400139B")]
		RightJoystick_left,
		[Token(Token = "0x400139C")]
		RightJoystick_right,
		[Token(Token = "0x400139D")]
		RightJoystick_up,
		[Token(Token = "0x400139E")]
		RightJoystick_down,
		[Token(Token = "0x400139F")]
		L1,
		[Token(Token = "0x40013A0")]
		R1,
		[Token(Token = "0x40013A1")]
		L2,
		[Token(Token = "0x40013A2")]
		R2,
		[Token(Token = "0x40013A3")]
		L1_R1,
		[Token(Token = "0x40013A4")]
		L2_R2
	}
	[Serializable]
	[Token(Token = "0x20002F6")]
	public struct GamePadButton
	{
		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GamePadButtonName buttonName;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite buttonImg;
	}
	[Token(Token = "0x20002F7")]
	public class ConfigPressButtonDialog : MonoBehaviour
	{
		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GamePadButton[] ps4GamepadButtons;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GamePadButton[] oculusGamepadButtons;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GamePadButton[] gamepadButtons;

		[Token(Token = "0x40013AA")]
		private const int MANUAL_OPERATION_BUTTONS = 14;

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x8FBB40", Offset = "0x8FBB40", VA = "0x8FBB40")]
		public void ShowTutorialGamePadButton(Image _img, GamePadButtonName _buttonName, string _buttonLocalizeKey)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x8FBC44", Offset = "0x8FBC44", VA = "0x8FBC44")]
		private void ChangeUseTutorialGamePadButtonImg()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x8FBCF8", Offset = "0x8FBCF8", VA = "0x8FBCF8")]
		private void SetGamepadButtons(GamePadButton[] _gamepadButtons)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x8FBD6C", Offset = "0x8FBD6C", VA = "0x8FBD6C")]
		public ConfigPressButtonDialog()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class GuideButtonTutorialStep : NextStepCondition
	{
		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConfigPressButtonDialog configDialogScript;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image buttonImg;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GamePadButtonName buttonName;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private CommandID command;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string localizeButtonKey;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Excavator exScript;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float timetoComplete;

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x8FBD74", Offset = "0x8FBD74", VA = "0x8FBD74")]
		public GuideButtonTutorialStep(Excavator _exScript, ConfigPressButtonDialog _script, string _localize, Image _button, GamePadButtonName _name, CommandID _command)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x8FBDD4", Offset = "0x8FBDD4", VA = "0x8FBDD4", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x8FBE28", Offset = "0x8FBE28", VA = "0x8FBE28", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x8FBFA4", Offset = "0x8FBFA4", VA = "0x8FBFA4", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x8FBE78", Offset = "0x8FBE78", VA = "0x8FBE78")]
		private bool CheckInputExcavator(CommandID _command)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002F9")]
	public class VRTutorialManager : StageManager
	{
		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image tutorialButtonImg;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ConfigPressButtonDialog configDialogScript;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Excavator exScript;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ControllerID controllerID;

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x8FBFA8", Offset = "0x8FBFA8", VA = "0x8FBFA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x8FC020", Offset = "0x8FC020", VA = "0x8FC020")]
		private void Start()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x8FC0A8", Offset = "0x8FC0A8", VA = "0x8FC0A8")]
		private new void Update()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x8FC350", Offset = "0x8FC350", VA = "0x8FC350")]
		private void SetYumboFalling()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x8FC410", Offset = "0x8FC410", VA = "0x8FC410")]
		private void FinishActivity()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x8FC4A8", Offset = "0x8FC4A8", VA = "0x8FC4A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x8FC520", Offset = "0x8FC520", VA = "0x8FC520")]
		public void SetTutorialStep()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x8FC928", Offset = "0x8FC928", VA = "0x8FC928")]
		private void TutorialExplanatory(int _index, string _localize, GamePadButtonName _name, CommandID _command)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x8FC874", Offset = "0x8FC874", VA = "0x8FC874")]
		private void TutorialExplanatory(string _localize, GamePadButtonName _name, CommandID _command)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x8FC0F4", Offset = "0x8FC0F4", VA = "0x8FC0F4")]
		private void ChangeTutorialExplanatory()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x8FC9EC", Offset = "0x8FC9EC", VA = "0x8FC9EC")]
		public VRTutorialManager()
		{
		}
	}
}
namespace Ver1Stage3
{
	[Token(Token = "0x20002FA")]
	public class CheckStopPoint : MonoBehaviour
	{
		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isColliderYumbo;

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xD62AD4", Offset = "0xD62AD4", VA = "0xD62AD4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xD62B60", Offset = "0xD62B60", VA = "0xD62B60")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xD62BE8", Offset = "0xD62BE8", VA = "0xD62BE8")]
		public CheckStopPoint()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class DrumControl : MonoBehaviour
	{
		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ver1Stage3Manager stage3Manager;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject checkDrumRoadArea;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> list_ConeBarCollision;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool isComplete;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool isDownDrum;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[HideInInspector]
		public bool isInGoArea;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[HideInInspector]
		public bool isStopPointStep1;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool isPassLastRoad;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool isResetDrum;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[HideInInspector]
		public bool isDisableStartPointText;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public int numberDrumCollision;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public int numberCollisionBar;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> listlastDrumRoad;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int numberLastRoadPart;

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xD62C00", Offset = "0xD62C00", VA = "0xD62C00")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xD62C40", Offset = "0xD62C40", VA = "0xD62C40")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xD62CC4", Offset = "0xD62CC4", VA = "0xD62CC4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xD62E98", Offset = "0xD62E98", VA = "0xD62E98")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xD62F8C", Offset = "0xD62F8C", VA = "0xD62F8C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xD630E8", Offset = "0xD630E8", VA = "0xD630E8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xD632A8", Offset = "0xD632A8", VA = "0xD632A8")]
		public DrumControl()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class Step2CollisionShovel : MonoBehaviour
	{
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject drum;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DrumControl drumScript;

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xD64E58", Offset = "0xD64E58", VA = "0xD64E58")]
		private void Start()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xD64EB8", Offset = "0xD64EB8", VA = "0xD64EB8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xD64F4C", Offset = "0xD64F4C", VA = "0xD64F4C")]
		public Step2CollisionShovel()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class GotoStopPoint : NextStepCondition
	{
		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject volvo;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject drum;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject rope;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject StopGoalPoint;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject ConditionPickDrum;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject shovel;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject fakeDrum;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Excavator excaScript;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CheckStopPoint detectCollisonYumboScript;

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xD63DF8", Offset = "0xD63DF8", VA = "0xD63DF8")]
		public GotoStopPoint(GameObject _volvo, GameObject _drum, GameObject _rope, GameObject _StopGoalPoint, GameObject _condition, GameObject _shovel, GameObject _fakeDrum)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xD63E60", Offset = "0xD63E60", VA = "0xD63E60", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xD63FBC", Offset = "0xD63FBC", VA = "0xD63FBC", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xD64148", Offset = "0xD64148", VA = "0xD64148", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002FE")]
	public class GotoStartPoint : NextStepCondition
	{
		[Token(Token = "0x40013D0")]
		private const float MIN_ARROW_HIGH = -46f;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool wasDownDrum;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool wasNearBar;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject yumbo;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject drum;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject goalPoint;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject arrow;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Ver1Stage3Manager st3Script;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Excavator exScript;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DrumControl drumScript;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 startArrow;

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xD63338", Offset = "0xD63338", VA = "0xD63338")]
		public GotoStartPoint(Ver1Stage3Manager _st3Script, GameObject _yumbo, GameObject _drum, GameObject _goalPoint, GameObject _arrow)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xD6338C", Offset = "0xD6338C", VA = "0xD6338C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xD634FC", Offset = "0xD634FC", VA = "0xD634FC", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xD635F4", Offset = "0xD635F4", VA = "0xD635F4", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xD6382C", Offset = "0xD6382C", VA = "0xD6382C")]
		private void MoveArrow()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class MoveDrumThroughCone : NextStepCondition
	{
		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject drum;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject goalPoint;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject volvo;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Excavator exScript;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DrumControl drumScript;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Ver1Stage3Manager st3Script;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool wasDownDrum;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isResetDum;

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xD6428C", Offset = "0xD6428C", VA = "0xD6428C")]
		public MoveDrumThroughCone(Ver1Stage3Manager _st3Script, GameObject _volvo, GameObject _drum, GameObject _goalPoint)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xD642DC", Offset = "0xD642DC", VA = "0xD642DC", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xD64430", Offset = "0xD64430", VA = "0xD64430", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xD644F4", Offset = "0xD644F4", VA = "0xD644F4", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xD64660", Offset = "0xD64660", VA = "0xD64660")]
		public void CalculateTimeDrumOutSide()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class PickDrumUp : NextStepCondition
	{
		[Token(Token = "0x40013E3")]
		private const float MIN_DISTANCE_ARROW_DRUM = 1f;

		[Token(Token = "0x40013E4")]
		private const float MAX_DISTANCE_ARROW_DRUM = 3.5f;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject volvo;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject drum;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject rope;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject fakeDrum;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject arrow;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject arrow2;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject condition;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DrumControl drumScript;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Excavator excaScript;

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xD647A0", Offset = "0xD647A0", VA = "0xD647A0")]
		public PickDrumUp(GameObject _volvo, GameObject _drum, GameObject _arrow, GameObject _arrow2, GameObject _rope, GameObject _condition, GameObject _fakeDrum)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xD64808", Offset = "0xD64808", VA = "0xD64808", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xD64920", Offset = "0xD64920", VA = "0xD64920", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xD649EC", Offset = "0xD649EC", VA = "0xD649EC", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xD64A1C", Offset = "0xD64A1C", VA = "0xD64A1C")]
		private void LookAtGoalPoint()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class YumboStage3 : MonoBehaviour
	{
		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator anim;

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xD65D90", Offset = "0xD65D90", VA = "0xD65D90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xD65E40", Offset = "0xD65E40", VA = "0xD65E40")]
		public YumboStage3()
		{
		}
	}
	[Token(Token = "0x2000302")]
	internal struct ConeTransform
	{
		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 localPosition;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 localEulerAngles;

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x7A9000", Offset = "0x7A9000", VA = "0x7A9000")]
		public ConeTransform(Vector3 _pos, Vector3 _rot)
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class Ver1Stage3Manager : StageManager
	{
		[Token(Token = "0x2000525")]
		private enum POSITION_DRUM
		{
			[Token(Token = "0x4001EA7")]
			HIGH = 1,
			[Token(Token = "0x4001EA8")]
			LOW,
			[Token(Token = "0x4001EA9")]
			GOOD
		}

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715354", Offset = "0x715354")]
		private sealed class <ActivityDrumOutSide>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Ver1Stage3Manager <>4__this;

			[Token(Token = "0x170002E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFD")]
				[Address(RVA = "0xD65D20", Offset = "0xD65D20", VA = "0xD65D20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DFF")]
				[Address(RVA = "0xD65D88", Offset = "0xD65D88", VA = "0xD65D88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0xD6584C", Offset = "0xD6584C", VA = "0xD6584C")]
			[DebuggerHidden]
			public <ActivityDrumOutSide>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xD65ADC", Offset = "0xD65ADC", VA = "0xD65ADC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xD65AE0", Offset = "0xD65AE0", VA = "0xD65AE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0xD65D28", Offset = "0xD65D28", VA = "0xD65D28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013F1")]
		private const float MAX_DRUM = 2.2f;

		[Token(Token = "0x40013F2")]
		private const float MIN_DRUM = 1.26f;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, ConeTransform> listTrafficCone;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timeWaitting;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _time;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator exAnim;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DrumControl drumScript;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Excavator exScript;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoxCollider bucketBoxCollider;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject yumbo;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject drum;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject startGoalPoint;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject stopGoalPoint;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject finishGoalPoint;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject rope;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject bucket;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject colliderBucket;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject arrow;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject arrow2;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject startPointArrow;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject condition;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform RoadPart2;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject shovel;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject fakeDrum;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public float timeDrumOutside;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool isComplete;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool isFinished;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		public bool isNearBar;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDF")]
		public bool isResetDrum;

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xD64F54", Offset = "0xD64F54", VA = "0xD64F54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xD64FCC", Offset = "0xD64FCC", VA = "0xD64FCC")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xD6532C", Offset = "0xD6532C", VA = "0xD6532C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xD65538", Offset = "0xD65538", VA = "0xD65538")]
		private new void Update()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xD656E4", Offset = "0xD656E4", VA = "0xD656E4")]
		private void SetActiveColliderBucket()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xD63A9C", Offset = "0xD63A9C", VA = "0xD63A9C")]
		public void AlertDrumHeight()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xD6578C", Offset = "0xD6578C", VA = "0xD6578C")]
		private POSITION_DRUM CheckDrumHeight()
		{
			return default(POSITION_DRUM);
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xD63C68", Offset = "0xD63C68", VA = "0xD63C68")]
		public void AlertDrumOutside()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xD63968", Offset = "0xD63968", VA = "0xD63968")]
		public void AlertCheckBar()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xD646B4", Offset = "0xD646B4", VA = "0xD646B4")]
		public void PutDrumUpAgain(string _alertText)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xD657DC", Offset = "0xD657DC", VA = "0xD657DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FEC8", Offset = "0x71FEC8")]
		private IEnumerator ActivityDrumOutSide()
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xD65224", Offset = "0xD65224", VA = "0xD65224")]
		private void SaveLocationCone()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xD65074", Offset = "0xD65074", VA = "0xD65074")]
		private void CacheObjects()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xD655E0", Offset = "0xD655E0", VA = "0xD655E0")]
		private void CheckYumboFalling()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xD65968", Offset = "0xD65968", VA = "0xD65968")]
		private void ShowFinishNotify()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xD65878", Offset = "0xD65878", VA = "0xD65878")]
		private void ShowPrivatePropertiesNotify()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xD65A6C", Offset = "0xD65A6C", VA = "0xD65A6C")]
		public Ver1Stage3Manager()
		{
		}
	}
}
namespace Setting
{
	[Token(Token = "0x2000304")]
	public enum SettingID
	{
		[Token(Token = "0x400140F")]
		None,
		[Token(Token = "0x4001410")]
		LANGGUAGE,
		[Token(Token = "0x4001411")]
		SOUND,
		[Token(Token = "0x4001412")]
		YUMBO_SPEED
	}
	[Token(Token = "0x2000305")]
	public class SettingValue
	{
		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SettingID settingID;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float value;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int kindSettingID;

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x8E9234", Offset = "0x8E9234", VA = "0x8E9234")]
		public SettingValue(SettingID _id, float _value, int _kindSettingID = 0)
		{
		}
	}
}
namespace ControllerSetting
{
	[Serializable]
	[Token(Token = "0x2000306")]
	public struct CommandButtonComponent
	{
		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CommandID commandID;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject CommandObj;
	}
	[Token(Token = "0x2000307")]
	public class CommandButtonControl : MonoBehaviour
	{
		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71AD8C", Offset = "0x71AD8C")]
		public bool versionCurve;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color grayColor;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color blueColor;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color redColor;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color whiteColor;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Color32 blueDeep;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<CommandButtonComponent> listCommandComponent;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CommandButtonComponent previousCommand;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject selectedCommandObj;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string keycodePressed;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string previousKeycode;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ControllerButtonType buttonTypePressed;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private OculusTouchInputConverter oculusInputConverter;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private OVRInput.RawButton[] rawButtons;

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x92432C", Offset = "0x92432C", VA = "0x92432C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x910958", Offset = "0x910958", VA = "0x910958")]
		public void SelectCommand(CommandID _commandID)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x924528", Offset = "0x924528", VA = "0x924528")]
		public void UpdateCommandPanel()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x924A28", Offset = "0x924A28", VA = "0x924A28")]
		public void UpdateKidCommandPanel()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x924B78", Offset = "0x924B78", VA = "0x924B78")]
		public void DisplayDuplicateCommand(List<Command> listDuplicateCommand)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x924E00", Offset = "0x924E00", VA = "0x924E00")]
		public void ResetDisplay()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x924964", Offset = "0x924964", VA = "0x924964")]
		private void DisplayCanChangeCommand(CommandButtonComponent commandComponent, Command command)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x92438C", Offset = "0x92438C", VA = "0x92438C")]
		private void SetDisplayCommand(CommandButtonComponent commmandComponent, Color imgColor, float imgAlpha, Color txtColor)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x924384", Offset = "0x924384", VA = "0x924384")]
		private Color SetAlphaColor(Color color, float alphaIndex)
		{
			return default(Color);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x925148", Offset = "0x925148", VA = "0x925148")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x9255B8", Offset = "0x9255B8", VA = "0x9255B8")]
		private void GetKeyCodePressed()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x92597C", Offset = "0x92597C", VA = "0x92597C")]
		private void SetKeyCodeAxis(string _axis)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x925404", Offset = "0x925404", VA = "0x925404")]
		private void GetOculusTouchKeyCodePressed()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x925B94", Offset = "0x925B94", VA = "0x925B94")]
		public CommandButtonControl()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class Command
	{
		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GamePadButtonName buttonGamePadName;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CommandID commandID;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerButtonType buttonType;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string buttonKeyCode;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool canChange;

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x9242D0", Offset = "0x9242D0", VA = "0x9242D0")]
		public Command(GamePadButtonName _buttonGamePad, CommandID _commandID, ControllerButtonType _buttonType, string _buttonKeyCode, bool _canChange)
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class Pattern
	{
		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PatternLayerID patternID;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Command> listCommand;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isActive;

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xAB1CE4", Offset = "0xAB1CE4", VA = "0xAB1CE4")]
		public Pattern()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class Controller
	{
		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ControllerID controllerID;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string controllerName;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Pattern> list_Patterns;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Pattern> list_DefaultPatterns;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ButtonGamePad> list_buttonGamePads;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<string> list_RemovedCommand;

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xAB0540", Offset = "0xAB0540", VA = "0xAB0540")]
		public Controller(ControllerID _ID, string _name)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class ButtonGamePad
	{
		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GamePadButtonName name;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ControllerButtonType buttonType;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buttonKeyCode;

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x924290", Offset = "0x924290", VA = "0x924290")]
		public ButtonGamePad(GamePadButtonName _name, ControllerButtonType _buttonType, string _buttonKeyCode)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030C")]
	public struct ControllerButtonComponent
	{
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ControllerID controllerID;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public PatternLayerID patternLayerID;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject button;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image panelImage;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI buttonText;
	}
	[Token(Token = "0x200030D")]
	public class CustomControllerSetting : MonoBehaviour
	{
		[Token(Token = "0x400143C")]
		private const float buttonColorAlpha = 0.5882353f;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71ADC4", Offset = "0x71ADC4")]
		public bool versionCurve;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI txtError;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerButtonComponent[] listPattern;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color lightblueColor;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color blueColor;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CommandButtonControl commandScript;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PatternGuideControl patternScript;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool WasRegisterApply;

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xAB063C", Offset = "0xAB063C", VA = "0xAB063C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xAB06AC", Offset = "0xAB06AC", VA = "0xAB06AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xAB08D0", Offset = "0xAB08D0", VA = "0xAB08D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xAB09F4", Offset = "0xAB09F4", VA = "0xAB09F4")]
		public void SetCustomController(bool isNextController)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xAB0AB8", Offset = "0xAB0AB8", VA = "0xAB0AB8")]
		private void SetControllerTab()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xAB0CA8", Offset = "0xAB0CA8", VA = "0xAB0CA8")]
		public void SetCustomPattern(GameObject _button, PatternLayerID _pattern)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xAB1100", Offset = "0xAB1100", VA = "0xAB1100")]
		private void SetDuplicateCommand()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xAB06B0", Offset = "0xAB06B0", VA = "0xAB06B0")]
		public void StartControl()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xAB11F8", Offset = "0xAB11F8", VA = "0xAB11F8")]
		private void ApplyControllerSetting()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xAB1478", Offset = "0xAB1478", VA = "0xAB1478")]
		private void RevertControllerSetting()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xAB0EE4", Offset = "0xAB0EE4", VA = "0xAB0EE4")]
		private void SetColorTabController(ControllerButtonComponent[] listTab, GameObject button)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xAB11F0", Offset = "0xAB11F0", VA = "0xAB11F0")]
		private Color SetAlphaColor(Color color, float alphaIndex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xAB1364", Offset = "0xAB1364", VA = "0xAB1364")]
		private void UnRegisterSetting()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xAB1578", Offset = "0xAB1578", VA = "0xAB1578")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xAB16A4", Offset = "0xAB16A4", VA = "0xAB16A4")]
		public CustomControllerSetting()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class PatternGuideControl : MonoBehaviour
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject guideButton;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject backButton;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject OKbutton;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject CancelButton;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject patternJIS;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject patternKomatsu;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject settingController;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject resetButton;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject enabledGuidePattern;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CommandButtonControl commandScript;

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xAB48A4", Offset = "0xAB48A4", VA = "0xAB48A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xAB107C", Offset = "0xAB107C", VA = "0xAB107C")]
		public void ActiveGuideButton(PatternLayerID patternLayerID)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xAB48FC", Offset = "0xAB48FC", VA = "0xAB48FC")]
		public void ActiveGuidePattern(PatternLayerID patternLayerID)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xAB4A48", Offset = "0xAB4A48", VA = "0xAB4A48")]
		public void BackToSettingController()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xAB4A54", Offset = "0xAB4A54", VA = "0xAB4A54")]
		public void ResetPatternLayer()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xAB4928", Offset = "0xAB4928", VA = "0xAB4928")]
		private void SetActivePatternPanel(GameObject patternGuidePanel, bool isActive)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xAB4AE0", Offset = "0xAB4AE0", VA = "0xAB4AE0")]
		public void DisablePatternGuide()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xAB4B30", Offset = "0xAB4B30", VA = "0xAB4B30")]
		public PatternGuideControl()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public abstract class DefaultControllerConfig : MonoBehaviour
	{
		[Token(Token = "0x600123F")]
		public abstract List<ButtonGamePad> ConfigListButtonForGamepad();

		[Token(Token = "0x6001240")]
		public abstract Controller GetDefaultControllerConfig();

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xAB173C", Offset = "0xAB173C", VA = "0xAB173C", Slot = "6")]
		public virtual List<string> GetListRemovedCommand()
		{
			return null;
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xAB1744", Offset = "0xAB1744", VA = "0xAB1744", Slot = "7")]
		public virtual Pattern AddListCommand(Pattern _pattern, CommandID _commandID, GamePadButtonName _gamePadButtonName, bool _canChange)
		{
			return null;
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xAB1828", Offset = "0xAB1828", VA = "0xAB1828", Slot = "8")]
		public virtual ButtonGamePad GetButtonGamePadConfig(GamePadButtonName _name)
		{
			return null;
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xAB1978", Offset = "0xAB1978", VA = "0xAB1978", Slot = "9")]
		public virtual Pattern GetDefaultPattern(PatternLayerID _patternID, bool _isActive)
		{
			return null;
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xAB1D58", Offset = "0xAB1D58", VA = "0xAB1D58", Slot = "10")]
		public virtual Pattern GetDefaultKidPattern()
		{
			return null;
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xAB1F00", Offset = "0xAB1F00", VA = "0xAB1F00")]
		protected DefaultControllerConfig()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class OculusTouchDefaultConfig : DefaultControllerConfig
	{
		[Token(Token = "0x6001247")]
		[Address(RVA = "0xAB1F08", Offset = "0xAB1F08", VA = "0xAB1F08", Slot = "4")]
		public override List<ButtonGamePad> ConfigListButtonForGamepad()
		{
			return null;
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xAB230C", Offset = "0xAB230C", VA = "0xAB230C", Slot = "5")]
		public override Controller GetDefaultControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xAB2464", Offset = "0xAB2464", VA = "0xAB2464", Slot = "9")]
		public override Pattern GetDefaultPattern(PatternLayerID _patternID, bool _isActive)
		{
			return null;
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xAB27B0", Offset = "0xAB27B0", VA = "0xAB27B0", Slot = "10")]
		public override Pattern GetDefaultKidPattern()
		{
			return null;
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xAB2958", Offset = "0xAB2958", VA = "0xAB2958")]
		public OculusTouchDefaultConfig()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class OtherBluetoothDefaultConfig : DefaultControllerConfig
	{
		[Token(Token = "0x600124C")]
		[Address(RVA = "0xAB2960", Offset = "0xAB2960", VA = "0xAB2960", Slot = "4")]
		public override List<ButtonGamePad> ConfigListButtonForGamepad()
		{
			return null;
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xAB2DD4", Offset = "0xAB2DD4", VA = "0xAB2DD4", Slot = "5")]
		public override Controller GetDefaultControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xAB2F40", Offset = "0xAB2F40", VA = "0xAB2F40", Slot = "9")]
		public override Pattern GetDefaultPattern(PatternLayerID _patternID, bool _isActive)
		{
			return null;
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xAB31EC", Offset = "0xAB31EC", VA = "0xAB31EC", Slot = "6")]
		public override List<string> GetListRemovedCommand()
		{
			return null;
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xAB3278", Offset = "0xAB3278", VA = "0xAB3278")]
		public OtherBluetoothDefaultConfig()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class PS3DefaultConfig : DefaultControllerConfig
	{
		[Token(Token = "0x6001251")]
		[Address(RVA = "0xAB3280", Offset = "0xAB3280", VA = "0xAB3280", Slot = "4")]
		public override List<ButtonGamePad> ConfigListButtonForGamepad()
		{
			return null;
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xAB3764", Offset = "0xAB3764", VA = "0xAB3764", Slot = "5")]
		public override Controller GetDefaultControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xAB38BC", Offset = "0xAB38BC", VA = "0xAB38BC")]
		public PS3DefaultConfig()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class PS4DefaultConfig : DefaultControllerConfig
	{
		[Token(Token = "0x6001254")]
		[Address(RVA = "0xAB38C4", Offset = "0xAB38C4", VA = "0xAB38C4", Slot = "4")]
		public override List<ButtonGamePad> ConfigListButtonForGamepad()
		{
			return null;
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xAB4600", Offset = "0xAB4600", VA = "0xAB4600", Slot = "6")]
		public override List<string> GetListRemovedCommand()
		{
			return null;
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xAB4730", Offset = "0xAB4730", VA = "0xAB4730", Slot = "5")]
		public override Controller GetDefaultControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xAB489C", Offset = "0xAB489C", VA = "0xAB489C")]
		public PS4DefaultConfig()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class TAITODefaultConfig : DefaultControllerConfig
	{
		[Token(Token = "0x6001258")]
		[Address(RVA = "0xAB4B38", Offset = "0xAB4B38", VA = "0xAB4B38", Slot = "4")]
		public override List<ButtonGamePad> ConfigListButtonForGamepad()
		{
			return null;
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xAB4F3C", Offset = "0xAB4F3C", VA = "0xAB4F3C", Slot = "5")]
		public override Controller GetDefaultControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xAB5094", Offset = "0xAB5094", VA = "0xAB5094", Slot = "9")]
		public override Pattern GetDefaultPattern(PatternLayerID _patternID, bool _isActive)
		{
			return null;
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xAB53E0", Offset = "0xAB53E0", VA = "0xAB53E0", Slot = "10")]
		public override Pattern GetDefaultKidPattern()
		{
			return null;
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xAB5588", Offset = "0xAB5588", VA = "0xAB5588")]
		public TAITODefaultConfig()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class XboxOneDefaultConfig : DefaultControllerConfig
	{
		[Token(Token = "0x600125D")]
		[Address(RVA = "0xAB5590", Offset = "0xAB5590", VA = "0xAB5590", Slot = "4")]
		public override List<ButtonGamePad> ConfigListButtonForGamepad()
		{
			return null;
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xAB5A74", Offset = "0xAB5A74", VA = "0xAB5A74", Slot = "5")]
		public override Controller GetDefaultControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xAB5BE0", Offset = "0xAB5BE0", VA = "0xAB5BE0", Slot = "9")]
		public override Pattern GetDefaultPattern(PatternLayerID _patternID, bool _isActive)
		{
			return null;
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xAB5F2C", Offset = "0xAB5F2C", VA = "0xAB5F2C", Slot = "10")]
		public override Pattern GetDefaultKidPattern()
		{
			return null;
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xAB60D4", Offset = "0xAB60D4", VA = "0xAB60D4", Slot = "6")]
		public override List<string> GetListRemovedCommand()
		{
			return null;
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xAB6160", Offset = "0xAB6160", VA = "0xAB6160")]
		public XboxOneDefaultConfig()
		{
		}
	}
}
namespace DFTGames.Localization
{
	[Token(Token = "0x2000316")]
	public static class Locale
	{
		[Token(Token = "0x400144F")]
		private const string STR_LOCALIZATION_KEY = "locale";

		[Token(Token = "0x4001450")]
		private const string STR_LOCALIZATION_PREFIX = "localization/";

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string currentLanguage;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool currentLanguageFileHasBeenFound;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool currentLanguageHasBeenSet;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<string, string> CurrentLanguageStrings;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static TextAsset currentLocalizationText;

		[Token(Token = "0x17000185")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xAB816C", Offset = "0xAB816C", VA = "0xAB816C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xAB81D4", Offset = "0xAB81D4", VA = "0xAB81D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public static bool CurrentLanguageHasBeenSet
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0xAB8888", Offset = "0xAB8888", VA = "0xAB8888")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000187")]
		public static SystemLanguage PlayerLanguage
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xAB88F0", Offset = "0xAB88F0", VA = "0xAB88F0")]
			get
			{
				return default(SystemLanguage);
			}
			[Token(Token = "0x6001267")]
			[Address(RVA = "0xAB894C", Offset = "0xAB894C", VA = "0xAB894C")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714894", Offset = "0x714894")]
	public class Localize : LocalizeBase
	{
		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text text;

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xAB8A30", Offset = "0xAB8A30", VA = "0xAB8A30", Slot = "4")]
		public override void UpdateLocale()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xAB8B94", Offset = "0xAB8B94", VA = "0xAB8B94", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xAB8C9C", Offset = "0xAB8C9C", VA = "0xAB8C9C")]
		public void ChangeLocalizationKey(string newKey)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xAB8CAC", Offset = "0xAB8CAC", VA = "0xAB8CAC")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public abstract class LocalizeBase : MonoBehaviour
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string localizationKey;

		[Token(Token = "0x600126D")]
		public abstract void UpdateLocale();

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xAB8BF0", Offset = "0xAB8BF0", VA = "0xAB8BF0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xAB8E40", Offset = "0xAB8E40", VA = "0xAB8E40")]
		public static string GetLocalizedString(string key)
		{
			return null;
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xAB8CBC", Offset = "0xAB8CBC", VA = "0xAB8CBC")]
		public static void SetCurrentLanguage(SystemLanguage language)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xAB8CB4", Offset = "0xAB8CB4", VA = "0xAB8CB4")]
		protected LocalizeBase()
		{
		}
	}
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7148F8", Offset = "0x7148F8")]
	public class LocalizeImage : MonoBehaviour
	{
		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string localizationKeyImage;

		[Token(Token = "0x4001459")]
		private const string STR_LOCALIZATION_PREFIX = "localization/UI/";

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image image;

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xAB8F20", Offset = "0xAB8F20", VA = "0xAB8F20")]
		public static void SetCurrentLanguage()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xAB8FDC", Offset = "0xAB8FDC", VA = "0xAB8FDC")]
		public void UpdateLocale()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xAB9078", Offset = "0xAB9078", VA = "0xAB9078")]
		private void _updateLocale()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xAB9280", Offset = "0xAB9280", VA = "0xAB9280")]
		private void Start()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xAB92DC", Offset = "0xAB92DC", VA = "0xAB92DC")]
		public LocalizeImage()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x71495C", Offset = "0x71495C")]
	public class LocalizeMaterial : LocalizeBase
	{
		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string localizationKeyMaterial;

		[Token(Token = "0x400145C")]
		private const string STR_LOCALIZATION_PREFIX = "localization/UI/";

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image image;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material mat;

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xAB92E4", Offset = "0xAB92E4", VA = "0xAB92E4")]
		public static void SetCurrentLanguage()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xAB93A8", Offset = "0xAB93A8", VA = "0xAB93A8", Slot = "4")]
		public override void UpdateLocale()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xAB9444", Offset = "0xAB9444", VA = "0xAB9444")]
		private void _updateLocale()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xAB9660", Offset = "0xAB9660", VA = "0xAB9660", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xAB96F4", Offset = "0xAB96F4", VA = "0xAB96F4")]
		public LocalizeMaterial()
		{
		}
	}
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7149C0", Offset = "0x7149C0")]
	public class LocalizeTM : LocalizeBase
	{
		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI text;

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xAB96FC", Offset = "0xAB96FC", VA = "0xAB96FC", Slot = "4")]
		public override void UpdateLocale()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xAB985C", Offset = "0xAB985C", VA = "0xAB985C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xAB98B8", Offset = "0xAB98B8", VA = "0xAB98B8")]
		public void ChangeLocalizationKey(string newKey)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xAB98C8", Offset = "0xAB98C8", VA = "0xAB98C8")]
		public LocalizeTM()
		{
		}
	}
}
namespace HightScore
{
	[Token(Token = "0x200031C")]
	public class HightScoreValue
	{
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string SenceName;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeSuccess;

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xDA7244", Offset = "0xDA7244", VA = "0xDA7244")]
		public HightScoreValue(string _name, float _time)
		{
		}
	}
}
namespace DetectCollision
{
	[Token(Token = "0x200031D")]
	public class AlertYumboCollider : MonoBehaviour, IColliderYumbo, ICalculateCollisionYumbo
	{
		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string alertLocalizeKey;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isUseCollision;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool isUseTrigger;

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xABD734", Offset = "0xABD734", VA = "0xABD734", Slot = "4")]
		public void CollisionEnterYumbo()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xABD74C", Offset = "0xABD74C", VA = "0xABD74C", Slot = "5")]
		public void CollisionStayYumbo()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xABD764", Offset = "0xABD764", VA = "0xABD764", Slot = "6")]
		public void CollisionExitYumbo()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xABD77C", Offset = "0xABD77C", VA = "0xABD77C", Slot = "7")]
		public void TriggerEnterYumbo()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xABD794", Offset = "0xABD794", VA = "0xABD794", Slot = "8")]
		public void TriggerStayYumbo()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xABD7AC", Offset = "0xABD7AC", VA = "0xABD7AC", Slot = "9")]
		public void TriggerExitYumbo()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xABD7C4", Offset = "0xABD7C4", VA = "0xABD7C4")]
		public AlertYumboCollider()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class SoundYumboCollison : MonoBehaviour, IColliderYumbo
	{
		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int index;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int clipIndex;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Excavator exScript;

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xABD8C8", Offset = "0xABD8C8", VA = "0xABD8C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xABD938", Offset = "0xABD938", VA = "0xABD938", Slot = "4")]
		public void CollisionEnterYumbo()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xABD95C", Offset = "0xABD95C", VA = "0xABD95C", Slot = "5")]
		public void CollisionStayYumbo()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xABD960", Offset = "0xABD960", VA = "0xABD960", Slot = "6")]
		public void CollisionExitYumbo()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xABD964", Offset = "0xABD964", VA = "0xABD964", Slot = "7")]
		public void TriggerEnterYumbo()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xABD988", Offset = "0xABD988", VA = "0xABD988", Slot = "8")]
		public void TriggerStayYumbo()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xABD98C", Offset = "0xABD98C", VA = "0xABD98C", Slot = "9")]
		public void TriggerExitYumbo()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xABD990", Offset = "0xABD990", VA = "0xABD990")]
		public SoundYumboCollison()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class TruckChangeSpeedYumbo : MonoBehaviour, IColliderYumbo
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Excavator exScript;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDecrease;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeCountDown;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float timeS;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeW;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timeA;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timeD;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timeJ;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float timeL;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody yumboRigid;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody truckRigid;

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xABD998", Offset = "0xABD998", VA = "0xABD998")]
		private void Start()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xABDA3C", Offset = "0xABDA3C", VA = "0xABDA3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xABDCB8", Offset = "0xABDCB8", VA = "0xABDCB8", Slot = "4")]
		public void CollisionEnterYumbo()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xABDCBC", Offset = "0xABDCBC", VA = "0xABDCBC", Slot = "5")]
		public void CollisionStayYumbo()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xABDA40", Offset = "0xABDA40", VA = "0xABDA40")]
		private void DecreaseSpeed()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xABDE60", Offset = "0xABDE60", VA = "0xABDE60")]
		private void ConstraintYumbo()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xABDCC0", Offset = "0xABDCC0", VA = "0xABDCC0")]
		private void CalculateTimeInput()
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xABDF4C", Offset = "0xABDF4C", VA = "0xABDF4C")]
		private void DecreaseTimeInput()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xABE034", Offset = "0xABE034", VA = "0xABE034", Slot = "6")]
		public void CollisionExitYumbo()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xABE038", Offset = "0xABE038", VA = "0xABE038", Slot = "7")]
		public void TriggerEnterYumbo()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xABE03C", Offset = "0xABE03C", VA = "0xABE03C", Slot = "8")]
		public void TriggerStayYumbo()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xABE040", Offset = "0xABE040", VA = "0xABE040", Slot = "9")]
		public void TriggerExitYumbo()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xABE044", Offset = "0xABE044", VA = "0xABE044")]
		public TruckChangeSpeedYumbo()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class DetectCollisionWithYumbo : MonoBehaviour, IColliderYumbo
	{
		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71AE9C", Offset = "0x71AE9C")]
		private bool <isColliderYumbo>k__BackingField;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isUseCollision;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isUseTrigger;

		[Token(Token = "0x17000188")]
		public bool isColliderYumbo
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0xABD7CC", Offset = "0xABD7CC", VA = "0xABD7CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FF2C", Offset = "0x71FF2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600129E")]
			[Address(RVA = "0xABD7D4", Offset = "0xABD7D4", VA = "0xABD7D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FF3C", Offset = "0x71FF3C")]
			private set
			{
			}
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xABD7E0", Offset = "0xABD7E0", VA = "0xABD7E0", Slot = "4")]
		public void CollisionEnterYumbo()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xABD7F4", Offset = "0xABD7F4", VA = "0xABD7F4", Slot = "5")]
		public void CollisionStayYumbo()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xABD808", Offset = "0xABD808", VA = "0xABD808", Slot = "6")]
		public void CollisionExitYumbo()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xABD818", Offset = "0xABD818", VA = "0xABD818", Slot = "7")]
		public void TriggerEnterYumbo()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xABD82C", Offset = "0xABD82C", VA = "0xABD82C", Slot = "8")]
		public void TriggerStayYumbo()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xABD840", Offset = "0xABD840", VA = "0xABD840", Slot = "9")]
		public void TriggerExitYumbo()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xABD850", Offset = "0xABD850", VA = "0xABD850")]
		public DetectCollisionWithYumbo()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class TruckCollision : MonoBehaviour, IColliderYumbo, ICalculateCollisionYumbo
	{
		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string alertLocalizeKey;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool canShowAlert;

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xABE04C", Offset = "0xABE04C", VA = "0xABE04C")]
		public void ColliderYumbo()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xABE064", Offset = "0xABE064", VA = "0xABE064")]
		public void ExitColliderYumbo()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xABE070", Offset = "0xABE070", VA = "0xABE070")]
		public void StayColliderYumbo()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xABE074", Offset = "0xABE074", VA = "0xABE074", Slot = "4")]
		public void CollisionEnterYumbo()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xABE080", Offset = "0xABE080", VA = "0xABE080", Slot = "5")]
		public void CollisionStayYumbo()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xABE084", Offset = "0xABE084", VA = "0xABE084", Slot = "6")]
		public void CollisionExitYumbo()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xABE090", Offset = "0xABE090", VA = "0xABE090", Slot = "7")]
		public void TriggerEnterYumbo()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xABE094", Offset = "0xABE094", VA = "0xABE094", Slot = "8")]
		public void TriggerStayYumbo()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xABE098", Offset = "0xABE098", VA = "0xABE098", Slot = "9")]
		public void TriggerExitYumbo()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xABE09C", Offset = "0xABE09C", VA = "0xABE09C")]
		public TruckCollision()
		{
		}
	}
	[Token(Token = "0x2000322")]
	public class InsideContructionAreaCollider : MonoBehaviour, IColliderYumbo
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string alertLocalizeKey;

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xABD858", Offset = "0xABD858", VA = "0xABD858", Slot = "4")]
		public void CollisionEnterYumbo()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xABD85C", Offset = "0xABD85C", VA = "0xABD85C", Slot = "5")]
		public void CollisionStayYumbo()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xABD868", Offset = "0xABD868", VA = "0xABD868", Slot = "6")]
		public void CollisionExitYumbo()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xABD874", Offset = "0xABD874", VA = "0xABD874", Slot = "7")]
		public void TriggerEnterYumbo()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xABD878", Offset = "0xABD878", VA = "0xABD878", Slot = "8")]
		public void TriggerStayYumbo()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xABD884", Offset = "0xABD884", VA = "0xABD884", Slot = "9")]
		public void TriggerExitYumbo()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xABD890", Offset = "0xABD890", VA = "0xABD890")]
		public InsideContructionAreaCollider()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public interface IColliderBucketPoint
	{
		[Token(Token = "0x60012B7")]
		void CollisionEnterBucketPoint();

		[Token(Token = "0x60012B8")]
		void CollisionStayBucketPoint();

		[Token(Token = "0x60012B9")]
		void CollisionExitBucketPoint();

		[Token(Token = "0x60012BA")]
		void TriggerEnterBucketPoint();

		[Token(Token = "0x60012BB")]
		void TriggerStayBucketPoint();

		[Token(Token = "0x60012BC")]
		void TriggerExitBucketPoint();
	}
	[Token(Token = "0x2000324")]
	public class InsideContructionAreaTopCollider : MonoBehaviour, IColliderBucketPoint
	{
		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string alertLocalizeKey;

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xABD898", Offset = "0xABD898", VA = "0xABD898", Slot = "4")]
		public void CollisionEnterBucketPoint()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xABD89C", Offset = "0xABD89C", VA = "0xABD89C", Slot = "5")]
		public void CollisionStayBucketPoint()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xABD8A0", Offset = "0xABD8A0", VA = "0xABD8A0", Slot = "6")]
		public void CollisionExitBucketPoint()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xABD8A4", Offset = "0xABD8A4", VA = "0xABD8A4", Slot = "7")]
		public void TriggerEnterBucketPoint()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xABD8A8", Offset = "0xABD8A8", VA = "0xABD8A8", Slot = "8")]
		public void TriggerStayBucketPoint()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xABD8B4", Offset = "0xABD8B4", VA = "0xABD8B4", Slot = "9")]
		public void TriggerExitBucketPoint()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xABD8C0", Offset = "0xABD8C0", VA = "0xABD8C0")]
		public InsideContructionAreaTopCollider()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public interface IColliderYumbo
	{
		[Token(Token = "0x60012C4")]
		void CollisionEnterYumbo();

		[Token(Token = "0x60012C5")]
		void CollisionStayYumbo();

		[Token(Token = "0x60012C6")]
		void CollisionExitYumbo();

		[Token(Token = "0x60012C7")]
		void TriggerEnterYumbo();

		[Token(Token = "0x60012C8")]
		void TriggerStayYumbo();

		[Token(Token = "0x60012C9")]
		void TriggerExitYumbo();
	}
	[Token(Token = "0x2000326")]
	public interface ICalculateCollisionYumbo
	{
	}
}
namespace VRStandardAssets.Menu
{
	[Token(Token = "0x2000327")]
	public class MenuAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715364", Offset = "0x715364")]
		private sealed class <PlayTextures>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuAnimator <>4__this;

			[Token(Token = "0x170002E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E03")]
				[Address(RVA = "0xE01A0C", Offset = "0xE01A0C", VA = "0xE01A0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E05")]
				[Address(RVA = "0xE01A74", Offset = "0xE01A74", VA = "0xE01A74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xE01908", Offset = "0xE01908", VA = "0xE01908")]
			[DebuggerHidden]
			public <PlayTextures>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xE01944", Offset = "0xE01944", VA = "0xE01944", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xE01948", Offset = "0xE01948", VA = "0xE01948", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E04")]
			[Address(RVA = "0xE01A14", Offset = "0xE01A14", VA = "0xE01A14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_FrameRate;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer m_ScreenMesh;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRInteractiveItem m_VRInteractiveItem;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture[] m_AnimTextures;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds m_FrameRateWait;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_CurrentTextureIndex;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_Playing;

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xE01654", Offset = "0xE01654", VA = "0xE01654")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xE016CC", Offset = "0xE016CC", VA = "0xE016CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xE01794", Offset = "0xE01794", VA = "0xE01794")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xE0185C", Offset = "0xE0185C", VA = "0xE0185C")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xE01900", Offset = "0xE01900", VA = "0xE01900")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xE01890", Offset = "0xE01890", VA = "0xE01890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FF4C", Offset = "0x71FF4C")]
		private IEnumerator PlayTextures()
		{
			return null;
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xE01934", Offset = "0xE01934", VA = "0xE01934")]
		public MenuAnimator()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class MenuButton : MonoBehaviour
	{
		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715374", Offset = "0x715374")]
		private sealed class <ActivateButton>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuButton <>4__this;

			[Token(Token = "0x170002EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E09")]
				[Address(RVA = "0xE0269C", Offset = "0xE0269C", VA = "0xE0269C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0B")]
				[Address(RVA = "0xE02704", Offset = "0xE02704", VA = "0xE02704", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xE024A0", Offset = "0xE024A0", VA = "0xE024A0")]
			[DebuggerHidden]
			public <ActivateButton>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xE02500", Offset = "0xE02500", VA = "0xE02500", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xE02504", Offset = "0xE02504", VA = "0xE02504", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xE026A4", Offset = "0xE026A4", VA = "0xE026A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715384", Offset = "0x715384")]
		private sealed class <LoadSceneAsync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuButton <>4__this;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x170002EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E0F")]
				[Address(RVA = "0xE027F8", Offset = "0xE027F8", VA = "0xE027F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E11")]
				[Address(RVA = "0xE02860", Offset = "0xE02860", VA = "0xE02860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xE024CC", Offset = "0xE024CC", VA = "0xE024CC")]
			[DebuggerHidden]
			public <LoadSceneAsync>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xE0270C", Offset = "0xE0270C", VA = "0xE0270C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xE02710", Offset = "0xE02710", VA = "0xE02710", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E10")]
			[Address(RVA = "0xE02800", Offset = "0xE02800", VA = "0xE02800", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_SceneToLoad;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRCameraFade m_CameraFade;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject loadingScreen;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool isMenuLanguage;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string Language;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_GazeOver;

		[Token(Token = "0x1400002C")]
		public event Action<MenuButton> OnButtonSelected
		{
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0xE01A7C", Offset = "0xE01A7C", VA = "0xE01A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FFB0", Offset = "0x71FFB0")]
			add
			{
			}
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xE01B20", Offset = "0xE01B20", VA = "0xE01B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71FFC0", Offset = "0x71FFC0")]
			remove
			{
			}
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xE01BC4", Offset = "0xE01BC4", VA = "0xE01BC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xE01BC8", Offset = "0xE01BC8", VA = "0xE01BC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xE01D6C", Offset = "0xE01D6C", VA = "0xE01D6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xE01F10", Offset = "0xE01F10", VA = "0xE01F10")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xE02104", Offset = "0xE02104", VA = "0xE02104")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xE022E0", Offset = "0xE022E0", VA = "0xE022E0")]
		private void HandleSelectionComplete()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xE02430", Offset = "0xE02430", VA = "0xE02430")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x71FFD0", Offset = "0x71FFD0")]
		private IEnumerator ActivateButton()
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xE023C0", Offset = "0xE023C0", VA = "0xE023C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720034", Offset = "0x720034")]
		private IEnumerator LoadSceneAsync()
		{
			return null;
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xE02340", Offset = "0xE02340", VA = "0xE02340")]
		private void ChangeLanguage()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xE024F8", Offset = "0xE024F8", VA = "0xE024F8")]
		public MenuButton()
		{
		}
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x2000329")]
	public abstract class DefaultSelectionRadial : MonoBehaviour
	{
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected float m_SelectionDuration;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected bool m_HideOnStart;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Image m_Selection;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Coroutine m_SelectionFillRoutine;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool m_IsSelectionRadialActive;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		protected bool m_RadialFilled;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		protected bool isStopFill;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		protected bool isComplete;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRInput m_VRInput;

		[Token(Token = "0x17000189")]
		public float SelectionDuration
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xE03244", Offset = "0xE03244", VA = "0xE03244")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action OnSelectionComplete
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xE030FC", Offset = "0xE030FC", VA = "0xE030FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720098", Offset = "0x720098")]
			add
			{
			}
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xE031A0", Offset = "0xE031A0", VA = "0xE031A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7200A8", Offset = "0x7200A8")]
			remove
			{
			}
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xE0324C", Offset = "0xE0324C", VA = "0xE0324C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xE032B0", Offset = "0xE032B0", VA = "0xE032B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xE03374", Offset = "0xE03374", VA = "0xE03374")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xE02C1C", Offset = "0xE02C1C", VA = "0xE02C1C", Slot = "4")]
		public virtual void SelectionComplete()
		{
		}

		[Token(Token = "0x60012E4")]
		public abstract void Show();

		[Token(Token = "0x60012E5")]
		public abstract void Hide();

		[Token(Token = "0x60012E6")]
		protected abstract void HandleDown();

		[Token(Token = "0x60012E7")]
		protected abstract void HandleUp();

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xE02F38", Offset = "0xE02F38", VA = "0xE02F38")]
		protected DefaultSelectionRadial()
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class CustomSelectionRadial : DefaultSelectionRadial
	{
		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715394", Offset = "0x715394")]
		private sealed class <FillSelectionRadial>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomSelectionRadial <>4__this;

			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170002EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E15")]
				[Address(RVA = "0xE0308C", Offset = "0xE0308C", VA = "0xE0308C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E17")]
				[Address(RVA = "0xE030F4", Offset = "0xE030F4", VA = "0xE030F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xE02BDC", Offset = "0xE02BDC", VA = "0xE02BDC")]
			[DebuggerHidden]
			public <FillSelectionRadial>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xE02F50", Offset = "0xE02F50", VA = "0xE02F50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E14")]
			[Address(RVA = "0xE02F54", Offset = "0xE02F54", VA = "0xE02F54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E16")]
			[Address(RVA = "0xE03094", Offset = "0xE03094", VA = "0xE03094", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isSoundSection;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string m_nameSection;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image m_soundSelection;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image m_defaultSelection;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image m_nullSelection;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator anim;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float soundTime;

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xE02868", Offset = "0xE02868", VA = "0xE02868")]
		public void SetSection(string nameSection)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xE02960", Offset = "0xE02960", VA = "0xE02960")]
		private void Start()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xE02980", Offset = "0xE02980", VA = "0xE02980", Slot = "5")]
		public override void Show()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xE02A74", Offset = "0xE02A74", VA = "0xE02A74", Slot = "6")]
		public override void Hide()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xE02B6C", Offset = "0xE02B6C", VA = "0xE02B6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7200B8", Offset = "0x7200B8")]
		private IEnumerator FillSelectionRadial()
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xE02C08", Offset = "0xE02C08", VA = "0xE02C08", Slot = "4")]
		public override void SelectionComplete()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xE02C30", Offset = "0xE02C30", VA = "0xE02C30")]
		private void DisableSection()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xE02D10", Offset = "0xE02D10", VA = "0xE02D10", Slot = "7")]
		protected override void HandleDown()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xE02E98", Offset = "0xE02E98", VA = "0xE02E98", Slot = "8")]
		protected override void HandleUp()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xE02F20", Offset = "0xE02F20", VA = "0xE02F20")]
		public CustomSelectionRadial()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class ItselfSelectionRadial : DefaultSelectionRadial
	{
		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7153A4", Offset = "0x7153A4")]
		private sealed class <FillTargetSelectionRadial>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ItselfSelectionRadial <>4__this;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170002F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E1B")]
				[Address(RVA = "0xE037C8", Offset = "0xE037C8", VA = "0xE037C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E1D")]
				[Address(RVA = "0xE03830", Offset = "0xE03830", VA = "0xE03830", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xE03558", Offset = "0xE03558", VA = "0xE03558")]
			[DebuggerHidden]
			public <FillTargetSelectionRadial>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xE036AC", Offset = "0xE036AC", VA = "0xE036AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0xE036B0", Offset = "0xE036B0", VA = "0xE036B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0xE037D0", Offset = "0xE037D0", VA = "0xE037D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int numberCheck;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image defaultSection;

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xE03438", Offset = "0xE03438", VA = "0xE03438")]
		public void SetSection(Image imgSection)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xE03440", Offset = "0xE03440", VA = "0xE03440")]
		private void Start()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xE03498", Offset = "0xE03498", VA = "0xE03498", Slot = "5")]
		public override void Show()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xE0349C", Offset = "0xE0349C", VA = "0xE0349C", Slot = "6")]
		public override void Hide()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xE034E8", Offset = "0xE034E8", VA = "0xE034E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72011C", Offset = "0x72011C")]
		private IEnumerator FillTargetSelectionRadial()
		{
			return null;
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xE03584", Offset = "0xE03584", VA = "0xE03584", Slot = "4")]
		public override void SelectionComplete()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xE03598", Offset = "0xE03598", VA = "0xE03598", Slot = "7")]
		protected override void HandleDown()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xE03630", Offset = "0xE03630", VA = "0xE03630", Slot = "8")]
		protected override void HandleUp()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xE03684", Offset = "0xE03684", VA = "0xE03684")]
		public void addNumberCheck()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xE03694", Offset = "0xE03694", VA = "0xE03694")]
		public ItselfSelectionRadial()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class SimplestSelectionRadial : DefaultSelectionRadial
	{
		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xE0541C", Offset = "0xE0541C", VA = "0xE0541C", Slot = "7")]
		protected override void HandleDown()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xE05428", Offset = "0xE05428", VA = "0xE05428", Slot = "8")]
		protected override void HandleUp()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xE0542C", Offset = "0xE0542C", VA = "0xE0542C", Slot = "5")]
		public override void Show()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xE05430", Offset = "0xE05430", VA = "0xE05430", Slot = "6")]
		public override void Hide()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xE05434", Offset = "0xE05434", VA = "0xE05434", Slot = "4")]
		public override void SelectionComplete()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xE05448", Offset = "0xE05448", VA = "0xE05448")]
		public SimplestSelectionRadial()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class Reticle : MonoBehaviour
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_DefaultDistance;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_UseNormal;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_ReticleTransform;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_OriginalScale;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x1700018A")]
		public bool UseNormal
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xE03838", Offset = "0xE03838", VA = "0xE03838")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xE03840", Offset = "0xE03840", VA = "0xE03840")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public Transform ReticleTransform
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0xE0384C", Offset = "0xE0384C", VA = "0xE0384C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xE03854", Offset = "0xE03854", VA = "0xE03854")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xE038A4", Offset = "0xE038A4", VA = "0xE038A4")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xE038C4", Offset = "0xE038C4", VA = "0xE038C4")]
		public void Show()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xE038E4", Offset = "0xE038E4", VA = "0xE038E4")]
		public void SetPosition()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xE03A2C", Offset = "0xE03A2C", VA = "0xE03A2C")]
		public void SetPosition(RaycastHit hit)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xE03BE4", Offset = "0xE03BE4", VA = "0xE03BE4")]
		public Reticle()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class ReturnToMainMenu : MonoBehaviour
	{
		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7153B4", Offset = "0x7153B4")]
		private sealed class <FadeToMenu>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReturnToMainMenu <>4__this;

			[Token(Token = "0x170002F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E21")]
				[Address(RVA = "0xE03F14", Offset = "0xE03F14", VA = "0xE03F14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E23")]
				[Address(RVA = "0xE03F7C", Offset = "0xE03F7C", VA = "0xE03F7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xE03DA8", Offset = "0xE03DA8", VA = "0xE03DA8")]
			[DebuggerHidden]
			public <FadeToMenu>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xE03E2C", Offset = "0xE03E2C", VA = "0xE03E2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0xE03E30", Offset = "0xE03E30", VA = "0xE03E30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xE03F1C", Offset = "0xE03F1C", VA = "0xE03F1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_MenuSceneName;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRCameraFade m_VRCameraFade;

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xE03BF4", Offset = "0xE03BF4", VA = "0xE03BF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xE03C80", Offset = "0xE03C80", VA = "0xE03C80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xE03D0C", Offset = "0xE03D0C", VA = "0xE03D0C")]
		private void HandleCancel()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xE03D38", Offset = "0xE03D38", VA = "0xE03D38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720180", Offset = "0x720180")]
		private IEnumerator FadeToMenu()
		{
			return null;
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xE03DD4", Offset = "0xE03DD4", VA = "0xE03DD4")]
		public ReturnToMainMenu()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class SelectionRadial : MonoBehaviour
	{
		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7153C4", Offset = "0x7153C4")]
		private sealed class <FillSelectionRadial>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x170002F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E27")]
				[Address(RVA = "0xE0473C", Offset = "0xE0473C", VA = "0xE0473C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E29")]
				[Address(RVA = "0xE047A4", Offset = "0xE047A4", VA = "0xE047A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0xE043E0", Offset = "0xE043E0", VA = "0xE043E0")]
			[DebuggerHidden]
			public <FillSelectionRadial>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001E25")]
			[Address(RVA = "0xE04594", Offset = "0xE04594", VA = "0xE04594", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E26")]
			[Address(RVA = "0xE04598", Offset = "0xE04598", VA = "0xE04598", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xE04744", Offset = "0xE04744", VA = "0xE04744", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7153D4", Offset = "0x7153D4")]
		private sealed class <WaitForSelectionRadialToFill>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x170002F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E2D")]
				[Address(RVA = "0xE04830", Offset = "0xE04830", VA = "0xE04830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E2F")]
				[Address(RVA = "0xE04898", Offset = "0xE04898", VA = "0xE04898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xE0447C", Offset = "0xE0447C", VA = "0xE0447C")]
			[DebuggerHidden]
			public <WaitForSelectionRadialToFill>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0xE047AC", Offset = "0xE047AC", VA = "0xE047AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0xE047B0", Offset = "0xE047B0", VA = "0xE047B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0xE04838", Offset = "0xE04838", VA = "0xE04838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_SelectionDuration;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_HideOnStart;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_Selection;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image m_defalutSelection;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image m_SelectionStage1;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_SelectionStage2;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image m_SelectionStage3;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image m_SelectionStage4;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image m_Selection001;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator anim;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_SelectionFillRoutine;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_IsSelectionRadialActive;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_RadialFilled;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool isStopFill;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public bool isComplete;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isFirstSetLanguage;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VREyeRaycaster m_vrEyeRay;

		[Token(Token = "0x1700018C")]
		public float SelectionDuration
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xE03F84", Offset = "0xE03F84", VA = "0xE03F84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action OnSelectionComplete
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0xE01CC8", Offset = "0xE01CC8", VA = "0xE01CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7201E4", Offset = "0x7201E4")]
			add
			{
			}
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xE01E6C", Offset = "0xE01E6C", VA = "0xE01E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7201F4", Offset = "0x7201F4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xE03F8C", Offset = "0xE03F8C", VA = "0xE03F8C")]
		public void SetSection(string nameSection)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xE04134", Offset = "0xE04134", VA = "0xE04134")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xE041FC", Offset = "0xE041FC", VA = "0xE041FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xE042C4", Offset = "0xE042C4", VA = "0xE042C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xE01F44", Offset = "0xE01F44", VA = "0xE01F44")]
		public void Show()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xE02134", Offset = "0xE02134", VA = "0xE02134")]
		public void Hide()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xE04370", Offset = "0xE04370", VA = "0xE04370")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720204", Offset = "0x720204")]
		private IEnumerator FillSelectionRadial()
		{
			return null;
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xE0440C", Offset = "0xE0440C", VA = "0xE0440C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720268", Offset = "0x720268")]
		public IEnumerator WaitForSelectionRadialToFill()
		{
			return null;
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xE044A8", Offset = "0xE044A8", VA = "0xE044A8")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xE044F4", Offset = "0xE044F4", VA = "0xE044F4")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xE0457C", Offset = "0xE0457C", VA = "0xE0457C")]
		public SelectionRadial()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class SelectionSlider : MonoBehaviour
	{
		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7153E4", Offset = "0x7153E4")]
		private sealed class <WaitForBarToFill>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x170002F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E33")]
				[Address(RVA = "0xE053AC", Offset = "0xE053AC", VA = "0xE053AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E35")]
				[Address(RVA = "0xE05414", Offset = "0xE05414", VA = "0xE05414", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xE04D74", Offset = "0xE04D74", VA = "0xE04D74")]
			[DebuggerHidden]
			public <WaitForBarToFill>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001E31")]
			[Address(RVA = "0xE0525C", Offset = "0xE0525C", VA = "0xE0525C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xE05260", Offset = "0xE05260", VA = "0xE05260", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0xE053B4", Offset = "0xE053B4", VA = "0xE053B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7153F4", Offset = "0x7153F4")]
		private sealed class <FillBar>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fillTime>5__2;

			[Token(Token = "0x170002FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E39")]
				[Address(RVA = "0xE051EC", Offset = "0xE051EC", VA = "0xE051EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3B")]
				[Address(RVA = "0xE05254", Offset = "0xE05254", VA = "0xE05254", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xE04E10", Offset = "0xE04E10", VA = "0xE04E10")]
			[DebuggerHidden]
			public <FillBar>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xE0505C", Offset = "0xE0505C", VA = "0xE0505C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xE05060", Offset = "0xE05060", VA = "0xE05060", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xE051F4", Offset = "0xE051F4", VA = "0xE051F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Duration;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_Audio;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip m_OnOverClip;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_OnFilledClip;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Slider m_Slider;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_BarCanvas;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UIFader m_UIFader;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Collider m_Collider;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_DisableOnBarFill;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[SerializeField]
		private bool m_DisappearOnBarFill;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool m_BarFilled;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		private bool m_GazeOver;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_Timer;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine m_FillBarRoutine;

		[Token(Token = "0x40014CD")]
		private const string k_SliderMaterialPropertyName = "_SliderValue";

		[Token(Token = "0x1400002F")]
		public event Action OnBarFilled
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xE048A0", Offset = "0xE048A0", VA = "0xE048A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7202CC", Offset = "0x7202CC")]
			add
			{
			}
			[Token(Token = "0x6001320")]
			[Address(RVA = "0xE04944", Offset = "0xE04944", VA = "0xE04944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7202DC", Offset = "0x7202DC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xE049E8", Offset = "0xE049E8", VA = "0xE049E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xE04B28", Offset = "0xE04B28", VA = "0xE04B28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xE04C68", Offset = "0xE04C68", VA = "0xE04C68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xE04D04", Offset = "0xE04D04", VA = "0xE04D04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7202EC", Offset = "0x7202EC")]
		public IEnumerator WaitForBarToFill()
		{
			return null;
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xE04DA0", Offset = "0xE04DA0", VA = "0xE04DA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720350", Offset = "0x720350")]
		private IEnumerator FillBar()
		{
			return null;
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xE04E3C", Offset = "0xE04E3C", VA = "0xE04E3C")]
		private void SetSliderValue(float sliderValue)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xE04F4C", Offset = "0xE04F4C", VA = "0xE04F4C")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xE04F88", Offset = "0xE04F88", VA = "0xE04F88")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xE04FC4", Offset = "0xE04FC4", VA = "0xE04FC4")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xE0500C", Offset = "0xE0500C", VA = "0xE0500C")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xE0504C", Offset = "0xE0504C", VA = "0xE0504C")]
		public SelectionSlider()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class UIFader : MonoBehaviour
	{
		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715404", Offset = "0x715404")]
		private sealed class <WaitForFadeIn>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170002FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E3F")]
				[Address(RVA = "0xE0657C", Offset = "0xE0657C", VA = "0xE0657C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E41")]
				[Address(RVA = "0xE065E4", Offset = "0xE065E4", VA = "0xE065E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xE05774", Offset = "0xE05774", VA = "0xE05774")]
			[DebuggerHidden]
			public <WaitForFadeIn>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xE064EC", Offset = "0xE064EC", VA = "0xE064EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xE064F0", Offset = "0xE064F0", VA = "0xE064F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xE06584", Offset = "0xE06584", VA = "0xE06584", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715414", Offset = "0x715414")]
		private sealed class <InteruptAndFadeIn>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x170002FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E45")]
				[Address(RVA = "0xE06388", Offset = "0xE06388", VA = "0xE06388", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E47")]
				[Address(RVA = "0xE063F0", Offset = "0xE063F0", VA = "0xE063F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xE05810", Offset = "0xE05810", VA = "0xE05810")]
			[DebuggerHidden]
			public <InteruptAndFadeIn>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xE06304", Offset = "0xE06304", VA = "0xE06304", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xE06308", Offset = "0xE06308", VA = "0xE06308", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xE06390", Offset = "0xE06390", VA = "0xE06390", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715424", Offset = "0x715424")]
		private sealed class <CheckAndFadeIn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000300")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E4B")]
				[Address(RVA = "0xE05D74", Offset = "0xE05D74", VA = "0xE05D74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000301")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E4D")]
				[Address(RVA = "0xE05DDC", Offset = "0xE05DDC", VA = "0xE05DDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xE058AC", Offset = "0xE058AC", VA = "0xE058AC")]
			[DebuggerHidden]
			public <CheckAndFadeIn>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xE05CEC", Offset = "0xE05CEC", VA = "0xE05CEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xE05CF0", Offset = "0xE05CF0", VA = "0xE05CF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xE05D7C", Offset = "0xE05D7C", VA = "0xE05D7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715434", Offset = "0x715434")]
		private sealed class <FadeIn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lowestAlpha>5__2;

			[Token(Token = "0x17000302")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E51")]
				[Address(RVA = "0xE06088", Offset = "0xE06088", VA = "0xE06088", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000303")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E53")]
				[Address(RVA = "0xE060F0", Offset = "0xE060F0", VA = "0xE060F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0xE05948", Offset = "0xE05948", VA = "0xE05948")]
			[DebuggerHidden]
			public <FadeIn>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0xE05EDC", Offset = "0xE05EDC", VA = "0xE05EDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xE05EE0", Offset = "0xE05EE0", VA = "0xE05EE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xE06090", Offset = "0xE06090", VA = "0xE06090", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715444", Offset = "0x715444")]
		private sealed class <WaitForFadeOut>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000304")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E57")]
				[Address(RVA = "0xE0667C", Offset = "0xE0667C", VA = "0xE0667C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000305")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E59")]
				[Address(RVA = "0xE066E4", Offset = "0xE066E4", VA = "0xE066E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xE059E4", Offset = "0xE059E4", VA = "0xE059E4")]
			[DebuggerHidden]
			public <WaitForFadeOut>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xE065EC", Offset = "0xE065EC", VA = "0xE065EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xE065F0", Offset = "0xE065F0", VA = "0xE065F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E58")]
			[Address(RVA = "0xE06684", Offset = "0xE06684", VA = "0xE06684", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715454", Offset = "0x715454")]
		private sealed class <InteruptAndFadeOut>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000306")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E5D")]
				[Address(RVA = "0xE0647C", Offset = "0xE0647C", VA = "0xE0647C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000307")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E5F")]
				[Address(RVA = "0xE064E4", Offset = "0xE064E4", VA = "0xE064E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xE05A80", Offset = "0xE05A80", VA = "0xE05A80")]
			[DebuggerHidden]
			public <InteruptAndFadeOut>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xE063F8", Offset = "0xE063F8", VA = "0xE063F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xE063FC", Offset = "0xE063FC", VA = "0xE063FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0xE06484", Offset = "0xE06484", VA = "0xE06484", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715464", Offset = "0x715464")]
		private sealed class <CheckAndFadeOut>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000308")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E63")]
				[Address(RVA = "0xE05E6C", Offset = "0xE05E6C", VA = "0xE05E6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000309")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E65")]
				[Address(RVA = "0xE05ED4", Offset = "0xE05ED4", VA = "0xE05ED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E60")]
			[Address(RVA = "0xE05B1C", Offset = "0xE05B1C", VA = "0xE05B1C")]
			[DebuggerHidden]
			public <CheckAndFadeOut>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001E61")]
			[Address(RVA = "0xE05DE4", Offset = "0xE05DE4", VA = "0xE05DE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E62")]
			[Address(RVA = "0xE05DE8", Offset = "0xE05DE8", VA = "0xE05DE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xE05E74", Offset = "0xE05E74", VA = "0xE05E74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715474", Offset = "0x715474")]
		private sealed class <FadeOut>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <highestAlpha>5__2;

			[Token(Token = "0x1700030A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E69")]
				[Address(RVA = "0xE06294", Offset = "0xE06294", VA = "0xE06294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E6B")]
				[Address(RVA = "0xE062FC", Offset = "0xE062FC", VA = "0xE062FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xE05BB8", Offset = "0xE05BB8", VA = "0xE05BB8")]
			[DebuggerHidden]
			public <FadeOut>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xE060F8", Offset = "0xE060F8", VA = "0xE060F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E68")]
			[Address(RVA = "0xE060FC", Offset = "0xE060FC", VA = "0xE060FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xE0629C", Offset = "0xE0629C", VA = "0xE0629C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_FadeSpeed;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup[] m_GroupsToFade;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Fading;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B22C", Offset = "0x71B22C")]
		private bool <Visible>k__BackingField;

		[Token(Token = "0x1700018D")]
		public bool Visible
		{
			[Token(Token = "0x6001330")]
			[Address(RVA = "0xE056F0", Offset = "0xE056F0", VA = "0xE056F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7203F4", Offset = "0x7203F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001331")]
			[Address(RVA = "0xE056F8", Offset = "0xE056F8", VA = "0xE056F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720404", Offset = "0x720404")]
			private set
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action OnFadeInComplete
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0xE05460", Offset = "0xE05460", VA = "0xE05460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7203B4", Offset = "0x7203B4")]
			add
			{
			}
			[Token(Token = "0x600132D")]
			[Address(RVA = "0xE05504", Offset = "0xE05504", VA = "0xE05504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7203C4", Offset = "0x7203C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action OnFadeOutComplete
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xE055A8", Offset = "0xE055A8", VA = "0xE055A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7203D4", Offset = "0x7203D4")]
			add
			{
			}
			[Token(Token = "0x600132F")]
			[Address(RVA = "0xE0564C", Offset = "0xE0564C", VA = "0xE0564C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7203E4", Offset = "0x7203E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xE05704", Offset = "0xE05704", VA = "0xE05704")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720414", Offset = "0x720414")]
		public IEnumerator WaitForFadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xE057A0", Offset = "0xE057A0", VA = "0xE057A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720478", Offset = "0x720478")]
		public IEnumerator InteruptAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xE0583C", Offset = "0xE0583C", VA = "0xE0583C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7204DC", Offset = "0x7204DC")]
		public IEnumerator CheckAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xE058D8", Offset = "0xE058D8", VA = "0xE058D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720540", Offset = "0x720540")]
		public IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xE05974", Offset = "0xE05974", VA = "0xE05974")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7205A4", Offset = "0x7205A4")]
		public IEnumerator WaitForFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xE05A10", Offset = "0xE05A10", VA = "0xE05A10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720608", Offset = "0x720608")]
		public IEnumerator InteruptAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xE05AAC", Offset = "0xE05AAC", VA = "0xE05AAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72066C", Offset = "0x72066C")]
		public IEnumerator CheckAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xE05B48", Offset = "0xE05B48", VA = "0xE05B48")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7206D0", Offset = "0x7206D0")]
		public IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xE05BE4", Offset = "0xE05BE4", VA = "0xE05BE4")]
		public void SetVisible()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xE05C68", Offset = "0xE05C68", VA = "0xE05C68")]
		public void SetInvisible()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xE05CDC", Offset = "0xE05CDC", VA = "0xE05CDC")]
		public UIFader()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class VRCameraFade : MonoBehaviour
	{
		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715484", Offset = "0x715484")]
		private sealed class <BeginFadeOut>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x1700030C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6F")]
				[Address(RVA = "0xE07598", Offset = "0xE07598", VA = "0xE07598", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E71")]
				[Address(RVA = "0xE07600", Offset = "0xE07600", VA = "0xE07600", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xE06CB0", Offset = "0xE06CB0", VA = "0xE06CB0")]
			[DebuggerHidden]
			public <BeginFadeOut>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0xE07484", Offset = "0xE07484", VA = "0xE07484", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0xE07488", Offset = "0xE07488", VA = "0xE07488", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0xE075A0", Offset = "0xE075A0", VA = "0xE075A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715494", Offset = "0x715494")]
		private sealed class <BeginFadeOut>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x1700030E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E75")]
				[Address(RVA = "0xE0771C", Offset = "0xE0771C", VA = "0xE0771C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E77")]
				[Address(RVA = "0xE07784", Offset = "0xE07784", VA = "0xE07784", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xE06D70", Offset = "0xE06D70", VA = "0xE06D70")]
			[DebuggerHidden]
			public <BeginFadeOut>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xE07608", Offset = "0xE07608", VA = "0xE07608", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xE0760C", Offset = "0xE0760C", VA = "0xE0760C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xE07724", Offset = "0xE07724", VA = "0xE07724", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7154A4", Offset = "0x7154A4")]
		private sealed class <BeginFadeIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x17000310")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7B")]
				[Address(RVA = "0xE07290", Offset = "0xE07290", VA = "0xE07290", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000311")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E7D")]
				[Address(RVA = "0xE072F8", Offset = "0xE072F8", VA = "0xE072F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E78")]
			[Address(RVA = "0xE06E20", Offset = "0xE06E20", VA = "0xE06E20")]
			[DebuggerHidden]
			public <BeginFadeIn>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001E79")]
			[Address(RVA = "0xE0717C", Offset = "0xE0717C", VA = "0xE0717C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0xE07180", Offset = "0xE07180", VA = "0xE07180", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xE07298", Offset = "0xE07298", VA = "0xE07298", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7154B4", Offset = "0x7154B4")]
		private sealed class <BeginFadeIn>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x17000312")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E81")]
				[Address(RVA = "0xE07414", Offset = "0xE07414", VA = "0xE07414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000313")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E83")]
				[Address(RVA = "0xE0747C", Offset = "0xE0747C", VA = "0xE0747C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0xE06EE0", Offset = "0xE06EE0", VA = "0xE06EE0")]
			[DebuggerHidden]
			public <BeginFadeIn>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0xE07300", Offset = "0xE07300", VA = "0xE07300", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0xE07304", Offset = "0xE07304", VA = "0xE07304", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0xE0741C", Offset = "0xE0741C", VA = "0xE0741C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7154C4", Offset = "0x7154C4")]
		private sealed class <BeginFade>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startCol;

			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endCol;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <timer>5__2;

			[Token(Token = "0x17000314")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E87")]
				[Address(RVA = "0xE0710C", Offset = "0xE0710C", VA = "0xE0710C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000315")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E89")]
				[Address(RVA = "0xE07174", Offset = "0xE07174", VA = "0xE07174", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0xE06F0C", Offset = "0xE06F0C", VA = "0xE06F0C")]
			[DebuggerHidden]
			public <BeginFade>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0xE07010", Offset = "0xE07010", VA = "0xE07010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xE07014", Offset = "0xE07014", VA = "0xE07014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0xE07114", Offset = "0xE07114", VA = "0xE07114", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_FadeImage;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixerSnapshot m_DefaultSnapshot;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioMixerSnapshot m_FadedSnapshot;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_FadeColor;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_FadeInOnSceneLoad;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool m_FadeInOnStart;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool m_IsFading;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_FadeStartTime;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_FadeOutColor;

		[Token(Token = "0x1700018E")]
		public bool IsFading
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0xE06834", Offset = "0xE06834", VA = "0xE06834")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000032")]
		public event Action OnFadeComplete
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xE066EC", Offset = "0xE066EC", VA = "0xE066EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720734", Offset = "0x720734")]
			add
			{
			}
			[Token(Token = "0x600133E")]
			[Address(RVA = "0xE06790", Offset = "0xE06790", VA = "0xE06790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720744", Offset = "0x720744")]
			remove
			{
			}
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xE0683C", Offset = "0xE0683C", VA = "0xE0683C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xE06920", Offset = "0xE06920", VA = "0xE06920")]
		private void Start()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xE0698C", Offset = "0xE0698C", VA = "0xE0698C")]
		private void HandleSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xE069EC", Offset = "0xE069EC", VA = "0xE069EC")]
		public void FadeOut(bool fadeAudio)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xE069F8", Offset = "0xE069F8", VA = "0xE069F8")]
		public void FadeOut(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xE06980", Offset = "0xE06980", VA = "0xE06980")]
		public void FadeIn(bool fadeAudio)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xE06BB8", Offset = "0xE06BB8", VA = "0xE06BB8")]
		public void FadeIn(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xE02618", Offset = "0xE02618", VA = "0xE02618")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720754", Offset = "0x720754")]
		public IEnumerator BeginFadeOut(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xE06CDC", Offset = "0xE06CDC", VA = "0xE06CDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7207B8", Offset = "0x7207B8")]
		public IEnumerator BeginFadeOut(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xE06D9C", Offset = "0xE06D9C", VA = "0xE06D9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72081C", Offset = "0x72081C")]
		public IEnumerator BeginFadeIn(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xE06E4C", Offset = "0xE06E4C", VA = "0xE06E4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720880", Offset = "0x720880")]
		public IEnumerator BeginFadeIn(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xE06AF0", Offset = "0xE06AF0", VA = "0xE06AF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7208E4", Offset = "0x7208E4")]
		private IEnumerator BeginFade(Color startCol, Color endCol, float duration)
		{
			return null;
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xE06F38", Offset = "0xE06F38", VA = "0xE06F38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xE06FD4", Offset = "0xE06FD4", VA = "0xE06FD4")]
		public VRCameraFade()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class VRCameraUI : MonoBehaviour
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas m_Canvas;

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xE0778C", Offset = "0xE0778C", VA = "0xE0778C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xE077D8", Offset = "0xE077D8", VA = "0xE077D8")]
		public VRCameraUI()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class VRDeviceManager : MonoBehaviour
	{
		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_RenderScale;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRDeviceManager s_Instance;

		[Token(Token = "0x1700018F")]
		public static VRDeviceManager Instance
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xE077E0", Offset = "0xE077E0", VA = "0xE077E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xE078D0", Offset = "0xE078D0", VA = "0xE078D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xE07A10", Offset = "0xE07A10", VA = "0xE07A10")]
		public VRDeviceManager()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_ShowDebugRay;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CustomSelectionRadial m_customSelection;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ItselfSelectionRadial m_checkSelection;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int menuLayer;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int targetLayer;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject tempSection;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image imgSection;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_DebugRayLength;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_DebugRayDuration;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_RayLength;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Reticle m_Reticle;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private VRInput m_VrInput;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRInteractiveItem m_CurrentInteractible;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VRInteractiveItem m_LastInteractible;

		[Token(Token = "0x17000190")]
		public VRInteractiveItem CurrentInteractible
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0xE07D20", Offset = "0xE07D20", VA = "0xE07D20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000033")]
		public event Action<RaycastHit> OnRaycasthit
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0xE07A24", Offset = "0xE07A24", VA = "0xE07A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720948", Offset = "0x720948")]
			add
			{
			}
			[Token(Token = "0x6001354")]
			[Address(RVA = "0xE07AC8", Offset = "0xE07AC8", VA = "0xE07AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720958", Offset = "0x720958")]
			remove
			{
			}
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xE07B6C", Offset = "0xE07B6C", VA = "0xE07B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xE07C0C", Offset = "0xE07C0C", VA = "0xE07C0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xE07D28", Offset = "0xE07D28", VA = "0xE07D28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xE07E68", Offset = "0xE07E68", VA = "0xE07E68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xE07FA8", Offset = "0xE07FA8", VA = "0xE07FA8")]
		private void Update()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xE07FAC", Offset = "0xE07FAC", VA = "0xE07FAC")]
		private void EyeRaycast()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xE084C0", Offset = "0xE084C0", VA = "0xE084C0")]
		private bool IsRaycastIgnore()
		{
			return default(bool);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xE085EC", Offset = "0xE085EC", VA = "0xE085EC")]
		private void DeactiveLastInteractible()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xE0867C", Offset = "0xE0867C", VA = "0xE0867C")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xE08710", Offset = "0xE08710", VA = "0xE08710")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xE087A4", Offset = "0xE087A4", VA = "0xE087A4")]
		private void HandleClick()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xE08838", Offset = "0xE08838", VA = "0xE08838")]
		private void HandleDoubleClick()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xE088CC", Offset = "0xE088CC", VA = "0xE088CC")]
		public VREyeRaycaster()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class VRFPSCounter : MonoBehaviour
	{
		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_DeltaTime;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_Text;

		[Token(Token = "0x40014F3")]
		private const float k_SmoothingCoef = 0.1f;

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xE088E8", Offset = "0xE088E8", VA = "0xE088E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xE08940", Offset = "0xE08940", VA = "0xE08940")]
		private void Update()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xE08A70", Offset = "0xE08A70", VA = "0xE08A70")]
		public VRFPSCounter()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class VRInput : MonoBehaviour
	{
		[Token(Token = "0x200053E")]
		public enum SwipeDirection
		{
			[Token(Token = "0x4001F04")]
			NONE,
			[Token(Token = "0x4001F05")]
			UP,
			[Token(Token = "0x4001F06")]
			DOWN,
			[Token(Token = "0x4001F07")]
			LEFT,
			[Token(Token = "0x4001F08")]
			RIGHT
		}

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_DoubleClickTime;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_SwipeWidth;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 m_MouseDownPosition;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector2 m_MouseUpPosition;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_LastMouseUpTime;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_LastHorizontalValue;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_LastVerticalValue;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int menuLayer;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int targetLayer;

		[Token(Token = "0x17000191")]
		public float DoubleClickTime
		{
			[Token(Token = "0x6001372")]
			[Address(RVA = "0xD5C30C", Offset = "0xD5C30C", VA = "0xD5C30C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<SwipeDirection> OnSwipe
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0xD5BB5C", Offset = "0xD5BB5C", VA = "0xD5BB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720968", Offset = "0x720968")]
			add
			{
			}
			[Token(Token = "0x6001367")]
			[Address(RVA = "0xD5BC00", Offset = "0xD5BC00", VA = "0xD5BC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720978", Offset = "0x720978")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event Action OnClick
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0xD5BCA4", Offset = "0xD5BCA4", VA = "0xD5BCA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720988", Offset = "0x720988")]
			add
			{
			}
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xD5BD48", Offset = "0xD5BD48", VA = "0xD5BD48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720998", Offset = "0x720998")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action OnDown
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xD5BDEC", Offset = "0xD5BDEC", VA = "0xD5BDEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7209A8", Offset = "0x7209A8")]
			add
			{
			}
			[Token(Token = "0x600136B")]
			[Address(RVA = "0xD5BE90", Offset = "0xD5BE90", VA = "0xD5BE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7209B8", Offset = "0x7209B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event Action OnUp
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0xD5BF34", Offset = "0xD5BF34", VA = "0xD5BF34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7209C8", Offset = "0x7209C8")]
			add
			{
			}
			[Token(Token = "0x600136D")]
			[Address(RVA = "0xD5BFD8", Offset = "0xD5BFD8", VA = "0xD5BFD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7209D8", Offset = "0x7209D8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action OnDoubleClick
		{
			[Token(Token = "0x600136E")]
			[Address(RVA = "0xD5C07C", Offset = "0xD5C07C", VA = "0xD5C07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7209E8", Offset = "0x7209E8")]
			add
			{
			}
			[Token(Token = "0x600136F")]
			[Address(RVA = "0xD5C120", Offset = "0xD5C120", VA = "0xD5C120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7209F8", Offset = "0x7209F8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action OnCancel
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0xD5C1C4", Offset = "0xD5C1C4", VA = "0xD5C1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A08", Offset = "0x720A08")]
			add
			{
			}
			[Token(Token = "0x6001371")]
			[Address(RVA = "0xD5C268", Offset = "0xD5C268", VA = "0xD5C268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A18", Offset = "0x720A18")]
			remove
			{
			}
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xD5C314", Offset = "0xD5C314", VA = "0xD5C314")]
		private void Start()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xD5C428", Offset = "0xD5C428", VA = "0xD5C428")]
		private void Update()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xD5C42C", Offset = "0xD5C42C", VA = "0xD5C42C")]
		private void CheckInput()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xD5C6B4", Offset = "0xD5C6B4", VA = "0xD5C6B4")]
		private SwipeDirection DetectSwipe()
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xD5C7F0", Offset = "0xD5C7F0", VA = "0xD5C7F0")]
		private SwipeDirection DetectKeyboardEmulatedSwipe()
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xD5C920", Offset = "0xD5C920", VA = "0xD5C920")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xD5C934", Offset = "0xD5C934", VA = "0xD5C934")]
		public VRInput()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public class VRInteractiveItem : MonoBehaviour
	{
		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_IsOver;

		[Token(Token = "0x17000192")]
		public bool IsOver
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0xD5D0FC", Offset = "0xD5D0FC", VA = "0xD5D0FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action OnOver
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0xD5C94C", Offset = "0xD5C94C", VA = "0xD5C94C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A28", Offset = "0x720A28")]
			add
			{
			}
			[Token(Token = "0x600137B")]
			[Address(RVA = "0xD5C9F0", Offset = "0xD5C9F0", VA = "0xD5C9F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A38", Offset = "0x720A38")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action OnOut
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0xD5CA94", Offset = "0xD5CA94", VA = "0xD5CA94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A48", Offset = "0x720A48")]
			add
			{
			}
			[Token(Token = "0x600137D")]
			[Address(RVA = "0xD5CB38", Offset = "0xD5CB38", VA = "0xD5CB38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A58", Offset = "0x720A58")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action OnClick
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0xD5CBDC", Offset = "0xD5CBDC", VA = "0xD5CBDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A68", Offset = "0x720A68")]
			add
			{
			}
			[Token(Token = "0x600137F")]
			[Address(RVA = "0xD5CC80", Offset = "0xD5CC80", VA = "0xD5CC80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A78", Offset = "0x720A78")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action OnDoubleClick
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0xD5CD24", Offset = "0xD5CD24", VA = "0xD5CD24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A88", Offset = "0x720A88")]
			add
			{
			}
			[Token(Token = "0x6001381")]
			[Address(RVA = "0xD5CDC8", Offset = "0xD5CDC8", VA = "0xD5CDC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720A98", Offset = "0x720A98")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action OnUp
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0xD5CE6C", Offset = "0xD5CE6C", VA = "0xD5CE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720AA8", Offset = "0x720AA8")]
			add
			{
			}
			[Token(Token = "0x6001383")]
			[Address(RVA = "0xD5CF10", Offset = "0xD5CF10", VA = "0xD5CF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720AB8", Offset = "0x720AB8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action OnDown
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0xD5CFB4", Offset = "0xD5CFB4", VA = "0xD5CFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720AC8", Offset = "0x720AC8")]
			add
			{
			}
			[Token(Token = "0x6001385")]
			[Address(RVA = "0xD5D058", Offset = "0xD5D058", VA = "0xD5D058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720AD8", Offset = "0x720AD8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xD5D104", Offset = "0xD5D104", VA = "0xD5D104")]
		public void Over()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xD5D124", Offset = "0xD5D124", VA = "0xD5D124")]
		public void Out()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xD5D140", Offset = "0xD5D140", VA = "0xD5D140")]
		public void Click()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xD5D154", Offset = "0xD5D154", VA = "0xD5D154")]
		public void DoubleClick()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xD5D168", Offset = "0xD5D168", VA = "0xD5D168")]
		public void Up()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xD5D17C", Offset = "0xD5D17C", VA = "0xD5D17C")]
		public void Down()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xD5D190", Offset = "0xD5D190", VA = "0xD5D190")]
		public VRInteractiveItem()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class VRTrackingReset : MonoBehaviour
	{
		[Token(Token = "0x600138E")]
		[Address(RVA = "0xD5D198", Offset = "0xD5D198", VA = "0xD5D198")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xD5D1F8", Offset = "0xD5D1F8", VA = "0xD5D1F8")]
		public VRTrackingReset()
		{
		}
	}
}
namespace CustomUtils
{
	[Token(Token = "0x200033A")]
	public static class CameraUtils
	{
		[Token(Token = "0x6001390")]
		[Address(RVA = "0xAB6C90", Offset = "0xAB6C90", VA = "0xAB6C90")]
		public static bool IsInView(Camera camera, GameObject toCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xAB6FF0", Offset = "0xAB6FF0", VA = "0xAB6FF0")]
		public static bool IsInView(Camera camera, GameObject toCheck, LayerMask layerMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xAB6DD8", Offset = "0xAB6DD8", VA = "0xAB6DD8")]
		private static Vector3 GetPointOnScreenOfObject(Camera camera, GameObject toCheck)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xAB6EF0", Offset = "0xAB6EF0", VA = "0xAB6EF0")]
		private static Vector3 GetCenterOfObject(GameObject toCheck)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200033B")]
	public static class CustomGamePadInput
	{
		[Token(Token = "0x6001394")]
		[Address(RVA = "0xAB7168", Offset = "0xAB7168", VA = "0xAB7168")]
		public static bool IsPress(Command command)
		{
			return default(bool);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xAB6B58", Offset = "0xAB6B58", VA = "0xAB6B58")]
		public static bool IsPressButtonDown(Command command)
		{
			return default(bool);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xAB76C0", Offset = "0xAB76C0", VA = "0xAB76C0")]
		private static string ConvertAxis(string axisCode)
		{
			return null;
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xAB71EC", Offset = "0xAB71EC", VA = "0xAB71EC")]
		private static KeyCode ConvertButtonJoystick(string keycode)
		{
			return default(KeyCode);
		}
	}
	[Token(Token = "0x200033C")]
	public static class CustomSystem
	{
		[Token(Token = "0x6001398")]
		public static T ParseEnum<T>(string value)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200033D")]
	public static class GameObjectUtils
	{
		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7154D4", Offset = "0x7154D4")]
		private sealed class <>c__DisplayClass0_0<T>
		{
			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<T> results;

			[Token(Token = "0x6001E8A")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001E8B")]
			internal void <FindObjectsOfTypeAll>b__0(GameObject g)
			{
			}
		}

		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7154E4", Offset = "0x7154E4")]
		private sealed class <>c__DisplayClass1_0<T>
		{
			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<T> results;

			[Token(Token = "0x6001E8C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001E8D")]
			internal void <FindObjectsOfType>b__0(GameObject g)
			{
			}
		}

		[Token(Token = "0x6001399")]
		public static List<T> FindObjectsOfTypeAll<T>()
		{
			return null;
		}

		[Token(Token = "0x600139A")]
		public static T FindObjectsOfType<T>()
		{
			return (T)null;
		}
	}
}
namespace ActiveVR
{
	[Token(Token = "0x200033E")]
	public class ActiveCustomController : MonoBehaviour
	{
		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CustomControllerSetting customControllerScript;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandButtonControl commandControlScript;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject selectedButton;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x9107BC", Offset = "0x9107BC", VA = "0x9107BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x91083C", Offset = "0x91083C", VA = "0x91083C")]
		public void SetButton(GameObject _button)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x910844", Offset = "0x910844", VA = "0x910844")]
		public void SetCustomController(bool isNextController)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x910864", Offset = "0x910864", VA = "0x910864")]
		public void SetCustomPattern(string _patternLayerID)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x9108E4", Offset = "0x9108E4", VA = "0x9108E4")]
		public void SelectCommand(string _commandID)
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x910D44", Offset = "0x910D44", VA = "0x910D44")]
		public ActiveCustomController()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class ActiveMainMenu : MonoBehaviour
	{
		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject listMenu;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator menuAnim;

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x9110E8", Offset = "0x9110E8", VA = "0x9110E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x911148", Offset = "0x911148", VA = "0x911148")]
		public void ActiveMenuContent(GameObject menuContent)
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x9111DC", Offset = "0x9111DC", VA = "0x9111DC")]
		public void OpenSettingBoard()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x91125C", Offset = "0x91125C", VA = "0x91125C")]
		public void BackToMainMenu()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x91130C", Offset = "0x91130C", VA = "0x91130C")]
		public void QuitApp()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x911314", Offset = "0x911314", VA = "0x911314")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x911374", Offset = "0x911374", VA = "0x911374")]
		public ActiveMainMenu()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class ActiveSelectStageMenu : MonoBehaviour
	{
		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7154F4", Offset = "0x7154F4")]
		private sealed class <LoadSceneAsync>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ActiveSelectStageMenu <>4__this;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string senceName;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x17000316")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E91")]
				[Address(RVA = "0x9118C8", Offset = "0x9118C8", VA = "0x9118C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000317")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E93")]
				[Address(RVA = "0x911930", Offset = "0x911930", VA = "0x911930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x9117A8", Offset = "0x9117A8", VA = "0x9117A8")]
			[DebuggerHidden]
			public <LoadSceneAsync>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x9117DC", Offset = "0x9117DC", VA = "0x9117DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x9117E0", Offset = "0x9117E0", VA = "0x9117E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x9118D0", Offset = "0x9118D0", VA = "0x9118D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image[] sceneImg;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject listMenu;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject loading;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sceneIndex;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator menuAnim;

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x91137C", Offset = "0x91137C", VA = "0x91137C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x9113DC", Offset = "0x9113DC", VA = "0x9113DC")]
		public void LoadSelectedScene()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x911624", Offset = "0x911624", VA = "0x911624")]
		public void BackController()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x9116E8", Offset = "0x9116E8", VA = "0x9116E8")]
		public void NextController()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x911718", Offset = "0x911718", VA = "0x911718")]
		public void BackMainMenu()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x9114E8", Offset = "0x9114E8", VA = "0x9114E8")]
		private string GetNameSceneToCome()
		{
			return null;
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x9115A8", Offset = "0x9115A8", VA = "0x9115A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720AE8", Offset = "0x720AE8")]
		private IEnumerator LoadSceneAsync(string senceName)
		{
			return null;
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x911650", Offset = "0x911650", VA = "0x911650")]
		private void SetImageController()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x911420", Offset = "0x911420", VA = "0x911420")]
		private void ChangeActiveChildButtons(bool _val)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x9117D4", Offset = "0x9117D4", VA = "0x9117D4")]
		public ActiveSelectStageMenu()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class ActiveSettingButton : MonoBehaviour
	{
		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PatternGuideControl patternScript;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x911938", Offset = "0x911938", VA = "0x911938")]
		public void Awake()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x911990", Offset = "0x911990", VA = "0x911990")]
		public void ActiveGuidePattern()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x911A24", Offset = "0x911A24", VA = "0x911A24")]
		public void ResetPatternLayer()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x911A88", Offset = "0x911A88", VA = "0x911A88")]
		public void AcceptResetPatternLayer()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x911B04", Offset = "0x911B04", VA = "0x911B04")]
		public void CancelResetPatternLayer()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x911B68", Offset = "0x911B68", VA = "0x911B68")]
		public void BackToControllerSetting()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x911B84", Offset = "0x911B84", VA = "0x911B84")]
		public void AcceptSetting()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x911C28", Offset = "0x911C28", VA = "0x911C28")]
		public void DeclineSetting()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x911CCC", Offset = "0x911CCC", VA = "0x911CCC")]
		public ActiveSettingButton()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class ActiveSettingTab : MonoBehaviour
	{
		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject MenuTab;

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x911CD4", Offset = "0x911CD4", VA = "0x911CD4")]
		public void SelectTab(string tabName)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x911DB4", Offset = "0x911DB4", VA = "0x911DB4")]
		public ActiveSettingTab()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class ActiveWarningCircle : MonoBehaviour
	{
		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image circleFillImg;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image fillFullImg;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ItselfSelection m_SelectionRadial;

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x911DBC", Offset = "0x911DBC", VA = "0x911DBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x911E20", Offset = "0x911E20", VA = "0x911E20")]
		public void CompleteFillWarningCircle()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x911E98", Offset = "0x911E98", VA = "0x911E98")]
		public ActiveWarningCircle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000344")]
	public enum KIND_SELECTION_RADIAL
	{
		[Token(Token = "0x400151B")]
		Default,
		[Token(Token = "0x400151C")]
		Itself,
		[Token(Token = "0x400151D")]
		Simplest,
		[Token(Token = "0x400151E")]
		Continuous
	}
	[Token(Token = "0x2000345")]
	public class ActiveGUIVR : MonoBehaviour
	{
		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KIND_SELECTION_RADIAL kind_selection;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71B3EC", Offset = "0x71B3EC")]
		public bool canWorkContinuously;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent ActivityEvent;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_GazeOver;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DefaultSelectionRadial m_SelectionRadial;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera mainCam;

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x910D4C", Offset = "0x910D4C", VA = "0x910D4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x910E20", Offset = "0x910E20", VA = "0x910E20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x910F24", Offset = "0x910F24", VA = "0x910F24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x911028", Offset = "0x911028", VA = "0x911028")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x911064", Offset = "0x911064", VA = "0x911064")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x91109C", Offset = "0x91109C", VA = "0x91109C")]
		private void HandleSelectionComplete()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x910D78", Offset = "0x910D78", VA = "0x910D78")]
		private void SetKindSelection()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x9110E0", Offset = "0x9110E0", VA = "0x9110E0")]
		public ActiveGUIVR()
		{
		}
	}
}
namespace SafetySim4
{
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x714A24", Offset = "0x714A24")]
	public class SafetyScene4Control : MonoBehaviour
	{
		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715504", Offset = "0x715504")]
		private sealed class <ShowSolution>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000318")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E97")]
				[Address(RVA = "0x8E5A7C", Offset = "0x8E5A7C", VA = "0x8E5A7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000319")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E99")]
				[Address(RVA = "0x8E5AE4", Offset = "0x8E5AE4", VA = "0x8E5AE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x8E5944", Offset = "0x8E5944", VA = "0x8E5944")]
			[DebuggerHidden]
			public <ShowSolution>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001E95")]
			[Address(RVA = "0x8E5980", Offset = "0x8E5980", VA = "0x8E5980", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x8E5984", Offset = "0x8E5984", VA = "0x8E5984", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x8E5A84", Offset = "0x8E5A84", VA = "0x8E5A84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject yumbo;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject worker;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform workerTarget;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Excavator exScript;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WorkerController workerScript;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private YumboColliderScript YCScript;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioSource workerSource;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool wasGoStraight;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool wasFinish;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool isMoveToTarget;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float speed;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool wasComplete;

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x8E500C", Offset = "0x8E500C", VA = "0x8E500C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x8E517C", Offset = "0x8E517C", VA = "0x8E517C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x8E51FC", Offset = "0x8E51FC", VA = "0x8E51FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x8E53C8", Offset = "0x8E53C8", VA = "0x8E53C8")]
		private void SetYumboFalling()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x8E54B8", Offset = "0x8E54B8", VA = "0x8E54B8")]
		private void FakeShaking()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x8E5478", Offset = "0x8E5478", VA = "0x8E5478")]
		private bool CheckCompleteGoStraight()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x8E56F0", Offset = "0x8E56F0", VA = "0x8E56F0")]
		private void CheckCompleteGoBack()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x8E58E4", Offset = "0x8E58E4", VA = "0x8E58E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720B4C", Offset = "0x720B4C")]
		private IEnumerator ShowSolution()
		{
			return null;
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x8E5970", Offset = "0x8E5970", VA = "0x8E5970")]
		public SafetyScene4Control()
		{
		}
	}
}
namespace SafetySim3
{
	[Token(Token = "0x2000347")]
	public class CheckColliderSandBag : MonoBehaviour
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isCollisionSandBag;

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x8E4538", Offset = "0x8E4538", VA = "0x8E4538")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x8E45D8", Offset = "0x8E45D8", VA = "0x8E45D8")]
		public CheckColliderSandBag()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class Safety3Control : MonoBehaviour
	{
		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715514", Offset = "0x715514")]
		private sealed class <SetActiveRope>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Safety3Control <>4__this;

			[Token(Token = "0x1700031A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9D")]
				[Address(RVA = "0x8E4F9C", Offset = "0x8E4F9C", VA = "0x8E4F9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9F")]
				[Address(RVA = "0x8E5004", Offset = "0x8E5004", VA = "0x8E5004", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x8E4C24", Offset = "0x8E4C24", VA = "0x8E4C24")]
			[DebuggerHidden]
			public <SetActiveRope>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x8E4EE4", Offset = "0x8E4EE4", VA = "0x8E4EE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x8E4EE8", Offset = "0x8E4EE8", VA = "0x8E4EE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x8E4FA4", Offset = "0x8E4FA4", VA = "0x8E4FA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715524", Offset = "0x715524")]
		private sealed class <Fade>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Safety3Control <>4__this;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startCol;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endCol;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <timer>5__2;

			[Token(Token = "0x1700031C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA3")]
				[Address(RVA = "0x8E4E74", Offset = "0x8E4E74", VA = "0x8E4E74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA5")]
				[Address(RVA = "0x8E4EDC", Offset = "0x8E4EDC", VA = "0x8E4EDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x8E4C50", Offset = "0x8E4C50", VA = "0x8E4C50")]
			[DebuggerHidden]
			public <Fade>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x8E4C84", Offset = "0x8E4C84", VA = "0x8E4C84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x8E4C88", Offset = "0x8E4C88", VA = "0x8E4C88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x8E4E7C", Offset = "0x8E4E7C", VA = "0x8E4E7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject yumbo;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject rope;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CheckColliderSandBag sandBagScript;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color m_FadeColor;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_FadeImage;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color m_FadeOutColor;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isFinish;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 defaultYumboPos;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion defaultYumboRot;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Excavator exScript;

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x8E45E0", Offset = "0x8E45E0", VA = "0x8E45E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x8E46D8", Offset = "0x8E46D8", VA = "0x8E46D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x8E48A8", Offset = "0x8E48A8", VA = "0x8E48A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x8E4B38", Offset = "0x8E4B38", VA = "0x8E4B38")]
		private void ShowSolution()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x8E4838", Offset = "0x8E4838", VA = "0x8E4838")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720BB0", Offset = "0x720BB0")]
		private IEnumerator SetActiveRope()
		{
			return null;
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x8E4A78", Offset = "0x8E4A78", VA = "0x8E4A78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720C14", Offset = "0x720C14")]
		private IEnumerator Fade(Color startCol, Color endCol)
		{
			return null;
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x8E4C7C", Offset = "0x8E4C7C", VA = "0x8E4C7C")]
		public Safety3Control()
		{
		}
	}
}
namespace NoVRSafetySim9
{
	[Token(Token = "0x2000349")]
	public class BgYumboControl : MonoBehaviour
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float moveSpeed;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float scrollSpeed;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotateSpeed;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject TreadsL;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject TreadsR;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material matL;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material matR;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool V;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool U;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float offsetL;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float offsetR;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator animator;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float rotateTime;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float localTime;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool wasDriverForward;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool wasDriverBack;

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xD050A4", Offset = "0xD050A4", VA = "0xD050A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xD05154", Offset = "0xD05154", VA = "0xD05154")]
		public void SetDefaultAnimation()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xD051AC", Offset = "0xD051AC", VA = "0xD051AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xD052C0", Offset = "0xD052C0", VA = "0xD052C0")]
		private void DriverForward()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xD05440", Offset = "0xD05440", VA = "0xD05440")]
		private void DriverBack()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xD055C0", Offset = "0xD055C0", VA = "0xD055C0")]
		private void RotateBody()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xD05674", Offset = "0xD05674", VA = "0xD05674")]
		private void UpdateCrawler()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xD05798", Offset = "0xD05798", VA = "0xD05798")]
		public BgYumboControl()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class FadeOut : NextStepCondition
	{
		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image FadeImage;

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xCFFCB8", Offset = "0xCFFCB8", VA = "0xCFFCB8")]
		public FadeOut(Image _fadeImage)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xD057BC", Offset = "0xD057BC", VA = "0xD057BC", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xD0583C", Offset = "0xD0583C", VA = "0xD0583C", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xD0584C", Offset = "0xD0584C", VA = "0xD0584C", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class GoBack : NextStepCondition
	{
		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject worker;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject yumbo;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WorkerController workerScript;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WorkerSetMove setMoveScript;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Excavator exScript;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isShowSolution;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float time;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float speed;

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xCFFBA4", Offset = "0xCFFBA4", VA = "0xCFFBA4")]
		public GoBack(GameObject _yumbo, GameObject _worker)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xD05850", Offset = "0xD05850", VA = "0xD05850", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xD05938", Offset = "0xD05938", VA = "0xD05938", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xD05B28", Offset = "0xD05B28", VA = "0xD05B28")]
		private void FakeShaking()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xD05D60", Offset = "0xD05D60", VA = "0xD05D60", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class GoBackToComplete : NextStepCondition
	{
		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject Instructor;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject worker;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InstructorFollowYumbo instructorScript;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WorkerController workerScript;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WorkerSetMove workerSetMove;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Excavator exScript;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform targetComplete;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isSafe;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float speed;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float localTime;

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xCFFCE4", Offset = "0xCFFCE4", VA = "0xCFFCE4")]
		public GoBackToComplete(GameObject _yumbo, GameObject _Instructor, GameObject _worker, Transform _targetComplete)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xD05EC4", Offset = "0xD05EC4", VA = "0xD05EC4", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xD060B4", Offset = "0xD060B4", VA = "0xD060B4", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xD06388", Offset = "0xD06388", VA = "0xD06388")]
		private bool CheckInstructorAlert()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xD064C8", Offset = "0xD064C8", VA = "0xD064C8")]
		private bool CheckCompleteGoBack()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xD06150", Offset = "0xD06150", VA = "0xD06150")]
		private void FakeShaking()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xD065B0", Offset = "0xD065B0", VA = "0xD065B0", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class GoOutYumbo : NextStepCondition
	{
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image FadeImage;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject GoOutYumboButton;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject choosePanel;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Excavator exScript;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NavMeshObstacle exObs;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isGoOutYumbo;

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xCFFBE4", Offset = "0xCFFBE4", VA = "0xCFFBE4")]
		public GoOutYumbo(GameObject _yumbo, GameObject _GoOutYumboButton, GameObject _choosePanel, Image _fadeImg)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xD065B4", Offset = "0xD065B4", VA = "0xD065B4", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xD066FC", Offset = "0xD066FC", VA = "0xD066FC", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xD067E8", Offset = "0xD067E8", VA = "0xD067E8")]
		private void AgreeGoOutYumbo()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xD067F4", Offset = "0xD067F4", VA = "0xD067F4", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class GoStraight : NextStepCondition
	{
		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject worker;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Excavator exScript;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WorkerSetMove workerSetMove;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xCFFB64", Offset = "0xCFFB64", VA = "0xCFFB64")]
		public GoStraight(GameObject _yumbo, GameObject _worker)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xD068A4", Offset = "0xD068A4", VA = "0xD068A4", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xD06970", Offset = "0xD06970", VA = "0xD06970", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xD06A08", Offset = "0xD06A08", VA = "0xD06A08")]
		private void FakeShaking()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xD06C40", Offset = "0xD06C40", VA = "0xD06C40")]
		private bool CheckCompleteGoStraight()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xD06C80", Offset = "0xD06C80", VA = "0xD06C80", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class InstructorFollowYumbo : WorkerController
	{
		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715534", Offset = "0x715534")]
		private sealed class <SetCanMove>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstructorFollowYumbo <>4__this;

			[Token(Token = "0x1700031E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA9")]
				[Address(RVA = "0xD0709C", Offset = "0xD0709C", VA = "0xD0709C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EAB")]
				[Address(RVA = "0xD07104", Offset = "0xD07104", VA = "0xD07104", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0xD06F4C", Offset = "0xD06F4C", VA = "0xD06F4C")]
			[DebuggerHidden]
			public <SetCanMove>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xD06FE8", Offset = "0xD06FE8", VA = "0xD06FE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0xD06FEC", Offset = "0xD06FEC", VA = "0xD06FEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xD070A4", Offset = "0xD070A4", VA = "0xD070A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform[] raycatTargets;

		[Token(Token = "0x400156F")]
		private const float TIME_TO_MOVE = 3f;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] instructorTarget;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform yumbo;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool canMove;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool detectHuman;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NavMeshPath checkPath;

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xD06C84", Offset = "0xD06C84", VA = "0xD06C84")]
		private new void Awake()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xD06CB0", Offset = "0xD06CB0", VA = "0xD06CB0")]
		public void MoveToTargetBegin()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xD06D04", Offset = "0xD06D04", VA = "0xD06D04")]
		private new void Update()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xD06E00", Offset = "0xD06E00", VA = "0xD06E00")]
		private void CheckStopMove()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xD06EDC", Offset = "0xD06EDC", VA = "0xD06EDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720C78", Offset = "0x720C78")]
		private IEnumerator SetCanMove()
		{
			return null;
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xD06F78", Offset = "0xD06F78", VA = "0xD06F78")]
		public InstructorFollowYumbo()
		{
		}
	}
	[Token(Token = "0x2000350")]
	public class RequestInstructor : NextStepCondition
	{
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject Yumbo;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject Instructor;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject yumboCamera;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject yumboController;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject humanPlayer;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image FadeImage;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject TalkButton;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject GoInYumboButton;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject choosePanel;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform humanPlayerTarget;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Camera mainCam;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private InstructorFollowYumbo instructorScript;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private InteractiveOutlineEffect outlineScript;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isTalkWorkerGoOut;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool isGoInYumbo;

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xCFFC30", Offset = "0xCFFC30", VA = "0xCFFC30")]
		public RequestInstructor(GameObject _Yumbo, GameObject _Instructor, GameObject _yumboCamera, GameObject _yumboController, GameObject _humanPlayer, Transform _humanPlayerTarget, GameObject _TalkButton, GameObject _GoInYumboButton, GameObject _choosePanel, Image _FadeImage)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xD0710C", Offset = "0xD0710C", VA = "0xD0710C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xD072DC", Offset = "0xD072DC", VA = "0xD072DC", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xD07344", Offset = "0xD07344", VA = "0xD07344")]
		private bool IsTalkInstructor()
		{
			return default(bool);
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xD07410", Offset = "0xD07410", VA = "0xD07410")]
		private void TalkInstructor()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xD073A0", Offset = "0xD073A0", VA = "0xD073A0")]
		private bool IsGoInYumbo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xD07540", Offset = "0xD07540", VA = "0xD07540")]
		private void GoInYumbo()
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xD075D4", Offset = "0xD075D4", VA = "0xD075D4", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
}
namespace NoVRSafetySim6
{
	[Token(Token = "0x2000351")]
	public class CarrySoilOnTruck : NextStepCondition
	{
		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject bucket;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject truck;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject dumperColliderGO;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject worker;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Excavator exScript;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 bucketCenter;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Collider bucketCollider;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Collider dumperCollider;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BucketShaveSoil bucketScript;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TruckControl truckControl;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isComplete;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private InteractiveOutlineEffect outlineScript;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string guide;

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xCFE7A8", Offset = "0xCFE7A8", VA = "0xCFE7A8")]
		public CarrySoilOnTruck(GameObject _yumbo, GameObject _bucket, GameObject _truck, GameObject _dumperColliderGO, GameObject _worker, string _guide)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xD03AE4", Offset = "0xD03AE4", VA = "0xD03AE4", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xD03C3C", Offset = "0xD03C3C", VA = "0xD03C3C", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xD03D30", Offset = "0xD03D30", VA = "0xD03D30", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xD03C60", Offset = "0xD03C60", VA = "0xD03C60")]
		private void CheckFallSoil()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class GoOutYumbo : NextStepCondition
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image FadeImage;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject GoOutYumboButton;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject choosePanel;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Excavator exScript;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isGoOutYumbo;

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xCFE6CC", Offset = "0xCFE6CC", VA = "0xCFE6CC")]
		public GoOutYumbo(GameObject _yumbo, GameObject _GoOutYumboButton, GameObject _choosePanel, Image _FadeImage)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xD03D34", Offset = "0xD03D34", VA = "0xD03D34", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xD03E5C", Offset = "0xD03E5C", VA = "0xD03E5C", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xD03F48", Offset = "0xD03F48", VA = "0xD03F48")]
		private void AgreeGoOutYumbo()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xD03F54", Offset = "0xD03F54", VA = "0xD03F54", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class LookWorkerShowSolution : NextStepCondition
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject worker;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject bucketSoil;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject soilEffect;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject solutionButton;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image fadeImage;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Excavator exScript;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator exAnim;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera mainCam;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 yumboDefaultPos;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 workerDefaultPos;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion yumboDefaultRot;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WorkerController workerScript;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InteractiveOutlineEffect outlineScript;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool IsShowingSolution;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string solution;

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xCFE600", Offset = "0xCFE600", VA = "0xCFE600")]
		public LookWorkerShowSolution(GameObject _yumbo, Vector3 _yumboDefaultPos, Quaternion _yumboDefaultRot, GameObject _bucketSoil, GameObject _soilEffect, GameObject _worker, Vector3 _workerDefaultPos, GameObject _solutionButton, Image _fadeImage, string _solution)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xD03FF0", Offset = "0xD03FF0", VA = "0xD03FF0", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xD04200", Offset = "0xD04200", VA = "0xD04200", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xD043A0", Offset = "0xD043A0", VA = "0xD043A0", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class MoveWorkerOutWorkArea : NextStepCondition
	{
		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject worker;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject yumboCamera;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject yumboController;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject humanPlayer;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image fadeImage;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject TalkButton;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject GoInYumboButton;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject choosePanel;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform humanPlayerTarget;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform WorkerTarget;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Camera mainCam;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Excavator exScript;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WorkerController workerScript;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InteractiveOutlineEffect outlineScript;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isTalkWorkerGoOut;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool isGoInYumbo;

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xCFE718", Offset = "0xCFE718", VA = "0xCFE718")]
		public MoveWorkerOutWorkArea(GameObject _Yumbo, GameObject _yumboCamera, GameObject _yumboController, GameObject _humanPlayer, GameObject _Worker, GameObject _TalkButton, GameObject _GoInYumboButton, GameObject _choosePanel, Transform _humanPlayerTarget, Transform _WorkerTarget, Image _FadeImage)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xD0440C", Offset = "0xD0440C", VA = "0xD0440C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xD04618", Offset = "0xD04618", VA = "0xD04618", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xD04680", Offset = "0xD04680", VA = "0xD04680")]
		private bool IsTalkWorkerGoOut()
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xD046DC", Offset = "0xD046DC", VA = "0xD046DC")]
		private bool IsGoInYumbo()
		{
			return default(bool);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xD0474C", Offset = "0xD0474C", VA = "0xD0474C")]
		private void TalkGoOutWorkArea()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xD048A0", Offset = "0xD048A0", VA = "0xD048A0")]
		private void GoInYumbo()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xD04934", Offset = "0xD04934", VA = "0xD04934", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class TurningAccident : NextStepCondition
	{
		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject bucket;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject truck;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject dumperColliderGO;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject worker;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image FadeImage;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider bucketCollider;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 bucketCenter;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BucketShaveSoil bucketScript;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TruckControl truckControl;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Collider dumperCollider;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Excavator exScript;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float time;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float checkRotateTime;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool isComplete;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private WorkerController workerScript;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private InteractiveOutlineEffect outlineScript;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 workerDefaultPos;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 workerTarget;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 currentTarget;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private string guide;

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xCFE55C", Offset = "0xCFE55C", VA = "0xCFE55C")]
		public TurningAccident(GameObject _yumbo, GameObject _bucket, GameObject _truck, GameObject _dumperColliderGO, GameObject _worker, Image _FadeImage, Vector3 _workerDefaultPos, Vector3 _workerTarget, string _guide)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xD049C8", Offset = "0xD049C8", VA = "0xD049C8", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xD04B60", Offset = "0xD04B60", VA = "0xD04B60", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xD04EE0", Offset = "0xD04EE0", VA = "0xD04EE0", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xD04C7C", Offset = "0xD04C7C", VA = "0xD04C7C")]
		private void SuccessAction()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xD04E14", Offset = "0xD04E14", VA = "0xD04E14")]
		private void ControlWorker()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xD04BB4", Offset = "0xD04BB4", VA = "0xD04BB4")]
		private void CheckFallSoil()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xD04F18", Offset = "0xD04F18", VA = "0xD04F18")]
		private void SetMoveTarget(Vector3 tar1, Vector3 tar2)
		{
		}
	}
}
namespace NoVRSafetySim5
{
	[Token(Token = "0x2000356")]
	public class HumanCheck : NextStepCondition
	{
		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject truck;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject yumboCamera;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject yumboController;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject humanPlayer;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject viewFocus;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject solutionButton;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Image FadeImage;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform humanPlayerTarget;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera cam;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool IsShowingSolution;

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xCFDE5C", Offset = "0xCFDE5C", VA = "0xCFDE5C")]
		public HumanCheck(GameObject _truck, GameObject _humanPlayer, Transform _humanPlayerTarget, GameObject _yumboCamera, GameObject _viewFocus, GameObject _solutionButton, GameObject _yumboController, Image _FadeImage)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xD02E54", Offset = "0xD02E54", VA = "0xD02E54", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xD0301C", Offset = "0xD0301C", VA = "0xD0301C", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xD03174", Offset = "0xD03174", VA = "0xD03174", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class MoveDownFail : NextStepCondition
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject broadDrop;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject broadFake;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject localDrop;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject arrowGuide;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject yumbo;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Excavator exScript;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Image FadeImage;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CheckGotoGoal checkGotoScript;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float localTime;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isComplete;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 startPoint;

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xCFDDD0", Offset = "0xCFDDD0", VA = "0xCFDDD0")]
		public MoveDownFail(GameObject _broadDrop, GameObject _broadFake, GameObject _localDrop, Excavator _exScript, Image _FadeImage, GameObject _arrowGuide, Vector3 _startPoint, GameObject _yumbo)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xD0317C", Offset = "0xD0317C", VA = "0xD0317C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xD03230", Offset = "0xD03230", VA = "0xD03230", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xD035A4", Offset = "0xD035A4", VA = "0xD035A4", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xD0337C", Offset = "0xD0337C", VA = "0xD0337C")]
		private void SuccessAction()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xD03344", Offset = "0xD03344", VA = "0xD03344")]
		private void NeedGoStraight()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class PlayAgain : NextStepCondition
	{
		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject broadDrop;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject broadFake;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject finishTarget;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject localDrop;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject yumboCamera;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject yumboController;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject humanPlayer;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject arrowGuide;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CheckGotoGoal finishCheck;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CheckGotoGoal groundingCheck;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Image FadeImage;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Excavator exScript;

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xCFDF20", Offset = "0xCFDF20", VA = "0xCFDF20")]
		public PlayAgain(GameObject _broadDrop, GameObject _broadFake, GameObject _localDrop, GameObject _finishTarget, Image _FadeImage, GameObject _humanPlayer, GameObject _yumboController, GameObject _yumboCamera, GameObject _arrowGuide, Excavator _exScript)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xD035C4", Offset = "0xD035C4", VA = "0xD035C4", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xD036F4", Offset = "0xD036F4", VA = "0xD036F4", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xD03780", Offset = "0xD03780", VA = "0xD03780")]
		private void SetYumboFalling()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xD03890", Offset = "0xD03890", VA = "0xD03890", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xD03858", Offset = "0xD03858", VA = "0xD03858")]
		private void NeedGoStraight()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class SitInYumbo : NextStepCondition
	{
		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject goinYumboButton;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject chooosePanel;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Image FadeImage;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isGoInYumbo;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool isComplete;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xCFDED0", Offset = "0xCFDED0", VA = "0xCFDED0")]
		public SitInYumbo(GameObject _yumbo, GameObject _button, GameObject _chooosePanel, Image _fadedImage)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xD03894", Offset = "0xD03894", VA = "0xD03894", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xD039B4", Offset = "0xD039B4", VA = "0xD039B4", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xD03A4C", Offset = "0xD03A4C", VA = "0xD03A4C", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xD03AD8", Offset = "0xD03AD8", VA = "0xD03AD8")]
		private void AgreeGoInYumbo()
		{
		}
	}
}
namespace NoVRSafetySim4
{
	[Token(Token = "0x200035A")]
	public class GoBack : NextStepCondition
	{
		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject worker;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform workerTarget;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image FadeImage;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Excavator exScript;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WorkerController workerScript;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private YumboColliderScript YCScript;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float speed;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float localTime;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool wasComplete;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool wasSetWorkerFall;

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xCFD670", Offset = "0xCFD670", VA = "0xCFD670")]
		public GoBack(GameObject _yumbo, GameObject _worker, Transform _workerTarget, Image _FadeImage)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xD0121C", Offset = "0xD0121C", VA = "0xD0121C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xD01328", Offset = "0xD01328", VA = "0xD01328", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xD01778", Offset = "0xD01778", VA = "0xD01778")]
		private void CheckCompleteGoBack()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xD01540", Offset = "0xD01540", VA = "0xD01540")]
		private void FakeShaking()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xD01868", Offset = "0xD01868", VA = "0xD01868", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class GoBackToComplete : NextStepCondition
	{
		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Excavator exScript;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float speed;

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xCFD850", Offset = "0xCFD850", VA = "0xCFD850")]
		public GoBackToComplete(GameObject _yumbo)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xD018F4", Offset = "0xD018F4", VA = "0xD018F4", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xD0199C", Offset = "0xD0199C", VA = "0xD0199C", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xD01C28", Offset = "0xD01C28", VA = "0xD01C28")]
		private bool CheckCompleteGoBack()
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xD019F0", Offset = "0xD019F0", VA = "0xD019F0")]
		private void FakeShaking()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xD01C68", Offset = "0xD01C68", VA = "0xD01C68", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class GoOutYumbo : NextStepCondition
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject Worker;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform workerTarget;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image FadeImage;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject GoOutYumboButton;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject choosePanel;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Excavator exScript;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WorkerController workerScript;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isGoOutYumbo;

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xCFD74C", Offset = "0xCFD74C", VA = "0xCFD74C")]
		public GoOutYumbo(GameObject _yumbo, GameObject _worker, Transform _workerTarget, GameObject _GoOutYumboButton, GameObject _choosePanel, Image _FadeImage)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xD01C6C", Offset = "0xD01C6C", VA = "0xD01C6C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xD01DE4", Offset = "0xD01DE4", VA = "0xD01DE4", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xD01EF4", Offset = "0xD01EF4", VA = "0xD01EF4")]
		private void AgreeGoOutYumbo()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xD01F00", Offset = "0xD01F00", VA = "0xD01F00", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class GoStraight : NextStepCondition
	{
		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Excavator exScript;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float speed;

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xCFD63C", Offset = "0xCFD63C", VA = "0xCFD63C")]
		public GoStraight(GameObject _yumbo)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xD01F9C", Offset = "0xD01F9C", VA = "0xD01F9C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xD02044", Offset = "0xD02044", VA = "0xD02044", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xD02098", Offset = "0xD02098", VA = "0xD02098")]
		private void FakeShaking()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xD022D0", Offset = "0xD022D0", VA = "0xD022D0")]
		private bool CheckCompleteGoStraight()
		{
			return default(bool);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xD02310", Offset = "0xD02310", VA = "0xD02310", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class LookWorkerShowSolution : NextStepCondition
	{
		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject Yumbo;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject Worker;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject solutionButton;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image FadeImage;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera mainCam;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator workerAnim;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 YumboDefaultPos;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 WorkerDefaultPos;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool IsShowingSolution;

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xCFD6C4", Offset = "0xCFD6C4", VA = "0xCFD6C4")]
		public LookWorkerShowSolution(GameObject _yumbo, Vector3 _yumboPos, GameObject _worker, Vector3 _workerPos, GameObject _solutionButton, Image _fadeImage)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xD02314", Offset = "0xD02314", VA = "0xD02314", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xD02514", Offset = "0xD02514", VA = "0xD02514", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xD02454", Offset = "0xD02454", VA = "0xD02454")]
		private void ActiveOutline(bool _isActive)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xD026B4", Offset = "0xD026B4", VA = "0xD026B4", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class MoveWorkerOutWorkArea : NextStepCondition
	{
		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject Yumbo;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject Worker;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject yumboCamera;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject yumboController;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject humanPlayer;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image FadeImage;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject TalkButton;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject GoInYumboButton;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject choosePanel;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform humanPlayerTarget;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 WorkerTarget;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Camera mainCam;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WorkerController workerScript;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Excavator exScript;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isTalkWorkerGoOut;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool isGoInYumbo;

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xCFD7AC", Offset = "0xCFD7AC", VA = "0xCFD7AC")]
		public MoveWorkerOutWorkArea(GameObject _Yumbo, GameObject _yumboCamera, GameObject _yumboController, GameObject _humanPlayer, GameObject _Worker, GameObject _TalkButton, GameObject _GoInYumboButton, GameObject _choosePanel, Transform _humanPlayerTarget, Vector3 _WorkerTarget, Image _FadeImage)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xD026EC", Offset = "0xD026EC", VA = "0xD026EC", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xD02994", Offset = "0xD02994", VA = "0xD02994", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xD029FC", Offset = "0xD029FC", VA = "0xD029FC")]
		private bool IsTalkWorkerGoOut()
		{
			return default(bool);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xD02A58", Offset = "0xD02A58", VA = "0xD02A58")]
		private bool IsGoInYumbo()
		{
			return default(bool);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xD02AC8", Offset = "0xD02AC8", VA = "0xD02AC8")]
		private void TalkGoOutWorkArea()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xD02BF4", Offset = "0xD02BF4", VA = "0xD02BF4")]
		private void GoInYumbo()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xD028D4", Offset = "0xD028D4", VA = "0xD028D4")]
		private void ActiveOutline(bool _isActive)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xD02C88", Offset = "0xD02C88", VA = "0xD02C88", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
}
namespace NoVRSafetySim3
{
	[Token(Token = "0x2000360")]
	public class ControlHuman : NextStepCondition
	{
		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject yumboCamera;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject yumboController;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject humanPlayer;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject sandBag;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject shovel;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject solutionButton;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image FadeImage;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 sandBagDefaultPos;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion sandBagDefaultRot;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private cakeslice.Outline highlightScript;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Excavator exScript;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool IsShowingSolution;

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xCFCEEC", Offset = "0xCFCEEC", VA = "0xCFCEEC")]
		public ControlHuman(GameObject _yumbo, GameObject _yumboCamera, GameObject _yumboController, GameObject _humanPlayer, GameObject _shovel, GameObject _solutionButton, GameObject _sandBag, Vector3 _sandBagPos, Quaternion _sandBagRot, Image _fadeImage)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xD00BCC", Offset = "0xD00BCC", VA = "0xD00BCC", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xD00D20", Offset = "0xD00D20", VA = "0xD00D20", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xD00E34", Offset = "0xD00E34", VA = "0xD00E34", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class SideSlipYumbo : NextStepCondition
	{
		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject rope;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CheckColliderSandBag sandBagScript;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image FadeImage;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 defaultYumboPos;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion defaultYumboRot;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Excavator exScript;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator yumboAnim;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isComplete;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float localTime;

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xCFCEA0", Offset = "0xCFCEA0", VA = "0xCFCEA0")]
		public SideSlipYumbo(GameObject _yumbo, GameObject _rope, CheckColliderSandBag _sandBagScript, Image _FadeImage)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xD00E54", Offset = "0xD00E54", VA = "0xD00E54", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xD00F88", Offset = "0xD00F88", VA = "0xD00F88", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xD01128", Offset = "0xD01128", VA = "0xD01128", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
}
namespace SafetySim2
{
	[Token(Token = "0x2000362")]
	public class FadedOut : NextStepCondition
	{
		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image FadeImage;

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x95BF0C", Offset = "0x95BF0C", VA = "0x95BF0C")]
		public FadedOut(Image _fadeImage)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x95BF38", Offset = "0x95BF38", VA = "0x95BF38", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x95BF3C", Offset = "0x95BF3C", VA = "0x95BF3C", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x95BF4C", Offset = "0x95BF4C", VA = "0x95BF4C", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class GoOutYumbo : NextStepCondition
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject attachPoint;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Image FadeImage;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject GoOutYumboButton;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject choosePanel;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Excavator exScript;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isGoOutYumbo;

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x95BF50", Offset = "0x95BF50", VA = "0x95BF50")]
		public GoOutYumbo(GameObject _yumbo, GameObject _GoOutYumboButton, GameObject _choosePanel, Image _FadeImage, GameObject _attachPoint)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x95BFA4", Offset = "0x95BFA4", VA = "0x95BFA4", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x95C11C", Offset = "0x95C11C", VA = "0x95C11C", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x95C208", Offset = "0x95C208", VA = "0x95C208")]
		private void AgreeGoOutYumbo()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x95C214", Offset = "0x95C214", VA = "0x95C214", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class LookWorkerShowSolution : NextStepCondition
	{
		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject Yumbo;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject Worker;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject Rock;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject solutionButton;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Image FadeImage;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Excavator exScript;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator exAnim;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Animator workerAnim;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera mainCam;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 YumboDefaultPos;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 WorkerDefaultPos;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 RockDefaultPos;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool IsShowingSolution;

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x95C2B0", Offset = "0x95C2B0", VA = "0x95C2B0")]
		public LookWorkerShowSolution(GameObject _yumbo, Vector3 _yumboPos, GameObject _worker, Vector3 _workerPos, GameObject _rock, Vector3 _rockPos, GameObject _solutionButton, Image _fadeImage)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x95C360", Offset = "0x95C360", VA = "0x95C360", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x95C5F8", Offset = "0x95C5F8", VA = "0x95C5F8", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x95C538", Offset = "0x95C538", VA = "0x95C538")]
		private void ActiveOutline(bool _isActive)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x95C798", Offset = "0x95C798", VA = "0x95C798", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class MoveWorkerOutWorkArea : NextStepCondition
	{
		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject Yumbo;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject Worker;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject yumboCamera;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject yumboController;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject humanPlayer;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image FadeImage;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject TalkButton;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject GoInYumboButton;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject choosePanel;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform humanPlayerTarget;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 WorkerTarget;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Camera mainCam;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WorkerController workerScript;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Excavator exScript;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isTalkWorkerGoOut;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool isGoInYumbo;

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x8E2158", Offset = "0x8E2158", VA = "0x8E2158")]
		public MoveWorkerOutWorkArea(GameObject _Yumbo, GameObject _yumboCamera, GameObject _yumboController, GameObject _humanPlayer, GameObject _Worker, GameObject _TalkButton, GameObject _GoInYumboButton, GameObject _choosePanel, Transform _humanPlayerTarget, Vector3 _WorkerTarget, Image _FadeImage)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x8E21FC", Offset = "0x8E21FC", VA = "0x8E21FC", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x8E24A4", Offset = "0x8E24A4", VA = "0x8E24A4", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x8E250C", Offset = "0x8E250C", VA = "0x8E250C")]
		private bool IsTalkWorkerGoOut()
		{
			return default(bool);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x8E2568", Offset = "0x8E2568", VA = "0x8E2568")]
		private bool IsGoInYumbo()
		{
			return default(bool);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x8E25D8", Offset = "0x8E25D8", VA = "0x8E25D8")]
		private void TalkGoOutWorkArea()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x8E2704", Offset = "0x8E2704", VA = "0x8E2704")]
		private void GoInYumbo()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x8E23E4", Offset = "0x8E23E4", VA = "0x8E23E4")]
		private void ActiveOutline(bool _isActive)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x8E2798", Offset = "0x8E2798", VA = "0x8E2798", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class NoVRMovecolliderWorker : NextStepCondition
	{
		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject shovel;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject worker;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject rock;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject rope;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject attachPoint;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WorkerController workerScript;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WorkerCollider workerColliderScript;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator yumboAnim;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float bigArmYumboTime;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float checkRotateTime;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Image FadeImage;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Excavator exScript;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float localTime;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float timeToMove;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool isComplete;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool wasColliderShovel;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool wasMoveToTarget;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		private bool isCalculateTimeMove;

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x8E296C", Offset = "0x8E296C", VA = "0x8E296C")]
		public NoVRMovecolliderWorker(GameObject _yumbo, GameObject _shovel, GameObject _worker, GameObject _rock, GameObject _rope, Image _FadeImage, GameObject _attachPoint)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x8E29D4", Offset = "0x8E29D4", VA = "0x8E29D4", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x8E2BEC", Offset = "0x8E2BEC", VA = "0x8E2BEC", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x8E2EF8", Offset = "0x8E2EF8", VA = "0x8E2EF8")]
		private void CalculateMoveWorker()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x8E2D08", Offset = "0x8E2D08", VA = "0x8E2D08")]
		private void ConstraintBigArmYumbo()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x8E2DD4", Offset = "0x8E2DD4", VA = "0x8E2DD4")]
		private void WorkerFall()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x8E30C0", Offset = "0x8E30C0", VA = "0x8E30C0", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x8E304C", Offset = "0x8E304C", VA = "0x8E304C")]
		private bool IsShovelShortHeight()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000367")]
	public class MoveColliderWorker : NextStepCondition
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject shovel;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject arrow;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject worker;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject rock;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject rope;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject attachPoint;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WorkerController workerScript;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 startArrowLocalPos;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WorkerCollider workerColliderScript;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator yumboAnim;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float bigArmYumboTime;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float checkRotateTime;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Excavator exScript;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float localTime;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float timeToMove;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isComplete;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool wasColliderShovel;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool wasMoveToTarget;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		private bool isCalculateTimeMove;

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x95C7D0", Offset = "0x95C7D0", VA = "0x95C7D0")]
		public MoveColliderWorker(GameObject _yumbo, GameObject _shovel, GameObject _arrow, GameObject _worker, GameObject _rock, GameObject _rope, GameObject _attachPoint)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x95C838", Offset = "0x95C838", VA = "0x95C838", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x95CA74", Offset = "0x95CA74", VA = "0x95CA74", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x95D128", Offset = "0x95D128", VA = "0x95D128")]
		private void CalculateMoveWorker()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x95CF38", Offset = "0x95CF38", VA = "0x95CF38")]
		private void ConstraintBigArmYumbo()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x95D004", Offset = "0x95D004", VA = "0x95D004")]
		private void WorkerFall()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x95D2F0", Offset = "0x95D2F0", VA = "0x95D2F0", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x95D27C", Offset = "0x95D27C", VA = "0x95D27C")]
		private bool IsShovelShortHeight()
		{
			return default(bool);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x95CB88", Offset = "0x95CB88", VA = "0x95CB88")]
		private void LookAtGoalPoint()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class MoveRockIntoPlaneTruck : NextStepCondition
	{
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject rock;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject rope;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject shovel;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject attachPoint;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RockControl rockScript;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject worker;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform workerTarget;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WorkerController workerScript;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rockRigid;

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x8E1E1C", Offset = "0x8E1E1C", VA = "0x8E1E1C")]
		public MoveRockIntoPlaneTruck(GameObject _rock, GameObject _rope, GameObject _worker, Transform _workerTarget, GameObject _shovel, GameObject _attachPoint)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x8E1E7C", Offset = "0x8E1E7C", VA = "0x8E1E7C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x8E2008", Offset = "0x8E2008", VA = "0x8E2008", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x8E2088", Offset = "0x8E2088", VA = "0x8E2088", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class PickRockUp : NextStepCondition
	{
		[Token(Token = "0x400169D")]
		private const float MIN_DISTANCE_ARROW_ROCK = 1.5f;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject rope;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject arrow;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject rock;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject worker;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject checkCollArea;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject attachPoint;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform rockTarget;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CheckCollisionShovel collScript;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WorkerController workerScript;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Excavator exScript;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool wasPickUp;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool wasWork;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 startArrowLocalPos;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x8E31E8", Offset = "0x8E31E8", VA = "0x8E31E8")]
		public PickRockUp(GameObject _yumbo, GameObject _rope, GameObject _arrow, GameObject _rock, GameObject _worker, GameObject _checkCollArea, GameObject _attachPoint)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x8E3250", Offset = "0x8E3250", VA = "0x8E3250", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x8E355C", Offset = "0x8E355C", VA = "0x8E355C", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x8E3A30", Offset = "0x8E3A30", VA = "0x8E3A30", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x8E3680", Offset = "0x8E3680", VA = "0x8E3680")]
		private void LookAtGoalPoint()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x8E3484", Offset = "0x8E3484", VA = "0x8E3484")]
		private Transform GetRockTarget()
		{
			return null;
		}
	}
}
namespace NoVRSafetySim1
{
	[Token(Token = "0x200036A")]
	public class ControlHuman : NextStepCondition
	{
		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumboCamera;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject yumboController;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject humanPlayer;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image FadeImage;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject solutionButton;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject Wire;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject WireView;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform humanPlayerTarget;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera cam;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private cakeslice.Outline highlightScript;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool IsShowingSolution;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xCFC004", Offset = "0xCFC004", VA = "0xCFC004")]
		public ControlHuman(GameObject _humanPlayer, Transform _humanPlayerTarget, GameObject _yumboCamera, GameObject _yumboController, Image _FadeImage, GameObject _solutionButton, GameObject _Wire, GameObject _WireView)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xCFFF8C", Offset = "0xCFFF8C", VA = "0xCFFF8C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xD000E0", Offset = "0xD000E0", VA = "0xD000E0", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xD00220", Offset = "0xD00220", VA = "0xD00220", Slot = "6")]
		public override void OnComplete()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class CutOffWire : NextStepCondition
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Excavator exScript;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject Arrow;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject GoalPoint;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ElectricalWireCollision wireScript;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Image FadeImage;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isComplete;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float localTime;

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xCFBFB0", Offset = "0xCFBFB0", VA = "0xCFBFB0")]
		public CutOffWire(Excavator _exScript, GameObject _arrow, GameObject _goalpoint, ElectricalWireCollision _wireScript, Image _fadedImage)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xD00264", Offset = "0xD00264", VA = "0xD00264", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xD00304", Offset = "0xD00304", VA = "0xD00304", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD005F8", Offset = "0xD005F8", VA = "0xD005F8", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xD00344", Offset = "0xD00344", VA = "0xD00344")]
		private void LookAtGoalPoint()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xD004FC", Offset = "0xD004FC", VA = "0xD004FC")]
		private void SuccessActivity()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class PlayAgainAccident : NextStepCondition
	{
		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject yumboCamera;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject yumboController;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject humanPlayer;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject wire;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ElectricalWireCollision wireScript;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject GoalPoint;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 defaultYumboPos;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Image FadeImage;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Excavator exScript;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private YumboColliderScript exPhysicScript;

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xCFC0CC", Offset = "0xCFC0CC", VA = "0xCFC0CC")]
		public PlayAgainAccident(GameObject _yumbo, Vector3 _defaultYumboPos, GameObject _yumboCamera, GameObject _yumboController, GameObject _humanPlayer, GameObject _wire, ElectricalWireCollision _wireScript, GameObject _GoalPoint, Image _FadeImage)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xD00618", Offset = "0xD00618", VA = "0xD00618", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xD007BC", Offset = "0xD007BC", VA = "0xD007BC", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xD00968", Offset = "0xD00968", VA = "0xD00968", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xD00840", Offset = "0xD00840", VA = "0xD00840")]
		private void SuccessActivity(bool isSuccess)
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class SitInYumbo : NextStepCondition
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject yumbo;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject goinYumboButton;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject chooosePanel;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Image FadeImage;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ElectricalWireCollision wireScript;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isGoInYumbo;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool isComplete;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ChoosePanelSetting chooseGUIScript;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xCFC078", Offset = "0xCFC078", VA = "0xCFC078")]
		public SitInYumbo(GameObject _yumbo, GameObject _button, GameObject _chooosePanel, ElectricalWireCollision _wireScript, Image _fadedImage)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xD0096C", Offset = "0xD0096C", VA = "0xD0096C", Slot = "4")]
		public override void OnStart()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xD00A8C", Offset = "0xD00A8C", VA = "0xD00A8C", Slot = "5")]
		public override bool CheckSuccess()
		{
			return default(bool);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xD00B24", Offset = "0xD00B24", VA = "0xD00B24", Slot = "6")]
		public override void OnComplete()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xD00BC0", Offset = "0xD00BC0", VA = "0xD00BC0")]
		private void AgreeGoInYumbo()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200036E")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000193")]
		public bool Highlight
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xC7DBE0", Offset = "0xC7DBE0", VA = "0xC7DBE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xC7DBE8", Offset = "0xC7DBE8", VA = "0xC7DBE8")]
			set
			{
			}
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xC7DBF4", Offset = "0xC7DBF4", VA = "0xC7DBF4")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xC7DDC0", Offset = "0xC7DDC0", VA = "0xC7DDC0", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xC7DDE8", Offset = "0xC7DDE8", VA = "0xC7DDE8", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xC7DE10", Offset = "0xC7DE10", VA = "0xC7DE10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC7DCC0", Offset = "0xC7DCC0", VA = "0xC7DCC0")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xC7E064", Offset = "0xC7E064", VA = "0xC7E064")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000194")]
		public bool InRange
		{
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0xC7E3E0", Offset = "0xC7E3E0", VA = "0xC7E3E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xC7E3E8", Offset = "0xC7E3E8", VA = "0xC7E3E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public bool Targeted
		{
			[Token(Token = "0x60014BC")]
			[Address(RVA = "0xC7E574", Offset = "0xC7E574", VA = "0xC7E574")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0xC7E57C", Offset = "0xC7E57C", VA = "0xC7E57C")]
			set
			{
			}
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC7E588", Offset = "0xC7E588", VA = "0xC7E588", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC7E3F4", Offset = "0xC7E3F4", VA = "0xC7E3F4")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC7E6B8", Offset = "0xC7E6B8", VA = "0xC7E6B8")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC7E6FC", Offset = "0xC7E6FC", VA = "0xC7E6FC")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC7E758", Offset = "0xC7E758", VA = "0xC7E758")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714A38", Offset = "0x714A38")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000196")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xC7E760", Offset = "0xC7E760", VA = "0xC7E760")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xC7E768", Offset = "0xC7E768", VA = "0xC7E768")]
			set
			{
			}
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xC7E784", Offset = "0xC7E784", VA = "0xC7E784", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xC7E910", Offset = "0xC7E910", VA = "0xC7E910", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xC7F2A4", Offset = "0xC7F2A4", VA = "0xC7F2A4", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xC7F860", Offset = "0xC7F860", VA = "0xC7F860", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xC7FC40", Offset = "0xC7FC40", VA = "0xC7FC40")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xC7EBD8", Offset = "0xC7EBD8", VA = "0xC7EBD8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xC7FD1C", Offset = "0xC7FD1C", VA = "0xC7FD1C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xC80154", Offset = "0xC80154", VA = "0xC80154", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xC8016C", Offset = "0xC8016C", VA = "0xC8016C", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xC80174", Offset = "0xC80174", VA = "0xC80174")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x9C384C", Offset = "0x9C384C", VA = "0x9C384C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x9C38FC", Offset = "0x9C38FC", VA = "0x9C38FC")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x9C39AC", Offset = "0x9C39AC", VA = "0x9C39AC")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000546")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001F1F")]
			Disabled,
			[Token(Token = "0x4001F20")]
			Enabled,
			[Token(Token = "0x4001F21")]
			Targeted
		}

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x9C39B4", Offset = "0x9C39B4", VA = "0x9C39B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x9C3A1C", Offset = "0x9C3A1C", VA = "0x9C3A1C")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x9C3AB8", Offset = "0x9C3AB8", VA = "0x9C3AB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x9C3B00", Offset = "0x9C3B00", VA = "0x9C3B00")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x9C8B84", Offset = "0x9C8B84", VA = "0x9C8B84")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x9C8C50", Offset = "0x9C8C50", VA = "0x9C8C50")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x9C8C5C", Offset = "0x9C8C5C", VA = "0x9C8C5C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x9C8C68", Offset = "0x9C8C68", VA = "0x9C8C68")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xC7C704", Offset = "0xC7C704", VA = "0xC7C704")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xC7C75C", Offset = "0xC7C75C", VA = "0xC7C75C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xC7CA00", Offset = "0xC7CA00", VA = "0xC7CA00")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xC7CAF0", Offset = "0xC7CAF0", VA = "0xC7CAF0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xC7C760", Offset = "0xC7C760", VA = "0xC7C760")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xC7CBE0", Offset = "0xC7CBE0", VA = "0xC7CBE0")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000547")]
		public enum ContactTest
		{
			[Token(Token = "0x4001F23")]
			PerpenTest,
			[Token(Token = "0x4001F24")]
			BackwardsPress
		}

		[Token(Token = "0x40016F6")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40016F7")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000197")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xC7CC78", Offset = "0xC7CC78", VA = "0xC7CC78", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000198")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xC7CC80", Offset = "0xC7CC80", VA = "0xC7CC80")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xC7CC8C", Offset = "0xC7CC8C", VA = "0xC7CC8C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xC7CD7C", Offset = "0xC7CD7C", VA = "0xC7CD7C")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xC7CF80", Offset = "0xC7CF80", VA = "0xC7CF80")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xC7D0E0", Offset = "0xC7D0E0", VA = "0xC7D0E0")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xC7D240", Offset = "0xC7D240", VA = "0xC7D240", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xC7D708", Offset = "0xC7D708", VA = "0xC7D708")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xC7D7F0", Offset = "0xC7D7F0", VA = "0xC7D7F0")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xC7D8E4", Offset = "0xC7D8E4", VA = "0xC7D8E4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xC7DA08", Offset = "0xC7DA08", VA = "0xC7DA08")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B5C4", Offset = "0x71B5C4")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B5D4", Offset = "0x71B5D4")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000199")]
		public Collider Collider
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0xC7DAEC", Offset = "0xC7DAEC", VA = "0xC7DAEC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720CDC", Offset = "0x720CDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0xC7DAF4", Offset = "0xC7DAF4", VA = "0xC7DAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720CEC", Offset = "0x720CEC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0xC7DAFC", Offset = "0xC7DAFC", VA = "0xC7DAFC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720CFC", Offset = "0x720CFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0xC7DB04", Offset = "0xC7DB04", VA = "0xC7DB04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720D0C", Offset = "0x720D0C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0xC7DB0C", Offset = "0xC7DB0C", VA = "0xC7DB0C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xC7DB5C", Offset = "0xC7DB5C", VA = "0xC7DB5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xC7DBD8", Offset = "0xC7DBD8", VA = "0xC7DBD8")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700019C")]
		Collider Collider
		{
			[Token(Token = "0x60014F2")]
			get;
		}

		[Token(Token = "0x1700019D")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60014F3")]
			get;
		}

		[Token(Token = "0x1700019E")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60014F4")]
			get;
		}
	}
	[Token(Token = "0x2000378")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xC7CEDC", Offset = "0xC7CEDC", VA = "0xC7CEDC")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000379")]
	public enum InteractionType
	{
		[Token(Token = "0x400170B")]
		Enter,
		[Token(Token = "0x400170C")]
		Stay,
		[Token(Token = "0x400170D")]
		Exit
	}
	[Token(Token = "0x200037A")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000548")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001F26")]
			Mesh,
			[Token(Token = "0x4001F27")]
			Skeleton,
			[Token(Token = "0x4001F28")]
			Both
		}

		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715544", Offset = "0x715544")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000320")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EAF")]
				[Address(RVA = "0x9C4ADC", Offset = "0x9C4ADC", VA = "0x9C4ADC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000321")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB1")]
				[Address(RVA = "0x9C4B44", Offset = "0x9C4B44", VA = "0x9C4B44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x9C44E8", Offset = "0x9C44E8", VA = "0x9C44E8")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x9C48BC", Offset = "0x9C48BC", VA = "0x9C48BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0x9C48C0", Offset = "0x9C48C0", VA = "0x9C48C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x9C4AE4", Offset = "0x9C4AE4", VA = "0x9C4AE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400170E")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B604", Offset = "0x71B604")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700019F")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0x9C2948", Offset = "0x9C2948", VA = "0x9C2948")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x9C3B08", Offset = "0x9C3B08", VA = "0x9C3B08")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x9C34D0", Offset = "0x9C34D0", VA = "0x9C34D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x9C3B70", Offset = "0x9C3B70", VA = "0x9C3B70")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x9C3BD8", Offset = "0x9C3BD8", VA = "0x9C3BD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x9C3C10", Offset = "0x9C3C10", VA = "0x9C3C10")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x9C3C78", Offset = "0x9C3C78", VA = "0x9C3C78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x9C3CB0", Offset = "0x9C3CB0", VA = "0x9C3CB0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x9C3D18", Offset = "0x9C3D18", VA = "0x9C3D18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x9C3D50", Offset = "0x9C3D50", VA = "0x9C3D50")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x9C2914", Offset = "0x9C2914", VA = "0x9C2914")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001501")]
			[Address(RVA = "0x9C3DB8", Offset = "0x9C3DB8", VA = "0x9C3DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x9C349C", Offset = "0x9C349C", VA = "0x9C349C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x9C3E1C", Offset = "0x9C3E1C", VA = "0x9C3E1C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x9C3E80", Offset = "0x9C3E80", VA = "0x9C3E80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x9C3EB4", Offset = "0x9C3EB4", VA = "0x9C3EB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x9C3F18", Offset = "0x9C3F18", VA = "0x9C3F18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x9C3F4C", Offset = "0x9C3F4C", VA = "0x9C3F4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0x9C3FB0", Offset = "0x9C3FB0", VA = "0x9C3FB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x9C3FE4", Offset = "0x9C3FE4", VA = "0x9C3FE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x9C4048", Offset = "0x9C4048", VA = "0x9C4048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720D1C", Offset = "0x720D1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x9C4098", Offset = "0x9C4098", VA = "0x9C4098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720D2C", Offset = "0x720D2C")]
			private set
			{
			}
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x9C40EC", Offset = "0x9C40EC", VA = "0x9C40EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x9C4460", Offset = "0x9C4460", VA = "0x9C4460")]
		private void Update()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x9C43F0", Offset = "0x9C43F0", VA = "0x9C43F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720D3C", Offset = "0x720D3C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x9C4514", Offset = "0x9C4514", VA = "0x9C4514")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x9C45FC", Offset = "0x9C45FC", VA = "0x9C45FC")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x9C3508", Offset = "0x9C3508", VA = "0x9C3508")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x9C2784", Offset = "0x9C2784", VA = "0x9C2784")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x9C47DC", Offset = "0x9C47DC", VA = "0x9C47DC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200054A")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x9C5300", Offset = "0x9C5300", VA = "0x9C5300")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170001AA")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0x9C4B4C", Offset = "0x9C4B4C", VA = "0x9C4B4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0x9C4B54", Offset = "0x9C4B54", VA = "0x9C4B54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0x9C4B5C", Offset = "0x9C4B5C", VA = "0x9C4B5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x9C4B64", Offset = "0x9C4B64", VA = "0x9C4B64", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000040")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x9C4B6C", Offset = "0x9C4B6C", VA = "0x9C4B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720DA0", Offset = "0x720DA0")]
			add
			{
			}
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x9C4C10", Offset = "0x9C4C10", VA = "0x9C4C10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720DB0", Offset = "0x720DB0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x9C4D28", Offset = "0x9C4D28", VA = "0x9C4D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720DC0", Offset = "0x720DC0")]
			add
			{
			}
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x9C4DCC", Offset = "0x9C4DCC", VA = "0x9C4DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720DD0", Offset = "0x720DD0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0x9C4EE4", Offset = "0x9C4EE4", VA = "0x9C4EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720DE0", Offset = "0x720DE0")]
			add
			{
			}
			[Token(Token = "0x600151F")]
			[Address(RVA = "0x9C4F88", Offset = "0x9C4F88", VA = "0x9C4F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720DF0", Offset = "0x720DF0")]
			remove
			{
			}
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x9C4CB4", Offset = "0x9C4CB4", VA = "0x9C4CB4", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x9C4E70", Offset = "0x9C4E70", VA = "0x9C4E70", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x9C502C", Offset = "0x9C502C", VA = "0x9C502C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001521")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x9C50A0", Offset = "0x9C50A0", VA = "0x9C50A0", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x9C51CC", Offset = "0x9C51CC", VA = "0x9C51CC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x9C52F8", Offset = "0x9C52F8", VA = "0x9C52F8")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001726")]
		None,
		[Token(Token = "0x4001727")]
		Proximity,
		[Token(Token = "0x4001728")]
		Contact,
		[Token(Token = "0x4001729")]
		Action
	}
	[Token(Token = "0x200037D")]
	public enum InteractableState
	{
		[Token(Token = "0x400172B")]
		Default,
		[Token(Token = "0x400172C")]
		ProximityState,
		[Token(Token = "0x400172D")]
		ContactState,
		[Token(Token = "0x400172E")]
		ActionState
	}
	[Token(Token = "0x200037E")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x9C5434", Offset = "0x9C5434", VA = "0x9C5434")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170001AE")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x9C5350", Offset = "0x9C5350", VA = "0x9C5350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x9C5104", Offset = "0x9C5104", VA = "0x9C5104")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x9C5230", Offset = "0x9C5230", VA = "0x9C5230")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x9C53B8", Offset = "0x9C53B8", VA = "0x9C53B8")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715554", Offset = "0x715554")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000322")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0x9C654C", Offset = "0x9C654C", VA = "0x9C654C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000323")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB9")]
				[Address(RVA = "0x9C65B4", Offset = "0x9C65B4", VA = "0x9C65B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x9C6010", Offset = "0x9C6010", VA = "0x9C6010")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x9C613C", Offset = "0x9C613C", VA = "0x9C613C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x9C61B0", Offset = "0x9C61B0", VA = "0x9C61B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x9C6158", Offset = "0x9C6158", VA = "0x9C6158")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x9C6554", Offset = "0x9C6554", VA = "0x9C6554", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x9C5F08", Offset = "0x9C5F08", VA = "0x9C5F08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x9C5F84", Offset = "0x9C5F84", VA = "0x9C5F84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720E00", Offset = "0x720E00")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x9C603C", Offset = "0x9C603C", VA = "0x9C603C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x9C6134", Offset = "0x9C6134", VA = "0x9C6134")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170001AF")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x9C21C0", Offset = "0x9C21C0", VA = "0x9C21C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x9C2328", Offset = "0x9C2328", VA = "0x9C2328")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x9C65BC", Offset = "0x9C65BC", VA = "0x9C65BC")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x9C6668", Offset = "0x9C6668", VA = "0x9C6668")]
		private void Update()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x9C6930", Offset = "0x9C6930", VA = "0x9C6930")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x9C6978", Offset = "0x9C6978", VA = "0x9C6978")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x9C6BC8", Offset = "0x9C6BC8", VA = "0x9C6BC8")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x9C6CF4", Offset = "0x9C6CF4", VA = "0x9C6CF4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715564", Offset = "0x715564")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000324")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EBD")]
				[Address(RVA = "0x9C3718", Offset = "0x9C3718", VA = "0x9C3718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000325")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBF")]
				[Address(RVA = "0x9C3780", Offset = "0x9C3780", VA = "0x9C3780", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x9C2444", Offset = "0x9C2444", VA = "0x9C2444")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x9C312C", Offset = "0x9C312C", VA = "0x9C312C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x9C3130", Offset = "0x9C3130", VA = "0x9C3130", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0x9C3720", Offset = "0x9C3720", VA = "0x9C3720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400173E")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170001B0")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x9C20A4", Offset = "0x9C20A4", VA = "0x9C20A4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001B1")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001538")]
			[Address(RVA = "0x9C20AC", Offset = "0x9C20AC", VA = "0x9C20AC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001B2")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0x9C20B4", Offset = "0x9C20B4", VA = "0x9C20B4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B3")]
		public override bool EnableState
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0x9C20BC", Offset = "0x9C20BC", VA = "0x9C20BC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600153B")]
			[Address(RVA = "0x9C20E8", Offset = "0x9C20E8", VA = "0x9C20E8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x9C2124", Offset = "0x9C2124", VA = "0x9C2124", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x9C23D4", Offset = "0x9C23D4", VA = "0x9C23D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720E64", Offset = "0x720E64")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x9C2470", Offset = "0x9C2470", VA = "0x9C2470")]
		private void Update()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x9C2980", Offset = "0x9C2980", VA = "0x9C2980")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x9C2BF8", Offset = "0x9C2BF8", VA = "0x9C2BF8")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x9C2D38", Offset = "0x9C2D38", VA = "0x9C2D38", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x9C3000", Offset = "0x9C3000", VA = "0x9C3000", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x9C3004", Offset = "0x9C3004", VA = "0x9C3004", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x9C3008", Offset = "0x9C3008", VA = "0x9C3008")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B694", Offset = "0x71B694")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B6A4", Offset = "0x71B6A4")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B6B4", Offset = "0x71B6B4")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170001B4")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0x9C3788", Offset = "0x9C3788", VA = "0x9C3788", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720EC8", Offset = "0x720EC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x9C3790", Offset = "0x9C3790", VA = "0x9C3790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720ED8", Offset = "0x720ED8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public bool EnableState
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0x9C3798", Offset = "0x9C3798", VA = "0x9C3798", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x9C37B4", Offset = "0x9C37B4", VA = "0x9C37B4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0x9C37D4", Offset = "0x9C37D4", VA = "0x9C37D4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720EE8", Offset = "0x720EE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x9C37DC", Offset = "0x9C37DC", VA = "0x9C37DC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720EF8", Offset = "0x720EF8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public float SphereRadius
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x9C37E8", Offset = "0x9C37E8", VA = "0x9C37E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F08", Offset = "0x720F08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x9C37F0", Offset = "0x9C37F0", VA = "0x9C37F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F18", Offset = "0x720F18")]
			private set
			{
			}
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x9C37F8", Offset = "0x9C37F8", VA = "0x9C37F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x9C3840", Offset = "0x9C3840", VA = "0x9C3840", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x9C3844", Offset = "0x9C3844", VA = "0x9C3844")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000384")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400174E")]
		None = 0,
		[Token(Token = "0x400174F")]
		Ray = 1,
		[Token(Token = "0x4001750")]
		Poke = 4,
		[Token(Token = "0x4001751")]
		All = -1
	}
	[Token(Token = "0x2000385")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001753")]
		Inactive,
		[Token(Token = "0x4001754")]
		PrimaryInputDown,
		[Token(Token = "0x4001755")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001756")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000386")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x9C2FBC", Offset = "0x9C2FBC", VA = "0x9C2FBC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000387")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B6C4", Offset = "0x71B6C4")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B6D4", Offset = "0x71B6D4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B6E4", Offset = "0x71B6E4")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170001B8")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x9C54D8", Offset = "0x9C54D8", VA = "0x9C54D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x9C54E0", Offset = "0x9C54E0", VA = "0x9C54E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F28", Offset = "0x720F28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x9C54E8", Offset = "0x9C54E8", VA = "0x9C54E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F38", Offset = "0x720F38")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001554")]
			get;
		}

		[Token(Token = "0x170001BB")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001555")]
			get;
		}

		[Token(Token = "0x170001BC")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001556")]
			get;
		}

		[Token(Token = "0x170001BD")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x9C54F4", Offset = "0x9C54F4", VA = "0x9C54F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F48", Offset = "0x720F48")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x9C5500", Offset = "0x9C5500", VA = "0x9C5500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F58", Offset = "0x720F58")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x9C550C", Offset = "0x9C550C", VA = "0x9C550C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F68", Offset = "0x720F68")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x9C5518", Offset = "0x9C5518", VA = "0x9C5518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F78", Offset = "0x720F78")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600155F")]
			get;
			[Token(Token = "0x6001560")]
			set;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x9C5524", Offset = "0x9C5524", VA = "0x9C5524")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600155C")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600155D")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600155E")]
		public abstract void DeFocus();

		[Token(Token = "0x6001561")]
		public abstract void Initialize();

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x9C552C", Offset = "0x9C552C", VA = "0x9C552C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x9C557C", Offset = "0x9C557C", VA = "0x9C557C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x9C55D4", Offset = "0x9C55D4", VA = "0x9C55D4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x9C5818", Offset = "0x9C5818", VA = "0x9C5818", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x9C301C", Offset = "0x9C301C", VA = "0x9C301C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170001C0")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001567")]
			get;
		}

		[Token(Token = "0x170001C1")]
		bool EnableState
		{
			[Token(Token = "0x6001569")]
			get;
			[Token(Token = "0x600156A")]
			set;
		}

		[Token(Token = "0x170001C2")]
		bool ToolActivateState
		{
			[Token(Token = "0x600156B")]
			get;
			[Token(Token = "0x600156C")]
			set;
		}

		[Token(Token = "0x6001568")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000389")]
	public class PinchStateModule
	{
		[Token(Token = "0x200054D")]
		private enum PinchState
		{
			[Token(Token = "0x4001F39")]
			None,
			[Token(Token = "0x4001F3A")]
			PinchDown,
			[Token(Token = "0x4001F3B")]
			PinchStay,
			[Token(Token = "0x4001F3C")]
			PinchUp
		}

		[Token(Token = "0x4001763")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170001C3")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0x9C8C70", Offset = "0x9C8C70", VA = "0x9C8C70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C4")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0x9C8CFC", Offset = "0x9C8CFC", VA = "0x9C8CFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C5")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600156F")]
			[Address(RVA = "0x9C8D88", Offset = "0x9C8D88", VA = "0x9C8D88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x9C8E14", Offset = "0x9C8E14", VA = "0x9C8E14")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x9C8E40", Offset = "0x9C8E40", VA = "0x9C8E40")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001766")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001767")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001768")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001769")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400176A")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71B704", Offset = "0x71B704")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170001C6")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x9C90E0", Offset = "0x9C90E0", VA = "0x9C90E0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001C7")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x9C90E8", Offset = "0x9C90E8", VA = "0x9C90E8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001C8")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x9C9150", Offset = "0x9C9150", VA = "0x9C9150", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C9")]
		public override bool EnableState
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x9C9158", Offset = "0x9C9158", VA = "0x9C9158", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x9C919C", Offset = "0x9C919C", VA = "0x9C919C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x9C9210", Offset = "0x9C9210", VA = "0x9C9210", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x9C9268", Offset = "0x9C9268", VA = "0x9C9268")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x9C9304", Offset = "0x9C9304", VA = "0x9C9304")]
		private void Update()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x9C9604", Offset = "0x9C9604", VA = "0x9C9604")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x9C9700", Offset = "0x9C9700", VA = "0x9C9700", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x9C9A64", Offset = "0x9C9A64", VA = "0x9C9A64")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x9C9C08", Offset = "0x9C9C08", VA = "0x9C9C08")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x9C9D30", Offset = "0x9C9D30", VA = "0x9C9D30")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x9CA068", Offset = "0x9CA068", VA = "0x9CA068")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x9CA478", Offset = "0x9CA478", VA = "0x9CA478", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x9CA54C", Offset = "0x9CA54C", VA = "0x9CA54C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x9CA580", Offset = "0x9CA580", VA = "0x9CA580")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001776")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001777")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B778", Offset = "0x71B778")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170001CA")]
		public bool EnableState
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x9C9180", Offset = "0x9C9180", VA = "0x9C9180", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x9C91B8", Offset = "0x9C91B8", VA = "0x9C91B8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x9CA638", Offset = "0x9CA638", VA = "0x9CA638", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x9C95C8", Offset = "0x9C95C8", VA = "0x9C95C8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x9CA868", Offset = "0x9CA868", VA = "0x9CA868", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F88", Offset = "0x720F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x9CA870", Offset = "0x9CA870", VA = "0x9CA870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x720F98", Offset = "0x720F98")]
			set
			{
			}
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x9CA640", Offset = "0x9CA640", VA = "0x9CA640")]
		private void Awake()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x9CA4AC", Offset = "0x9CA4AC", VA = "0x9CA4AC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x9CA878", Offset = "0x9CA878", VA = "0x9CA878")]
		private void Update()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x9CABA4", Offset = "0x9CABA4", VA = "0x9CABA4")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x9CAD94", Offset = "0x9CAD94", VA = "0x9CAD94")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170001CD")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0x9C1E38", Offset = "0x9C1E38", VA = "0x9C1E38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x9C1E40", Offset = "0x9C1E40", VA = "0x9C1E40")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x9C1EB8", Offset = "0x9C1EB8", VA = "0x9C1EB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x9C1EC0", Offset = "0x9C1EC0", VA = "0x9C1EC0")]
			set
			{
			}
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x9C1F2C", Offset = "0x9C1F2C", VA = "0x9C1F2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x9C207C", Offset = "0x9C207C", VA = "0x9C207C")]
		public void ToggleSphereCasting(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x9C208C", Offset = "0x9C208C", VA = "0x9C208C")]
		public void ToggleGrabThroughWalls(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x9C209C", Offset = "0x9C209C", VA = "0x9C209C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xC7E150", Offset = "0xC7E150", VA = "0xC7E150")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xC7E154", Offset = "0xC7E154", VA = "0xC7E154")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xC7E18C", Offset = "0xC7E18C", VA = "0xC7E18C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xC7E1C4", Offset = "0xC7E1C4", VA = "0xC7E1C4")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xC7E1FC", Offset = "0xC7E1FC", VA = "0xC7E1FC")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xC7E234", Offset = "0xC7E234", VA = "0xC7E234")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xC7E26C", Offset = "0xC7E26C", VA = "0xC7E26C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xC7E2A4", Offset = "0xC7E2A4", VA = "0xC7E2A4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xC7E31C", Offset = "0xC7E31C", VA = "0xC7E31C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xC7E38C", Offset = "0xC7E38C", VA = "0xC7E38C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xC7E394", Offset = "0xC7E394", VA = "0xC7E394")]
		private void Start()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xC7E398", Offset = "0xC7E398", VA = "0xC7E398")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xC7E350", Offset = "0xC7E350", VA = "0xC7E350")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xC7E3D8", Offset = "0xC7E3D8", VA = "0xC7E3D8")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715574", Offset = "0x715574")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000326")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC3")]
				[Address(RVA = "0x9C8B14", Offset = "0x9C8B14", VA = "0x9C8B14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000327")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC5")]
				[Address(RVA = "0x9C8B7C", Offset = "0x9C8B7C", VA = "0x9C8B7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x9C8848", Offset = "0x9C8848", VA = "0x9C8848")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x9C8924", Offset = "0x9C8924", VA = "0x9C8924", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x9C8928", Offset = "0x9C8928", VA = "0x9C8928", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x9C8B1C", Offset = "0x9C8B1C", VA = "0x9C8B1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001787")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001788")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x9C8460", Offset = "0x9C8460", VA = "0x9C8460")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x9C84F8", Offset = "0x9C84F8", VA = "0x9C84F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x9C8784", Offset = "0x9C8784", VA = "0x9C8784")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x9C8714", Offset = "0x9C8714", VA = "0x9C8714")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x720FA8", Offset = "0x720FA8")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x9C8874", Offset = "0x9C8874", VA = "0x9C8874")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200054F")]
		public enum SelectionState
		{
			[Token(Token = "0x4001F44")]
			Off,
			[Token(Token = "0x4001F45")]
			Selected,
			[Token(Token = "0x4001F46")]
			Highlighted
		}

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170001CF")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x9CADF4", Offset = "0x9CADF4", VA = "0x9CADF4")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x9CADFC", Offset = "0x9CADFC", VA = "0x9CADFC")]
			set
			{
			}
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x9CAF84", Offset = "0x9CAF84", VA = "0x9CAF84")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x9CB144", Offset = "0x9CB144", VA = "0x9CB144")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x9CAE84", Offset = "0x9CAE84", VA = "0x9CAE84")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x9CB234", Offset = "0x9CB234", VA = "0x9CB234")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000550")]
		public enum SegmentType
		{
			[Token(Token = "0x4001F48")]
			Straight,
			[Token(Token = "0x4001F49")]
			LeftTurn,
			[Token(Token = "0x4001F4A")]
			RightTurn,
			[Token(Token = "0x4001F4B")]
			Switch
		}

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x400179D")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400179E")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B858", Offset = "0x71B858")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170001D0")]
		public float StartDistance
		{
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x9CB2A0", Offset = "0x9CB2A0", VA = "0x9CB2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72100C", Offset = "0x72100C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x9CB2A8", Offset = "0x9CB2A8", VA = "0x9CB2A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x72101C", Offset = "0x72101C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public float GridSize
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x9CB2B0", Offset = "0x9CB2B0", VA = "0x9CB2B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x9CB2B8", Offset = "0x9CB2B8", VA = "0x9CB2B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public int SubDivCount
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x9CB2C0", Offset = "0x9CB2C0", VA = "0x9CB2C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x9CB2C8", Offset = "0x9CB2C8", VA = "0x9CB2C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public SegmentType Type
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x9CB2D0", Offset = "0x9CB2D0", VA = "0x9CB2D0")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170001D4")]
		public Pose EndPose
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x9CB2D8", Offset = "0x9CB2D8", VA = "0x9CB2D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public float Radius
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x9CB76C", Offset = "0x9CB76C", VA = "0x9CB76C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D6")]
		public float SegmentLength
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x9CB340", Offset = "0x9CB340", VA = "0x9CB340")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x9CB77C", Offset = "0x9CB77C", VA = "0x9CB77C")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x9CB794", Offset = "0x9CB794", VA = "0x9CB794")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x9CB380", Offset = "0x9CB380", VA = "0x9CB380")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x9CB798", Offset = "0x9CB798", VA = "0x9CB798")]
		private void Update()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x9CB79C", Offset = "0x9CB79C", VA = "0x9CB79C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x9CB808", Offset = "0x9CB808", VA = "0x9CB808")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x9CC390", Offset = "0x9CC390", VA = "0x9CC390")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x9CC69C", Offset = "0x9CC69C", VA = "0x9CC69C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715584", Offset = "0x715584")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000328")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC9")]
				[Address(RVA = "0x9CD2A4", Offset = "0x9CD2A4", VA = "0x9CD2A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000329")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ECB")]
				[Address(RVA = "0x9CD30C", Offset = "0x9CD30C", VA = "0x9CD30C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0x9CD01C", Offset = "0x9CD01C", VA = "0x9CD01C")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x9CD0F8", Offset = "0x9CD0F8", VA = "0x9CD0F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x9CD0FC", Offset = "0x9CD0FC", VA = "0x9CD0FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x9CD2AC", Offset = "0x9CD2AC", VA = "0x9CD2AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017A4")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x40017A5")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x9CC740", Offset = "0x9CC740", VA = "0x9CC740")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x9CC7EC", Offset = "0x9CC7EC", VA = "0x9CC7EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x9CC8A0", Offset = "0x9CC8A0", VA = "0x9CC8A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x9CC9CC", Offset = "0x9CC9CC", VA = "0x9CC9CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x9CCB3C", Offset = "0x9CCB3C", VA = "0x9CCB3C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x9CCCD8", Offset = "0x9CCCD8", VA = "0x9CCCD8")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x9CCF54", Offset = "0x9CCF54", VA = "0x9CCF54")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x9CCDEC", Offset = "0x9CCDEC", VA = "0x9CCDEC")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x9CCE00", Offset = "0x9CCE00", VA = "0x9CCE00")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x9CCFAC", Offset = "0x9CCFAC", VA = "0x9CCFAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72102C", Offset = "0x72102C")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x9CD048", Offset = "0x9CD048", VA = "0x9CD048")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170001D7")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x9CD314", Offset = "0x9CD314", VA = "0x9CD314")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x9CD324", Offset = "0x9CD324", VA = "0x9CD324", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x9CD32C", Offset = "0x9CD32C", VA = "0x9CD32C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x9CD798", Offset = "0x9CD798", VA = "0x9CD798")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40017B8")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40017B9")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71B958", Offset = "0x71B958")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170001D8")]
		public float Distance
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x9CD890", Offset = "0x9CD890", VA = "0x9CD890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721090", Offset = "0x721090")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x9CD898", Offset = "0x9CD898", VA = "0x9CD898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7210A0", Offset = "0x7210A0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public float Scale
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x9CD8A0", Offset = "0x9CD8A0", VA = "0x9CD8A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x9CD8A8", Offset = "0x9CD8A8", VA = "0x9CD8A8")]
			set
			{
			}
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x9CD328", Offset = "0x9CD328", VA = "0x9CD328", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x9CD8B0", Offset = "0x9CD8B0", VA = "0x9CD8B0")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x9CD374", Offset = "0x9CD374", VA = "0x9CD374")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x9CD64C", Offset = "0x9CD64C", VA = "0x9CD64C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60015D9")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x9CD808", Offset = "0x9CD808", VA = "0x9CD808")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715594", Offset = "0x715594")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700032A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ECF")]
				[Address(RVA = "0x9CE238", Offset = "0x9CE238", VA = "0x9CE238", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED1")]
				[Address(RVA = "0x9CE2A0", Offset = "0x9CE2A0", VA = "0x9CE2A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x9CDE7C", Offset = "0x9CDE7C", VA = "0x9CDE7C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x9CE014", Offset = "0x9CE014", VA = "0x9CE014", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x9CE018", Offset = "0x9CE018", VA = "0x9CE018", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x9CE240", Offset = "0x9CE240", VA = "0x9CE240", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x9CDA80", Offset = "0x9CDA80", VA = "0x9CDA80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x9CDACC", Offset = "0x9CDACC", VA = "0x9CDACC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x9CDBD8", Offset = "0x9CDBD8", VA = "0x9CDBD8")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x9CDD20", Offset = "0x9CDD20", VA = "0x9CDD20")]
		private void Update()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x9CDC34", Offset = "0x9CDC34", VA = "0x9CDC34")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x9CDDFC", Offset = "0x9CDDFC", VA = "0x9CDDFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7210B0", Offset = "0x7210B0")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x9CDEA8", Offset = "0x9CDEA8", VA = "0x9CDEA8")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x9CDF54", Offset = "0x9CDF54", VA = "0x9CDF54")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x9CDFB4", Offset = "0x9CDFB4", VA = "0x9CDFB4")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000553")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001F5E")]
			Start,
			[Token(Token = "0x4001F5F")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001F60")]
			Stop
		}

		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7155A4", Offset = "0x7155A4")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700032C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED5")]
				[Address(RVA = "0x9CEEE0", Offset = "0x9CEEE0", VA = "0x9CEEE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED7")]
				[Address(RVA = "0x9CEF48", Offset = "0x9CEF48", VA = "0x9CEF48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x9CE5AC", Offset = "0x9CE5AC", VA = "0x9CE5AC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x9CECC0", Offset = "0x9CECC0", VA = "0x9CECC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x9CECC4", Offset = "0x9CECC4", VA = "0x9CECC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x9CEEE8", Offset = "0x9CEEE8", VA = "0x9CEEE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017CC")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40017CD")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40017CE")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40017CF")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71B9B8", Offset = "0x71B9B8")]
		protected float _initialSpeed;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x9CE2A8", Offset = "0x9CE2A8", VA = "0x9CE2A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x9CE400", Offset = "0x9CE400", VA = "0x9CE400")]
		private void Update()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x9CE40C", Offset = "0x9CE40C", VA = "0x9CE40C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x9CE560", Offset = "0x9CE560", VA = "0x9CE560")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x9CE37C", Offset = "0x9CE37C", VA = "0x9CE37C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721114", Offset = "0x721114")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x9CE5D8", Offset = "0x9CE5D8", VA = "0x9CE5D8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x9CE4FC", Offset = "0x9CE4FC", VA = "0x9CE4FC")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x9CE80C", Offset = "0x9CE80C", VA = "0x9CE80C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x9CE9B8", Offset = "0x9CE9B8", VA = "0x9CE9B8")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x9CE8C8", Offset = "0x9CE8C8", VA = "0x9CE8C8")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x9CEA74", Offset = "0x9CEA74", VA = "0x9CEA74")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x9CEAFC", Offset = "0x9CEAFC", VA = "0x9CEAFC")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x9CEB88", Offset = "0x9CEB88", VA = "0x9CEB88")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x9CEC44", Offset = "0x9CEC44", VA = "0x9CEC44")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x9CEC54", Offset = "0x9CEC54", VA = "0x9CEC54")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170001DA")]
		public float TrackLength
		{
			[Token(Token = "0x60015F4")]
			[Address(RVA = "0x9CEF50", Offset = "0x9CEF50", VA = "0x9CEF50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x9CEF58", Offset = "0x9CEF58", VA = "0x9CEF58")]
			private set
			{
			}
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x9CEF60", Offset = "0x9CEF60", VA = "0x9CEF60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x9CD930", Offset = "0x9CD930", VA = "0x9CD930")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x9CEF64", Offset = "0x9CEF64", VA = "0x9CEF64")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x9CF15C", Offset = "0x9CF15C", VA = "0x9CF15C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x9CF278", Offset = "0x9CF278", VA = "0x9CF278")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class Pose
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x9C8FC4", Offset = "0x9C8FC4", VA = "0x9C8FC4")]
		public Pose()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x9C9070", Offset = "0x9C9070", VA = "0x9C9070")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7155B4", Offset = "0x7155B4")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700032E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EDB")]
				[Address(RVA = "0x9CF85C", Offset = "0x9CF85C", VA = "0x9CF85C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EDD")]
				[Address(RVA = "0x9CF8C4", Offset = "0x9CF8C4", VA = "0x9CF8C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x9CF520", Offset = "0x9CF520", VA = "0x9CF520")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x9CF680", Offset = "0x9CF680", VA = "0x9CF680", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x9CF684", Offset = "0x9CF684", VA = "0x9CF684", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x9CF864", Offset = "0x9CF864", VA = "0x9CF864", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7155C4", Offset = "0x7155C4")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000330")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE1")]
				[Address(RVA = "0x9CF998", Offset = "0x9CF998", VA = "0x9CF998", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000331")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE3")]
				[Address(RVA = "0x9CFA00", Offset = "0x9CFA00", VA = "0x9CFA00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x9CF5E0", Offset = "0x9CF5E0", VA = "0x9CF5E0")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x9CF8CC", Offset = "0x9CF8CC", VA = "0x9CF8CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x9CF8D0", Offset = "0x9CF8D0", VA = "0x9CF8D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x9CF9A0", Offset = "0x9CF9A0", VA = "0x9CF9A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017F2")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71BBA0", Offset = "0x71BBA0")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170001DB")]
		public bool IsMoving
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x9CF294", Offset = "0x9CF294", VA = "0x9CF294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721178", Offset = "0x721178")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x9CF29C", Offset = "0x9CF29C", VA = "0x9CF29C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721188", Offset = "0x721188")]
			private set
			{
			}
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x9CF2A8", Offset = "0x9CF2A8", VA = "0x9CF2A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x9CF2E4", Offset = "0x9CF2E4", VA = "0x9CF2E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x9CF438", Offset = "0x9CF438", VA = "0x9CF438")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x9CF4A0", Offset = "0x9CF4A0", VA = "0x9CF4A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721198", Offset = "0x721198")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x9CF54C", Offset = "0x9CF54C", VA = "0x9CF54C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7211FC", Offset = "0x7211FC")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x9CF60C", Offset = "0x9CF60C", VA = "0x9CF60C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x9CF678", Offset = "0x9CF678", VA = "0x9CF678")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x9CFA08", Offset = "0x9CFA08", VA = "0x9CFA08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x9CFA70", Offset = "0x9CFA70", VA = "0x9CFA70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x9CFB28", Offset = "0x9CFB28", VA = "0x9CFB28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x9CFC28", Offset = "0x9CFC28", VA = "0x9CFC28")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x9CFCA4", Offset = "0x9CFCA4", VA = "0x9CFCA4")]
		private void Update()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x9CFD80", Offset = "0x9CFD80", VA = "0x9CFD80")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001803")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001804")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001805")]
		EUDT_None,
		[Token(Token = "0x4001806")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200039C")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7155D4", Offset = "0x7155D4")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000332")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE7")]
				[Address(RVA = "0x9C83F0", Offset = "0x9C83F0", VA = "0x9C83F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000333")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE9")]
				[Address(RVA = "0x9C8458", Offset = "0x9C8458", VA = "0x9C8458", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x9C7A6C", Offset = "0x9C7A6C", VA = "0x9C7A6C")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x9C81A4", Offset = "0x9C81A4", VA = "0x9C81A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x9C81A8", Offset = "0x9C81A8", VA = "0x9C81A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0x9C83F8", Offset = "0x9C83F8", VA = "0x9C83F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001808")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001809")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400180A")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityEngine.UI.Toggle applicationRadioButton;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.UI.Toggle noneRadioButton;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71BBE0", Offset = "0x71BBE0")]
		public GameObject mainCamera;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71BC18", Offset = "0x71BC18")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x9C6DB4", Offset = "0x9C6DB4", VA = "0x9C6DB4")]
		private void Start()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x9C7594", Offset = "0x9C7594", VA = "0x9C7594")]
		private void Update()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x9C76D4", Offset = "0x9C76D4", VA = "0x9C76D4")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x9C77FC", Offset = "0x9C77FC", VA = "0x9C77FC")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x9C7924", Offset = "0x9C7924", VA = "0x9C7924")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x9C76A8", Offset = "0x9C76A8", VA = "0x9C76A8")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x9C79FC", Offset = "0x9C79FC", VA = "0x9C79FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721260", Offset = "0x721260")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x9C7A98", Offset = "0x9C7A98", VA = "0x9C7A98")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x9C7120", Offset = "0x9C7120", VA = "0x9C7120")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x9C7BC0", Offset = "0x9C7BC0", VA = "0x9C7BC0")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x9C7ACC", Offset = "0x9C7ACC", VA = "0x9C7ACC")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x9C7F5C", Offset = "0x9C7F5C", VA = "0x9C7F5C")]
		public void RadioPressed(string radioLabel, string group, UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x9C8038", Offset = "0x9C8038", VA = "0x9C8038")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x9C80B4", Offset = "0x9C80B4", VA = "0x9C80B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7212C4", Offset = "0x7212C4")]
		private void <Start>b__24_0(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x9C8104", Offset = "0x9C8104", VA = "0x9C8104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7212D4", Offset = "0x7212D4")]
		private void <Start>b__24_1(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x9C8154", Offset = "0x9C8154", VA = "0x9C8154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7212E4", Offset = "0x7212E4")]
		private void <Start>b__24_2(UnityEngine.UI.Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714AAC", Offset = "0x714AAC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7155E4", Offset = "0x7155E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xC73E08", Offset = "0xC73E08", VA = "0xC73E08")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xC73E10", Offset = "0xC73E10", VA = "0xC73E10")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400181F")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001820")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001821")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001822")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001823")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001824")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001825")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001826")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001827")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001828")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001829")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xC7304C", Offset = "0xC7304C", VA = "0xC7304C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xC730A4", Offset = "0xC730A4", VA = "0xC730A4")]
		private void Start()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xC734AC", Offset = "0xC734AC", VA = "0xC734AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xC73578", Offset = "0xC73578", VA = "0xC73578")]
		private void Update()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xC73684", Offset = "0xC73684", VA = "0xC73684")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xC739BC", Offset = "0xC739BC", VA = "0xC739BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xC73B24", Offset = "0xC73B24", VA = "0xC73B24")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xC73C70", Offset = "0xC73C70", VA = "0xC73C70")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xC73720", Offset = "0xC73720", VA = "0xC73720")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xC737C0", Offset = "0xC737C0", VA = "0xC737C0")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xC73300", Offset = "0xC73300", VA = "0xC73300")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xC73D8C", Offset = "0xC73D8C", VA = "0xC73D8C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public enum HandPoseId
	{
		[Token(Token = "0x400183C")]
		Default,
		[Token(Token = "0x400183D")]
		Generic,
		[Token(Token = "0x400183E")]
		PingPongBall,
		[Token(Token = "0x400183F")]
		Controller
	}
	[Token(Token = "0x200039F")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170001DC")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xC73E3C", Offset = "0xC73E3C", VA = "0xC73E3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DD")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0xC73E44", Offset = "0xC73E44", VA = "0xC73E44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DE")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x600162A")]
			[Address(RVA = "0xC73E4C", Offset = "0xC73E4C", VA = "0xC73E4C")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xC73E54", Offset = "0xC73E54", VA = "0xC73E54")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xC73E5C", Offset = "0xC73E5C", VA = "0xC73E5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xC740D0", Offset = "0xC740D0", VA = "0xC740D0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xC7412C", Offset = "0xC7412C", VA = "0xC7412C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xC74170", Offset = "0xC74170", VA = "0xC74170")]
		public TouchController()
		{
		}
	}
}
namespace CustomOculus
{
	[Token(Token = "0x20003A1")]
	public class AppEntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x6001630")]
		[Address(RVA = "0xAB66C4", Offset = "0xAB66C4", VA = "0xAB66C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xAB68A4", Offset = "0xAB68A4", VA = "0xAB68A4")]
		private void EntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xAB6964", Offset = "0xAB6964", VA = "0xAB6964")]
		private void FailEntitledActivity()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xAB6A00", Offset = "0xAB6A00", VA = "0xAB6A00")]
		public AppEntitlementCheck()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class OculusBackButton : MonoBehaviour
	{
		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent BackEvent;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Command cross;

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xAB6A08", Offset = "0xAB6A08", VA = "0xAB6A08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xAB6A90", Offset = "0xAB6A90", VA = "0xAB6A90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xAB6B7C", Offset = "0xAB6B7C", VA = "0xAB6B7C")]
		public OculusBackButton()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class OculusButtonActivity : MonoBehaviour
	{
		[Token(Token = "0x6001637")]
		[Address(RVA = "0xAB6B84", Offset = "0xAB6B84", VA = "0xAB6B84")]
		public void QuitApp()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xAB6BE4", Offset = "0xAB6BE4", VA = "0xAB6BE4")]
		public void PauseActivity()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xAB6C88", Offset = "0xAB6C88", VA = "0xAB6C88")]
		public OculusButtonActivity()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20003A4")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001849")]
		TRIANGLES,
		[Token(Token = "0x400184A")]
		QUADS
	}
	[Token(Token = "0x20003A5")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400184C")]
		ABSORPTION,
		[Token(Token = "0x400184D")]
		TRANSMISSION,
		[Token(Token = "0x400184E")]
		SCATTERING
	}
	[Token(Token = "0x20003A6")]
	public struct MeshGroup
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20003A7")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001853")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001854")]
		public const string Tab = "    ";

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xC74728", Offset = "0xC74728", VA = "0xC74728")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7212F4", Offset = "0x7212F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7212F4", Offset = "0x7212F4")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xC747B0", Offset = "0xC747B0", VA = "0xC747B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x721354", Offset = "0x721354")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x721354", Offset = "0x721354")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xC74848", Offset = "0xC74848", VA = "0xC74848")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7213B4", Offset = "0x7213B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7213B4", Offset = "0x7213B4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xC748D0", Offset = "0xC748D0", VA = "0xC748D0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x721414", Offset = "0x721414")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x721414", Offset = "0x721414")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xC74958", Offset = "0xC74958", VA = "0xC74958")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x721474", Offset = "0x721474")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x721474", Offset = "0x721474")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class CAPI
	{
		[Token(Token = "0x2000559")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x200055A")]
		public enum Result
		{
			[Token(Token = "0x4001F7C")]
			Success = 0,
			[Token(Token = "0x4001F7D")]
			Failure = -1000,
			[Token(Token = "0x4001F7E")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001F7F")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001F80")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001F81")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001F82")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001F83")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001F84")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200055B")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xC7C190", Offset = "0xC7C190", VA = "0xC7C190")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001855")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x400185D")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600163F")]
		[Address(RVA = "0xC74A58", Offset = "0xC74A58", VA = "0xC74A58")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xC74AE8", Offset = "0xC74AE8", VA = "0xC74AE8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xC74CA4", Offset = "0xC74CA4", VA = "0xC74CA4")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001642")]
		[Address(RVA = "0xC74D84", Offset = "0xC74D84", VA = "0xC74D84")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001643")]
		[Address(RVA = "0xC74DF4", Offset = "0xC74DF4", VA = "0xC74DF4")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001644")]
		[Address(RVA = "0xC74E68", Offset = "0xC74E68", VA = "0xC74E68")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xC74EE8", Offset = "0xC74EE8", VA = "0xC74EE8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001646")]
		[Address(RVA = "0xC75000", Offset = "0xC75000", VA = "0xC75000")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xC75080", Offset = "0xC75080", VA = "0xC75080")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001648")]
		[Address(RVA = "0xC75198", Offset = "0xC75198", VA = "0xC75198")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001649")]
		[Address(RVA = "0xC75218", Offset = "0xC75218", VA = "0xC75218")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x600164A")]
		[Address(RVA = "0xC75298", Offset = "0xC75298", VA = "0xC75298")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600164B")]
		[Address(RVA = "0xC75318", Offset = "0xC75318", VA = "0xC75318")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600164C")]
		[Address(RVA = "0xC75398", Offset = "0xC75398", VA = "0xC75398")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600164D")]
		[Address(RVA = "0xC75428", Offset = "0xC75428", VA = "0xC75428")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600164E")]
		[Address(RVA = "0xC754B8", Offset = "0xC754B8", VA = "0xC754B8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600164F")]
		[Address(RVA = "0xC75548", Offset = "0xC75548", VA = "0xC75548")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001650")]
		[Address(RVA = "0xC755C8", Offset = "0xC755C8", VA = "0xC755C8")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001651")]
		[Address(RVA = "0xC75648", Offset = "0xC75648", VA = "0xC75648")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001652")]
		[Address(RVA = "0xC756D8", Offset = "0xC756D8", VA = "0xC756D8")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001653")]
		[Address(RVA = "0xC75768", Offset = "0xC75768", VA = "0xC75768")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001654")]
		[Address(RVA = "0xC757F8", Offset = "0xC757F8", VA = "0xC757F8")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001655")]
		[Address(RVA = "0xC75878", Offset = "0xC75878", VA = "0xC75878")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xC75918", Offset = "0xC75918", VA = "0xC75918")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001657")]
		[Address(RVA = "0xC75998", Offset = "0xC75998", VA = "0xC75998")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001658")]
		[Address(RVA = "0xC75A38", Offset = "0xC75A38", VA = "0xC75A38")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001659")]
		[Address(RVA = "0xC75AF8", Offset = "0xC75AF8", VA = "0xC75AF8")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x600165A")]
		[Address(RVA = "0xC75BC8", Offset = "0xC75BC8", VA = "0xC75BC8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600165B")]
		[Address(RVA = "0xC75C58", Offset = "0xC75C58", VA = "0xC75C58")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600165C")]
		[Address(RVA = "0xC75CE8", Offset = "0xC75CE8", VA = "0xC75CE8")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600165D")]
		[Address(RVA = "0xC75D78", Offset = "0xC75D78", VA = "0xC75D78")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600165E")]
		[Address(RVA = "0xC75E08", Offset = "0xC75E08", VA = "0xC75E08")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600165F")]
		[Address(RVA = "0xC75E98", Offset = "0xC75E98", VA = "0xC75E98")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xC75F18", Offset = "0xC75F18", VA = "0xC75F18")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xC76038", Offset = "0xC76038", VA = "0xC76038")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001662")]
		[Address(RVA = "0xC75FA8", Offset = "0xC75FA8", VA = "0xC75FA8")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xC7622C", Offset = "0xC7622C", VA = "0xC7622C")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001664")]
		[Address(RVA = "0xC76364", Offset = "0xC76364", VA = "0xC76364")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001665")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xC763E4", Offset = "0xC763E4", VA = "0xC763E4")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001667")]
		[Address(RVA = "0xC76654", Offset = "0xC76654", VA = "0xC76654")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xC766D4", Offset = "0xC766D4", VA = "0xC766D4")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001669")]
		[Address(RVA = "0xC7680C", Offset = "0xC7680C", VA = "0xC7680C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xC7688C", Offset = "0xC7688C", VA = "0xC7688C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600166B")]
		[Address(RVA = "0xC769C4", Offset = "0xC769C4", VA = "0xC769C4")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xC76A44", Offset = "0xC76A44", VA = "0xC76A44")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600166D")]
		[Address(RVA = "0xC76B7C", Offset = "0xC76B7C", VA = "0xC76B7C")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xC76BFC", Offset = "0xC76BFC", VA = "0xC76BFC")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600166F")]
		[Address(RVA = "0xC76D34", Offset = "0xC76D34", VA = "0xC76D34")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001670")]
		[Address(RVA = "0xC76DB4", Offset = "0xC76DB4", VA = "0xC76DB4")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001671")]
		[Address(RVA = "0xC76E34", Offset = "0xC76E34", VA = "0xC76E34")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001672")]
		[Address(RVA = "0xC76ECC", Offset = "0xC76ECC", VA = "0xC76ECC")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xC76F4C", Offset = "0xC76F4C", VA = "0xC76F4C")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xC770F8", Offset = "0xC770F8", VA = "0xC770F8")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001675")]
		[Address(RVA = "0xC77224", Offset = "0xC77224", VA = "0xC77224")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001676")]
		[Address(RVA = "0xC77078", Offset = "0xC77078", VA = "0xC77078")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001677")]
		[Address(RVA = "0xC772A4", Offset = "0xC772A4", VA = "0xC772A4")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001678")]
		[Address(RVA = "0xC77324", Offset = "0xC77324", VA = "0xC77324")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001679")]
		[Address(RVA = "0xC773B4", Offset = "0xC773B4", VA = "0xC773B4")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600167A")]
		[Address(RVA = "0xC77434", Offset = "0xC77434", VA = "0xC77434")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x600167B")]
		[Address(RVA = "0xC774C4", Offset = "0xC774C4", VA = "0xC774C4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600167C")]
		[Address(RVA = "0xC77544", Offset = "0xC77544", VA = "0xC77544")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xC775C4", Offset = "0xC775C4", VA = "0xC775C4")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600167E")]
		[Address(RVA = "0xC77800", Offset = "0xC77800", VA = "0xC77800")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xC77890", Offset = "0xC77890", VA = "0xC77890")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001680")]
		[Address(RVA = "0xC77A7C", Offset = "0xC77A7C", VA = "0xC77A7C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xC77B14", Offset = "0xC77B14", VA = "0xC77B14")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001682")]
		[Address(RVA = "0xC77C38", Offset = "0xC77C38", VA = "0xC77C38")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001683")]
		[Address(RVA = "0xC77CB8", Offset = "0xC77CB8", VA = "0xC77CB8")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xC77D38", Offset = "0xC77D38", VA = "0xC77D38")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001685")]
		[Address(RVA = "0xC77E60", Offset = "0xC77E60", VA = "0xC77E60")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xC77EE0", Offset = "0xC77EE0", VA = "0xC77EE0")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001687")]
		[Address(RVA = "0xC78008", Offset = "0xC78008", VA = "0xC78008")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001688")]
		[Address(RVA = "0xC78088", Offset = "0xC78088", VA = "0xC78088")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001689")]
		[Address(RVA = "0xC78118", Offset = "0xC78118", VA = "0xC78118")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600168A")]
		[Address(RVA = "0xC781A8", Offset = "0xC781A8", VA = "0xC781A8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600168B")]
		[Address(RVA = "0xC78238", Offset = "0xC78238", VA = "0xC78238")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600168C")]
		[Address(RVA = "0xC782B8", Offset = "0xC782B8", VA = "0xC782B8")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600168D")]
		[Address(RVA = "0xC78340", Offset = "0xC78340", VA = "0xC78340")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600168E")]
		[Address(RVA = "0xC783C8", Offset = "0xC783C8", VA = "0xC783C8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600168F")]
		[Address(RVA = "0xC78448", Offset = "0xC78448", VA = "0xC78448")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001690")]
		[Address(RVA = "0xC784C8", Offset = "0xC784C8", VA = "0xC784C8")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001691")]
		[Address(RVA = "0xC7857C", Offset = "0xC7857C", VA = "0xC7857C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001692")]
		[Address(RVA = "0xC7860C", Offset = "0xC7860C", VA = "0xC7860C")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001693")]
		[Address(RVA = "0xC7869C", Offset = "0xC7869C", VA = "0xC7869C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001694")]
		[Address(RVA = "0xC7871C", Offset = "0xC7871C", VA = "0xC7871C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001695")]
		[Address(RVA = "0xC7879C", Offset = "0xC7879C", VA = "0xC7879C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001696")]
		[Address(RVA = "0xC7881C", Offset = "0xC7881C", VA = "0xC7881C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001697")]
		[Address(RVA = "0xC788B4", Offset = "0xC788B4", VA = "0xC788B4")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001698")]
		[Address(RVA = "0xC78944", Offset = "0xC78944", VA = "0xC78944")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001699")]
		[Address(RVA = "0xC789D4", Offset = "0xC789D4", VA = "0xC789D4")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x600169A")]
		[Address(RVA = "0xC78A64", Offset = "0xC78A64", VA = "0xC78A64")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600169B")]
		[Address(RVA = "0xC78AFC", Offset = "0xC78AFC", VA = "0xC78AFC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600169C")]
		[Address(RVA = "0xC78B94", Offset = "0xC78B94", VA = "0xC78B94")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600169D")]
		[Address(RVA = "0xC78C14", Offset = "0xC78C14", VA = "0xC78C14")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xC78C94", Offset = "0xC78C94", VA = "0xC78C94")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600169F")]
		[Address(RVA = "0xC78DBC", Offset = "0xC78DBC", VA = "0xC78DBC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xC78E3C", Offset = "0xC78E3C", VA = "0xC78E3C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xC78F64", Offset = "0xC78F64", VA = "0xC78F64")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xC78FE4", Offset = "0xC78FE4", VA = "0xC78FE4")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xC7910C", Offset = "0xC7910C", VA = "0xC7910C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xC7918C", Offset = "0xC7918C", VA = "0xC7918C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xC79334", Offset = "0xC79334", VA = "0xC79334")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xC795D0", Offset = "0xC795D0", VA = "0xC795D0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xC792B4", Offset = "0xC792B4", VA = "0xC792B4")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xC79660", Offset = "0xC79660", VA = "0xC79660")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xC796E0", Offset = "0xC796E0", VA = "0xC796E0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xC79770", Offset = "0xC79770", VA = "0xC79770")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xC79800", Offset = "0xC79800", VA = "0xC79800")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xC79890", Offset = "0xC79890", VA = "0xC79890")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xC79930", Offset = "0xC79930", VA = "0xC79930")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xC799D0", Offset = "0xC799D0", VA = "0xC799D0")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xC79A70", Offset = "0xC79A70", VA = "0xC79A70")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xC79AF0", Offset = "0xC79AF0", VA = "0xC79AF0")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xC79B70", Offset = "0xC79B70", VA = "0xC79B70")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xC79BF0", Offset = "0xC79BF0", VA = "0xC79BF0")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xC79C70", Offset = "0xC79C70", VA = "0xC79C70")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xC79CF0", Offset = "0xC79CF0", VA = "0xC79CF0")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xC79E18", Offset = "0xC79E18", VA = "0xC79E18")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xC79EB0", Offset = "0xC79EB0", VA = "0xC79EB0")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xC79F30", Offset = "0xC79F30", VA = "0xC79F30")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xC79F94", Offset = "0xC79F94", VA = "0xC79F94")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xC7A0B0", Offset = "0xC7A0B0", VA = "0xC7A0B0")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xC7A140", Offset = "0xC7A140", VA = "0xC7A140")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xC7A284", Offset = "0xC7A284", VA = "0xC7A284")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xC7A314", Offset = "0xC7A314", VA = "0xC7A314")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xC7A3B4", Offset = "0xC7A3B4", VA = "0xC7A3B4")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xC7A74C", Offset = "0xC7A74C", VA = "0xC7A74C")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xC7A7CC", Offset = "0xC7A7CC", VA = "0xC7A7CC")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xC7A864", Offset = "0xC7A864", VA = "0xC7A864")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xC7B02C", Offset = "0xC7B02C", VA = "0xC7B02C")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xC7B0AC", Offset = "0xC7B0AC", VA = "0xC7B0AC")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xC749F0", Offset = "0xC749F0", VA = "0xC749F0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7214D4", Offset = "0x7214D4")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xC7B144", Offset = "0xC7B144", VA = "0xC7B144")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xC7B1C8", Offset = "0xC7B1C8", VA = "0xC7B1C8")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xC7B248", Offset = "0xC7B248", VA = "0xC7B248")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xC7B2C8", Offset = "0xC7B2C8", VA = "0xC7B2C8")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xC7B348", Offset = "0xC7B348", VA = "0xC7B348")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xC7BD28", Offset = "0xC7BD28", VA = "0xC7BD28")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xC7BDA8", Offset = "0xC7BDA8", VA = "0xC7BDA8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xC7C26C", Offset = "0xC7C26C", VA = "0xC7C26C")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xC7C100", Offset = "0xC7C100", VA = "0xC7C100")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xC7C2E0", Offset = "0xC7C2E0", VA = "0xC7C2E0")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20003A9")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x71BCD0", Offset = "0x71BCD0")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xC6A12C", Offset = "0xC6A12C", VA = "0xC6A12C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xC6A130", Offset = "0xC6A130", VA = "0xC6A130")]
		private void Update()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xC6A1F0", Offset = "0xC6A1F0", VA = "0xC6A1F0")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BD1C", Offset = "0x71BD1C")]
		public bool autoRetrigger;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x71BD54", Offset = "0x71BD54")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BD78", Offset = "0x71BD78")]
		public Transform[] playPositions;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x102A870", Offset = "0x102A870", VA = "0x102A870")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x102A9F4", Offset = "0x102A9F4", VA = "0x102A9F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x102ABD4", Offset = "0x102ABD4", VA = "0x102ABD4")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x102AA54", Offset = "0x102AA54", VA = "0x102AA54")]
		public void Play()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x102AC98", Offset = "0x102AC98", VA = "0x102AC98")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x102AE10", Offset = "0x102AE10", VA = "0x102AE10")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public enum PreloadSounds
	{
		[Token(Token = "0x400186C")]
		Default,
		[Token(Token = "0x400186D")]
		Preload,
		[Token(Token = "0x400186E")]
		ManualPreload
	}
	[Token(Token = "0x20003AC")]
	public enum Fade
	{
		[Token(Token = "0x4001870")]
		In,
		[Token(Token = "0x4001871")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20003AD")]
	public class SoundGroup
	{
		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71BDB0", Offset = "0x71BDB0")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xC6A00C", Offset = "0xC6A00C", VA = "0xC6A00C")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xC6A0A0", Offset = "0xC6A0A0", VA = "0xC6A0A0")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xC67D0C", Offset = "0xC67D0C", VA = "0xC67D0C")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xC68048", Offset = "0xC68048", VA = "0xC68048")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xC695C0", Offset = "0xC695C0", VA = "0xC695C0")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003AE")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200055C")]
		public enum Fade
		{
			[Token(Token = "0x4001F87")]
			In,
			[Token(Token = "0x4001F88")]
			Out
		}

		[Token(Token = "0x200055D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7155F4", Offset = "0x7155F4")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xC67770", Offset = "0xC67770", VA = "0xC67770")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xC67778", Offset = "0xC67778", VA = "0xC67778")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715604", Offset = "0x715604")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0xC676D8", Offset = "0xC676D8", VA = "0xC676D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xC676E0", Offset = "0xC676E0", VA = "0xC676E0")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BDDC", Offset = "0x71BDDC")]
		public bool makePersistent;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BE14", Offset = "0x71BE14")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BE4C", Offset = "0x71BE4C")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BE84", Offset = "0x71BE84")]
		public AudioMixer audioMixer;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BEBC", Offset = "0x71BEBC")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BEF4", Offset = "0x71BEF4")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BF2C", Offset = "0x71BF2C")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BF64", Offset = "0x71BF64")]
		public bool verboseLogging;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BF9C", Offset = "0x71BF9C")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71BFD4", Offset = "0x71BFD4")]
		public float volumeSoundFX;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C00C", Offset = "0x71C00C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170001DF")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x102AED0", Offset = "0x102AED0", VA = "0x102AED0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E0")]
		public static AudioManager Instance
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x102AFB0", Offset = "0x102AFB0", VA = "0x102AFB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public static float NearFallOff
		{
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x102B018", Offset = "0x102B018", VA = "0x102B018")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E2")]
		public static float FarFallOff
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x102B08C", Offset = "0x102B08C", VA = "0x102B08C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E3")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x102B100", Offset = "0x102B100", VA = "0x102B100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x102B174", Offset = "0x102B174", VA = "0x102B174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x102B1E8", Offset = "0x102B1E8", VA = "0x102B1E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x102CF44", Offset = "0x102CF44", VA = "0x102CF44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x102B25C", Offset = "0x102B25C", VA = "0x102B25C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x102B484", Offset = "0x102B484", VA = "0x102B484")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x102B260", Offset = "0x102B260", VA = "0x102B260")]
		private void Init()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x102C0B4", Offset = "0x102C0B4", VA = "0x102C0B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x102B5DC", Offset = "0x102B5DC", VA = "0x102B5DC")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x102C6E0", Offset = "0x102C6E0", VA = "0x102C6E0")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x102C860", Offset = "0x102C860", VA = "0x102C860")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x102C9FC", Offset = "0x102C9FC", VA = "0x102C9FC")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x102CAFC", Offset = "0x102CAFC", VA = "0x102CAFC")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x102CB8C", Offset = "0x102CB8C", VA = "0x102CB8C")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x102BA28", Offset = "0x102BA28", VA = "0x102BA28")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x102C0B8", Offset = "0x102C0B8", VA = "0x102C0B8")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x102D078", Offset = "0x102D078", VA = "0x102D078")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x102D17C", Offset = "0x102D17C", VA = "0x102D17C")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x102D284", Offset = "0x102D284", VA = "0x102D284")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x102CFAC", Offset = "0x102CFAC", VA = "0x102CFAC")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x102D3B8", Offset = "0x102D3B8", VA = "0x102D3B8")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x102D474", Offset = "0x102D474", VA = "0x102D474")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x102D594", Offset = "0x102D594", VA = "0x102D594")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x102ABE4", Offset = "0x102ABE4", VA = "0x102ABE4")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x102AD5C", Offset = "0x102AD5C", VA = "0x102AD5C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x102D650", Offset = "0x102D650", VA = "0x102D650")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x102D71C", Offset = "0x102D71C", VA = "0x102D71C")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x102D7B0", Offset = "0x102D7B0", VA = "0x102D7B0")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x102D874", Offset = "0x102D874", VA = "0x102D874")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x102D918", Offset = "0x102D918", VA = "0x102D918")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x102D9D4", Offset = "0x102D9D4", VA = "0x102D9D4")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x102E4C4", Offset = "0x102E4C4", VA = "0x102E4C4")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x102EB80", Offset = "0x102EB80", VA = "0x102EB80")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x102ED60", Offset = "0x102ED60", VA = "0x102ED60")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x102F89C", Offset = "0x102F89C", VA = "0x102F89C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x102DBDC", Offset = "0x102DBDC", VA = "0x102DBDC")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x102F9BC", Offset = "0x102F9BC", VA = "0x102F9BC")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x102FAA0", Offset = "0x102FAA0", VA = "0x102FAA0")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x102FBA0", Offset = "0x102FBA0", VA = "0x102FBA0")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x102FE60", Offset = "0x102FE60", VA = "0x102FE60")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x102FFA8", Offset = "0x102FFA8", VA = "0x102FFA8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x10300D0", Offset = "0x10300D0", VA = "0x10300D0")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x10301F4", Offset = "0x10301F4", VA = "0x10301F4")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x10302CC", Offset = "0x10302CC", VA = "0x10302CC")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1030400", Offset = "0x1030400", VA = "0x1030400")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x10307EC", Offset = "0x10307EC", VA = "0x10307EC")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001899")]
		None = -1,
		[Token(Token = "0x400189A")]
		Reserved,
		[Token(Token = "0x400189B")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20003B0")]
	public class MixerSnapshot
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xC67874", Offset = "0xC67874", VA = "0xC67874")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xC67818", Offset = "0xC67818", VA = "0xC67818")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200055F")]
		public enum FadeState
		{
			[Token(Token = "0x4001F8D")]
			Null,
			[Token(Token = "0x4001F8E")]
			FadingIn,
			[Token(Token = "0x4001F8F")]
			FadingOut,
			[Token(Token = "0x4001F90")]
			Ducking
		}

		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715614", Offset = "0x715614")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000334")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EFB")]
				[Address(RVA = "0xC68928", Offset = "0xC68928", VA = "0xC68928", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000335")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EFD")]
				[Address(RVA = "0xC68990", Offset = "0xC68990", VA = "0xC68990", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xC683E0", Offset = "0xC683E0", VA = "0xC683E0")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xC68838", Offset = "0xC68838", VA = "0xC68838", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xC6883C", Offset = "0xC6883C", VA = "0xC6883C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xC68930", Offset = "0xC68930", VA = "0xC68930", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715624", Offset = "0x715624")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000336")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F01")]
				[Address(RVA = "0xC68DDC", Offset = "0xC68DDC", VA = "0xC68DDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000337")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F03")]
				[Address(RVA = "0xC68E44", Offset = "0xC68E44", VA = "0xC68E44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xC687C8", Offset = "0xC687C8", VA = "0xC687C8")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0xC68C70", Offset = "0xC68C70", VA = "0xC68C70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xC68C74", Offset = "0xC68C74", VA = "0xC68C74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F02")]
			[Address(RVA = "0xC68DE4", Offset = "0xC68DE4", VA = "0xC68DE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715634", Offset = "0x715634")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000338")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F07")]
				[Address(RVA = "0xC68C00", Offset = "0xC68C00", VA = "0xC68C00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000339")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F09")]
				[Address(RVA = "0xC68C68", Offset = "0xC68C68", VA = "0xC68C68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xC687F4", Offset = "0xC687F4", VA = "0xC687F4")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xC68998", Offset = "0xC68998", VA = "0xC68998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F06")]
			[Address(RVA = "0xC6899C", Offset = "0xC6899C", VA = "0xC6899C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F08")]
			[Address(RVA = "0xC68C08", Offset = "0xC68C08", VA = "0xC68C08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170001E7")]
		public float volume
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0xC67914", Offset = "0xC67914", VA = "0xC67914")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001713")]
			[Address(RVA = "0xC67930", Offset = "0xC67930", VA = "0xC67930")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public float pitch
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0xC6794C", Offset = "0xC6794C", VA = "0xC6794C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001715")]
			[Address(RVA = "0xC67968", Offset = "0xC67968", VA = "0xC67968")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public AudioClip clip
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xC67984", Offset = "0xC67984", VA = "0xC67984")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001717")]
			[Address(RVA = "0xC679A0", Offset = "0xC679A0", VA = "0xC679A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public float time
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xC679BC", Offset = "0xC679BC", VA = "0xC679BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xC679D8", Offset = "0xC679D8", VA = "0xC679D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public float length
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0xC679F4", Offset = "0xC679F4", VA = "0xC679F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001EC")]
		public bool loop
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0xC67AAC", Offset = "0xC67AAC", VA = "0xC67AAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600171C")]
			[Address(RVA = "0xC67AC8", Offset = "0xC67AC8", VA = "0xC67AC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public bool mute
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0xC67AE8", Offset = "0xC67AE8", VA = "0xC67AE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xC67B04", Offset = "0xC67B04", VA = "0xC67B04")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0xC67B24", Offset = "0xC67B24", VA = "0xC67B24")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001720")]
			[Address(RVA = "0xC67B40", Offset = "0xC67B40", VA = "0xC67B40")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public bool isPlaying
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0xC67B5C", Offset = "0xC67B5C", VA = "0xC67B5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xC67B78", Offset = "0xC67B78", VA = "0xC67B78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xC67CF8", Offset = "0xC67CF8", VA = "0xC67CF8")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xC67D9C", Offset = "0xC67D9C", VA = "0xC67D9C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xC67DA4", Offset = "0xC67DA4", VA = "0xC67DA4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xC67DAC", Offset = "0xC67DAC", VA = "0xC67DAC")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xC67DB4", Offset = "0xC67DB4", VA = "0xC67DB4")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xC67DBC", Offset = "0xC67DBC", VA = "0xC67DBC")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xC67E64", Offset = "0xC67E64", VA = "0xC67E64")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xC67ED0", Offset = "0xC67ED0", VA = "0xC67ED0")]
		public void Play()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xC67F30", Offset = "0xC67F30", VA = "0xC67F30")]
		public void Pause()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xC67F68", Offset = "0xC67F68", VA = "0xC67F68")]
		public void Stop()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xC680D8", Offset = "0xC680D8", VA = "0xC680D8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xC68130", Offset = "0xC68130", VA = "0xC68130")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xC6822C", Offset = "0xC6822C", VA = "0xC6822C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xC682E4", Offset = "0xC682E4", VA = "0xC682E4")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xC68324", Offset = "0xC68324", VA = "0xC68324")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xC68350", Offset = "0xC68350", VA = "0xC68350")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721538", Offset = "0x721538")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xC6840C", Offset = "0xC6840C", VA = "0xC6840C")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xC684F8", Offset = "0xC684F8", VA = "0xC684F8")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xC6861C", Offset = "0xC6861C", VA = "0xC6861C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xC68694", Offset = "0xC68694", VA = "0xC68694")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xC6872C", Offset = "0xC6872C", VA = "0xC6872C")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xC68474", Offset = "0xC68474", VA = "0xC68474")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72159C", Offset = "0x72159C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xC68574", Offset = "0xC68574", VA = "0xC68574")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721600", Offset = "0x721600")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xC68820", Offset = "0xC68820", VA = "0xC68820")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40018B2")]
		Random,
		[Token(Token = "0x40018B3")]
		Sequential
	}
	[Token(Token = "0x20003B4")]
	public enum FreqHint
	{
		[Token(Token = "0x40018B5")]
		None,
		[Token(Token = "0x40018B6")]
		Wide,
		[Token(Token = "0x40018B7")]
		Narrow
	}
	[Token(Token = "0x20003B5")]
	public enum SoundPriority
	{
		[Token(Token = "0x40018B9")]
		VeryLow = -2,
		[Token(Token = "0x40018BA")]
		Low,
		[Token(Token = "0x40018BB")]
		Default,
		[Token(Token = "0x40018BC")]
		High,
		[Token(Token = "0x40018BD")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20003B6")]
	public class OSPProps
	{
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C0F4", Offset = "0x71C0F4")]
		public bool enableSpatialization;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C12C", Offset = "0x71C12C")]
		public bool useFastOverride;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C164", Offset = "0x71C164")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71C164", Offset = "0x71C164")]
		public float gain;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C1B8", Offset = "0x71C1B8")]
		public bool enableInvSquare;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C1F0", Offset = "0x71C1F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71C1F0", Offset = "0x71C1F0")]
		public float volumetric;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C248", Offset = "0x71C248")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x71C248", Offset = "0x71C248")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xC67884", Offset = "0xC67884", VA = "0xC67884")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B7")]
	public class SoundFX
	{
		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C2A8", Offset = "0x71C2A8")]
		public string name;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C2E0", Offset = "0x71C2E0")]
		public SoundFXNext playback;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C318", Offset = "0x71C318")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71C318", Offset = "0x71C318")]
		public float volume;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C36C", Offset = "0x71C36C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x71C36C", Offset = "0x71C36C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C3C8", Offset = "0x71C3C8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x71C3C8", Offset = "0x71C3C8")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C428", Offset = "0x71C428")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C460", Offset = "0x71C460")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C498", Offset = "0x71C498")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C4D0", Offset = "0x71C4D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71C4D0", Offset = "0x71C4D0")]
		public float spread;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C528", Offset = "0x71C528")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71C528", Offset = "0x71C528")]
		public float pctChanceToPlay;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C57C", Offset = "0x71C57C")]
		public SoundPriority priority;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C5B4", Offset = "0x71C5B4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x71C5B4", Offset = "0x71C5B4")]
		public Vector2 delay;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C610", Offset = "0x71C610")]
		public bool looping;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C648", Offset = "0x71C648")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170001F0")]
		public int Length
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0xC69334", Offset = "0xC69334", VA = "0xC69334")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F1")]
		public bool IsValid
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xC69350", Offset = "0xC69350", VA = "0xC69350")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		public SoundGroup Group
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0xC693F4", Offset = "0xC693F4", VA = "0xC693F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001740")]
			[Address(RVA = "0xC693FC", Offset = "0xC693FC", VA = "0xC693FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0xC69404", Offset = "0xC69404", VA = "0xC69404")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F4")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0xC69410", Offset = "0xC69410", VA = "0xC69410")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xC68E4C", Offset = "0xC68E4C", VA = "0xC68E4C")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xC69428", Offset = "0xC69428", VA = "0xC69428")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xC694F8", Offset = "0xC694F8", VA = "0xC694F8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xC69598", Offset = "0xC69598", VA = "0xC69598")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xC695E0", Offset = "0xC695E0", VA = "0xC695E0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xC696DC", Offset = "0xC696DC", VA = "0xC696DC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xC696E8", Offset = "0xC696E8", VA = "0xC696E8")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xC697C8", Offset = "0xC697C8", VA = "0xC697C8")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xC698E0", Offset = "0xC698E0", VA = "0xC698E0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xC69970", Offset = "0xC69970", VA = "0xC69970")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xC69A08", Offset = "0xC69A08", VA = "0xC69A08")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xC69A98", Offset = "0xC69A98", VA = "0xC69A98")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xC69B28", Offset = "0xC69B28", VA = "0xC69B28")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B8")]
	public class SoundFXRef
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001F5")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0xC69BA4", Offset = "0xC69BA4", VA = "0xC69BA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public string name
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0xC69CA0", Offset = "0xC69CA0", VA = "0xC69CA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001751")]
			[Address(RVA = "0xC69CA8", Offset = "0xC69CA8", VA = "0xC69CA8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public int Length
		{
			[Token(Token = "0x6001753")]
			[Address(RVA = "0xC69CB0", Offset = "0xC69CB0", VA = "0xC69CB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F8")]
		public bool IsValid
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0xC69CF4", Offset = "0xC69CF4", VA = "0xC69CF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xC69BD4", Offset = "0xC69BD4", VA = "0xC69BD4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xC69D2C", Offset = "0xC69D2C", VA = "0xC69D2C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xC69D64", Offset = "0xC69D64", VA = "0xC69D64")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xC69DA4", Offset = "0xC69DA4", VA = "0xC69DA4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xC69DEC", Offset = "0xC69DEC", VA = "0xC69DEC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xC69E6C", Offset = "0xC69E6C", VA = "0xC69E6C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xC69EAC", Offset = "0xC69EAC", VA = "0xC69EAC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xC69EFC", Offset = "0xC69EFC", VA = "0xC69EFC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xC69F34", Offset = "0xC69F34", VA = "0xC69F34")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xC69F74", Offset = "0xC69F74", VA = "0xC69F74")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xC69FAC", Offset = "0xC69FAC", VA = "0xC69FAC")]
		public SoundFXRef()
		{
		}
	}
}
namespace NoVR.GUI
{
	[Token(Token = "0x20003B9")]
	public class ChangeSpeed : MonoBehaviour
	{
		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YUMBO_SPEED speedID;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider speedSlider;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SettingSpeed speedScript;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Excavator exScript;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SaveSetting saveSettingScript;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xDEFBE4", Offset = "0xDEFBE4", VA = "0xDEFBE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xDEFDB0", Offset = "0xDEFDB0", VA = "0xDEFDB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xDEFEF8", Offset = "0xDEFEF8", VA = "0xDEFEF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xDEFFC0", Offset = "0xDEFFC0", VA = "0xDEFFC0")]
		private void ApplySpeed()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xDF0068", Offset = "0xDF0068", VA = "0xDF0068")]
		private void ApplyYumbo()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xDF0150", Offset = "0xDF0150", VA = "0xDF0150")]
		private void CancelSpeed()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xDF0114", Offset = "0xDF0114", VA = "0xDF0114")]
		private void ChangeSpeedValue(float _value)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xDF01F0", Offset = "0xDF01F0", VA = "0xDF01F0")]
		public ChangeSpeed()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class FinishPanelActive : MonoBehaviour
	{
		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NavigationGUIControl guiControl;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xDF01F8", Offset = "0xDF01F8", VA = "0xDF01F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xDF0260", Offset = "0xDF0260", VA = "0xDF0260")]
		private void Update()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xDF0330", Offset = "0xDF0330", VA = "0xDF0330")]
		public FinishPanelActive()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class MenuChooseStage : MonoBehaviour
	{
		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715644", Offset = "0x715644")]
		private sealed class <LoadSceneAsync>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuChooseStage <>4__this;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string senceName;

			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x1700033A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F0D")]
				[Address(RVA = "0xDF0850", Offset = "0xDF0850", VA = "0xDF0850", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F0F")]
				[Address(RVA = "0xDF08B8", Offset = "0xDF08B8", VA = "0xDF08B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xDF0730", Offset = "0xDF0730", VA = "0xDF0730")]
			[DebuggerHidden]
			public <LoadSceneAsync>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0xDF0764", Offset = "0xDF0764", VA = "0xDF0764", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0xDF0768", Offset = "0xDF0768", VA = "0xDF0768", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0xDF0858", Offset = "0xDF0858", VA = "0xDF0858", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] listStage;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject loading;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button[] ChooseStageButtons;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sceneIndex;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string sceneName;

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xDF0338", Offset = "0xDF0338", VA = "0xDF0338")]
		private void Start()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xDF0470", Offset = "0xDF0470", VA = "0xDF0470")]
		public void InteractableButton(bool _interactable)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xDF04EC", Offset = "0xDF04EC", VA = "0xDF04EC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xDF053C", Offset = "0xDF053C", VA = "0xDF053C")]
		public void BackController()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xDF0568", Offset = "0xDF0568", VA = "0xDF0568")]
		public void NextController()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xDF0598", Offset = "0xDF0598", VA = "0xDF0598")]
		public void ChangeScene()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xDF03EC", Offset = "0xDF03EC", VA = "0xDF03EC")]
		private void SetActiveStage()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xDF06B4", Offset = "0xDF06B4", VA = "0xDF06B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721664", Offset = "0x721664")]
		private IEnumerator LoadSceneAsync(string senceName)
		{
			return null;
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xDF0610", Offset = "0xDF0610", VA = "0xDF0610")]
		private string GetNameSceneToCome()
		{
			return null;
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xDF075C", Offset = "0xDF075C", VA = "0xDF075C")]
		public MenuChooseStage()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class MenuNavigation : MonoBehaviour
	{
		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715654", Offset = "0x715654")]
		private sealed class <LoadSceneAsync>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuNavigation <>4__this;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string senceName;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x1700033C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F13")]
				[Address(RVA = "0xDF0D9C", Offset = "0xDF0D9C", VA = "0xDF0D9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F15")]
				[Address(RVA = "0xDF0E04", Offset = "0xDF0E04", VA = "0xDF0E04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0xDF0C7C", Offset = "0xDF0C7C", VA = "0xDF0C7C")]
			[DebuggerHidden]
			public <LoadSceneAsync>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0xDF0CB0", Offset = "0xDF0CB0", VA = "0xDF0CB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xDF0CB4", Offset = "0xDF0CB4", VA = "0xDF0CB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0xDF0DA4", Offset = "0xDF0DA4", VA = "0xDF0DA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject loading;

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xDF08C0", Offset = "0xDF08C0", VA = "0xDF08C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xDF097C", Offset = "0xDF097C", VA = "0xDF097C")]
		public void ShowContent(GameObject _content)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xDF08C4", Offset = "0xDF08C4", VA = "0xDF08C4")]
		public void ShowSettingPanel()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xDF0B4C", Offset = "0xDF0B4C", VA = "0xDF0B4C")]
		public void QuitApplication()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xDF0B54", Offset = "0xDF0B54", VA = "0xDF0B54")]
		public void LoadTutorial()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xDF0C00", Offset = "0xDF0C00", VA = "0xDF0C00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7216C8", Offset = "0x7216C8")]
		private IEnumerator LoadSceneAsync(string senceName)
		{
			return null;
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xDF0CA8", Offset = "0xDF0CA8", VA = "0xDF0CA8")]
		public MenuNavigation()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class NavigationGUIControl : MonoBehaviour
	{
		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715664", Offset = "0x715664")]
		private sealed class <LoadSceneMenu>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700033E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F19")]
				[Address(RVA = "0xCFA5F0", Offset = "0xCFA5F0", VA = "0xCFA5F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F1B")]
				[Address(RVA = "0xCFA658", Offset = "0xCFA658", VA = "0xCFA658", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F16")]
			[Address(RVA = "0xCFA520", Offset = "0xCFA520", VA = "0xCFA520")]
			[DebuggerHidden]
			public <LoadSceneMenu>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001F17")]
			[Address(RVA = "0xCFA54C", Offset = "0xCFA54C", VA = "0xCFA54C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F18")]
			[Address(RVA = "0xCFA550", Offset = "0xCFA550", VA = "0xCFA550", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0xCFA5F8", Offset = "0xCFA5F8", VA = "0xCFA5F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject loading;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button[] NavigationButtons;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isFinish;

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xDF0E0C", Offset = "0xDF0E0C", VA = "0xDF0E0C")]
		private void Start()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xDF02B4", Offset = "0xDF02B4", VA = "0xDF02B4")]
		public void InteractableButton(bool _interactable)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xDF0E7C", Offset = "0xDF0E7C", VA = "0xDF0E7C")]
		public void ShowPanel(GameObject _panel)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xDF0F0C", Offset = "0xDF0F0C", VA = "0xDF0F0C")]
		public void DisabelButton(Button _button)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xDF0F2C", Offset = "0xDF0F2C", VA = "0xDF0F2C")]
		public void HidePanel(GameObject _panel)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xDF0FBC", Offset = "0xDF0FBC", VA = "0xDF0FBC")]
		public void ReloadAction()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xDF11F4", Offset = "0xDF11F4", VA = "0xDF11F4")]
		public void BackMenu()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xDF128C", Offset = "0xDF128C", VA = "0xDF128C")]
		public void ShowSolution(bool isShow)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xDF131C", Offset = "0xDF131C", VA = "0xDF131C")]
		public void OpenButtonPanel(GameObject _buttonPanel)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xDF122C", Offset = "0xDF122C", VA = "0xDF122C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x72172C", Offset = "0x72172C")]
		private IEnumerator LoadSceneMenu()
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xDF1124", Offset = "0xDF1124", VA = "0xDF1124")]
		private void ResetBoxOptionStage2()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xDF1488", Offset = "0xDF1488", VA = "0xDF1488")]
		public NavigationGUIControl()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class SaveSetting : MonoBehaviour
	{
		[Token(Token = "0x14000043")]
		public event Action OnApplyYumboSetting
		{
			[Token(Token = "0x6001787")]
			[Address(RVA = "0xCFA660", Offset = "0xCFA660", VA = "0xCFA660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721790", Offset = "0x721790")]
			add
			{
			}
			[Token(Token = "0x6001788")]
			[Address(RVA = "0xCFA704", Offset = "0xCFA704", VA = "0xCFA704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7217A0", Offset = "0x7217A0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xCFA7A8", Offset = "0xCFA7A8", VA = "0xCFA7A8")]
		public void SaveSettingConfig()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xCFA820", Offset = "0xCFA820", VA = "0xCFA820")]
		public void ApplyYumboSetting()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xCFA834", Offset = "0xCFA834", VA = "0xCFA834")]
		public SaveSetting()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class SettingLangguage : MonoBehaviour
	{
		[Token(Token = "0x600178C")]
		[Address(RVA = "0xCFA83C", Offset = "0xCFA83C", VA = "0xCFA83C")]
		private void Start()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xCFA840", Offset = "0xCFA840", VA = "0xCFA840")]
		public void SetLangguage(string language)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xCFA940", Offset = "0xCFA940", VA = "0xCFA940")]
		public void CancelLangguage()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xCFAA5C", Offset = "0xCFAA5C", VA = "0xCFAA5C")]
		public void ApplyLangguage()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xCFAB24", Offset = "0xCFAB24", VA = "0xCFAB24")]
		public SettingLangguage()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class SettingPanelAtStage : MonoBehaviour
	{
		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Excavator yumboScript;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator fadedPanelAnim;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RotateCameraByTouchYOnly rotateCameraScript;

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xCFAB2C", Offset = "0xCFAB2C", VA = "0xCFAB2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xCFAC98", Offset = "0xCFAC98", VA = "0xCFAC98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xCFADB4", Offset = "0xCFADB4", VA = "0xCFADB4")]
		private bool AnimatorIsPlaying(Animator animator)
		{
			return default(bool);
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xCFAE64", Offset = "0xCFAE64", VA = "0xCFAE64")]
		public void BackContinueStage()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xCFB034", Offset = "0xCFB034", VA = "0xCFB034")]
		public SettingPanelAtStage()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class SettingPatternLayer : MonoBehaviour
	{
		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject patternJIS;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject patternKomatsu;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject patternKid;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PatternLayerID pattern;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private PatternLayerID curPattern;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Excavator exScript;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ControllerVirtualManager controllerVirtualScript;

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xCFB03C", Offset = "0xCFB03C", VA = "0xCFB03C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xCFB22C", Offset = "0xCFB22C", VA = "0xCFB22C")]
		public void SetPattern(PatternLayerID _pattern)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xCFB2E4", Offset = "0xCFB2E4", VA = "0xCFB2E4")]
		public void CancelPattern()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xCFB2EC", Offset = "0xCFB2EC", VA = "0xCFB2EC")]
		public void SubmitPattern()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xCFB3F4", Offset = "0xCFB3F4", VA = "0xCFB3F4")]
		public void ChangePattern()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xCFB28C", Offset = "0xCFB28C", VA = "0xCFB28C")]
		private void DeativeAllPartern()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xCFB4EC", Offset = "0xCFB4EC", VA = "0xCFB4EC")]
		public SettingPatternLayer()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class SettingSound : MonoBehaviour
	{
		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject OnSound;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject OffSound;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider soundSlider;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float tempSoundValue;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<AudioSource> list_sound;

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xCFB4F4", Offset = "0xCFB4F4", VA = "0xCFB4F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xCFB5A8", Offset = "0xCFB5A8", VA = "0xCFB5A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xCFB628", Offset = "0xCFB628", VA = "0xCFB628")]
		public void CancelSound()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xCFB7FC", Offset = "0xCFB7FC", VA = "0xCFB7FC")]
		public void ApplySound()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xCFB8C4", Offset = "0xCFB8C4", VA = "0xCFB8C4")]
		public void MuteSound(bool isMute)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xCFB6E8", Offset = "0xCFB6E8", VA = "0xCFB6E8")]
		private void SetSound(float _volume)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xCFB9C0", Offset = "0xCFB9C0", VA = "0xCFB9C0")]
		public SettingSound()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class SettingSpeed : MonoBehaviour
	{
		[Token(Token = "0x14000044")]
		public event Action OnApplySpeed
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xCFB9C8", Offset = "0xCFB9C8", VA = "0xCFB9C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7217B0", Offset = "0x7217B0")]
			add
			{
			}
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xCFBA6C", Offset = "0xCFBA6C", VA = "0xCFBA6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7217C0", Offset = "0x7217C0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action OnCancelSpeed
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0xCFBB10", Offset = "0xCFBB10", VA = "0xCFBB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7217D0", Offset = "0x7217D0")]
			add
			{
			}
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0xCFBBB4", Offset = "0xCFBBB4", VA = "0xCFBBB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7217E0", Offset = "0x7217E0")]
			remove
			{
			}
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xCFBC58", Offset = "0xCFBC58", VA = "0xCFBC58")]
		public void CancelSpeed()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xCFBC6C", Offset = "0xCFBC6C", VA = "0xCFBC6C")]
		public void ApplySpeed()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xCFBC80", Offset = "0xCFBC80", VA = "0xCFBC80")]
		public SettingSpeed()
		{
		}
	}
}
namespace proto
{
	[Token(Token = "0x20003C4")]
	[DebuggerNonUserCode]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714B10", Offset = "0x714B10")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x714B10", Offset = "0x714B10")]
	public sealed class PhoneEvent : GeneratedMessageLite<PhoneEvent, PhoneEvent.Builder>
	{
		[Token(Token = "0x2000566")]
		[DebuggerNonUserCode]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715674", Offset = "0x715674")]
		[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715674", Offset = "0x715674")]
		public static class Types
		{
			[Token(Token = "0x20005DB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715914", Offset = "0x715914")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715914", Offset = "0x715914")]
			public enum Type
			{
				[Token(Token = "0x40021CA")]
				MOTION = 1,
				[Token(Token = "0x40021CB")]
				GYROSCOPE,
				[Token(Token = "0x40021CC")]
				ACCELEROMETER,
				[Token(Token = "0x40021CD")]
				DEPTH_MAP,
				[Token(Token = "0x40021CE")]
				ORIENTATION,
				[Token(Token = "0x40021CF")]
				KEY
			}

			[Token(Token = "0x20005DC")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715974", Offset = "0x715974")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715974", Offset = "0x715974")]
			public sealed class MotionEvent : GeneratedMessageLite<MotionEvent, MotionEvent.Builder>
			{
				[Token(Token = "0x20005E2")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715C14", Offset = "0x715C14")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715C14", Offset = "0x715C14")]
				public static class Types
				{
					[Token(Token = "0x20005E9")]
					[DebuggerNonUserCode]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715F24", Offset = "0x715F24")]
					[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715F24", Offset = "0x715F24")]
					public sealed class Pointer : GeneratedMessageLite<Pointer, Pointer.Builder>
					{
						[Token(Token = "0x20005EA")]
						[DebuggerNonUserCode]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715F94", Offset = "0x715F94")]
						[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715F94", Offset = "0x715F94")]
						public sealed class Builder : GeneratedBuilderLite<Pointer, Builder>
						{
							[Token(Token = "0x4002242")]
							[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
							private bool resultIsReadOnly;

							[Token(Token = "0x4002243")]
							[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
							private Pointer result;

							[Token(Token = "0x17000419")]
							protected override Builder ThisBuilder
							{
								[Token(Token = "0x6002229")]
								[Address(RVA = "0x11316E0", Offset = "0x11316E0", VA = "0x11316E0", Slot = "7")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x1700041A")]
							public override bool IsInitialized
							{
								[Token(Token = "0x600222D")]
								[Address(RVA = "0x1131774", Offset = "0x1131774", VA = "0x1131774", Slot = "8")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x1700041B")]
							protected override Pointer MessageBeingBuilt
							{
								[Token(Token = "0x600222E")]
								[Address(RVA = "0x1131794", Offset = "0x1131794", VA = "0x1131794", Slot = "25")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x1700041C")]
							public override Pointer DefaultInstanceForType
							{
								[Token(Token = "0x6002231")]
								[Address(RVA = "0x1131904", Offset = "0x1131904", VA = "0x1131904", Slot = "9")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x1700041D")]
							public bool HasId
							{
								[Token(Token = "0x6002237")]
								[Address(RVA = "0x1132074", Offset = "0x1132074", VA = "0x1132074")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x1700041E")]
							public int Id
							{
								[Token(Token = "0x6002238")]
								[Address(RVA = "0x1132090", Offset = "0x1132090", VA = "0x1132090")]
								get
								{
									return default(int);
								}
								[Token(Token = "0x6002239")]
								[Address(RVA = "0x1131B90", Offset = "0x1131B90", VA = "0x1131B90")]
								set
								{
								}
							}

							[Token(Token = "0x1700041F")]
							public bool HasNormalizedX
							{
								[Token(Token = "0x600223C")]
								[Address(RVA = "0x1132134", Offset = "0x1132134", VA = "0x1132134")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x17000420")]
							public float NormalizedX
							{
								[Token(Token = "0x600223D")]
								[Address(RVA = "0x1132150", Offset = "0x1132150", VA = "0x1132150")]
								get
								{
									return default(float);
								}
								[Token(Token = "0x600223E")]
								[Address(RVA = "0x1131B94", Offset = "0x1131B94", VA = "0x1131B94")]
								set
								{
								}
							}

							[Token(Token = "0x17000421")]
							public bool HasNormalizedY
							{
								[Token(Token = "0x6002241")]
								[Address(RVA = "0x11321FC", Offset = "0x11321FC", VA = "0x11321FC")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x17000422")]
							public float NormalizedY
							{
								[Token(Token = "0x6002242")]
								[Address(RVA = "0x1132218", Offset = "0x1132218", VA = "0x1132218")]
								get
								{
									return default(float);
								}
								[Token(Token = "0x6002243")]
								[Address(RVA = "0x1131B98", Offset = "0x1131B98", VA = "0x1131B98")]
								set
								{
								}
							}

							[Token(Token = "0x600222A")]
							[Address(RVA = "0x11312DC", Offset = "0x11312DC", VA = "0x11312DC")]
							public Builder()
							{
							}

							[Token(Token = "0x600222B")]
							[Address(RVA = "0x11314C8", Offset = "0x11314C8", VA = "0x11314C8")]
							internal Builder(Pointer cloneFrom)
							{
							}

							[Token(Token = "0x600222C")]
							[Address(RVA = "0x11316E4", Offset = "0x11316E4", VA = "0x11316E4")]
							private Pointer PrepareBuilder()
							{
								return null;
							}

							[Token(Token = "0x600222F")]
							[Address(RVA = "0x1131798", Offset = "0x1131798", VA = "0x1131798", Slot = "10")]
							public override Builder Clear()
							{
								return null;
							}

							[Token(Token = "0x6002230")]
							[Address(RVA = "0x1131858", Offset = "0x1131858", VA = "0x1131858", Slot = "11")]
							public override Builder Clone()
							{
								return null;
							}

							[Token(Token = "0x6002232")]
							[Address(RVA = "0x11319A8", Offset = "0x11319A8", VA = "0x11319A8", Slot = "13")]
							public override Pointer BuildPartial()
							{
								return null;
							}

							[Token(Token = "0x6002233")]
							[Address(RVA = "0x11319DC", Offset = "0x11319DC", VA = "0x11319DC", Slot = "14")]
							public override Builder MergeFrom(IMessageLite other)
							{
								return null;
							}

							[Token(Token = "0x6002234")]
							[Address(RVA = "0x1131A84", Offset = "0x1131A84", VA = "0x1131A84", Slot = "26")]
							public override Builder MergeFrom(Pointer other)
							{
								return null;
							}

							[Token(Token = "0x6002235")]
							[Address(RVA = "0x1131B9C", Offset = "0x1131B9C", VA = "0x1131B9C", Slot = "16")]
							public override Builder MergeFrom(ICodedInputStream input)
							{
								return null;
							}

							[Token(Token = "0x6002236")]
							[Address(RVA = "0x1131C64", Offset = "0x1131C64", VA = "0x1131C64", Slot = "15")]
							public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
							{
								return null;
							}

							[Token(Token = "0x600223A")]
							[Address(RVA = "0x11320AC", Offset = "0x11320AC", VA = "0x11320AC")]
							public Builder SetId(int value)
							{
								return null;
							}

							[Token(Token = "0x600223B")]
							[Address(RVA = "0x11320F4", Offset = "0x11320F4", VA = "0x11320F4")]
							public Builder ClearId()
							{
								return null;
							}

							[Token(Token = "0x600223F")]
							[Address(RVA = "0x113216C", Offset = "0x113216C", VA = "0x113216C")]
							public Builder SetNormalizedX(float value)
							{
								return null;
							}

							[Token(Token = "0x6002240")]
							[Address(RVA = "0x11321BC", Offset = "0x11321BC", VA = "0x11321BC")]
							public Builder ClearNormalizedX()
							{
								return null;
							}

							[Token(Token = "0x6002244")]
							[Address(RVA = "0x1132234", Offset = "0x1132234", VA = "0x1132234")]
							public Builder SetNormalizedY(float value)
							{
								return null;
							}

							[Token(Token = "0x6002245")]
							[Address(RVA = "0x1132284", Offset = "0x1132284", VA = "0x1132284")]
							public Builder ClearNormalizedY()
							{
								return null;
							}
						}

						[Token(Token = "0x4002235")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
						private static readonly Pointer defaultInstance;

						[Token(Token = "0x4002236")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
						private static readonly string[] _pointerFieldNames;

						[Token(Token = "0x4002237")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
						private static readonly uint[] _pointerFieldTags;

						[Token(Token = "0x4002238")]
						public const int IdFieldNumber = 1;

						[Token(Token = "0x4002239")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
						private bool hasId;

						[Token(Token = "0x400223A")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
						private int id_;

						[Token(Token = "0x400223B")]
						public const int NormalizedXFieldNumber = 2;

						[Token(Token = "0x400223C")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
						private bool hasNormalizedX;

						[Token(Token = "0x400223D")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
						private float normalizedX_;

						[Token(Token = "0x400223E")]
						public const int NormalizedYFieldNumber = 3;

						[Token(Token = "0x400223F")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
						private bool hasNormalizedY;

						[Token(Token = "0x4002240")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
						private float normalizedY_;

						[Token(Token = "0x4002241")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
						private int memoizedSerializedSize;

						[Token(Token = "0x1700040E")]
						public static Pointer DefaultInstance
						{
							[Token(Token = "0x600220A")]
							[Address(RVA = "0x11304D8", Offset = "0x11304D8", VA = "0x11304D8")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x1700040F")]
						public override Pointer DefaultInstanceForType
						{
							[Token(Token = "0x600220B")]
							[Address(RVA = "0x1130540", Offset = "0x1130540", VA = "0x1130540", Slot = "9")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x17000410")]
						protected override Pointer ThisMessage
						{
							[Token(Token = "0x600220C")]
							[Address(RVA = "0x11305E4", Offset = "0x11305E4", VA = "0x11305E4", Slot = "17")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x17000411")]
						public bool HasId
						{
							[Token(Token = "0x600220D")]
							[Address(RVA = "0x11305E8", Offset = "0x11305E8", VA = "0x11305E8")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x17000412")]
						public int Id
						{
							[Token(Token = "0x600220E")]
							[Address(RVA = "0x11305F0", Offset = "0x11305F0", VA = "0x11305F0")]
							get
							{
								return default(int);
							}
						}

						[Token(Token = "0x17000413")]
						public bool HasNormalizedX
						{
							[Token(Token = "0x600220F")]
							[Address(RVA = "0x11305F8", Offset = "0x11305F8", VA = "0x11305F8")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x17000414")]
						public float NormalizedX
						{
							[Token(Token = "0x6002210")]
							[Address(RVA = "0x1130600", Offset = "0x1130600", VA = "0x1130600")]
							get
							{
								return default(float);
							}
						}

						[Token(Token = "0x17000415")]
						public bool HasNormalizedY
						{
							[Token(Token = "0x6002211")]
							[Address(RVA = "0x1130608", Offset = "0x1130608", VA = "0x1130608")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x17000416")]
						public float NormalizedY
						{
							[Token(Token = "0x6002212")]
							[Address(RVA = "0x1130610", Offset = "0x1130610", VA = "0x1130610")]
							get
							{
								return default(float);
							}
						}

						[Token(Token = "0x17000417")]
						public override bool IsInitialized
						{
							[Token(Token = "0x6002213")]
							[Address(RVA = "0x1130618", Offset = "0x1130618", VA = "0x1130618", Slot = "10")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x17000418")]
						public override int SerializedSize
						{
							[Token(Token = "0x6002215")]
							[Address(RVA = "0x1130894", Offset = "0x1130894", VA = "0x1130894", Slot = "11")]
							get
							{
								return default(int);
							}
						}

						[Token(Token = "0x6002209")]
						[Address(RVA = "0x1130480", Offset = "0x1130480", VA = "0x1130480")]
						private Pointer()
						{
						}

						[Token(Token = "0x6002214")]
						[Address(RVA = "0x1130620", Offset = "0x1130620", VA = "0x1130620", Slot = "14")]
						public override void WriteTo(ICodedOutputStream output)
						{
						}

						[Token(Token = "0x6002216")]
						[Address(RVA = "0x11309B8", Offset = "0x11309B8", VA = "0x11309B8", Slot = "2")]
						public override int GetHashCode()
						{
							return default(int);
						}

						[Token(Token = "0x6002217")]
						[Address(RVA = "0x1130A40", Offset = "0x1130A40", VA = "0x1130A40", Slot = "0")]
						public override bool Equals(object obj)
						{
							return default(bool);
						}

						[Token(Token = "0x6002218")]
						[Address(RVA = "0x1130B68", Offset = "0x1130B68", VA = "0x1130B68", Slot = "15")]
						public override void PrintTo(TextWriter writer)
						{
						}

						[Token(Token = "0x6002219")]
						[Address(RVA = "0x1130C90", Offset = "0x1130C90", VA = "0x1130C90")]
						public static Pointer ParseFrom(ByteString data)
						{
							return null;
						}

						[Token(Token = "0x600221A")]
						[Address(RVA = "0x1130D78", Offset = "0x1130D78", VA = "0x1130D78")]
						public static Pointer ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x600221B")]
						[Address(RVA = "0x1130E18", Offset = "0x1130E18", VA = "0x1130E18")]
						public static Pointer ParseFrom(byte[] data)
						{
							return null;
						}

						[Token(Token = "0x600221C")]
						[Address(RVA = "0x1130EA8", Offset = "0x1130EA8", VA = "0x1130EA8")]
						public static Pointer ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x600221D")]
						[Address(RVA = "0x1130F48", Offset = "0x1130F48", VA = "0x1130F48")]
						public static Pointer ParseFrom(Stream input)
						{
							return null;
						}

						[Token(Token = "0x600221E")]
						[Address(RVA = "0x1130FD8", Offset = "0x1130FD8", VA = "0x1130FD8")]
						public static Pointer ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x600221F")]
						[Address(RVA = "0x1131078", Offset = "0x1131078", VA = "0x1131078")]
						public static Pointer ParseDelimitedFrom(Stream input)
						{
							return null;
						}

						[Token(Token = "0x6002220")]
						[Address(RVA = "0x1131108", Offset = "0x1131108", VA = "0x1131108")]
						public static Pointer ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x6002221")]
						[Address(RVA = "0x11311A8", Offset = "0x11311A8", VA = "0x11311A8")]
						public static Pointer ParseFrom(ICodedInputStream input)
						{
							return null;
						}

						[Token(Token = "0x6002222")]
						[Address(RVA = "0x1131238", Offset = "0x1131238", VA = "0x1131238")]
						public static Pointer ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x6002223")]
						[Address(RVA = "0x11312D8", Offset = "0x11312D8", VA = "0x11312D8")]
						private Pointer MakeReadOnly()
						{
							return null;
						}

						[Token(Token = "0x6002224")]
						[Address(RVA = "0x1130D20", Offset = "0x1130D20", VA = "0x1130D20")]
						public static Builder CreateBuilder()
						{
							return null;
						}

						[Token(Token = "0x6002225")]
						[Address(RVA = "0x11313AC", Offset = "0x11313AC", VA = "0x11313AC", Slot = "13")]
						public override Builder ToBuilder()
						{
							return null;
						}

						[Token(Token = "0x6002226")]
						[Address(RVA = "0x1131470", Offset = "0x1131470", VA = "0x1131470", Slot = "12")]
						public override Builder CreateBuilderForType()
						{
							return null;
						}

						[Token(Token = "0x6002227")]
						[Address(RVA = "0x1131410", Offset = "0x1131410", VA = "0x1131410")]
						public static Builder CreateBuilder(Pointer prototype)
						{
							return null;
						}

						[Token(Token = "0x6002228")]
						[Address(RVA = "0x1131534", Offset = "0x1131534", VA = "0x1131534")]
						static Pointer()
						{
						}
					}
				}

				[Token(Token = "0x20005E3")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715C84", Offset = "0x715C84")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715C84", Offset = "0x715C84")]
				public sealed class Builder : GeneratedBuilderLite<MotionEvent, Builder>
				{
					[Token(Token = "0x4002229")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x400222A")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private MotionEvent result;

					[Token(Token = "0x170003CA")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6002141")]
						[Address(RVA = "0x112F4BC", Offset = "0x112F4BC", VA = "0x112F4BC", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003CB")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6002145")]
						[Address(RVA = "0x112F550", Offset = "0x112F550", VA = "0x112F550", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003CC")]
					protected override MotionEvent MessageBeingBuilt
					{
						[Token(Token = "0x6002146")]
						[Address(RVA = "0x112F570", Offset = "0x112F570", VA = "0x112F570", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003CD")]
					public override MotionEvent DefaultInstanceForType
					{
						[Token(Token = "0x6002149")]
						[Address(RVA = "0x112F6E0", Offset = "0x112F6E0", VA = "0x112F6E0", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003CE")]
					public bool HasTimestamp
					{
						[Token(Token = "0x600214F")]
						[Address(RVA = "0x112FF20", Offset = "0x112FF20", VA = "0x112FF20")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003CF")]
					public long Timestamp
					{
						[Token(Token = "0x6002150")]
						[Address(RVA = "0x112FF3C", Offset = "0x112FF3C", VA = "0x112FF3C")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x6002151")]
						[Address(RVA = "0x112F998", Offset = "0x112F998", VA = "0x112F998")]
						set
						{
						}
					}

					[Token(Token = "0x170003D0")]
					public bool HasAction
					{
						[Token(Token = "0x6002154")]
						[Address(RVA = "0x112FFE0", Offset = "0x112FFE0", VA = "0x112FFE0")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003D1")]
					public int Action
					{
						[Token(Token = "0x6002155")]
						[Address(RVA = "0x112FFFC", Offset = "0x112FFFC", VA = "0x112FFFC")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6002156")]
						[Address(RVA = "0x112F99C", Offset = "0x112F99C", VA = "0x112F99C")]
						set
						{
						}
					}

					[Token(Token = "0x170003D2")]
					public IPopsicleList<Types.Pointer> PointersList
					{
						[Token(Token = "0x6002159")]
						[Address(RVA = "0x11300A0", Offset = "0x11300A0", VA = "0x11300A0")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003D3")]
					public int PointersCount
					{
						[Token(Token = "0x600215A")]
						[Address(RVA = "0x11300C0", Offset = "0x11300C0", VA = "0x11300C0")]
						get
						{
							return default(int);
						}
					}

					[Token(Token = "0x6002142")]
					[Address(RVA = "0x112F110", Offset = "0x112F110", VA = "0x112F110")]
					public Builder()
					{
					}

					[Token(Token = "0x6002143")]
					[Address(RVA = "0x112F29C", Offset = "0x112F29C", VA = "0x112F29C")]
					internal Builder(MotionEvent cloneFrom)
					{
					}

					[Token(Token = "0x6002144")]
					[Address(RVA = "0x112F4C0", Offset = "0x112F4C0", VA = "0x112F4C0")]
					private MotionEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6002147")]
					[Address(RVA = "0x112F574", Offset = "0x112F574", VA = "0x112F574", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6002148")]
					[Address(RVA = "0x112F634", Offset = "0x112F634", VA = "0x112F634", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x600214A")]
					[Address(RVA = "0x112F784", Offset = "0x112F784", VA = "0x112F784", Slot = "13")]
					public override MotionEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x600214B")]
					[Address(RVA = "0x112F7B8", Offset = "0x112F7B8", VA = "0x112F7B8", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x600214C")]
					[Address(RVA = "0x112F860", Offset = "0x112F860", VA = "0x112F860", Slot = "26")]
					public override Builder MergeFrom(MotionEvent other)
					{
						return null;
					}

					[Token(Token = "0x600214D")]
					[Address(RVA = "0x112F9A0", Offset = "0x112F9A0", VA = "0x112F9A0", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x600214E")]
					[Address(RVA = "0x112FA68", Offset = "0x112FA68", VA = "0x112FA68", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002152")]
					[Address(RVA = "0x112FF58", Offset = "0x112FF58", VA = "0x112FF58")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6002153")]
					[Address(RVA = "0x112FFA0", Offset = "0x112FFA0", VA = "0x112FFA0")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6002157")]
					[Address(RVA = "0x1130018", Offset = "0x1130018", VA = "0x1130018")]
					public Builder SetAction(int value)
					{
						return null;
					}

					[Token(Token = "0x6002158")]
					[Address(RVA = "0x1130060", Offset = "0x1130060", VA = "0x1130060")]
					public Builder ClearAction()
					{
						return null;
					}

					[Token(Token = "0x600215B")]
					[Address(RVA = "0x11300D8", Offset = "0x11300D8", VA = "0x11300D8")]
					public Types.Pointer GetPointers(int index)
					{
						return null;
					}

					[Token(Token = "0x600215C")]
					[Address(RVA = "0x11300F0", Offset = "0x11300F0", VA = "0x11300F0")]
					public Builder SetPointers(int index, Types.Pointer value)
					{
						return null;
					}

					[Token(Token = "0x600215D")]
					[Address(RVA = "0x1130190", Offset = "0x1130190", VA = "0x1130190")]
					public Builder SetPointers(int index, Types.Pointer.Builder builderForValue)
					{
						return null;
					}

					[Token(Token = "0x600215E")]
					[Address(RVA = "0x1130248", Offset = "0x1130248", VA = "0x1130248")]
					public Builder AddPointers(Types.Pointer value)
					{
						return null;
					}

					[Token(Token = "0x600215F")]
					[Address(RVA = "0x11302E0", Offset = "0x11302E0", VA = "0x11302E0")]
					public Builder AddPointers(Types.Pointer.Builder builderForValue)
					{
						return null;
					}

					[Token(Token = "0x6002160")]
					[Address(RVA = "0x1130390", Offset = "0x1130390", VA = "0x1130390")]
					public Builder AddRangePointers(IEnumerable<Types.Pointer> values)
					{
						return null;
					}

					[Token(Token = "0x6002161")]
					[Address(RVA = "0x1130410", Offset = "0x1130410", VA = "0x1130410")]
					public Builder ClearPointers()
					{
						return null;
					}
				}

				[Token(Token = "0x40021D0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly MotionEvent defaultInstance;

				[Token(Token = "0x40021D1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _motionEventFieldNames;

				[Token(Token = "0x40021D2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _motionEventFieldTags;

				[Token(Token = "0x40021D3")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x40021D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x40021D5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x40021D6")]
				public const int ActionFieldNumber = 2;

				[Token(Token = "0x40021D7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasAction;

				[Token(Token = "0x40021D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private int action_;

				[Token(Token = "0x40021D9")]
				public const int PointersFieldNumber = 3;

				[Token(Token = "0x40021DA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private PopsicleList<Types.Pointer> pointers_;

				[Token(Token = "0x40021DB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000380")]
				public static MotionEvent DefaultInstance
				{
					[Token(Token = "0x6002078")]
					[Address(RVA = "0x112DDD8", Offset = "0x112DDD8", VA = "0x112DDD8")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000381")]
				public override MotionEvent DefaultInstanceForType
				{
					[Token(Token = "0x6002079")]
					[Address(RVA = "0x112DE40", Offset = "0x112DE40", VA = "0x112DE40", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000382")]
				protected override MotionEvent ThisMessage
				{
					[Token(Token = "0x600207A")]
					[Address(RVA = "0x112DEE4", Offset = "0x112DEE4", VA = "0x112DEE4", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000383")]
				public bool HasTimestamp
				{
					[Token(Token = "0x600207B")]
					[Address(RVA = "0x112DEE8", Offset = "0x112DEE8", VA = "0x112DEE8")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000384")]
				public long Timestamp
				{
					[Token(Token = "0x600207C")]
					[Address(RVA = "0x112DEF0", Offset = "0x112DEF0", VA = "0x112DEF0")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x17000385")]
				public bool HasAction
				{
					[Token(Token = "0x600207D")]
					[Address(RVA = "0x112DEF8", Offset = "0x112DEF8", VA = "0x112DEF8")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000386")]
				public int Action
				{
					[Token(Token = "0x600207E")]
					[Address(RVA = "0x112DF00", Offset = "0x112DF00", VA = "0x112DF00")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000387")]
				public IList<Types.Pointer> PointersList
				{
					[Token(Token = "0x600207F")]
					[Address(RVA = "0x112DF08", Offset = "0x112DF08", VA = "0x112DF08")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000388")]
				public int PointersCount
				{
					[Token(Token = "0x6002080")]
					[Address(RVA = "0x112DF10", Offset = "0x112DF10", VA = "0x112DF10")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000389")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6002082")]
					[Address(RVA = "0x112DFD0", Offset = "0x112DFD0", VA = "0x112DFD0", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700038A")]
				public override int SerializedSize
				{
					[Token(Token = "0x6002084")]
					[Address(RVA = "0x112E274", Offset = "0x112E274", VA = "0x112E274", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002077")]
				[Address(RVA = "0x112DD58", Offset = "0x112DD58", VA = "0x112DD58")]
				private MotionEvent()
				{
				}

				[Token(Token = "0x6002081")]
				[Address(RVA = "0x112DF68", Offset = "0x112DF68", VA = "0x112DF68")]
				public Types.Pointer GetPointers(int index)
				{
					return null;
				}

				[Token(Token = "0x6002083")]
				[Address(RVA = "0x112DFD8", Offset = "0x112DFD8", VA = "0x112DFD8", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6002085")]
				[Address(RVA = "0x112E5A8", Offset = "0x112E5A8", VA = "0x112E5A8", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6002086")]
				[Address(RVA = "0x112E80C", Offset = "0x112E80C", VA = "0x112E80C", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6002087")]
				[Address(RVA = "0x112E9B8", Offset = "0x112E9B8", VA = "0x112E9B8", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6002088")]
				[Address(RVA = "0x112EAC0", Offset = "0x112EAC0", VA = "0x112EAC0")]
				public static MotionEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6002089")]
				[Address(RVA = "0x112EB50", Offset = "0x112EB50", VA = "0x112EB50")]
				public static MotionEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600208A")]
				[Address(RVA = "0x112EBF0", Offset = "0x112EBF0", VA = "0x112EBF0")]
				public static MotionEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x600208B")]
				[Address(RVA = "0x112EC80", Offset = "0x112EC80", VA = "0x112EC80")]
				public static MotionEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600208C")]
				[Address(RVA = "0x112ED20", Offset = "0x112ED20", VA = "0x112ED20")]
				public static MotionEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x600208D")]
				[Address(RVA = "0x112EDB0", Offset = "0x112EDB0", VA = "0x112EDB0")]
				public static MotionEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600208E")]
				[Address(RVA = "0x112EE50", Offset = "0x112EE50", VA = "0x112EE50")]
				public static MotionEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x600208F")]
				[Address(RVA = "0x112EEE0", Offset = "0x112EEE0", VA = "0x112EEE0")]
				public static MotionEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002090")]
				[Address(RVA = "0x112EF80", Offset = "0x112EF80", VA = "0x112EF80")]
				public static MotionEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6002091")]
				[Address(RVA = "0x112F010", Offset = "0x112F010", VA = "0x112F010")]
				public static MotionEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002092")]
				[Address(RVA = "0x112F0B0", Offset = "0x112F0B0", VA = "0x112F0B0")]
				private MotionEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6002093")]
				[Address(RVA = "0x1124C14", Offset = "0x1124C14", VA = "0x1124C14")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002094")]
				[Address(RVA = "0x112F1E0", Offset = "0x112F1E0", VA = "0x112F1E0", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002095")]
				[Address(RVA = "0x112F244", Offset = "0x112F244", VA = "0x112F244", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6002096")]
				[Address(RVA = "0x11250E0", Offset = "0x11250E0", VA = "0x11250E0")]
				public static Builder CreateBuilder(MotionEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6002097")]
				[Address(RVA = "0x112F308", Offset = "0x112F308", VA = "0x112F308")]
				static MotionEvent()
				{
				}
			}

			[Token(Token = "0x20005DD")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7159E4", Offset = "0x7159E4")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7159E4", Offset = "0x7159E4")]
			public sealed class GyroscopeEvent : GeneratedMessageLite<GyroscopeEvent, GyroscopeEvent.Builder>
			{
				[Token(Token = "0x20005E4")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715CF4", Offset = "0x715CF4")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715CF4", Offset = "0x715CF4")]
				public sealed class Builder : GeneratedBuilderLite<GyroscopeEvent, Builder>
				{
					[Token(Token = "0x400222B")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x400222C")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private GyroscopeEvent result;

					[Token(Token = "0x170003D4")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6002162")]
						[Address(RVA = "0x112B5AC", Offset = "0x112B5AC", VA = "0x112B5AC", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003D5")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6002166")]
						[Address(RVA = "0x112B640", Offset = "0x112B640", VA = "0x112B640", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003D6")]
					protected override GyroscopeEvent MessageBeingBuilt
					{
						[Token(Token = "0x6002167")]
						[Address(RVA = "0x112B660", Offset = "0x112B660", VA = "0x112B660", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003D7")]
					public override GyroscopeEvent DefaultInstanceForType
					{
						[Token(Token = "0x600216A")]
						[Address(RVA = "0x112B7D0", Offset = "0x112B7D0", VA = "0x112B7D0", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003D8")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6002170")]
						[Address(RVA = "0x112BFE0", Offset = "0x112BFE0", VA = "0x112BFE0")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003D9")]
					public long Timestamp
					{
						[Token(Token = "0x6002171")]
						[Address(RVA = "0x112BFFC", Offset = "0x112BFFC", VA = "0x112BFFC")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x6002172")]
						[Address(RVA = "0x112BA70", Offset = "0x112BA70", VA = "0x112BA70")]
						set
						{
						}
					}

					[Token(Token = "0x170003DA")]
					public bool HasX
					{
						[Token(Token = "0x6002175")]
						[Address(RVA = "0x112C0A0", Offset = "0x112C0A0", VA = "0x112C0A0")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003DB")]
					public float X
					{
						[Token(Token = "0x6002176")]
						[Address(RVA = "0x112C0BC", Offset = "0x112C0BC", VA = "0x112C0BC")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002177")]
						[Address(RVA = "0x112BA74", Offset = "0x112BA74", VA = "0x112BA74")]
						set
						{
						}
					}

					[Token(Token = "0x170003DC")]
					public bool HasY
					{
						[Token(Token = "0x600217A")]
						[Address(RVA = "0x112C168", Offset = "0x112C168", VA = "0x112C168")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003DD")]
					public float Y
					{
						[Token(Token = "0x600217B")]
						[Address(RVA = "0x112C184", Offset = "0x112C184", VA = "0x112C184")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x600217C")]
						[Address(RVA = "0x112BA78", Offset = "0x112BA78", VA = "0x112BA78")]
						set
						{
						}
					}

					[Token(Token = "0x170003DE")]
					public bool HasZ
					{
						[Token(Token = "0x600217F")]
						[Address(RVA = "0x112C230", Offset = "0x112C230", VA = "0x112C230")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003DF")]
					public float Z
					{
						[Token(Token = "0x6002180")]
						[Address(RVA = "0x112C24C", Offset = "0x112C24C", VA = "0x112C24C")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002181")]
						[Address(RVA = "0x112BA7C", Offset = "0x112BA7C", VA = "0x112BA7C")]
						set
						{
						}
					}

					[Token(Token = "0x6002163")]
					[Address(RVA = "0x112B1D4", Offset = "0x112B1D4", VA = "0x112B1D4")]
					public Builder()
					{
					}

					[Token(Token = "0x6002164")]
					[Address(RVA = "0x112B360", Offset = "0x112B360", VA = "0x112B360")]
					internal Builder(GyroscopeEvent cloneFrom)
					{
					}

					[Token(Token = "0x6002165")]
					[Address(RVA = "0x112B5B0", Offset = "0x112B5B0", VA = "0x112B5B0")]
					private GyroscopeEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6002168")]
					[Address(RVA = "0x112B664", Offset = "0x112B664", VA = "0x112B664", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6002169")]
					[Address(RVA = "0x112B724", Offset = "0x112B724", VA = "0x112B724", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x600216B")]
					[Address(RVA = "0x112B874", Offset = "0x112B874", VA = "0x112B874", Slot = "13")]
					public override GyroscopeEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x600216C")]
					[Address(RVA = "0x112B8A8", Offset = "0x112B8A8", VA = "0x112B8A8", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x600216D")]
					[Address(RVA = "0x112B950", Offset = "0x112B950", VA = "0x112B950", Slot = "26")]
					public override Builder MergeFrom(GyroscopeEvent other)
					{
						return null;
					}

					[Token(Token = "0x600216E")]
					[Address(RVA = "0x112BA80", Offset = "0x112BA80", VA = "0x112BA80", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x600216F")]
					[Address(RVA = "0x112BB48", Offset = "0x112BB48", VA = "0x112BB48", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002173")]
					[Address(RVA = "0x112C018", Offset = "0x112C018", VA = "0x112C018")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6002174")]
					[Address(RVA = "0x112C060", Offset = "0x112C060", VA = "0x112C060")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6002178")]
					[Address(RVA = "0x112C0D8", Offset = "0x112C0D8", VA = "0x112C0D8")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x6002179")]
					[Address(RVA = "0x112C128", Offset = "0x112C128", VA = "0x112C128")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x600217D")]
					[Address(RVA = "0x112C1A0", Offset = "0x112C1A0", VA = "0x112C1A0")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x600217E")]
					[Address(RVA = "0x112C1F0", Offset = "0x112C1F0", VA = "0x112C1F0")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x6002182")]
					[Address(RVA = "0x112C268", Offset = "0x112C268", VA = "0x112C268")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x6002183")]
					[Address(RVA = "0x112C2B8", Offset = "0x112C2B8", VA = "0x112C2B8")]
					public Builder ClearZ()
					{
						return null;
					}
				}

				[Token(Token = "0x40021DC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly GyroscopeEvent defaultInstance;

				[Token(Token = "0x40021DD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _gyroscopeEventFieldNames;

				[Token(Token = "0x40021DE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _gyroscopeEventFieldTags;

				[Token(Token = "0x40021DF")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x40021E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x40021E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x40021E2")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x40021E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasX;

				[Token(Token = "0x40021E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float x_;

				[Token(Token = "0x40021E5")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x40021E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasY;

				[Token(Token = "0x40021E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float y_;

				[Token(Token = "0x40021E8")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x40021E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasZ;

				[Token(Token = "0x40021EA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float z_;

				[Token(Token = "0x40021EB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int memoizedSerializedSize;

				[Token(Token = "0x1700038B")]
				public static GyroscopeEvent DefaultInstance
				{
					[Token(Token = "0x6002099")]
					[Address(RVA = "0x112A2B4", Offset = "0x112A2B4", VA = "0x112A2B4")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700038C")]
				public override GyroscopeEvent DefaultInstanceForType
				{
					[Token(Token = "0x600209A")]
					[Address(RVA = "0x112A31C", Offset = "0x112A31C", VA = "0x112A31C", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700038D")]
				protected override GyroscopeEvent ThisMessage
				{
					[Token(Token = "0x600209B")]
					[Address(RVA = "0x112A3C0", Offset = "0x112A3C0", VA = "0x112A3C0", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700038E")]
				public bool HasTimestamp
				{
					[Token(Token = "0x600209C")]
					[Address(RVA = "0x112A3C4", Offset = "0x112A3C4", VA = "0x112A3C4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700038F")]
				public long Timestamp
				{
					[Token(Token = "0x600209D")]
					[Address(RVA = "0x112A3CC", Offset = "0x112A3CC", VA = "0x112A3CC")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x17000390")]
				public bool HasX
				{
					[Token(Token = "0x600209E")]
					[Address(RVA = "0x112A3D4", Offset = "0x112A3D4", VA = "0x112A3D4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000391")]
				public float X
				{
					[Token(Token = "0x600209F")]
					[Address(RVA = "0x112A3DC", Offset = "0x112A3DC", VA = "0x112A3DC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000392")]
				public bool HasY
				{
					[Token(Token = "0x60020A0")]
					[Address(RVA = "0x112A3E4", Offset = "0x112A3E4", VA = "0x112A3E4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000393")]
				public float Y
				{
					[Token(Token = "0x60020A1")]
					[Address(RVA = "0x112A3EC", Offset = "0x112A3EC", VA = "0x112A3EC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000394")]
				public bool HasZ
				{
					[Token(Token = "0x60020A2")]
					[Address(RVA = "0x112A3F4", Offset = "0x112A3F4", VA = "0x112A3F4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000395")]
				public float Z
				{
					[Token(Token = "0x60020A3")]
					[Address(RVA = "0x112A3FC", Offset = "0x112A3FC", VA = "0x112A3FC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000396")]
				public override bool IsInitialized
				{
					[Token(Token = "0x60020A4")]
					[Address(RVA = "0x112A404", Offset = "0x112A404", VA = "0x112A404", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000397")]
				public override int SerializedSize
				{
					[Token(Token = "0x60020A6")]
					[Address(RVA = "0x112A718", Offset = "0x112A718", VA = "0x112A718", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002098")]
				[Address(RVA = "0x112A25C", Offset = "0x112A25C", VA = "0x112A25C")]
				private GyroscopeEvent()
				{
				}

				[Token(Token = "0x60020A5")]
				[Address(RVA = "0x112A40C", Offset = "0x112A40C", VA = "0x112A40C", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x60020A7")]
				[Address(RVA = "0x112A87C", Offset = "0x112A87C", VA = "0x112A87C", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x60020A8")]
				[Address(RVA = "0x112A91C", Offset = "0x112A91C", VA = "0x112A91C", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x60020A9")]
				[Address(RVA = "0x112AA7C", Offset = "0x112AA7C", VA = "0x112AA7C", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x60020AA")]
				[Address(RVA = "0x112ABE0", Offset = "0x112ABE0", VA = "0x112ABE0")]
				public static GyroscopeEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x60020AB")]
				[Address(RVA = "0x112AC70", Offset = "0x112AC70", VA = "0x112AC70")]
				public static GyroscopeEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020AC")]
				[Address(RVA = "0x112AD10", Offset = "0x112AD10", VA = "0x112AD10")]
				public static GyroscopeEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x60020AD")]
				[Address(RVA = "0x112ADA0", Offset = "0x112ADA0", VA = "0x112ADA0")]
				public static GyroscopeEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020AE")]
				[Address(RVA = "0x112AE40", Offset = "0x112AE40", VA = "0x112AE40")]
				public static GyroscopeEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60020AF")]
				[Address(RVA = "0x112AED0", Offset = "0x112AED0", VA = "0x112AED0")]
				public static GyroscopeEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020B0")]
				[Address(RVA = "0x112AF70", Offset = "0x112AF70", VA = "0x112AF70")]
				public static GyroscopeEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60020B1")]
				[Address(RVA = "0x112B000", Offset = "0x112B000", VA = "0x112B000")]
				public static GyroscopeEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020B2")]
				[Address(RVA = "0x112B0A0", Offset = "0x112B0A0", VA = "0x112B0A0")]
				public static GyroscopeEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x60020B3")]
				[Address(RVA = "0x112B130", Offset = "0x112B130", VA = "0x112B130")]
				public static GyroscopeEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020B4")]
				[Address(RVA = "0x112B1D0", Offset = "0x112B1D0", VA = "0x112B1D0")]
				private GyroscopeEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x60020B5")]
				[Address(RVA = "0x1124C88", Offset = "0x1124C88", VA = "0x1124C88")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x60020B6")]
				[Address(RVA = "0x112B2A4", Offset = "0x112B2A4", VA = "0x112B2A4", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x60020B7")]
				[Address(RVA = "0x112B308", Offset = "0x112B308", VA = "0x112B308", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x60020B8")]
				[Address(RVA = "0x11252D0", Offset = "0x11252D0", VA = "0x11252D0")]
				public static Builder CreateBuilder(GyroscopeEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x60020B9")]
				[Address(RVA = "0x112B3CC", Offset = "0x112B3CC", VA = "0x112B3CC")]
				static GyroscopeEvent()
				{
				}
			}

			[Token(Token = "0x20005DE")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715A54", Offset = "0x715A54")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715A54", Offset = "0x715A54")]
			public sealed class AccelerometerEvent : GeneratedMessageLite<AccelerometerEvent, AccelerometerEvent.Builder>
			{
				[Token(Token = "0x20005E5")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715D64", Offset = "0x715D64")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715D64", Offset = "0x715D64")]
				public sealed class Builder : GeneratedBuilderLite<AccelerometerEvent, Builder>
				{
					[Token(Token = "0x400222D")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x400222E")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private AccelerometerEvent result;

					[Token(Token = "0x170003E0")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6002184")]
						[Address(RVA = "0x1126E80", Offset = "0x1126E80", VA = "0x1126E80", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003E1")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6002188")]
						[Address(RVA = "0x1126F14", Offset = "0x1126F14", VA = "0x1126F14", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003E2")]
					protected override AccelerometerEvent MessageBeingBuilt
					{
						[Token(Token = "0x6002189")]
						[Address(RVA = "0x1126F34", Offset = "0x1126F34", VA = "0x1126F34", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003E3")]
					public override AccelerometerEvent DefaultInstanceForType
					{
						[Token(Token = "0x600218C")]
						[Address(RVA = "0x11270A4", Offset = "0x11270A4", VA = "0x11270A4", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003E4")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6002192")]
						[Address(RVA = "0x11278B4", Offset = "0x11278B4", VA = "0x11278B4")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003E5")]
					public long Timestamp
					{
						[Token(Token = "0x6002193")]
						[Address(RVA = "0x11278D0", Offset = "0x11278D0", VA = "0x11278D0")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x6002194")]
						[Address(RVA = "0x1127344", Offset = "0x1127344", VA = "0x1127344")]
						set
						{
						}
					}

					[Token(Token = "0x170003E6")]
					public bool HasX
					{
						[Token(Token = "0x6002197")]
						[Address(RVA = "0x1127974", Offset = "0x1127974", VA = "0x1127974")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003E7")]
					public float X
					{
						[Token(Token = "0x6002198")]
						[Address(RVA = "0x1127990", Offset = "0x1127990", VA = "0x1127990")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002199")]
						[Address(RVA = "0x1127348", Offset = "0x1127348", VA = "0x1127348")]
						set
						{
						}
					}

					[Token(Token = "0x170003E8")]
					public bool HasY
					{
						[Token(Token = "0x600219C")]
						[Address(RVA = "0x1127A3C", Offset = "0x1127A3C", VA = "0x1127A3C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003E9")]
					public float Y
					{
						[Token(Token = "0x600219D")]
						[Address(RVA = "0x1127A58", Offset = "0x1127A58", VA = "0x1127A58")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x600219E")]
						[Address(RVA = "0x112734C", Offset = "0x112734C", VA = "0x112734C")]
						set
						{
						}
					}

					[Token(Token = "0x170003EA")]
					public bool HasZ
					{
						[Token(Token = "0x60021A1")]
						[Address(RVA = "0x1127B04", Offset = "0x1127B04", VA = "0x1127B04")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003EB")]
					public float Z
					{
						[Token(Token = "0x60021A2")]
						[Address(RVA = "0x1127B20", Offset = "0x1127B20", VA = "0x1127B20")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60021A3")]
						[Address(RVA = "0x1127350", Offset = "0x1127350", VA = "0x1127350")]
						set
						{
						}
					}

					[Token(Token = "0x6002185")]
					[Address(RVA = "0x1126AA8", Offset = "0x1126AA8", VA = "0x1126AA8")]
					public Builder()
					{
					}

					[Token(Token = "0x6002186")]
					[Address(RVA = "0x1126C34", Offset = "0x1126C34", VA = "0x1126C34")]
					internal Builder(AccelerometerEvent cloneFrom)
					{
					}

					[Token(Token = "0x6002187")]
					[Address(RVA = "0x1126E84", Offset = "0x1126E84", VA = "0x1126E84")]
					private AccelerometerEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x600218A")]
					[Address(RVA = "0x1126F38", Offset = "0x1126F38", VA = "0x1126F38", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x600218B")]
					[Address(RVA = "0x1126FF8", Offset = "0x1126FF8", VA = "0x1126FF8", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x600218D")]
					[Address(RVA = "0x1127148", Offset = "0x1127148", VA = "0x1127148", Slot = "13")]
					public override AccelerometerEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x600218E")]
					[Address(RVA = "0x112717C", Offset = "0x112717C", VA = "0x112717C", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x600218F")]
					[Address(RVA = "0x1127224", Offset = "0x1127224", VA = "0x1127224", Slot = "26")]
					public override Builder MergeFrom(AccelerometerEvent other)
					{
						return null;
					}

					[Token(Token = "0x6002190")]
					[Address(RVA = "0x1127354", Offset = "0x1127354", VA = "0x1127354", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6002191")]
					[Address(RVA = "0x112741C", Offset = "0x112741C", VA = "0x112741C", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002195")]
					[Address(RVA = "0x11278EC", Offset = "0x11278EC", VA = "0x11278EC")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6002196")]
					[Address(RVA = "0x1127934", Offset = "0x1127934", VA = "0x1127934")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x600219A")]
					[Address(RVA = "0x11279AC", Offset = "0x11279AC", VA = "0x11279AC")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x600219B")]
					[Address(RVA = "0x11279FC", Offset = "0x11279FC", VA = "0x11279FC")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x600219F")]
					[Address(RVA = "0x1127A74", Offset = "0x1127A74", VA = "0x1127A74")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x60021A0")]
					[Address(RVA = "0x1127AC4", Offset = "0x1127AC4", VA = "0x1127AC4")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x60021A4")]
					[Address(RVA = "0x1127B3C", Offset = "0x1127B3C", VA = "0x1127B3C")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x60021A5")]
					[Address(RVA = "0x1127B8C", Offset = "0x1127B8C", VA = "0x1127B8C")]
					public Builder ClearZ()
					{
						return null;
					}
				}

				[Token(Token = "0x40021EC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly AccelerometerEvent defaultInstance;

				[Token(Token = "0x40021ED")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _accelerometerEventFieldNames;

				[Token(Token = "0x40021EE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _accelerometerEventFieldTags;

				[Token(Token = "0x40021EF")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x40021F0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x40021F1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x40021F2")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x40021F3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasX;

				[Token(Token = "0x40021F4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float x_;

				[Token(Token = "0x40021F5")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x40021F6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasY;

				[Token(Token = "0x40021F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float y_;

				[Token(Token = "0x40021F8")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x40021F9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasZ;

				[Token(Token = "0x40021FA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float z_;

				[Token(Token = "0x40021FB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000398")]
				public static AccelerometerEvent DefaultInstance
				{
					[Token(Token = "0x60020BB")]
					[Address(RVA = "0x1125B88", Offset = "0x1125B88", VA = "0x1125B88")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000399")]
				public override AccelerometerEvent DefaultInstanceForType
				{
					[Token(Token = "0x60020BC")]
					[Address(RVA = "0x1125BF0", Offset = "0x1125BF0", VA = "0x1125BF0", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700039A")]
				protected override AccelerometerEvent ThisMessage
				{
					[Token(Token = "0x60020BD")]
					[Address(RVA = "0x1125C94", Offset = "0x1125C94", VA = "0x1125C94", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700039B")]
				public bool HasTimestamp
				{
					[Token(Token = "0x60020BE")]
					[Address(RVA = "0x1125C98", Offset = "0x1125C98", VA = "0x1125C98")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700039C")]
				public long Timestamp
				{
					[Token(Token = "0x60020BF")]
					[Address(RVA = "0x1125CA0", Offset = "0x1125CA0", VA = "0x1125CA0")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x1700039D")]
				public bool HasX
				{
					[Token(Token = "0x60020C0")]
					[Address(RVA = "0x1125CA8", Offset = "0x1125CA8", VA = "0x1125CA8")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700039E")]
				public float X
				{
					[Token(Token = "0x60020C1")]
					[Address(RVA = "0x1125CB0", Offset = "0x1125CB0", VA = "0x1125CB0")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700039F")]
				public bool HasY
				{
					[Token(Token = "0x60020C2")]
					[Address(RVA = "0x1125CB8", Offset = "0x1125CB8", VA = "0x1125CB8")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003A0")]
				public float Y
				{
					[Token(Token = "0x60020C3")]
					[Address(RVA = "0x1125CC0", Offset = "0x1125CC0", VA = "0x1125CC0")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170003A1")]
				public bool HasZ
				{
					[Token(Token = "0x60020C4")]
					[Address(RVA = "0x1125CC8", Offset = "0x1125CC8", VA = "0x1125CC8")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003A2")]
				public float Z
				{
					[Token(Token = "0x60020C5")]
					[Address(RVA = "0x1125CD0", Offset = "0x1125CD0", VA = "0x1125CD0")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170003A3")]
				public override bool IsInitialized
				{
					[Token(Token = "0x60020C6")]
					[Address(RVA = "0x1125CD8", Offset = "0x1125CD8", VA = "0x1125CD8", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003A4")]
				public override int SerializedSize
				{
					[Token(Token = "0x60020C8")]
					[Address(RVA = "0x1125FEC", Offset = "0x1125FEC", VA = "0x1125FEC", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60020BA")]
				[Address(RVA = "0x1125B30", Offset = "0x1125B30", VA = "0x1125B30")]
				private AccelerometerEvent()
				{
				}

				[Token(Token = "0x60020C7")]
				[Address(RVA = "0x1125CE0", Offset = "0x1125CE0", VA = "0x1125CE0", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x60020C9")]
				[Address(RVA = "0x1126150", Offset = "0x1126150", VA = "0x1126150", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x60020CA")]
				[Address(RVA = "0x11261F0", Offset = "0x11261F0", VA = "0x11261F0", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x60020CB")]
				[Address(RVA = "0x1126350", Offset = "0x1126350", VA = "0x1126350", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x60020CC")]
				[Address(RVA = "0x11264B4", Offset = "0x11264B4", VA = "0x11264B4")]
				public static AccelerometerEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x60020CD")]
				[Address(RVA = "0x1126544", Offset = "0x1126544", VA = "0x1126544")]
				public static AccelerometerEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020CE")]
				[Address(RVA = "0x11265E4", Offset = "0x11265E4", VA = "0x11265E4")]
				public static AccelerometerEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x60020CF")]
				[Address(RVA = "0x1126674", Offset = "0x1126674", VA = "0x1126674")]
				public static AccelerometerEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020D0")]
				[Address(RVA = "0x1126714", Offset = "0x1126714", VA = "0x1126714")]
				public static AccelerometerEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60020D1")]
				[Address(RVA = "0x11267A4", Offset = "0x11267A4", VA = "0x11267A4")]
				public static AccelerometerEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020D2")]
				[Address(RVA = "0x1126844", Offset = "0x1126844", VA = "0x1126844")]
				public static AccelerometerEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60020D3")]
				[Address(RVA = "0x11268D4", Offset = "0x11268D4", VA = "0x11268D4")]
				public static AccelerometerEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020D4")]
				[Address(RVA = "0x1126974", Offset = "0x1126974", VA = "0x1126974")]
				public static AccelerometerEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x60020D5")]
				[Address(RVA = "0x1126A04", Offset = "0x1126A04", VA = "0x1126A04")]
				public static AccelerometerEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020D6")]
				[Address(RVA = "0x1126AA4", Offset = "0x1126AA4", VA = "0x1126AA4")]
				private AccelerometerEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x60020D7")]
				[Address(RVA = "0x1124CFC", Offset = "0x1124CFC", VA = "0x1124CFC")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x60020D8")]
				[Address(RVA = "0x1126B78", Offset = "0x1126B78", VA = "0x1126B78", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x60020D9")]
				[Address(RVA = "0x1126BDC", Offset = "0x1126BDC", VA = "0x1126BDC", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x60020DA")]
				[Address(RVA = "0x11254C0", Offset = "0x11254C0", VA = "0x11254C0")]
				public static Builder CreateBuilder(AccelerometerEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x60020DB")]
				[Address(RVA = "0x1126CA0", Offset = "0x1126CA0", VA = "0x1126CA0")]
				static AccelerometerEvent()
				{
				}
			}

			[Token(Token = "0x20005DF")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715AC4", Offset = "0x715AC4")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715AC4", Offset = "0x715AC4")]
			public sealed class DepthMapEvent : GeneratedMessageLite<DepthMapEvent, DepthMapEvent.Builder>
			{
				[Token(Token = "0x20005E6")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715DD4", Offset = "0x715DD4")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715DD4", Offset = "0x715DD4")]
				public sealed class Builder : GeneratedBuilderLite<DepthMapEvent, Builder>
				{
					[Token(Token = "0x400222F")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4002230")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private DepthMapEvent result;

					[Token(Token = "0x170003EC")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x60021A6")]
						[Address(RVA = "0x112933C", Offset = "0x112933C", VA = "0x112933C", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003ED")]
					public override bool IsInitialized
					{
						[Token(Token = "0x60021AA")]
						[Address(RVA = "0x11293D0", Offset = "0x11293D0", VA = "0x11293D0", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003EE")]
					protected override DepthMapEvent MessageBeingBuilt
					{
						[Token(Token = "0x60021AB")]
						[Address(RVA = "0x11293F0", Offset = "0x11293F0", VA = "0x11293F0", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003EF")]
					public override DepthMapEvent DefaultInstanceForType
					{
						[Token(Token = "0x60021AE")]
						[Address(RVA = "0x1129560", Offset = "0x1129560", VA = "0x1129560", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003F0")]
					public bool HasTimestamp
					{
						[Token(Token = "0x60021B4")]
						[Address(RVA = "0x1129DCC", Offset = "0x1129DCC", VA = "0x1129DCC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003F1")]
					public long Timestamp
					{
						[Token(Token = "0x60021B5")]
						[Address(RVA = "0x1129DE8", Offset = "0x1129DE8", VA = "0x1129DE8")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x60021B6")]
						[Address(RVA = "0x112982C", Offset = "0x112982C", VA = "0x112982C")]
						set
						{
						}
					}

					[Token(Token = "0x170003F2")]
					public bool HasWidth
					{
						[Token(Token = "0x60021B9")]
						[Address(RVA = "0x1129E8C", Offset = "0x1129E8C", VA = "0x1129E8C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003F3")]
					public int Width
					{
						[Token(Token = "0x60021BA")]
						[Address(RVA = "0x1129EA8", Offset = "0x1129EA8", VA = "0x1129EA8")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x60021BB")]
						[Address(RVA = "0x1129830", Offset = "0x1129830", VA = "0x1129830")]
						set
						{
						}
					}

					[Token(Token = "0x170003F4")]
					public bool HasHeight
					{
						[Token(Token = "0x60021BE")]
						[Address(RVA = "0x1129F4C", Offset = "0x1129F4C", VA = "0x1129F4C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003F5")]
					public int Height
					{
						[Token(Token = "0x60021BF")]
						[Address(RVA = "0x1129F68", Offset = "0x1129F68", VA = "0x1129F68")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x60021C0")]
						[Address(RVA = "0x1129834", Offset = "0x1129834", VA = "0x1129834")]
						set
						{
						}
					}

					[Token(Token = "0x170003F6")]
					public IPopsicleList<float> ZDistancesList
					{
						[Token(Token = "0x60021C3")]
						[Address(RVA = "0x112A00C", Offset = "0x112A00C", VA = "0x112A00C")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003F7")]
					public int ZDistancesCount
					{
						[Token(Token = "0x60021C4")]
						[Address(RVA = "0x112A02C", Offset = "0x112A02C", VA = "0x112A02C")]
						get
						{
							return default(int);
						}
					}

					[Token(Token = "0x60021A7")]
					[Address(RVA = "0x1128F5C", Offset = "0x1128F5C", VA = "0x1128F5C")]
					public Builder()
					{
					}

					[Token(Token = "0x60021A8")]
					[Address(RVA = "0x11290E8", Offset = "0x11290E8", VA = "0x11290E8")]
					internal Builder(DepthMapEvent cloneFrom)
					{
					}

					[Token(Token = "0x60021A9")]
					[Address(RVA = "0x1129340", Offset = "0x1129340", VA = "0x1129340")]
					private DepthMapEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x60021AC")]
					[Address(RVA = "0x11293F4", Offset = "0x11293F4", VA = "0x11293F4", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x60021AD")]
					[Address(RVA = "0x11294B4", Offset = "0x11294B4", VA = "0x11294B4", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x60021AF")]
					[Address(RVA = "0x1129604", Offset = "0x1129604", VA = "0x1129604", Slot = "13")]
					public override DepthMapEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x60021B0")]
					[Address(RVA = "0x1129638", Offset = "0x1129638", VA = "0x1129638", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x60021B1")]
					[Address(RVA = "0x11296E0", Offset = "0x11296E0", VA = "0x11296E0", Slot = "26")]
					public override Builder MergeFrom(DepthMapEvent other)
					{
						return null;
					}

					[Token(Token = "0x60021B2")]
					[Address(RVA = "0x1129838", Offset = "0x1129838", VA = "0x1129838", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x60021B3")]
					[Address(RVA = "0x1129900", Offset = "0x1129900", VA = "0x1129900", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x60021B7")]
					[Address(RVA = "0x1129E04", Offset = "0x1129E04", VA = "0x1129E04")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x60021B8")]
					[Address(RVA = "0x1129E4C", Offset = "0x1129E4C", VA = "0x1129E4C")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x60021BC")]
					[Address(RVA = "0x1129EC4", Offset = "0x1129EC4", VA = "0x1129EC4")]
					public Builder SetWidth(int value)
					{
						return null;
					}

					[Token(Token = "0x60021BD")]
					[Address(RVA = "0x1129F0C", Offset = "0x1129F0C", VA = "0x1129F0C")]
					public Builder ClearWidth()
					{
						return null;
					}

					[Token(Token = "0x60021C1")]
					[Address(RVA = "0x1129F84", Offset = "0x1129F84", VA = "0x1129F84")]
					public Builder SetHeight(int value)
					{
						return null;
					}

					[Token(Token = "0x60021C2")]
					[Address(RVA = "0x1129FCC", Offset = "0x1129FCC", VA = "0x1129FCC")]
					public Builder ClearHeight()
					{
						return null;
					}

					[Token(Token = "0x60021C5")]
					[Address(RVA = "0x112A044", Offset = "0x112A044", VA = "0x112A044")]
					public float GetZDistances(int index)
					{
						return default(float);
					}

					[Token(Token = "0x60021C6")]
					[Address(RVA = "0x112A05C", Offset = "0x112A05C", VA = "0x112A05C")]
					public Builder SetZDistances(int index, float value)
					{
						return null;
					}

					[Token(Token = "0x60021C7")]
					[Address(RVA = "0x112A0EC", Offset = "0x112A0EC", VA = "0x112A0EC")]
					public Builder AddZDistances(float value)
					{
						return null;
					}

					[Token(Token = "0x60021C8")]
					[Address(RVA = "0x112A16C", Offset = "0x112A16C", VA = "0x112A16C")]
					public Builder AddRangeZDistances(IEnumerable<float> values)
					{
						return null;
					}

					[Token(Token = "0x60021C9")]
					[Address(RVA = "0x112A1EC", Offset = "0x112A1EC", VA = "0x112A1EC")]
					public Builder ClearZDistances()
					{
						return null;
					}
				}

				[Token(Token = "0x40021FC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly DepthMapEvent defaultInstance;

				[Token(Token = "0x40021FD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _depthMapEventFieldNames;

				[Token(Token = "0x40021FE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _depthMapEventFieldTags;

				[Token(Token = "0x40021FF")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x4002200")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x4002201")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x4002202")]
				public const int WidthFieldNumber = 2;

				[Token(Token = "0x4002203")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasWidth;

				[Token(Token = "0x4002204")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private int width_;

				[Token(Token = "0x4002205")]
				public const int HeightFieldNumber = 3;

				[Token(Token = "0x4002206")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasHeight;

				[Token(Token = "0x4002207")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private int height_;

				[Token(Token = "0x4002208")]
				public const int ZDistancesFieldNumber = 4;

				[Token(Token = "0x4002209")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int zDistancesMemoizedSerializedSize;

				[Token(Token = "0x400220A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private PopsicleList<float> zDistances_;

				[Token(Token = "0x400220B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int memoizedSerializedSize;

				[Token(Token = "0x170003A5")]
				public static DepthMapEvent DefaultInstance
				{
					[Token(Token = "0x60020DD")]
					[Address(RVA = "0x1127C4C", Offset = "0x1127C4C", VA = "0x1127C4C")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003A6")]
				public override DepthMapEvent DefaultInstanceForType
				{
					[Token(Token = "0x60020DE")]
					[Address(RVA = "0x1127CB4", Offset = "0x1127CB4", VA = "0x1127CB4", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003A7")]
				protected override DepthMapEvent ThisMessage
				{
					[Token(Token = "0x60020DF")]
					[Address(RVA = "0x1127D58", Offset = "0x1127D58", VA = "0x1127D58", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003A8")]
				public bool HasTimestamp
				{
					[Token(Token = "0x60020E0")]
					[Address(RVA = "0x1127D5C", Offset = "0x1127D5C", VA = "0x1127D5C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003A9")]
				public long Timestamp
				{
					[Token(Token = "0x60020E1")]
					[Address(RVA = "0x1127D64", Offset = "0x1127D64", VA = "0x1127D64")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x170003AA")]
				public bool HasWidth
				{
					[Token(Token = "0x60020E2")]
					[Address(RVA = "0x1127D6C", Offset = "0x1127D6C", VA = "0x1127D6C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003AB")]
				public int Width
				{
					[Token(Token = "0x60020E3")]
					[Address(RVA = "0x1127D74", Offset = "0x1127D74", VA = "0x1127D74")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170003AC")]
				public bool HasHeight
				{
					[Token(Token = "0x60020E4")]
					[Address(RVA = "0x1127D7C", Offset = "0x1127D7C", VA = "0x1127D7C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003AD")]
				public int Height
				{
					[Token(Token = "0x60020E5")]
					[Address(RVA = "0x1127D84", Offset = "0x1127D84", VA = "0x1127D84")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170003AE")]
				public IList<float> ZDistancesList
				{
					[Token(Token = "0x60020E6")]
					[Address(RVA = "0x1127D8C", Offset = "0x1127D8C", VA = "0x1127D8C")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003AF")]
				public int ZDistancesCount
				{
					[Token(Token = "0x60020E7")]
					[Address(RVA = "0x1127DDC", Offset = "0x1127DDC", VA = "0x1127DDC")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170003B0")]
				public override bool IsInitialized
				{
					[Token(Token = "0x60020E9")]
					[Address(RVA = "0x1127E9C", Offset = "0x1127E9C", VA = "0x1127E9C", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003B1")]
				public override int SerializedSize
				{
					[Token(Token = "0x60020EB")]
					[Address(RVA = "0x11281D0", Offset = "0x11281D0", VA = "0x11281D0", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60020DC")]
				[Address(RVA = "0x1127BCC", Offset = "0x1127BCC", VA = "0x1127BCC")]
				private DepthMapEvent()
				{
				}

				[Token(Token = "0x60020E8")]
				[Address(RVA = "0x1127E34", Offset = "0x1127E34", VA = "0x1127E34")]
				public float GetZDistances(int index)
				{
					return default(float);
				}

				[Token(Token = "0x60020EA")]
				[Address(RVA = "0x1127EA4", Offset = "0x1127EA4", VA = "0x1127EA4", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x60020EC")]
				[Address(RVA = "0x1128368", Offset = "0x1128368", VA = "0x1128368", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x60020ED")]
				[Address(RVA = "0x11285E8", Offset = "0x11285E8", VA = "0x11285E8", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x60020EE")]
				[Address(RVA = "0x11287C0", Offset = "0x11287C0", VA = "0x11287C0", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x60020EF")]
				[Address(RVA = "0x112890C", Offset = "0x112890C", VA = "0x112890C")]
				public static DepthMapEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x60020F0")]
				[Address(RVA = "0x112899C", Offset = "0x112899C", VA = "0x112899C")]
				public static DepthMapEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020F1")]
				[Address(RVA = "0x1128A3C", Offset = "0x1128A3C", VA = "0x1128A3C")]
				public static DepthMapEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x60020F2")]
				[Address(RVA = "0x1128ACC", Offset = "0x1128ACC", VA = "0x1128ACC")]
				public static DepthMapEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020F3")]
				[Address(RVA = "0x1128B6C", Offset = "0x1128B6C", VA = "0x1128B6C")]
				public static DepthMapEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60020F4")]
				[Address(RVA = "0x1128BFC", Offset = "0x1128BFC", VA = "0x1128BFC")]
				public static DepthMapEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020F5")]
				[Address(RVA = "0x1128C9C", Offset = "0x1128C9C", VA = "0x1128C9C")]
				public static DepthMapEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x60020F6")]
				[Address(RVA = "0x1128D2C", Offset = "0x1128D2C", VA = "0x1128D2C")]
				public static DepthMapEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020F7")]
				[Address(RVA = "0x1128DCC", Offset = "0x1128DCC", VA = "0x1128DCC")]
				public static DepthMapEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x60020F8")]
				[Address(RVA = "0x1128E5C", Offset = "0x1128E5C", VA = "0x1128E5C")]
				public static DepthMapEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x60020F9")]
				[Address(RVA = "0x1128EFC", Offset = "0x1128EFC", VA = "0x1128EFC")]
				private DepthMapEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x60020FA")]
				[Address(RVA = "0x1124D70", Offset = "0x1124D70", VA = "0x1124D70")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x60020FB")]
				[Address(RVA = "0x112902C", Offset = "0x112902C", VA = "0x112902C", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x60020FC")]
				[Address(RVA = "0x1129090", Offset = "0x1129090", VA = "0x1129090", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x60020FD")]
				[Address(RVA = "0x11256B0", Offset = "0x11256B0", VA = "0x11256B0")]
				public static Builder CreateBuilder(DepthMapEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x60020FE")]
				[Address(RVA = "0x1129154", Offset = "0x1129154", VA = "0x1129154")]
				static DepthMapEvent()
				{
				}
			}

			[Token(Token = "0x20005E0")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715B34", Offset = "0x715B34")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715B34", Offset = "0x715B34")]
			public sealed class OrientationEvent : GeneratedMessageLite<OrientationEvent, OrientationEvent.Builder>
			{
				[Token(Token = "0x20005E7")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715E44", Offset = "0x715E44")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715E44", Offset = "0x715E44")]
				public sealed class Builder : GeneratedBuilderLite<OrientationEvent, Builder>
				{
					[Token(Token = "0x4002231")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4002232")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private OrientationEvent result;

					[Token(Token = "0x170003F8")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x60021CA")]
						[Address(RVA = "0x11337BC", Offset = "0x11337BC", VA = "0x11337BC", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003F9")]
					public override bool IsInitialized
					{
						[Token(Token = "0x60021CE")]
						[Address(RVA = "0x1133850", Offset = "0x1133850", VA = "0x1133850", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003FA")]
					protected override OrientationEvent MessageBeingBuilt
					{
						[Token(Token = "0x60021CF")]
						[Address(RVA = "0x1133870", Offset = "0x1133870", VA = "0x1133870", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003FB")]
					public override OrientationEvent DefaultInstanceForType
					{
						[Token(Token = "0x60021D2")]
						[Address(RVA = "0x11339E0", Offset = "0x11339E0", VA = "0x11339E0", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x170003FC")]
					public bool HasTimestamp
					{
						[Token(Token = "0x60021D8")]
						[Address(RVA = "0x1134294", Offset = "0x1134294", VA = "0x1134294")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003FD")]
					public long Timestamp
					{
						[Token(Token = "0x60021D9")]
						[Address(RVA = "0x11342B0", Offset = "0x11342B0", VA = "0x11342B0")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x60021DA")]
						[Address(RVA = "0x1133C94", Offset = "0x1133C94", VA = "0x1133C94")]
						set
						{
						}
					}

					[Token(Token = "0x170003FE")]
					public bool HasX
					{
						[Token(Token = "0x60021DD")]
						[Address(RVA = "0x1134354", Offset = "0x1134354", VA = "0x1134354")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x170003FF")]
					public float X
					{
						[Token(Token = "0x60021DE")]
						[Address(RVA = "0x1134370", Offset = "0x1134370", VA = "0x1134370")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60021DF")]
						[Address(RVA = "0x1133C98", Offset = "0x1133C98", VA = "0x1133C98")]
						set
						{
						}
					}

					[Token(Token = "0x17000400")]
					public bool HasY
					{
						[Token(Token = "0x60021E2")]
						[Address(RVA = "0x113441C", Offset = "0x113441C", VA = "0x113441C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000401")]
					public float Y
					{
						[Token(Token = "0x60021E3")]
						[Address(RVA = "0x1134438", Offset = "0x1134438", VA = "0x1134438")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60021E4")]
						[Address(RVA = "0x1133C9C", Offset = "0x1133C9C", VA = "0x1133C9C")]
						set
						{
						}
					}

					[Token(Token = "0x17000402")]
					public bool HasZ
					{
						[Token(Token = "0x60021E7")]
						[Address(RVA = "0x11344E4", Offset = "0x11344E4", VA = "0x11344E4")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000403")]
					public float Z
					{
						[Token(Token = "0x60021E8")]
						[Address(RVA = "0x1134500", Offset = "0x1134500", VA = "0x1134500")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60021E9")]
						[Address(RVA = "0x1133CA0", Offset = "0x1133CA0", VA = "0x1133CA0")]
						set
						{
						}
					}

					[Token(Token = "0x17000404")]
					public bool HasW
					{
						[Token(Token = "0x60021EC")]
						[Address(RVA = "0x11345AC", Offset = "0x11345AC", VA = "0x11345AC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000405")]
					public float W
					{
						[Token(Token = "0x60021ED")]
						[Address(RVA = "0x11345C8", Offset = "0x11345C8", VA = "0x11345C8")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x60021EE")]
						[Address(RVA = "0x1133CA4", Offset = "0x1133CA4", VA = "0x1133CA4")]
						set
						{
						}
					}

					[Token(Token = "0x60021CB")]
					[Address(RVA = "0x11333B0", Offset = "0x11333B0", VA = "0x11333B0")]
					public Builder()
					{
					}

					[Token(Token = "0x60021CC")]
					[Address(RVA = "0x113353C", Offset = "0x113353C", VA = "0x113353C")]
					internal Builder(OrientationEvent cloneFrom)
					{
					}

					[Token(Token = "0x60021CD")]
					[Address(RVA = "0x11337C0", Offset = "0x11337C0", VA = "0x11337C0")]
					private OrientationEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x60021D0")]
					[Address(RVA = "0x1133874", Offset = "0x1133874", VA = "0x1133874", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x60021D1")]
					[Address(RVA = "0x1133934", Offset = "0x1133934", VA = "0x1133934", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x60021D3")]
					[Address(RVA = "0x1133A84", Offset = "0x1133A84", VA = "0x1133A84", Slot = "13")]
					public override OrientationEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x60021D4")]
					[Address(RVA = "0x1133AB8", Offset = "0x1133AB8", VA = "0x1133AB8", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x60021D5")]
					[Address(RVA = "0x1133B60", Offset = "0x1133B60", VA = "0x1133B60", Slot = "26")]
					public override Builder MergeFrom(OrientationEvent other)
					{
						return null;
					}

					[Token(Token = "0x60021D6")]
					[Address(RVA = "0x1133CA8", Offset = "0x1133CA8", VA = "0x1133CA8", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x60021D7")]
					[Address(RVA = "0x1133D70", Offset = "0x1133D70", VA = "0x1133D70", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x60021DB")]
					[Address(RVA = "0x11342CC", Offset = "0x11342CC", VA = "0x11342CC")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x60021DC")]
					[Address(RVA = "0x1134314", Offset = "0x1134314", VA = "0x1134314")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x60021E0")]
					[Address(RVA = "0x113438C", Offset = "0x113438C", VA = "0x113438C")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x60021E1")]
					[Address(RVA = "0x11343DC", Offset = "0x11343DC", VA = "0x11343DC")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x60021E5")]
					[Address(RVA = "0x1134454", Offset = "0x1134454", VA = "0x1134454")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x60021E6")]
					[Address(RVA = "0x11344A4", Offset = "0x11344A4", VA = "0x11344A4")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x60021EA")]
					[Address(RVA = "0x113451C", Offset = "0x113451C", VA = "0x113451C")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x60021EB")]
					[Address(RVA = "0x113456C", Offset = "0x113456C", VA = "0x113456C")]
					public Builder ClearZ()
					{
						return null;
					}

					[Token(Token = "0x60021EF")]
					[Address(RVA = "0x11345E4", Offset = "0x11345E4", VA = "0x11345E4")]
					public Builder SetW(float value)
					{
						return null;
					}

					[Token(Token = "0x60021F0")]
					[Address(RVA = "0x1134634", Offset = "0x1134634", VA = "0x1134634")]
					public Builder ClearW()
					{
						return null;
					}
				}

				[Token(Token = "0x400220C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly OrientationEvent defaultInstance;

				[Token(Token = "0x400220D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _orientationEventFieldNames;

				[Token(Token = "0x400220E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _orientationEventFieldTags;

				[Token(Token = "0x400220F")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x4002210")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x4002211")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x4002212")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x4002213")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasX;

				[Token(Token = "0x4002214")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float x_;

				[Token(Token = "0x4002215")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x4002216")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasY;

				[Token(Token = "0x4002217")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float y_;

				[Token(Token = "0x4002218")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x4002219")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasZ;

				[Token(Token = "0x400221A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float z_;

				[Token(Token = "0x400221B")]
				public const int WFieldNumber = 5;

				[Token(Token = "0x400221C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private bool hasW;

				[Token(Token = "0x400221D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private float w_;

				[Token(Token = "0x400221E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int memoizedSerializedSize;

				[Token(Token = "0x170003B2")]
				public static OrientationEvent DefaultInstance
				{
					[Token(Token = "0x6002100")]
					[Address(RVA = "0x113231C", Offset = "0x113231C", VA = "0x113231C")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003B3")]
				public override OrientationEvent DefaultInstanceForType
				{
					[Token(Token = "0x6002101")]
					[Address(RVA = "0x1132384", Offset = "0x1132384", VA = "0x1132384", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003B4")]
				protected override OrientationEvent ThisMessage
				{
					[Token(Token = "0x6002102")]
					[Address(RVA = "0x1132428", Offset = "0x1132428", VA = "0x1132428", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003B5")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6002103")]
					[Address(RVA = "0x113242C", Offset = "0x113242C", VA = "0x113242C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003B6")]
				public long Timestamp
				{
					[Token(Token = "0x6002104")]
					[Address(RVA = "0x1132434", Offset = "0x1132434", VA = "0x1132434")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x170003B7")]
				public bool HasX
				{
					[Token(Token = "0x6002105")]
					[Address(RVA = "0x113243C", Offset = "0x113243C", VA = "0x113243C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003B8")]
				public float X
				{
					[Token(Token = "0x6002106")]
					[Address(RVA = "0x1132444", Offset = "0x1132444", VA = "0x1132444")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170003B9")]
				public bool HasY
				{
					[Token(Token = "0x6002107")]
					[Address(RVA = "0x113244C", Offset = "0x113244C", VA = "0x113244C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003BA")]
				public float Y
				{
					[Token(Token = "0x6002108")]
					[Address(RVA = "0x1132454", Offset = "0x1132454", VA = "0x1132454")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170003BB")]
				public bool HasZ
				{
					[Token(Token = "0x6002109")]
					[Address(RVA = "0x113245C", Offset = "0x113245C", VA = "0x113245C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003BC")]
				public float Z
				{
					[Token(Token = "0x600210A")]
					[Address(RVA = "0x1132464", Offset = "0x1132464", VA = "0x1132464")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170003BD")]
				public bool HasW
				{
					[Token(Token = "0x600210B")]
					[Address(RVA = "0x113246C", Offset = "0x113246C", VA = "0x113246C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003BE")]
				public float W
				{
					[Token(Token = "0x600210C")]
					[Address(RVA = "0x1132474", Offset = "0x1132474", VA = "0x1132474")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x170003BF")]
				public override bool IsInitialized
				{
					[Token(Token = "0x600210D")]
					[Address(RVA = "0x113247C", Offset = "0x113247C", VA = "0x113247C", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003C0")]
				public override int SerializedSize
				{
					[Token(Token = "0x600210F")]
					[Address(RVA = "0x1132828", Offset = "0x1132828", VA = "0x1132828", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x60020FF")]
				[Address(RVA = "0x11322C4", Offset = "0x11322C4", VA = "0x11322C4")]
				private OrientationEvent()
				{
				}

				[Token(Token = "0x600210E")]
				[Address(RVA = "0x1132484", Offset = "0x1132484", VA = "0x1132484", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6002110")]
				[Address(RVA = "0x11329CC", Offset = "0x11329CC", VA = "0x11329CC", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6002111")]
				[Address(RVA = "0x1132A84", Offset = "0x1132A84", VA = "0x1132A84", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6002112")]
				[Address(RVA = "0x1132C1C", Offset = "0x1132C1C", VA = "0x1132C1C", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6002113")]
				[Address(RVA = "0x1132DBC", Offset = "0x1132DBC", VA = "0x1132DBC")]
				public static OrientationEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6002114")]
				[Address(RVA = "0x1132E4C", Offset = "0x1132E4C", VA = "0x1132E4C")]
				public static OrientationEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002115")]
				[Address(RVA = "0x1132EEC", Offset = "0x1132EEC", VA = "0x1132EEC")]
				public static OrientationEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6002116")]
				[Address(RVA = "0x1132F7C", Offset = "0x1132F7C", VA = "0x1132F7C")]
				public static OrientationEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002117")]
				[Address(RVA = "0x113301C", Offset = "0x113301C", VA = "0x113301C")]
				public static OrientationEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002118")]
				[Address(RVA = "0x11330AC", Offset = "0x11330AC", VA = "0x11330AC")]
				public static OrientationEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002119")]
				[Address(RVA = "0x113314C", Offset = "0x113314C", VA = "0x113314C")]
				public static OrientationEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x600211A")]
				[Address(RVA = "0x11331DC", Offset = "0x11331DC", VA = "0x11331DC")]
				public static OrientationEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600211B")]
				[Address(RVA = "0x113327C", Offset = "0x113327C", VA = "0x113327C")]
				public static OrientationEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x600211C")]
				[Address(RVA = "0x113330C", Offset = "0x113330C", VA = "0x113330C")]
				public static OrientationEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600211D")]
				[Address(RVA = "0x11333AC", Offset = "0x11333AC", VA = "0x11333AC")]
				private OrientationEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x600211E")]
				[Address(RVA = "0x1124DE4", Offset = "0x1124DE4", VA = "0x1124DE4")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x600211F")]
				[Address(RVA = "0x1133480", Offset = "0x1133480", VA = "0x1133480", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002120")]
				[Address(RVA = "0x11334E4", Offset = "0x11334E4", VA = "0x11334E4", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6002121")]
				[Address(RVA = "0x11258A0", Offset = "0x11258A0", VA = "0x11258A0")]
				public static Builder CreateBuilder(OrientationEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6002122")]
				[Address(RVA = "0x11335A8", Offset = "0x11335A8", VA = "0x11335A8")]
				static OrientationEvent()
				{
				}
			}

			[Token(Token = "0x20005E1")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715BA4", Offset = "0x715BA4")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715BA4", Offset = "0x715BA4")]
			public sealed class KeyEvent : GeneratedMessageLite<KeyEvent, KeyEvent.Builder>
			{
				[Token(Token = "0x20005E8")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715EB4", Offset = "0x715EB4")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x715EB4", Offset = "0x715EB4")]
				public sealed class Builder : GeneratedBuilderLite<KeyEvent, Builder>
				{
					[Token(Token = "0x4002233")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4002234")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private KeyEvent result;

					[Token(Token = "0x17000406")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x60021F1")]
						[Address(RVA = "0x112D2EC", Offset = "0x112D2EC", VA = "0x112D2EC", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000407")]
					public override bool IsInitialized
					{
						[Token(Token = "0x60021F5")]
						[Address(RVA = "0x112D380", Offset = "0x112D380", VA = "0x112D380", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000408")]
					protected override KeyEvent MessageBeingBuilt
					{
						[Token(Token = "0x60021F6")]
						[Address(RVA = "0x112D3A0", Offset = "0x112D3A0", VA = "0x112D3A0", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000409")]
					public override KeyEvent DefaultInstanceForType
					{
						[Token(Token = "0x60021F9")]
						[Address(RVA = "0x112D510", Offset = "0x112D510", VA = "0x112D510", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700040A")]
					public bool HasAction
					{
						[Token(Token = "0x60021FF")]
						[Address(RVA = "0x112DBD8", Offset = "0x112DBD8", VA = "0x112DBD8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700040B")]
					public int Action
					{
						[Token(Token = "0x6002200")]
						[Address(RVA = "0x112DBF4", Offset = "0x112DBF4", VA = "0x112DBF4")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6002201")]
						[Address(RVA = "0x112D788", Offset = "0x112D788", VA = "0x112D788")]
						set
						{
						}
					}

					[Token(Token = "0x1700040C")]
					public bool HasCode
					{
						[Token(Token = "0x6002204")]
						[Address(RVA = "0x112DC98", Offset = "0x112DC98", VA = "0x112DC98")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700040D")]
					public int Code
					{
						[Token(Token = "0x6002205")]
						[Address(RVA = "0x112DCB4", Offset = "0x112DCB4", VA = "0x112DCB4")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6002206")]
						[Address(RVA = "0x112D78C", Offset = "0x112D78C", VA = "0x112D78C")]
						set
						{
						}
					}

					[Token(Token = "0x60021F2")]
					[Address(RVA = "0x112CF70", Offset = "0x112CF70", VA = "0x112CF70")]
					public Builder()
					{
					}

					[Token(Token = "0x60021F3")]
					[Address(RVA = "0x112D0FC", Offset = "0x112D0FC", VA = "0x112D0FC")]
					internal Builder(KeyEvent cloneFrom)
					{
					}

					[Token(Token = "0x60021F4")]
					[Address(RVA = "0x112D2F0", Offset = "0x112D2F0", VA = "0x112D2F0")]
					private KeyEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x60021F7")]
					[Address(RVA = "0x112D3A4", Offset = "0x112D3A4", VA = "0x112D3A4", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x60021F8")]
					[Address(RVA = "0x112D464", Offset = "0x112D464", VA = "0x112D464", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x60021FA")]
					[Address(RVA = "0x112D5B4", Offset = "0x112D5B4", VA = "0x112D5B4", Slot = "13")]
					public override KeyEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x60021FB")]
					[Address(RVA = "0x112D5E8", Offset = "0x112D5E8", VA = "0x112D5E8", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x60021FC")]
					[Address(RVA = "0x112D690", Offset = "0x112D690", VA = "0x112D690", Slot = "26")]
					public override Builder MergeFrom(KeyEvent other)
					{
						return null;
					}

					[Token(Token = "0x60021FD")]
					[Address(RVA = "0x112D790", Offset = "0x112D790", VA = "0x112D790", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x60021FE")]
					[Address(RVA = "0x112D858", Offset = "0x112D858", VA = "0x112D858", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002202")]
					[Address(RVA = "0x112DC10", Offset = "0x112DC10", VA = "0x112DC10")]
					public Builder SetAction(int value)
					{
						return null;
					}

					[Token(Token = "0x6002203")]
					[Address(RVA = "0x112DC58", Offset = "0x112DC58", VA = "0x112DC58")]
					public Builder ClearAction()
					{
						return null;
					}

					[Token(Token = "0x6002207")]
					[Address(RVA = "0x112DCD0", Offset = "0x112DCD0", VA = "0x112DCD0")]
					public Builder SetCode(int value)
					{
						return null;
					}

					[Token(Token = "0x6002208")]
					[Address(RVA = "0x112DD18", Offset = "0x112DD18", VA = "0x112DD18")]
					public Builder ClearCode()
					{
						return null;
					}
				}

				[Token(Token = "0x400221F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly KeyEvent defaultInstance;

				[Token(Token = "0x4002220")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _keyEventFieldNames;

				[Token(Token = "0x4002221")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _keyEventFieldTags;

				[Token(Token = "0x4002222")]
				public const int ActionFieldNumber = 1;

				[Token(Token = "0x4002223")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasAction;

				[Token(Token = "0x4002224")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				private int action_;

				[Token(Token = "0x4002225")]
				public const int CodeFieldNumber = 2;

				[Token(Token = "0x4002226")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool hasCode;

				[Token(Token = "0x4002227")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private int code_;

				[Token(Token = "0x4002228")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int memoizedSerializedSize;

				[Token(Token = "0x170003C1")]
				public static KeyEvent DefaultInstance
				{
					[Token(Token = "0x6002124")]
					[Address(RVA = "0x112C350", Offset = "0x112C350", VA = "0x112C350")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003C2")]
				public override KeyEvent DefaultInstanceForType
				{
					[Token(Token = "0x6002125")]
					[Address(RVA = "0x112C3B8", Offset = "0x112C3B8", VA = "0x112C3B8", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003C3")]
				protected override KeyEvent ThisMessage
				{
					[Token(Token = "0x6002126")]
					[Address(RVA = "0x112C45C", Offset = "0x112C45C", VA = "0x112C45C", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003C4")]
				public bool HasAction
				{
					[Token(Token = "0x6002127")]
					[Address(RVA = "0x112C460", Offset = "0x112C460", VA = "0x112C460")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003C5")]
				public int Action
				{
					[Token(Token = "0x6002128")]
					[Address(RVA = "0x112C468", Offset = "0x112C468", VA = "0x112C468")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170003C6")]
				public bool HasCode
				{
					[Token(Token = "0x6002129")]
					[Address(RVA = "0x112C470", Offset = "0x112C470", VA = "0x112C470")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003C7")]
				public int Code
				{
					[Token(Token = "0x600212A")]
					[Address(RVA = "0x112C478", Offset = "0x112C478", VA = "0x112C478")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x170003C8")]
				public override bool IsInitialized
				{
					[Token(Token = "0x600212B")]
					[Address(RVA = "0x112C480", Offset = "0x112C480", VA = "0x112C480", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x170003C9")]
				public override int SerializedSize
				{
					[Token(Token = "0x600212D")]
					[Address(RVA = "0x112C65C", Offset = "0x112C65C", VA = "0x112C65C", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002123")]
				[Address(RVA = "0x112C2F8", Offset = "0x112C2F8", VA = "0x112C2F8")]
				private KeyEvent()
				{
				}

				[Token(Token = "0x600212C")]
				[Address(RVA = "0x112C488", Offset = "0x112C488", VA = "0x112C488", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x600212E")]
				[Address(RVA = "0x112C740", Offset = "0x112C740", VA = "0x112C740", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x600212F")]
				[Address(RVA = "0x112C7B0", Offset = "0x112C7B0", VA = "0x112C7B0", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6002130")]
				[Address(RVA = "0x112C8A0", Offset = "0x112C8A0", VA = "0x112C8A0", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6002131")]
				[Address(RVA = "0x112C97C", Offset = "0x112C97C", VA = "0x112C97C")]
				public static KeyEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6002132")]
				[Address(RVA = "0x112CA0C", Offset = "0x112CA0C", VA = "0x112CA0C")]
				public static KeyEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002133")]
				[Address(RVA = "0x112CAAC", Offset = "0x112CAAC", VA = "0x112CAAC")]
				public static KeyEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6002134")]
				[Address(RVA = "0x112CB3C", Offset = "0x112CB3C", VA = "0x112CB3C")]
				public static KeyEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002135")]
				[Address(RVA = "0x112CBDC", Offset = "0x112CBDC", VA = "0x112CBDC")]
				public static KeyEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002136")]
				[Address(RVA = "0x112CC6C", Offset = "0x112CC6C", VA = "0x112CC6C")]
				public static KeyEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002137")]
				[Address(RVA = "0x112CD0C", Offset = "0x112CD0C", VA = "0x112CD0C")]
				public static KeyEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002138")]
				[Address(RVA = "0x112CD9C", Offset = "0x112CD9C", VA = "0x112CD9C")]
				public static KeyEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002139")]
				[Address(RVA = "0x112CE3C", Offset = "0x112CE3C", VA = "0x112CE3C")]
				public static KeyEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x600213A")]
				[Address(RVA = "0x112CECC", Offset = "0x112CECC", VA = "0x112CECC")]
				public static KeyEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x600213B")]
				[Address(RVA = "0x112CF6C", Offset = "0x112CF6C", VA = "0x112CF6C")]
				private KeyEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x600213C")]
				[Address(RVA = "0x1124E58", Offset = "0x1124E58", VA = "0x1124E58")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x600213D")]
				[Address(RVA = "0x112D040", Offset = "0x112D040", VA = "0x112D040", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x600213E")]
				[Address(RVA = "0x112D0A4", Offset = "0x112D0A4", VA = "0x112D0A4", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x600213F")]
				[Address(RVA = "0x1125A90", Offset = "0x1125A90", VA = "0x1125A90")]
				public static Builder CreateBuilder(KeyEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6002140")]
				[Address(RVA = "0x112D168", Offset = "0x112D168", VA = "0x112D168")]
				static KeyEvent()
				{
				}
			}
		}

		[Token(Token = "0x2000567")]
		[DebuggerNonUserCode]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7156E4", Offset = "0x7156E4")]
		[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x7156E4", Offset = "0x7156E4")]
		public sealed class Builder : GeneratedBuilderLite<PhoneEvent, Builder>
		{
			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool resultIsReadOnly;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private PhoneEvent result;

			[Token(Token = "0x17000340")]
			protected override Builder ThisBuilder
			{
				[Token(Token = "0x6001F1C")]
				[Address(RVA = "0x1123454", Offset = "0x1123454", VA = "0x1123454", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000341")]
			public override bool IsInitialized
			{
				[Token(Token = "0x6001F20")]
				[Address(RVA = "0x11234E8", Offset = "0x11234E8", VA = "0x11234E8", Slot = "8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000342")]
			protected override PhoneEvent MessageBeingBuilt
			{
				[Token(Token = "0x6001F21")]
				[Address(RVA = "0x1123508", Offset = "0x1123508", VA = "0x1123508", Slot = "25")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000343")]
			public override PhoneEvent DefaultInstanceForType
			{
				[Token(Token = "0x6001F24")]
				[Address(RVA = "0x1123678", Offset = "0x1123678", VA = "0x1123678", Slot = "9")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			public bool HasType
			{
				[Token(Token = "0x6001F2A")]
				[Address(RVA = "0x1124ECC", Offset = "0x1124ECC", VA = "0x1124ECC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000345")]
			public Types.Type Type
			{
				[Token(Token = "0x6001F2B")]
				[Address(RVA = "0x1124EE8", Offset = "0x1124EE8", VA = "0x1124EE8")]
				get
				{
					return default(Types.Type);
				}
				[Token(Token = "0x6001F2C")]
				[Address(RVA = "0x1123984", Offset = "0x1123984", VA = "0x1123984")]
				set
				{
				}
			}

			[Token(Token = "0x17000346")]
			public bool HasMotionEvent
			{
				[Token(Token = "0x6001F2F")]
				[Address(RVA = "0x1124F90", Offset = "0x1124F90", VA = "0x1124F90")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000347")]
			public Types.MotionEvent MotionEvent
			{
				[Token(Token = "0x6001F30")]
				[Address(RVA = "0x1124C6C", Offset = "0x1124C6C", VA = "0x1124C6C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001F31")]
				[Address(RVA = "0x1124C84", Offset = "0x1124C84", VA = "0x1124C84")]
				set
				{
				}
			}

			[Token(Token = "0x17000348")]
			public bool HasGyroscopeEvent
			{
				[Token(Token = "0x6001F36")]
				[Address(RVA = "0x1125180", Offset = "0x1125180", VA = "0x1125180")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000349")]
			public Types.GyroscopeEvent GyroscopeEvent
			{
				[Token(Token = "0x6001F37")]
				[Address(RVA = "0x1124CE0", Offset = "0x1124CE0", VA = "0x1124CE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001F38")]
				[Address(RVA = "0x1124CF8", Offset = "0x1124CF8", VA = "0x1124CF8")]
				set
				{
				}
			}

			[Token(Token = "0x1700034A")]
			public bool HasAccelerometerEvent
			{
				[Token(Token = "0x6001F3D")]
				[Address(RVA = "0x1125370", Offset = "0x1125370", VA = "0x1125370")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700034B")]
			public Types.AccelerometerEvent AccelerometerEvent
			{
				[Token(Token = "0x6001F3E")]
				[Address(RVA = "0x1124D54", Offset = "0x1124D54", VA = "0x1124D54")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001F3F")]
				[Address(RVA = "0x1124D6C", Offset = "0x1124D6C", VA = "0x1124D6C")]
				set
				{
				}
			}

			[Token(Token = "0x1700034C")]
			public bool HasDepthMapEvent
			{
				[Token(Token = "0x6001F44")]
				[Address(RVA = "0x1125560", Offset = "0x1125560", VA = "0x1125560")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700034D")]
			public Types.DepthMapEvent DepthMapEvent
			{
				[Token(Token = "0x6001F45")]
				[Address(RVA = "0x1124DC8", Offset = "0x1124DC8", VA = "0x1124DC8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001F46")]
				[Address(RVA = "0x1124DE0", Offset = "0x1124DE0", VA = "0x1124DE0")]
				set
				{
				}
			}

			[Token(Token = "0x1700034E")]
			public bool HasOrientationEvent
			{
				[Token(Token = "0x6001F4B")]
				[Address(RVA = "0x1125750", Offset = "0x1125750", VA = "0x1125750")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700034F")]
			public Types.OrientationEvent OrientationEvent
			{
				[Token(Token = "0x6001F4C")]
				[Address(RVA = "0x1124E3C", Offset = "0x1124E3C", VA = "0x1124E3C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001F4D")]
				[Address(RVA = "0x1124E54", Offset = "0x1124E54", VA = "0x1124E54")]
				set
				{
				}
			}

			[Token(Token = "0x17000350")]
			public bool HasKeyEvent
			{
				[Token(Token = "0x6001F52")]
				[Address(RVA = "0x1125940", Offset = "0x1125940", VA = "0x1125940")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000351")]
			public Types.KeyEvent KeyEvent
			{
				[Token(Token = "0x6001F53")]
				[Address(RVA = "0x1124EB0", Offset = "0x1124EB0", VA = "0x1124EB0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001F54")]
				[Address(RVA = "0x1124EC8", Offset = "0x1124EC8", VA = "0x1124EC8")]
				set
				{
				}
			}

			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x1122F80", Offset = "0x1122F80", VA = "0x1122F80")]
			public Builder()
			{
			}

			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x112316C", Offset = "0x112316C", VA = "0x112316C")]
			internal Builder(PhoneEvent cloneFrom)
			{
			}

			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x1123458", Offset = "0x1123458", VA = "0x1123458")]
			private PhoneEvent PrepareBuilder()
			{
				return null;
			}

			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x112350C", Offset = "0x112350C", VA = "0x112350C", Slot = "10")]
			public override Builder Clear()
			{
				return null;
			}

			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x11235CC", Offset = "0x11235CC", VA = "0x11235CC", Slot = "11")]
			public override Builder Clone()
			{
				return null;
			}

			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x112371C", Offset = "0x112371C", VA = "0x112371C", Slot = "13")]
			public override PhoneEvent BuildPartial()
			{
				return null;
			}

			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x1123750", Offset = "0x1123750", VA = "0x1123750", Slot = "14")]
			public override Builder MergeFrom(IMessageLite other)
			{
				return null;
			}

			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x11237F8", Offset = "0x11237F8", VA = "0x11237F8", Slot = "26")]
			public override Builder MergeFrom(PhoneEvent other)
			{
				return null;
			}

			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x1124240", Offset = "0x1124240", VA = "0x1124240", Slot = "16")]
			public override Builder MergeFrom(ICodedInputStream input)
			{
				return null;
			}

			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x1124308", Offset = "0x1124308", VA = "0x1124308", Slot = "15")]
			public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
			{
				return null;
			}

			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x1124F04", Offset = "0x1124F04", VA = "0x1124F04")]
			public Builder SetType(Types.Type value)
			{
				return null;
			}

			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x1124F4C", Offset = "0x1124F4C", VA = "0x1124F4C")]
			public Builder ClearType()
			{
				return null;
			}

			[Token(Token = "0x6001F32")]
			[Address(RVA = "0x1124FAC", Offset = "0x1124FAC", VA = "0x1124FAC")]
			public Builder SetMotionEvent(Types.MotionEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x112503C", Offset = "0x112503C", VA = "0x112503C")]
			public Builder SetMotionEvent(Types.MotionEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6001F34")]
			[Address(RVA = "0x1123988", Offset = "0x1123988", VA = "0x1123988")]
			public Builder MergeMotionEvent(Types.MotionEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F35")]
			[Address(RVA = "0x1125140", Offset = "0x1125140", VA = "0x1125140")]
			public Builder ClearMotionEvent()
			{
				return null;
			}

			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x112519C", Offset = "0x112519C", VA = "0x112519C")]
			public Builder SetGyroscopeEvent(Types.GyroscopeEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x112522C", Offset = "0x112522C", VA = "0x112522C")]
			public Builder SetGyroscopeEvent(Types.GyroscopeEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0x1123AFC", Offset = "0x1123AFC", VA = "0x1123AFC")]
			public Builder MergeGyroscopeEvent(Types.GyroscopeEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0x1125330", Offset = "0x1125330", VA = "0x1125330")]
			public Builder ClearGyroscopeEvent()
			{
				return null;
			}

			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x112538C", Offset = "0x112538C", VA = "0x112538C")]
			public Builder SetAccelerometerEvent(Types.AccelerometerEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x112541C", Offset = "0x112541C", VA = "0x112541C")]
			public Builder SetAccelerometerEvent(Types.AccelerometerEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x1123C70", Offset = "0x1123C70", VA = "0x1123C70")]
			public Builder MergeAccelerometerEvent(Types.AccelerometerEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x1125520", Offset = "0x1125520", VA = "0x1125520")]
			public Builder ClearAccelerometerEvent()
			{
				return null;
			}

			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x112557C", Offset = "0x112557C", VA = "0x112557C")]
			public Builder SetDepthMapEvent(Types.DepthMapEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x112560C", Offset = "0x112560C", VA = "0x112560C")]
			public Builder SetDepthMapEvent(Types.DepthMapEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x1123DE4", Offset = "0x1123DE4", VA = "0x1123DE4")]
			public Builder MergeDepthMapEvent(Types.DepthMapEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x1125710", Offset = "0x1125710", VA = "0x1125710")]
			public Builder ClearDepthMapEvent()
			{
				return null;
			}

			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x112576C", Offset = "0x112576C", VA = "0x112576C")]
			public Builder SetOrientationEvent(Types.OrientationEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x11257FC", Offset = "0x11257FC", VA = "0x11257FC")]
			public Builder SetOrientationEvent(Types.OrientationEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x1123F58", Offset = "0x1123F58", VA = "0x1123F58")]
			public Builder MergeOrientationEvent(Types.OrientationEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x1125900", Offset = "0x1125900", VA = "0x1125900")]
			public Builder ClearOrientationEvent()
			{
				return null;
			}

			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x112595C", Offset = "0x112595C", VA = "0x112595C")]
			public Builder SetKeyEvent(Types.KeyEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x11259EC", Offset = "0x11259EC", VA = "0x11259EC")]
			public Builder SetKeyEvent(Types.KeyEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x11240CC", Offset = "0x11240CC", VA = "0x11240CC")]
			public Builder MergeKeyEvent(Types.KeyEvent value)
			{
				return null;
			}

			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x1125AF0", Offset = "0x1125AF0", VA = "0x1125AF0")]
			public Builder ClearKeyEvent()
			{
				return null;
			}
		}

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly PhoneEvent defaultInstance;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] _phoneEventFieldNames;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly uint[] _phoneEventFieldTags;

		[Token(Token = "0x40018FE")]
		public const int TypeFieldNumber = 1;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool hasType;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Types.Type type_;

		[Token(Token = "0x4001901")]
		public const int MotionEventFieldNumber = 2;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool hasMotionEvent;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Types.MotionEvent motionEvent_;

		[Token(Token = "0x4001904")]
		public const int GyroscopeEventFieldNumber = 3;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasGyroscopeEvent;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Types.GyroscopeEvent gyroscopeEvent_;

		[Token(Token = "0x4001907")]
		public const int AccelerometerEventFieldNumber = 4;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hasAccelerometerEvent;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Types.AccelerometerEvent accelerometerEvent_;

		[Token(Token = "0x400190A")]
		public const int DepthMapEventFieldNumber = 5;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hasDepthMapEvent;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Types.DepthMapEvent depthMapEvent_;

		[Token(Token = "0x400190D")]
		public const int OrientationEventFieldNumber = 6;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool hasOrientationEvent;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Types.OrientationEvent orientationEvent_;

		[Token(Token = "0x4001910")]
		public const int KeyEventFieldNumber = 7;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool hasKeyEvent;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Types.KeyEvent keyEvent_;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int memoizedSerializedSize;

		[Token(Token = "0x170001F9")]
		public static PhoneEvent DefaultInstance
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x1121720", Offset = "0x1121720", VA = "0x1121720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		public override PhoneEvent DefaultInstanceForType
		{
			[Token(Token = "0x60017AD")]
			[Address(RVA = "0x1121788", Offset = "0x1121788", VA = "0x1121788", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		protected override PhoneEvent ThisMessage
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x112182C", Offset = "0x112182C", VA = "0x112182C", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		public bool HasType
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0x1121830", Offset = "0x1121830", VA = "0x1121830")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FD")]
		public Types.Type Type
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0x1121838", Offset = "0x1121838", VA = "0x1121838")]
			get
			{
				return default(Types.Type);
			}
		}

		[Token(Token = "0x170001FE")]
		public bool HasMotionEvent
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0x1121840", Offset = "0x1121840", VA = "0x1121840")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FF")]
		public Types.MotionEvent MotionEvent
		{
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x1121848", Offset = "0x1121848", VA = "0x1121848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public bool HasGyroscopeEvent
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x11218F8", Offset = "0x11218F8", VA = "0x11218F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000201")]
		public Types.GyroscopeEvent GyroscopeEvent
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x1121900", Offset = "0x1121900", VA = "0x1121900")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public bool HasAccelerometerEvent
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x11219B0", Offset = "0x11219B0", VA = "0x11219B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		public Types.AccelerometerEvent AccelerometerEvent
		{
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x11219B8", Offset = "0x11219B8", VA = "0x11219B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		public bool HasDepthMapEvent
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x1121A68", Offset = "0x1121A68", VA = "0x1121A68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000205")]
		public Types.DepthMapEvent DepthMapEvent
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x1121A70", Offset = "0x1121A70", VA = "0x1121A70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		public bool HasOrientationEvent
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x1121B20", Offset = "0x1121B20", VA = "0x1121B20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000207")]
		public Types.OrientationEvent OrientationEvent
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x1121B28", Offset = "0x1121B28", VA = "0x1121B28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public bool HasKeyEvent
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x1121BD8", Offset = "0x1121BD8", VA = "0x1121BD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000209")]
		public Types.KeyEvent KeyEvent
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x1121BE0", Offset = "0x1121BE0", VA = "0x1121BE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public override bool IsInitialized
		{
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0x1121C90", Offset = "0x1121C90", VA = "0x1121C90", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020B")]
		public override int SerializedSize
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x11221C0", Offset = "0x11221C0", VA = "0x11221C0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x11216C0", Offset = "0x11216C0", VA = "0x11216C0")]
		private PhoneEvent()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x1121C98", Offset = "0x1121C98", VA = "0x1121C98", Slot = "14")]
		public override void WriteTo(ICodedOutputStream output)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x112242C", Offset = "0x112242C", VA = "0x112242C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1122544", Offset = "0x1122544", VA = "0x1122544", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x11227D4", Offset = "0x11227D4", VA = "0x11227D4", Slot = "15")]
		public override void PrintTo(TextWriter writer)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x1122934", Offset = "0x1122934", VA = "0x1122934")]
		public static PhoneEvent ParseFrom(ByteString data)
		{
			return null;
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x1122A1C", Offset = "0x1122A1C", VA = "0x1122A1C")]
		public static PhoneEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x1122ABC", Offset = "0x1122ABC", VA = "0x1122ABC")]
		public static PhoneEvent ParseFrom(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1122B4C", Offset = "0x1122B4C", VA = "0x1122B4C")]
		public static PhoneEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1122BEC", Offset = "0x1122BEC", VA = "0x1122BEC")]
		public static PhoneEvent ParseFrom(Stream input)
		{
			return null;
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1122C7C", Offset = "0x1122C7C", VA = "0x1122C7C")]
		public static PhoneEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1122D1C", Offset = "0x1122D1C", VA = "0x1122D1C")]
		public static PhoneEvent ParseDelimitedFrom(Stream input)
		{
			return null;
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x1122DAC", Offset = "0x1122DAC", VA = "0x1122DAC")]
		public static PhoneEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1122E4C", Offset = "0x1122E4C", VA = "0x1122E4C")]
		public static PhoneEvent ParseFrom(ICodedInputStream input)
		{
			return null;
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1122EDC", Offset = "0x1122EDC", VA = "0x1122EDC")]
		public static PhoneEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1122F7C", Offset = "0x1122F7C", VA = "0x1122F7C")]
		private PhoneEvent MakeReadOnly()
		{
			return null;
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x11229C4", Offset = "0x11229C4", VA = "0x11229C4")]
		public static Builder CreateBuilder()
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1123050", Offset = "0x1123050", VA = "0x1123050", Slot = "13")]
		public override Builder ToBuilder()
		{
			return null;
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1123114", Offset = "0x1123114", VA = "0x1123114", Slot = "12")]
		public override Builder CreateBuilderForType()
		{
			return null;
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x11230B4", Offset = "0x11230B4", VA = "0x11230B4")]
		public static Builder CreateBuilder(PhoneEvent prototype)
		{
			return null;
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x11231D8", Offset = "0x11231D8", VA = "0x11231D8")]
		static PhoneEvent()
		{
		}
	}
}
namespace proto.Proto
{
	[Token(Token = "0x20003C5")]
	[DebuggerNonUserCode]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x714B80", Offset = "0x714B80")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x714B80", Offset = "0x714B80")]
	public static class PhoneEvent
	{
		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly object Descriptor;

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x15CDA4C", Offset = "0x15CDA4C", VA = "0x15CDA4C")]
		public static void RegisterAllExtensions(ExtensionRegistry registry)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x15CDA50", Offset = "0x15CDA50", VA = "0x15CDA50")]
		static PhoneEvent()
		{
		}
	}
}
namespace Gvr.Internal
{
	[Token(Token = "0x20003C6")]
	public class GvrBetaHeadsetProvider
	{
		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr seeThroughConfig;

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xB05EC4", Offset = "0xB05EC4", VA = "0xB05EC4")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xB05FA0", Offset = "0xB05FA0", VA = "0xB05FA0")]
		public static void SetSeeThroughConfig(GvrBetaSeeThroughCameraMode cameraMode, GvrBetaSeeThroughSceneType sceneType)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xB05F20", Offset = "0xB05F20", VA = "0xB05F20")]
		private static extern IntPtr gvr_beta_see_through_config_create(IntPtr gvr_context);

		[PreserveSig]
		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xB06050", Offset = "0xB06050", VA = "0xB06050")]
		private static extern void gvr_beta_see_through_config_set_camera_mode(IntPtr config, int camera_mode);

		[PreserveSig]
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xB060E0", Offset = "0xB060E0", VA = "0xB060E0")]
		private static extern void gvr_beta_see_through_config_set_scene_type(IntPtr config, int scene_type);

		[PreserveSig]
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xB06170", Offset = "0xB06170", VA = "0xB06170")]
		private static extern void gvr_beta_set_see_through_config(IntPtr context, IntPtr config);

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xB06200", Offset = "0xB06200", VA = "0xB06200")]
		public GvrBetaHeadsetProvider()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class GvrBetaSettingsProvider
	{
		[Serializable]
		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715754", Offset = "0x715754")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<GvrBetaFeature, int> <>9__3_0;

			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0xB065E4", Offset = "0xB065E4", VA = "0xB065E4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0xB065EC", Offset = "0xB065EC", VA = "0xB065EC")]
			internal int <FeaturesToIds>b__3_0(GvrBetaFeature value)
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xB06208", Offset = "0xB06208", VA = "0xB06208")]
		public static bool IsFeatureSupported(GvrBetaFeature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xB06230", Offset = "0xB06230", VA = "0xB06230")]
		public static bool IsFeatureEnabled(GvrBetaFeature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xB062F8", Offset = "0xB062F8", VA = "0xB062F8")]
		public static void RequestFeatures(GvrBetaFeature[] requiredFeatures, GvrBetaFeature[] optionalFeatures)
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xB063A4", Offset = "0xB063A4", VA = "0xB063A4")]
		private static int[] FeaturesToIds(GvrBetaFeature[] features)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xB06260", Offset = "0xB06260", VA = "0xB06260")]
		private static extern bool gvr_user_prefs_is_feature_enabled(IntPtr user_prefs, int runtime_feature);

		[PreserveSig]
		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xB064A8", Offset = "0xB064A8", VA = "0xB064A8")]
		private static extern void gvr_request_features(IntPtr gvr_context, int[] required_features, int required_count, int[] optional_features, int optional_count, IntPtr on_complete_activity);

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xB06578", Offset = "0xB06578", VA = "0xB06578")]
		public GvrBetaSettingsProvider()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	internal static class ControllerProviderFactory
	{
		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xB03F98", Offset = "0xB03F98", VA = "0xB03F98")]
		internal static IControllerProvider CreateControllerProvider(GvrControllerInput owner)
		{
			return null;
		}
	}
	[Token(Token = "0x20003C9")]
	internal class AndroidNativeShimControllerProvider : IControllerProvider, IDisposable
	{
		[Token(Token = "0x2000569")]
		private enum GvrShimUnitySupport
		{
			[Token(Token = "0x4001FBD")]
			Supported,
			[Token(Token = "0x4001FBE")]
			PluginNotPresent,
			[Token(Token = "0x4001FBF")]
			ApiLevelUnavailable,
			[Token(Token = "0x4001FC0")]
			DeviceNotSupported
		}

		[Token(Token = "0x200056A")]
		private enum GvrShimConnectionStatus
		{
			[Token(Token = "0x4001FC2")]
			Disconnected = 0,
			[Token(Token = "0x4001FC3")]
			Scanning = 1,
			[Token(Token = "0x4001FC4")]
			Connecting = 2,
			[Token(Token = "0x4001FC5")]
			Connected = 3,
			[Token(Token = "0x4001FC6")]
			Error = 100
		}

		[Token(Token = "0x200056B")]
		private enum GvrShimTrackedDataAvailableFlags
		{
			[Token(Token = "0x4001FC8")]
			PositionAvailable = 2,
			[Token(Token = "0x4001FC9")]
			RotationAvailable = 4,
			[Token(Token = "0x4001FCA")]
			GyroAvailable = 8,
			[Token(Token = "0x4001FCB")]
			AccelerationAvailable = 0x10
		}

		[Token(Token = "0x200056C")]
		private struct GvrShimUnityControllerState
		{
			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion orientation;

			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 gyro;

			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 acceleration;

			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector2 touchPos;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int buttonState;

			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int buttonUp;

			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int buttonDown;

			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int recentered;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int batteryCharging;

			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int batteryLevel;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public int connectionState;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int trackedDataAvailable;
		}

		[Token(Token = "0x4001916")]
		private const int GVR_SHIM_UNITY_API_LEVEL = 1;

		[Token(Token = "0x4001917")]
		private const int GVR_SHIM_OK = 1;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int lastUpdateFrame;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MutablePose3D pose3d;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GvrControllerButton[] lastButtonStates;

		[Token(Token = "0x400191B")]
		private const string shimDllName = "gvrshim";

		[Token(Token = "0x1700020C")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xB037C4", Offset = "0xB037C4", VA = "0xB037C4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020D")]
		public int MaxControllerCount
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xB037CC", Offset = "0xB037CC", VA = "0xB037CC", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xB031F8", Offset = "0xB031F8", VA = "0xB031F8")]
		public static bool ShimAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xB03420", Offset = "0xB03420", VA = "0xB03420")]
		internal AndroidNativeShimControllerProvider()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xB03648", Offset = "0xB03648", VA = "0xB03648", Slot = "9")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xB036C4", Offset = "0xB036C4", VA = "0xB036C4", Slot = "10")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xB038DC", Offset = "0xB038DC", VA = "0xB038DC", Slot = "6")]
		public void OnPause()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xB039D4", Offset = "0xB039D4", VA = "0xB039D4", Slot = "7")]
		public void OnResume()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xB03A58", Offset = "0xB03A58", VA = "0xB03A58")]
		private static GvrConnectionState ConvertConnectionState(int connectionState)
		{
			return default(GvrConnectionState);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xB03A64", Offset = "0xB03A64", VA = "0xB03A64", Slot = "8")]
		public void ReadState(ControllerState outState, int controller_id)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xB03F18", Offset = "0xB03F18", VA = "0xB03F18")]
		private static extern int GvrShimUnity_getGVRVersion(ref float version);

		[PreserveSig]
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xB03390", Offset = "0xB03390", VA = "0xB03390")]
		private static extern int GvrShimUnity_getGVRShimSupportStatus(uint expected_api_level, ref int gvrshim_support_status);

		[PreserveSig]
		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xB03554", Offset = "0xB03554", VA = "0xB03554")]
		private static extern int GvrShimUnity_initShimWithContext(IntPtr gvr_context);

		[PreserveSig]
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xB03750", Offset = "0xB03750", VA = "0xB03750")]
		private static extern int GvrShimUnity_destroyShim();

		[PreserveSig]
		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xB03960", Offset = "0xB03960", VA = "0xB03960")]
		private static extern int GvrShimUnity_pauseShim();

		[PreserveSig]
		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xB035D4", Offset = "0xB035D4", VA = "0xB035D4")]
		private static extern int GvrShimUnity_resumeShim();

		[PreserveSig]
		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xB03D70", Offset = "0xB03D70", VA = "0xB03D70")]
		private static extern int GvrShimUnity_updateState();

		[PreserveSig]
		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xB03DE4", Offset = "0xB03DE4", VA = "0xB03DE4")]
		private static extern int GvrShimUnity_getControllerConnectionStatus(int device, ref int status);

		[PreserveSig]
		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xB03E74", Offset = "0xB03E74", VA = "0xB03E74")]
		private static extern int GvrShimUnity_getControllerState(int device, ref GvrShimUnityControllerState state);

		[PreserveSig]
		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xB0385C", Offset = "0xB0385C", VA = "0xB0385C")]
		private static extern int GvrShimUnity_getControllerCount(ref int count);
	}
	[Token(Token = "0x20003CA")]
	internal class DummyControllerProvider : IControllerProvider, IDisposable
	{
		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ControllerState dummyState;

		[Token(Token = "0x1700020E")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xB047F0", Offset = "0xB047F0", VA = "0xB047F0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020F")]
		public int MaxControllerCount
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xB047F8", Offset = "0xB047F8", VA = "0xB047F8", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xB04048", Offset = "0xB04048", VA = "0xB04048")]
		internal DummyControllerProvider()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xB04800", Offset = "0xB04800", VA = "0xB04800", Slot = "9")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xB04804", Offset = "0xB04804", VA = "0xB04804", Slot = "8")]
		public void ReadState(ControllerState outState, int controller_id)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xB04824", Offset = "0xB04824", VA = "0xB04824", Slot = "6")]
		public void OnPause()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xB04828", Offset = "0xB04828", VA = "0xB04828", Slot = "7")]
		public void OnResume()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	internal class MouseControllerProvider : IControllerProvider, IDisposable
	{
		[Token(Token = "0x400191D")]
		private const string AXIS_MOUSE_X = "Mouse X";

		[Token(Token = "0x400191E")]
		private const string AXIS_MOUSE_Y = "Mouse Y";

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ControllerState state;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 mouseDelta;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool wasTouching;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GvrControllerButton lastButtonsState;

		[Token(Token = "0x4001923")]
		private const float ROTATE_SENSITIVITY = 4.5f;

		[Token(Token = "0x4001924")]
		private const float TOUCH_SENSITIVITY = 0.12f;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 INVERT_Y;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly ControllerState dummyState;

		[Token(Token = "0x17000210")]
		public static bool IsMouseAvailable
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xB06954", Offset = "0xB06954", VA = "0xB06954")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000211")]
		public static bool IsActivateButtonPressed
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0xB069CC", Offset = "0xB069CC", VA = "0xB069CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000212")]
		public static bool IsClickButtonPressed
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0xB06A00", Offset = "0xB06A00", VA = "0xB06A00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000213")]
		public static bool IsAppButtonPressed
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0xB06A0C", Offset = "0xB06A0C", VA = "0xB06A0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000214")]
		public static bool IsHomeButtonPressed
		{
			[Token(Token = "0x6001803")]
			[Address(RVA = "0xB06A18", Offset = "0xB06A18", VA = "0xB06A18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000215")]
		public static bool IsTouching
		{
			[Token(Token = "0x6001804")]
			[Address(RVA = "0xB06A24", Offset = "0xB06A24", VA = "0xB06A24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000216")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0xB06A58", Offset = "0xB06A58", VA = "0xB06A58", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000217")]
		public int MaxControllerCount
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0xB06A60", Offset = "0xB06A60", VA = "0xB06A60", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xB06A68", Offset = "0xB06A68", VA = "0xB06A68")]
		internal MouseControllerProvider()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xB06ACC", Offset = "0xB06ACC", VA = "0xB06ACC", Slot = "9")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xB06AD0", Offset = "0xB06AD0", VA = "0xB06AD0", Slot = "8")]
		public void ReadState(ControllerState outState, int controller_id)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xB06D40", Offset = "0xB06D40", VA = "0xB06D40", Slot = "6")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xB06D44", Offset = "0xB06D44", VA = "0xB06D44", Slot = "7")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xB06C00", Offset = "0xB06C00", VA = "0xB06C00")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xB06F28", Offset = "0xB06F28", VA = "0xB06F28")]
		private void UpdateTouchPos()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xB07030", Offset = "0xB07030", VA = "0xB07030")]
		private void UpdateOrientation()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xB06D8C", Offset = "0xB06D8C", VA = "0xB06D8C")]
		private void UpdateButtonStates()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xB072B8", Offset = "0xB072B8", VA = "0xB072B8")]
		private void Recenter()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xB07274", Offset = "0xB07274", VA = "0xB07274")]
		private void ClearTouchPos()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xB06D48", Offset = "0xB06D48", VA = "0xB06D48")]
		private void ClearState()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	internal class ControllerState
	{
		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GvrConnectionState connectionState;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal GvrControllerApiStatus apiStatus;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Quaternion orientation;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Vector3 position;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal Vector3 gyro;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Vector3 accel;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal Vector2 touchPos;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal bool recentered;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		internal bool is6DoF;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal GvrControllerButton buttonsState;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal GvrControllerButton buttonsDown;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal GvrControllerButton buttonsUp;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal string errorDetails;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal IntPtr gvrPtr;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal bool isCharging;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal GvrControllerBatteryLevel batteryLevel;

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xB040AC", Offset = "0xB040AC", VA = "0xB040AC")]
		public void CopyFrom(ControllerState other)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xB04158", Offset = "0xB04158", VA = "0xB04158")]
		public void ClearTransientState()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xB03F04", Offset = "0xB03F04", VA = "0xB03F04")]
		public void SetButtonsUpDownFromPrevious(GvrControllerButton prevButtonsState)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xB04168", Offset = "0xB04168", VA = "0xB04168")]
		public ControllerState()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	internal class ControllerUtils
	{
		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly GvrControllerHand[] AllHands;

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xB04274", Offset = "0xB04274", VA = "0xB04274")]
		public static bool AnyButton(GvrControllerButton buttons)
		{
			return default(bool);
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xB044BC", Offset = "0xB044BC", VA = "0xB044BC")]
		public static bool AnyButtonDown(GvrControllerButton buttons)
		{
			return default(bool);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xB0460C", Offset = "0xB0460C", VA = "0xB0460C")]
		public static bool AnyButtonUp(GvrControllerButton buttons)
		{
			return default(bool);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xB0475C", Offset = "0xB0475C", VA = "0xB0475C")]
		public ControllerUtils()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	internal class EmulatorConfig : MonoBehaviour
	{
		[Token(Token = "0x200056D")]
		public enum Mode
		{
			[Token(Token = "0x4001FDA")]
			OFF,
			[Token(Token = "0x4001FDB")]
			USB,
			[Token(Token = "0x4001FDC")]
			WIFI
		}

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EmulatorConfig instance;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode PHONE_EVENT_MODE;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string USB_SERVER_IP;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string WIFI_SERVER_IP;

		[Token(Token = "0x17000218")]
		public static EmulatorConfig Instance
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0xB04B6C", Offset = "0xB04B6C", VA = "0xB04B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xB04E34", Offset = "0xB04E34", VA = "0xB04E34")]
		public EmulatorConfig()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	internal struct EmulatorGyroEvent
	{
		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Vector3 value;

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x79DBF0", Offset = "0x79DBF0", VA = "0x79DBF0")]
		public EmulatorGyroEvent(PhoneEvent.Types.GyroscopeEvent proto)
		{
		}
	}
	[Token(Token = "0x20003D0")]
	internal struct EmulatorAccelEvent
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Vector3 value;

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x79DB88", Offset = "0x79DB88", VA = "0x79DB88")]
		public EmulatorAccelEvent(PhoneEvent.Types.AccelerometerEvent proto)
		{
		}
	}
	[Token(Token = "0x20003D1")]
	internal struct EmulatorTouchEvent
	{
		[Token(Token = "0x200056E")]
		public enum Action
		{
			[Token(Token = "0x4001FDE")]
			kActionDown = 0,
			[Token(Token = "0x4001FDF")]
			kActionUp = 1,
			[Token(Token = "0x4001FE0")]
			kActionMove = 2,
			[Token(Token = "0x4001FE1")]
			kActionCancel = 3,
			[Token(Token = "0x4001FE2")]
			kActionPointerDown = 5,
			[Token(Token = "0x4001FE3")]
			kActionPointerUp = 6,
			[Token(Token = "0x4001FE4")]
			kActionHoverMove = 7,
			[Token(Token = "0x4001FE5")]
			kActionHoverEnter = 9,
			[Token(Token = "0x4001FE6")]
			kActionHoverExit = 10
		}

		[Token(Token = "0x200056F")]
		public struct Pointer
		{
			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int fingerId;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly float normalizedX;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float normalizedY;

			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x79DC78", Offset = "0x79DC78", VA = "0x79DC78")]
			public Pointer(int fingerId, float normalizedX, float normalizedY)
			{
			}

			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x79DC84", Offset = "0x79DC84", VA = "0x79DC84", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int action;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int relativeTimestamp;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly List<Pointer> pointers;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ACTION_POINTER_INDEX_SHIFT;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int ACTION_POINTER_INDEX_MASK;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ACTION_MASK;

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x79DC3C", Offset = "0x79DC3C", VA = "0x79DC3C")]
		public EmulatorTouchEvent(PhoneEvent.Types.MotionEvent proto, long lastDownTimeMs)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x79DC44", Offset = "0x79DC44", VA = "0x79DC44")]
		public EmulatorTouchEvent(Action action, int pointerId, int relativeTimestamp, List<Pointer> pointers)
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x79DC4C", Offset = "0x79DC4C", VA = "0x79DC4C")]
		public Action getActionMasked()
		{
			return default(Action);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x79DC54", Offset = "0x79DC54", VA = "0x79DC54")]
		public Pointer getActionPointer()
		{
			return default(Pointer);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xB05928", Offset = "0xB05928", VA = "0xB05928")]
		private static int getActionUnmasked(Action action, int fingerIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xB05880", Offset = "0xB05880", VA = "0xB05880")]
		private static int findPointerIndex(int fingerId, List<Pointer> pointers)
		{
			return default(int);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x79DC70", Offset = "0x79DC70", VA = "0x79DC70", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D2")]
	internal struct EmulatorOrientationEvent
	{
		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Quaternion orientation;

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x79DBF8", Offset = "0x79DBF8", VA = "0x79DBF8")]
		public EmulatorOrientationEvent(PhoneEvent.Types.OrientationEvent proto)
		{
		}
	}
	[Token(Token = "0x20003D3")]
	internal struct EmulatorButtonEvent
	{
		[Token(Token = "0x2000570")]
		public enum ButtonCode
		{
			[Token(Token = "0x4001FEB")]
			kNone = 0,
			[Token(Token = "0x4001FEC")]
			kHome = 3,
			[Token(Token = "0x4001FED")]
			kVolumeUp = 25,
			[Token(Token = "0x4001FEE")]
			kVolumeDown = 24,
			[Token(Token = "0x4001FEF")]
			kClick = 66,
			[Token(Token = "0x4001FF0")]
			kApp = 82
		}

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ButtonCode code;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly bool down;

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x79DBC4", Offset = "0x79DBC4", VA = "0x79DBC4")]
		public EmulatorButtonEvent(PhoneEvent.Types.KeyEvent proto)
		{
		}
	}
	[Token(Token = "0x20003D4")]
	internal interface IControllerProvider : IDisposable
	{
		[Token(Token = "0x17000219")]
		bool SupportsBatteryStatus
		{
			[Token(Token = "0x600182C")]
			get;
		}

		[Token(Token = "0x1700021A")]
		int MaxControllerCount
		{
			[Token(Token = "0x600182D")]
			get;
		}

		[Token(Token = "0x600182E")]
		void OnPause();

		[Token(Token = "0x600182F")]
		void OnResume();

		[Token(Token = "0x6001830")]
		void ReadState(ControllerState outState, int controller_id);
	}
	[Token(Token = "0x20003D5")]
	internal static class HeadsetProviderFactory
	{
		[Token(Token = "0x6001831")]
		[Address(RVA = "0xB06718", Offset = "0xB06718", VA = "0xB06718")]
		internal static IHeadsetProvider CreateProvider()
		{
			return null;
		}
	}
	[Token(Token = "0x20003D6")]
	internal enum gvr_feature
	{
		[Token(Token = "0x400194B")]
		HeadPose6dof = 3
	}
	[Token(Token = "0x20003D7")]
	internal enum gvr_property_type
	{
		[Token(Token = "0x400194D")]
		TrackingFloorHeight = 1,
		[Token(Token = "0x400194E")]
		RecenterTransform,
		[Token(Token = "0x400194F")]
		SafetyRegion,
		[Token(Token = "0x4001950")]
		SafetyCylinderInnerRadius,
		[Token(Token = "0x4001951")]
		SafetyCylinderOuterRadius
	}
	[Token(Token = "0x20003D8")]
	internal enum gvr_value_type
	{
		[Token(Token = "0x4001953")]
		None,
		[Token(Token = "0x4001954")]
		Float,
		[Token(Token = "0x4001955")]
		Double,
		[Token(Token = "0x4001956")]
		Int,
		[Token(Token = "0x4001957")]
		Int64,
		[Token(Token = "0x4001958")]
		Flags,
		[Token(Token = "0x4001959")]
		Sizei,
		[Token(Token = "0x400195A")]
		Recti,
		[Token(Token = "0x400195B")]
		Rectf,
		[Token(Token = "0x400195C")]
		Vec2f,
		[Token(Token = "0x400195D")]
		Vec3f,
		[Token(Token = "0x400195E")]
		Quat,
		[Token(Token = "0x400195F")]
		Mat4f,
		[Token(Token = "0x4001960")]
		ClockTimePoint
	}
	[Token(Token = "0x20003D9")]
	internal enum gvr_recenter_flags
	{
		[Token(Token = "0x4001962")]
		None
	}
	[Token(Token = "0x20003DA")]
	internal class AndroidNativeHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x2000571")]
		private class GvrValue
		{
			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly int HEADER_SIZE;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private gvr_value_header valueHeader;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private byte[] buffer;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IntPtr bufferPtr;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IntPtr valuePtr;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GCHandle bufferHandle;

			[Token(Token = "0x17000352")]
			public IntPtr BufferPtr
			{
				[Token(Token = "0x6001F60")]
				[Address(RVA = "0xB00AE8", Offset = "0xB00AE8", VA = "0xB00AE8")]
				get
				{
					return default(IntPtr);
				}
			}

			[Token(Token = "0x17000353")]
			public gvr_value_type TypeEnum
			{
				[Token(Token = "0x6001F61")]
				[Address(RVA = "0xB00A54", Offset = "0xB00A54", VA = "0xB00A54")]
				get
				{
					return default(gvr_value_type);
				}
			}

			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0xAFFA5C", Offset = "0xAFFA5C", VA = "0xAFFA5C")]
			public GvrValue()
			{
			}

			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0xB00A78", Offset = "0xB00A78", VA = "0xB00A78", Slot = "1")]
			~GvrValue()
			{
			}

			[Token(Token = "0x6001F62")]
			[Address(RVA = "0xB009D8", Offset = "0xB009D8", VA = "0xB009D8")]
			public void Parse()
			{
			}

			[Token(Token = "0x6001F63")]
			[Address(RVA = "0xB0075C", Offset = "0xB0075C", VA = "0xB0075C")]
			public int ToInt32()
			{
				return default(int);
			}

			[Token(Token = "0x6001F64")]
			[Address(RVA = "0xB00AF0", Offset = "0xB00AF0", VA = "0xB00AF0")]
			public long ToInt64()
			{
				return default(long);
			}

			[Token(Token = "0x6001F65")]
			[Address(RVA = "0xB00454", Offset = "0xB00454", VA = "0xB00454")]
			public float ToFloat()
			{
				return default(float);
			}

			[Token(Token = "0x6001F66")]
			[Address(RVA = "0xB00B90", Offset = "0xB00B90", VA = "0xB00B90")]
			public double ToDouble()
			{
				return default(double);
			}

			[Token(Token = "0x6001F67")]
			[Address(RVA = "0xB00C30", Offset = "0xB00C30", VA = "0xB00C30")]
			public Vector2 ToVector2()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001F68")]
			[Address(RVA = "0xB00D18", Offset = "0xB00D18", VA = "0xB00D18")]
			public Vector3 ToVector3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F69")]
			[Address(RVA = "0xB00E04", Offset = "0xB00E04", VA = "0xB00E04")]
			public Vector4 ToVector4()
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0xB00EF0", Offset = "0xB00EF0", VA = "0xB00EF0")]
			public Quaternion ToQuaternion()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0xB00FDC", Offset = "0xB00FDC", VA = "0xB00FDC")]
			public gvr_rectf ToGvrRectf()
			{
				return default(gvr_rectf);
			}

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0xB010C8", Offset = "0xB010C8", VA = "0xB010C8")]
			public gvr_recti ToGvrRecti()
			{
				return default(gvr_recti);
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xB005A8", Offset = "0xB005A8", VA = "0xB005A8")]
			public Matrix4x4 ToMatrix4x4()
			{
				return default(Matrix4x4);
			}
		}

		[StructLayout(0)]
		[Token(Token = "0x2000572")]
		private class gvr_recenter_event_data
		{
			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int recenter_event_type;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal uint recenter_event_flags;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float[] pose_transform;

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xAFFB78", Offset = "0xAFFB78", VA = "0xAFFB78")]
			public gvr_recenter_event_data()
			{
			}
		}

		[StructLayout(2)]
		[Token(Token = "0x2000573")]
		private class gvr_event_header
		{
			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal long timestamp;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int type;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int flags;

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xAFFB70", Offset = "0xAFFB70", VA = "0xAFFB70")]
			public gvr_event_header()
			{
			}
		}

		[StructLayout(2)]
		[Token(Token = "0x2000574")]
		private class gvr_value_header
		{
			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal gvr_value_type value_type;

			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int flags;

			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xB00A70", Offset = "0xB00A70", VA = "0xB00A70")]
			public gvr_value_header()
			{
			}
		}

		[Token(Token = "0x2000575")]
		public struct gvr_sizei
		{
			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int width;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int height;
		}

		[Token(Token = "0x2000576")]
		public struct gvr_recti
		{
			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int left;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int right;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int bottom;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal int top;
		}

		[Token(Token = "0x2000577")]
		public struct gvr_rectf
		{
			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float left;

			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float right;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float bottom;

			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float top;
		}

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr gvrContextPtr;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GvrValue gvrValue;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private gvr_event_header gvrEventHeader;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private gvr_recenter_event_data gvrRecenterEventData;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] gvrEventBuffer;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GCHandle gvrEventHandle;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IntPtr gvrEventPtr;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IntPtr gvrPropertiesPtr;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int supportsPositionalTracking;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MutablePose3D transientRecenteredPose3d;

		[Token(Token = "0x400196D")]
		private const string DLL_NAME = "gvr";

		[Token(Token = "0x1700021B")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0xAFF84C", Offset = "0xAFF84C", VA = "0xAFF84C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xAFF924", Offset = "0xAFF924", VA = "0xAFF924")]
		internal AndroidNativeHeadsetProvider()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xAFFBD8", Offset = "0xAFFBD8", VA = "0xAFFBD8", Slot = "1")]
		~AndroidNativeHeadsetProvider()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xAFFC48", Offset = "0xAFFC48", VA = "0xAFFC48", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xAFFFD8", Offset = "0xAFFFD8", VA = "0xAFFFD8", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xB004F4", Offset = "0xB004F4", VA = "0xB004F4", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xB0070C", Offset = "0xB0070C", VA = "0xB0070C", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xB007FC", Offset = "0xB007FC", VA = "0xB007FC", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xB0084C", Offset = "0xB0084C", VA = "0xB0084C", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xB00028", Offset = "0xB00028", VA = "0xB00028")]
		private bool _GvrGetProperty(gvr_property_type propertyType, GvrValue valueOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xAFFF14", Offset = "0xAFFF14", VA = "0xAFFF14")]
		private void _HandleRecenterEvent(ref HeadsetState state, gvr_recenter_event_data eventData)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xB0089C", Offset = "0xB0089C", VA = "0xB0089C")]
		private gvr_value_type GetPropertyValueType(gvr_property_type propertyType)
		{
			return default(gvr_value_type);
		}

		[PreserveSig]
		[Token(Token = "0x600183E")]
		[Address(RVA = "0xAFF88C", Offset = "0xAFF88C", VA = "0xAFF88C")]
		internal static extern bool gvr_is_feature_supported(IntPtr gvr_context, int feature);

		[PreserveSig]
		[Token(Token = "0x600183F")]
		[Address(RVA = "0xAFFE84", Offset = "0xAFFE84", VA = "0xAFFE84")]
		private static extern int gvr_poll_event(IntPtr gvr_context, IntPtr event_out);

		[PreserveSig]
		[Token(Token = "0x6001840")]
		[Address(RVA = "0xB008C0", Offset = "0xB008C0", VA = "0xB008C0")]
		private static extern IntPtr gvr_get_current_properties(IntPtr gvr_context);

		[PreserveSig]
		[Token(Token = "0x6001841")]
		[Address(RVA = "0xB00940", Offset = "0xB00940", VA = "0xB00940")]
		private static extern int gvr_properties_get(IntPtr gvr_properties, gvr_property_type property_type, IntPtr value_out);
	}
	[Token(Token = "0x20003DB")]
	internal class DummyHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HeadsetState dummyState;

		[Token(Token = "0x1700021C")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xB0482C", Offset = "0xB0482C", VA = "0xB0482C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xB04834", Offset = "0xB04834", VA = "0xB04834", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xB04838", Offset = "0xB04838", VA = "0xB04838", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xB04840", Offset = "0xB04840", VA = "0xB04840", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xB04848", Offset = "0xB04848", VA = "0xB04848", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xB04850", Offset = "0xB04850", VA = "0xB04850", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xB04858", Offset = "0xB04858", VA = "0xB04858", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xB04860", Offset = "0xB04860", VA = "0xB04860")]
		public DummyHeadsetProvider()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class EditorHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x400196F")]
		public const float DEFAULT_FLOOR_HEIGHT_3DOF = -1.6f;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 DEFAULT_RECENTER_TRANSFORM_POSITION;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Quaternion DEFAULT_RECENTER_TRANSFORM_ROTATION;

		[Token(Token = "0x4001972")]
		public const GvrSafetyRegionType DEFAULT_SAFETY_REGION_TYPE_3DOF = GvrSafetyRegionType.Cylinder;

		[Token(Token = "0x4001973")]
		public const float DEFAULT_SAFETY_CYLINDER_ENTER_RADIUS_3DOF = 0.6f;

		[Token(Token = "0x4001974")]
		public const float DEFAULT_SAFETY_CYLINDER_EXIT_RADIUS_3DOF = 0.7f;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HeadsetState dummyState;

		[Token(Token = "0x1700021D")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0xB04930", Offset = "0xB04930", VA = "0xB04930", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xB04938", Offset = "0xB04938", VA = "0xB04938", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xB0493C", Offset = "0xB0493C", VA = "0xB0493C", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xB04950", Offset = "0xB04950", VA = "0xB04950", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xB049E8", Offset = "0xB049E8", VA = "0xB049E8", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xB049F8", Offset = "0xB049F8", VA = "0xB049F8", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xB04A0C", Offset = "0xB04A0C", VA = "0xB04A0C", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xB04A20", Offset = "0xB04A20", VA = "0xB04A20")]
		public EditorHeadsetProvider()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public struct HeadsetState
	{
		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GvrEventType eventType;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int eventFlags;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal long eventTimestampNs;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GvrRecenterEventType recenterEventType;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal uint recenterEventFlags;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vector3 recenteredPosition;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal Quaternion recenteredRotation;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x79DC8C", Offset = "0x79DC8C", VA = "0x79DC8C")]
		public void Initialize()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	internal interface IHeadsetProvider
	{
		[Token(Token = "0x1700021E")]
		bool SupportsPositionalTracking
		{
			[Token(Token = "0x6001854")]
			get;
		}

		[Token(Token = "0x6001855")]
		void PollEventState(ref HeadsetState outState);

		[Token(Token = "0x6001856")]
		bool TryGetFloorHeight(ref float floorHeight);

		[Token(Token = "0x6001857")]
		bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation);

		[Token(Token = "0x6001858")]
		bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType);

		[Token(Token = "0x6001859")]
		bool TryGetSafetyCylinderInnerRadius(ref float innerRadius);

		[Token(Token = "0x600185A")]
		bool TryGetSafetyCylinderOuterRadius(ref float outerRadius);
	}
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x714BF0", Offset = "0x714BF0")]
	public class InstantPreview : MonoBehaviour
	{
		[Token(Token = "0x2000578")]
		public enum Resolutions
		{
			[Token(Token = "0x400200A")]
			Big,
			[Token(Token = "0x400200B")]
			Regular,
			[Token(Token = "0x400200C")]
			WindowSized
		}

		[Token(Token = "0x2000579")]
		private struct ResolutionSize
		{
			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int width;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int height;
		}

		[Token(Token = "0x200057A")]
		public enum MultisampleCounts
		{
			[Token(Token = "0x4002010")]
			One,
			[Token(Token = "0x4002011")]
			Two,
			[Token(Token = "0x4002012")]
			Four,
			[Token(Token = "0x4002013")]
			Eight
		}

		[Token(Token = "0x200057B")]
		public enum BitRates
		{
			[Token(Token = "0x4002015")]
			_2000,
			[Token(Token = "0x4002016")]
			_4000,
			[Token(Token = "0x4002017")]
			_8000,
			[Token(Token = "0x4002018")]
			_16000,
			[Token(Token = "0x4002019")]
			_24000,
			[Token(Token = "0x400201A")]
			_32000
		}

		[Token(Token = "0x200057C")]
		private struct UnityRect
		{
			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float right;

			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float left;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float top;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float bottom;
		}

		[Token(Token = "0x200057D")]
		private struct UnityEyeViews
		{
			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Matrix4x4 leftEyePose;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Matrix4x4 rightEyePose;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public UnityRect leftEyeViewSize;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public UnityRect rightEyeViewSize;
		}

		[Token(Token = "0x200057E")]
		public struct UnityBoolAtom
		{
			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool isValid;
		}

		[Token(Token = "0x200057F")]
		public struct UnityFloatAtom
		{
			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float value;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool isValid;
		}

		[Token(Token = "0x2000580")]
		public struct UnityIntAtom
		{
			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int value;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool isValid;
		}

		[Token(Token = "0x2000581")]
		public struct UnityGvrMat4fAtom
		{
			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Matrix4x4 value;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isValid;
		}

		[Token(Token = "0x2000582")]
		private struct UnityGlobalGvrProperties
		{
			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal UnityBoolAtom supportsPositionalHeadTracking;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			internal UnityBoolAtom supportsSeeThrough;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal UnityFloatAtom floorHeight;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal UnityGvrMat4fAtom recenterTransform;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal UnityIntAtom safetyRegionType;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal UnityFloatAtom safetyCylinderEnterRadius;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal UnityFloatAtom safetyCylinderExitRadius;
		}

		[Token(Token = "0x2000583")]
		public enum GvrEventType
		{
			[Token(Token = "0x4002033")]
			GVR_EVENT_NONE,
			[Token(Token = "0x4002034")]
			GVR_EVENT_RECENTER,
			[Token(Token = "0x4002035")]
			GVR_EVENT_SAFETY_REGION_EXIT,
			[Token(Token = "0x4002036")]
			GVR_EVENT_SAFETY_REGION_ENTER,
			[Token(Token = "0x4002037")]
			GVR_EVENT_HEAD_TRACKING_RESUMED,
			[Token(Token = "0x4002038")]
			GVR_EVENT_HEAD_TRACKING_PAUSED
		}

		[Token(Token = "0x2000584")]
		public enum GvrRecenterEventType
		{
			[Token(Token = "0x400203A")]
			GVR_RECENTER_EVENT_NONE,
			[Token(Token = "0x400203B")]
			GVR_RECENTER_EVENT_RESTART,
			[Token(Token = "0x400203C")]
			GVR_RECENTER_EVENT_ALIGNED,
			[Token(Token = "0x400203D")]
			GVR_RECENTER_EVENT_DON
		}

		[Token(Token = "0x2000585")]
		internal struct UnityGvrRecenterEventData
		{
			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal GvrRecenterEventType recenter_type;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal uint recenter_event_flags;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Matrix4x4 start_space_from_tracking_space_transform;
		}

		[Token(Token = "0x2000586")]
		internal struct UnityGvrEvent
		{
			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal long timestamp;

			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal GvrEventType type;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal uint flags;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal UnityGvrRecenterEventData gvr_recenter_event_data;
		}

		[Serializable]
		[Token(Token = "0x2000587")]
		public struct UnityGvrUserPreferences
		{
			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GvrSettings.UserPrefsHandedness handedness;
		}

		[Token(Token = "0x400197D")]
		private const string NoDevicesFoundAdbResult = "error: no devices/emulators found";

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71C6B0", Offset = "0x71C6B0")]
		private static InstantPreview <Instance>k__BackingField;

		[Token(Token = "0x400197F")]
		internal const string dllName = "instant_preview_unity_plugin";

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C6C0", Offset = "0x71C6C0")]
		public Resolutions OutputResolution;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C6F8", Offset = "0x71C6F8")]
		public MultisampleCounts MultisampleCount;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C730", Offset = "0x71C730")]
		public BitRates BitRate;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C768", Offset = "0x71C768")]
		public bool InstallApkOnRun;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object InstantPreviewApk;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C7A0", Offset = "0x71C7A0")]
		public bool overrideDeviceUserPrefs;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public UnityGvrUserPreferences editorUserPrefs;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71C7E8", Offset = "0x71C7E8")]
		private UnityGvrUserPreferences <deviceUserPrefs>k__BackingField;

		[Token(Token = "0x1700021F")]
		public static bool IsActive
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0xB06820", Offset = "0xB06820", VA = "0xB06820")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		internal static InstantPreview Instance
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xB06828", Offset = "0xB06828", VA = "0xB06828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7217F0", Offset = "0x7217F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xB06878", Offset = "0xB06878", VA = "0xB06878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721800", Offset = "0x721800")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public UnityGvrUserPreferences deviceUserPrefs
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xB068CC", Offset = "0xB068CC", VA = "0xB068CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721810", Offset = "0x721810")]
			get
			{
				return default(UnityGvrUserPreferences);
			}
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xB068D4", Offset = "0xB068D4", VA = "0xB068D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721820", Offset = "0x721820")]
			private set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public bool IsCurrentlyConnected
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xB068DC", Offset = "0xB068DC", VA = "0xB068DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xB068E4", Offset = "0xB068E4", VA = "0xB068E4")]
		public InstantPreview()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class EditorCameraOriginDict : MonoBehaviour
	{
		[Token(Token = "0x6001862")]
		[Address(RVA = "0xB04928", Offset = "0xB04928", VA = "0xB04928")]
		public EditorCameraOriginDict()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	internal interface IKeyboardProvider
	{
		[Token(Token = "0x17000223")]
		string EditorText
		{
			[Token(Token = "0x600186C")]
			get;
			[Token(Token = "0x600186D")]
			set;
		}

		[Token(Token = "0x6001863")]
		void OnPause();

		[Token(Token = "0x6001864")]
		void OnResume();

		[Token(Token = "0x6001865")]
		void ReadState(KeyboardState outState);

		[Token(Token = "0x6001866")]
		bool Create(GvrKeyboard.KeyboardCallback keyboardEvent);

		[Token(Token = "0x6001867")]
		void UpdateData();

		[Token(Token = "0x6001868")]
		void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport);

		[Token(Token = "0x6001869")]
		void Hide();

		[Token(Token = "0x600186A")]
		void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model);

		[Token(Token = "0x600186B")]
		void SetInputMode(GvrKeyboardInputMode mode);
	}
	[Token(Token = "0x20003E2")]
	internal static class KeyboardProviderFactory
	{
		[Token(Token = "0x600186E")]
		[Address(RVA = "0xB068FC", Offset = "0xB068FC", VA = "0xB068FC")]
		internal static IKeyboardProvider CreateKeyboardProvider(GvrKeyboard owner)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E3")]
	public class AndroidNativeKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x2000588")]
		private struct gvr_clock_time_point
		{
			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long monotonic_system_time_nanos;
		}

		[Token(Token = "0x2000589")]
		private struct gvr_recti
		{
			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int left;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int right;

			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bottom;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int top;
		}

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr renderEventFunction;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float currentDistance;

		[Token(Token = "0x400198A")]
		private const string METHOD_NAME_GET_PACKAGE_MANAGER = "getPackageManager";

		[Token(Token = "0x400198B")]
		private const string METHOD_NAME_GET_PACKAGE_INFO = "getPackageInfo";

		[Token(Token = "0x400198C")]
		private const string PACKAGE_NAME_VRINPUTMETHOD = "com.google.android.vr.inputmethod";

		[Token(Token = "0x400198D")]
		private const string FIELD_NAME_VERSION_CODE = "versionCode";

		[Token(Token = "0x400198E")]
		private const int MIN_VERSION_VRINPUTMETHOD = 170509062;

		[Token(Token = "0x400198F")]
		private const string dllName = "gvr_keyboard_shim_unity";

		[Token(Token = "0x4001990")]
		private const int TRIGGER_NONE = 0;

		[Token(Token = "0x4001991")]
		private const int TRIGGER_PRESSED = 1;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IntPtr keyboard_context;

		[Token(Token = "0x4001993")]
		private const int advanceID = 1571584315;

		[Token(Token = "0x4001994")]
		private const int renderLeftID = 1022982717;

		[Token(Token = "0x4001995")]
		private const int renderRightID = 1022982718;

		[Token(Token = "0x4001996")]
		private const string KEYBOARD_JAVA_CLASS = "com.google.vr.keyboard.GvrKeyboardUnity";

		[Token(Token = "0x4001997")]
		private const long kPredictionTimeWithoutVsyncNanos = 50000000L;

		[Token(Token = "0x4001998")]
		private const int kGvrControllerButtonClick = 1;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GvrKeyboardInputMode mode;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string editorText;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Matrix4x4 worldMatrix;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isValid;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool isReady;

		[Token(Token = "0x17000224")]
		public string EditorText
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0xB01C08", Offset = "0xB01C08", VA = "0xB01C08", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001882")]
			[Address(RVA = "0xB01C88", Offset = "0xB01C88", VA = "0xB01C88", Slot = "14")]
			set
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x600186F")]
		[Address(RVA = "0xB01270", Offset = "0xB01270", VA = "0xB01270")]
		private static extern gvr_clock_time_point gvr_get_time_point_now();

		[PreserveSig]
		[Token(Token = "0x6001870")]
		[Address(RVA = "0xB012E4", Offset = "0xB012E4", VA = "0xB012E4")]
		private static extern GvrKeyboardInputMode gvr_keyboard_get_input_mode(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6001871")]
		[Address(RVA = "0xB01364", Offset = "0xB01364", VA = "0xB01364")]
		private static extern void gvr_keyboard_set_input_mode(IntPtr keyboard_context, GvrKeyboardInputMode mode);

		[PreserveSig]
		[Token(Token = "0x6001872")]
		[Address(RVA = "0xB013F4", Offset = "0xB013F4", VA = "0xB013F4")]
		private static extern IntPtr gvr_keyboard_initialize(AndroidJavaObject app_context, AndroidJavaObject class_loader);

		[PreserveSig]
		[Token(Token = "0x6001873")]
		[Address(RVA = "0xB01410", Offset = "0xB01410", VA = "0xB01410")]
		private static extern IntPtr gvr_keyboard_create(IntPtr closure, GvrKeyboard.KeyboardCallback callback);

		[PreserveSig]
		[Token(Token = "0x6001874")]
		[Address(RVA = "0xB014A8", Offset = "0xB014A8", VA = "0xB014A8")]
		private static extern void gvr_keyboard_get_recommended_world_from_keyboard_matrix(float distance_from_eye, IntPtr matrix);

		[PreserveSig]
		[Token(Token = "0x6001875")]
		[Address(RVA = "0xB01538", Offset = "0xB01538", VA = "0xB01538")]
		private static extern void gvr_keyboard_set_world_from_keyboard_matrix(IntPtr keyboard_context, IntPtr matrix);

		[PreserveSig]
		[Token(Token = "0x6001876")]
		[Address(RVA = "0xB015C8", Offset = "0xB015C8", VA = "0xB015C8")]
		private static extern void gvr_keyboard_show(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6001877")]
		[Address(RVA = "0xB01648", Offset = "0xB01648", VA = "0xB01648")]
		private static extern void gvr_keyboard_update_button_state(IntPtr keyboard_context, int buttonIndex, bool pressed);

		[PreserveSig]
		[Token(Token = "0x6001878")]
		[Address(RVA = "0xB016E0", Offset = "0xB016E0", VA = "0xB016E0")]
		private static extern bool gvr_keyboard_update_controller_ray(IntPtr keyboard_context, IntPtr vector3Start, IntPtr vector3End, IntPtr vector3Hit);

		[PreserveSig]
		[Token(Token = "0x6001879")]
		[Address(RVA = "0xB01790", Offset = "0xB01790", VA = "0xB01790")]
		private static extern void gvr_keyboard_update_controller_touch(IntPtr keyboard_context, bool touched, IntPtr vector2Pos);

		[PreserveSig]
		[Token(Token = "0x600187A")]
		[Address(RVA = "0xB01828", Offset = "0xB01828", VA = "0xB01828")]
		private static extern IntPtr gvr_keyboard_get_text(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x600187B")]
		[Address(RVA = "0xB018A8", Offset = "0xB018A8", VA = "0xB018A8")]
		private static extern int gvr_keyboard_set_text(IntPtr keyboard_context, IntPtr edit_text);

		[PreserveSig]
		[Token(Token = "0x600187C")]
		[Address(RVA = "0xB01938", Offset = "0xB01938", VA = "0xB01938")]
		private static extern void gvr_keyboard_hide(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x600187D")]
		[Address(RVA = "0xB019B8", Offset = "0xB019B8", VA = "0xB019B8")]
		private static extern void gvr_keyboard_destroy(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x600187E")]
		[Address(RVA = "0xB01A38", Offset = "0xB01A38", VA = "0xB01A38")]
		private static extern void GvrKeyboardSetFrameData(IntPtr keyboard_context, gvr_clock_time_point t);

		[PreserveSig]
		[Token(Token = "0x600187F")]
		[Address(RVA = "0xB01AC4", Offset = "0xB01AC4", VA = "0xB01AC4")]
		private static extern void GvrKeyboardSetEyeData(int eye_type, Matrix4x4 modelview, Matrix4x4 projection, gvr_recti viewport);

		[PreserveSig]
		[Token(Token = "0x6001880")]
		[Address(RVA = "0xB01B94", Offset = "0xB01B94", VA = "0xB01B94")]
		private static extern IntPtr GetKeyboardRenderEventFunc();

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xB01D10", Offset = "0xB01D10", VA = "0xB01D10", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xB01DD4", Offset = "0xB01DD4", VA = "0xB01DD4", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xB01DD8", Offset = "0xB01DD8", VA = "0xB01DD8", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xB01DDC", Offset = "0xB01DDC", VA = "0xB01DDC", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xB01E28", Offset = "0xB01E28", VA = "0xB01E28")]
		public AndroidNativeKeyboardProvider()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xB022F4", Offset = "0xB022F4", VA = "0xB022F4", Slot = "1")]
		~AndroidNativeKeyboardProvider()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xB0239C", Offset = "0xB0239C", VA = "0xB0239C", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xB026E0", Offset = "0xB026E0", VA = "0xB026E0", Slot = "11")]
		public void Show(Matrix4x4 userMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xB02AEC", Offset = "0xB02AEC", VA = "0xB02AEC", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xB02FA4", Offset = "0xB02FA4", VA = "0xB02FA4", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xB031F0", Offset = "0xB031F0", VA = "0xB031F0", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xB02928", Offset = "0xB02928", VA = "0xB02928")]
		private Matrix4x4 getRecommendedMatrix(float inputDistance)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xB02424", Offset = "0xB02424", VA = "0xB02424")]
		private bool IsVrInputMethodAppMinVersion(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E4")]
	internal class DummyKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyboardState dummyState;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71C7F8", Offset = "0x71C7F8")]
		private string <EditorText>k__BackingField;

		[Token(Token = "0x17000225")]
		public string EditorText
		{
			[Token(Token = "0x600189A")]
			[Address(RVA = "0xB04918", Offset = "0xB04918", VA = "0xB04918", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721830", Offset = "0x721830")]
			get
			{
				return null;
			}
			[Token(Token = "0x600189B")]
			[Address(RVA = "0xB04920", Offset = "0xB04920", VA = "0xB04920", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721840", Offset = "0x721840")]
			set
			{
			}
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xB04868", Offset = "0xB04868", VA = "0xB04868")]
		internal DummyKeyboardProvider()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xB048D0", Offset = "0xB048D0", VA = "0xB048D0", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xB048F4", Offset = "0xB048F4", VA = "0xB048F4", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xB048F8", Offset = "0xB048F8", VA = "0xB048F8", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xB048FC", Offset = "0xB048FC", VA = "0xB048FC", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xB04900", Offset = "0xB04900", VA = "0xB04900", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xB04904", Offset = "0xB04904", VA = "0xB04904", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xB04908", Offset = "0xB04908", VA = "0xB04908", Slot = "11")]
		public void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xB0490C", Offset = "0xB0490C", VA = "0xB0490C", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xB04914", Offset = "0xB04914", VA = "0xB04914", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class EmulatorKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject stub;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool showing;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GvrKeyboard.KeyboardCallback keyboardCallback;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string editorText;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GvrKeyboardInputMode mode;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Matrix4x4 worldMatrix;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isValid;

		[Token(Token = "0x17000226")]
		public string EditorText
		{
			[Token(Token = "0x600189C")]
			[Address(RVA = "0xB04F1C", Offset = "0xB04F1C", VA = "0xB04F1C", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x600189D")]
			[Address(RVA = "0xB04F24", Offset = "0xB04F24", VA = "0xB04F24", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xB04F2C", Offset = "0xB04F2C", VA = "0xB04F2C", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xB04F34", Offset = "0xB04F34", VA = "0xB04F34")]
		public EmulatorKeyboardProvider()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xB04FD8", Offset = "0xB04FD8", VA = "0xB04FD8", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xB04FDC", Offset = "0xB04FDC", VA = "0xB04FDC", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xB04FE0", Offset = "0xB04FE0", VA = "0xB04FE0", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xB0502C", Offset = "0xB0502C", VA = "0xB0502C", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xB050A4", Offset = "0xB050A4", VA = "0xB050A4", Slot = "11")]
		public void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xB05148", Offset = "0xB05148", VA = "0xB05148", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xB0532C", Offset = "0xB0532C", VA = "0xB0532C", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xB05330", Offset = "0xB05330", VA = "0xB05330", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xB052D4", Offset = "0xB052D4", VA = "0xB052D4")]
		private void SendUpdateNotification()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class GvrCursorHelper
	{
		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool cachedHeadEmulationActive;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool cachedControllerEmulationActive;

		[Token(Token = "0x17000227")]
		public static bool HeadEmulationActive
		{
			[Token(Token = "0x60018A9")]
			[Address(RVA = "0xB065F4", Offset = "0xB065F4", VA = "0xB065F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public static bool ControllerEmulationActive
		{
			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xB066B8", Offset = "0xB066B8", VA = "0xB066B8")]
			set
			{
			}
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xB0664C", Offset = "0xB0664C", VA = "0xB0664C")]
		private static void UpdateCursorLockState()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xB06710", Offset = "0xB06710", VA = "0xB06710")]
		public GvrCursorHelper()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x714C28", Offset = "0x714C28")]
	public class SuppressMemoryAllocationErrorAttribute : Attribute
	{
		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71C808", Offset = "0x71C808")]
		private bool <IsWarning>k__BackingField;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71C818", Offset = "0x71C818")]
		private string <Reason>k__BackingField;

		[Token(Token = "0x17000229")]
		public bool IsWarning
		{
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xB074D8", Offset = "0xB074D8", VA = "0xB074D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721850", Offset = "0x721850")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0xB074E0", Offset = "0xB074E0", VA = "0xB074E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721860", Offset = "0x721860")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public string Reason
		{
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0xB074EC", Offset = "0xB074EC", VA = "0xB074EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721870", Offset = "0x721870")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0xB074F4", Offset = "0xB074F4", VA = "0xB074F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721880", Offset = "0x721880")]
			set
			{
			}
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xB07478", Offset = "0xB07478", VA = "0xB07478")]
		public SuppressMemoryAllocationErrorAttribute()
		{
		}
	}
}
namespace GoogleVR.VideoDemo
{
	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714C5C", Offset = "0x714C5C")]
	public class AutoPlayVideo : MonoBehaviour
	{
		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool loop;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool done;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float t;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GvrVideoPlayerTexture player;

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xAFC0B8", Offset = "0xAFC0B8", VA = "0xAFC0B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xAFC16C", Offset = "0xAFC16C", VA = "0xAFC16C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xAFC2C0", Offset = "0xAFC2C0", VA = "0xAFC2C0")]
		public AutoPlayVideo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E9")]
	public class BoolEvent : UnityEvent<bool>
	{
		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xAFC2D0", Offset = "0xAFC2D0", VA = "0xAFC2D0")]
		public BoolEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EA")]
	public class ButtonEvent : UnityEvent
	{
		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xAFC320", Offset = "0xAFC320", VA = "0xAFC320")]
		public ButtonEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EB")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xAFC328", Offset = "0xAFC328", VA = "0xAFC328")]
		public FloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EC")]
	public class GameObjectEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xAFC378", Offset = "0xAFC378", VA = "0xAFC378")]
		public GameObjectEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003ED")]
	public class TouchPadEvent : UnityEvent
	{
		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xAFCED4", Offset = "0xAFCED4", VA = "0xAFCED4")]
		public TouchPadEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EE")]
	public class TransformEvent : UnityEvent<Transform>
	{
		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xAFCEDC", Offset = "0xAFCEDC", VA = "0xAFCEDC")]
		public TransformEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003EF")]
	public class Vector2Event : UnityEvent<Vector2>
	{
		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xAFCF2C", Offset = "0xAFCF2C", VA = "0xAFCF2C")]
		public Vector2Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F0")]
	public class Vector3Event : UnityEvent<Vector3>
	{
		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xAFCF7C", Offset = "0xAFCF7C", VA = "0xAFCF7C")]
		public Vector3Event()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class ScrubberEvents : MonoBehaviour
	{
		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject newPositionHandle;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] corners;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Slider slider;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VideoControlsManager mgr;

		[Token(Token = "0x1700022B")]
		public VideoControlsManager ControlManager
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0xAFC3C8", Offset = "0xAFC3C8", VA = "0xAFC3C8")]
			set
			{
			}
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xAFC3D0", Offset = "0xAFC3D0", VA = "0xAFC3D0")]
		public void OnPointerEnter(BaseEventData data)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xAFC560", Offset = "0xAFC560", VA = "0xAFC560")]
		public void OnPointerExit(BaseEventData data)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xAFC580", Offset = "0xAFC580", VA = "0xAFC580")]
		public void OnPointerClick(BaseEventData data)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xAFC6A0", Offset = "0xAFC6A0", VA = "0xAFC6A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xAFC7F8", Offset = "0xAFC7F8", VA = "0xAFC7F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xAFC9B0", Offset = "0xAFC9B0", VA = "0xAFC9B0")]
		public ScrubberEvents()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class SwitchVideos : MonoBehaviour
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject localVideoSample;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject dashVideoSample;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject panoVideoSample;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text missingLibText;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] videoSamples;

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xAFC9B8", Offset = "0xAFC9B8", VA = "0xAFC9B8")]
		public void Awake()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xAFCCB0", Offset = "0xAFCCB0", VA = "0xAFCCB0")]
		public void ShowMainMenu()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xAFCEB4", Offset = "0xAFCEB4", VA = "0xAFCEB4")]
		public void OnFlatLocal()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xAFCEBC", Offset = "0xAFCEBC", VA = "0xAFCEBC")]
		public void OnDash()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xAFCEC4", Offset = "0xAFCEC4", VA = "0xAFCEC4")]
		public void On360Video()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xAFCCB8", Offset = "0xAFCCB8", VA = "0xAFCCB8")]
		private void ShowSample(int index)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xAFCECC", Offset = "0xAFCECC", VA = "0xAFCECC")]
		public SwitchVideos()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class VideoControlsManager : MonoBehaviour
	{
		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715764", Offset = "0x715764")]
		private sealed class <DoAppear>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VideoControlsManager <>4__this;

			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CanvasGroup <cg>5__2;

			[Token(Token = "0x17000354")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F75")]
				[Address(RVA = "0xAFE0B8", Offset = "0xAFE0B8", VA = "0xAFE0B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000355")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F77")]
				[Address(RVA = "0xAFE120", Offset = "0xAFE120", VA = "0xAFE120", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xAFDF48", Offset = "0xAFDF48", VA = "0xAFDF48")]
			[DebuggerHidden]
			public <DoAppear>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xAFDFA8", Offset = "0xAFDFA8", VA = "0xAFDFA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xAFDFAC", Offset = "0xAFDFAC", VA = "0xAFDFAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xAFE0C0", Offset = "0xAFE0C0", VA = "0xAFE0C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715774", Offset = "0x715774")]
		private sealed class <DoFade>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VideoControlsManager <>4__this;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CanvasGroup <cg>5__2;

			[Token(Token = "0x17000356")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F7B")]
				[Address(RVA = "0xAFE248", Offset = "0xAFE248", VA = "0xAFE248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000357")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F7D")]
				[Address(RVA = "0xAFE2B0", Offset = "0xAFE2B0", VA = "0xAFE2B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0xAFDF74", Offset = "0xAFDF74", VA = "0xAFDF74")]
			[DebuggerHidden]
			public <DoFade>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0xAFE128", Offset = "0xAFE128", VA = "0xAFE128", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xAFE12C", Offset = "0xAFE12C", VA = "0xAFE12C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0xAFE250", Offset = "0xAFE250", VA = "0xAFE250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject pauseSprite;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject playSprite;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Slider videoScrubber;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Slider volumeSlider;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject volumeWidget;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject settingsPanel;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject bufferedBackground;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 basePosition;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text videoPosition;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Text videoDuration;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71C828", Offset = "0x71C828")]
		private GvrVideoPlayerTexture <Player>k__BackingField;

		[Token(Token = "0x1700022C")]
		public GvrVideoPlayerTexture Player
		{
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xAFCFCC", Offset = "0xAFCFCC", VA = "0xAFCFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721890", Offset = "0x721890")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xAFCFD4", Offset = "0xAFCFD4", VA = "0xAFCFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7218A0", Offset = "0x7218A0")]
			set
			{
			}
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xAFCFDC", Offset = "0xAFCFDC", VA = "0xAFCFDC")]
		public void OnVolumeUp()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xAFD058", Offset = "0xAFD058", VA = "0xAFD058")]
		public void OnVolumeDown()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xAFD0BC", Offset = "0xAFD0BC", VA = "0xAFD0BC")]
		public void OnToggleVolume()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xAFD130", Offset = "0xAFD130", VA = "0xAFD130")]
		public void OnToggleSettings()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xAFD1A4", Offset = "0xAFD1A4", VA = "0xAFD1A4")]
		public void OnPlayPause()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xAFD274", Offset = "0xAFD274", VA = "0xAFD274")]
		public void OnVolumePositionChanged(float val)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xAFD230", Offset = "0xAFD230", VA = "0xAFD230")]
		public void CloseSubPanels()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xAFD354", Offset = "0xAFD354", VA = "0xAFD354")]
		public void Fade(bool show)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xAFD46C", Offset = "0xAFD46C", VA = "0xAFD46C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xAFD8C8", Offset = "0xAFD8C8", VA = "0xAFD8C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xAFD9BC", Offset = "0xAFD9BC", VA = "0xAFD9BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xAFD38C", Offset = "0xAFD38C", VA = "0xAFD38C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7218B0", Offset = "0x7218B0")]
		private IEnumerator DoAppear()
		{
			return null;
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xAFD3FC", Offset = "0xAFD3FC", VA = "0xAFD3FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721914", Offset = "0x721914")]
		private IEnumerator DoFade()
		{
			return null;
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xAFDDD4", Offset = "0xAFDDD4", VA = "0xAFDDD4")]
		private string FormatTime(long ms)
		{
			return null;
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xAFDFA0", Offset = "0xAFDFA0", VA = "0xAFDFA0")]
		public VideoControlsManager()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class VideoPlayerReference : MonoBehaviour
	{
		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GvrVideoPlayerTexture player;

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xAFE2B8", Offset = "0xAFE2B8", VA = "0xAFE2B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xAFE320", Offset = "0xAFE320", VA = "0xAFE320")]
		public VideoPlayerReference()
		{
		}
	}
}
namespace GoogleVR.PermissionsDemo
{
	[Token(Token = "0x20003F5")]
	public class PermissionsFlowManager : MonoBehaviour
	{
		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text statusText;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] permissionNames;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<GvrPermissionsRequester.PermissionStatus> permissionList;

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xAFB7FC", Offset = "0xAFB7FC", VA = "0xAFB7FC")]
		public void CheckPermission()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xAFB95C", Offset = "0xAFB95C", VA = "0xAFB95C")]
		public void RequestPermissions()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xAFBC08", Offset = "0xAFBC08", VA = "0xAFBC08")]
		public PermissionsFlowManager()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xAFBCF8", Offset = "0xAFBCF8", VA = "0xAFBCF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721978", Offset = "0x721978")]
		private void <RequestPermissions>b__4_0(GvrPermissionsRequester.PermissionStatus[] permissionResults)
		{
		}
	}
}
namespace GoogleVR.KeyboardDemo
{
	[Token(Token = "0x20003F6")]
	public class KeyboardDelegateExample : GvrKeyboardDelegateBase
	{
		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text keyboardText;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas updateCanvas;

		[Token(Token = "0x40019CA")]
		private const string DD_KEYBOARD_NOT_INSTALLED_MSG = "Please update the Daydream Keyboard app from the Play Store.";

		[Token(Token = "0x14000046")]
		public override event EventHandler KeyboardHidden
		{
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xAFAF78", Offset = "0xAFAF78", VA = "0xAFAF78", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721988", Offset = "0x721988")]
			add
			{
			}
			[Token(Token = "0x60018E4")]
			[Address(RVA = "0xAFB01C", Offset = "0xAFB01C", VA = "0xAFB01C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721998", Offset = "0x721998")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public override event EventHandler KeyboardShown
		{
			[Token(Token = "0x60018E5")]
			[Address(RVA = "0xAFB0C0", Offset = "0xAFB0C0", VA = "0xAFB0C0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7219A8", Offset = "0x7219A8")]
			add
			{
			}
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xAFB164", Offset = "0xAFB164", VA = "0xAFB164", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7219B8", Offset = "0x7219B8")]
			remove
			{
			}
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xAFB208", Offset = "0xAFB208", VA = "0xAFB208", Slot = "8")]
		public override void OnKeyboardShow()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xAFB29C", Offset = "0xAFB29C", VA = "0xAFB29C", Slot = "9")]
		public override void OnKeyboardHide()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xAFB330", Offset = "0xAFB330", VA = "0xAFB330", Slot = "10")]
		public override void OnKeyboardUpdate(string text)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xAFB410", Offset = "0xAFB410", VA = "0xAFB410", Slot = "11")]
		public override void OnKeyboardEnterPressed(string text)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xAFB498", Offset = "0xAFB498", VA = "0xAFB498", Slot = "12")]
		public override void OnKeyboardError(GvrKeyboardError errCode)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xAFB698", Offset = "0xAFB698", VA = "0xAFB698")]
		public void LaunchPlayStore()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xAFB750", Offset = "0xAFB750", VA = "0xAFB750")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xAFB7F4", Offset = "0xAFB7F4", VA = "0xAFB7F4")]
		public KeyboardDelegateExample()
		{
		}
	}
}
namespace GoogleVR.HelloVR
{
	[Token(Token = "0x20003F7")]
	public class HeadsetDemoManager : MonoBehaviour
	{
		[Token(Token = "0x200058C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715784", Offset = "0x715784")]
		private sealed class <StatusUpdateLoop>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HeadsetDemoManager <>4__this;

			[Token(Token = "0x17000358")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F81")]
				[Address(RVA = "0xAFA200", Offset = "0xAFA200", VA = "0xAFA200", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000359")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F83")]
				[Address(RVA = "0xAFA268", Offset = "0xAFA268", VA = "0xAFA268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0xAFA0D4", Offset = "0xAFA0D4", VA = "0xAFA0D4")]
			[DebuggerHidden]
			public <StatusUpdateLoop>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xAFA16C", Offset = "0xAFA16C", VA = "0xAFA16C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xAFA170", Offset = "0xAFA170", VA = "0xAFA170", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0xAFA208", Offset = "0xAFA208", VA = "0xAFA208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject safetyRing;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool enableDebugLog;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds waitFourSeconds;

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xAF9030", Offset = "0xAF9030", VA = "0xAF9030")]
		public void OnSafetyRegionEvent(bool enter)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xAF90F4", Offset = "0xAF90F4", VA = "0xAF90F4")]
		public void OnRecenterEvent(GvrRecenterEventType recenterType, GvrRecenterFlags recenterFlags, Vector3 recenteredPosition, Quaternion recenteredOrientation)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xAF932C", Offset = "0xAF932C", VA = "0xAF932C")]
		public void FindFloorHeight()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xAF94F0", Offset = "0xAF94F0", VA = "0xAF94F0")]
		public void FindRecenterTransform()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xAF97A0", Offset = "0xAF97A0", VA = "0xAF97A0")]
		public void FindSafetyRegionType()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xAF9964", Offset = "0xAF9964", VA = "0xAF9964")]
		public void FindSafetyInnerRadius()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xAF9BE4", Offset = "0xAF9BE4", VA = "0xAF9BE4")]
		public void FindSafetyOuterRadius()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xAF9DAC", Offset = "0xAF9DAC", VA = "0xAF9DAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xAF9F50", Offset = "0xAF9F50", VA = "0xAF9F50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xAFA014", Offset = "0xAFA014", VA = "0xAFA014")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xAF9EE0", Offset = "0xAF9EE0", VA = "0xAF9EE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7219C8", Offset = "0x7219C8")]
		private IEnumerator StatusUpdateLoop()
		{
			return null;
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xAFA100", Offset = "0xAFA100", VA = "0xAFA100")]
		public HeadsetDemoManager()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class HelloVRManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715794", Offset = "0x715794")]
		private sealed class <>c
		{
			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<bool> <>9__2_0;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<bool> <>9__3_0;

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xAFA88C", Offset = "0xAFA88C", VA = "0xAFA88C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F86")]
			[Address(RVA = "0xAFA894", Offset = "0xAFA894", VA = "0xAFA894")]
			internal void <LaunchVrHome>b__2_0(bool success)
			{
			}

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xAFA914", Offset = "0xAFA914", VA = "0xAFA914")]
			internal void <Start>b__3_0(bool success)
			{
			}
		}

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject launchVrHomeButton;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DemoInputManager demoInputManager;

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xAFA270", Offset = "0xAFA270", VA = "0xAFA270")]
		public void LaunchVrHome()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xAFA3E8", Offset = "0xAFA3E8", VA = "0xAFA3E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xAFA744", Offset = "0xAFA744", VA = "0xAFA744")]
		private void Update()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xAFA820", Offset = "0xAFA820", VA = "0xAFA820")]
		public HelloVRManager()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714CC0", Offset = "0x714CC0")]
	public class ObjectController : MonoBehaviour
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material inactiveMaterial;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material gazedAtMaterial;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startingPosition;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer myRenderer;

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xAFA994", Offset = "0xAFA994", VA = "0xAFA994")]
		public void SetGazedAt(bool gazedAt)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xAFAA88", Offset = "0xAFAA88", VA = "0xAFAA88")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xAFAB7C", Offset = "0xAFAB7C", VA = "0xAFAB7C")]
		public void Recenter()
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xAFAC1C", Offset = "0xAFAC1C", VA = "0xAFAC1C")]
		public void TeleportRandomly(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xAFAEEC", Offset = "0xAFAEEC", VA = "0xAFAEEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xAFAF70", Offset = "0xAFAF70", VA = "0xAFAF70")]
		public ObjectController()
		{
		}
	}
}
namespace GoogleVR.Demos
{
	[Token(Token = "0x20003FA")]
	public class DemoInfoPanel : MonoBehaviour
	{
		[Token(Token = "0x6001905")]
		[Address(RVA = "0xC042F4", Offset = "0xC042F4", VA = "0xC042F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xC043F0", Offset = "0xC043F0", VA = "0xC043F0")]
		public DemoInfoPanel()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class DemoInputManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7157A4", Offset = "0x7157A4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<string> <>9__27_0;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<string> <>9__28_0;

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0xC05640", Offset = "0xC05640", VA = "0xC05640")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xC05648", Offset = "0xC05648", VA = "0xC05648")]
			internal bool <playerSettingsHasDaydream>b__27_0(string element)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xC056A4", Offset = "0xC056A4", VA = "0xC056A4")]
			internal bool <playerSettingsHasCardboard>b__28_0(string element)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40019D6")]
		public const string CONTROLLER_MAIN_PROP_NAME = "controllerMain";

		[Token(Token = "0x40019D7")]
		public const string CONTROLLER_POINTER_PROP_NAME = "controllerPointers";

		[Token(Token = "0x40019D8")]
		public const string RETICLE_POINTER_PROP_NAME = "reticlePointer";

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C858", Offset = "0x71C858")]
		public GameObject controllerMain;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C890", Offset = "0x71C890")]
		public GameObject[] controllerPointers;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x71C8C8", Offset = "0x71C8C8")]
		public GameObject reticlePointer;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject messageCanvas;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text messageText;

		[Token(Token = "0x40019DE")]
		private const string MESSAGE_CANVAS_NAME = "MessageCanvas";

		[Token(Token = "0x40019DF")]
		private const string MESSAGE_TEXT_NAME = "MessageText";

		[Token(Token = "0x40019E0")]
		private const string LASER_GAMEOBJECT_NAME = "Laser";

		[Token(Token = "0x40019E1")]
		private const string CONTROLLER_CONNECTING_MESSAGE = "Daydream controller connecting...";

		[Token(Token = "0x40019E2")]
		private const string CONTROLLER_DISCONNECTED_MESSAGE = "Daydream controller not connected";

		[Token(Token = "0x40019E3")]
		private const string CONTROLLER_SCANNING_MESSAGE = "Scanning for Daydream controller...";

		[Token(Token = "0x40019E4")]
		private const string NON_GVR_PLATFORM = "Please select a supported Google VR platform via 'Build Settings > Android | iOS > Switch Platform'\n";

		[Token(Token = "0x40019E5")]
		private const string VR_SUPPORT_NOT_CHECKED = "Please make sure 'Player Settings > Virtual Reality Supported' is checked\n";

		[Token(Token = "0x40019E6")]
		private const string EMPTY_VR_SDK_WARNING_MESSAGE = "Please add 'Daydream' or 'Cardboard' under 'Player Settings > Virtual Reality SDKs'\n";

		[Token(Token = "0x40019E7")]
		private const int ANDROID_MIN_DAYDREAM_API = 24;

		[Token(Token = "0x40019E8")]
		private const string FIELD_SDK_INT = "SDK_INT";

		[Token(Token = "0x40019E9")]
		private const string PACKAGE_BUILD_VERSION = "android.os.Build$VERSION";

		[Token(Token = "0x40019EA")]
		private const string PACKAGE_DAYDREAM_API_CLASS = "com.google.vr.ndk.base.DaydreamApi";

		[Token(Token = "0x40019EB")]
		private const string METHOD_IS_DAYDREAM_READY = "isDaydreamReadyPlatform";

		[Token(Token = "0x40019EC")]
		private const GvrControllerButton POINTER_BUTTON_MASK = (GvrControllerButton)202;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly GvrControllerHand[] ALL_HANDS;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GvrSettings.ViewerPlatformType viewerPlatform;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool isDaydream;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int activeControllerPointer;

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xC043F8", Offset = "0xC043F8", VA = "0xC043F8")]
		public static bool playerSettingsHasDaydream()
		{
			return default(bool);
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xC044F4", Offset = "0xC044F4", VA = "0xC044F4")]
		public static bool playerSettingsHasCardboard()
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xC045F0", Offset = "0xC045F0", VA = "0xC045F0")]
		public bool IsCurrentlyDaydream()
		{
			return default(bool);
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xC045F8", Offset = "0xC045F8", VA = "0xC045F8")]
		private static bool IsDeviceDaydreamReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xC048F4", Offset = "0xC048F4", VA = "0xC048F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xC04C74", Offset = "0xC04C74", VA = "0xC04C74")]
		private void Update()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xC04EE4", Offset = "0xC04EE4", VA = "0xC04EE4")]
		private void UpdateStatusMessage()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xC04C40", Offset = "0xC04C40", VA = "0xC04C40")]
		private void SetVRInputMechanism()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xC052DC", Offset = "0xC052DC", VA = "0xC052DC")]
		private void SetGazeInputActive(bool active)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xC053E0", Offset = "0xC053E0", VA = "0xC053E0")]
		private void SetControllerInputActive(bool active)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xC05548", Offset = "0xC05548", VA = "0xC05548")]
		public DemoInputManager()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class DemoSceneManager : MonoBehaviour
	{
		[Token(Token = "0x6001913")]
		[Address(RVA = "0xAF8FF0", Offset = "0xAF8FF0", VA = "0xAF8FF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xAF8FFC", Offset = "0xAF8FFC", VA = "0xAF8FFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xAF9028", Offset = "0xAF9028", VA = "0xAF9028")]
		public DemoSceneManager()
		{
		}
	}
}
namespace GoogleVR.Beta
{
	[Token(Token = "0x20003FD")]
	public class GvrBetaControllerInput
	{
		[Token(Token = "0x200058F")]
		public enum Configuration
		{
			[Token(Token = "0x400205D")]
			Unknown,
			[Token(Token = "0x400205E")]
			Is3DoF,
			[Token(Token = "0x400205F")]
			Is6DoF
		}

		[Token(Token = "0x2000590")]
		public enum TrackingStatusFlags
		{
			[Token(Token = "0x4002061")]
			Unknown = 1,
			[Token(Token = "0x4002062")]
			Nominal = 2,
			[Token(Token = "0x4002063")]
			Occluded = 4,
			[Token(Token = "0x4002064")]
			OutOfFov = 8
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xC04010", Offset = "0xC04010", VA = "0xC04010")]
		internal static Configuration GetConfigurationType(int device)
		{
			return default(Configuration);
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xC04014", Offset = "0xC04014", VA = "0xC04014")]
		internal static TrackingStatusFlags GetTrackingStatusFlags(int device)
		{
			return default(TrackingStatusFlags);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xC04018", Offset = "0xC04018", VA = "0xC04018")]
		public GvrBetaControllerInput()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	internal class GvrBetaControllerState
	{
		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GvrBetaControllerInput.Configuration betaConfigurationType;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal GvrBetaControllerInput.TrackingStatusFlags betaTrackingStatusFlags;

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xC04020", Offset = "0xC04020", VA = "0xC04020")]
		public void CopyFrom(GvrBetaControllerState other)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xC04044", Offset = "0xC04044", VA = "0xC04044")]
		public GvrBetaControllerState()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class GvrBetaControllerVisualMulti : GvrControllerVisual
	{
		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private VisualAssets[] visualsAssets;

		[Token(Token = "0x1700022D")]
		public override float PreferredAlpha
		{
			[Token(Token = "0x600191B")]
			[Address(RVA = "0xC04054", Offset = "0xC04054", VA = "0xC04054", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xC040D4", Offset = "0xC040D4", VA = "0xC040D4", Slot = "8")]
		protected override VisualAssets GetVisualAssets()
		{
			return default(VisualAssets);
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xC04180", Offset = "0xC04180", VA = "0xC04180")]
		public GvrBetaControllerVisualMulti()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public enum GvrBetaSeeThroughCameraMode
	{
		[Token(Token = "0x40019F5")]
		Disabled,
		[Token(Token = "0x40019F6")]
		RawImage,
		[Token(Token = "0x40019F7")]
		ToneMap
	}
	[Token(Token = "0x2000401")]
	public enum GvrBetaSeeThroughSceneType
	{
		[Token(Token = "0x40019F9")]
		Virtual,
		[Token(Token = "0x40019FA")]
		Augmented
	}
	[Token(Token = "0x2000402")]
	public class GvrBetaHeadset : GvrHeadset
	{
		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GvrBetaSeeThroughCameraMode currentCameraMode;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static GvrBetaSeeThroughSceneType currentSceneType;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GvrBetaSeeThroughCameraMode initialCameraMode;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private GvrBetaSeeThroughSceneType initialSceneType;

		[Token(Token = "0x1700022E")]
		public static GvrBetaSeeThroughCameraMode CameraMode
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0xC04190", Offset = "0xC04190", VA = "0xC04190")]
			get
			{
				return default(GvrBetaSeeThroughCameraMode);
			}
			[Token(Token = "0x600191F")]
			[Address(RVA = "0xC041E0", Offset = "0xC041E0", VA = "0xC041E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public static GvrBetaSeeThroughSceneType SceneType
		{
			[Token(Token = "0x6001920")]
			[Address(RVA = "0xC04238", Offset = "0xC04238", VA = "0xC04238")]
			get
			{
				return default(GvrBetaSeeThroughSceneType);
			}
			[Token(Token = "0x6001921")]
			[Address(RVA = "0xC04288", Offset = "0xC04288", VA = "0xC04288")]
			set
			{
			}
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xC03E80", Offset = "0xC03E80", VA = "0xC03E80")]
		public static void SetSeeThroughConfig(GvrBetaSeeThroughCameraMode cameraMode, GvrBetaSeeThroughSceneType sceneType)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xC042E0", Offset = "0xC042E0", VA = "0xC042E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xC042EC", Offset = "0xC042EC", VA = "0xC042EC")]
		public GvrBetaHeadset()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public enum GvrBetaFeature
	{
		[Token(Token = "0x4001A00")]
		SeeThrough = 1001
	}
	[Token(Token = "0x2000404")]
	public static class GvrBetaSettings
	{
		[Token(Token = "0x6001925")]
		[Address(RVA = "0xC03BD0", Offset = "0xC03BD0", VA = "0xC03BD0")]
		public static bool IsFeatureSupported(GvrBetaFeature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xC03BD8", Offset = "0xC03BD8", VA = "0xC03BD8")]
		public static bool IsFeatureEnabled(GvrBetaFeature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xC03BE0", Offset = "0xC03BE0", VA = "0xC03BE0")]
		public static void RequestFeatures(GvrBetaFeature[] requiredFeatures, GvrBetaFeature[] optionalFeatures)
		{
		}
	}
	[Token(Token = "0x2000405")]
	public static class GvrControllerInputDeviceExtension
	{
		[Token(Token = "0x6001928")]
		[Address(RVA = "0xC04158", Offset = "0xC04158", VA = "0xC04158")]
		public static GvrBetaControllerInput.Configuration GetConfigurationType(this GvrControllerInputDevice device)
		{
			return default(GvrBetaControllerInput.Configuration);
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xC040AC", Offset = "0xC040AC", VA = "0xC040AC")]
		public static GvrBetaControllerInput.TrackingStatusFlags GetTrackingStatusFlags(this GvrControllerInputDevice device)
		{
			return default(GvrBetaControllerInput.TrackingStatusFlags);
		}
	}
	[Token(Token = "0x2000406")]
	internal class GvrBetaAndroidNativeControllerInputProvider
	{
		[Token(Token = "0x4001A01")]
		private const string shimDllName = "gvrshim";

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xC03F00", Offset = "0xC03F00", VA = "0xC03F00")]
		internal static GvrBetaControllerInput.Configuration GetConfigurationType(int device)
		{
			return default(GvrBetaControllerInput.Configuration);
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xC03F84", Offset = "0xC03F84", VA = "0xC03F84")]
		internal static GvrBetaControllerInput.TrackingStatusFlags GetTrackingStatusFlags(int device)
		{
			return default(GvrBetaControllerInput.TrackingStatusFlags);
		}

		[PreserveSig]
		[Token(Token = "0x600192C")]
		[Address(RVA = "0xC03F04", Offset = "0xC03F04", VA = "0xC03F04")]
		private static extern int GvrShimUnity_betaControllerGetConfigurationType(int device);

		[PreserveSig]
		[Token(Token = "0x600192D")]
		[Address(RVA = "0xC03F88", Offset = "0xC03F88", VA = "0xC03F88")]
		private static extern int GvrShimUnity_betaControllerStateGetTrackingStatus(int device);

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xC04008", Offset = "0xC04008", VA = "0xC04008")]
		public GvrBetaAndroidNativeControllerInputProvider()
		{
		}
	}
	[Token(Token = "0x2000407")]
	internal class GvrBetaEditorControllerInputProvider
	{
		[Token(Token = "0x600192F")]
		[Address(RVA = "0xC04188", Offset = "0xC04188", VA = "0xC04188")]
		public GvrBetaEditorControllerInputProvider()
		{
		}
	}
}
namespace GoogleVR.Beta.Demos
{
	[Token(Token = "0x2000408")]
	public class DemoObjectController6DoF : MonoBehaviour
	{
		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material inactiveMaterial;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material gazedAtMaterial;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startingPosition;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 startingScale;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isLockedToController;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Renderer myRenderer;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GvrTrackedController grabController;

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xC02F5C", Offset = "0xC02F5C", VA = "0xC02F5C")]
		public void UpdateStartPosition()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xC02FB8", Offset = "0xC02FB8", VA = "0xC02FB8")]
		public void SetGazedAt(bool gazedAt)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xC030AC", Offset = "0xC030AC", VA = "0xC030AC")]
		public void GripStartGrab(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xC03168", Offset = "0xC03168", VA = "0xC03168")]
		public void GripEndGrab(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xC03204", Offset = "0xC03204", VA = "0xC03204")]
		public void ClickTeleport(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xC03540", Offset = "0xC03540", VA = "0xC03540")]
		private void Start()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xC035E4", Offset = "0xC035E4", VA = "0xC035E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xC032B0", Offset = "0xC032B0", VA = "0xC032B0")]
		private void TeleportRandomly()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xC03A18", Offset = "0xC03A18", VA = "0xC03A18")]
		public DemoObjectController6DoF()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class DemoSeeThroughController : MonoBehaviour
	{
		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text infoText;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text statusText;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] hideDuringSeeThrough;

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xC03A20", Offset = "0xC03A20", VA = "0xC03A20")]
		private void Start()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xC03BE8", Offset = "0xC03BE8", VA = "0xC03BE8")]
		private void OnApplicationPause(bool didPause)
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xC03BF4", Offset = "0xC03BF4", VA = "0xC03BF4")]
		private void Update()
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xC03E74", Offset = "0xC03E74", VA = "0xC03E74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xC03AD8", Offset = "0xC03AD8", VA = "0xC03AD8")]
		private void UpdateInfoText()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xC03D00", Offset = "0xC03D00", VA = "0xC03D00")]
		private void CycleSeeThroughModes()
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xC03EF8", Offset = "0xC03EF8", VA = "0xC03EF8")]
		public DemoSeeThroughController()
		{
		}
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x200040A")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x2000591")]
		public class ListIndices
		{
			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> m_listIndices;

			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x8FF234", Offset = "0x8FF234", VA = "0x8FF234")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000592")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex0;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex1;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int _boneIndex2;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int _boneIndex3;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight0;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight1;

			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _boneWeight2;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _boneWeight3;

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x8FF43C", Offset = "0x8FF43C", VA = "0x8FF43C")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x8FF504", Offset = "0x8FF504", VA = "0x8FF504")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x2000593")]
		public class UniqueVertex
		{
			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedX;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_nFixedY;

			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nFixedZ;

			[Token(Token = "0x4002071")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x8FF5BC", Offset = "0x8FF5BC", VA = "0x8FF5BC", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x8FF67C", Offset = "0x8FF67C", VA = "0x8FF67C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x8FF2A8", Offset = "0x8FF2A8", VA = "0x8FF2A8")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x8FF6DC", Offset = "0x8FF6DC", VA = "0x8FF6DC")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x8FF78C", Offset = "0x8FF78C", VA = "0x8FF78C")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x8FF7A8", Offset = "0x8FF7A8", VA = "0x8FF7A8")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x8FF690", Offset = "0x8FF690", VA = "0x8FF690")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x8FF7D4", Offset = "0x8FF7D4", VA = "0x8FF7D4")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x8FF768", Offset = "0x8FF768", VA = "0x8FF768")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000594")]
		private class RepeatedVertex
		{
			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _nFaceIndex;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x1700035A")]
			public int FaceIndex
			{
				[Token(Token = "0x6001F98")]
				[Address(RVA = "0x8FF4EC", Offset = "0x8FF4EC", VA = "0x8FF4EC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700035B")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x6001F99")]
				[Address(RVA = "0x8FF4F4", Offset = "0x8FF4F4", VA = "0x8FF4F4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x8FF2F8", Offset = "0x8FF2F8", VA = "0x8FF2F8")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x2000595")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nUniqueIndex;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x1700035C")]
			public int UniqueIndex
			{
				[Token(Token = "0x6001F9B")]
				[Address(RVA = "0x8FF4FC", Offset = "0x8FF4FC", VA = "0x8FF4FC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x8FF398", Offset = "0x8FF398", VA = "0x8FF398")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0x8FF330", Offset = "0x8FF330", VA = "0x8FF330")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x17000230")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x6001940")]
			[Address(RVA = "0x8FEC78", Offset = "0x8FEC78", VA = "0x8FEC78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x6001941")]
			[Address(RVA = "0x8FEC80", Offset = "0x8FEC80", VA = "0x8FEC80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0x8FEC88", Offset = "0x8FEC88", VA = "0x8FEC88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0x8FEC90", Offset = "0x8FEC90", VA = "0x8FEC90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x8FEC98", Offset = "0x8FEC98", VA = "0x8FEC98")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x8FF4E4", Offset = "0x8FF4E4", VA = "0x8FF4E4")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040B")]
	public class RelevanceSphere
	{
		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bExpanded;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 m_v3Position;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fRelevance;

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x8FF86C", Offset = "0x8FF86C", VA = "0x8FF86C")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x8FF8E8", Offset = "0x8FF8E8", VA = "0x8FF8E8")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x2000596")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x2000597")]
		private class Triangle
		{
			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_bUVData;

			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] m_aUV;

			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] m_aIndices;

			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int m_nSubMesh;

			[Token(Token = "0x1700035D")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x6001FA2")]
				[Address(RVA = "0x905C94", Offset = "0x905C94", VA = "0x905C94")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035E")]
			public bool HasUVData
			{
				[Token(Token = "0x6001FA3")]
				[Address(RVA = "0x905C9C", Offset = "0x905C9C", VA = "0x905C9C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700035F")]
			public int[] IndicesUV
			{
				[Token(Token = "0x6001FA4")]
				[Address(RVA = "0x905CA4", Offset = "0x905CA4", VA = "0x905CA4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			public Vector3 Normal
			{
				[Token(Token = "0x6001FA5")]
				[Address(RVA = "0x905CAC", Offset = "0x905CAC", VA = "0x905CAC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000361")]
			public int[] Indices
			{
				[Token(Token = "0x6001FA6")]
				[Address(RVA = "0x905CB8", Offset = "0x905CB8", VA = "0x905CB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x902768", Offset = "0x902768", VA = "0x902768")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x901A3C", Offset = "0x901A3C", VA = "0x901A3C")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0x900D1C", Offset = "0x900D1C", VA = "0x900D1C")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x905CC0", Offset = "0x905CC0", VA = "0x905CC0")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x900E98", Offset = "0x900E98", VA = "0x900E98")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x905F38", Offset = "0x905F38", VA = "0x905F38")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x901948", Offset = "0x901948", VA = "0x901948")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x905F74", Offset = "0x905F74", VA = "0x905F74")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x901BB4", Offset = "0x901BB4", VA = "0x901BB4")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x2000598")]
		private class TriangleList
		{
			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x903F48", Offset = "0x903F48", VA = "0x903F48")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x2000599")]
		private class Vertex
		{
			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_v3Position;

			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int m_nID;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m_fObjDist;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vertex m_collapse;

			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int m_nHeapSpot;

			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x90239C", Offset = "0x90239C", VA = "0x90239C")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x901874", Offset = "0x901874", VA = "0x901874")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x905E4C", Offset = "0x905E4C", VA = "0x905E4C")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x900D88", Offset = "0x900D88", VA = "0x900D88")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059A")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x906204", Offset = "0x906204", VA = "0x906204", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x906390", Offset = "0x906390", VA = "0x906390", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x905054", Offset = "0x905054", VA = "0x905054")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x200059B")]
		private class VertexDataHash
		{
			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _v3Normal;

			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color32 _color;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x17000362")]
			public Vector3 Vertex
			{
				[Token(Token = "0x6001FB8")]
				[Address(RVA = "0x905FB0", Offset = "0x905FB0", VA = "0x905FB0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000363")]
			public Vector3 Normal
			{
				[Token(Token = "0x6001FB9")]
				[Address(RVA = "0x905FBC", Offset = "0x905FBC", VA = "0x905FBC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000364")]
			public Vector2 UV1
			{
				[Token(Token = "0x6001FBA")]
				[Address(RVA = "0x905FC8", Offset = "0x905FC8", VA = "0x905FC8")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000365")]
			public Vector2 UV2
			{
				[Token(Token = "0x6001FBB")]
				[Address(RVA = "0x905FD0", Offset = "0x905FD0", VA = "0x905FD0")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x17000366")]
			public Color32 Color
			{
				[Token(Token = "0x6001FBC")]
				[Address(RVA = "0x905FD8", Offset = "0x905FD8", VA = "0x905FD8")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x90505C", Offset = "0x90505C", VA = "0x90505C")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x905FE0", Offset = "0x905FE0", VA = "0x905FE0", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x90619C", Offset = "0x90619C", VA = "0x90619C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x9061BC", Offset = "0x9061BC", VA = "0x9061BC")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0x9061D8", Offset = "0x9061D8", VA = "0x9061D8")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7157B4", Offset = "0x7157B4")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh sourceMesh;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gameObject;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <nVertices>5__2;

			[Token(Token = "0x17000367")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FC5")]
				[Address(RVA = "0x905B68", Offset = "0x905B68", VA = "0x905B68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000368")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FC7")]
				[Address(RVA = "0x905BD0", Offset = "0x905BD0", VA = "0x905BD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0x8FFCB8", Offset = "0x8FFCB8", VA = "0x8FFCB8")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x9051BC", Offset = "0x9051BC", VA = "0x9051BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x9051C0", Offset = "0x9051C0", VA = "0x9051C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x905B70", Offset = "0x905B70", VA = "0x905B70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7157C4", Offset = "0x7157C4")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nVertices;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject gameObject;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Mesh meshOut;

			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FCB")]
				[Address(RVA = "0x903FBC", Offset = "0x903FBC", VA = "0x903FBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FCD")]
				[Address(RVA = "0x904024", Offset = "0x904024", VA = "0x904024", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0x8FFD8C", Offset = "0x8FFD8C", VA = "0x8FFD8C")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x9036B8", Offset = "0x9036B8", VA = "0x9036B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x9036BC", Offset = "0x9036BC", VA = "0x9036BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x903FC4", Offset = "0x903FC4", VA = "0x903FC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7157D4", Offset = "0x7157D4")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshIn;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh meshOut;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject gameObject;

			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <bUV1>5__17;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
			private bool <bUV2>5__18;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
			private bool <bNormal>5__19;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
			private bool <bTangent>5__20;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <strMesh>5__23;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int <i>5__24;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FD1")]
				[Address(RVA = "0x90514C", Offset = "0x90514C", VA = "0x90514C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD3")]
				[Address(RVA = "0x9051B4", Offset = "0x9051B4", VA = "0x9051B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x9007B0", Offset = "0x9007B0", VA = "0x9007B0")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x90402C", Offset = "0x90402C", VA = "0x90402C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x904030", Offset = "0x904030", VA = "0x904030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x905154", Offset = "0x905154", VA = "0x905154", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7157E4", Offset = "0x7157E4")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Simplifier <>4__this;

			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform transform;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FD7")]
				[Address(RVA = "0x903648", Offset = "0x903648", VA = "0x903648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FD9")]
				[Address(RVA = "0x9036B0", Offset = "0x9036B0", VA = "0x9036B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x90132C", Offset = "0x90132C", VA = "0x90132C")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x902ED4", Offset = "0x902ED4", VA = "0x902ED4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x902ED8", Offset = "0x902ED8", VA = "0x902ED8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x903650", Offset = "0x903650", VA = "0x903650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71C970", Offset = "0x71C970")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71C980", Offset = "0x71C980")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x4001A18")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexMap;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_meshOriginal;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseCurvature;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[SerializeField]
		[HideInInspector]
		private bool m_bProtectTexture;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x17000234")]
		public static bool Cancelled
		{
			[Token(Token = "0x6001948")]
			[Address(RVA = "0x8FFA04", Offset = "0x8FFA04", VA = "0x8FFA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721A4C", Offset = "0x721A4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001949")]
			[Address(RVA = "0x8FFA6C", Offset = "0x8FFA6C", VA = "0x8FFA6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721A5C", Offset = "0x721A5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0x8FFADC", Offset = "0x8FFADC", VA = "0x8FFADC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600194B")]
			[Address(RVA = "0x8FFB44", Offset = "0x8FFB44", VA = "0x8FFB44")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0x8FFBB0", Offset = "0x8FFBB0", VA = "0x8FFBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721A6C", Offset = "0x721A6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600194D")]
			[Address(RVA = "0x8FFBB8", Offset = "0x8FFBB8", VA = "0x8FFBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721A7C", Offset = "0x721A7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x600194E")]
			[Address(RVA = "0x8FFBC4", Offset = "0x8FFBC4", VA = "0x8FFBC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600194F")]
			[Address(RVA = "0x8FFBCC", Offset = "0x8FFBCC", VA = "0x8FFBCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public bool UseCurvature
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0x8FFBD8", Offset = "0x8FFBD8", VA = "0x8FFBD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001951")]
			[Address(RVA = "0x8FFBE0", Offset = "0x8FFBE0", VA = "0x8FFBE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public bool ProtectTexture
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x8FFBEC", Offset = "0x8FFBEC", VA = "0x8FFBEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001953")]
			[Address(RVA = "0x8FFBF4", Offset = "0x8FFBF4", VA = "0x8FFBF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public bool LockBorder
		{
			[Token(Token = "0x6001954")]
			[Address(RVA = "0x8FFC00", Offset = "0x8FFC00", VA = "0x8FFC00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001955")]
			[Address(RVA = "0x8FFC08", Offset = "0x8FFC08", VA = "0x8FFC08")]
			set
			{
			}
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x8FFC14", Offset = "0x8FFC14", VA = "0x8FFC14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721A8C", Offset = "0x721A8C")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x8FFCE4", Offset = "0x8FFCE4", VA = "0x8FFCE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721AF0", Offset = "0x721AF0")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x8FFDB8", Offset = "0x8FFDB8", VA = "0x8FFDB8")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x8FFDC0", Offset = "0x8FFDC0", VA = "0x8FFDC0")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x8FFE04", Offset = "0x8FFE04", VA = "0x8FFE04")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x90070C", Offset = "0x90070C", VA = "0x90070C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721B54", Offset = "0x721B54")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x9007DC", Offset = "0x9007DC", VA = "0x9007DC")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x900874", Offset = "0x900874", VA = "0x900874")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x900F84", Offset = "0x900F84", VA = "0x900F84")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x901294", Offset = "0x901294", VA = "0x901294")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721BB8", Offset = "0x721BB8")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x901358", Offset = "0x901358", VA = "0x901358")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x9021E8", Offset = "0x9021E8", VA = "0x9021E8")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x9024CC", Offset = "0x9024CC", VA = "0x9024CC")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x902ABC", Offset = "0x902ABC", VA = "0x902ABC")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x902CC4", Offset = "0x902CC4", VA = "0x902CC4")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x902D68", Offset = "0x902D68", VA = "0x902D68")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x901E1C", Offset = "0x901E1C", VA = "0x901E1C")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x901FF0", Offset = "0x901FF0", VA = "0x901FF0")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x902E34", Offset = "0x902E34", VA = "0x902E34")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x902CC8", Offset = "0x902CC8", VA = "0x902CC8")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x902EB4", Offset = "0x902EB4", VA = "0x902EB4")]
		public Simplifier()
		{
		}
	}
}
namespace cakeslice
{
	[Token(Token = "0x200040D")]
	public class MaterialSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material target;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xD7213C", Offset = "0xD7213C", VA = "0xD7213C")]
		public void Update()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD72240", Offset = "0xD72240", VA = "0xD72240")]
		public MaterialSwitcher()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class OutlineAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pingPong;

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD72D94", Offset = "0xD72D94", VA = "0xD72D94")]
		private void Start()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD72D98", Offset = "0xD72D98", VA = "0xD72D98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD7333C", Offset = "0xD7333C", VA = "0xD7333C")]
		public OutlineAnimation()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class Rotate : MonoBehaviour
	{
		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer;

		[Token(Token = "0x4001A2A")]
		private const float time = 1f;

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x111F5D0", Offset = "0x111F5D0", VA = "0x111F5D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x111F5D4", Offset = "0x111F5D4", VA = "0x111F5D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x111F6BC", Offset = "0x111F6BC", VA = "0x111F6BC")]
		public Rotate()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class Toggle : MonoBehaviour
	{
		[Token(Token = "0x6001974")]
		[Address(RVA = "0x111F6C4", Offset = "0x111F6C4", VA = "0x111F6C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x111F6C8", Offset = "0x111F6C8", VA = "0x111F6C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x111F76C", Offset = "0x111F76C", VA = "0x111F76C")]
		public Toggle()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class InteractiveOutlineEffect : MonoBehaviour
	{
		[Token(Token = "0x6001977")]
		[Address(RVA = "0xD72078", Offset = "0xD72078", VA = "0xD72078")]
		public void ActiveOutline(bool _isActive)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xD72134", Offset = "0xD72134", VA = "0xD72134")]
		public InteractiveOutlineEffect()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class LinkedSet<T> : IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x20005A0")]
		public enum AddType
		{
			[Token(Token = "0x40020C8")]
			NO_CHANGE,
			[Token(Token = "0x40020C9")]
			ADDED,
			[Token(Token = "0x40020CA")]
			MOVED
		}

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private LinkedList<T> list;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<T, LinkedListNode<T>> dictionary;

		[Token(Token = "0x6001979")]
		public LinkedSet()
		{
		}

		[Token(Token = "0x600197A")]
		public LinkedSet(IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x600197B")]
		public bool Contains(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x600197C")]
		public bool Add(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x600197D")]
		public void Clear()
		{
		}

		[Token(Token = "0x600197E")]
		public AddType AddOrMoveToEnd(T t)
		{
			return default(AddType);
		}

		[Token(Token = "0x600197F")]
		public bool Remove(T t)
		{
			return default(bool);
		}

		[Token(Token = "0x6001980")]
		public void ExceptWith(IEnumerable<T> enumerable)
		{
		}

		[Token(Token = "0x6001981")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001982")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000413")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714D34", Offset = "0x714D34")]
	public class Outline : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7157F4", Offset = "0x7157F4")]
		private sealed class <>c
		{
			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Camera, OutlineEffect> <>9__9_0;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<OutlineEffect, bool> <>9__9_1;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Camera, OutlineEffect> <>9__10_0;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<OutlineEffect, bool> <>9__10_1;

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xD72C04", Offset = "0xD72C04", VA = "0xD72C04")]
			public <>c()
			{
			}

			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0xD72C0C", Offset = "0xD72C0C", VA = "0xD72C0C")]
			internal OutlineEffect <OnEnable>b__9_0(Camera c)
			{
				return null;
			}

			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0xD72C64", Offset = "0xD72C64", VA = "0xD72C64")]
			internal bool <OnEnable>b__9_1(OutlineEffect e)
			{
				return default(bool);
			}

			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0xD72CD0", Offset = "0xD72CD0", VA = "0xD72CD0")]
			internal OutlineEffect <OnDisable>b__10_0(Camera c)
			{
				return null;
			}

			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0xD72D28", Offset = "0xD72D28", VA = "0xD72D28")]
			internal bool <OnDisable>b__10_1(OutlineEffect e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x71CBC0", Offset = "0x71CBC0")]
		private Renderer <Renderer>k__BackingField;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int color;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool eraseRenderer;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int originalLayer;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Material[] originalMaterials;

		[Token(Token = "0x1700023B")]
		public Renderer Renderer
		{
			[Token(Token = "0x6001983")]
			[Address(RVA = "0xD72248", Offset = "0xD72248", VA = "0xD72248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721C1C", Offset = "0x721C1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xD72250", Offset = "0xD72250", VA = "0xD72250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x721C2C", Offset = "0x721C2C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD72258", Offset = "0xD72258", VA = "0xD72258")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD722B0", Offset = "0xD722B0", VA = "0xD722B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD72724", Offset = "0xD72724", VA = "0xD72724")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD72B98", Offset = "0xD72B98", VA = "0xD72B98")]
		public Outline()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x714DA8", Offset = "0x714DA8")]
	[ExecuteInEditMode]
	public class OutlineEffect : MonoBehaviour
	{
		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OutlineEffect m_instance;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly LinkedSet<Outline> outlines;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71CBF0", Offset = "0x71CBF0")]
		public float lineThickness;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71CC08", Offset = "0x71CC08")]
		public float lineIntensity;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71CC20", Offset = "0x71CC20")]
		public float fillAmount;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color lineColor0;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color lineColor1;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color lineColor2;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool additiveRendering;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool backfaceCulling;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71CC38", Offset = "0x71CC38")]
		public bool cornerOutlines;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		public bool addLinesBetweenColors;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x71CC70", Offset = "0x71CC70")]
		public bool scaleWithScreenSize;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x71CCA8", Offset = "0x71CCA8")]
		public float alphaCutoff;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool flipY;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Camera sourceCamera;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Camera outlineCamera;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material outline1Material;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material outline2Material;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material outline3Material;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material outlineEraseMaterial;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Shader outlineShader;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Shader outlineBufferShader;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Material outlineShaderMaterial;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public RenderTexture renderTexture;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public RenderTexture extraRenderTexture;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private CommandBuffer commandBuffer;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Material> materialBuffer;

		[Token(Token = "0x1700023C")]
		public static OutlineEffect Instance
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xD73344", Offset = "0xD73344", VA = "0xD73344")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xD73460", Offset = "0xD73460", VA = "0xD73460")]
		private OutlineEffect()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xD73554", Offset = "0xD73554", VA = "0xD73554")]
		private Material GetMaterialFromID(int ID)
		{
			return null;
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD7357C", Offset = "0xD7357C", VA = "0xD7357C")]
		private Material CreateMaterial(Color emissionColor)
		{
			return null;
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xD736E0", Offset = "0xD736E0", VA = "0xD736E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD73734", Offset = "0xD73734", VA = "0xD73734")]
		private void Start()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD73E00", Offset = "0xD73E00", VA = "0xD73E00")]
		public void OnPreRender()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xD74BC4", Offset = "0xD74BC4", VA = "0xD74BC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xD74CA4", Offset = "0xD74CA4", VA = "0xD74CA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD74F14", Offset = "0xD74F14", VA = "0xD74F14")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD739D4", Offset = "0xD739D4", VA = "0xD739D4")]
		private void CreateMaterialsIfNeeded()
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD74D7C", Offset = "0xD74D7C", VA = "0xD74D7C")]
		private void DestroyMaterials()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xD72EB0", Offset = "0xD72EB0", VA = "0xD72EB0")]
		public void UpdateMaterialsPublicProperties()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD73CD4", Offset = "0xD73CD4", VA = "0xD73CD4")]
		private void UpdateOutlineCameraFromSource()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD7268C", Offset = "0xD7268C", VA = "0xD7268C")]
		public void AddOutline(Outline outline)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD72B00", Offset = "0xD72B00", VA = "0xD72B00")]
		public void RemoveOutline(Outline outline)
		{
		}
	}
}
namespace DigitalOpus.MB.Core
{
	[Token(Token = "0x2000415")]
	public class MBVersionConcrete : MBVersionInterface
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _HALF_UV;

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x11AE374", Offset = "0x11AE374", VA = "0x11AE374", Slot = "4")]
		public string version()
		{
			return null;
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x11AE3BC", Offset = "0x11AE3BC", VA = "0x11AE3BC", Slot = "5")]
		public int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x11AE468", Offset = "0x11AE468", VA = "0x11AE468", Slot = "6")]
		public int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x11AE518", Offset = "0x11AE518", VA = "0x11AE518", Slot = "7")]
		public bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x11AE534", Offset = "0x11AE534", VA = "0x11AE534", Slot = "8")]
		public void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x11AE554", Offset = "0x11AE554", VA = "0x11AE554", Slot = "9")]
		public void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x11AE574", Offset = "0x11AE574", VA = "0x11AE574", Slot = "10")]
		public UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x11AE5DC", Offset = "0x11AE5DC", VA = "0x11AE5DC", Slot = "11")]
		public bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x11AE628", Offset = "0x11AE628", VA = "0x11AE628")]
		public Vector2[] GetMeshUV1s(Mesh m, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x11AE8DC", Offset = "0x11AE8DC", VA = "0x11AE8DC", Slot = "12")]
		public Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x11AEBAC", Offset = "0x11AEBAC", VA = "0x11AEBAC", Slot = "13")]
		public void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x11AEBCC", Offset = "0x11AEBCC", VA = "0x11AEBCC", Slot = "14")]
		public void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x11AEBEC", Offset = "0x11AEBEC", VA = "0x11AEBEC", Slot = "15")]
		public void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x11AEC0C", Offset = "0x11AEC0C", VA = "0x11AEC0C", Slot = "16")]
		public Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x11AEC28", Offset = "0x11AEC28", VA = "0x11AEC28", Slot = "17")]
		public Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x11AED8C", Offset = "0x11AED8C", VA = "0x11AED8C")]
		public MBVersionConcrete()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000416")]
	public class GrouperData
	{
		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool clusterOnLMIndex;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool clusterByLODLevel;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 origin;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 cellSize;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int pieNumSegments;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 pieAxis;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int height;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxDistBetweenClusters;

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xAC025C", Offset = "0xAC025C", VA = "0xAC025C")]
		public GrouperData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000417")]
	public abstract class MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715804", Offset = "0x715804")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Renderer r;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<Renderer> <>9__0;

			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0xFCFE90", Offset = "0xFCFE90", VA = "0xFCFE90")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0xFD0148", Offset = "0xFD0148", VA = "0xFD0148")]
			internal bool <DoClustering>b__0(Renderer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GrouperData d;

		[Token(Token = "0x60019AA")]
		public abstract Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection);

		[Token(Token = "0x60019AB")]
		public abstract void DrawGizmos(Bounds sourceObjectBounds);

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xFCF080", Offset = "0xFCF080", VA = "0xFCF080")]
		public void DoClustering(MB3_TextureBaker tb)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xFCFCA4", Offset = "0xFCFCA4", VA = "0xFCFCA4")]
		private Dictionary<int, List<Renderer>> GroupByLightmapIndex(List<Renderer> gaws)
		{
			return null;
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xFCFE98", Offset = "0xFCFE98", VA = "0xFCFE98")]
		private void AddMeshBaker(MB3_TextureBaker tb, string key, List<Renderer> gaws)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xFCE480", Offset = "0xFCE480", VA = "0xFCE480")]
		protected MB3_MeshBakerGrouperCore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000418")]
	public class MB3_MeshBakerGrouperNone : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xFD114C", Offset = "0xFD114C", VA = "0xFD114C")]
		public MB3_MeshBakerGrouperNone(GrouperData d)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xFD1178", Offset = "0xFD1178", VA = "0xFD1178", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xFD1348", Offset = "0xFD1348", VA = "0xFD1348", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000419")]
	public class MB3_MeshBakerGrouperGrid : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xFD01C4", Offset = "0xFD01C4", VA = "0xFD01C4")]
		public MB3_MeshBakerGrouperGrid(GrouperData d)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xFD01F0", Offset = "0xFD01F0", VA = "0xFD01F0", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xFD0654", Offset = "0xFD0654", VA = "0xFD0654", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public class MB3_MeshBakerGrouperPie : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xFD134C", Offset = "0xFD134C", VA = "0xFD134C")]
		public MB3_MeshBakerGrouperPie(GrouperData data)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xFD1378", Offset = "0xFD1378", VA = "0xFD1378", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xFD1A5C", Offset = "0xFD1A5C", VA = "0xFD1A5C", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xFD1DD0", Offset = "0xFD1DD0", VA = "0xFD1DD0")]
		public static void DrawCircle(Vector3 axis, Vector3 center, float radius, int subdiv)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041B")]
	public class MB3_MeshBakerGrouperKMeans : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numClusters;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] clusterCenters;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] clusterSizes;

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xFD0C68", Offset = "0xFD0C68", VA = "0xFD0C68")]
		public MB3_MeshBakerGrouperKMeans(GrouperData data)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xFD0CFC", Offset = "0xFD0CFC", VA = "0xFD0CFC", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xFD1090", Offset = "0xFD1090", VA = "0xFD1090", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	public class MB3_MeshBakerGrouperCluster : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715814", Offset = "0x715814")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> gos;

			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0xFCEA24", Offset = "0xFCEA24", VA = "0xFCEA24")]
			public <>c__DisplayClass7_0()
			{
			}
		}

		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715824", Offset = "0x715824")]
		private sealed class <>c__DisplayClass7_1
		{
			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass7_0 CS$<>8__locals1;

			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0xFCEA2C", Offset = "0xFCEA2C", VA = "0xFCEA2C")]
			public <>c__DisplayClass7_1()
			{
			}

			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0xFCEFC8", Offset = "0xFCEFC8", VA = "0xFCEFC8")]
			internal bool <BuildClusters>b__0(MB3_AgglomerativeClustering.item_s x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MB3_AgglomerativeClustering cluster;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _lastMaxDistBetweenClusters;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _ObjsExtents;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MB3_AgglomerativeClustering.ClusterNode> _clustersToDraw;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] _radii;

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xFCE3FC", Offset = "0xFCE3FC", VA = "0xFCE3FC")]
		public MB3_MeshBakerGrouperCluster(GrouperData data, List<GameObject> gos)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xFCE488", Offset = "0xFCE488", VA = "0xFCE488", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xFCE6F4", Offset = "0xFCE6F4", VA = "0xFCE6F4")]
		public void BuildClusters(List<GameObject> gos, ProgressUpdateDelegate progFunc)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xFCEA34", Offset = "0xFCEA34", VA = "0xFCEA34")]
		private void _BuildListOfClustersToDraw()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xFCEEA4", Offset = "0xFCEEA4", VA = "0xFCEEA4", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Token(Token = "0x200041D")]
	public interface TextureBlender
	{
		[Token(Token = "0x60019C2")]
		bool DoesShaderNameMatch(string shaderName);

		[Token(Token = "0x60019C3")]
		void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName);

		[Token(Token = "0x60019C4")]
		Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor);

		[Token(Token = "0x60019C5")]
		bool NonTexturePropertiesAreEqual(Material a, Material b);

		[Token(Token = "0x60019C6")]
		void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial);

		[Token(Token = "0x60019C7")]
		Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName);
	}
	[Token(Token = "0x200041E")]
	public class TextureBlenderFallback : TextureBlender
	{
		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_doTintColor;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultColor;

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x11AFED4", Offset = "0x11AFED4", VA = "0x11AFED4", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x11AFEDC", Offset = "0x11AFEDC", VA = "0x11AFEDC", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x11AFFA8", Offset = "0x11AFFA8", VA = "0x11AFFA8", Slot = "6")]
		public Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x11B0004", Offset = "0x11B0004", VA = "0x11B0004", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x11B017C", Offset = "0x11B017C", VA = "0x11B017C", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x11B0210", Offset = "0x11B0210", VA = "0x11B0210", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x11B0070", Offset = "0x11B0070", VA = "0x11B0070")]
		public static bool _compareColor(Material a, Material b, Color defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x11B0B10", Offset = "0x11B0B10", VA = "0x11B0B10")]
		public static bool _compareFloat(Material a, Material b, float defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x11A6B68", Offset = "0x11A6B68", VA = "0x11A6B68")]
		public TextureBlenderFallback()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class TextureBlenderLegacyBumpDiffuse : TextureBlender
	{
		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xBEE48C", Offset = "0xBEE48C", VA = "0xBEE48C", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xBEE514", Offset = "0xBEE514", VA = "0xBEE514", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xBEE5BC", Offset = "0xBEE5BC", VA = "0xBEE5BC", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xBEE618", Offset = "0xBEE618", VA = "0xBEE618", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xBEE688", Offset = "0xBEE688", VA = "0xBEE688", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xBEE6EC", Offset = "0xBEE6EC", VA = "0xBEE6EC", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xBEE8AC", Offset = "0xBEE8AC", VA = "0xBEE8AC")]
		public TextureBlenderLegacyBumpDiffuse()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class TextureBlenderLegacyDiffuse : TextureBlender
	{
		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool doColor;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color m_tintColor;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_defaultTintColor;

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xBEE8E0", Offset = "0xBEE8E0", VA = "0xBEE8E0", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xBEE968", Offset = "0xBEE968", VA = "0xBEE968", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xBEEA10", Offset = "0xBEEA10", VA = "0xBEEA10", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xBEEA6C", Offset = "0xBEEA6C", VA = "0xBEEA6C", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xBEEADC", Offset = "0xBEEADC", VA = "0xBEEADC", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xBEEB40", Offset = "0xBEEB40", VA = "0xBEEB40", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xBEECC0", Offset = "0xBEECC0", VA = "0xBEECC0")]
		public TextureBlenderLegacyDiffuse()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class TextureBlenderStandardMetallic : TextureBlender
	{
		[Token(Token = "0x20005A5")]
		private enum Prop
		{
			[Token(Token = "0x40020D6")]
			doColor,
			[Token(Token = "0x40020D7")]
			doMetallic,
			[Token(Token = "0x40020D8")]
			doEmission,
			[Token(Token = "0x40020D9")]
			doNone
		}

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color m_tintColor;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color m_emission;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Prop propertyToDo;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color m_defaultColor;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_defaultMetallic;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_defaultGlossiness;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color m_defaultEmission;

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xBEECF4", Offset = "0xBEECF4", VA = "0xBEECF4", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xBEED50", Offset = "0xBEED50", VA = "0xBEED50", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xBEEEA8", Offset = "0xBEEEA8", VA = "0xBEEEA8", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xBEEF20", Offset = "0xBEEF20", VA = "0xBEEF20", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xBEF014", Offset = "0xBEF014", VA = "0xBEF014", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xBEF13C", Offset = "0xBEF13C", VA = "0xBEF13C", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xBEF66C", Offset = "0xBEF66C", VA = "0xBEF66C")]
		public TextureBlenderStandardMetallic()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class TextureBlenderStandardSpecular : TextureBlender
	{
		[Token(Token = "0x20005A6")]
		private enum Prop
		{
			[Token(Token = "0x40020DB")]
			doColor,
			[Token(Token = "0x40020DC")]
			doSpecular,
			[Token(Token = "0x40020DD")]
			doEmission,
			[Token(Token = "0x40020DE")]
			doNone
		}

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color m_tintColor;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color m_emission;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Prop propertyToDo;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color m_defaultColor;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color m_defaultSpecular;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_defaultGlossiness;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color m_defaultEmission;

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xBEF6C0", Offset = "0xBEF6C0", VA = "0xBEF6C0", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xBEF71C", Offset = "0xBEF71C", VA = "0xBEF71C", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xBEF874", Offset = "0xBEF874", VA = "0xBEF874", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xBEF8EC", Offset = "0xBEF8EC", VA = "0xBEF8EC", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xBEF9E4", Offset = "0xBEF9E4", VA = "0xBEF9E4", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xBEFB10", Offset = "0xBEFB10", VA = "0xBEFB10", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xBF00CC", Offset = "0xBF00CC", VA = "0xBF00CC")]
		public TextureBlenderStandardSpecular()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public delegate void ProgressUpdateDelegate(string msg, float progress);
	[Token(Token = "0x2000424")]
	public enum MB_ObjsToCombineTypes
	{
		[Token(Token = "0x4001A78")]
		prefabOnly,
		[Token(Token = "0x4001A79")]
		sceneObjOnly,
		[Token(Token = "0x4001A7A")]
		dontCare
	}
	[Token(Token = "0x2000425")]
	public enum MB_OutputOptions
	{
		[Token(Token = "0x4001A7C")]
		bakeIntoPrefab,
		[Token(Token = "0x4001A7D")]
		bakeMeshsInPlace,
		[Token(Token = "0x4001A7E")]
		bakeTextureAtlasesOnly,
		[Token(Token = "0x4001A7F")]
		bakeIntoSceneObject
	}
	[Token(Token = "0x2000426")]
	public enum MB_RenderType
	{
		[Token(Token = "0x4001A81")]
		meshRenderer,
		[Token(Token = "0x4001A82")]
		skinnedMeshRenderer
	}
	[Token(Token = "0x2000427")]
	public enum MB2_OutputOptions
	{
		[Token(Token = "0x4001A84")]
		bakeIntoSceneObject,
		[Token(Token = "0x4001A85")]
		bakeMeshAssetsInPlace,
		[Token(Token = "0x4001A86")]
		bakeIntoPrefab
	}
	[Token(Token = "0x2000428")]
	public enum MB2_LightmapOptions
	{
		[Token(Token = "0x4001A88")]
		preserve_current_lightmapping,
		[Token(Token = "0x4001A89")]
		ignore_UV2,
		[Token(Token = "0x4001A8A")]
		copy_UV2_unchanged,
		[Token(Token = "0x4001A8B")]
		generate_new_UV2_layout,
		[Token(Token = "0x4001A8C")]
		copy_UV2_unchanged_to_separate_rects
	}
	[Token(Token = "0x2000429")]
	public enum MB2_PackingAlgorithmEnum
	{
		[Token(Token = "0x4001A8E")]
		UnitysPackTextures,
		[Token(Token = "0x4001A8F")]
		MeshBakerTexturePacker,
		[Token(Token = "0x4001A90")]
		MeshBakerTexturePacker_Fast
	}
	[Token(Token = "0x200042A")]
	public enum MB2_ValidationLevel
	{
		[Token(Token = "0x4001A92")]
		none,
		[Token(Token = "0x4001A93")]
		quick,
		[Token(Token = "0x4001A94")]
		robust
	}
	[Token(Token = "0x200042B")]
	public interface MB2_EditorMethodsInterface
	{
		[Token(Token = "0x60019F1")]
		void Clear();

		[Token(Token = "0x60019F2")]
		void SetReadFlags(ProgressUpdateDelegate progressInfo);

		[Token(Token = "0x60019F3")]
		void SetReadWriteFlag(Texture2D tx, bool isReadable, bool addToList);

		[Token(Token = "0x60019F4")]
		void AddTextureFormat(Texture2D tx, bool isNormalMap);

		[Token(Token = "0x60019F5")]
		void SaveAtlasToAssetDatabase(Texture2D atlas, ShaderTextureProperty texPropertyName, int atlasNum, Material resMat);

		[Token(Token = "0x60019F6")]
		void SetMaterialTextureProperty(Material target, ShaderTextureProperty texPropName, string texturePath);

		[Token(Token = "0x60019F7")]
		void SetNormalMap(Texture2D tx);

		[Token(Token = "0x60019F8")]
		bool IsNormalMap(Texture2D tx);

		[Token(Token = "0x60019F9")]
		string GetPlatformString();

		[Token(Token = "0x60019FA")]
		void SetTextureSize(Texture2D tx, int size);

		[Token(Token = "0x60019FB")]
		bool IsCompressed(Texture2D tx);

		[Token(Token = "0x60019FC")]
		void CheckBuildSettings(long estimatedAtlasSize);

		[Token(Token = "0x60019FD")]
		bool CheckPrefabTypes(MB_ObjsToCombineTypes prefabType, List<GameObject> gos);

		[Token(Token = "0x60019FE")]
		bool ValidateSkinnedMeshes(List<GameObject> mom);

		[Token(Token = "0x60019FF")]
		void CommitChangesToAssets();

		[Token(Token = "0x6001A00")]
		void Destroy(UnityEngine.Object o);
	}
	[Token(Token = "0x200042C")]
	public enum MB2_LogLevel
	{
		[Token(Token = "0x4001A96")]
		none,
		[Token(Token = "0x4001A97")]
		error,
		[Token(Token = "0x4001A98")]
		warn,
		[Token(Token = "0x4001A99")]
		info,
		[Token(Token = "0x4001A9A")]
		debug,
		[Token(Token = "0x4001A9B")]
		trace
	}
	[Token(Token = "0x200042D")]
	public class MB2_Log
	{
		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xAC02E8", Offset = "0xAC02E8", VA = "0xAC02E8")]
		public static void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xAC04F8", Offset = "0xAC04F8", VA = "0xAC04F8")]
		public static string Error(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xAC05D4", Offset = "0xAC05D4", VA = "0xAC05D4")]
		public static string Warn(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xAC06B0", Offset = "0xAC06B0", VA = "0xAC06B0")]
		public static string Info(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xAC078C", Offset = "0xAC078C", VA = "0xAC078C")]
		public static string LogDebug(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xAC0868", Offset = "0xAC0868", VA = "0xAC0868")]
		public static string Trace(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xAC0944", Offset = "0xAC0944", VA = "0xAC0944")]
		public MB2_Log()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class ObjectLog
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int pos;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string[] logMessages;

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x11AFABC", Offset = "0x11AFABC", VA = "0x11AFABC")]
		private void _CacheLogMessage(string msg)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x11AFB64", Offset = "0x11AFB64", VA = "0x11AFB64")]
		public ObjectLog(short bufferSize)
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x11AFBD4", Offset = "0x11AFBD4", VA = "0x11AFBD4")]
		public void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x11AFC10", Offset = "0x11AFC10", VA = "0x11AFC10")]
		public void Error(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x11AFC44", Offset = "0x11AFC44", VA = "0x11AFC44")]
		public void Warn(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x11AFC78", Offset = "0x11AFC78", VA = "0x11AFC78")]
		public void Info(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x11AFCAC", Offset = "0x11AFCAC", VA = "0x11AFCAC")]
		public void LogDebug(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x11AFCE0", Offset = "0x11AFCE0", VA = "0x11AFCE0")]
		public void Trace(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x11AFD14", Offset = "0x11AFD14", VA = "0x11AFD14")]
		public string Dump()
		{
			return null;
		}
	}
	[Token(Token = "0x200042F")]
	public interface MBVersionInterface
	{
		[Token(Token = "0x6001A11")]
		string version();

		[Token(Token = "0x6001A12")]
		int GetMajorVersion();

		[Token(Token = "0x6001A13")]
		int GetMinorVersion();

		[Token(Token = "0x6001A14")]
		bool GetActive(GameObject go);

		[Token(Token = "0x6001A15")]
		void SetActive(GameObject go, bool isActive);

		[Token(Token = "0x6001A16")]
		void SetActiveRecursively(GameObject go, bool isActive);

		[Token(Token = "0x6001A17")]
		UnityEngine.Object[] FindSceneObjectsOfType(Type t);

		[Token(Token = "0x6001A18")]
		bool IsRunningAndMeshNotReadWriteable(Mesh m);

		[Token(Token = "0x6001A19")]
		Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x6001A1A")]
		void MeshClear(Mesh m, bool t);

		[Token(Token = "0x6001A1B")]
		void MeshAssignUV3(Mesh m, Vector2[] uv3s);

		[Token(Token = "0x6001A1C")]
		void MeshAssignUV4(Mesh m, Vector2[] uv4s);

		[Token(Token = "0x6001A1D")]
		Vector4 GetLightmapTilingOffset(Renderer r);

		[Token(Token = "0x6001A1E")]
		Transform[] GetBones(Renderer r);
	}
	[Token(Token = "0x2000430")]
	public class MBVersion
	{
		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MBVersionInterface _MBVersion;

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x11AD758", Offset = "0x11AD758", VA = "0x11AD758")]
		private static MBVersionInterface _CreateMBVersionConcrete()
		{
			return null;
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x11AD800", Offset = "0x11AD800", VA = "0x11AD800")]
		public static string version()
		{
			return null;
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x11A5680", Offset = "0x11A5680", VA = "0x11A5680")]
		public static int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x11A5760", Offset = "0x11A5760", VA = "0x11A5760")]
		public static int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x11AD8DC", Offset = "0x11AD8DC", VA = "0x11AD8DC")]
		public static bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x11AD9CC", Offset = "0x11AD9CC", VA = "0x11AD9CC")]
		public static void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x11ADAC4", Offset = "0x11ADAC4", VA = "0x11ADAC4")]
		public static void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x11ADBBC", Offset = "0x11ADBBC", VA = "0x11ADBBC")]
		public static UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x11ADCAC", Offset = "0x11ADCAC", VA = "0x11ADCAC")]
		public static bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x11ADD9C", Offset = "0x11ADD9C", VA = "0x11ADD9C")]
		public static Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x11ADEA4", Offset = "0x11ADEA4", VA = "0x11ADEA4")]
		public static void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x11ADF9C", Offset = "0x11ADF9C", VA = "0x11ADF9C")]
		public static void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x11AE094", Offset = "0x11AE094", VA = "0x11AE094")]
		public static void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x11AE18C", Offset = "0x11AE18C", VA = "0x11AE18C")]
		public static Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x11AE27C", Offset = "0x11AE27C", VA = "0x11AE27C")]
		public static Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x11AE36C", Offset = "0x11AE36C", VA = "0x11AE36C")]
		public MBVersion()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class MB2_TexturePacker
	{
		[Token(Token = "0x20005A7")]
		private class PixRect
		{
			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int x;

			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int y;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int w;

			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int h;

			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0xAC3E88", Offset = "0xAC3E88", VA = "0xAC3E88")]
			public PixRect()
			{
			}

			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0xAC14BC", Offset = "0xAC14BC", VA = "0xAC14BC")]
			public PixRect(int xx, int yy, int ww, int hh)
			{
			}
		}

		[Token(Token = "0x20005A8")]
		private class Image
		{
			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int imgId;

			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int w;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int h;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int x;

			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int y;

			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0xAC3A6C", Offset = "0xAC3A6C", VA = "0xAC3A6C")]
			public Image(int id, int tw, int th, int padding, int minImageSizeX, int minImageSizeY)
			{
			}

			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0xAC3CE0", Offset = "0xAC3CE0", VA = "0xAC3CE0")]
			public Image(Image im)
			{
			}
		}

		[Token(Token = "0x20005A9")]
		private class ImgIDComparer : IComparer<Image>
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0xAC3DF4", Offset = "0xAC3DF4", VA = "0xAC3DF4", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0xAC3B8C", Offset = "0xAC3B8C", VA = "0xAC3B8C")]
			public ImgIDComparer()
			{
			}
		}

		[Token(Token = "0x20005AA")]
		private class ImageHeightComparer : IComparer<Image>
		{
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0xAC3D7C", Offset = "0xAC3D7C", VA = "0xAC3D7C", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0xAC3B34", Offset = "0xAC3B34", VA = "0xAC3B34")]
			public ImageHeightComparer()
			{
			}
		}

		[Token(Token = "0x20005AB")]
		private class ImageWidthComparer : IComparer<Image>
		{
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0xAC3DB8", Offset = "0xAC3DB8", VA = "0xAC3DB8", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0xAC3B3C", Offset = "0xAC3B3C", VA = "0xAC3B3C")]
			public ImageWidthComparer()
			{
			}
		}

		[Token(Token = "0x20005AC")]
		private class ImageAreaComparer : IComparer<Image>
		{
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0xAC3D38", Offset = "0xAC3D38", VA = "0xAC3D38", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0xAC3B44", Offset = "0xAC3B44", VA = "0xAC3B44")]
			public ImageAreaComparer()
			{
			}
		}

		[Token(Token = "0x20005AD")]
		private class ProbeResult
		{
			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int w;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int h;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Node root;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool fitsInMaxSize;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float efficiency;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float squareness;

			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0xAC19F4", Offset = "0xAC19F4", VA = "0xAC19F4")]
			public void Set(int ww, int hh, Node r, bool fits, float e, float sq)
			{
			}

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0xAC3B54", Offset = "0xAC3B54", VA = "0xAC3B54")]
			public float GetScore(bool doPowerOfTwoScore)
			{
				return default(float);
			}

			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0xAC3B4C", Offset = "0xAC3B4C", VA = "0xAC3B4C")]
			public ProbeResult()
			{
			}
		}

		[Token(Token = "0x20005AE")]
		private class Node
		{
			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node[] child;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PixRect r;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image img;

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0xAC3E30", Offset = "0xAC3E30", VA = "0xAC3E30")]
			private bool isLeaf()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0xAC1508", Offset = "0xAC1508", VA = "0xAC1508")]
			public Node Insert(Image im, bool handed)
			{
				return null;
			}

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0xAC145C", Offset = "0xAC145C", VA = "0xAC145C")]
			public Node()
			{
			}
		}

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ProbeResult bestRoot;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool doPowerOfTwoTextures;

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xAC094C", Offset = "0xAC094C", VA = "0xAC094C")]
		private static void printTree(Node r, string spc)
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xAC0A30", Offset = "0xAC0A30", VA = "0xAC0A30")]
		private static void flattenTree(Node r, List<Image> putHere)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xAC0B24", Offset = "0xAC0B24", VA = "0xAC0B24")]
		private static void drawGizmosNode(Node r)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xAC0D18", Offset = "0xAC0D18", VA = "0xAC0D18")]
		private static Texture2D createFilledTex(Color c, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xAC0E20", Offset = "0xAC0E20", VA = "0xAC0E20")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xAC0E34", Offset = "0xAC0E34", VA = "0xAC0E34")]
		private bool Probe(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDim, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xAC1888", Offset = "0xAC1888", VA = "0xAC1888")]
		private void GetExtent(Node r, ref int x, ref int y)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xAC1A0C", Offset = "0xAC1A0C", VA = "0xAC1A0C")]
		private int StepWidthHeight(int oldVal, int step, int maxDim)
		{
			return default(int);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xAC1A3C", Offset = "0xAC1A3C", VA = "0xAC1A3C")]
		public int RoundToNearestPositivePowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xAC1968", Offset = "0xAC1968", VA = "0xAC1968")]
		public int CeilToNearestPowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xAC1AD0", Offset = "0xAC1AD0", VA = "0xAC1AD0")]
		public Rect[] GetRects(List<Vector2> imgWidthHeights, int maxDimension, int padding, out int outW, out int outH)
		{
			return null;
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xAC1B08", Offset = "0xAC1B08", VA = "0xAC1B08")]
		private Rect[] _GetRects(List<Vector2> imgWidthHeights, int maxDimension, int padding, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, out int outW, out int outH, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xAC3B94", Offset = "0xAC3B94", VA = "0xAC3B94")]
		public void RunTestHarness()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xAC3CC8", Offset = "0xAC3CC8", VA = "0xAC3CC8")]
		public MB2_TexturePacker()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000432")]
	public class MB3_AgglomerativeClustering
	{
		[Serializable]
		[Token(Token = "0x20005AF")]
		public class ClusterNode
		{
			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public item_s leaf;

			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClusterNode cha;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClusterNode chb;

			[Token(Token = "0x40020F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int height;

			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float distToMergedCentroid;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 centroid;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int[] leafs;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int idx;

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xAC45C8", Offset = "0xAC45C8", VA = "0xAC45C8")]
			public ClusterNode(item_s ii, int index)
			{
			}

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xAC467C", Offset = "0xAC467C", VA = "0xAC467C")]
			public ClusterNode(ClusterNode a, ClusterNode b, int index, int h, float dist, ClusterNode[] clusters)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B0")]
		public class item_s
		{
			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 coord;

			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0xAC4A28", Offset = "0xAC4A28", VA = "0xAC4A28")]
			public item_s()
			{
			}
		}

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<item_s> items;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClusterNode[] clusters;

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xAC3E90", Offset = "0xAC3E90", VA = "0xAC3E90")]
		private float euclidean_distance(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xAC3F38", Offset = "0xAC3F38", VA = "0xAC3F38")]
		public void agglomerate(ProgressUpdateDelegate progFunc)
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xAC48B8", Offset = "0xAC48B8", VA = "0xAC48B8")]
		public int TestRun(List<GameObject> gos)
		{
			return default(int);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xAC4A30", Offset = "0xAC4A30", VA = "0xAC4A30")]
		public MB3_AgglomerativeClustering()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class MB3_CopyBoneWeights
	{
		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xAC4AA0", Offset = "0xAC4AA0", VA = "0xAC4AA0")]
		public static void CopyBoneWeightsFromSeamMeshToOtherMeshes(float radius, Mesh seamMesh, Mesh[] targetMeshes)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xAC53E0", Offset = "0xAC53E0", VA = "0xAC53E0")]
		public MB3_CopyBoneWeights()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000434")]
	public abstract class MB3_MeshCombiner
	{
		[Token(Token = "0x20005B1")]
		public delegate void GenerateUV2Delegate(Mesh m, float hardAngle, float packMargin);

		[Token(Token = "0x20005B2")]
		public class MBBlendShapeKey
		{
			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjecID;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int blendShapeIndexInSrc;

			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0xFD2CA8", Offset = "0xFD2CA8", VA = "0xFD2CA8")]
			public MBBlendShapeKey(int srcSkinnedMeshRenderGameObjectID, int blendShapeIndexInSource)
			{
			}

			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0xFD2CE0", Offset = "0xFD2CE0", VA = "0xFD2CE0", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002000")]
			[Address(RVA = "0xFD2D8C", Offset = "0xFD2D8C", VA = "0xFD2D8C", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20005B3")]
		public class MBBlendShapeValue
		{
			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject combinedMeshGameObject;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blendShapeIndex;

			[Token(Token = "0x6002001")]
			[Address(RVA = "0xFD2DA8", Offset = "0xFD2DA8", VA = "0xFD2DA8")]
			public MBBlendShapeValue()
			{
			}
		}

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected MB2_LogLevel _LOG_LEVEL;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected MB2_ValidationLevel _validationLevel;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected GameObject _resultSceneObject;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Renderer _targetRenderer;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected MB_RenderType _renderType;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		protected MB2_OutputOptions _outputOption;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected MB2_LightmapOptions _lightmapOption;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected bool _doNorm;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		protected bool _doTan;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[SerializeField]
		protected bool _doCol;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[SerializeField]
		protected bool _doUV;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected bool _doUV3;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		protected bool _doUV4;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		protected bool _doBlendShapes;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		[SerializeField]
		protected bool _recenterVertsToBoundsCenter;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public bool _optimizeAfterBake;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float uv2UnwrappingParamsHardAngle;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float uv2UnwrappingParamsPackMargin;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool _usingTemporaryTextureBakeResult;

		[Token(Token = "0x1700023D")]
		public static bool EVAL_VERSION
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xFD2014", Offset = "0xFD2014", VA = "0xFD2014")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023E")]
		public virtual MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0xFD201C", Offset = "0xFD201C", VA = "0xFD201C", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xFD2024", Offset = "0xFD2024", VA = "0xFD2024", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public virtual MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0xFD202C", Offset = "0xFD202C", VA = "0xFD202C", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xFD2034", Offset = "0xFD2034", VA = "0xFD2034", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public string name
		{
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0xFD203C", Offset = "0xFD203C", VA = "0xFD203C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xFD2044", Offset = "0xFD2044", VA = "0xFD2044")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public virtual MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0xFD204C", Offset = "0xFD204C", VA = "0xFD204C", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xFD2054", Offset = "0xFD2054", VA = "0xFD2054", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public virtual GameObject resultSceneObject
		{
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0xFD205C", Offset = "0xFD205C", VA = "0xFD205C", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xFD2064", Offset = "0xFD2064", VA = "0xFD2064", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public virtual Renderer targetRenderer
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xFD206C", Offset = "0xFD206C", VA = "0xFD206C", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xFD2074", Offset = "0xFD2074", VA = "0xFD2074", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public virtual MB_RenderType renderType
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xFD2160", Offset = "0xFD2160", VA = "0xFD2160", Slot = "14")]
			get
			{
				return default(MB_RenderType);
			}
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xFD2168", Offset = "0xFD2168", VA = "0xFD2168", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public virtual MB2_OutputOptions outputOption
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xFD2170", Offset = "0xFD2170", VA = "0xFD2170", Slot = "16")]
			get
			{
				return default(MB2_OutputOptions);
			}
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xFD2178", Offset = "0xFD2178", VA = "0xFD2178", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public virtual MB2_LightmapOptions lightmapOption
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xFD2180", Offset = "0xFD2180", VA = "0xFD2180", Slot = "18")]
			get
			{
				return default(MB2_LightmapOptions);
			}
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xFD2188", Offset = "0xFD2188", VA = "0xFD2188", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public virtual bool doNorm
		{
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0xFD2190", Offset = "0xFD2190", VA = "0xFD2190", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xFD2198", Offset = "0xFD2198", VA = "0xFD2198", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public virtual bool doTan
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xFD21A4", Offset = "0xFD21A4", VA = "0xFD21A4", Slot = "22")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xFD21AC", Offset = "0xFD21AC", VA = "0xFD21AC", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public virtual bool doCol
		{
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xFD21B8", Offset = "0xFD21B8", VA = "0xFD21B8", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xFD21C0", Offset = "0xFD21C0", VA = "0xFD21C0", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public virtual bool doUV
		{
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0xFD21CC", Offset = "0xFD21CC", VA = "0xFD21CC", Slot = "26")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xFD21D4", Offset = "0xFD21D4", VA = "0xFD21D4", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public virtual bool doUV1
		{
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xFD21E0", Offset = "0xFD21E0", VA = "0xFD21E0", Slot = "28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xFD21E8", Offset = "0xFD21E8", VA = "0xFD21E8", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public virtual bool doUV3
		{
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xFD2210", Offset = "0xFD2210", VA = "0xFD2210", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xFD2218", Offset = "0xFD2218", VA = "0xFD2218", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public virtual bool doUV4
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xFD2224", Offset = "0xFD2224", VA = "0xFD2224", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xFD222C", Offset = "0xFD222C", VA = "0xFD222C", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public virtual bool doBlendShapes
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0xFD2238", Offset = "0xFD2238", VA = "0xFD2238", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0xFD2240", Offset = "0xFD2240", VA = "0xFD2240", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public virtual bool recenterVertsToBoundsCenter
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0xFD224C", Offset = "0xFD224C", VA = "0xFD224C", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0xFD2254", Offset = "0xFD2254", VA = "0xFD2254", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public bool optimizeAfterBake
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xFD2260", Offset = "0xFD2260", VA = "0xFD2260")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xFD2268", Offset = "0xFD2268", VA = "0xFD2268")]
			set
			{
			}
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xFD21EC", Offset = "0xFD21EC", VA = "0xFD21EC", Slot = "30")]
		public virtual bool doUV2()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6B")]
		public abstract int GetLightmapIndex();

		[Token(Token = "0x6001A6C")]
		public abstract void ClearBuffers();

		[Token(Token = "0x6001A6D")]
		public abstract void ClearMesh();

		[Token(Token = "0x6001A6E")]
		public abstract void DestroyMesh();

		[Token(Token = "0x6001A6F")]
		public abstract void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods);

		[Token(Token = "0x6001A70")]
		public abstract List<GameObject> GetObjectsInCombined();

		[Token(Token = "0x6001A71")]
		public abstract int GetNumObjectsInCombined();

		[Token(Token = "0x6001A72")]
		public abstract int GetNumVerticesFor(GameObject go);

		[Token(Token = "0x6001A73")]
		public abstract int GetNumVerticesFor(int instanceID);

		[Token(Token = "0x6001A74")]
		public abstract Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap();

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xFD2274", Offset = "0xFD2274", VA = "0xFD2274", Slot = "49")]
		public virtual void Apply()
		{
		}

		[Token(Token = "0x6001A76")]
		public abstract void Apply(GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x6001A77")]
		public abstract void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapeFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x6001A78")]
		public abstract void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false);

		[Token(Token = "0x6001A79")]
		public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

		[Token(Token = "0x6001A7A")]
		public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource);

		[Token(Token = "0x6001A7B")]
		public abstract bool CombinedMeshContains(GameObject go);

		[Token(Token = "0x6001A7C")]
		public abstract void UpdateSkinnedMeshApproximateBounds();

		[Token(Token = "0x6001A7D")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBones();

		[Token(Token = "0x6001A7E")]
		public abstract void CheckIntegrity();

		[Token(Token = "0x6001A7F")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBounds();

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xFD2288", Offset = "0xFD2288", VA = "0xFD2288")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBonesStatic(Transform[] bs, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xFD25C0", Offset = "0xFD25C0", VA = "0xFD25C0")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBoundsStatic(List<GameObject> objectsInCombined, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xFD2740", Offset = "0xFD2740", VA = "0xFD2740", Slot = "60")]
		protected virtual bool _CreateTemporaryTextrueBakeResult(GameObject[] gos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xFD277C", Offset = "0xFD277C", VA = "0xFD277C")]
		protected MB3_MeshCombiner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000435")]
	public class MB3_MeshCombinerSingle : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x20005B4")]
		public class MB_DynamicGameObject : IComparable<MB_DynamicGameObject>
		{
			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int instanceID;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int vertIdx;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int blendShapeIdx;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int numVerts;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int numBlendShapes;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] indexesOfBonesUsed;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int lightmapIndex;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector4 lightmapTilingOffset;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 meshSize;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool show;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool invertTriangles;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int[] submeshTriIdxs;

			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] submeshNumTris;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int[] targetSubmeshIdxs;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Rect[] uvRects;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Rect[] encapsulatingRect;

			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Rect[] sourceMaterialTiling;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Rect[] obUVRects;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public int[][] _submeshTris;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public bool _beingDeleted;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public int _triangleIdxAdjustment;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Transform[] _tmpCachedBones;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Matrix4x4[] _tmpCachedBindposes;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public BoneWeight[] _tmpCachedBoneWeights;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public int[] _tmpIndexesOfSourceBonesUsed;

			[Token(Token = "0x6002002")]
			[Address(RVA = "0xFE0B90", Offset = "0xFE0B90", VA = "0xFE0B90", Slot = "4")]
			public int CompareTo(MB_DynamicGameObject b)
			{
				return default(int);
			}

			[Token(Token = "0x6002003")]
			[Address(RVA = "0xFD933C", Offset = "0xFD933C", VA = "0xFD933C")]
			public MB_DynamicGameObject()
			{
			}
		}

		[Token(Token = "0x20005B5")]
		public class MeshChannels
		{
			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2[] uv0raw;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv0modified;

			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector2[] uv2;

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2[] uv3;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector2[] uv4;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Color[] colors;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public BoneWeight[] boneWeights;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Matrix4x4[] bindPoses;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int[] triangles;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public MBBlendShape[] blendShapes;

			[Token(Token = "0x6002004")]
			[Address(RVA = "0xFE0BB0", Offset = "0xFE0BB0", VA = "0xFE0BB0")]
			public MeshChannels()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B6")]
		public class MBBlendShapeFrame
		{
			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float frameWeight;

			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] vertices;

			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3[] normals;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] tangents;

			[Token(Token = "0x6002005")]
			[Address(RVA = "0xFE0B88", Offset = "0xFE0B88", VA = "0xFE0B88")]
			public MBBlendShapeFrame()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005B7")]
		public class MBBlendShape
		{
			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int gameObjectID;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int indexInSource;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MBBlendShapeFrame[] frames;

			[Token(Token = "0x6002006")]
			[Address(RVA = "0xFE0B80", Offset = "0xFE0B80", VA = "0xFE0B80")]
			public MBBlendShape()
			{
			}
		}

		[Token(Token = "0x20005B8")]
		public class MeshChannelsCache
		{
			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private MB3_MeshCombinerSingle mc;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected Dictionary<int, MeshChannels> meshID2MeshChannels;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector2 _HALF_UV;

			[Token(Token = "0x6002007")]
			[Address(RVA = "0xFD9290", Offset = "0xFD9290", VA = "0xFD9290")]
			internal MeshChannelsCache(MB3_MeshCombinerSingle mcs)
			{
			}

			[Token(Token = "0x6002008")]
			[Address(RVA = "0xFD9ED8", Offset = "0xFD9ED8", VA = "0xFD9ED8")]
			internal Vector3[] GetVertices(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002009")]
			[Address(RVA = "0xFD9FE0", Offset = "0xFD9FE0", VA = "0xFD9FE0")]
			internal Vector3[] GetNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600200A")]
			[Address(RVA = "0xFDA0E8", Offset = "0xFDA0E8", VA = "0xFDA0E8")]
			internal Vector4[] GetTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600200B")]
			[Address(RVA = "0xFD46E4", Offset = "0xFD46E4", VA = "0xFD46E4")]
			internal Vector2[] GetUv0Raw(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600200C")]
			[Address(RVA = "0xFE128C", Offset = "0xFE128C", VA = "0xFE128C")]
			internal Vector2[] GetUv0Modified(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600200D")]
			[Address(RVA = "0xFDB7A4", Offset = "0xFDB7A4", VA = "0xFDB7A4")]
			internal Vector2[] GetUv2(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600200E")]
			[Address(RVA = "0xFDAADC", Offset = "0xFDAADC", VA = "0xFDAADC")]
			internal Vector2[] GetUv3(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600200F")]
			[Address(RVA = "0xFDAC00", Offset = "0xFDAC00", VA = "0xFDAC00")]
			internal Vector2[] GetUv4(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002010")]
			[Address(RVA = "0xFDAD24", Offset = "0xFDAD24", VA = "0xFDAD24")]
			internal Color[] GetColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002011")]
			[Address(RVA = "0xFE05B4", Offset = "0xFE05B4", VA = "0xFE05B4")]
			internal Matrix4x4[] GetBindposes(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x6002012")]
			[Address(RVA = "0xFDE224", Offset = "0xFDE224", VA = "0xFDE224")]
			internal BoneWeight[] GetBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x6002013")]
			[Address(RVA = "0xFE1BAC", Offset = "0xFE1BAC", VA = "0xFE1BAC")]
			internal int[] GetTriangles(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002014")]
			[Address(RVA = "0xFDAE2C", Offset = "0xFDAE2C", VA = "0xFDAE2C")]
			internal MBBlendShape[] GetBlendShapes(Mesh m, int gameObjectID)
			{
				return null;
			}

			[Token(Token = "0x6002015")]
			[Address(RVA = "0xFE15AC", Offset = "0xFE15AC", VA = "0xFE15AC")]
			private Color[] _getMeshColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002016")]
			[Address(RVA = "0xFE0BB8", Offset = "0xFE0BB8", VA = "0xFE0BB8")]
			private Vector3[] _getMeshNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002017")]
			[Address(RVA = "0xFE0DE0", Offset = "0xFE0DE0", VA = "0xFE0DE0")]
			private Vector4[] _getMeshTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002018")]
			[Address(RVA = "0xFE105C", Offset = "0xFE105C", VA = "0xFE105C")]
			private Vector2[] _getMeshUVs(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002019")]
			[Address(RVA = "0xFE137C", Offset = "0xFE137C", VA = "0xFE137C")]
			private Vector2[] _getMeshUV2s(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x600201A")]
			[Address(RVA = "0xFE17F0", Offset = "0xFE17F0", VA = "0xFE17F0")]
			public static Matrix4x4[] _getBindPoses(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x600201B")]
			[Address(RVA = "0xFE19A4", Offset = "0xFE19A4", VA = "0xFE19A4")]
			public static BoneWeight[] _getBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x600201C")]
			[Address(RVA = "0xFE1CB4", Offset = "0xFE1CB4", VA = "0xFE1CB4")]
			private void _generateTangents(int[] triangles, Vector3[] verts, Vector2[] uvs, Vector3[] normals, Vector4[] outTangents)
			{
			}
		}

		[Token(Token = "0x20005B9")]
		public struct BoneAndBindpose
		{
			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform bone;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Matrix4x4 bindPose;

			[Token(Token = "0x600201D")]
			[Address(RVA = "0x7ADE4C", Offset = "0x7ADE4C", VA = "0x7ADE4C")]
			public BoneAndBindpose(Transform t, Matrix4x4 bp)
			{
			}

			[Token(Token = "0x600201E")]
			[Address(RVA = "0x7ADE80", Offset = "0x7ADE80", VA = "0x7ADE80", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600201F")]
			[Address(RVA = "0x7ADE88", Offset = "0x7ADE88", VA = "0x7ADE88", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715834", Offset = "0x715834")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject[] _goToAdd;

			[Token(Token = "0x6002020")]
			[Address(RVA = "0xFD8D3C", Offset = "0xFD8D3C", VA = "0xFD8D3C")]
			public <>c__DisplayClass53_0()
			{
			}
		}

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715844", Offset = "0x715844")]
		private sealed class <>c__DisplayClass53_1
		{
			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass53_0 CS$<>8__locals1;

			[Token(Token = "0x6002021")]
			[Address(RVA = "0xFD9334", Offset = "0xFD9334", VA = "0xFD9334")]
			public <>c__DisplayClass53_1()
			{
			}

			[Token(Token = "0x6002022")]
			[Address(RVA = "0xFE0938", Offset = "0xFE0938", VA = "0xFE0938")]
			internal bool <_addToCombined>b__0(int o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected List<GameObject> objectsInCombinedMesh;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int lightmapIndex;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<MB_DynamicGameObject> mbDynamicObjectsInCombinedMesh;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<int, MB_DynamicGameObject> _instance2combined_map;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Vector3[] verts;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3[] normals;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector4[] tangents;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector2[] uvs;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector2[] uv2s;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Vector2[] uv3s;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Vector2[] uv4s;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color[] colors;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Matrix4x4[] bindPoses;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform[] bones;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		internal MBBlendShape[] blendShapes;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[][] submeshTris;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private BoneWeight[] boneWeights;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject[] empty;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int[] emptyIDs;

		[Token(Token = "0x17000251")]
		public override MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0xFD2DB0", Offset = "0xFD2DB0", VA = "0xFD2DB0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public override MB_RenderType renderType
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0xFD2ECC", Offset = "0xFD2ECC", VA = "0xFD2ECC", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public override GameObject resultSceneObject
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0xFD2F84", Offset = "0xFD2F84", VA = "0xFD2F84", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xFD3080", Offset = "0xFD3080", VA = "0xFD3080")]
		private MB_DynamicGameObject instance2Combined_MapGet(int gameObjectID)
		{
			return null;
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xFD30E8", Offset = "0xFD30E8", VA = "0xFD30E8")]
		private void instance2Combined_MapAdd(int gameObjectID, MB_DynamicGameObject dgo)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xFD3158", Offset = "0xFD3158", VA = "0xFD3158")]
		private void instance2Combined_MapRemove(int gameObjectID)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xFD31C0", Offset = "0xFD31C0", VA = "0xFD31C0")]
		private bool instance2Combined_MapTryGetValue(int gameObjectID, out MB_DynamicGameObject dgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xFD3230", Offset = "0xFD3230", VA = "0xFD3230")]
		private int instance2Combined_MapCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xFD3288", Offset = "0xFD3288", VA = "0xFD3288")]
		private void instance2Combined_MapClear()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xFD32E0", Offset = "0xFD32E0", VA = "0xFD32E0")]
		private bool instance2Combined_MapContainsKey(int gameObjectID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xFD3348", Offset = "0xFD3348", VA = "0xFD3348", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xFD3398", Offset = "0xFD3398", VA = "0xFD3398", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xFD3420", Offset = "0xFD3420", VA = "0xFD3420")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xFD34C4", Offset = "0xFD34C4", VA = "0xFD34C4")]
		public Transform[] GetBones()
		{
			return null;
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xFD34CC", Offset = "0xFD34CC", VA = "0xFD34CC", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xFD3524", Offset = "0xFD3524", VA = "0xFD3524", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xFD3568", Offset = "0xFD3568", VA = "0xFD3568", Slot = "47")]
		public override int GetNumVerticesFor(int instanceID)
		{
			return default(int);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xFD35A8", Offset = "0xFD35A8", VA = "0xFD35A8", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xFD3704", Offset = "0xFD3704", VA = "0xFD3704")]
		private void _initialize()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xFD3DCC", Offset = "0xFD3DCC", VA = "0xFD3DCC")]
		private bool _collectMaterialTriangles(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xFD4414", Offset = "0xFD4414", VA = "0xFD4414")]
		private bool _collectOutOfBoundsUVRects2(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisResults, MeshChannelsCache meshChannelCache)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xFD47EC", Offset = "0xFD47EC", VA = "0xFD47EC")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xFD4A58", Offset = "0xFD4A58", VA = "0xFD4A58")]
		private bool _validateMeshFlags()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xFD4C58", Offset = "0xFD4C58", VA = "0xFD4C58")]
		private bool _showHide(GameObject[] goToShow, GameObject[] goToHide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xFD4F24", Offset = "0xFD4F24", VA = "0xFD4F24")]
		private bool _addToCombined(GameObject[] goToAdd, int[] goToDelete, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xFDA1F0", Offset = "0xFDA1F0", VA = "0xFDA1F0")]
		private void _copyAndAdjustUVsFromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xFDA85C", Offset = "0xFDA85C", VA = "0xFDA85C")]
		private void _copyAndAdjustUV2FromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xFDB8AC", Offset = "0xFDB8AC", VA = "0xFDB8AC", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xFDB8BC", Offset = "0xFDB8BC", VA = "0xFDB8BC", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xFDBB80", Offset = "0xFDBB80", VA = "0xFDBB80", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xFDBE44", Offset = "0xFDBE44", VA = "0xFDBE44")]
		private int _getNumBones(Renderer r)
		{
			return default(int);
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xFDBF6C", Offset = "0xFDBF6C", VA = "0xFDBF6C")]
		private Transform[] _getBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xFDBF78", Offset = "0xFDBF78", VA = "0xFDBF78", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xFDC080", Offset = "0xFDC080", VA = "0xFDC080", Slot = "61")]
		public virtual void ApplyShowHide()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xFDC624", Offset = "0xFDC624", VA = "0xFDC624", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xFDC2A0", Offset = "0xFDC2A0", VA = "0xFDC2A0")]
		public int[][] GetSubmeshTrisWithShowHideApplied()
		{
			return null;
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xFDD5F0", Offset = "0xFDD5F0", VA = "0xFDD5F0", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xFDD63C", Offset = "0xFDD63C", VA = "0xFDD63C")]
		private void _updateGameObjects(GameObject[] gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xFDD8CC", Offset = "0xFDD8CC", VA = "0xFDD8CC")]
		private void _updateGameObject(GameObject go, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xFDE350", Offset = "0xFDE350", VA = "0xFDE350")]
		public bool ShowHideGameObjects(GameObject[] toShow, GameObject[] toHide)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xFDE354", Offset = "0xFDE354", VA = "0xFDE354", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xFDE54C", Offset = "0xFDE54C", VA = "0xFDE54C", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xFDEB5C", Offset = "0xFDEB5C", VA = "0xFDEB5C", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xFDEBC4", Offset = "0xFDEBC4", VA = "0xFDEBC4", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xFDEE9C", Offset = "0xFDEE9C", VA = "0xFDEE9C", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xFDEF58", Offset = "0xFDEF58", VA = "0xFDEF58", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xFDF0CC", Offset = "0xFDF0CC", VA = "0xFDF0CC", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xFD8D44", Offset = "0xFD8D44", VA = "0xFD8D44")]
		public bool ValidateTargRendererAndMeshAndResultSceneObj()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xFDF2B4", Offset = "0xFDF2B4", VA = "0xFDF2B4")]
		public static Renderer BuildSceneHierarch(MB3_MeshCombinerSingle mom, GameObject root, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
			return null;
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xFDEA5C", Offset = "0xFDEA5C", VA = "0xFDEA5C")]
		public void BuildSceneMeshObject([Optional] GameObject[] gos, bool createNewChild = false)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xFD9894", Offset = "0xFD9894", VA = "0xFD9894")]
		private bool IsMirrored(Matrix4x4 tm)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xFDFFBC", Offset = "0xFDFFBC", VA = "0xFDFFBC", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xFE04E4", Offset = "0xFE04E4", VA = "0xFE04E4")]
		private void _ZeroArray(Vector3[] arr, int idx, int length)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xFD90E4", Offset = "0xFD90E4", VA = "0xFD90E4")]
		private List<MB_DynamicGameObject>[] _buildBoneIdx2dgoMap()
		{
			return null;
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xFD9410", Offset = "0xFD9410", VA = "0xFD9410")]
		private void _CollectBonesToAddForDGO(MB_DynamicGameObject dgo, Dictionary<Transform, int> bone2idx, HashSet<int> boneIdxsToDelete, HashSet<BoneAndBindpose> bonesToAdd, Renderer r, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xFD9A38", Offset = "0xFD9A38", VA = "0xFD9A38")]
		private void _CopyBonesWeAreKeepingToNewBonesArrayAndAdjustBWIndexes(HashSet<int> boneIdxsToDeleteHS, HashSet<BoneAndBindpose> bonesToAdd, Transform[] nbones, Matrix4x4[] nbindPoses, BoneWeight[] nboneWeights, int totalDeleteVerts)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xFDAE78", Offset = "0xFDAE78", VA = "0xFDAE78")]
		private void _AddBonesToNewBonesArrayAndAdjustBWIndexes(MB_DynamicGameObject dgo, Renderer r, int vertsIdx, Transform[] nbones, BoneWeight[] nboneWeights, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xFDB38C", Offset = "0xFDB38C", VA = "0xFDB38C")]
		private void _copyUV2unchangedToSeparateRects()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xFE06F8", Offset = "0xFE06F8", VA = "0xFE06F8")]
		public MB3_MeshCombinerSingle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000436")]
	public class MB3_MultiMeshCombiner : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x20005BC")]
		public class CombinedMesh
		{
			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB3_MeshCombinerSingle combinedMesh;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int extraSpace;

			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numVertsInListToDelete;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numVertsInListToAdd;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<GameObject> gosToAdd;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<int> gosToDelete;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<GameObject> gosToUpdate;

			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isDirty;

			[Token(Token = "0x6002023")]
			[Address(RVA = "0x1199494", Offset = "0x1199494", VA = "0x1199494")]
			public CombinedMesh(int maxNumVertsInMesh, GameObject resultSceneObject, MB2_LogLevel ll)
			{
			}

			[Token(Token = "0x6002024")]
			[Address(RVA = "0x11995C8", Offset = "0x11995C8", VA = "0x11995C8")]
			public bool isEmpty()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject[] empty;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] emptyIDs;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<int, CombinedMesh> obj2MeshCombinerMap;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public List<CombinedMesh> meshCombiners;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int _maxVertsInMesh;

		[Token(Token = "0x17000254")]
		public override MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xFE22C4", Offset = "0xFE22C4", VA = "0xFE22C4", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0xFE22CC", Offset = "0xFE22CC", VA = "0xFE22CC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public override MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0xFE242C", Offset = "0xFE242C", VA = "0xFE242C", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0xFE237C", Offset = "0xFE237C", VA = "0xFE237C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public int maxVertsInMesh
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xFE2434", Offset = "0xFE2434", VA = "0xFE2434")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xFE243C", Offset = "0xFE243C", VA = "0xFE243C")]
			set
			{
			}
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xFE2530", Offset = "0xFE2530", VA = "0xFE2530", Slot = "45")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xFE2588", Offset = "0xFE2588", VA = "0xFE2588", Slot = "46")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xFE2640", Offset = "0xFE2640", VA = "0xFE2640", Slot = "47")]
		public override int GetNumVerticesFor(int gameObjectID)
		{
			return default(int);
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xFE26E4", Offset = "0xFE26E4", VA = "0xFE26E4", Slot = "44")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xFE27D8", Offset = "0xFE27D8", VA = "0xFE27D8", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xFE2860", Offset = "0xFE2860", VA = "0xFE2860", Slot = "55")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xFE28DC", Offset = "0xFE28DC", VA = "0xFE28DC")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xFE2B08", Offset = "0xFE2B08", VA = "0xFE2B08", Slot = "50")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xFE2C1C", Offset = "0xFE2C1C", VA = "0xFE2C1C", Slot = "51")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xFE2DE0", Offset = "0xFE2DE0", VA = "0xFE2DE0", Slot = "56")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xFE2E88", Offset = "0xFE2E88", VA = "0xFE2E88", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xFE2F30", Offset = "0xFE2F30", VA = "0xFE2F30", Slot = "59")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xFE2FD8", Offset = "0xFE2FD8", VA = "0xFE2FD8", Slot = "52")]
		public override void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xFE33E0", Offset = "0xFE33E0", VA = "0xFE33E0", Slot = "53")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xFE35D8", Offset = "0xFE35D8", VA = "0xFE35D8", Slot = "54")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xFE3A54", Offset = "0xFE3A54", VA = "0xFE3A54")]
		private bool _validate(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xFE404C", Offset = "0xFE404C", VA = "0xFE404C")]
		private void _distributeAmongBakers(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xFE4A1C", Offset = "0xFE4A1C", VA = "0xFE4A1C")]
		private bool _bakeStep1(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xFE5884", Offset = "0xFE5884", VA = "0xFE5884", Slot = "48")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xFE5AA8", Offset = "0xFE5AA8", VA = "0xFE5AA8", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xFE5B50", Offset = "0xFE5B50", VA = "0xFE5B50", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xFE5B60", Offset = "0xFE5B60", VA = "0xFE5B60", Slot = "42")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xFE5D08", Offset = "0xFE5D08", VA = "0xFE5D08", Slot = "43")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xFE563C", Offset = "0xFE563C", VA = "0xFE563C")]
		private void _setMBValues(MB3_MeshCombinerSingle targ)
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xFE5F38", Offset = "0xFE5F38", VA = "0xFE5F38", Slot = "58")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xFE5FE0", Offset = "0xFE5FE0", VA = "0xFE5FE0")]
		public MB3_MultiMeshCombiner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000437")]
	public class ShaderTextureProperty
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isNormalMap;

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x11A5040", Offset = "0x11A5040", VA = "0x11A5040")]
		public ShaderTextureProperty(string n, bool norm)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x11ACB68", Offset = "0x11ACB68", VA = "0x11ACB68")]
		public static string[] GetNames(List<ShaderTextureProperty> props)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000438")]
	public class MB3_TextureCombiner
	{
		[Token(Token = "0x20005BD")]
		public class MeshBakerMaterialTexture
		{
			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D t;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float texelDensity;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DRect encapsulatingSamplingRect;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public DRect matTilingRect;

			[Token(Token = "0x6002025")]
			[Address(RVA = "0x11ACF84", Offset = "0x11ACF84", VA = "0x11ACF84")]
			public MeshBakerMaterialTexture()
			{
			}

			[Token(Token = "0x6002026")]
			[Address(RVA = "0x11ACF8C", Offset = "0x11ACF8C", VA = "0x11ACF8C")]
			public MeshBakerMaterialTexture(Texture2D tx)
			{
			}

			[Token(Token = "0x6002027")]
			[Address(RVA = "0x11A9B1C", Offset = "0x11A9B1C", VA = "0x11A9B1C")]
			public MeshBakerMaterialTexture(Texture2D tx, Vector2 o, Vector2 s, float texelDens)
			{
			}
		}

		[Token(Token = "0x20005BE")]
		public class MatAndTransformToMerged
		{
			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material mat;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DRect obUVRectIfTilingSame;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DRect samplingRectMatAndUVTiling;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public DRect materialTiling;

			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string objName;

			[Token(Token = "0x6002028")]
			[Address(RVA = "0x11A9CCC", Offset = "0x11A9CCC", VA = "0x11A9CCC")]
			public MatAndTransformToMerged(Material m)
			{
			}

			[Token(Token = "0x6002029")]
			[Address(RVA = "0x11ACE38", Offset = "0x11ACE38", VA = "0x11ACE38", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600202A")]
			[Address(RVA = "0x11ACF20", Offset = "0x11ACF20", VA = "0x11ACF20", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20005BF")]
		public class SamplingRectEnclosesComparer : IComparer<MatAndTransformToMerged>
		{
			[Token(Token = "0x600202B")]
			[Address(RVA = "0x11ACFB8", Offset = "0x11ACFB8", VA = "0x11ACFB8", Slot = "4")]
			public int Compare(MatAndTransformToMerged x, MatAndTransformToMerged y)
			{
				return default(int);
			}

			[Token(Token = "0x600202C")]
			[Address(RVA = "0x11A0FC0", Offset = "0x11A0FC0", VA = "0x11A0FC0")]
			public SamplingRectEnclosesComparer()
			{
			}
		}

		[Token(Token = "0x20005C0")]
		public class MB_TexSet
		{
			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshBakerMaterialTexture[] ts;

			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MatAndTransformToMerged> mats;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GameObject> gos;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool allTexturesUseSameMatTiling;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector2 obUVoffset;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector2 obUVscale;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int idealWidth;

			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int idealHeight;

			[Token(Token = "0x1700036F")]
			public DRect obUVrect
			{
				[Token(Token = "0x600202D")]
				[Address(RVA = "0x11AB4B0", Offset = "0x11AB4B0", VA = "0x11AB4B0")]
				get
				{
					return default(DRect);
				}
			}

			[Token(Token = "0x600202E")]
			[Address(RVA = "0x11A9BAC", Offset = "0x11A9BAC", VA = "0x11A9BAC")]
			public MB_TexSet(MeshBakerMaterialTexture[] tss, Vector2 uvOffset, Vector2 uvScale)
			{
			}

			[Token(Token = "0x600202F")]
			[Address(RVA = "0x11A5160", Offset = "0x11A5160", VA = "0x11A5160")]
			public bool IsEqual(object obj, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, TextureBlender resultMaterialTextureBlender)
			{
				return default(bool);
			}

			[Token(Token = "0x6002030")]
			[Address(RVA = "0x11A0774", Offset = "0x11A0774", VA = "0x11A0774")]
			public void CalcInitialFullSamplingRects(bool fixOutOfBoundsUVs)
			{
			}

			[Token(Token = "0x6002031")]
			[Address(RVA = "0x11A09C8", Offset = "0x11A09C8", VA = "0x11A09C8")]
			public void CalcMatAndUVSamplingRectsIfAllMatTilingSame()
			{
			}

			[Token(Token = "0x6002032")]
			[Address(RVA = "0x11A0BDC", Offset = "0x11A0BDC", VA = "0x11A0BDC")]
			public bool AllTexturesAreSameForMerge(MB_TexSet other, bool considerNonTextureProperties, TextureBlender resultMaterialTextureBlender)
			{
				return default(bool);
			}

			[Token(Token = "0x6002033")]
			[Address(RVA = "0x11A04C8", Offset = "0x11A04C8", VA = "0x11A04C8")]
			internal string GetDescription()
			{
				return null;
			}

			[Token(Token = "0x6002034")]
			[Address(RVA = "0x11ACCD8", Offset = "0x11ACCD8", VA = "0x11ACCD8")]
			internal string GetMatSubrectDescriptions()
			{
				return null;
			}
		}

		[Token(Token = "0x20005C1")]
		public class CombineTexturesIntoAtlasesCoroutineResult
		{
			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool success;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool isFinished;

			[Token(Token = "0x6002035")]
			[Address(RVA = "0x1199C08", Offset = "0x1199C08", VA = "0x1199C08")]
			public CombineTexturesIntoAtlasesCoroutineResult()
			{
			}
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715854", Offset = "0x715854")]
		private sealed class <CombineTexturesIntoAtlasesCoroutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombineTexturesIntoAtlasesCoroutineResult coroutineResult;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxTimePerFrame;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x17000370")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002039")]
				[Address(RVA = "0x11A5840", Offset = "0x11A5840", VA = "0x11A5840", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000371")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600203B")]
				[Address(RVA = "0x11A58A8", Offset = "0x11A58A8", VA = "0x11A58A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002036")]
			[Address(RVA = "0x1199D9C", Offset = "0x1199D9C", VA = "0x1199D9C")]
			[DebuggerHidden]
			public <CombineTexturesIntoAtlasesCoroutine>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6002037")]
			[Address(RVA = "0x11A54A8", Offset = "0x11A54A8", VA = "0x11A54A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002038")]
			[Address(RVA = "0x11A54AC", Offset = "0x11A54AC", VA = "0x11A54AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600203A")]
			[Address(RVA = "0x11A5848", Offset = "0x11A5848", VA = "0x11A5848", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715864", Offset = "0x715864")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x600203C")]
			[Address(RVA = "0x119AB24", Offset = "0x119AB24", VA = "0x119AB24")]
			public <>c__DisplayClass62_0()
			{
			}
		}

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715874", Offset = "0x715874")]
		private sealed class <>c__DisplayClass62_1
		{
			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass62_0 CS$<>8__locals1;

			[Token(Token = "0x600203D")]
			[Address(RVA = "0x119AB2C", Offset = "0x119AB2C", VA = "0x119AB2C")]
			public <>c__DisplayClass62_1()
			{
			}

			[Token(Token = "0x600203E")]
			[Address(RVA = "0x11A5080", Offset = "0x11A5080", VA = "0x11A5080")]
			internal bool <_CollectPropertyNames>b__0(ShaderTextureProperty x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715884", Offset = "0x715884")]
		private sealed class <_CombineTexturesIntoAtlases>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x17000372")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002043")]
				[Address(RVA = "0x11A6B9C", Offset = "0x11A6B9C", VA = "0x11A6B9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000373")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002045")]
				[Address(RVA = "0x11A6C04", Offset = "0x11A6C04", VA = "0x11A6C04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600203F")]
			[Address(RVA = "0x119AB34", Offset = "0x119AB34", VA = "0x119AB34")]
			[DebuggerHidden]
			public <_CombineTexturesIntoAtlases>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6002040")]
			[Address(RVA = "0x11A6528", Offset = "0x11A6528", VA = "0x11A6528", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002041")]
			[Address(RVA = "0x11A66B8", Offset = "0x11A66B8", VA = "0x11A66B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002042")]
			[Address(RVA = "0x11A6544", Offset = "0x11A6544", VA = "0x11A6544")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002044")]
			[Address(RVA = "0x11A6BA4", Offset = "0x11A6BA4", VA = "0x11A6BA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x715894", Offset = "0x715894")]
		private sealed class <__CombineTexturesIntoAtlases>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Material resultMaterial;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private List<MB_TexSet> <distinctMaterialTextures>5__2;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool[] <allTexturesAreNullAndSameColor>5__3;

			[Token(Token = "0x17000374")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002049")]
				[Address(RVA = "0x11A72F0", Offset = "0x11A72F0", VA = "0x11A72F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000375")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600204B")]
				[Address(RVA = "0x11A7358", Offset = "0x11A7358", VA = "0x11A7358", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002046")]
			[Address(RVA = "0x119AC20", Offset = "0x119AC20", VA = "0x119AC20")]
			[DebuggerHidden]
			public <__CombineTexturesIntoAtlases>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002047")]
			[Address(RVA = "0x11A6C0C", Offset = "0x11A6C0C", VA = "0x11A6C0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002048")]
			[Address(RVA = "0x11A6C10", Offset = "0x11A6C10", VA = "0x11A6C10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600204A")]
			[Address(RVA = "0x11A72F8", Offset = "0x11A72F8", VA = "0x11A72F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7158A4", Offset = "0x7158A4")]
		private sealed class <>c__DisplayClass65_0
		{
			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB_TexSet setOfTexs;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x600204C")]
			[Address(RVA = "0x11A5120", Offset = "0x11A5120", VA = "0x11A5120")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x600204D")]
			[Address(RVA = "0x11A5128", Offset = "0x11A5128", VA = "0x11A5128")]
			internal bool <__Step1_CollectDistinctMatTexturesAndUsedObjects>b__0(MB_TexSet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7158B4", Offset = "0x7158B4")]
		private sealed class <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GameObject> allObjsToMesh;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<GameObject> usedObjsToMesh;

			[Token(Token = "0x17000376")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002051")]
				[Address(RVA = "0x11A9D34", Offset = "0x11A9D34", VA = "0x11A9D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000377")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002053")]
				[Address(RVA = "0x11A9D9C", Offset = "0x11A9D9C", VA = "0x11A9D9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600204E")]
			[Address(RVA = "0x119AD04", Offset = "0x119AD04", VA = "0x119AD04")]
			[DebuggerHidden]
			public <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x600204F")]
			[Address(RVA = "0x11A8764", Offset = "0x11A8764", VA = "0x11A8764", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002050")]
			[Address(RVA = "0x11A8768", Offset = "0x11A8768", VA = "0x11A8768", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002052")]
			[Address(RVA = "0x11A9D3C", Offset = "0x11A9D3C", VA = "0x11A9D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7158C4", Offset = "0x7158C4")]
		private sealed class <__Step2_CalculateIdealSizesForTexturesInAtlasAndPadding>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x17000378")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002057")]
				[Address(RVA = "0x11AB4EC", Offset = "0x11AB4EC", VA = "0x11AB4EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000379")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002059")]
				[Address(RVA = "0x11AB554", Offset = "0x11AB554", VA = "0x11AB554", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002054")]
			[Address(RVA = "0x119ADC8", Offset = "0x119ADC8", VA = "0x119ADC8")]
			[DebuggerHidden]
			public <__Step2_CalculateIdealSizesForTexturesInAtlasAndPadding>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6002055")]
			[Address(RVA = "0x11A9DA4", Offset = "0x11A9DA4", VA = "0x11A9DA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002056")]
			[Address(RVA = "0x11A9DA8", Offset = "0x11A9DA8", VA = "0x11A9DA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002058")]
			[Address(RVA = "0x11AB4F4", Offset = "0x11AB4F4", VA = "0x11AB4F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7158D4", Offset = "0x7158D4")]
		private sealed class <__Step3_BuildAndSaveAtlasesAndStoreResults>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material resultMaterial;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int _padding;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <numAtlases>5__3;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private StringBuilder <report>5__4;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Texture2D[] <atlases>5__5;

			[Token(Token = "0x1700037A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600205D")]
				[Address(RVA = "0x11ACC68", Offset = "0x11ACC68", VA = "0x11ACC68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600205F")]
				[Address(RVA = "0x11ACCD0", Offset = "0x11ACCD0", VA = "0x11ACCD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600205A")]
			[Address(RVA = "0x119AEAC", Offset = "0x119AEAC", VA = "0x119AEAC")]
			[DebuggerHidden]
			public <__Step3_BuildAndSaveAtlasesAndStoreResults>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x600205B")]
			[Address(RVA = "0x11AB55C", Offset = "0x11AB55C", VA = "0x11AB55C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600205C")]
			[Address(RVA = "0x11AB560", Offset = "0x11AB560", VA = "0x11AB560", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600205E")]
			[Address(RVA = "0x11ACC70", Offset = "0x11ACC70", VA = "0x11ACC70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7158E4", Offset = "0x7158E4")]
		private sealed class <__CreateAtlasesMBTexturePacker>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture2D[] atlases;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Material resultMaterial;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int numAtlases;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int _padding;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Rect[] <uvRects>5__2;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <atlasSizeX>5__3;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private int <atlasSizeY>5__4;

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <propIdx>5__5;

			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Color[][] <atlasPixels>5__6;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private bool <isNormalMap>5__7;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private int <texSetIdx>5__8;

			[Token(Token = "0x1700037C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002063")]
				[Address(RVA = "0x11A86F4", Offset = "0x11A86F4", VA = "0x11A86F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002065")]
				[Address(RVA = "0x11A875C", Offset = "0x11A875C", VA = "0x11A875C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002060")]
			[Address(RVA = "0x119AFA0", Offset = "0x119AFA0", VA = "0x119AFA0")]
			[DebuggerHidden]
			public <__CreateAtlasesMBTexturePacker>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6002061")]
			[Address(RVA = "0x11A7360", Offset = "0x11A7360", VA = "0x11A7360", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002062")]
			[Address(RVA = "0x11A7364", Offset = "0x11A7364", VA = "0x11A7364", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002064")]
			[Address(RVA = "0x11A86FC", Offset = "0x11A86FC", VA = "0x11A86FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7158F4", Offset = "0x7158F4")]
		private sealed class <CopyScaledAndTiledToAtlas>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MeshBakerMaterialTexture source;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int targX;

			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int targY;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int targW;

			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int targH;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public DRect srcSamplingRect;

			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MB_TexSet sourceMaterial;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public ShaderTextureProperty shaderPropertyName;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Color[][] atlasPixels;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private int <w>5__2;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private int <h>5__3;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <i>5__4;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private int <j>5__5;

			[Token(Token = "0x1700037E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002069")]
				[Address(RVA = "0x11A64B8", Offset = "0x11A64B8", VA = "0x11A64B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600206B")]
				[Address(RVA = "0x11A6520", Offset = "0x11A6520", VA = "0x11A6520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002066")]
			[Address(RVA = "0x11A1864", Offset = "0x11A1864", VA = "0x11A1864")]
			[DebuggerHidden]
			public <CopyScaledAndTiledToAtlas>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6002067")]
			[Address(RVA = "0x11A58B0", Offset = "0x11A58B0", VA = "0x11A58B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002068")]
			[Address(RVA = "0x11A58B4", Offset = "0x11A58B4", VA = "0x11A58B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600206A")]
			[Address(RVA = "0x11A64C0", Offset = "0x11A64C0", VA = "0x11A64C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DO_INTEGRITY_CHECKS;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ShaderTextureProperty[] shaderTexPropertyNames;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int _atlasPadding;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int _maxAtlasSize;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected bool _resizePowerOfTwoTextures;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		protected bool _fixOutOfBoundsUVs;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected int _maxTilingBakeSize;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _saveAtlasesAsAssets;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected MB2_PackingAlgorithmEnum _packingAlgorithm;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool _meshBakerTexturePackerForcePowerOfTwo;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected List<ShaderTextureProperty> _customShaderPropNames;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected bool _normalizeTexelDensity;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		protected bool _considerNonTextureProperties;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected TextureBlender resultMaterialTextureBlender;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected TextureBlender[] textureBlenders;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected List<Texture2D> _temporaryTextures;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool _RunCorutineWithoutPauseIsRunning;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int __step2_CalculateIdealSizesForTexturesInAtlasAndPadding;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rect[] __createAtlasesMBTexturePacker;

		[Token(Token = "0x17000257")]
		public MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0x1199740", Offset = "0x1199740", VA = "0x1199740")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0x1199748", Offset = "0x1199748", VA = "0x1199748")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public int atlasPadding
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0x1199750", Offset = "0x1199750", VA = "0x1199750")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0x1199758", Offset = "0x1199758", VA = "0x1199758")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public int maxAtlasSize
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0x1199760", Offset = "0x1199760", VA = "0x1199760")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0x1199768", Offset = "0x1199768", VA = "0x1199768")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public bool resizePowerOfTwoTextures
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0x1199770", Offset = "0x1199770", VA = "0x1199770")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0x1199778", Offset = "0x1199778", VA = "0x1199778")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public bool fixOutOfBoundsUVs
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0x1199784", Offset = "0x1199784", VA = "0x1199784")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0x119978C", Offset = "0x119978C", VA = "0x119978C")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public int maxTilingBakeSize
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x1199798", Offset = "0x1199798", VA = "0x1199798")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x11997A0", Offset = "0x11997A0", VA = "0x11997A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public bool saveAtlasesAsAssets
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x11997A8", Offset = "0x11997A8", VA = "0x11997A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0x11997B0", Offset = "0x11997B0", VA = "0x11997B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025E")]
		public MB2_PackingAlgorithmEnum packingAlgorithm
		{
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0x11997BC", Offset = "0x11997BC", VA = "0x11997BC")]
			get
			{
				return default(MB2_PackingAlgorithmEnum);
			}
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0x11997C4", Offset = "0x11997C4", VA = "0x11997C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700025F")]
		public bool meshBakerTexturePackerForcePowerOfTwo
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x11997CC", Offset = "0x11997CC", VA = "0x11997CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x11997D4", Offset = "0x11997D4", VA = "0x11997D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public List<ShaderTextureProperty> customShaderPropNames
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x11997E0", Offset = "0x11997E0", VA = "0x11997E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x11997E8", Offset = "0x11997E8", VA = "0x11997E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public bool considerNonTextureProperties
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x11997F0", Offset = "0x11997F0", VA = "0x11997F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0x11997F8", Offset = "0x11997F8", VA = "0x11997F8")]
			set
			{
			}
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x1199804", Offset = "0x1199804", VA = "0x1199804")]
		public static void RunCorutineWithoutPause(IEnumerator cor, int recursionDepth)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x1199B08", Offset = "0x1199B08", VA = "0x1199B08")]
		public bool CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x1199CD0", Offset = "0x1199CD0", VA = "0x1199CD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721C3C", Offset = "0x721C3C")]
		public IEnumerator CombineTexturesIntoAtlasesCoroutine(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] CombineTexturesIntoAtlasesCoroutineResult coroutineResult, float maxTimePerFrame = 0.01f)
		{
			return null;
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x1199DC8", Offset = "0x1199DC8", VA = "0x1199DC8")]
		private static bool InterfaceFilter(Type typeObj, object criteriaObj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x1199E1C", Offset = "0x1199E1C", VA = "0x1199E1C")]
		private void _LoadTextureBlenders()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x119A29C", Offset = "0x119A29C", VA = "0x119A29C")]
		private bool _CollectPropertyNames(Material resultMaterial, List<ShaderTextureProperty> texPropertyNames)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x1199C18", Offset = "0x1199C18", VA = "0x1199C18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721CA0", Offset = "0x721CA0")]
		private IEnumerator _CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x119AB60", Offset = "0x119AB60", VA = "0x119AB60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721D04", Offset = "0x721D04")]
		private IEnumerator __CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<ShaderTextureProperty> texPropertyNames, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x119AC4C", Offset = "0x119AC4C", VA = "0x119AC4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721D68", Offset = "0x721D68")]
		private IEnumerator __Step1_CollectDistinctMatTexturesAndUsedObjects(CombineTexturesIntoAtlasesCoroutineResult result, List<GameObject> allObjsToMesh, List<Material> allowedMaterialsFilter, List<ShaderTextureProperty> texPropertyNames, MB2_EditorMethodsInterface textureEditorMethods, List<MB_TexSet> distinctMaterialTextures, List<GameObject> usedObjsToMesh)
		{
			return null;
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x119AD30", Offset = "0x119AD30", VA = "0x119AD30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721DCC", Offset = "0x721DCC")]
		private IEnumerator __Step2_CalculateIdealSizesForTexturesInAtlasAndPadding(CombineTexturesIntoAtlasesCoroutineResult result, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x119ADF4", Offset = "0x119ADF4", VA = "0x119ADF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721E30", Offset = "0x721E30")]
		private IEnumerator __Step3_BuildAndSaveAtlasesAndStoreResults(CombineTexturesIntoAtlasesCoroutineResult result, ProgressUpdateDelegate progressInfo, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, int _padding, MB2_EditorMethodsInterface textureEditorMethods, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x119AED8", Offset = "0x119AED8", VA = "0x119AED8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721E94", Offset = "0x721E94")]
		private IEnumerator __CreateAtlasesMBTexturePacker(ProgressUpdateDelegate progressInfo, int numAtlases, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, Material resultMaterial, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, int _padding)
		{
			return null;
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x119AFCC", Offset = "0x119AFCC", VA = "0x119AFCC")]
		private Rect[] __CreateAtlasesMBTexturePackerFast(ProgressUpdateDelegate progressInfo, int numAtlases, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, Material resultMaterial, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, int _padding)
		{
			return null;
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x119C814", Offset = "0x119C814", VA = "0x119C814")]
		private Rect[] __CreateAtlasesUnityTexturePacker(ProgressUpdateDelegate progressInfo, int numAtlases, List<MB_TexSet> distinctMaterialTextures, List<ShaderTextureProperty> texPropertyNames, bool[] allTexturesAreNullAndSameColor, Material resultMaterial, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, int _padding)
		{
			return null;
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x119E8F0", Offset = "0x119E8F0", VA = "0x119E8F0")]
		private void _addWatermark(Texture2D[] texToPack)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x119EB70", Offset = "0x119EB70", VA = "0x119EB70")]
		private Texture2D _addWatermark(Texture2D texToPack)
		{
			return null;
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x119E8F4", Offset = "0x119E8F4", VA = "0x119E8F4")]
		private Texture2D _copyTexturesIntoAtlas(Texture2D[] texToPack, int padding, Rect[] rs, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x119ECFC", Offset = "0x119ECFC", VA = "0x119ECFC")]
		private bool IsPowerOfTwo(int x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x119ED0C", Offset = "0x119ED0C", VA = "0x119ED0C")]
		private void MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects(List<MB_TexSet> distinctMaterialTextures, bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x11A1334", Offset = "0x11A1334", VA = "0x11A1334")]
		private Vector2 GetAdjustedForScaleAndOffset2Dimensions(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x119E09C", Offset = "0x119E09C", VA = "0x119E09C")]
		public Texture2D GetAdjustedForScaleAndOffset2(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale)
		{
			return null;
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x11A16AC", Offset = "0x11A16AC", VA = "0x11A16AC")]
		internal static DRect GetSourceSamplingRect(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x119E544", Offset = "0x119E544", VA = "0x119E544")]
		private Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
		{
			return null;
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x11A1778", Offset = "0x11A1778", VA = "0x11A1778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x721EF8", Offset = "0x721EF8")]
		public IEnumerator CopyScaledAndTiledToAtlas(MeshBakerMaterialTexture source, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName, DRect srcSamplingRect, int targX, int targY, int targW, int targH, bool _fixOutOfBoundsUVs, int maxSize, Color[][] atlasPixels, int atlasWidth, bool isNormalMap, [Optional] ProgressUpdateDelegate progressInfo)
		{
			return null;
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x119DDD4", Offset = "0x119DDD4", VA = "0x119DDD4")]
		public Texture2D _createTemporaryTexture(int w, int h, TextureFormat texFormat, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x11A16F8", Offset = "0x11A16F8", VA = "0x11A16F8")]
		internal Texture2D _createTextureCopy(Texture2D t)
		{
			return null;
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x119E4AC", Offset = "0x119E4AC", VA = "0x119E4AC")]
		private Texture2D _resizeTexture(Texture2D t, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x119C63C", Offset = "0x119C63C", VA = "0x119C63C")]
		private void _destroyTemporaryTextures()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x11A195C", Offset = "0x11A195C", VA = "0x11A195C")]
		public void SuggestTreatment(List<GameObject> objsToMesh, Material[] resultMaterials, List<ShaderTextureProperty> _customShaderPropNames)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x11A3B7C", Offset = "0x11A3B7C", VA = "0x11A3B7C")]
		private TextureBlender FindMatchingTextureBlender(string shaderName)
		{
			return null;
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x11A3CB0", Offset = "0x11A3CB0", VA = "0x11A3CB0")]
		private void AdjustNonTextureProperties(Material mat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, bool considerTintColor, MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x119DF44", Offset = "0x119DF44", VA = "0x119DF44")]
		public static Color GetColorIfNoTexture(ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x11A453C", Offset = "0x11A453C", VA = "0x11A453C")]
		private Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
		{
			return default(Color32);
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x11A4678", Offset = "0x11A4678", VA = "0x11A4678")]
		private float GetSubmeshArea(Mesh m, int submeshIdx)
		{
			return default(float);
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x11A3A9C", Offset = "0x11A3A9C", VA = "0x11A3A9C")]
		private string PrintList(List<GameObject> gos)
		{
			return null;
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x11A48C4", Offset = "0x11A48C4", VA = "0x11A48C4")]
		public MB3_TextureCombiner()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public struct DRect
	{
		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double width;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double height;

		[Token(Token = "0x17000262")]
		public Vector2 min
		{
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0x79C688", Offset = "0x79C688", VA = "0x79C688")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000263")]
		public Vector2 max
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x79C6C0", Offset = "0x79C6C0", VA = "0x79C6C0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000264")]
		public Vector2 size
		{
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0x79C6C8", Offset = "0x79C6C8", VA = "0x79C6C8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x79C634", Offset = "0x79C634", VA = "0x79C634")]
		public DRect(Rect r)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x79C63C", Offset = "0x79C63C", VA = "0x79C63C")]
		public DRect(Vector2 o, Vector2 s)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x79C658", Offset = "0x79C658", VA = "0x79C658")]
		public DRect(float xx, float yy, float w, float h)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x79C674", Offset = "0x79C674", VA = "0x79C674")]
		public DRect(double xx, double yy, double w, double h)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x79C680", Offset = "0x79C680", VA = "0x79C680")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x79C700", Offset = "0x79C700", VA = "0x79C700", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xABFEC0", Offset = "0xABFEC0", VA = "0xABFEC0")]
		public static bool operator ==(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xABFF5C", Offset = "0xABFF5C", VA = "0xABFF5C")]
		public static bool operator !=(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x79C708", Offset = "0x79C708", VA = "0x79C708", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x79C710", Offset = "0x79C710", VA = "0x79C710")]
		public bool Encloses(DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x79C718", Offset = "0x79C718", VA = "0x79C718", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200043A")]
	public class MB3_UVTransformUtility
	{
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x11AD07C", Offset = "0x11AD07C", VA = "0x11AD07C")]
		public static void Test()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x11AD3F8", Offset = "0x11AD3F8", VA = "0x11AD3F8")]
		public static float TransformX(DRect r, double x)
		{
			return default(float);
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x11A1100", Offset = "0x11A1100", VA = "0x11A1100")]
		public static DRect CombineTransforms(ref DRect r1, ref DRect r2)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x11AD408", Offset = "0x11AD408", VA = "0x11AD408")]
		public static Rect CombineTransforms(ref Rect r1, ref Rect r2)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x11A0FC8", Offset = "0x11A0FC8", VA = "0x11A0FC8")]
		public static void Canonicalize(ref DRect r, double minX, double minY)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x11A115C", Offset = "0x11A115C", VA = "0x11A115C")]
		public static void Canonicalize(ref Rect r, float minX, float minY)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x11AD37C", Offset = "0x11AD37C", VA = "0x11AD37C")]
		public static DRect InverseTransform(ref DRect t)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x11A0F24", Offset = "0x11A0F24", VA = "0x11A0F24")]
		public static DRect GetEncapsulatingRect(ref DRect uvRect1, ref DRect uvRect2)
		{
			return default(DRect);
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x11AD520", Offset = "0x11AD520", VA = "0x11AD520")]
		public static bool RectContains(ref DRect bigRect, ref DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x11AD5C0", Offset = "0x11AD5C0", VA = "0x11AD5C0")]
		public static bool RectContains(ref Rect bigRect, ref Rect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x11AD3A4", Offset = "0x11AD3A4", VA = "0x11AD3A4")]
		internal static Vector2 TransformPoint(ref DRect r, Vector2 p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x11AD750", Offset = "0x11AD750", VA = "0x11AD750")]
		public MB3_UVTransformUtility()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class MB_Utility
	{
		[Token(Token = "0x20005CD")]
		public struct MeshAnalysisResult
		{
			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rect uvRect;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasOutOfBoundsUVs;

			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool hasOverlappingSubmeshVerts;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool hasOverlappingSubmeshTris;

			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float submeshArea;
		}

		[Token(Token = "0x20005CE")]
		private class MB_Triangle
		{
			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int submeshIdx;

			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int[] vs;

			[Token(Token = "0x600206C")]
			[Address(RVA = "0x11AF5F8", Offset = "0x11AF5F8", VA = "0x11AF5F8")]
			public bool isSame(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600206D")]
			[Address(RVA = "0x11AF724", Offset = "0x11AF724", VA = "0x11AF724")]
			public bool sharesVerts(MB_Triangle obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600206E")]
			[Address(RVA = "0x11AF4EC", Offset = "0x11AF4EC", VA = "0x11AF4EC")]
			public void Initialize(int[] ts, int idx, int sIdx)
			{
			}

			[Token(Token = "0x600206F")]
			[Address(RVA = "0x11AF48C", Offset = "0x11AF48C", VA = "0x11AF48C")]
			public MB_Triangle()
			{
			}
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x11A1890", Offset = "0x11A1890", VA = "0x11A1890")]
		public static Texture2D createTextureCopy(Texture2D source)
		{
			return null;
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x11AEDD4", Offset = "0x11AEDD4", VA = "0x11AEDD4")]
		public static bool ArrayBIsSubsetOfA(object[] a, object[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x11A2FA4", Offset = "0x11A2FA4", VA = "0x11A2FA4")]
		public static Material[] GetGOMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x11A34E8", Offset = "0x11A34E8", VA = "0x11A34E8")]
		public static Mesh GetMesh(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x11AEE78", Offset = "0x11AEE78", VA = "0x11AEE78")]
		public static void SetMesh(GameObject go, Mesh m)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x11AEFD0", Offset = "0x11AEFD0", VA = "0x11AEFD0")]
		public static Renderer GetRenderer(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x11AF0F4", Offset = "0x11AF0F4", VA = "0x11AF0F4")]
		public static void DisableRendererInSource(GameObject go)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x11AF234", Offset = "0x11AF234", VA = "0x11AF234")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref Rect uvBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x11A3990", Offset = "0x11A3990", VA = "0x11A3990")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1, int uvChannel = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x11AF27C", Offset = "0x11AF27C", VA = "0x11AF27C")]
		public static bool hasOutOfBoundsUVs(Vector2[] uvs, Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x119DE94", Offset = "0x119DE94", VA = "0x119DE94")]
		public static void setSolidColor(Texture2D t, Color c)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x119EB78", Offset = "0x119EB78", VA = "0x119EB78")]
		public static Texture2D resampleTexture(Texture2D source, int newWidth, int newHeight)
		{
			return null;
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x11A99F4", Offset = "0x11A99F4", VA = "0x11A99F4")]
		public static bool AreAllSharedMaterialsDistinct(Material[] sharedMaterials)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x11A36A4", Offset = "0x11A36A4", VA = "0x11A36A4")]
		public static int doSubmeshesShareVertsOrTris(Mesh m, ref MeshAnalysisResult mar)
		{
			return default(int);
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x11AF854", Offset = "0x11AF854", VA = "0x11AF854")]
		public static bool GetBounds(GameObject go, out Bounds b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x119C770", Offset = "0x119C770", VA = "0x119C770")]
		public static void Destroy(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x11AFAB4", Offset = "0x11AFAB4", VA = "0x11AFAB4")]
		public MB_Utility()
		{
		}
	}
}
