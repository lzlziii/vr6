using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using System.Xml;
using Systems.AssetVariant;
using Systems.Scenes;
using Achievements;
using Analytics;
using Analytics.Events;
using AreaManagement;
using Combos;
using CurrencySystem;
using Customization;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using Dreamteck.Splines;
using FNVR2.Input.UI;
using FNVR2.Networking;
using FNVR2.Networking.Game;
using FNVR2.Networking.Photon;
using FNVR2.Networking.Player;
using FNVR2.Networking.Session;
using FNVR2.Networking.Spawner;
using FNVR2.Stats;
using FNVR2.Systems;
using FNVR2.UI;
using Fusion;
using Fusion.CodeGen;
using Fusion.Internal;
using Fusion.Photon.Realtime;
using Fusion.Sockets;
using Fusion.StatsInternal;
using Game;
using Game.Structure;
using Game.Structure.Arcade;
using GameEvents;
using GameEvents.EventTypes;
using GetSocialSdk.Capture.Scripts.Internal.Gif;
using GetSocialSdk.Scripts.Internal.Util;
using Halfbrick.Audio;
using Halfbrick.Common;
using Hands;
using I2.Loc;
using Il2CppDummyDll;
using Interfaces;
using Locomotion;
using Missions;
using Mochineko.SimpleReorderableList.Samples;
using Multiplayer.Entities;
using NetworkEffects.Analytics;
using NetworkEffects.Schema;
using Networking.Entities;
using Networking.Entities.Projectiles;
using Newtonsoft.Json;
using Newtonsoft.Json.Serialization;
using ObjectPooling;
using Oculus.Platform;
using Oculus.Platform.Models;
using Pad;
using Particles;
using Photon.Realtime;
using Photon.Voice.Fusion;
using Photon.Voice.Unity;
using Pipeline.Runtime.Shader;
using Platform;
using Playables;
using PlayerData;
using PlayerData.DataObjects;
using ShopSystem;
using Spawning;
using TMPro;
using Tutorial;
using Unity.Profiling;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.UI.Extensions;
using UnityEngine.VFX;
using UnityEngine.Video;
using UnityEngine.XR;
using Utility;
using Waves;
using XftWeapon;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class DisableAfterTime : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A348", Offset = "0xB5A348")]
	private sealed class <LateCall>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DisableAfterTime <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000007")]
			[Address(RVA = "0xF96228", Offset = "0xF96228", VA = "0xF96228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000009")]
			[Address(RVA = "0xF96270", Offset = "0xF96270", VA = "0xF96270", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000004")]
		[Address(RVA = "0xF960E8", Offset = "0xF960E8", VA = "0xF960E8")]
		[DebuggerHidden]
		public <LateCall>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000005")]
		[Address(RVA = "0xF96114", Offset = "0xF96114", VA = "0xF96114", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000006")]
		[Address(RVA = "0xF96118", Offset = "0xF96118", VA = "0xF96118", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000008")]
		[Address(RVA = "0xF96230", Offset = "0xF96230", VA = "0xF96230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sec;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_onlyOnce;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x10A49E8", Offset = "0x10A49E8", VA = "0x10A49E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x10A4A18", Offset = "0x10A4A18", VA = "0x10A4A18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB78F24", Offset = "0xB78F24")]
	private IEnumerator LateCall(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x10A4AA0", Offset = "0x10A4AA0", VA = "0x10A4AA0")]
	public DisableAfterTime()
	{
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5A358", Offset = "0xB5A358")]
public class Door : SceneLODPortal
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public OcclusionPortal m_occlusionPortal;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60D20", Offset = "0xB60D20")]
	public bool m_locked;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool m_stopLODSWhenLocked;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private UnityEvent m_onOpen;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private UnityEvent m_onOpenImmediately;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private UnityEvent m_onClose;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private UnityEvent m_onCloseImmediately;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private UnityEvent m_onUnlock;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool m_opened;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x10F2330", Offset = "0x10F2330", VA = "0x10F2330")]
	public void Unlock()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x10F2354", Offset = "0x10F2354", VA = "0x10F2354")]
	public void Open(bool immediately = false)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x10F246C", Offset = "0x10F246C", VA = "0x10F246C")]
	public void Close(bool immediately = false)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x10F2540", Offset = "0x10F2540", VA = "0x10F2540", Slot = "7")]
	protected override void OnEnter(Collider other)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x10F258C", Offset = "0x10F258C", VA = "0x10F258C", Slot = "8")]
	protected override void OnExit(Collider other)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x10F25E0", Offset = "0x10F25E0", VA = "0x10F25E0")]
	public Door()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5A3B8", Offset = "0xB5A3B8")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x2000006")]
	public enum UpdateMode
	{
		[Token(Token = "0x4000033")]
		Normal,
		[Token(Token = "0x4000034")]
		AnimatePhysics,
		[Token(Token = "0x4000035")]
		UnscaledTime,
		[Token(Token = "0x4000036")]
		Default
	}

	[Token(Token = "0x2000007")]
	public enum FreezeAxis
	{
		[Token(Token = "0x4000038")]
		None,
		[Token(Token = "0x4000039")]
		X,
		[Token(Token = "0x400003A")]
		Y,
		[Token(Token = "0x400003B")]
		Z
	}

	[Token(Token = "0x2000008")]
	private class Particle
	{
		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x400003D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x400003E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x400003F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Friction;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_Radius;

		[Token(Token = "0x4000044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_BoneLength;

		[Token(Token = "0x4000045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_isCollide;

		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 m_Position;

		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x6000028")]
		[Address(RVA = "0xF962AC", Offset = "0xF962AC", VA = "0xF962AC")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60DA8", Offset = "0xB60DA8")]
	public Transform m_Root;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60DE0", Offset = "0xB60DE0")]
	public float m_UpdateRate;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60E18", Offset = "0xB60E18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB60E18", Offset = "0xB60E18")]
	public float m_Damping;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60E6C", Offset = "0xB60E6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB60E6C", Offset = "0xB60E6C")]
	public float m_Elasticity;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60EC0", Offset = "0xB60EC0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB60EC0", Offset = "0xB60EC0")]
	public float m_Stiffness;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60F14", Offset = "0xB60F14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB60F14", Offset = "0xB60F14")]
	public float m_Inert;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60F68", Offset = "0xB60F68")]
	public float m_Friction;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve m_FrictionDistrib;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60FA0", Offset = "0xB60FA0")]
	public float m_Radius;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB60FD8", Offset = "0xB60FD8")]
	public float m_EndLength;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61010", Offset = "0xB61010")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61048", Offset = "0xB61048")]
	public Vector3 m_Gravity;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61080", Offset = "0xB61080")]
	public Vector3 m_Force;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB610B8", Offset = "0xB610B8")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB610F0", Offset = "0xB610F0")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61128", Offset = "0xB61128")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61160", Offset = "0xB61160")]
	public bool m_DistantDisable;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_DistanceToObject;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float m_BoneTotalLength;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float m_ObjectScale;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float m_Time;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float m_Weight;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool m_DistantDisabled;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<Particle> m_Particles;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x10F2DD4", Offset = "0x10F2DD4", VA = "0x10F2DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x10F2F0C", Offset = "0x10F2F0C", VA = "0x10F2F0C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x10F2F60", Offset = "0x10F2F60", VA = "0x10F2F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x10F2F90", Offset = "0x10F2F90", VA = "0x10F2F90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x10F2F3C", Offset = "0x10F2F3C", VA = "0x10F2F3C")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x10F3008", Offset = "0x10F3008", VA = "0x10F3008")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x10F361C", Offset = "0x10F361C", VA = "0x10F361C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x10F3620", Offset = "0x10F3620", VA = "0x10F3620")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x10F3624", Offset = "0x10F3624", VA = "0x10F3624")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x10F3700", Offset = "0x10F3700", VA = "0x10F3700")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x10F38B8", Offset = "0x10F38B8", VA = "0x10F38B8")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x10F3914", Offset = "0x10F3914", VA = "0x10F3914")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x10F31C0", Offset = "0x10F31C0", VA = "0x10F31C0")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x10F2DD8", Offset = "0x10F2DD8", VA = "0x10F2DD8")]
	public void SetupParticles()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x10F4724", Offset = "0x10F4724", VA = "0x10F4724")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x10F4C10", Offset = "0x10F4C10", VA = "0x10F4C10")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x10F3394", Offset = "0x10F3394", VA = "0x10F3394")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x10F34A8", Offset = "0x10F34A8", VA = "0x10F34A8")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x10F391C", Offset = "0x10F391C", VA = "0x10F391C")]
	private void UpdateParticles1(float timeVar)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x10F3B1C", Offset = "0x10F3B1C", VA = "0x10F3B1C")]
	private void UpdateParticles2(float timeVar)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x10F40CC", Offset = "0x10F40CC", VA = "0x10F40CC")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x10F4F38", Offset = "0x10F4F38", VA = "0x10F4F38")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x10F44E0", Offset = "0x10F44E0", VA = "0x10F44E0")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x10F4F6C", Offset = "0x10F4F6C", VA = "0x10F4F6C")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5A3F0", Offset = "0xB5A3F0")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61198", Offset = "0xB61198")]
	public float m_Radius;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB611D0", Offset = "0xB611D0")]
	public float m_Height;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x10F5084", Offset = "0x10F5084", VA = "0x10F5084")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x10F50CC", Offset = "0x10F50CC", VA = "0x10F50CC", Slot = "4")]
	public override bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x10F52D8", Offset = "0x10F52D8", VA = "0x10F52D8")]
	private static bool OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x10F53A0", Offset = "0x10F53A0", VA = "0x10F53A0")]
	private static bool InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x10F545C", Offset = "0x10F545C", VA = "0x10F545C")]
	private static bool OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x10F568C", Offset = "0x10F568C", VA = "0x10F568C")]
	private static bool InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x10F58A4", Offset = "0x10F58A4", VA = "0x10F58A4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x10F5A40", Offset = "0x10F5A40", VA = "0x10F5A40")]
	public DynamicBoneCollider()
	{
	}
}
[Token(Token = "0x200000A")]
public class DynamicBoneColliderBase : MonoBehaviour
{
	[Token(Token = "0x200000B")]
	public enum Direction
	{
		[Token(Token = "0x4000051")]
		X,
		[Token(Token = "0x4000052")]
		Y,
		[Token(Token = "0x4000053")]
		Z
	}

	[Token(Token = "0x200000C")]
	public enum Bound
	{
		[Token(Token = "0x4000055")]
		Outside,
		[Token(Token = "0x4000056")]
		Inside
	}

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61208", Offset = "0xB61208")]
	public Direction m_Direction;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61240", Offset = "0xB61240")]
	public Vector3 m_Center;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61278", Offset = "0xB61278")]
	public Bound m_Bound;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x10F5AC0", Offset = "0x10F5AC0", VA = "0x10F5AC0", Slot = "4")]
	public virtual bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x10F5A84", Offset = "0x10F5A84", VA = "0x10F5A84")]
	public DynamicBoneColliderBase()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5A428", Offset = "0xB5A428")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x6000033")]
	[Address(RVA = "0x10F5AC8", Offset = "0x10F5AC8", VA = "0x10F5AC8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x10F5ACC", Offset = "0x10F5ACC", VA = "0x10F5ACC", Slot = "4")]
	public override bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x10F5C2C", Offset = "0x10F5C2C", VA = "0x10F5C2C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x10F5D4C", Offset = "0x10F5D4C", VA = "0x10F5D4C")]
	public DynamicBonePlaneCollider()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5A460", Offset = "0xB5A460")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x119C840", Offset = "0x119C840", VA = "0x119C840")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x119C84C", Offset = "0x119C84C", VA = "0x119C84C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x119C970", Offset = "0x119C970", VA = "0x119C970")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x200000F")]
public class CFX_Demo : MonoBehaviour
{
	[Token(Token = "0x2000010")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A4C0", Offset = "0xB5A4C0")]
	private sealed class <RandomSpawnsCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000045")]
			[Address(RVA = "0xF8DED4", Offset = "0xF8DED4", VA = "0xF8DED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000047")]
			[Address(RVA = "0xF8DF1C", Offset = "0xF8DF1C", VA = "0xF8DF1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0xF8DCB8", Offset = "0xF8DCB8", VA = "0xF8DCB8")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0xF8DCE4", Offset = "0xF8DCE4", VA = "0xF8DCE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0xF8DCE8", Offset = "0xF8DCE8", VA = "0xF8DCE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000046")]
		[Address(RVA = "0xF8DEDC", Offset = "0xF8DEDC", VA = "0xF8DEDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool orderedSpawns;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float step;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float order;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material groundMat;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material waterMat;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] ParticleExamples;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, float> ParticlesYOffsetD;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIndex;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string randomSpawnsDelay;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool randomSpawns;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool slowMo;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x119C980", Offset = "0x119C980", VA = "0x119C980")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x119CADC", Offset = "0x119CADC", VA = "0x119CADC")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x119CD6C", Offset = "0x119CD6C", VA = "0x119CD6C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x119D994", Offset = "0x119D994", VA = "0x119D994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB78FD4", Offset = "0xB78FD4")]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x119DA0C", Offset = "0x119DA0C", VA = "0x119DA0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x119D658", Offset = "0x119D658", VA = "0x119D658")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x119D7F8", Offset = "0x119D7F8", VA = "0x119D7F8")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x119DA68", Offset = "0x119DA68", VA = "0x119DA68")]
	public CFX_Demo()
	{
	}
}
[Token(Token = "0x2000011")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000012")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A4D0", Offset = "0xB5A4D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x6000057")]
		[Address(RVA = "0xF8DF88", Offset = "0xF8DF88", VA = "0xF8DF88")]
		public <>c()
		{
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0xF8DF90", Offset = "0xF8DF90", VA = "0xF8DF90")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000013")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A4E0", Offset = "0xB5A4E0")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005C")]
			[Address(RVA = "0xF8E1A8", Offset = "0xF8E1A8", VA = "0xF8E1A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005E")]
			[Address(RVA = "0xF8E1F0", Offset = "0xF8E1F0", VA = "0xF8E1F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0xF8DFE4", Offset = "0xF8DFE4", VA = "0xF8DFE4")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600005A")]
		[Address(RVA = "0xF8E010", Offset = "0xF8E010", VA = "0xF8E010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0xF8E014", Offset = "0xF8E014", VA = "0xF8E014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0xF8E1B0", Offset = "0xF8E1B0", VA = "0xF8E1B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB612B0", Offset = "0xB612B0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB612B0", Offset = "0xB612B0")]
	public Image slowMoBtn;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB612E8", Offset = "0xB612E8")]
	public Text EffectLabel;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x119DF3C", Offset = "0x119DF3C", VA = "0x119DF3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x119E310", Offset = "0x119E310", VA = "0x119E310")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x119E954", Offset = "0x119E954", VA = "0x119E954")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x119EA34", Offset = "0x119EA34", VA = "0x119EA34")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x119EB38", Offset = "0x119EB38", VA = "0x119EB38")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x119EC04", Offset = "0x119EC04", VA = "0x119EC04")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x119EC08", Offset = "0x119EC08", VA = "0x119EC08")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x119E1D8", Offset = "0x119E1D8", VA = "0x119E1D8")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x119E76C", Offset = "0x119E76C", VA = "0x119E76C")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x119EC0C", Offset = "0x119EC0C", VA = "0x119EC0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB79084", Offset = "0xB79084")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x119E598", Offset = "0x119E598", VA = "0x119E598")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x119E5D0", Offset = "0x119E5D0", VA = "0x119E5D0")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x119E604", Offset = "0x119E604", VA = "0x119E604")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x119EC84", Offset = "0x119EC84", VA = "0x119EC84")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x2000014")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x119ED08", Offset = "0x119ED08", VA = "0x119ED08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x119ED94", Offset = "0x119ED94", VA = "0x119ED94")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x2000015")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x119EDAC", Offset = "0x119EDAC", VA = "0x119EDAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x119EE60", Offset = "0x119EE60", VA = "0x119EE60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x119EF40", Offset = "0x119EF40", VA = "0x119EF40")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x2000016")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x119EF8C", Offset = "0x119EF8C", VA = "0x119EF8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x119F0B0", Offset = "0x119F0B0", VA = "0x119F0B0")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x2000017")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x119F110", Offset = "0x119F110", VA = "0x119F110")]
	private void Start()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x119F1BC", Offset = "0x119F1BC", VA = "0x119F1BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x119F238", Offset = "0x119F238", VA = "0x119F238")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x2000018")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAsChildren;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool onlyGetInactiveObjects;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool instantiateIfNeeded;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allObjectsLoaded;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x17000007")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x600006D")]
		[Address(RVA = "0x11A0264", Offset = "0x11A0264", VA = "0x11A0264")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x119F284", Offset = "0x119F284", VA = "0x119F284")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x119FA6C", Offset = "0x119FA6C", VA = "0x119FA6C")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x119FDF4", Offset = "0x119FDF4", VA = "0x119FDF4")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x119FAD8", Offset = "0x119FAD8", VA = "0x119FAD8")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x119FE50", Offset = "0x119FE50", VA = "0x119FE50")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x119F8FC", Offset = "0x119F8FC", VA = "0x119F8FC")]
	private void increasePoolCursor(int uniqueId)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x11A02BC", Offset = "0x11A02BC", VA = "0x11A02BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x11A03C8", Offset = "0x11A03C8", VA = "0x11A03C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x11A0454", Offset = "0x11A0454", VA = "0x11A0454")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x2000019")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x13D6848", Offset = "0x13D6848", VA = "0x13D6848")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x13D69AC", Offset = "0x13D69AC", VA = "0x13D69AC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x13D6D48", Offset = "0x13D6D48", VA = "0x13D6D48")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x13D6EEC", Offset = "0x13D6EEC", VA = "0x13D6EEC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x13D6F1C", Offset = "0x13D6F1C", VA = "0x13D6F1C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200001A")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xFF8CF4", Offset = "0xFF8CF4", VA = "0xFF8CF4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xFF8D7C", Offset = "0xFF8D7C", VA = "0xFF8D7C")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xFF8EF0", Offset = "0xFF8EF0", VA = "0xFF8EF0")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200001B")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000008")]
	public bool IsVisible
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x12640F4", Offset = "0x12640F4", VA = "0x12640F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x12640FC", Offset = "0x12640FC", VA = "0x12640FC")]
		set
		{
		}
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1264238", Offset = "0x1264238", VA = "0x1264238")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1264400", Offset = "0x1264400", VA = "0x1264400")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1264408", Offset = "0x1264408", VA = "0x1264408")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200001C")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200001D")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000087")]
		[Address(RVA = "0xFC7358", Offset = "0xFC7358", VA = "0xFC7358")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200001E")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB61308", Offset = "0xB61308")]
		public float FakeLatencyMax;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB61320", Offset = "0xB61320")]
		public float FakeLatencyMin;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB61338", Offset = "0xB61338")]
		public float LatencyWeight;

		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB61350", Offset = "0xB61350")]
		public int MaxSamples;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000088")]
		[Address(RVA = "0xFC7360", Offset = "0xFC7360", VA = "0xFC7360")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000089")]
		[Address(RVA = "0xFC7498", Offset = "0xFC7498", VA = "0xFC7498")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x10098FC", Offset = "0x10098FC", VA = "0x10098FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1009A54", Offset = "0x1009A54", VA = "0x1009A54")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1009E38", Offset = "0x1009E38", VA = "0x1009E38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1009D84", Offset = "0x1009D84", VA = "0x1009D84")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x100A168", Offset = "0x100A168", VA = "0x100A168")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x100A450", Offset = "0x100A450", VA = "0x100A450")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200001F")]
public class P2PManager
{
	[Token(Token = "0x2000020")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40000AD")]
		Update = 1
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x13D7EE8", Offset = "0x13D7EE8", VA = "0x13D7EE8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x13D7FC8", Offset = "0x13D7FC8", VA = "0x13D7FC8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x13D80AC", Offset = "0x13D80AC", VA = "0x13D80AC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x13D812C", Offset = "0x13D812C", VA = "0x13D812C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x13D829C", Offset = "0x13D829C", VA = "0x13D829C")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x13D84DC", Offset = "0x13D84DC", VA = "0x13D84DC")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x13D88CC", Offset = "0x13D88CC", VA = "0x13D88CC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x13D8B88", Offset = "0x13D8B88", VA = "0x13D8B88")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x13D86A8", Offset = "0x13D86A8", VA = "0x13D86A8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x13D8ABC", Offset = "0x13D8ABC", VA = "0x13D8ABC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x13D878C", Offset = "0x13D878C", VA = "0x13D878C")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x13D8DC0", Offset = "0x13D8DC0", VA = "0x13D8DC0")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x13D86F0", Offset = "0x13D86F0", VA = "0x13D86F0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x13D8B00", Offset = "0x13D8B00", VA = "0x13D8B00")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x13D8830", Offset = "0x13D8830", VA = "0x13D8830")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x13D8E48", Offset = "0x13D8E48", VA = "0x13D8E48")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000021")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xF5A568", Offset = "0xF5A568", VA = "0xF5A568", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xF5A5AC", Offset = "0xF5A5AC", VA = "0xF5A5AC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xF5A5E4", Offset = "0xF5A5E4", VA = "0xF5A5E4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xF5A60C", Offset = "0xF5A60C", VA = "0xF5A60C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xF5A7A8", Offset = "0xF5A7A8", VA = "0xF5A7A8")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xF5A828", Offset = "0xF5A828", VA = "0xF5A828")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xF5A87C", Offset = "0xF5A87C", VA = "0xF5A87C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000022")]
public class RemotePlayer
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x13BD56C", Offset = "0x13BD56C", VA = "0x13BD56C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000023")]
public class RoomManager
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x13BF0B4", Offset = "0x13BF0B4", VA = "0x13BF0B4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x13BF1B8", Offset = "0x13BF1B8", VA = "0x13BF1B8")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x13BF338", Offset = "0x13BF338", VA = "0x13BF338")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x13BF474", Offset = "0x13BF474", VA = "0x13BF474")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x13BF548", Offset = "0x13BF548", VA = "0x13BF548")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x13BF684", Offset = "0x13BF684", VA = "0x13BF684")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x13BF368", Offset = "0x13BF368", VA = "0x13BF368")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x13BF70C", Offset = "0x13BF70C", VA = "0x13BF70C")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x13BFEB8", Offset = "0x13BFEB8", VA = "0x13BFEB8")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x13C020C", Offset = "0x13C020C", VA = "0x13C020C")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x13BFA40", Offset = "0x13BFA40", VA = "0x13BFA40")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x2000024")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000025")]
	public enum State
	{
		[Token(Token = "0x40000E5")]
		INITIALIZING,
		[Token(Token = "0x40000E6")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40000E7")]
		CREATING_A_ROOM,
		[Token(Token = "0x40000E8")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40000E9")]
		JOINING_A_ROOM,
		[Token(Token = "0x40000EA")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40000EB")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40000EC")]
		SHUTDOWN
	}

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000009")]
	public static State CurrentState
	{
		[Token(Token = "0x60000B9")]
		[Address(RVA = "0xF13408", Offset = "0xF13408", VA = "0xF13408")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700000A")]
	public static ulong MyID
	{
		[Token(Token = "0x60000BA")]
		[Address(RVA = "0xF13478", Offset = "0xF13478", VA = "0xF13478")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700000B")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0xF13558", Offset = "0xF13558", VA = "0xF13558")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xF11564", Offset = "0xF11564", VA = "0xF11564", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xF11908", Offset = "0xF11908", VA = "0xF11908", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xF12078", Offset = "0xF12078", VA = "0xF12078")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xF12398", Offset = "0xF12398", VA = "0xF12398", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xF1239C", Offset = "0xF1239C", VA = "0xF1239C")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xF124BC", Offset = "0xF124BC", VA = "0xF124BC")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xF12C10", Offset = "0xF12C10", VA = "0xF12C10")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xF13004", Offset = "0xF13004", VA = "0xF13004")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xF13214", Offset = "0xF13214", VA = "0xF13214")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xF1339C", Offset = "0xF1339C", VA = "0xF1339C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xF11D04", Offset = "0xF11D04", VA = "0xF11D04")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xF12220", Offset = "0xF12220", VA = "0xF12220")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xF11DB8", Offset = "0xF11DB8", VA = "0xF11DB8")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xF13680", Offset = "0xF13680", VA = "0xF13680")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xF137FC", Offset = "0xF137FC", VA = "0xF137FC")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xF138E0", Offset = "0xF138E0", VA = "0xF138E0")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xF13A3C", Offset = "0xF13A3C", VA = "0xF13A3C")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xF13B20", Offset = "0xF13B20", VA = "0xF13B20")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xF122D8", Offset = "0xF122D8", VA = "0xF122D8")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xF14068", Offset = "0xF14068", VA = "0xF14068")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xF140FC", Offset = "0xF140FC", VA = "0xF140FC")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xF13E54", Offset = "0xF13E54", VA = "0xF13E54")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xF14308", Offset = "0xF14308", VA = "0xF14308")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xF114E0", Offset = "0xF114E0", VA = "0xF114E0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB79134", Offset = "0xB79134")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xF1444C", Offset = "0xF1444C", VA = "0xF1444C")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xF14528", Offset = "0xF14528", VA = "0xF14528")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000026")]
public class VoipManager
{
	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1235400", Offset = "0x1235400", VA = "0x1235400")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x12354E0", Offset = "0x12354E0", VA = "0x12354E0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x12355C4", Offset = "0x12355C4", VA = "0x12355C4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1235644", Offset = "0x1235644", VA = "0x1235644")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x12357B4", Offset = "0x12357B4", VA = "0x12357B4")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000027")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1263DB0", Offset = "0x1263DB0", VA = "0x1263DB0")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1263E38", Offset = "0x1263E38", VA = "0x1263E38")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1263FAC", Offset = "0x1263FAC", VA = "0x1263FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1264010", Offset = "0x1264010", VA = "0x1264010")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1263E74", Offset = "0x1263E74", VA = "0x1263E74")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x12640D4", Offset = "0x12640D4", VA = "0x12640D4")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x12640EC", Offset = "0x12640EC", VA = "0x12640EC")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000028")]
public class AvatarLayer
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x144E7E4", Offset = "0x144E7E4", VA = "0x144E7E4")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000029")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x13D8ED0", Offset = "0x13D8ED0", VA = "0x13D8ED0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200002A")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200002B")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x600010D")]
		[Address(RVA = "0xFB88C4", Offset = "0xFB88C4", VA = "0xFB88C4")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200002C")]
	public enum HandType
	{
		[Token(Token = "0x400014E")]
		Right,
		[Token(Token = "0x400014F")]
		Left,
		[Token(Token = "0x4000150")]
		Max
	}

	[Token(Token = "0x200002D")]
	public enum HandJoint
	{
		[Token(Token = "0x4000152")]
		HandBase,
		[Token(Token = "0x4000153")]
		IndexBase,
		[Token(Token = "0x4000154")]
		IndexTip,
		[Token(Token = "0x4000155")]
		ThumbBase,
		[Token(Token = "0x4000156")]
		ThumbTip,
		[Token(Token = "0x4000157")]
		Max
	}

	[Token(Token = "0x200002E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A4F0", Offset = "0xB5A4F0")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700000C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000111")]
			[Address(RVA = "0xFB8874", Offset = "0xFB8874", VA = "0xFB8874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000113")]
			[Address(RVA = "0xFB88BC", Offset = "0xFB88BC", VA = "0xFB88BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xFB8698", Offset = "0xFB8698", VA = "0xFB8698")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0xFB86C4", Offset = "0xFB86C4", VA = "0xFB86C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0xFB86C8", Offset = "0xFB86C8", VA = "0xFB86C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xFB887C", Offset = "0xFB887C", VA = "0xFB887C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB61368", Offset = "0xB61368")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB613A0", Offset = "0xB613A0")]
	public bool EnableBody;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB613D8", Offset = "0xB613D8")]
	public bool RecordPackets;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB61410", Offset = "0xB61410")]
	public bool StartWithControllers;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB61448", Offset = "0xB61448")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61448", Offset = "0xB61448")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB614B8", Offset = "0xB614B8")]
	private bool CombineMeshes;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB614F0", Offset = "0xB614F0")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB61528", Offset = "0xB61528")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB61560", Offset = "0xB61560")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61598", Offset = "0xB61598")]
	public bool EnableLaughter;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400012E")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000130")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000131")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000132")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000133")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000134")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x184B658", Offset = "0x184B658", VA = "0x184B658")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x184BAF8", Offset = "0x184BAF8", VA = "0x184BAF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x184BB8C", Offset = "0x184BB8C", VA = "0x184BB8C")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x184BBF4", Offset = "0x184BBF4", VA = "0x184BBF4")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x184BD24", Offset = "0x184BD24", VA = "0x184BD24")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x184BE04", Offset = "0x184BE04", VA = "0x184BE04")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x184BEE0", Offset = "0x184BEE0", VA = "0x184BEE0")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x184C0C4", Offset = "0x184C0C4", VA = "0x184C0C4")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x184C1A0", Offset = "0x184C1A0", VA = "0x184C1A0")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x184C218", Offset = "0x184C218", VA = "0x184C218")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x184C300", Offset = "0x184C300", VA = "0x184C300")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x184C38C", Offset = "0x184C38C", VA = "0x184C38C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x184C414", Offset = "0x184C414", VA = "0x184C414")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x184C42C", Offset = "0x184C42C", VA = "0x184C42C")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000E7")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x184C8DC", Offset = "0x184C8DC", VA = "0x184C8DC")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x184CC5C", Offset = "0x184CC5C", VA = "0x184CC5C")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x184CE48", Offset = "0x184CE48", VA = "0x184CE48")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x184D094", Offset = "0x184D094", VA = "0x184D094")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x184D188", Offset = "0x184D188", VA = "0x184D188")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x184D7F4", Offset = "0x184D7F4", VA = "0x184D7F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x184DB2C", Offset = "0x184DB2C", VA = "0x184DB2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x184E564", Offset = "0x184E564", VA = "0x184E564")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x184E5B8", Offset = "0x184E5B8", VA = "0x184E5B8")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x184D444", Offset = "0x184D444", VA = "0x184D444")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x184D4E8", Offset = "0x184D4E8", VA = "0x184D4E8")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x184E5E8", Offset = "0x184E5E8", VA = "0x184E5E8")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x184DF04", Offset = "0x184DF04", VA = "0x184DF04")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x184E85C", Offset = "0x184E85C", VA = "0x184E85C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x184E64C", Offset = "0x184E64C", VA = "0x184E64C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x184EB30", Offset = "0x184EB30", VA = "0x184EB30")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x184EFAC", Offset = "0x184EFAC", VA = "0x184EFAC")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x184F3B0", Offset = "0x184F3B0", VA = "0x184F3B0")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x184F504", Offset = "0x184F504", VA = "0x184F504")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x184F6E8", Offset = "0x184F6E8", VA = "0x184F6E8")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x184E0E4", Offset = "0x184E0E4", VA = "0x184E0E4")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x184F7BC", Offset = "0x184F7BC", VA = "0x184F7BC")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x184DF14", Offset = "0x184DF14", VA = "0x184DF14")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x184F8AC", Offset = "0x184F8AC", VA = "0x184F8AC")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x184FF60", Offset = "0x184FF60", VA = "0x184FF60")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1850444", Offset = "0x1850444", VA = "0x1850444")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x185046C", Offset = "0x185046C", VA = "0x185046C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1850494", Offset = "0x1850494", VA = "0x1850494")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x184E3F0", Offset = "0x184E3F0", VA = "0x184E3F0")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x184F97C", Offset = "0x184F97C", VA = "0x184F97C")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x18508C4", Offset = "0x18508C4", VA = "0x18508C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB79194", Offset = "0xB79194")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x185093C", Offset = "0x185093C", VA = "0x185093C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1850784", Offset = "0x1850784", VA = "0x1850784")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1850A00", Offset = "0x1850A00", VA = "0x1850A00")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1850AE8", Offset = "0x1850AE8", VA = "0x1850AE8")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x18504D0", Offset = "0x18504D0", VA = "0x18504D0")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1850BD0", Offset = "0x1850BD0", VA = "0x1850BD0")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1850DCC", Offset = "0x1850DCC", VA = "0x1850DCC")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1850E9C", Offset = "0x1850E9C", VA = "0x1850E9C")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1852154", Offset = "0x1852154", VA = "0x1852154")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1851D28", Offset = "0x1851D28", VA = "0x1851D28")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1851AAC", Offset = "0x1851AAC", VA = "0x1851AAC")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1851B94", Offset = "0x1851B94", VA = "0x1851B94")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x18523E4", Offset = "0x18523E4", VA = "0x18523E4")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000031")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000160")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x18529AC", Offset = "0x18529AC", VA = "0x18529AC")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000032")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1852C28", Offset = "0x1852C28", VA = "0x1852C28")]
	private void Update()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1853088", Offset = "0x1853088", VA = "0x1853088")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000033")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x184F240", Offset = "0x184F240", VA = "0x184F240")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x18531B8", Offset = "0x18531B8", VA = "0x18531B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x18532E8", Offset = "0x18532E8", VA = "0x18532E8")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1853348", Offset = "0x1853348", VA = "0x1853348")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1852D58", Offset = "0x1852D58", VA = "0x1852D58")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1853350", Offset = "0x1853350", VA = "0x1853350")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x18533B0", Offset = "0x18533B0", VA = "0x18533B0")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1853B64", Offset = "0x1853B64", VA = "0x1853B64")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x18530E8", Offset = "0x18530E8", VA = "0x18530E8")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000035")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000036")]
	public enum PacketMode
	{
		[Token(Token = "0x4000174")]
		SDK,
		[Token(Token = "0x4000175")]
		Unity
	}

	[Token(Token = "0x2000037")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x600012E")]
		[Address(RVA = "0xFB8944", Offset = "0xFB8944", VA = "0xFB8944")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000038")]
	public struct PoseFrame
	{
		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x600012F")]
		[Address(RVA = "0xFB8A20", Offset = "0xFB8A20", VA = "0xFB8A20")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x185549C", Offset = "0x185549C", VA = "0x185549C")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000129")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x18554AC", Offset = "0x18554AC", VA = "0x18554AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x184D58C", Offset = "0x184D58C", VA = "0x184D58C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1855534", Offset = "0x1855534", VA = "0x1855534")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x185553C", Offset = "0x185553C", VA = "0x185553C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000039")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x185554C", Offset = "0x185554C", VA = "0x185554C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x18556BC", Offset = "0x18556BC", VA = "0x18556BC")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200003A")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1855724", Offset = "0x1855724", VA = "0x1855724")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1855888", Offset = "0x1855888", VA = "0x1855888")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1855C24", Offset = "0x1855C24", VA = "0x1855C24")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1855E48", Offset = "0x1855E48", VA = "0x1855E48", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1855E74", Offset = "0x1855E74", VA = "0x1855E74")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200003B")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200003C")]
	public enum TextureType
	{
		[Token(Token = "0x40001AB")]
		DiffuseTextures,
		[Token(Token = "0x40001AC")]
		NormalMaps,
		[Token(Token = "0x40001AD")]
		RoughnessMaps,
		[Token(Token = "0x40001AE")]
		Count
	}

	[Token(Token = "0x200003D")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200003E")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200003F")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000040")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000146")]
		[Address(RVA = "0xFB9464", Offset = "0xFB9464", VA = "0xFB9464")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A500", Offset = "0xB5A500")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014A")]
			[Address(RVA = "0xFB9414", Offset = "0xFB9414", VA = "0xFB9414", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014C")]
			[Address(RVA = "0xFB945C", Offset = "0xFB945C", VA = "0xFB945C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0xFB8D24", Offset = "0xFB8D24", VA = "0xFB8D24")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0xFB8D50", Offset = "0xFB8D50", VA = "0xFB8D50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0xFB8D54", Offset = "0xFB8D54", VA = "0xFB8D54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0xFB941C", Offset = "0xFB941C", VA = "0xFB941C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40001A6")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40001A7")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40001A8")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40001A9")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1855EC0", Offset = "0x1855EC0", VA = "0x1855EC0")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x18560A0", Offset = "0x18560A0", VA = "0x18560A0")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x18560E0", Offset = "0x18560E0", VA = "0x18560E0")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1856874", Offset = "0x1856874", VA = "0x1856874")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x18568E0", Offset = "0x18568E0", VA = "0x18568E0")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x185617C", Offset = "0x185617C", VA = "0x185617C")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1856934", Offset = "0x1856934", VA = "0x1856934")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x18565D0", Offset = "0x18565D0", VA = "0x18565D0")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1856A24", Offset = "0x1856A24", VA = "0x1856A24")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1856CC8", Offset = "0x1856CC8", VA = "0x1856CC8")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1856DF0", Offset = "0x1856DF0", VA = "0x1856DF0")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1856E28", Offset = "0x1856E28", VA = "0x1856E28")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x18567E0", Offset = "0x18567E0", VA = "0x18567E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB79244", Offset = "0xB79244")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1857D90", Offset = "0x1857D90", VA = "0x1857D90")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000042")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000010")]
	public float Duration
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x13D121C", Offset = "0x13D121C", VA = "0x13D121C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000011")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600014E")]
		[Address(RVA = "0x13D1290", Offset = "0x13D1290", VA = "0x13D1290")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x13D1320", Offset = "0x13D1320", VA = "0x13D1320")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x13D144C", Offset = "0x13D144C", VA = "0x13D144C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x13D1618", Offset = "0x13D1618", VA = "0x13D1618")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x13D1784", Offset = "0x13D1784", VA = "0x13D1784")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x13D185C", Offset = "0x13D185C", VA = "0x13D185C")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x13D1A8C", Offset = "0x13D1A8C", VA = "0x13D1A8C")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x13D1D68", Offset = "0x13D1D68", VA = "0x13D1D68")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000043")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1453150", Offset = "0x1453150", VA = "0x1453150")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1453264", Offset = "0x1453264", VA = "0x1453264")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1453410", Offset = "0x1453410", VA = "0x1453410")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x14532D4", Offset = "0x14532D4", VA = "0x14532D4")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1453368", Offset = "0x1453368", VA = "0x1453368")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000044")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1452D50", Offset = "0x1452D50", VA = "0x1452D50")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x14530F4", Offset = "0x14530F4", VA = "0x14530F4")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1452EF0", Offset = "0x1452EF0", VA = "0x1452EF0")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1452F68", Offset = "0x1452F68", VA = "0x1452F68")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1453004", Offset = "0x1453004", VA = "0x1453004")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000045")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40001D0")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40001D1")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x13D1F90", Offset = "0x13D1F90", VA = "0x13D1F90")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x13D2018", Offset = "0x13D2018", VA = "0x13D2018", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x13D2034", Offset = "0x13D2034", VA = "0x13D2034")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x13D21D8", Offset = "0x13D21D8", VA = "0x13D21D8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x13D23C8", Offset = "0x13D23C8", VA = "0x13D23C8")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000046")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x13D2464", Offset = "0x13D2464", VA = "0x13D2464")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x13D2548", Offset = "0x13D2548", VA = "0x13D2548")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x13D29B4", Offset = "0x13D29B4", VA = "0x13D29B4")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x13D2D74", Offset = "0x13D2D74", VA = "0x13D2D74")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x13D2E80", Offset = "0x13D2E80", VA = "0x13D2E80")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000047")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40001DA")]
	Body = 1,
	[Token(Token = "0x40001DB")]
	Hands = 2,
	[Token(Token = "0x40001DC")]
	Base = 4,
	[Token(Token = "0x40001DD")]
	BodyTilt = 0x10,
	[Token(Token = "0x40001DE")]
	Expressive = 0x20,
	[Token(Token = "0x40001DF")]
	All = -1
}
[Token(Token = "0x2000048")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40001E1")]
	AvatarSpecification,
	[Token(Token = "0x40001E2")]
	AssetLoaded,
	[Token(Token = "0x40001E3")]
	Count
}
[Token(Token = "0x2000049")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200004B")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40001E9")]
	Mesh,
	[Token(Token = "0x40001EA")]
	Texture,
	[Token(Token = "0x40001EB")]
	Pose,
	[Token(Token = "0x40001EC")]
	Material,
	[Token(Token = "0x40001ED")]
	CombinedMesh,
	[Token(Token = "0x40001EE")]
	PBSMaterial,
	[Token(Token = "0x40001EF")]
	FailedLoad,
	[Token(Token = "0x40001F0")]
	Count
}
[Token(Token = "0x200004C")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200004D")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200004E")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200004F")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000050")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000051")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000225")]
	RGB24,
	[Token(Token = "0x4000226")]
	DXT1,
	[Token(Token = "0x4000227")]
	DXT5,
	[Token(Token = "0x4000228")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000229")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400022A")]
	Count
}
[Token(Token = "0x2000052")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000053")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000232")]
	SkinnedMeshRender,
	[Token(Token = "0x4000233")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000234")]
	ProjectorRender,
	[Token(Token = "0x4000235")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000236")]
	Count
}
[Token(Token = "0x2000054")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000238")]
	Unknown,
	[Token(Token = "0x4000239")]
	Default,
	[Token(Token = "0x400023A")]
	Verbose,
	[Token(Token = "0x400023B")]
	Debug,
	[Token(Token = "0x400023C")]
	Info,
	[Token(Token = "0x400023D")]
	Warn,
	[Token(Token = "0x400023E")]
	Error,
	[Token(Token = "0x400023F")]
	Fatal,
	[Token(Token = "0x4000240")]
	Silent
}
[Token(Token = "0x2000055")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000056")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000245")]
	One = 1,
	[Token(Token = "0x4000246")]
	Two = 2,
	[Token(Token = "0x4000247")]
	Three = 4,
	[Token(Token = "0x4000248")]
	Joystick = 8
}
[Token(Token = "0x2000057")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400024A")]
	One = 1,
	[Token(Token = "0x400024B")]
	Two = 2,
	[Token(Token = "0x400024C")]
	Joystick = 4,
	[Token(Token = "0x400024D")]
	ThumbRest = 8,
	[Token(Token = "0x400024E")]
	Index = 0x10,
	[Token(Token = "0x400024F")]
	Pointing = 0x40,
	[Token(Token = "0x4000250")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000058")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000059")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200005A")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005C")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200005F")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000060")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000270")]
	Add,
	[Token(Token = "0x4000271")]
	Multiply,
	[Token(Token = "0x4000272")]
	Count
}
[Token(Token = "0x2000061")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000274")]
	Color,
	[Token(Token = "0x4000275")]
	Texture,
	[Token(Token = "0x4000276")]
	TextureSingleChannel,
	[Token(Token = "0x4000277")]
	Parallax,
	[Token(Token = "0x4000278")]
	Count
}
[Token(Token = "0x2000062")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x400027A")]
	None,
	[Token(Token = "0x400027B")]
	Positional,
	[Token(Token = "0x400027C")]
	ViewReflection,
	[Token(Token = "0x400027D")]
	Fresnel,
	[Token(Token = "0x400027E")]
	Pulse,
	[Token(Token = "0x400027F")]
	Count
}
[Token(Token = "0x2000063")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000281")]
	Touch,
	[Token(Token = "0x4000282")]
	Malibu,
	[Token(Token = "0x4000283")]
	Go,
	[Token(Token = "0x4000284")]
	Quest,
	[Token(Token = "0x4000285")]
	Count
}
[Token(Token = "0x2000064")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000287")]
	Lowest = 1,
	[Token(Token = "0x4000288")]
	Medium = 3,
	[Token(Token = "0x4000289")]
	Highest = 5
}
[Token(Token = "0x2000065")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400028B")]
	Unknown = -1,
	[Token(Token = "0x400028C")]
	One,
	[Token(Token = "0x400028D")]
	Two
}
[Token(Token = "0x2000066")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xF899BC", Offset = "0xF899BC", VA = "0xF899BC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xF899EC", Offset = "0xF899EC", VA = "0xF899EC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xF89C08", Offset = "0xF89C08", VA = "0xF89C08", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000067")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xF89CEC", Offset = "0xF89CEC", VA = "0xF89CEC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xF89D1C", Offset = "0xF89D1C", VA = "0xF89D1C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xF8A0B8", Offset = "0xF8A0B8", VA = "0xF8A0B8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000068")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xF88F4C", Offset = "0xF88F4C", VA = "0xF88F4C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xF88F7C", Offset = "0xF88F7C", VA = "0xF88F7C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xF8920C", Offset = "0xF8920C", VA = "0xF8920C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000069")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xF8A220", Offset = "0xF8A220", VA = "0xF8A220")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xF8A250", Offset = "0xF8A250", VA = "0xF8A250", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xF8A440", Offset = "0xF8A440", VA = "0xF8A440", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006A")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x1850DD4", Offset = "0x1850DD4", VA = "0x1850DD4")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200006B")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200006C")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40002C2")]
	FirstPerson = 1,
	[Token(Token = "0x40002C3")]
	ThirdPerson = 2,
	[Token(Token = "0x40002C4")]
	SelfOccluding = 4
}
[Token(Token = "0x200006D")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200006F")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000070")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000071")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40002DA")]
	Default,
	[Token(Token = "0x40002DB")]
	GripSphere,
	[Token(Token = "0x40002DC")]
	GripCube,
	[Token(Token = "0x40002DD")]
	Count
}
[Token(Token = "0x2000072")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40002DF")]
	Body,
	[Token(Token = "0x40002E0")]
	Clothing,
	[Token(Token = "0x40002E1")]
	Eyewear,
	[Token(Token = "0x40002E2")]
	Hair,
	[Token(Token = "0x40002E3")]
	Beard,
	[Token(Token = "0x40002E4")]
	Count
}
[Token(Token = "0x2000073")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000074")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000075")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000076")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000077")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40002EE")]
	AvatarHead,
	[Token(Token = "0x40002EF")]
	AvatarHand,
	[Token(Token = "0x40002F0")]
	Object,
	[Token(Token = "0x40002F1")]
	ObjectStatic,
	[Token(Token = "0x40002F2")]
	Count
}
[Token(Token = "0x2000078")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000079")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200007A")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x200007B")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200007C")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40002FE")]
	Point,
	[Token(Token = "0x40002FF")]
	Direction,
	[Token(Token = "0x4000300")]
	Spot,
	[Token(Token = "0x4000301")]
	Count
}
[Token(Token = "0x200007D")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200007E")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200007F")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000080")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000081")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000317")]
	None = 0u,
	[Token(Token = "0x4000318")]
	GazeTarget = 1u,
	[Token(Token = "0x4000319")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000082")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000083")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000084")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000085")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000086")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000087")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000088")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xFB946C", Offset = "0xFB946C", VA = "0xFB946C")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400032E")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000012")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x13D2740", Offset = "0x13D2740", VA = "0x13D2740")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x13D2E90", Offset = "0x13D2E90", VA = "0x13D2E90")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x13D31E0", Offset = "0x13D31E0", VA = "0x13D31E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x13D3250", Offset = "0x13D3250", VA = "0x13D3250")]
	private void Update()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x13D3C30", Offset = "0x13D3C30", VA = "0x13D3C30")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x13D3C84", Offset = "0x13D3C84", VA = "0x13D3C84")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x13D3CD8", Offset = "0x13D3CD8", VA = "0x13D3CD8")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x13D3D3C", Offset = "0x13D3D3C", VA = "0x13D3D3C")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x13D3DA0", Offset = "0x13D3DA0", VA = "0x13D3DA0")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x13D3A30", Offset = "0x13D3A30", VA = "0x13D3A30")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x13D3E7C", Offset = "0x13D3E7C", VA = "0x13D3E7C")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x13D3FD0", Offset = "0x13D3FD0", VA = "0x13D3FD0")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x13D2938", Offset = "0x13D2938", VA = "0x13D2938")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x13D40C4", Offset = "0x13D40C4", VA = "0x13D40C4")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x13D3194", Offset = "0x13D3194", VA = "0x13D3194")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x13D41A4", Offset = "0x13D41A4", VA = "0x13D41A4")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x13D4224", Offset = "0x13D4224", VA = "0x13D4224")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000089")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000013")]
	public static string AppID
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x13D4164", Offset = "0x13D4164", VA = "0x13D4164")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x13D4394", Offset = "0x13D4394", VA = "0x13D4394")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public static string MobileAppID
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x13D4184", Offset = "0x13D4184", VA = "0x13D4184")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x13D43C4", Offset = "0x13D43C4", VA = "0x13D43C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x13D423C", Offset = "0x13D423C", VA = "0x13D423C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x13D43F4", Offset = "0x13D43F4", VA = "0x13D43F4")]
		set
		{
		}
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x13D4448", Offset = "0x13D4448", VA = "0x13D4448")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200008A")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x13D5FC0", Offset = "0x13D5FC0", VA = "0x13D5FC0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x13D62B4", Offset = "0x13D62B4", VA = "0x13D62B4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x13D614C", Offset = "0x13D614C", VA = "0x13D614C")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x13D64F4", Offset = "0x13D64F4", VA = "0x13D64F4")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x200008B")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x13D6504", Offset = "0x13D6504", VA = "0x13D6504")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x13D6660", Offset = "0x13D6660", VA = "0x13D6660")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x13D6838", Offset = "0x13D6838", VA = "0x13D6838")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200008C")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000345")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000346")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000347")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x13D44B4", Offset = "0x13D44B4", VA = "0x13D44B4")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x13D54EC", Offset = "0x13D54EC", VA = "0x13D54EC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x13D5728", Offset = "0x13D5728", VA = "0x13D5728")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x13D4BEC", Offset = "0x13D4BEC", VA = "0x13D4BEC")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x13D4910", Offset = "0x13D4910", VA = "0x13D4910")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x13D4A74", Offset = "0x13D4A74", VA = "0x13D4A74")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x13D5FB0", Offset = "0x13D5FB0", VA = "0x13D5FB0")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200008D")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200008E")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200008F")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xFB9B68", Offset = "0xFB9B68", VA = "0xFB9B68")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000090")]
	public struct TextureSet
	{
		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xFB9BC4", Offset = "0xFB9BC4", VA = "0xFB9BC4")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A580", Offset = "0xB5A580")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001C1")]
			[Address(RVA = "0xFB9B18", Offset = "0xFB9B18", VA = "0xFB9B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001C3")]
			[Address(RVA = "0xFB9B60", Offset = "0xFB9B60", VA = "0xFB9B60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xFB94E8", Offset = "0xFB94E8", VA = "0xFB94E8")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xFB9514", Offset = "0xFB9514", VA = "0xFB9514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xFB9518", Offset = "0xFB9518", VA = "0xFB9518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xFB9B20", Offset = "0xFB9B20", VA = "0xFB9B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400034B")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400034C")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400034F")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000350")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000351")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000352")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000353")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000354")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000355")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x13D6F60", Offset = "0x13D6F60", VA = "0x13D6F60")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x13D7440", Offset = "0x13D7440", VA = "0x13D7440")]
	public void Update()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x13D7640", Offset = "0x13D7640", VA = "0x13D7640")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x13D768C", Offset = "0x13D768C", VA = "0x13D768C")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x13D75B4", Offset = "0x13D75B4", VA = "0x13D75B4")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x13D7838", Offset = "0x13D7838", VA = "0x13D7838")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x13D7A40", Offset = "0x13D7A40", VA = "0x13D7A40")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x13D7AE4", Offset = "0x13D7AE4", VA = "0x13D7AE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB79394", Offset = "0xB79394")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x13D3E30", Offset = "0x13D3E30", VA = "0x13D3E30")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x13D7B90", Offset = "0x13D7B90", VA = "0x13D7B90")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000092")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x13D7D08", Offset = "0x13D7D08", VA = "0x13D7D08")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x13D7E7C", Offset = "0x13D7E7C", VA = "0x13D7E7C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000093")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000094")]
	public delegate void OnClick();

	[Token(Token = "0x2000095")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000096")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000097")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A590", Offset = "0xB5A590")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xF954C0", Offset = "0xF954C0", VA = "0xF954C0")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xF954C8", Offset = "0xF954C8", VA = "0xF954C8")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000099")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A5A0", Offset = "0xB5A5A0")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xF956EC", Offset = "0xF956EC", VA = "0xF956EC")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xF956F4", Offset = "0xF956F4", VA = "0xF956F4")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200009A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A5B0", Offset = "0xB5A5B0")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xF95940", Offset = "0xF95940", VA = "0xF95940")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xF95948", Offset = "0xF95948", VA = "0xF95948")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200009B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A5C0", Offset = "0xB5A5C0")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xF95CDC", Offset = "0xF95CDC", VA = "0xF95CDC")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xF95CE4", Offset = "0xF95CE4", VA = "0xF95CE4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A5D0", Offset = "0xB5A5D0")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xF95D04", Offset = "0xF95D04", VA = "0xF95D04")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xF95D0C", Offset = "0xF95D0C", VA = "0xF95D0C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000367")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000368")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000369")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x10A12A0", Offset = "0x10A12A0", VA = "0x10A12A0")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x10A17D4", Offset = "0x10A17D4", VA = "0x10A17D4")]
	public void Show()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x10A1B9C", Offset = "0x10A1B9C", VA = "0x10A1B9C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x10A1D58", Offset = "0x10A1D58", VA = "0x10A1D58")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x10A1F98", Offset = "0x10A1F98", VA = "0x10A1F98")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x10A1B8C", Offset = "0x10A1B8C", VA = "0x10A1B8C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x10A22C8", Offset = "0x10A22C8", VA = "0x10A22C8")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x10A25E8", Offset = "0x10A25E8", VA = "0x10A25E8")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x10A29B0", Offset = "0x10A29B0", VA = "0x10A29B0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x10A2AB4", Offset = "0x10A2AB4", VA = "0x10A2AB4")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x10A2C98", Offset = "0x10A2C98", VA = "0x10A2C98")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x10A2D3C", Offset = "0x10A2D3C", VA = "0x10A2D3C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x10A2F2C", Offset = "0x10A2F2C", VA = "0x10A2F2C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x10A3134", Offset = "0x10A3134", VA = "0x10A3134")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x10A3438", Offset = "0x10A3438", VA = "0x10A3438")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x10A3534", Offset = "0x10A3534", VA = "0x10A3534")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x10A35E0", Offset = "0x10A35E0", VA = "0x10A35E0")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200009D")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1C5748C", Offset = "0x1C5748C", VA = "0x1C5748C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1C5753C", Offset = "0x1C5753C", VA = "0x1C5753C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x1C575FC", Offset = "0x1C575FC", VA = "0x1C575FC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1C57638", Offset = "0x1C57638", VA = "0x1C57638")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200009E")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200009F")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000399")]
		On,
		[Token(Token = "0x400039A")]
		Off,
		[Token(Token = "0x400039B")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000018")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x10BA270", Offset = "0x10BA270", VA = "0x10BA270")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x10BA22C", Offset = "0x10BA22C", VA = "0x10BA22C")]
		set
		{
		}
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x10BA278", Offset = "0x10BA278", VA = "0x10BA278")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x10BA2D4", Offset = "0x10BA2D4", VA = "0x10BA2D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x10BA418", Offset = "0x10BA418", VA = "0x10BA418", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x10BA434", Offset = "0x10BA434", VA = "0x10BA434", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x10BA488", Offset = "0x10BA488", VA = "0x10BA488")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x10BA644", Offset = "0x10BA644", VA = "0x10BA644")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x10BA758", Offset = "0x10BA758", VA = "0x10BA758")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x10BA7E8", Offset = "0x10BA7E8", VA = "0x10BA7E8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x10BA8B4", Offset = "0x10BA8B4", VA = "0x10BA8B4")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x10BA968", Offset = "0x10BA968", VA = "0x10BA968")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x10BAA54", Offset = "0x10BAA54", VA = "0x10BAA54")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000A0")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x145BA78", Offset = "0x145BA78", VA = "0x145BA78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x145BC74", Offset = "0x145BC74", VA = "0x145BC74")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x145C054", Offset = "0x145C054", VA = "0x145C054")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x20000A1")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1C4D88C", Offset = "0x1C4D88C", VA = "0x1C4D88C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1C4D9C4", Offset = "0x1C4D9C4", VA = "0x1C4D9C4")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1C4DC20", Offset = "0x1C4DC20", VA = "0x1C4DC20")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x20000A2")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000019")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0x1C4DCC8", Offset = "0x1C4DCC8", VA = "0x1C4DCC8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x1C4D924", Offset = "0x1C4D924", VA = "0x1C4D924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79444", Offset = "0xB79444")]
		add
		{
		}
		[Token(Token = "0x6000209")]
		[Address(RVA = "0x1C4DC28", Offset = "0x1C4DC28", VA = "0x1C4DC28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79454", Offset = "0xB79454")]
		remove
		{
		}
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1C4DCD4", Offset = "0x1C4DCD4", VA = "0x1C4DCD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1C4DE48", Offset = "0x1C4DE48", VA = "0x1C4DE48")]
	private void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1C4DF98", Offset = "0x1C4DF98", VA = "0x1C4DF98")]
	private void Recentered()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1C4DFA0", Offset = "0x1C4DFA0", VA = "0x1C4DFA0")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x20000A3")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40003A9")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40003AA")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40003AB")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB616C0", Offset = "0xB616C0")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB616F8", Offset = "0xB616F8")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61730", Offset = "0xB61730")]
	public float HeightOffset;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61768", Offset = "0xB61768")]
	public float MinimumHeight;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB617A0", Offset = "0xB617A0")]
	public float MaximumHeight;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x11A5028", Offset = "0x11A5028", VA = "0x11A5028")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x11A5030", Offset = "0x11A5030", VA = "0x11A5030")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x11A50BC", Offset = "0x11A50BC", VA = "0x11A50BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x11A5150", Offset = "0x11A5150", VA = "0x11A5150")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x11A51E4", Offset = "0x11A51E4", VA = "0x11A51E4")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x11A5510", Offset = "0x11A5510", VA = "0x11A5510")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x11A5740", Offset = "0x11A5740", VA = "0x11A5740")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A4")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1CB9DF4", Offset = "0x1CB9DF4", VA = "0x1CB9DF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1CB9EC0", Offset = "0x1CB9EC0", VA = "0x1CB9EC0")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000A5")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000A6")]
	public enum States
	{
		[Token(Token = "0x40003D9")]
		Ready,
		[Token(Token = "0x40003DA")]
		Aim,
		[Token(Token = "0x40003DB")]
		CancelAim,
		[Token(Token = "0x40003DC")]
		PreTeleport,
		[Token(Token = "0x40003DD")]
		CancelTeleport,
		[Token(Token = "0x40003DE")]
		Teleporting,
		[Token(Token = "0x40003DF")]
		PostTeleport
	}

	[Token(Token = "0x20000A7")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40003E1")]
		None,
		[Token(Token = "0x40003E2")]
		Aim,
		[Token(Token = "0x40003E3")]
		PreTeleport,
		[Token(Token = "0x40003E4")]
		Teleport
	}

	[Token(Token = "0x20000A8")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40003E6")]
		Point,
		[Token(Token = "0x40003E7")]
		Sphere,
		[Token(Token = "0x40003E8")]
		Capsule
	}

	[Token(Token = "0x20000A9")]
	public class AimData
	{
		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB61BB8", Offset = "0xB61BB8")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700001D")]
		public List<Vector3> Points
		{
			[Token(Token = "0x600024D")]
			[Address(RVA = "0xFDAF50", Offset = "0xFDAF50", VA = "0xFDAF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB798DC", Offset = "0xB798DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600024E")]
			[Address(RVA = "0xFDAF58", Offset = "0xFDAF58", VA = "0xFDAF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB798EC", Offset = "0xB798EC")]
			private set
			{
			}
		}

		[Token(Token = "0x600024C")]
		[Address(RVA = "0xFDAECC", Offset = "0xFDAECC", VA = "0xFDAECC")]
		public AimData()
		{
		}

		[Token(Token = "0x600024F")]
		[Address(RVA = "0xFDAF60", Offset = "0xFDAF60", VA = "0xFDAF60")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A5E0", Offset = "0xB5A5E0")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000253")]
			[Address(RVA = "0xFDAD18", Offset = "0xFDAD18", VA = "0xFDAD18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000255")]
			[Address(RVA = "0xFDAD60", Offset = "0xFDAD60", VA = "0xFDAD60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0xFDABDC", Offset = "0xFDABDC", VA = "0xFDABDC")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0xFDAC08", Offset = "0xFDAC08", VA = "0xFDAC08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0xFDAC0C", Offset = "0xFDAC0C", VA = "0xFDAC0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0xFDAD20", Offset = "0xFDAD20", VA = "0xFDAD20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A5F0", Offset = "0xB5A5F0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000259")]
			[Address(RVA = "0xFDA648", Offset = "0xFDA648", VA = "0xFDA648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600025B")]
			[Address(RVA = "0xFDA690", Offset = "0xFDA690", VA = "0xFDA690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0xFDA4C0", Offset = "0xFDA4C0", VA = "0xFDA4C0")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0xFDA4EC", Offset = "0xFDA4EC", VA = "0xFDA4EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0xFDA4F0", Offset = "0xFDA4F0", VA = "0xFDA4F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600025A")]
		[Address(RVA = "0xFDA650", Offset = "0xFDA650", VA = "0xFDA650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A600", Offset = "0xB5A600")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000022")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600025F")]
			[Address(RVA = "0xFDA774", Offset = "0xFDA774", VA = "0xFDA774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000261")]
			[Address(RVA = "0xFDA7BC", Offset = "0xFDA7BC", VA = "0xFDA7BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0xFDA698", Offset = "0xFDA698", VA = "0xFDA698")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0xFDA6C4", Offset = "0xFDA6C4", VA = "0xFDA6C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0xFDA6C8", Offset = "0xFDA6C8", VA = "0xFDA6C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0xFDA77C", Offset = "0xFDA77C", VA = "0xFDA77C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A610", Offset = "0xB5A610")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000024")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0xFDAB8C", Offset = "0xFDAB8C", VA = "0xFDAB8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000267")]
			[Address(RVA = "0xFDABD4", Offset = "0xFDABD4", VA = "0xFDABD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0xFDAA70", Offset = "0xFDAA70", VA = "0xFDAA70")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0xFDAA9C", Offset = "0xFDAA9C", VA = "0xFDAA9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0xFDAAA0", Offset = "0xFDAAA0", VA = "0xFDAAA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0xFDAB94", Offset = "0xFDAB94", VA = "0xFDAB94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A620", Offset = "0xB5A620")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0xFDA8A0", Offset = "0xFDA8A0", VA = "0xFDA8A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026D")]
			[Address(RVA = "0xFDA8E8", Offset = "0xFDA8E8", VA = "0xFDA8E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0xFDA7C4", Offset = "0xFDA7C4", VA = "0xFDA7C4")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0xFDA7F0", Offset = "0xFDA7F0", VA = "0xFDA7F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0xFDA7F4", Offset = "0xFDA7F4", VA = "0xFDA7F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xFDA8A8", Offset = "0xFDA8A8", VA = "0xFDA8A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A630", Offset = "0xB5A630")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000271")]
			[Address(RVA = "0xFDAE7C", Offset = "0xFDAE7C", VA = "0xFDAE7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000273")]
			[Address(RVA = "0xFDAEC4", Offset = "0xFDAEC4", VA = "0xFDAEC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0xFDAD68", Offset = "0xFDAD68", VA = "0xFDAD68")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0xFDAD94", Offset = "0xFDAD94", VA = "0xFDAD94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0xFDAD98", Offset = "0xFDAD98", VA = "0xFDAD98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0xFDAE84", Offset = "0xFDAE84", VA = "0xFDAE84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A640", Offset = "0xB5A640")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700002A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0xFDAA20", Offset = "0xFDAA20", VA = "0xFDAA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0xFDAA68", Offset = "0xFDAA68", VA = "0xFDAA68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xFDA8F0", Offset = "0xFDA8F0", VA = "0xFDA8F0")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xFDA91C", Offset = "0xFDA91C", VA = "0xFDA91C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0xFDA920", Offset = "0xFDA920", VA = "0xFDA920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0xFDAA28", Offset = "0xFDAA28", VA = "0xFDAA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB617D8", Offset = "0xB617D8")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61810", Offset = "0xB61810")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61848", Offset = "0xB61848")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61880", Offset = "0xB61880")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB618B8", Offset = "0xB618B8")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB618F0", Offset = "0xB618F0")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61928", Offset = "0xB61928")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61960", Offset = "0xB61960")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB61998", Offset = "0xB61998")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB619A8", Offset = "0xB619A8")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB619E0", Offset = "0xB619E0")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB61A28", Offset = "0xB61A28")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61A38", Offset = "0xB61A38")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61A70", Offset = "0xB61A70")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61AA8", Offset = "0xB61AA8")]
	public float AimCollisionRadius;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61AE0", Offset = "0xB61AE0")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700001A")]
	public States CurrentState
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x1CBB128", Offset = "0x1CBB128", VA = "0x1CBB128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79464", Offset = "0xB79464")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x1CBB130", Offset = "0x1CBB130", VA = "0x1CBB130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79474", Offset = "0xB79474")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x1CBB354", Offset = "0x1CBB354", VA = "0x1CBB354")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001C")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x1CBB37C", Offset = "0x1CBB37C", VA = "0x1CBB37C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB794A4", Offset = "0xB794A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1CBB384", Offset = "0x1CBB384", VA = "0x1CBB384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB794B4", Offset = "0xB794B4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x1CBB138", Offset = "0x1CBB138", VA = "0x1CBB138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79484", Offset = "0xB79484")]
		add
		{
		}
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1CBB1D8", Offset = "0x1CBB1D8", VA = "0x1CBB1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79494", Offset = "0xB79494")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x1CBB9C4", Offset = "0x1CBB9C4", VA = "0x1CBB9C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB794FC", Offset = "0xB794FC")]
		add
		{
		}
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x1CBBA64", Offset = "0x1CBBA64", VA = "0x1CBBA64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7950C", Offset = "0xB7950C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x1CBBB04", Offset = "0x1CBBB04", VA = "0x1CBBB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7957C", Offset = "0xB7957C")]
		add
		{
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x1CBBBA4", Offset = "0x1CBBBA4", VA = "0x1CBBBA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7958C", Offset = "0xB7958C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x1CBBC44", Offset = "0x1CBBC44", VA = "0x1CBBC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7959C", Offset = "0xB7959C")]
		add
		{
		}
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x1CBBCE4", Offset = "0x1CBBCE4", VA = "0x1CBBCE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB795AC", Offset = "0xB795AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x1CBBDF4", Offset = "0x1CBBDF4", VA = "0x1CBBDF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB795BC", Offset = "0xB795BC")]
		add
		{
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1CBBE94", Offset = "0x1CBBE94", VA = "0x1CBBE94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB795CC", Offset = "0xB795CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x1CBBFAC", Offset = "0x1CBBFAC", VA = "0x1CBBFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7963C", Offset = "0xB7963C")]
		add
		{
		}
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x1CBC04C", Offset = "0x1CBC04C", VA = "0x1CBC04C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7964C", Offset = "0xB7964C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x1CBC164", Offset = "0x1CBC164", VA = "0x1CBC164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB796BC", Offset = "0xB796BC")]
		add
		{
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x1CBC204", Offset = "0x1CBC204", VA = "0x1CBC204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB796CC", Offset = "0xB796CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x1CBC31C", Offset = "0x1CBC31C", VA = "0x1CBC31C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7973C", Offset = "0xB7973C")]
		add
		{
		}
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x1CBC3BC", Offset = "0x1CBC3BC", VA = "0x1CBC3BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7974C", Offset = "0xB7974C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x1CBC4D4", Offset = "0x1CBC4D4", VA = "0x1CBC4D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB797BC", Offset = "0xB797BC")]
		add
		{
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x1CBC574", Offset = "0x1CBC574", VA = "0x1CBC574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB797CC", Offset = "0xB797CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0x1CBC68C", Offset = "0x1CBC68C", VA = "0x1CBC68C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7983C", Offset = "0xB7983C")]
		add
		{
		}
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x1CBC72C", Offset = "0x1CBC72C", VA = "0x1CBC72C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7984C", Offset = "0xB7984C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0x1CBC844", Offset = "0x1CBC844", VA = "0x1CBC844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB798BC", Offset = "0xB798BC")]
		add
		{
		}
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x1CBC8E4", Offset = "0x1CBC8E4", VA = "0x1CBC8E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB798CC", Offset = "0xB798CC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1CBADD4", Offset = "0x1CBADD4", VA = "0x1CBADD4")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x1CBADF8", Offset = "0x1CBADF8", VA = "0x1CBADF8")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1CBB278", Offset = "0x1CBB278", VA = "0x1CBB278")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1CBB38C", Offset = "0x1CBB38C", VA = "0x1CBB38C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1CBB5D8", Offset = "0x1CBB5D8", VA = "0x1CBB5D8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB794C4", Offset = "0xB794C4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1CBB68C", Offset = "0x1CBB68C", VA = "0x1CBB68C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1CBB78C", Offset = "0x1CBB78C", VA = "0x1CBB78C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x1CBB7A8", Offset = "0x1CBB7A8", VA = "0x1CBB7A8")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x1CBB86C", Offset = "0x1CBB86C", VA = "0x1CBB86C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1CBB8B0", Offset = "0x1CBB8B0", VA = "0x1CBB8B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1CBB914", Offset = "0x1CBB914", VA = "0x1CBB914", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x1CBB9BC", Offset = "0x1CBB9BC", VA = "0x1CBB9BC", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1CBB944", Offset = "0x1CBB944", VA = "0x1CBB944")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7951C", Offset = "0xB7951C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1CBBD84", Offset = "0x1CBBD84", VA = "0x1CBBD84")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1CBBF34", Offset = "0x1CBBF34", VA = "0x1CBBF34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB795DC", Offset = "0xB795DC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1CBC0EC", Offset = "0x1CBC0EC", VA = "0x1CBC0EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7965C", Offset = "0xB7965C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1CBC2A4", Offset = "0x1CBC2A4", VA = "0x1CBC2A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB796DC", Offset = "0xB796DC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1CBC45C", Offset = "0x1CBC45C", VA = "0x1CBC45C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7975C", Offset = "0xB7975C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1CBC614", Offset = "0x1CBC614", VA = "0x1CBC614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB797DC", Offset = "0xB797DC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1CBC7CC", Offset = "0x1CBC7CC", VA = "0x1CBC7CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7985C", Offset = "0xB7985C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x1CBC984", Offset = "0x1CBC984", VA = "0x1CBC984")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1CBCAC4", Offset = "0x1CBCAC4", VA = "0x1CBCAC4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1CBCAF8", Offset = "0x1CBCAF8", VA = "0x1CBCAF8")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1CBCBC0", Offset = "0x1CBCBC0", VA = "0x1CBCBC0")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1CBCCB8", Offset = "0x1CBCCB8", VA = "0x1CBCCB8")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000B1")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xF0CAA0", Offset = "0xF0CAA0", VA = "0xF0CAA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79B2C", Offset = "0xB79B2C")]
		add
		{
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xF0CB40", Offset = "0xF0CB40", VA = "0xF0CB40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79B3C", Offset = "0xB79B3C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xF0CBE0", Offset = "0xF0CBE0", VA = "0xF0CBE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79B4C", Offset = "0xB79B4C")]
		add
		{
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xF0CC80", Offset = "0xF0CC80", VA = "0xF0CC80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79B5C", Offset = "0xB79B5C")]
		remove
		{
		}
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xF0CD20", Offset = "0xF0CD20", VA = "0xF0CD20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xF0CE0C", Offset = "0xF0CE0C", VA = "0xF0CE0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xF0CE10", Offset = "0xF0CE10", VA = "0xF0CE10")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xF0CE84", Offset = "0xF0CE84", VA = "0xF0CE84")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xF0CFA8", Offset = "0xF0CFA8", VA = "0xF0CFA8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xF0D190", Offset = "0xF0D190", VA = "0xF0D190")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xF0D398", Offset = "0xF0D398", VA = "0xF0D398")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000B2")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1177560", Offset = "0x1177560", VA = "0x1177560", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1177598", Offset = "0x1177598", VA = "0x1177598", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000287")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1177634", Offset = "0x1177634", VA = "0x1177634")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000B3")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61BE8", Offset = "0xB61BE8")]
	public float Range;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1177718", Offset = "0x1177718", VA = "0x1177718", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1177814", Offset = "0x1177814", VA = "0x1177814")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000B4")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61C20", Offset = "0xB61C20")]
	public float Range;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61C58", Offset = "0xB61C58")]
	public float MinimumElevation;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61C90", Offset = "0xB61C90")]
	public float Gravity;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61CC8", Offset = "0xB61CC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB61CC8", Offset = "0xB61CC8")]
	public float AimVelocity;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61D24", Offset = "0xB61D24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB61D24", Offset = "0xB61D24")]
	public float AimStep;

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1177824", Offset = "0x1177824", VA = "0x1177824", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x11779B4", Offset = "0x11779B4", VA = "0x11779B4")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000B5")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61D7C", Offset = "0xB61D7C")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1177E80", Offset = "0x1177E80", VA = "0x1177E80")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1177FBC", Offset = "0x1177FBC", VA = "0x1177FBC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1177FEC", Offset = "0x1177FEC", VA = "0x1177FEC")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x117801C", Offset = "0x117801C", VA = "0x117801C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x11780CC", Offset = "0x11780CC", VA = "0x11780CC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x117812C", Offset = "0x117812C", VA = "0x117812C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1178190", Offset = "0x1178190", VA = "0x1178190")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000B6")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB61DB4", Offset = "0xB61DB4")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61DC4", Offset = "0xB61DC4")]
	public Transform PositionIndicator;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61DFC", Offset = "0xB61DFC")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61E34", Offset = "0xB61E34")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700002C")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x11788E4", Offset = "0x11788E4", VA = "0x11788E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79B6C", Offset = "0xB79B6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x11788EC", Offset = "0x11788EC", VA = "0x11788EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79B7C", Offset = "0xB79B7C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0x1178AA8", Offset = "0x1178AA8", VA = "0x1178AA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79B8C", Offset = "0xB79B8C")]
		add
		{
		}
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x1178B48", Offset = "0x1178B48", VA = "0x1178B48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79B9C", Offset = "0xB79B9C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x11788F8", Offset = "0x11788F8", VA = "0x11788F8")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1178990", Offset = "0x1178990", VA = "0x1178990")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1178A64", Offset = "0x1178A64", VA = "0x1178A64")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1178AA4", Offset = "0x1178AA4", VA = "0x1178AA4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1178BE8", Offset = "0x1178BE8", VA = "0x1178BE8")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1178C4C", Offset = "0x1178C4C", VA = "0x1178C4C")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1178C6C", Offset = "0x1178C6C", VA = "0x1178C6C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000B7")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A650", Offset = "0xB5A650")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002AB")]
			[Address(RVA = "0xFEE1E0", Offset = "0xFEE1E0", VA = "0xFEE1E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0xFEE228", Offset = "0xFEE228", VA = "0xFEE228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xFEE118", Offset = "0xFEE118", VA = "0xFEE118")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xFEE144", Offset = "0xFEE144", VA = "0xFEE144", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xFEE148", Offset = "0xFEE148", VA = "0xFEE148", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xFEE1E8", Offset = "0xFEE1E8", VA = "0xFEE1E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A660", Offset = "0xB5A660")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002B1")]
			[Address(RVA = "0xFEE0C8", Offset = "0xFEE0C8", VA = "0xFEE0C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002B3")]
			[Address(RVA = "0xFEE110", Offset = "0xFEE110", VA = "0xFEE110", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xFEDFFC", Offset = "0xFEDFFC", VA = "0xFEDFFC")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xFEE028", Offset = "0xFEE028", VA = "0xFEE028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xFEE02C", Offset = "0xFEE02C", VA = "0xFEE02C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xFEE0D0", Offset = "0xFEE0D0", VA = "0xFEE0D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x117940C", Offset = "0x117940C", VA = "0x117940C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x11794E0", Offset = "0x11794E0", VA = "0x11794E0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x1179544", Offset = "0x1179544", VA = "0x1179544", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1179608", Offset = "0x1179608", VA = "0x1179608")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB79BAC", Offset = "0xB79BAC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1179680", Offset = "0x1179680", VA = "0x1179680")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB79C0C", Offset = "0xB79C0C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002A5")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x11796F8", Offset = "0x11796F8", VA = "0x11796F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79C6C", Offset = "0xB79C6C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1179724", Offset = "0x1179724", VA = "0x1179724")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79C7C", Offset = "0xB79C7C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB61E7C", Offset = "0xB61E7C")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61E8C", Offset = "0xB61E8C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61EC4", Offset = "0xB61EC4")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61EFC", Offset = "0xB61EFC")]
	public bool FastTeleport;

	[Token(Token = "0x17000031")]
	public Transform Pointer
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x15CCD8C", Offset = "0x15CCD8C", VA = "0x15CCD8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79D2C", Offset = "0xB79D2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x15CCD94", Offset = "0x15CCD94", VA = "0x15CCD94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79D3C", Offset = "0xB79D3C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x15CCD9C", Offset = "0x15CCD9C", VA = "0x15CCD9C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x15CCEF4", Offset = "0x15CCEF4", VA = "0x15CCEF4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x15CCFAC", Offset = "0x15CCFAC", VA = "0x15CCFAC")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000BB")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000BC")]
	public enum InputModes
	{
		[Token(Token = "0x4000439")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400043A")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400043B")]
		ThumbstickTeleport,
		[Token(Token = "0x400043C")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000BD")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400043E")]
		A,
		[Token(Token = "0x400043F")]
		B,
		[Token(Token = "0x4000440")]
		LeftTrigger,
		[Token(Token = "0x4000441")]
		LeftThumbstick,
		[Token(Token = "0x4000442")]
		RightTrigger,
		[Token(Token = "0x4000443")]
		RightThumbstick,
		[Token(Token = "0x4000444")]
		X,
		[Token(Token = "0x4000445")]
		Y
	}

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61F34", Offset = "0xB61F34")]
	public InputModes InputMode;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61F6C", Offset = "0xB61F6C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61FA4", Offset = "0xB61FA4")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB61FDC", Offset = "0xB61FDC")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x15CD83C", Offset = "0x15CD83C", VA = "0x15CD83C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x15CD840", Offset = "0x15CD840", VA = "0x15CD840", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x15CDC28", Offset = "0x15CDC28", VA = "0x15CDC28", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x15CDCE8", Offset = "0x15CDCE8", VA = "0x15CDCE8")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000BE")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000BF")]
	public enum OrientationModes
	{
		[Token(Token = "0x400044A")]
		HeadRelative,
		[Token(Token = "0x400044B")]
		ForwardFacing
	}

	[Token(Token = "0x20000C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A670", Offset = "0xB5A670")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0xFEE538", Offset = "0xFEE538", VA = "0xFEE538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0xFEE580", Offset = "0xFEE580", VA = "0xFEE580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xFEE458", Offset = "0xFEE458", VA = "0xFEE458")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xFEE484", Offset = "0xFEE484", VA = "0xFEE484", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xFEE488", Offset = "0xFEE488", VA = "0xFEE488", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xFEE540", Offset = "0xFEE540", VA = "0xFEE540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x15CE1D4", Offset = "0x15CE1D4", VA = "0x15CE1D4")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x15CE2D0", Offset = "0x15CE2D0", VA = "0x15CE2D0")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x15CE2D8", Offset = "0x15CE2D8", VA = "0x15CE2D8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x15CE330", Offset = "0x15CE330", VA = "0x15CE330", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x15CE380", Offset = "0x15CE380", VA = "0x15CE380")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB79D4C", Offset = "0xB79D4C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C2")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002C3")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x15CE3F8", Offset = "0x15CE3F8", VA = "0x15CE3F8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x15CE4B4", Offset = "0x15CE4B4", VA = "0x15CE4B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79DAC", Offset = "0xB79DAC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000C1")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x15CE7B0", Offset = "0x15CE7B0", VA = "0x15CE7B0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x15CE7B4", Offset = "0x15CE7B4", VA = "0x15CE7B4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x15CE830", Offset = "0x15CE830", VA = "0x15CE830")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000C2")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB62014", Offset = "0xB62014")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6204C", Offset = "0xB6204C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB62084", Offset = "0xB62084")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB620BC", Offset = "0xB620BC")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x15CE834", Offset = "0x15CE834", VA = "0x15CE834", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x15CE860", Offset = "0x15CE860", VA = "0x15CE860", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x15CEC10", Offset = "0x15CEC10", VA = "0x15CEC10")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C3")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB620F4", Offset = "0xB620F4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6212C", Offset = "0xB6212C")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB62164", Offset = "0xB62164")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x15CEC14", Offset = "0x15CEC14", VA = "0x15CEC14", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x15CEC58", Offset = "0x15CEC58", VA = "0x15CEC58", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x15CF000", Offset = "0x15CF000", VA = "0x15CF000")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000C4")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x15CF624", Offset = "0x15CF624", VA = "0x15CF624")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x15CF628", Offset = "0x15CF628", VA = "0x15CF628")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x15CF630", Offset = "0x15CF630", VA = "0x15CF630")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x15CF6EC", Offset = "0x15CF6EC", VA = "0x15CF6EC")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x15CF714", Offset = "0x15CF714", VA = "0x15CF714")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000C5")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6219C", Offset = "0xB6219C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000034")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x15D0154", Offset = "0x15D0154", VA = "0x15D0154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79E0C", Offset = "0xB79E0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x15D015C", Offset = "0x15D015C", VA = "0x15D015C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79E1C", Offset = "0xB79E1C")]
		private set
		{
		}
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x15D0164", Offset = "0x15D0164", VA = "0x15D0164", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x15D01D0", Offset = "0x15D01D0", VA = "0x15D01D0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x15D0204", Offset = "0x15D0204", VA = "0x15D0204")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB79E2C", Offset = "0xB79E2C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x15CE324", Offset = "0x15CE324", VA = "0x15CE324", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x15CE378", Offset = "0x15CE378", VA = "0x15CE378", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x15CE2C8", Offset = "0x15CE2C8", VA = "0x15CE2C8")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000C6")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A680", Offset = "0xB5A680")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002ED")]
			[Address(RVA = "0xFEEA00", Offset = "0xFEEA00", VA = "0xFEEA00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002EF")]
			[Address(RVA = "0xFEEA48", Offset = "0xFEEA48", VA = "0xFEEA48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0xFEE730", Offset = "0xFEE730", VA = "0xFEE730")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xFEE75C", Offset = "0xFEE75C", VA = "0xFEE75C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xFEE760", Offset = "0xFEE760", VA = "0xFEE760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xFEEA08", Offset = "0xFEEA08", VA = "0xFEEA08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB621AC", Offset = "0xB621AC")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000465")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x15D0394", Offset = "0x15D0394", VA = "0x15D0394")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x15D04A4", Offset = "0x15D04A4", VA = "0x15D04A4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x15D04D0", Offset = "0x15D04D0", VA = "0x15D04D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x15D04F8", Offset = "0x15D04F8", VA = "0x15D04F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB79E64", Offset = "0xB79E64")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x15D0570", Offset = "0x15D0570", VA = "0x15D0570", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002E7")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x15D058C", Offset = "0x15D058C", VA = "0x15D058C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x15D06AC", Offset = "0x15D06AC", VA = "0x15D06AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB79EC4", Offset = "0xB79EC4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000C8")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x15D11FC", Offset = "0x15D11FC", VA = "0x15D11FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x15D1260", Offset = "0x15D1260", VA = "0x15D1260", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x15D1358", Offset = "0x15D1358", VA = "0x15D1358", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x15D1450", Offset = "0x15D1450", VA = "0x15D1450")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB79F24", Offset = "0xB79F24")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x15D1454", Offset = "0x15D1454", VA = "0x15D1454")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000C9")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB621E4", Offset = "0xB621E4")]
	public float LOSOffset;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6221C", Offset = "0xB6221C")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x15D18B4", Offset = "0x15D18B4", VA = "0x15D18B4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x15D1AC0", Offset = "0x15D1AC0", VA = "0x15D1AC0")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000CA")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x15D1ACC", Offset = "0x15D1ACC", VA = "0x15D1ACC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x15D1BC4", Offset = "0x15D1BC4", VA = "0x15D1BC4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000CB")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x15D1BCC", Offset = "0x15D1BCC", VA = "0x15D1BCC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x15D1C60", Offset = "0x15D1C60", VA = "0x15D1C60", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002FB")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x15D1CF0", Offset = "0x15D1CF0", VA = "0x15D1CF0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A690", Offset = "0xB5A690")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000303")]
			[Address(RVA = "0xFEF268", Offset = "0xFEF268", VA = "0xFEF268", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000305")]
			[Address(RVA = "0xFEF2B0", Offset = "0xFEF2B0", VA = "0xFEF2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0xFEF130", Offset = "0xFEF130", VA = "0xFEF130")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0xFEF15C", Offset = "0xFEF15C", VA = "0xFEF15C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0xFEF160", Offset = "0xFEF160", VA = "0xFEF160", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0xFEF270", Offset = "0xFEF270", VA = "0xFEF270", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB62254", Offset = "0xB62254")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB62254", Offset = "0xB62254")]
	public float TransitionDuration;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB622AC", Offset = "0xB622AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB622AC", Offset = "0xB622AC")]
	public float TeleportDelay;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB62300", Offset = "0xB62300")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x15D1EA0", Offset = "0x15D1EA0", VA = "0x15D1EA0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x15D1ECC", Offset = "0x15D1ECC", VA = "0x15D1ECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB79F5C", Offset = "0xB79F5C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x15D1F44", Offset = "0x15D1F44", VA = "0x15D1F44")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000CE")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000306")]
	[Address(RVA = "0x15D23C8", Offset = "0x15D23C8", VA = "0x15D23C8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x15D23E4", Offset = "0x15D23E4", VA = "0x15D23E4")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A6A0", Offset = "0xB5A6A0")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600030E")]
			[Address(RVA = "0xFEF70C", Offset = "0xFEF70C", VA = "0xFEF70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000310")]
			[Address(RVA = "0xFEF754", Offset = "0xFEF754", VA = "0xFEF754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0xFEF5A0", Offset = "0xFEF5A0", VA = "0xFEF5A0")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0xFEF5CC", Offset = "0xFEF5CC", VA = "0xFEF5CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xFEF5D0", Offset = "0xFEF5D0", VA = "0xFEF5D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0xFEF714", Offset = "0xFEF714", VA = "0xFEF714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB62338", Offset = "0xB62338")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB62338", Offset = "0xB62338")]
	public float TransitionDuration;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x15D23EC", Offset = "0x15D23EC", VA = "0x15D23EC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x15D2418", Offset = "0x15D2418", VA = "0x15D2418")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A00C", Offset = "0xB7A00C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x15D2490", Offset = "0x15D2490", VA = "0x15D2490")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000D1")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000D2")]
	public enum PlabackState
	{
		[Token(Token = "0x4000495")]
		Idle = 1,
		[Token(Token = "0x4000496")]
		Preparing,
		[Token(Token = "0x4000497")]
		Buffering,
		[Token(Token = "0x4000498")]
		Ready,
		[Token(Token = "0x4000499")]
		Ended
	}

	[Token(Token = "0x20000D3")]
	public enum StereoMode
	{
		[Token(Token = "0x400049B")]
		Unknown = -1,
		[Token(Token = "0x400049C")]
		Mono,
		[Token(Token = "0x400049D")]
		TopBottom,
		[Token(Token = "0x400049E")]
		LeftRight,
		[Token(Token = "0x400049F")]
		Mesh
	}

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700003B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xF21F0C", Offset = "0xF21F0C", VA = "0xF21F0C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xF2223C", Offset = "0xF2223C", VA = "0xF2223C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700003D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xF1CE9C", Offset = "0xF1CE9C", VA = "0xF1CE9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xF1E698", Offset = "0xF1E698", VA = "0xF1E698")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003F")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xF2250C", Offset = "0xF2250C", VA = "0xF2250C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000040")]
	public static long Duration
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0xF1E8BC", Offset = "0xF1E8BC", VA = "0xF1E8BC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000041")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0xF1D4C4", Offset = "0xF1D4C4", VA = "0xF1D4C4")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000042")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0xF1D29C", Offset = "0xF1D29C", VA = "0xF1D29C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000043")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0xF1D3B0", Offset = "0xF1D3B0", VA = "0xF1D3B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000044")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0xF1E7A8", Offset = "0xF1E7A8", VA = "0xF1E7A8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xF1DD7C", Offset = "0xF1DD7C", VA = "0xF1DD7C")]
		set
		{
		}
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xF22620", Offset = "0xF22620", VA = "0xF22620")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xF1EC8C", Offset = "0xF1EC8C", VA = "0xF1EC8C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xF1D9C8", Offset = "0xF1D9C8", VA = "0xF1D9C8")]
	public static void Play()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xF1DB68", Offset = "0xF1DB68", VA = "0xF1DB68")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xF1EA84", Offset = "0xF1EA84", VA = "0xF1EA84")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xF2284C", Offset = "0xF2284C", VA = "0xF2284C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xF1E4A8", Offset = "0xF1E4A8", VA = "0xF1E4A8")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000D4")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x1194720", Offset = "0x1194720", VA = "0x1194720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A0BC", Offset = "0xB7A0BC")]
		add
		{
		}
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x11947C0", Offset = "0x11947C0", VA = "0x11947C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A0CC", Offset = "0xB7A0CC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1194860", Offset = "0x1194860", VA = "0x1194860", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1194874", Offset = "0x1194874", VA = "0x1194874")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000D5")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000D6")]
	public enum ButtonType
	{
		[Token(Token = "0x40004A3")]
		Play,
		[Token(Token = "0x40004A4")]
		Pause,
		[Token(Token = "0x40004A5")]
		FastForward,
		[Token(Token = "0x40004A6")]
		Rewind,
		[Token(Token = "0x40004A7")]
		SkipForward,
		[Token(Token = "0x40004A8")]
		SkipBack,
		[Token(Token = "0x40004A9")]
		Stop
	}

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000045")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1CC0DDC", Offset = "0x1CC0DDC", VA = "0x1CC0DDC")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1CC0DE4", Offset = "0x1CC0DE4", VA = "0x1CC0DE4")]
		set
		{
		}
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1CC0E08", Offset = "0x1CC0E08", VA = "0x1CC0E08", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1CC22A0", Offset = "0x1CC22A0", VA = "0x1CC22A0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000D7")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000D8")]
	public enum VideoShape
	{
		[Token(Token = "0x40004BE")]
		_360,
		[Token(Token = "0x40004BF")]
		_180,
		[Token(Token = "0x40004C0")]
		Quad
	}

	[Token(Token = "0x20000D9")]
	public enum VideoStereo
	{
		[Token(Token = "0x40004C2")]
		Mono,
		[Token(Token = "0x40004C3")]
		TopBottom,
		[Token(Token = "0x40004C4")]
		LeftRight,
		[Token(Token = "0x40004C5")]
		BottomTop
	}

	[Token(Token = "0x20000DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A6B0", Offset = "0xB5A6B0")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000342")]
			[Address(RVA = "0xFDD0DC", Offset = "0xFDD0DC", VA = "0xFDD0DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000344")]
			[Address(RVA = "0xFDD124", Offset = "0xFDD124", VA = "0xFDD124", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0xFDCEE8", Offset = "0xFDCEE8", VA = "0xFDCEE8")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0xFDCF14", Offset = "0xFDCF14", VA = "0xFDCF14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0xFDCF18", Offset = "0xFDCF18", VA = "0xFDCF18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0xFDD0E4", Offset = "0xFDD0E4", VA = "0xFDD0E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A6C0", Offset = "0xB5A6C0")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000345")]
		[Address(RVA = "0xFDCDF0", Offset = "0xFDCDF0", VA = "0xFDCDF0")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0xFDCDF8", Offset = "0xFDCDF8", VA = "0xFDCDF8")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB623C0", Offset = "0xB623C0")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB623D0", Offset = "0xB623D0")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB623E0", Offset = "0xB623E0")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000046")]
	public bool IsPlaying
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xF1CBC0", Offset = "0xF1CBC0", VA = "0xF1CBC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A0DC", Offset = "0xB7A0DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xF1CBC8", Offset = "0xF1CBC8", VA = "0xF1CBC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A0EC", Offset = "0xB7A0EC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public long Duration
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xF1CBD4", Offset = "0xF1CBD4", VA = "0xF1CBD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A0FC", Offset = "0xB7A0FC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xF1CBDC", Offset = "0xF1CBDC", VA = "0xF1CBDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A10C", Offset = "0xB7A10C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xF1CBE4", Offset = "0xF1CBE4", VA = "0xF1CBE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A11C", Offset = "0xB7A11C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xF1CBEC", Offset = "0xF1CBEC", VA = "0xF1CBEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A12C", Offset = "0xB7A12C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xF1CBF4", Offset = "0xF1CBF4", VA = "0xF1CBF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xF1CF0C", Offset = "0xF1CF0C", VA = "0xF1CF0C")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xF1CF70", Offset = "0xF1CF70", VA = "0xF1CF70")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xF1D5D8", Offset = "0xF1D5D8", VA = "0xF1D5D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A13C", Offset = "0xB7A13C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xF1D650", Offset = "0xF1D650", VA = "0xF1D650")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xF1D938", Offset = "0xF1D938", VA = "0xF1D938")]
	public void Play()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xF1DADC", Offset = "0xF1DADC", VA = "0xF1DADC")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xF1DC7C", Offset = "0xF1DC7C", VA = "0xF1DC7C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xF1DEF0", Offset = "0xF1DEF0", VA = "0xF1DEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xF1E9D0", Offset = "0xF1E9D0", VA = "0xF1E9D0")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xF1EC00", Offset = "0xF1EC00", VA = "0xF1EC00")]
	public void Stop()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xF1EDA0", Offset = "0xF1EDA0", VA = "0xF1EDA0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xF1EE8C", Offset = "0xF1EE8C", VA = "0xF1EE8C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000DC")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000DD")]
	private enum PlaybackState
	{
		[Token(Token = "0x40004E2")]
		Playing,
		[Token(Token = "0x40004E3")]
		Paused,
		[Token(Token = "0x40004E4")]
		Rewinding,
		[Token(Token = "0x40004E5")]
		FastForwarding
	}

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xF1EE9C", Offset = "0xF1EE9C", VA = "0xF1EE9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xF1F1A8", Offset = "0xF1F1A8", VA = "0xF1F1A8")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xF1F2D4", Offset = "0xF1F2D4", VA = "0xF1F2D4")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xF1F3E0", Offset = "0xF1F3E0", VA = "0xF1F3E0")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xF1F4C0", Offset = "0xF1F4C0", VA = "0xF1F4C0")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xF1F3B4", Offset = "0xF1F3B4", VA = "0xF1F3B4")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xF1F520", Offset = "0xF1F520", VA = "0xF1F520")]
	private void Update()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xF1F094", Offset = "0xF1F094", VA = "0xF1F094")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xF1F884", Offset = "0xF1F884", VA = "0xF1F884")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000DE")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5A6D0", Offset = "0xB5A6D0")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20000DF")]
	private enum CubeFace
	{
		[Token(Token = "0x40004FA")]
		Right,
		[Token(Token = "0x40004FB")]
		Left,
		[Token(Token = "0x40004FC")]
		Top,
		[Token(Token = "0x40004FD")]
		Bottom,
		[Token(Token = "0x40004FE")]
		Front,
		[Token(Token = "0x40004FF")]
		Back,
		[Token(Token = "0x4000500")]
		COUNT
	}

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1BCE694", Offset = "0x1BCE694", VA = "0x1BCE694")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1BCE850", Offset = "0x1BCE850", VA = "0x1BCE850")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1BCE9BC", Offset = "0x1BCE9BC", VA = "0x1BCE9BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1BCED84", Offset = "0x1BCED84", VA = "0x1BCED84")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1BCF0BC", Offset = "0x1BCF0BC", VA = "0x1BCF0BC")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1BD01B4", Offset = "0x1BD01B4", VA = "0x1BD01B4")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1BD01EC", Offset = "0x1BD01EC", VA = "0x1BD01EC")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1BCF438", Offset = "0x1BCF438", VA = "0x1BCF438")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1BD0260", Offset = "0x1BD0260", VA = "0x1BD0260")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1BD0374", Offset = "0x1BD0374", VA = "0x1BD0374")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1BCF8C8", Offset = "0x1BCF8C8", VA = "0x1BCF8C8")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1BCFBC8", Offset = "0x1BCFBC8", VA = "0x1BCFBC8")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1BCFE74", Offset = "0x1BCFE74", VA = "0x1BCFE74")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1BD0494", Offset = "0x1BD0494", VA = "0x1BD0494")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000E0")]
public static class VectorUtil
{
	[Token(Token = "0x600035F")]
	[Address(RVA = "0x12350E8", Offset = "0x12350E8", VA = "0x12350E8")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000E1")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000501")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000502")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xFA11CC", Offset = "0xFA11CC", VA = "0xFA11CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xFA15E0", Offset = "0xFA15E0", VA = "0xFA15E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xFA186C", Offset = "0xFA186C", VA = "0xFA186C")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xFA19D4", Offset = "0xFA19D4", VA = "0xFA19D4")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xFA1B40", Offset = "0xFA1B40", VA = "0xFA1B40")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xFA1CD0", Offset = "0xFA1CD0", VA = "0xFA1CD0")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000E2")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x400050B")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x108A874", Offset = "0x108A874", VA = "0x108A874")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x108A8C8", Offset = "0x108A8C8", VA = "0x108A8C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x108A8CC", Offset = "0x108A8CC", VA = "0x108A8CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x108A8D0", Offset = "0x108A8D0", VA = "0x108A8D0")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x108AB44", Offset = "0x108AB44", VA = "0x108AB44")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x108AD74", Offset = "0x108AD74", VA = "0x108AD74")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000E3")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x10A3674", Offset = "0x10A3674", VA = "0x10A3674")]
	private void Start()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x10A3B90", Offset = "0x10A3B90", VA = "0x10A3B90")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x10A3C50", Offset = "0x10A3C50", VA = "0x10A3C50")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x10A3ED0", Offset = "0x10A3ED0", VA = "0x10A3ED0")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x10A3FB0", Offset = "0x10A3FB0", VA = "0x10A3FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x10A4094", Offset = "0x10A4094", VA = "0x10A4094")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x10A4108", Offset = "0x10A4108", VA = "0x10A4108")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x10A4110", Offset = "0x10A4110", VA = "0x10A4110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A1FC", Offset = "0xB7A1FC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x10A4174", Offset = "0x10A4174", VA = "0x10A4174")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A20C", Offset = "0xB7A20C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x10A41D8", Offset = "0x10A41D8", VA = "0x10A41D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A21C", Offset = "0xB7A21C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x10A423C", Offset = "0x10A423C", VA = "0x10A423C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A22C", Offset = "0xB7A22C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000E4")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000377")]
	[Address(RVA = "0xF9F07C", Offset = "0xF9F07C", VA = "0xF9F07C")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000E5")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x13CA5CC", Offset = "0x13CA5CC", VA = "0x13CA5CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x13CA670", Offset = "0x13CA670", VA = "0x13CA670")]
	private void Update()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x13CA75C", Offset = "0x13CA75C", VA = "0x13CA75C")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x13CA7BC", Offset = "0x13CA7BC", VA = "0x13CA7BC")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000E6")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1B0687C", Offset = "0x1B0687C", VA = "0x1B0687C")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000E7")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A750", Offset = "0xB5A750")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000384")]
			[Address(RVA = "0xFD381C", Offset = "0xFD381C", VA = "0xFD381C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000386")]
			[Address(RVA = "0xFD3864", Offset = "0xFD3864", VA = "0xFD3864", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xFD36A0", Offset = "0xFD36A0", VA = "0xFD36A0")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0xFD36CC", Offset = "0xFD36CC", VA = "0xFD36CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xFD36D0", Offset = "0xFD36D0", VA = "0xFD36D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xFD3824", Offset = "0xFD3824", VA = "0xFD3824", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1C57640", Offset = "0x1C57640", VA = "0x1C57640")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1C5775C", Offset = "0x1C5775C", VA = "0x1C5775C")]
	private void Update()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1C576E4", Offset = "0x1C576E4", VA = "0x1C576E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A23C", Offset = "0xB7A23C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1C57908", Offset = "0x1C57908", VA = "0x1C57908")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000E9")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB62410", Offset = "0xB62410")]
	public int SubdivisionsU;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6242C", Offset = "0xB6242C")]
	public int SubdivisionsV;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x11A5C0C", Offset = "0x11A5C0C", VA = "0x11A5C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x11A6654", Offset = "0x11A6654", VA = "0x11A6654")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000EA")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700004D")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x1CBA634", Offset = "0x1CBA634", VA = "0x1CBA634")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1CBA688", Offset = "0x1CBA688", VA = "0x1CBA688")]
	public void Start()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1CBAAB0", Offset = "0x1CBAAB0", VA = "0x1CBAAB0")]
	public void Update()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1CBAB9C", Offset = "0x1CBAB9C", VA = "0x1CBAB9C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7A2EC", Offset = "0xB7A2EC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600038D")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600038F")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000390")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000391")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000392")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000393")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000394")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1CBAC00", Offset = "0x1CBAC00", VA = "0x1CBAC00")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1CBAC3C", Offset = "0x1CBAC3C", VA = "0x1CBAC3C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1CBACAC", Offset = "0x1CBACAC", VA = "0x1CBACAC")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1CBAE1C", Offset = "0x1CBAE1C", VA = "0x1CBAE1C")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1CBAEF8", Offset = "0x1CBAEF8", VA = "0x1CBAEF8")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1CBA9A8", Offset = "0x1CBA9A8", VA = "0x1CBA9A8")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1CBAFC0", Offset = "0x1CBAFC0", VA = "0x1CBAFC0")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1CBB028", Offset = "0x1CBB028", VA = "0x1CBB028")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1CBB120", Offset = "0x1CBB120", VA = "0x1CBB120")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000EB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5A770", Offset = "0xB5A770")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000EC")]
	public enum DrawMode
	{
		[Token(Token = "0x400053A")]
		Opaque,
		[Token(Token = "0x400053B")]
		OpaqueWithClip,
		[Token(Token = "0x400053C")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400053D")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700004E")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1BCE470", Offset = "0x1BCE470", VA = "0x1BCE470")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1BCE500", Offset = "0x1BCE500", VA = "0x1BCE500")]
		set
		{
		}
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1BCCEEC", Offset = "0x1BCCEEC", VA = "0x1BCCEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1BCDADC", Offset = "0x1BCDADC", VA = "0x1BCDADC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1BCDB5C", Offset = "0x1BCDB5C", VA = "0x1BCDB5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1BCDC4C", Offset = "0x1BCDC4C", VA = "0x1BCDC4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1BCDD3C", Offset = "0x1BCDD3C", VA = "0x1BCDD3C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1BCDF48", Offset = "0x1BCDF48", VA = "0x1BCDF48")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1BCE5CC", Offset = "0x1BCE5CC", VA = "0x1BCE5CC")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000ED")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x144DD78", Offset = "0x144DD78", VA = "0x144DD78")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x144DF60", Offset = "0x144DF60", VA = "0x144DF60")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x144E0E8", Offset = "0x144E0E8", VA = "0x144E0E8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x144E0F0", Offset = "0x144E0F0", VA = "0x144E0F0")]
	public void Release()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x144E0D8", Offset = "0x144E0D8", VA = "0x144E0D8")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x144E0F8", Offset = "0x144E0F8", VA = "0x144E0F8")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000EE")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A7D0", Offset = "0xB5A7D0")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B8")]
			[Address(RVA = "0xF8D62C", Offset = "0xF8D62C", VA = "0xF8D62C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003BA")]
			[Address(RVA = "0xF8D674", Offset = "0xF8D674", VA = "0xF8D674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xF8D4FC", Offset = "0xF8D4FC", VA = "0xF8D4FC")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xF8D528", Offset = "0xF8D528", VA = "0xF8D528", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xF8D52C", Offset = "0xF8D52C", VA = "0xF8D52C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xF8D634", Offset = "0xF8D634", VA = "0xF8D634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A7E0", Offset = "0xB5A7E0")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003BE")]
			[Address(RVA = "0xF8D834", Offset = "0xF8D834", VA = "0xF8D834", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C0")]
			[Address(RVA = "0xF8D87C", Offset = "0xF8D87C", VA = "0xF8D87C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xF8D67C", Offset = "0xF8D67C", VA = "0xF8D67C")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xF8D6A8", Offset = "0xF8D6A8", VA = "0xF8D6A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0xF8D6AC", Offset = "0xF8D6AC", VA = "0xF8D6AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xF8D83C", Offset = "0xF8D83C", VA = "0xF8D83C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1193440", Offset = "0x1193440", VA = "0x1193440")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1193714", Offset = "0x1193714", VA = "0x1193714")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1193770", Offset = "0x1193770", VA = "0x1193770")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x11938F0", Offset = "0x11938F0", VA = "0x11938F0")]
	public void Release()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x11939C4", Offset = "0x11939C4", VA = "0x11939C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A324", Offset = "0xB7A324")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x119382C", Offset = "0x119382C", VA = "0x119382C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A384", Offset = "0xB7A384")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1193A60", Offset = "0x1193A60", VA = "0x1193A60")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000F1")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x10F6A84", Offset = "0x10F6A84", VA = "0x10F6A84")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x10F6AE4", Offset = "0x10F6AE4", VA = "0x10F6AE4")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000F2")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x10F9B5C", Offset = "0x10F9B5C", VA = "0x10F9B5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x10F9C90", Offset = "0x10F9C90", VA = "0x10F9C90")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x10F9D24", Offset = "0x10F9D24", VA = "0x10F9D24")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x10F9D8C", Offset = "0x10F9D8C", VA = "0x10F9D8C")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000F3")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A7F0", Offset = "0xB5A7F0")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x17000053")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D3")]
			[Address(RVA = "0xF971B4", Offset = "0xF971B4", VA = "0xF971B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D5")]
			[Address(RVA = "0xF971FC", Offset = "0xF971FC", VA = "0xF971FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xF96FA8", Offset = "0xF96FA8", VA = "0xF96FA8")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xF96FD4", Offset = "0xF96FD4", VA = "0xF96FD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xF96FD8", Offset = "0xF96FD8", VA = "0xF96FD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xF971BC", Offset = "0xF971BC", VA = "0xF971BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x10F9D94", Offset = "0x10F9D94", VA = "0x10F9D94")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x10FA078", Offset = "0x10FA078", VA = "0x10FA078")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x10FA3C8", Offset = "0x10FA3C8", VA = "0x10FA3C8")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x10FA724", Offset = "0x10FA724", VA = "0x10FA724")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x10FAA28", Offset = "0x10FAA28", VA = "0x10FAA28")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x10FAB1C", Offset = "0x10FAB1C", VA = "0x10FAB1C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x10FACE8", Offset = "0x10FACE8", VA = "0x10FACE8")]
	public void Release()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x10FAC34", Offset = "0x10FAC34", VA = "0x10FAC34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A484", Offset = "0xB7A484")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x10FADD0", Offset = "0x10FADD0", VA = "0x10FADD0")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000F5")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000F6")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000572")]
		Default,
		[Token(Token = "0x4000573")]
		ForcedHand,
		[Token(Token = "0x4000574")]
		DollyHand,
		[Token(Token = "0x4000575")]
		DollyAttached,
		[Token(Token = "0x4000576")]
		HorizontalScaled,
		[Token(Token = "0x4000577")]
		VerticalScaled,
		[Token(Token = "0x4000578")]
		Menu
	}

	[Token(Token = "0x20000F7")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000F8")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000F9")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB624B8", Offset = "0xB624B8")]
	public string ObjectName;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xB624C8", Offset = "0xB624C8")]
	public string ObjectInstructions;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x1C485D4", Offset = "0x1C485D4", VA = "0x1C485D4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x1C48630", Offset = "0x1C48630", VA = "0x1C48630")]
	public void Release()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x1C48644", Offset = "0x1C48644", VA = "0x1C48644")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1C48658", Offset = "0x1C48658", VA = "0x1C48658")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000FA")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB624E8", Offset = "0xB624E8")]
	public int radialDivisions;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB62520", Offset = "0xB62520")]
	public float borderSize;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB62558", Offset = "0xB62558")]
	public float fingerTaper;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB62590", Offset = "0xB62590")]
	public float fingerTipLength;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB625C8", Offset = "0xB625C8")]
	public float webOffset;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1C51150", Offset = "0x1C51150", VA = "0x1C51150")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x1C51350", Offset = "0x1C51350", VA = "0x1C51350")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1C5155C", Offset = "0x1C5155C", VA = "0x1C5155C")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1C51BE0", Offset = "0x1C51BE0", VA = "0x1C51BE0")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1C52210", Offset = "0x1C52210", VA = "0x1C52210")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1C5488C", Offset = "0x1C5488C", VA = "0x1C5488C")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1C54948", Offset = "0x1C54948", VA = "0x1C54948")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000FB")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1C5496C", Offset = "0x1C5496C", VA = "0x1C5496C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1C54CA4", Offset = "0x1C54CA4", VA = "0x1C54CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1C54A14", Offset = "0x1C54A14", VA = "0x1C54A14")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1C55094", Offset = "0x1C55094", VA = "0x1C55094")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1C55584", Offset = "0x1C55584", VA = "0x1C55584")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000FC")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A800", Offset = "0xB5A800")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000401")]
			[Address(RVA = "0xFB7BA8", Offset = "0xFB7BA8", VA = "0xFB7BA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000403")]
			[Address(RVA = "0xFB7BF0", Offset = "0xFB7BF0", VA = "0xFB7BF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xFB78D8", Offset = "0xFB78D8", VA = "0xFB78D8")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xFB7904", Offset = "0xFB7904", VA = "0xFB7904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xFB7908", Offset = "0xFB7908", VA = "0xFB7908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xFB7BB0", Offset = "0xFB7BB0", VA = "0xFB7BB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x18418F0", Offset = "0x18418F0", VA = "0x18418F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1841B28", Offset = "0x1841B28", VA = "0x1841B28")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1842778", Offset = "0x1842778", VA = "0x1842778")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1843380", Offset = "0x1843380", VA = "0x1843380")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1841AB0", Offset = "0x1841AB0", VA = "0x1841AB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A534", Offset = "0xB7A534")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1841D94", Offset = "0x1841D94", VA = "0x1841D94")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1842A3C", Offset = "0x1842A3C", VA = "0x1842A3C")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1843644", Offset = "0x1843644", VA = "0x1843644")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x18436D0", Offset = "0x18436D0", VA = "0x18436D0")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1843700", Offset = "0x1843700", VA = "0x1843700")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x184350C", Offset = "0x184350C", VA = "0x184350C")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1843824", Offset = "0x1843824", VA = "0x1843824")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000FE")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x184B358", Offset = "0x184B358", VA = "0x184B358")]
	private void Start()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x184B4F0", Offset = "0x184B4F0", VA = "0x184B4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x184B5B8", Offset = "0x184B5B8", VA = "0x184B5B8")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x20000FF")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000100")]
	public enum BrushState
	{
		[Token(Token = "0x40005B5")]
		Idle,
		[Token(Token = "0x40005B6")]
		Inking
	}

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xF4BC58", Offset = "0xF4BC58", VA = "0xF4BC58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xF4BC60", Offset = "0xF4BC60", VA = "0xF4BC60")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xF4BF48", Offset = "0xF4BF48", VA = "0xF4BF48")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xF4C140", Offset = "0xF4C140", VA = "0xF4C140")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xF4C2E8", Offset = "0xF4C2E8", VA = "0xF4C2E8")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xF4BE54", Offset = "0xF4BE54", VA = "0xF4BE54")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xF4C3C4", Offset = "0xF4C3C4", VA = "0xF4C3C4")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000101")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xF4C45C", Offset = "0xF4C45C", VA = "0xF4C45C")]
	private void Start()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xF4C5F4", Offset = "0xF4C5F4", VA = "0xF4C5F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xF4C75C", Offset = "0xF4C75C", VA = "0xF4C75C")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000102")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xF4C770", Offset = "0xF4C770", VA = "0xF4C770")]
	private void Start()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xF4C984", Offset = "0xF4C984", VA = "0xF4C984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xF4CB54", Offset = "0xF4CB54", VA = "0xF4CB54")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000103")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A810", Offset = "0xB5A810")]
	private sealed class <FadeToCurrentStyle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000425")]
			[Address(RVA = "0xFBB6B0", Offset = "0xFBB6B0", VA = "0xFBB6B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000427")]
			[Address(RVA = "0xFBB6F8", Offset = "0xFBB6F8", VA = "0xFBB6F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xFBB4FC", Offset = "0xFBB4FC", VA = "0xFBB4FC")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xFBB528", Offset = "0xFBB528", VA = "0xFBB528", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xFBB52C", Offset = "0xFBB52C", VA = "0xFBB52C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xFBB6B8", Offset = "0xFBB6B8", VA = "0xFBB6B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A820", Offset = "0xB5A820")]
	private sealed class <FadeToDefaultPassthrough>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <edgeCol>5__5;

		[Token(Token = "0x17000059")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042B")]
			[Address(RVA = "0xFBB8F4", Offset = "0xFBB8F4", VA = "0xFBB8F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600042D")]
			[Address(RVA = "0xFBB93C", Offset = "0xFBB93C", VA = "0xFBB93C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xFBB700", Offset = "0xFBB700", VA = "0xFBB700")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xFBB72C", Offset = "0xFBB72C", VA = "0xFBB72C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xFBB730", Offset = "0xFBB730", VA = "0xFBB730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xFBB8FC", Offset = "0xFBB8FC", VA = "0xFBB8FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] compactObjects;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xF4CB5C", Offset = "0xF4CB5C", VA = "0xF4CB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xF4CEA8", Offset = "0xF4CEA8", VA = "0xF4CEA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xF4D100", Offset = "0xF4D100", VA = "0xF4D100")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xF4D284", Offset = "0xF4D284", VA = "0xF4D284")]
	public void Release()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xF4D1FC", Offset = "0xF4D1FC", VA = "0xF4D1FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A5E4", Offset = "0xB7A5E4")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xF4D374", Offset = "0xF4D374", VA = "0xF4D374")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A644", Offset = "0xB7A644")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xF4D3FC", Offset = "0xF4D3FC", VA = "0xF4D3FC")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xF4D41C", Offset = "0xF4D41C", VA = "0xF4D41C")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xF4D43C", Offset = "0xF4D43C", VA = "0xF4D43C")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xF4CE2C", Offset = "0xF4CE2C", VA = "0xF4CE2C")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xF4D4A0", Offset = "0xF4D4A0", VA = "0xF4D4A0")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xF4D4AC", Offset = "0xF4D4AC", VA = "0xF4D4AC")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xF4CEC0", Offset = "0xF4CEC0", VA = "0xF4CEC0")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xF4D4B8", Offset = "0xF4D4B8", VA = "0xF4D4B8")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000106")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xF4D4FC", Offset = "0xF4D4FC", VA = "0xF4D4FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xF4D5BC", Offset = "0xF4D5BC", VA = "0xF4D5BC")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000107")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x13C13A8", Offset = "0x13C13A8", VA = "0x13C13A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x13C15EC", Offset = "0x13C15EC", VA = "0x13C15EC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x13C1644", Offset = "0x13C1644", VA = "0x13C1644")]
	public void Release()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x13C1690", Offset = "0x13C1690", VA = "0x13C1690")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000108")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x13CE4C4", Offset = "0x13CE4C4", VA = "0x13CE4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x13CE53C", Offset = "0x13CE53C", VA = "0x13CE53C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x13CE860", Offset = "0x13CE860", VA = "0x13CE860")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000109")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xEFB5F8", Offset = "0xEFB5F8", VA = "0xEFB5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xEFBA80", Offset = "0xEFBA80", VA = "0xEFBA80")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x200010A")]
public class BouncingBallLogic : MonoBehaviour
{
	[Token(Token = "0x200010B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A830", Offset = "0xB5A830")]
	private sealed class <PlayPopCallback>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float clipLength;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BouncingBallLogic <>4__this;

		[Token(Token = "0x1700005B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000444")]
			[Address(RVA = "0xF8CF2C", Offset = "0xF8CF2C", VA = "0xF8CF2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0xF8CF74", Offset = "0xF8CF74", VA = "0xF8CF74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xF8CE00", Offset = "0xF8CE00", VA = "0xF8CE00")]
		[DebuggerHidden]
		public <PlayPopCallback>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xF8CE2C", Offset = "0xF8CE2C", VA = "0xF8CE2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0xF8CE30", Offset = "0xF8CE30", VA = "0xF8CE30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xF8CF34", Offset = "0xF8CF34", VA = "0xF8CF34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float TTL;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip pop;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip bounce;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip loadball;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material visibleMat;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material hiddenMat;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform centerEyeCamera;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isVisible;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timer;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isReleased;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReadyForDestroy;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x145B140", Offset = "0x145B140", VA = "0x145B140")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x145B164", Offset = "0x145B164", VA = "0x145B164")]
	private void Start()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x145B284", Offset = "0x145B284", VA = "0x145B284")]
	private void Update()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x145B338", Offset = "0x145B338", VA = "0x145B338")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x145B564", Offset = "0x145B564", VA = "0x145B564")]
	private void SetVisible(bool setVisible)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x145B61C", Offset = "0x145B61C", VA = "0x145B61C")]
	public void Release(Vector3 pos, Vector3 vel, Vector3 angVel)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x145B4DC", Offset = "0x145B4DC", VA = "0x145B4DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A744", Offset = "0xB7A744")]
	private IEnumerator PlayPopCallback(float clipLength)
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x145B73C", Offset = "0x145B73C", VA = "0x145B73C")]
	public BouncingBallLogic()
	{
	}
}
[Token(Token = "0x200010C")]
public class BouncingBallMgr : MonoBehaviour
{
	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform trackingspace;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject rightControllerPivot;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.RawButton actionBtn;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentBall;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool ballGrabbed;

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x145B754", Offset = "0x145B754", VA = "0x145B754")]
	private void Update()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x145BA70", Offset = "0x145BA70", VA = "0x145BA70")]
	public BouncingBallMgr()
	{
	}
}
[Token(Token = "0x200010D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5A840", Offset = "0xB5A840")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB5A840", Offset = "0xB5A840")]
public class FurnitureSpawner : MonoBehaviour
{
	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB626A0", Offset = "0xB626A0")]
	public GameObject RoomLightPrefab;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Spawnable> SpawnablePrefabs;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRSceneAnchor _sceneAnchor;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRSemanticClassification _classification;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _roomLightRef;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _frameCounter;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x14C3188", Offset = "0x14C3188", VA = "0x14C3188")]
	private void Start()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x14C33BC", Offset = "0x14C33BC", VA = "0x14C33BC")]
	private void SpawnSpawnable()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x14C381C", Offset = "0x14C381C", VA = "0x14C381C")]
	private bool FindValidSpawnable(out Spawnable currentSpawnable)
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x14C3224", Offset = "0x14C3224", VA = "0x14C3224")]
	private void AddRoomLight()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x14C3A1C", Offset = "0x14C3A1C", VA = "0x14C3A1C")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x14C3B10", Offset = "0x14C3B10", VA = "0x14C3B10")]
	public FurnitureSpawner()
	{
	}
}
[Token(Token = "0x200010E")]
public class MyCustomSceneModelLoader : OVRSceneModelLoader
{
	[Token(Token = "0x200010F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A8B4", Offset = "0xB5A8B4")]
	private sealed class <DelayedLoad>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyCustomSceneModelLoader <>4__this;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000456")]
			[Address(RVA = "0xFB1968", Offset = "0xFB1968", VA = "0xFB1968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000458")]
			[Address(RVA = "0xFB19B0", Offset = "0xFB19B0", VA = "0xFB19B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0xFB1834", Offset = "0xFB1834", VA = "0xFB1834")]
		[DebuggerHidden]
		public <DelayedLoad>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xFB1860", Offset = "0xFB1860", VA = "0xFB1860", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xFB1864", Offset = "0xFB1864", VA = "0xFB1864", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0xFB1970", Offset = "0xFB1970", VA = "0xFB1970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xF21DEC", Offset = "0xF21DEC", VA = "0xF21DEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A7F4", Offset = "0xB7A7F4")]
	private IEnumerator DelayedLoad()
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xF21E64", Offset = "0xF21E64", VA = "0xF21E64", Slot = "4")]
	protected override void OnStart()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xF21E90", Offset = "0xF21E90", VA = "0xF21E90", Slot = "6")]
	protected override void OnNoSceneModelToLoad()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xF21F04", Offset = "0xF21F04", VA = "0xF21F04")]
	public MyCustomSceneModelLoader()
	{
	}
}
[Token(Token = "0x2000110")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5A8C4", Offset = "0xB5A8C4")]
public class PassthroughPlayInEditor : MonoBehaviour
{
	[Token(Token = "0x6000459")]
	[Address(RVA = "0xF4C764", Offset = "0xF4C764", VA = "0xF4C764")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xF4C768", Offset = "0xF4C768", VA = "0xF4C768")]
	public PassthroughPlayInEditor()
	{
	}
}
[Token(Token = "0x2000111")]
public class RequestCaptureFlow : MonoBehaviour
{
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Button RequestCaptureBtn;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRSceneManager _sceneManager;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x13BDDA4", Offset = "0x13BDDA4", VA = "0x13BDDA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x13BDE28", Offset = "0x13BDE28", VA = "0x13BDE28")]
	private void Update()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x13BDEB8", Offset = "0x13BDEB8", VA = "0x13BDEB8")]
	public RequestCaptureFlow()
	{
	}
}
[Token(Token = "0x2000112")]
[ExecuteInEditMode]
public class SimpleResizable : MonoBehaviour
{
	[Token(Token = "0x2000113")]
	public enum Method
	{
		[Token(Token = "0x4000612")]
		Adapt,
		[Token(Token = "0x4000613")]
		AdaptWithAsymmetricalPadding,
		[Token(Token = "0x4000614")]
		Scale,
		[Token(Token = "0x4000615")]
		None
	}

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB626D8", Offset = "0xB626D8")]
	public Method ScalingX;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB626EC", Offset = "0xB626EC")]
	public float PaddingX;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB62704", Offset = "0xB62704")]
	public float PaddingXMax;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB6271C", Offset = "0xB6271C")]
	public Method ScalingY;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB62730", Offset = "0xB62730")]
	public float PaddingY;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB62748", Offset = "0xB62748")]
	public float PaddingYMax;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB62760", Offset = "0xB62760")]
	public Method ScalingZ;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB62774", Offset = "0xB62774")]
	public float PaddingZ;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6278C", Offset = "0xB6278C")]
	public float PaddingZMax;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB627A4", Offset = "0xB627A4")]
	private Vector3 <NewSize>k__BackingField;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB627B4", Offset = "0xB627B4")]
	private Vector3 <DefaultSize>k__BackingField;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB627C4", Offset = "0xB627C4")]
	private Mesh <Mesh>k__BackingField;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Bounds _bounds;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform _pivotTransform;

	[Token(Token = "0x1700005F")]
	public Vector3 PivotPosition
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xF0D50C", Offset = "0xF0D50C", VA = "0xF0D50C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000060")]
	public Vector3 NewSize
	{
		[Token(Token = "0x600045F")]
		[Address(RVA = "0xF0D528", Offset = "0xF0D528", VA = "0xF0D528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A8A4", Offset = "0xB7A8A4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000460")]
		[Address(RVA = "0xF0D534", Offset = "0xF0D534", VA = "0xF0D534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A8B4", Offset = "0xB7A8B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public Vector3 DefaultSize
	{
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xF0D540", Offset = "0xF0D540", VA = "0xF0D540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A8C4", Offset = "0xB7A8C4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xF0D54C", Offset = "0xF0D54C", VA = "0xF0D54C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A8D4", Offset = "0xB7A8D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public Mesh Mesh
	{
		[Token(Token = "0x6000463")]
		[Address(RVA = "0xF0D558", Offset = "0xF0D558", VA = "0xF0D558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A8E4", Offset = "0xB7A8E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xF0D560", Offset = "0xF0D560", VA = "0xF0D560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A8F4", Offset = "0xB7A8F4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xF0D568", Offset = "0xF0D568", VA = "0xF0D568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xF0D6B0", Offset = "0xF0D6B0", VA = "0xF0D6B0")]
	public SimpleResizable()
	{
	}
}
[Token(Token = "0x2000114")]
public class SimpleResizer
{
	[Token(Token = "0x6000467")]
	[Address(RVA = "0xF0D6B8", Offset = "0xF0D6B8", VA = "0xF0D6B8")]
	public void CreateResizedObject(Vector3 newSize, GameObject parent, SimpleResizable sourcePrefab)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xF0D9C4", Offset = "0xF0D9C4", VA = "0xF0D9C4")]
	private Mesh ProcessVertices(SimpleResizable resizable, Vector3 newSize)
	{
		return null;
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xF0DC5C", Offset = "0xF0DC5C", VA = "0xF0DC5C")]
	private float CalculateNewVertexPosition(SimpleResizable.Method resizeMethod, float currentPosition, float currentSize, float newSize, float padding, float paddingMax, float pivot)
	{
		return default(float);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xF0DD38", Offset = "0xF0DD38", VA = "0xF0DD38")]
	public SimpleResizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000115")]
public class Spawnable : ISerializationCallbackReceiver
{
	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SimpleResizable ResizablePrefab;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ClassificationLabel;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _editorClassificationIndex;

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x219D6AC", Offset = "0x219D6AC", VA = "0x219D6AC", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x219D6B0", Offset = "0x219D6B0", VA = "0x219D6B0", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x219DB14", Offset = "0x219DB14", VA = "0x219DB14")]
	public Spawnable()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x219D820", Offset = "0x219D820", VA = "0x219D820")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A904", Offset = "0xB7A904")]
	internal static int <OnAfterDeserialize>g__IndexOf|4_0(string label, IEnumerable<string> collection)
	{
		return default(int);
	}
}
[Token(Token = "0x2000116")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5A934", Offset = "0xB5A934")]
public class VolumeAndPlaneSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000117")]
	public enum GeometryType
	{
		[Token(Token = "0x400061D")]
		Plane,
		[Token(Token = "0x400061E")]
		Volume
	}

	[Serializable]
	[Token(Token = "0x2000118")]
	public struct LabelGeometryPair
	{
		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string label;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeometryType desiredGeometryType;
	}

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSceneAnchor planePrefab;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRSceneAnchor volumePrefab;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<LabelGeometryPair> desiredSwitches;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x12359F4", Offset = "0x12359F4", VA = "0x12359F4")]
	private void ReplaceAnchor(OVRSceneAnchor prefab, Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1235E00", Offset = "0x1235E00", VA = "0x1235E00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x12366A4", Offset = "0x12366A4", VA = "0x12366A4")]
	private void GetVolumeFromTopPlane(Transform plane, Vector2 dimensions, float height, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x12365A8", Offset = "0x12365A8", VA = "0x12365A8")]
	private void GetTopPlaneFromVolume(Transform volume, Vector3 dimensions, out Vector3 position, out Quaternion rotation, out Vector3 localScale)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1236728", Offset = "0x1236728", VA = "0x1236728")]
	public VolumeAndPlaneSwitcher()
	{
	}
}
[Token(Token = "0x2000119")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5A994", Offset = "0xB5A994")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x200011A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5A9F4", Offset = "0xB5A9F4")]
	private sealed class <Start>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Anchor <>4__this;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0xF8B600", Offset = "0xF8B600", VA = "0xF8B600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000489")]
			[Address(RVA = "0xF8B648", Offset = "0xF8B648", VA = "0xF8B648", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xF8B43C", Offset = "0xF8B43C", VA = "0xF8B43C")]
		[DebuggerHidden]
		public <Start>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xF8B468", Offset = "0xF8B468", VA = "0xF8B468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xF8B46C", Offset = "0xF8B46C", VA = "0xF8B46C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xF8B608", Offset = "0xF8B608", VA = "0xF8B608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000621")]
	public const string NumUuidsPlayerPref = "numUuids";

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB627F4", Offset = "0xB627F4")]
	private Canvas _canvas;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62840", Offset = "0xB62840")]
	private Transform _pivot;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6288C", Offset = "0xB6288C")]
	private GameObject _anchorMenu;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isSelected;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _isHovered;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB628D8", Offset = "0xB628D8")]
	private TextMeshProUGUI _anchorName;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62924", Offset = "0xB62924")]
	private GameObject _saveIcon;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62970", Offset = "0xB62970")]
	private Image _labelImage;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB629BC", Offset = "0xB629BC")]
	private Color _labelBaseColor;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62A08", Offset = "0xB62A08")]
	private Color _labelHighlightColor;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62A54", Offset = "0xB62A54")]
	private Color _labelSelectedColor;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62AA0", Offset = "0xB62AA0")]
	private AnchorUIManager _uiManager;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62AEC", Offset = "0xB62AEC")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _menuIndex;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62B38", Offset = "0xB62B38")]
	private List<Button> _buttonList;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _selectedButton;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRSpatialAnchor _spatialAnchor;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _icon;

	[Token(Token = "0x17000063")]
	public bool ShowSaveIcon
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0xF9F8E4", Offset = "0xF9F8E4", VA = "0xF9F8E4")]
		set
		{
		}
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xF9F20C", Offset = "0xF9F20C", VA = "0xF9F20C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xF9F384", Offset = "0xF9F384", VA = "0xF9F384")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7A914", Offset = "0xB7A914")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xF9F3FC", Offset = "0xF9F3FC", VA = "0xF9F3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xF9F67C", Offset = "0xF9F67C", VA = "0xF9F67C")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xF9F774", Offset = "0xF9F774", VA = "0xF9F774")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xF9F7EC", Offset = "0xF9F7EC", VA = "0xF9F7EC")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xF9F904", Offset = "0xF9F904", VA = "0xF9F904")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xF9FA0C", Offset = "0xF9FA0C", VA = "0xF9FA0C")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xF9FB2C", Offset = "0xF9FB2C", VA = "0xF9FB2C")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xF9F458", Offset = "0xF9F458", VA = "0xF9F458")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xF9F56C", Offset = "0xF9F56C", VA = "0xF9F56C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xF9FC00", Offset = "0xF9FC00", VA = "0xF9FC00")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xF9FD58", Offset = "0xF9FD58", VA = "0xF9FD58")]
	public Anchor()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xF9FD60", Offset = "0xF9FD60", VA = "0xF9FD60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A974", Offset = "0xB7A974")]
	private void <OnSaveLocalButtonPressed>b__22_0(OVRSpatialAnchor anchor, bool success)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xF9FE88", Offset = "0xF9FE88", VA = "0xF9FE88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A984", Offset = "0xB7A984")]
	private void <OnEraseButtonPressed>b__24_0(OVRSpatialAnchor anchor, bool success)
	{
	}
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5AA04", Offset = "0xB5AA04")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200011C")]
	public enum AnchorMode
	{
		[Token(Token = "0x400064A")]
		Create,
		[Token(Token = "0x400064B")]
		Select
	}

	[Token(Token = "0x200011D")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62B84", Offset = "0xB62B84")]
	private GameObject _createModeButton;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62BD0", Offset = "0xB62BD0")]
	private GameObject _selectModeButton;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62C1C", Offset = "0xB62C1C")]
	private Transform _trackedDevice;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _raycastOrigin;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _drawRaycast;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62C68", Offset = "0xB62C68")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Anchor _hoveredAnchor;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor _selectedAnchor;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnchorMode _mode;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62CB4", Offset = "0xB62CB4")]
	private List<Button> _buttonList;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _menuIndex;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Button _selectedButton;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Anchor _anchorPrefab;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62D10", Offset = "0xB62D10")]
	private GameObject _placementPreview;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB62D5C", Offset = "0xB62D5C")]
	private Transform _anchorPlacementTransform;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate _primaryPressDelegate;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _isFocused;

	[Token(Token = "0x17000066")]
	public Anchor AnchorPrefab
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xF9FEB0", Offset = "0xF9FEB0", VA = "0xF9FEB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xF9FEB8", Offset = "0xF9FEB8", VA = "0xF9FEB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xF9FF90", Offset = "0xF9FF90", VA = "0xF9FF90")]
	private void Start()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xFA00FC", Offset = "0xFA00FC", VA = "0xFA00FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xFA0550", Offset = "0xFA0550", VA = "0xFA0550")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xFA05C0", Offset = "0xFA05C0", VA = "0xFA05C0")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xFA0084", Offset = "0xFA0084", VA = "0xFA0084")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xFA0648", Offset = "0xFA0648", VA = "0xFA0648")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xFA06D0", Offset = "0xFA06D0", VA = "0xFA06D0")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xFA06FC", Offset = "0xFA06FC", VA = "0xFA06FC")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xFA061C", Offset = "0xFA061C", VA = "0xFA061C")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xFA0440", Offset = "0xFA0440", VA = "0xFA0440")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xFA0838", Offset = "0xFA0838", VA = "0xFA0838")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xFA0784", Offset = "0xFA0784", VA = "0xFA0784")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xFA07A4", Offset = "0xFA07A4", VA = "0xFA07A4")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xFA0950", Offset = "0xFA0950", VA = "0xFA0950")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xFA07C4", Offset = "0xFA07C4", VA = "0xFA07C4")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xFA0800", Offset = "0xFA0800", VA = "0xFA0800")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xFA0208", Offset = "0xFA0208", VA = "0xFA0208")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xFA0A48", Offset = "0xFA0A48", VA = "0xFA0A48")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xFA0A7C", Offset = "0xFA0A7C", VA = "0xFA0A7C")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xFA0B18", Offset = "0xFA0B18", VA = "0xFA0B18")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xFA0C94", Offset = "0xFA0C94", VA = "0xFA0C94")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x200011E")]
public class SpatialAnchorLoader : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRSpatialAnchor _anchorPrefab;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Action<OVRSpatialAnchor.UnboundAnchor, bool> _onLoadAnchor;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x219CF5C", Offset = "0x219CF5C", VA = "0x219CF5C")]
	public void LoadAnchorsByUuid()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x219D30C", Offset = "0x219D30C", VA = "0x219D30C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x219D214", Offset = "0x219D214", VA = "0x219D214")]
	private void Load(OVRSpatialAnchor.LoadOptions options)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x219D3A0", Offset = "0x219D3A0", VA = "0x219D3A0")]
	private void OnLocalized(OVRSpatialAnchor.UnboundAnchor unboundAnchor, bool success)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x219D184", Offset = "0x219D184", VA = "0x219D184")]
	private static void Log(string message)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x219D554", Offset = "0x219D554", VA = "0x219D554")]
	public SpatialAnchorLoader()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x219D55C", Offset = "0x219D55C", VA = "0x219D55C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7A9E4", Offset = "0xB7A9E4")]
	private void <Load>b__4_0(OVRSpatialAnchor.UnboundAnchor[] anchors)
	{
	}
}
[Token(Token = "0x200011F")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5AA64", Offset = "0xB5AA64")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xFED134", Offset = "0xFED134", VA = "0xFED134")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xFED13C", Offset = "0xFED13C", VA = "0xFED13C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1B06884", Offset = "0x1B06884", VA = "0x1B06884")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1B06AA0", Offset = "0x1B06AA0", VA = "0x1B06AA0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x1B06BB0", Offset = "0x1B06BB0", VA = "0x1B06BB0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000121")]
public class LocalizedHaptics : MonoBehaviour
{
	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB62DB8", Offset = "0xB62DB8")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1CB91F8", Offset = "0x1CB91F8", VA = "0x1CB91F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1CB9220", Offset = "0x1CB9220", VA = "0x1CB9220")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1CB9388", Offset = "0x1CB9388", VA = "0x1CB9388")]
	public LocalizedHaptics()
	{
	}
}
[Token(Token = "0x2000122")]
public class SceneSettings : MonoBehaviour
{
	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB62E04", Offset = "0xB62E04")]
	[SerializeField]
	private float m_fixedTimeStep;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB62E50", Offset = "0xB62E50")]
	[SerializeField]
	private float m_gravityScalar;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_defaultContactOffset;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x13CE868", Offset = "0x13CE868", VA = "0x13CE868")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x13CE8CC", Offset = "0x13CE8CC", VA = "0x13CE8CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x13CE8D4", Offset = "0x13CE8D4", VA = "0x13CE8D4")]
	private static void CollidersSetContactOffset(float contactOffset)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x13CE9AC", Offset = "0x13CE9AC", VA = "0x13CE9AC")]
	public SceneSettings()
	{
	}
}
[Token(Token = "0x2000123")]
public class StylusTip : MonoBehaviour
{
	[Token(Token = "0x4000658")]
	private const int MaxBreadCrumbs = 60;

	[Token(Token = "0x4000659")]
	private const float BreadCrumbMinSize = 0.005f;

	[Token(Token = "0x400065A")]
	private const float BreadCrumbMaxSize = 0.02f;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB62EAC", Offset = "0xB62EAC")]
	[SerializeField]
	private Transform m_trackingSpace;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB62EF8", Offset = "0xB62EF8")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_breadCrumbPf;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_breadCrumbContainer;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] m_breadCrumbs;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_breadCrumbIndexPrev;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_breadCrumbIndexCurr;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x116A318", Offset = "0x116A318", VA = "0x116A318")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x116A5B0", Offset = "0x116A5B0", VA = "0x116A5B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x116A9F4", Offset = "0x116A9F4", VA = "0x116A9F4")]
	private static Pose GetT_Device_StylusTip(OVRInput.Controller controller)
	{
		return default(Pose);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x116AB2C", Offset = "0x116AB2C", VA = "0x116AB2C")]
	public StylusTip()
	{
	}
}
[Token(Token = "0x2000124")]
public class UiAxis1dInspector : MonoBehaviour
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB62F54", Offset = "0xB62F54")]
	[SerializeField]
	private float m_minExtent;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_maxExtent;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB62FB0", Offset = "0xB62FB0")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Slider m_slider;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1225A20", Offset = "0x1225A20", VA = "0x1225A20")]
	public void SetExtents(float minExtent, float maxExtent)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1225A28", Offset = "0x1225A28", VA = "0x1225A28")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1225A4C", Offset = "0x1225A4C", VA = "0x1225A4C")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x1225B5C", Offset = "0x1225B5C", VA = "0x1225B5C")]
	public UiAxis1dInspector()
	{
	}
}
[Token(Token = "0x2000125")]
public class UiAxis2dInspector : MonoBehaviour
{
	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6301C", Offset = "0xB6301C")]
	[SerializeField]
	private Vector2 m_xExtent;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector2 m_yExtent;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB63078", Offset = "0xB63078")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image m_handle;

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1225B6C", Offset = "0x1225B6C", VA = "0x1225B6C")]
	public void SetExtents(Vector2 xExtent, Vector2 yExtent)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1225B78", Offset = "0x1225B78", VA = "0x1225B78")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x1225B9C", Offset = "0x1225B9C", VA = "0x1225B9C")]
	public void SetValue(bool isTouching, Vector2 value)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1225F7C", Offset = "0x1225F7C", VA = "0x1225F7C")]
	public UiAxis2dInspector()
	{
	}
}
[Token(Token = "0x2000126")]
public class UiBoolInspector : MonoBehaviour
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB630E4", Offset = "0xB630E4")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle m_toggle;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1225F90", Offset = "0x1225F90", VA = "0x1225F90")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x1225FB4", Offset = "0x1225FB4", VA = "0x1225FB4")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1225FD4", Offset = "0x1225FD4", VA = "0x1225FD4")]
	public UiBoolInspector()
	{
	}
}
[Token(Token = "0x2000127")]
public class UiDeviceInspector : MonoBehaviour
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB63140", Offset = "0xB63140")]
	[SerializeField]
	private OVRInput.Handedness m_handedness;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6318C", Offset = "0xB6318C")]
	[SerializeField]
	private TextMeshProUGUI m_title;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_status;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UiBoolInspector m_thumbRestTouch;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UiAxis1dInspector m_thumbRestForce;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UiAxis1dInspector m_indexTrigger;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UiAxis1dInspector m_gripTrigger;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UiAxis1dInspector m_stylusTipForce;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UiAxis1dInspector m_indexCurl1d;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UiAxis1dInspector m_indexSlider1d;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB63258", Offset = "0xB63258")]
	[SerializeField]
	private UiBoolInspector m_ax;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UiBoolInspector m_axTouch;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UiBoolInspector m_by;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UiBoolInspector m_byTouch;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private UiBoolInspector m_indexTouch;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UiAxis2dInspector m_thumbstick;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1225FDC", Offset = "0x1225FDC", VA = "0x1225FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x1226004", Offset = "0x1226004", VA = "0x1226004")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1226594", Offset = "0x1226594", VA = "0x1226594")]
	private static string ToDeviceModel()
	{
		return null;
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x12265D8", Offset = "0x12265D8", VA = "0x12265D8")]
	private static string ToHandednessString(OVRInput.Handedness handedness)
	{
		return null;
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x1226658", Offset = "0x1226658", VA = "0x1226658")]
	public UiDeviceInspector()
	{
	}
}
[Token(Token = "0x2000128")]
public class UiSceneMenu : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB632F4", Offset = "0xB632F4")]
	[SerializeField]
	private VerticalLayoutGroup m_layoutGroup;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_labelPf;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2 s_lastThumbstickL;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 s_lastThumbstickR;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Scene m_activeScene;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1226668", Offset = "0x1226668", VA = "0x1226668")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1226964", Offset = "0x1226964", VA = "0x1226964")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1226A90", Offset = "0x1226A90", VA = "0x1226A90")]
	private bool InputPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1226B48", Offset = "0x1226B48", VA = "0x1226B48")]
	private bool InputNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1226B9C", Offset = "0x1226B9C", VA = "0x1226B9C")]
	private bool KeyboardPrevScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1226C44", Offset = "0x1226C44", VA = "0x1226C44")]
	private bool KeyboardNextScene()
	{
		return default(bool);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x1226BA8", Offset = "0x1226BA8", VA = "0x1226BA8")]
	private bool ThumbstickPrevScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x1226C50", Offset = "0x1226C50", VA = "0x1226C50")]
	private bool ThumbstickNextScene(OVRInput.Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1226CEC", Offset = "0x1226CEC", VA = "0x1226CEC")]
	private Vector2 GetLastThumbstickValue(OVRInput.Controller controller)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1226AE4", Offset = "0x1226AE4", VA = "0x1226AE4")]
	private void ChangeScene(int nextScene)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1226728", Offset = "0x1226728", VA = "0x1226728")]
	private void CreateLabel(int sceneIndex, string scenePath)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1226D58", Offset = "0x1226D58", VA = "0x1226D58")]
	public UiSceneMenu()
	{
	}
}
[Token(Token = "0x2000129")]
public class UiVectorInspector : MonoBehaviour
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB63350", Offset = "0xB63350")]
	[SerializeField]
	private TextMeshProUGUI m_nameLabel;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_valueLabel;

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1226D60", Offset = "0x1226D60", VA = "0x1226D60")]
	public void SetName(string name)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1226D84", Offset = "0x1226D84", VA = "0x1226D84")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x1226E30", Offset = "0x1226E30", VA = "0x1226E30")]
	public UiVectorInspector()
	{
	}
}
[Token(Token = "0x200012A")]
public class FusionGraph : FusionGraphBase
{
	[Token(Token = "0x200012B")]
	public enum Layouts
	{
		[Token(Token = "0x40006AB")]
		Auto,
		[Token(Token = "0x40006AC")]
		FullAuto,
		[Token(Token = "0x40006AD")]
		FullNoOverlap,
		[Token(Token = "0x40006AE")]
		CenteredAuto,
		[Token(Token = "0x40006AF")]
		CenteredNoGraph,
		[Token(Token = "0x40006B0")]
		CenteredNoOverlap,
		[Token(Token = "0x40006B1")]
		CompactAuto,
		[Token(Token = "0x40006B2")]
		CompactNoGraph
	}

	[Token(Token = "0x200012C")]
	public enum ShowGraphOptions
	{
		[Token(Token = "0x40006B4")]
		Never,
		[Token(Token = "0x40006B5")]
		OverlayOnly,
		[Token(Token = "0x40006B6")]
		Always
	}

	[Token(Token = "0x200012D")]
	private enum ShaderType
	{
		[Token(Token = "0x40006B8")]
		None,
		[Token(Token = "0x40006B9")]
		Overlay,
		[Token(Token = "0x40006BA")]
		GameObject
	}

	[Token(Token = "0x4000687")]
	private const int GRPH_TOP_PAD = 36;

	[Token(Token = "0x4000688")]
	private const int GRPH_BTM_PAD = 36;

	[Token(Token = "0x4000689")]
	private const int HIDE_XTRAS_WDTH = 200;

	[Token(Token = "0x400068A")]
	private const int INTERMITTENT_DATA_ARRAYSIZE = 128;

	[Token(Token = "0x400068B")]
	private const int EXPAND_GRPH_THRESH = 112;

	[Token(Token = "0x400068C")]
	private const int COMPACT_THRESH = 52;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[HideInInspector]
	public float Height;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB633E4", Offset = "0xB633E4")]
	private Layouts _layout;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[InlineHelp]
	[SerializeField]
	private ShowGraphOptions _showGraph;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[InlineHelp]
	public float Padding;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[InlineHelp]
	[SerializeField]
	private bool _alwaysExpandGraph;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	[InlineHelp]
	[SerializeField]
	private bool _showUITargets;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB634F8", Offset = "0xB634F8")]
	public Image GraphImg;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB6353C", Offset = "0xB6353C")]
	public Text LabelMin;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63580", Offset = "0xB63580")]
	public Text LabelMax;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB635C4", Offset = "0xB635C4")]
	public Text LabelAvg;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63608", Offset = "0xB63608")]
	public Text LabelLast;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB6364C", Offset = "0xB6364C")]
	public Text LabelPer;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63690", Offset = "0xB63690")]
	public Dropdown _viewDropdown;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB636D4", Offset = "0xB636D4")]
	public Button _avgBttn;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _min;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float _max;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float[] _values;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float[] _intensity;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float[] _histogram;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<int> DropdownLookup;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[InlineHelp]
	private FusionGraphVisualization _graphVisualization;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private ShaderType _currentShader;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB63728", Offset = "0xB63728")]
	private (int, float)[] _cachedValues;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private double _lastCachedTickTime;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _lastCachedTick;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _histoHighestUsedBucketIndex;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int _histoAvgSampleCount;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private double _histoStepInverse;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private double _histoAvg;

	[Token(Token = "0x17000067")]
	private static Shader Shader
	{
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x14C3B18", Offset = "0x14C3B18", VA = "0x14C3B18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public Layouts Layout
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x14C3B74", Offset = "0x14C3B74", VA = "0x14C3B74")]
		get
		{
			return default(Layouts);
		}
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x14C3B7C", Offset = "0x14C3B7C", VA = "0x14C3B7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public ShowGraphOptions ShowGraph
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x14C3B8C", Offset = "0x14C3B8C", VA = "0x14C3B8C")]
		get
		{
			return default(ShowGraphOptions);
		}
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x14C3B94", Offset = "0x14C3B94", VA = "0x14C3B94")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public bool AlwaysExpandGraph
	{
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x14C3BC8", Offset = "0x14C3BC8", VA = "0x14C3BC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x14C3BD0", Offset = "0x14C3BD0", VA = "0x14C3BD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public FusionGraphVisualization GraphVisualization
	{
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x14C4484", Offset = "0x14C4484", VA = "0x14C4484")]
		set
		{
		}
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x14C3C08", Offset = "0x14C3C08", VA = "0x14C3C08", Slot = "14")]
	protected override bool TryConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x14C448C", Offset = "0x14C448C", VA = "0x14C448C")]
	private void Reset()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x14C4794", Offset = "0x14C4794", VA = "0x14C4794")]
	public void Clear()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x14C483C", Offset = "0x14C483C", VA = "0x14C483C", Slot = "10")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x14C4964", Offset = "0x14C4964", VA = "0x14C4964")]
	public void OnDropdownChanged(int value)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x14C49E8", Offset = "0x14C49E8", VA = "0x14C49E8")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7A9F4", Offset = "0xB7A9F4")]
	private void ResetShaderButton()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x14C44E0", Offset = "0x14C44E0", VA = "0x14C44E0")]
	private void ResetGraphShader()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x14C4CB0", Offset = "0x14C4CB0", VA = "0x14C4CB0", Slot = "11")]
	public override void CyclePer()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x14C4288", Offset = "0x14C4288", VA = "0x14C4288")]
	private void SetPerText()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x14C4D44", Offset = "0x14C4D44", VA = "0x14C4D44", Slot = "13")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x14C5060", Offset = "0x14C5060", VA = "0x14C5060")]
	private void UpdateContinuousTick(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x14C56C4", Offset = "0x14C56C4", VA = "0x14C56C4")]
	private void UpdateIntermittentTick(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x14C5C08", Offset = "0x14C5C08", VA = "0x14C5C08")]
	private void UpdateIntermittentTime(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x14C69A8", Offset = "0x14C69A8", VA = "0x14C69A8")]
	private void ApplyScaling(ref float min, ref float max)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x14C6B24", Offset = "0x14C6B24", VA = "0x14C6B24")]
	private void UpdateUiText(float min, float max, float avg, float last)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x14C719C", Offset = "0x14C719C", VA = "0x14C719C")]
	private float GetIntermittentAverageInfo(ref IStatsBuffer data, float sum)
	{
		return default(float);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x14C5EE4", Offset = "0x14C5EE4", VA = "0x14C5EE4")]
	private void UpdateTickValueHistogram(ref IStatsBuffer data)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x14C7490", Offset = "0x14C7490", VA = "0x14C7490")]
	public static FusionGraph Create(FusionStats iFusionStats, Simulation.Statistics.StatSourceTypes statSourceType, int statId, RectTransform parentRT)
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x14C75C8", Offset = "0x14C75C8", VA = "0x14C75C8")]
	public void Generate(Simulation.Statistics.StatSourceTypes type, int statId, RectTransform root)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x14C7D38", Offset = "0x14C7D38", VA = "0x14C7D38", Slot = "12")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AA34", Offset = "0xB7AA34")]
	public override void CalculateLayout()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x14C8AAC", Offset = "0x14C8AAC", VA = "0x14C8AAC")]
	public FusionGraph()
	{
	}
}
[Token(Token = "0x200012E")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AA74", Offset = "0xB5AA74")]
[ExecuteAlways]
public class FusionStats : Fusion.Behaviour
{
	[Token(Token = "0x200012F")]
	public enum StatCanvasTypes
	{
		[Token(Token = "0x4000729")]
		Overlay,
		[Token(Token = "0x400072A")]
		GameObject
	}

	[Token(Token = "0x2000130")]
	public enum DefaultLayouts
	{
		[Token(Token = "0x400072C")]
		Custom,
		[Token(Token = "0x400072D")]
		Left,
		[Token(Token = "0x400072E")]
		Right,
		[Token(Token = "0x400072F")]
		UpperLeft,
		[Token(Token = "0x4000730")]
		UpperRight,
		[Token(Token = "0x4000731")]
		Full
	}

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<NetworkRunner, List<FusionStats>> _statsForRunnerLookup;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, FusionStats> _activeGuids;

	[Token(Token = "0x40006BD")]
	public const Simulation.Statistics.SimStatFlags DefaultSimStatsMask = Simulation.Statistics.SimStatFlags.ForwardSimCount | Simulation.Statistics.SimStatFlags.ResimCount | Simulation.Statistics.SimStatFlags.PacketSize;

	[Token(Token = "0x40006BE")]
	private const int SCREEN_SCALE_W = 1080;

	[Token(Token = "0x40006BF")]
	private const int SCREEN_SCALE_H = 1080;

	[Token(Token = "0x40006C0")]
	private const float TEXT_MARGIN = 0.25f;

	[Token(Token = "0x40006C1")]
	private const float TITLE_HEIGHT = 20f;

	[Token(Token = "0x40006C2")]
	private const int MARGIN = 6;

	[Token(Token = "0x40006C3")]
	private const int PAD = 10;

	[Token(Token = "0x40006C4")]
	private const string PLAY_TEXT = "PLAY";

	[Token(Token = "0x40006C5")]
	private const string PAUS_TEXT = "PAUSE";

	[Token(Token = "0x40006C6")]
	private const string SHOW_TEXT = "SHOW";

	[Token(Token = "0x40006C7")]
	private const string HIDE_TEXT = "HIDE";

	[Token(Token = "0x40006C8")]
	private const string CLER_TEXT = "CLEAR";

	[Token(Token = "0x40006C9")]
	private const string CNVS_TEXT = "CANVAS";

	[Token(Token = "0x40006CA")]
	private const string CLSE_TEXT = "CLOSE";

	[Token(Token = "0x40006CB")]
	private const string PLAY_ICON = "►";

	[Token(Token = "0x40006CC")]
	private const string PAUS_ICON = "װ";

	[Token(Token = "0x40006CD")]
	private const string HIDE_ICON = "▼";

	[Token(Token = "0x40006CE")]
	private const string SHOW_ICON = "▲";

	[Token(Token = "0x40006CF")]
	private const string CLER_ICON = "ᴓ";

	[Token(Token = "0x40006D0")]
	private const string CNVS_ICON = "ﬦ";

	[Token(Token = "0x40006D1")]
	private const string CLSE_ICON = "x";

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	[AttributeAttribute(Name = "UnitAttribute", RVA = "0xB637C4", Offset = "0xB637C4")]
	public float RedrawInterval;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB63828", Offset = "0xB63828")]
	[InlineHelp]
	[SerializeField]
	private StatCanvasTypes _canvasType;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[InlineHelp]
	[SerializeField]
	private bool _showButtonLabels;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB638BC", Offset = "0xB638BC")]
	[MultiPropertyDrawersFix]
	private int _maxHeaderHeight;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63920", Offset = "0xB63920")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB63920", Offset = "0xB63920")]
	[MultiPropertyDrawersFix]
	public float CanvasScale;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB639A0", Offset = "0xB639A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB639A0", Offset = "0xB639A0")]
	[MultiPropertyDrawersFix]
	public float CanvasDistance;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63A20", Offset = "0xB63A20")]
	[AttributeAttribute(Name = "NormalizedRectAttribute", RVA = "0xB63A20", Offset = "0xB63A20")]
	[MultiPropertyDrawersFix]
	private Rect _gameObjectRect;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63AB0", Offset = "0xB63AB0")]
	[AttributeAttribute(Name = "NormalizedRectAttribute", RVA = "0xB63AB0", Offset = "0xB63AB0")]
	[MultiPropertyDrawersFix]
	private Rect _overlayRect;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB63B40", Offset = "0xB63B40")]
	[InlineHelp]
	[SerializeField]
	private FusionGraph.Layouts _defaultLayout;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[InlineHelp]
	[SerializeField]
	private bool _noTextOverlap;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[InlineHelp]
	[SerializeField]
	private bool _noGraphShader;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[InlineHelp]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB63C0C", Offset = "0xB63C0C")]
	[MultiPropertyDrawersFix]
	public int GraphColumnCount;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63C5C", Offset = "0xB63C5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB63C5C", Offset = "0xB63C5C")]
	[MultiPropertyDrawersFix]
	private int _graphMaxWidth;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "WarnIfAttribute", RVA = "0xB63CE8", Offset = "0xB63CE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB63CE8", Offset = "0xB63CE8")]
	[InlineHelp]
	private bool _enableObjectStats;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63D84", Offset = "0xB63D84")]
	private NetworkObject _object;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63DE0", Offset = "0xB63DE0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB63DE0", Offset = "0xB63DE0")]
	[MultiPropertyDrawersFix]
	private int _objectTitleHeight;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63E68", Offset = "0xB63E68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB63E68", Offset = "0xB63E68")]
	[InlineHelp]
	[SerializeField]
	[MultiPropertyDrawersFix]
	private int _objectIdsHeight;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB63EF0", Offset = "0xB63EF0")]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB63EF0", Offset = "0xB63EF0")]
	[SerializeField]
	[MultiPropertyDrawersFix]
	private int _objectMetersHeight;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[InlineHelp]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB63F78", Offset = "0xB63F78")]
	[AttributeAttribute(Name = "EditorDisabledAttribute", RVA = "0xB63F78", Offset = "0xB63F78")]
	[MultiPropertyDrawersFix]
	private NetworkRunner _runner;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[InlineHelp]
	public bool InitializeAllGraphs;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "VersaMaskAttribute", RVA = "0xB64008", Offset = "0xB64008")]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	public SimulationModes ConnectTo;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "VersaMaskAttribute", RVA = "0xB64058", Offset = "0xB64058")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB64058", Offset = "0xB64058")]
	[MultiPropertyDrawersFix]
	private Simulation.Statistics.ObjStatFlags _includedObjStats;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[InlineHelp]
	[AttributeAttribute(Name = "VersaMaskAttribute", RVA = "0xB640DC", Offset = "0xB640DC")]
	[MultiPropertyDrawersFix]
	[SerializeField]
	private Simulation.Statistics.NetStatFlags _includedNetStats;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "VersaMaskAttribute", RVA = "0xB6413C", Offset = "0xB6413C")]
	[MultiPropertyDrawersFix]
	private Simulation.Statistics.SimStatFlags _includedSimStats;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6419C", Offset = "0xB6419C")]
	[InlineHelp]
	public bool AutoDestroy;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	[InlineHelp]
	[SerializeField]
	public bool EnforceSingle;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB64230", Offset = "0xB64230")]
	public string Guid;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB6428C", Offset = "0xB6428C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6428C", Offset = "0xB6428C")]
	[MultiPropertyDrawersFix]
	private bool _modifyColors;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB64324", Offset = "0xB64324")]
	[InlineHelp]
	private Color _graphColorGood;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB64388", Offset = "0xB64388")]
	[InlineHelp]
	private Color _graphColorWarn;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB643EC", Offset = "0xB643EC")]
	private Color _graphColorBad;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB64454", Offset = "0xB64454")]
	private Color _graphColorFlag;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB644BC", Offset = "0xB644BC")]
	private Color _fontColor;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB64524", Offset = "0xB64524")]
	private Color PanelColor;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB6458C", Offset = "0xB6458C")]
	[InlineHelp]
	[SerializeField]
	private Color _simDataBackColor;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB645F0", Offset = "0xB645F0")]
	private Color _netDataBackColor;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB64658", Offset = "0xB64658")]
	private Color _objDataBackColor;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	[HideInInspector]
	private FusionGraph[] _simGraphs;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	[HideInInspector]
	private FusionGraph[] _objGraphs;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	[HideInInspector]
	private FusionGraph[] _netGraphs;

	[NonSerialized]
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<IFusionStatsView> _foundViews;

	[NonSerialized]
	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<FusionGraph> _foundGraphs;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	[HideInInspector]
	private Text _titleText;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	[HideInInspector]
	private Text _clearIcon;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	[HideInInspector]
	private Text _pauseIcon;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	[HideInInspector]
	private Text _togglIcon;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	[HideInInspector]
	private Text _closeIcon;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	[HideInInspector]
	private Text _canvsIcon;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	[HideInInspector]
	private Text _clearLabel;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	[HideInInspector]
	private Text _pauseLabel;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	[HideInInspector]
	private Text _togglLabel;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	[HideInInspector]
	private Text _closeLabel;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	[HideInInspector]
	private Text _canvsLabel;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[HideInInspector]
	private Text _objectNameText;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	[HideInInspector]
	private GridLayoutGroup _graphGridLayoutGroup;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	[HideInInspector]
	private Canvas _canvas;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _canvasRT;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _rootPanelRT;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _guidesRT;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _headerRT;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _statsPanelRT;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _graphsLayoutRT;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _titleRT;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _buttonsRT;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _objectTitlePanelRT;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _objectIdsGroupRT;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _objectMetersPanelRT;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _clientIdPanelRT;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	[HideInInspector]
	private RectTransform _authorityPanelRT;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	[SerializeField]
	[HideInInspector]
	private Button _titleButton;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[SerializeField]
	[HideInInspector]
	private Button _objctButton;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[SerializeField]
	[HideInInspector]
	private Button _clearButton;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[SerializeField]
	[HideInInspector]
	private Button _togglButton;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	[HideInInspector]
	private Button _pauseButton;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[SerializeField]
	[HideInInspector]
	private Button _closeButton;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[SerializeField]
	[HideInInspector]
	private Button _canvsButton;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Font _font;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool _hidden;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	private bool _paused;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private int _layoutDirty;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool _activeDirty;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private double _currentDrawTime;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private double _delayDrawUntil;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool? _newInputSystemFound;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private string _previousObjectTitle;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float _lastLayoutUpdate;

	[Token(Token = "0x1700006C")]
	public static Simulation.Statistics.NetStatFlags DefaultNetStatsMask
	{
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x14CA2E4", Offset = "0x14CA2E4", VA = "0x14CA2E4")]
		get
		{
			return default(Simulation.Statistics.NetStatFlags);
		}
	}

	[Token(Token = "0x1700006D")]
	private bool ShowColorControls
	{
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x14CA2EC", Offset = "0x14CA2EC", VA = "0x14CA2EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006E")]
	private bool IsNotPlaying
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x14CA328", Offset = "0x14CA328", VA = "0x14CA328")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006F")]
	public StatCanvasTypes CanvasType
	{
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x14CA348", Offset = "0x14CA348", VA = "0x14CA348")]
		get
		{
			return default(StatCanvasTypes);
		}
		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x14CA350", Offset = "0x14CA350", VA = "0x14CA350")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public bool ShowButtonLabels
	{
		[Token(Token = "0x6000500")]
		[Address(RVA = "0x14CA380", Offset = "0x14CA380", VA = "0x14CA380")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x14CA388", Offset = "0x14CA388", VA = "0x14CA388")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public int MaxHeaderHeight
	{
		[Token(Token = "0x6000502")]
		[Address(RVA = "0x14CA3AC", Offset = "0x14CA3AC", VA = "0x14CA3AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000503")]
		[Address(RVA = "0x14CA3B4", Offset = "0x14CA3B4", VA = "0x14CA3B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public Rect GameObjectRect
	{
		[Token(Token = "0x6000504")]
		[Address(RVA = "0x14CA3D4", Offset = "0x14CA3D4", VA = "0x14CA3D4")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000505")]
		[Address(RVA = "0x14CA3E0", Offset = "0x14CA3E0", VA = "0x14CA3E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public Rect OverlayRect
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x14CA404", Offset = "0x14CA404", VA = "0x14CA404")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x6000507")]
		[Address(RVA = "0x14CA410", Offset = "0x14CA410", VA = "0x14CA410")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public FusionGraph.Layouts DefaultLayout
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0x14CA434", Offset = "0x14CA434", VA = "0x14CA434")]
		get
		{
			return default(FusionGraph.Layouts);
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0x14CA43C", Offset = "0x14CA43C", VA = "0x14CA43C")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool NoTextOverlap
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0x14CA45C", Offset = "0x14CA45C", VA = "0x14CA45C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600050B")]
		[Address(RVA = "0x14CA464", Offset = "0x14CA464", VA = "0x14CA464")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public bool NoGraphShader
	{
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x14CA488", Offset = "0x14CA488", VA = "0x14CA488")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x14CA490", Offset = "0x14CA490", VA = "0x14CA490")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public int GraphMaxWidth
	{
		[Token(Token = "0x600050E")]
		[Address(RVA = "0x14CA4B4", Offset = "0x14CA4B4", VA = "0x14CA4B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600050F")]
		[Address(RVA = "0x14CA4BC", Offset = "0x14CA4BC", VA = "0x14CA4BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public bool EnableObjectStats
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x14CA4DC", Offset = "0x14CA4DC", VA = "0x14CA4DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x14CA4E4", Offset = "0x14CA4E4", VA = "0x14CA4E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	private bool ShowMissingNetObjWarning
	{
		[Token(Token = "0x6000512")]
		[Address(RVA = "0x14CA508", Offset = "0x14CA508", VA = "0x14CA508")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007A")]
	public NetworkObject Object
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0x14C8D38", Offset = "0x14C8D38", VA = "0x14C8D38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public int ObjectTitleHeight
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x14CA598", Offset = "0x14CA598", VA = "0x14CA598")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x14CA5A0", Offset = "0x14CA5A0", VA = "0x14CA5A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public int ObjectIdsHeight
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0x14CA5C0", Offset = "0x14CA5C0", VA = "0x14CA5C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000517")]
		[Address(RVA = "0x14CA5C8", Offset = "0x14CA5C8", VA = "0x14CA5C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public int ObjectMetersHeight
	{
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x14CA5E8", Offset = "0x14CA5E8", VA = "0x14CA5E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x14CA5F0", Offset = "0x14CA5F0", VA = "0x14CA5F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public NetworkRunner Runner
	{
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x14C6FC4", Offset = "0x14C6FC4", VA = "0x14C6FC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600051B")]
		[Address(RVA = "0x14C9A90", Offset = "0x14C9A90", VA = "0x14C9A90")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public Simulation.Statistics.ObjStatFlags IncludedObjectStats
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0x14CAA10", Offset = "0x14CAA10", VA = "0x14CAA10")]
		get
		{
			return default(Simulation.Statistics.ObjStatFlags);
		}
		[Token(Token = "0x600051D")]
		[Address(RVA = "0x14CAA18", Offset = "0x14CAA18", VA = "0x14CAA18")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public Simulation.Statistics.NetStatFlags IncludedNetStats
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x14CAA28", Offset = "0x14CAA28", VA = "0x14CAA28")]
		get
		{
			return default(Simulation.Statistics.NetStatFlags);
		}
		[Token(Token = "0x600051F")]
		[Address(RVA = "0x14CAA30", Offset = "0x14CAA30", VA = "0x14CAA30")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public Simulation.Statistics.SimStatFlags IncludedSimStats
	{
		[Token(Token = "0x6000520")]
		[Address(RVA = "0x14CAA40", Offset = "0x14CAA40", VA = "0x14CAA40")]
		get
		{
			return default(Simulation.Statistics.SimStatFlags);
		}
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x14CAA48", Offset = "0x14CAA48", VA = "0x14CAA48")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public bool ModifyColors
	{
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x14CAA58", Offset = "0x14CAA58", VA = "0x14CAA58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000083")]
	public Color FontColor
	{
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x14CAA60", Offset = "0x14CAA60", VA = "0x14CAA60")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000084")]
	public Color GraphColorGood
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x14CAA6C", Offset = "0x14CAA6C", VA = "0x14CAA6C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000085")]
	public Color GraphColorWarn
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x14CAA78", Offset = "0x14CAA78", VA = "0x14CAA78")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000086")]
	public Color GraphColorBad
	{
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x14CAA84", Offset = "0x14CAA84", VA = "0x14CAA84")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000087")]
	public Color GraphColorFlag
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x14CAA90", Offset = "0x14CAA90", VA = "0x14CAA90")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000088")]
	public Color SimDataBackColor
	{
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x14CAA9C", Offset = "0x14CAA9C", VA = "0x14CAA9C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000089")]
	public Color NetDataBackColor
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x14CAAB0", Offset = "0x14CAAB0", VA = "0x14CAAB0")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700008A")]
	public Color ObjDataBackColor
	{
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x14CAAC4", Offset = "0x14CAAC4", VA = "0x14CAAC4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700008B")]
	public Rect CurrentRect
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0x14CAAD8", Offset = "0x14CAAD8", VA = "0x14CAAD8")]
		get
		{
			return default(Rect);
		}
	}

	[Token(Token = "0x1700008C")]
	private Shader Shader
	{
		[Token(Token = "0x600052D")]
		[Address(RVA = "0x14CAB1C", Offset = "0x14CAB1C", VA = "0x14CAB1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008D")]
	public static bool NewInputSystemFound
	{
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x14CCA00", Offset = "0x14CCA00", VA = "0x14CCA00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008E")]
	private bool _graphsAreMissing
	{
		[Token(Token = "0x6000536")]
		[Address(RVA = "0x14CCC60", Offset = "0x14CCC60", VA = "0x14CCC60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x14C9B58", Offset = "0x14C9B58", VA = "0x14C9B58")]
	internal static FusionStats CreateInternal([Optional] NetworkRunner runner, DefaultLayouts layout = DefaultLayouts.Left, [Optional] Simulation.Statistics.NetStatFlags? netStatsMask, [Optional] Simulation.Statistics.SimStatFlags? simStatsMask)
	{
		return null;
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x14C9C30", Offset = "0x14C9C30", VA = "0x14C9C30")]
	public static FusionStats Create([Optional] Transform parent, [Optional] NetworkRunner runner, [Optional] DefaultLayouts? screenLayout, [Optional] DefaultLayouts? objectLayout, [Optional] Simulation.Statistics.NetStatFlags? netStatsMask, [Optional] Simulation.Statistics.SimStatFlags? simStatsMask)
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x14CA224", Offset = "0x14CA224", VA = "0x14CA224")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB7AA74", Offset = "0xB7AA74")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x14CA910", Offset = "0x14CA910", VA = "0x14CA910")]
	private void UpdateTitle()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x14CA36C", Offset = "0x14CA36C", VA = "0x14CA36C")]
	private void DirtyLayout(int minimumRefreshes = 1)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x14C9E30", Offset = "0x14C9E30", VA = "0x14C9E30")]
	private void ResetInternal([Optional] bool? enableObjectStats, [Optional] Simulation.Statistics.NetStatFlags? netStatsMask, [Optional] Simulation.Statistics.SimStatFlags? simStatsMask, [Optional] DefaultLayouts? objectLayout, [Optional] DefaultLayouts? screenLayout)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x14CBC58", Offset = "0x14CBC58", VA = "0x14CBC58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x14CBFBC", Offset = "0x14CBFBC", VA = "0x14CBFBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x14CC7F4", Offset = "0x14CC7F4", VA = "0x14CC7F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x14CC938", Offset = "0x14CC938", VA = "0x14CC938")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AA88", Offset = "0xB7AA88")]
	private void DestroyGraphs()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x14CBFFC", Offset = "0x14CBFFC", VA = "0x14CBFFC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x14CAF54", Offset = "0x14CAF54", VA = "0x14CAF54")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AAE4", Offset = "0xB7AAE4")]
	private void GenerateGraphs()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x14CA74C", Offset = "0x14CA74C", VA = "0x14CA74C")]
	private void AssociateWithRunner(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x14CA610", Offset = "0x14CA610", VA = "0x14CA610")]
	private void DisassociateWithRunner(NetworkRunner runner)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x14CCFAC", Offset = "0x14CCFAC", VA = "0x14CCFAC")]
	private void Pause()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x14CD250", Offset = "0x14CD250", VA = "0x14CD250")]
	private void Toggle()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x14CD5B4", Offset = "0x14CD5B4", VA = "0x14CD5B4")]
	private void Clear()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x14CD7E0", Offset = "0x14CD7E0", VA = "0x14CD7E0")]
	private void ToggleCanvasType()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x14CE6A4", Offset = "0x14CE6A4", VA = "0x14CE6A4")]
	private void Close()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x14CE71C", Offset = "0x14CE71C", VA = "0x14CE71C")]
	private void PingSelectObject()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x14CE720", Offset = "0x14CE720", VA = "0x14CE720")]
	private void PingSelectFusionStats()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x14CE724", Offset = "0x14CE724", VA = "0x14CE724")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x14CEEAC", Offset = "0x14CEEAC", VA = "0x14CEEAC")]
	private void RefreshObjectValues()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x14CCE54", Offset = "0x14CCE54", VA = "0x14CCE54")]
	public FusionGraph CreateGraph(Simulation.Statistics.StatSourceTypes type, int statId, RectTransform parentRT)
	{
		return null;
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x14CEA7C", Offset = "0x14CEA7C", VA = "0x14CEA7C")]
	private void ReapplyEnabled()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x14CD80C", Offset = "0x14CD80C", VA = "0x14CD80C")]
	private void CalculateLayout()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x14CACC0", Offset = "0x14CACC0", VA = "0x14CACC0")]
	private void ApplyDefaultLayout(DefaultLayouts defaults, [Optional] StatCanvasTypes? applyForCanvasType)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x14CEF94", Offset = "0x14CEF94", VA = "0x14CEF94")]
	public FusionStats()
	{
	}
}
[Token(Token = "0x2000131")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AAB8", Offset = "0xB5AAB8")]
public abstract class FusionGraphBase : Fusion.Behaviour, IFusionStatsView
{
	[Token(Token = "0x2000132")]
	public enum StatsPer
	{
		[Token(Token = "0x4000745")]
		Default = 0,
		[Token(Token = "0x4000746")]
		Individual = 1,
		[Token(Token = "0x4000747")]
		Tick = 2,
		[Token(Token = "0x4000748")]
		Second = 4
	}

	[Token(Token = "0x4000732")]
	protected const int PAD = 10;

	[Token(Token = "0x4000733")]
	protected const int MRGN = 6;

	[Token(Token = "0x4000734")]
	protected const int MAX_FONT_SIZE_WITH_GRAPH = 24;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	protected Text LabelTitle;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	protected Image BackImage;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[InlineHelp]
	[SerializeField]
	protected Simulation.Statistics.StatSourceTypes _statSourceType;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "CastEnumAttribute", RVA = "0xB64F80", Offset = "0xB64F80")]
	protected int _statId;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[InlineHelp]
	public StatsPer StatsPerDefault;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[InlineHelp]
	public float WarnThreshold;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[InlineHelp]
	public float ErrorThreshold;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected IStatsBuffer _statsBuffer;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool _isOverlay;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected FusionStats _fusionStats;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool _layoutDirty;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected Simulation.Statistics.StatsPer CurrentPer;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Simulation.Statistics.StatSourceInfo StatSourceInfo;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[HideInInspector]
	private Simulation.Statistics.StatSourceTypes _prevStatSourceType;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	[HideInInspector]
	private int _prevStatId;

	[Token(Token = "0x1700008F")]
	public Simulation.Statistics.StatSourceTypes StateSourceType
	{
		[Token(Token = "0x6000549")]
		[Address(RVA = "0x14C8B5C", Offset = "0x14C8B5C", VA = "0x14C8B5C")]
		get
		{
			return default(Simulation.Statistics.StatSourceTypes);
		}
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x14C8B64", Offset = "0x14C8B64", VA = "0x14C8B64")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public int StatId
	{
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x14C8B78", Offset = "0x14C8B78", VA = "0x14C8B78")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600054C")]
		[Address(RVA = "0x14C8B80", Offset = "0x14C8B80", VA = "0x14C8B80")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public IStatsBuffer StatsBuffer
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x14C5024", Offset = "0x14C5024", VA = "0x14C5024")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000092")]
	public bool IsOverlay
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0x14C8BE0", Offset = "0x14C8BE0", VA = "0x14C8BE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600054E")]
		[Address(RVA = "0x14C8B94", Offset = "0x14C8B94", VA = "0x14C8B94")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	protected virtual Color BackColor
	{
		[Token(Token = "0x6000550")]
		[Address(RVA = "0x14C8BE8", Offset = "0x14C8BE8", VA = "0x14C8BE8", Slot = "9")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000094")]
	protected Type CastToStatType
	{
		[Token(Token = "0x6000551")]
		[Address(RVA = "0x14C8C60", Offset = "0x14C8C60", VA = "0x14C8C60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x14C4BFC", Offset = "0x14C4BFC", VA = "0x14C4BFC")]
	protected FusionStats LocateParentFusionStats()
	{
		return null;
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x14C8D34", Offset = "0x14C8D34", VA = "0x14C8D34", Slot = "10")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x14C4CEC", Offset = "0x14C4CEC", VA = "0x14C4CEC", Slot = "11")]
	public virtual void CyclePer()
	{
	}

	[Token(Token = "0x6000555")]
	public abstract void CalculateLayout();

	[Token(Token = "0x6000556")]
	public abstract void Refresh();

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x14C3EF0", Offset = "0x14C3EF0", VA = "0x14C3EF0", Slot = "14")]
	protected virtual bool TryConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x14C891C", Offset = "0x14C891C", VA = "0x14C891C")]
	protected void ApplyTitleText()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x14C8DEC", Offset = "0x14C8DEC", VA = "0x14C8DEC")]
	protected void CheckIfValidIncurrentMode(NetworkRunner runner)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x14C8B4C", Offset = "0x14C8B4C", VA = "0x14C8B4C")]
	protected FusionGraphBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x600055B")]
	[Address(RVA = "0x14C8FB8", Offset = "0x14C8FB8", VA = "0x14C8FB8", Slot = "7")]
	private bool Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled()
	{
		return default(bool);
	}

	[SpecialName]
	[Token(Token = "0x600055C")]
	[Address(RVA = "0x14C8FC0", Offset = "0x14C8FC0", VA = "0x14C8FC0", Slot = "8")]
	private Transform Fusion.StatsInternal.IFusionStatsView.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x2000133")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AAEC", Offset = "0xB5AAEC")]
[ExecuteAlways]
public class FusionStatsBillboard : Fusion.Behaviour
{
	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	public Camera Camera;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float _lastCameraFindTime;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera _currentCam;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FusionStats _fusionStats;

	[Token(Token = "0x17000095")]
	private Camera MainCamera
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x14CF3F8", Offset = "0x14CF3F8", VA = "0x14CF3F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x14CF3A4", Offset = "0x14CF3A4", VA = "0x14CF3A4")]
		set
		{
		}
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x14CF310", Offset = "0x14CF310", VA = "0x14CF310")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x14CF36C", Offset = "0x14CF36C", VA = "0x14CF36C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x14CF370", Offset = "0x14CF370", VA = "0x14CF370")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x14CF488", Offset = "0x14CF488", VA = "0x14CF488")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x14CAB78", Offset = "0x14CAB78", VA = "0x14CAB78")]
	public void UpdateLookAt()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x14CF48C", Offset = "0x14CF48C", VA = "0x14CF48C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB7AB40", Offset = "0xB7AB40")]
	private static void ResetStatics()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x14CF4EC", Offset = "0x14CF4EC", VA = "0x14CF4EC")]
	public FusionStatsBillboard()
	{
	}
}
[Token(Token = "0x2000134")]
public class FusionStatsMeterBar : FusionGraphBase
{
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float HoldPeakTime;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float DecayTime;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[InlineHelp]
	public int MeterMax;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[InlineHelp]
	[SerializeField]
	private bool _showUITargets;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB650D4", Offset = "0xB650D4")]
	public Text ValueLabel;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB65118", Offset = "0xB65118")]
	public Image Bar;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private double _currentDisplayValue;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private double _currentBarValue;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Color CurrentColor;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private double _lastImportedSampleTickTime;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private double _max;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private double _total;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _lastPeakSetTime;

	[Token(Token = "0x17000096")]
	protected override Color BackColor
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x14CF4F4", Offset = "0x14CF4F4", VA = "0x14CF4F4", Slot = "9")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x14CF570", Offset = "0x14CF570", VA = "0x14CF570", Slot = "10")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x14CF7D8", Offset = "0x14CF7D8", VA = "0x14CF7D8", Slot = "13")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x14D0054", Offset = "0x14D0054", VA = "0x14D0054")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x14CFEE4", Offset = "0x14CFEE4", VA = "0x14CFEE4")]
	public void SetValue(double rawvalue)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x14D0140", Offset = "0x14D0140", VA = "0x14D0140")]
	private void SetBar(double value)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x14D0294", Offset = "0x14D0294", VA = "0x14D0294", Slot = "12")]
	public override void CalculateLayout()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x14CCCCC", Offset = "0x14CCCCC", VA = "0x14CCCCC")]
	public static FusionStatsMeterBar Create(RectTransform parent, FusionStats fusionStats, Simulation.Statistics.StatSourceTypes statSourceType, int statId, float warnThreshold, float alertThreshold)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x14D03F4", Offset = "0x14D03F4", VA = "0x14D03F4")]
	public void GenerateMeter()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x14D081C", Offset = "0x14D081C", VA = "0x14D081C")]
	public FusionStatsMeterBar()
	{
	}
}
[Token(Token = "0x2000135")]
public class FusionStatsObjectIds : Fusion.Behaviour, IFusionStatsView
{
	[Token(Token = "0x400075A")]
	protected const int PAD = 10;

	[Token(Token = "0x400075B")]
	protected const int MARGIN = 6;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Text _inputValueText;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Text _stateValueText;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private Text _objectIdLabel;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private Image _stateAuthBackImage;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private Image _inputAuthBackImage;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FusionStats _fusionStats;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color _noneAuthColor;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Color _inputAuthColor;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Color _stateAuthColor;

	[Token(Token = "0x4000765")]
	private const float LABEL_DIVIDING_POINT = 0.7f;

	[Token(Token = "0x4000766")]
	private const float TEXT_PAD = 4f;

	[Token(Token = "0x4000767")]
	private const float TEXT_PAD_HORIZ = 6f;

	[Token(Token = "0x4000768")]
	private const int MAX_TAG_FONT_SIZE = 18;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _previousHasInputAuth;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _previousHasStateAuth;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _previousInputAuthValue;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _previousStateAuthValue;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private uint _previousObjectIdValue;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x12531F0", Offset = "0x12531F0", VA = "0x12531F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x125324C", Offset = "0x125324C", VA = "0x125324C", Slot = "4")]
	private void Fusion.StatsInternal.IFusionStatsView.Initialize()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1253250", Offset = "0x1253250", VA = "0x1253250")]
	public static RectTransform Create(RectTransform parent, FusionStats fusionStats)
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x12535EC", Offset = "0x12535EC", VA = "0x12535EC")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1253CF4", Offset = "0x1253CF4", VA = "0x1253CF4")]
	private RectTransform AddAuthorityPanel(RectTransform parent, string label, ref Text valueText, ref Image backImage)
	{
		return null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x12540CC", Offset = "0x12540CC", VA = "0x12540CC", Slot = "5")]
	private void Fusion.StatsInternal.IFusionStatsView.CalculateLayout()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x12540D0", Offset = "0x12540D0", VA = "0x12540D0", Slot = "6")]
	private void Fusion.StatsInternal.IFusionStatsView.Refresh()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1254528", Offset = "0x1254528", VA = "0x1254528")]
	public FusionStatsObjectIds()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1254634", Offset = "0x1254634", VA = "0x1254634", Slot = "7")]
	private bool Fusion.StatsInternal.IFusionStatsView.get_isActiveAndEnabled()
	{
		return default(bool);
	}

	[SpecialName]
	[Token(Token = "0x600057A")]
	[Address(RVA = "0x125463C", Offset = "0x125463C", VA = "0x125463C", Slot = "8")]
	private Transform Fusion.StatsInternal.IFusionStatsView.get_transform()
	{
		return null;
	}
}
[Token(Token = "0x2000136")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AB30", Offset = "0xB5AB30")]
[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5AB30", Offset = "0xB5AB30")]
public class PlayerAOIPrototype : NetworkBehaviour
{
	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[InlineHelp]
	[SerializeField]
	[MultiPropertyDrawersFix]
	protected bool DrawAreaOfInterestRadius;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[InlineHelp]
	public float Radius;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Changed<PlayerAOIPrototype> $IL2CPP_CHANGED;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ChangedDelegate<PlayerAOIPrototype> $IL2CPP_CHANGED_DELEGATE;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static NetworkBehaviourCallbacks<PlayerAOIPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xF55AF0", Offset = "0xF55AF0", VA = "0xF55AF0", Slot = "8")]
	public override void FixedUpdateNetwork()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xF55C08", Offset = "0xF55C08", VA = "0xF55C08")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xF55CB4", Offset = "0xF55CB4", VA = "0xF55CB4")]
	public PlayerAOIPrototype()
	{
	}
}
[Token(Token = "0x2000137")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AB78", Offset = "0xB5AB78")]
[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5AB78", Offset = "0xB5AB78")]
public class ControllerPrototype : NetworkBehaviour
{
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected NetworkCharacterControllerPrototype _ncc;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected NetworkRigidbody _nrb;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected NetworkRigidbody2D _nrb2d;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected NetworkTransform _nt;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB652CC", Offset = "0xB652CC")]
	private Vector3 _MovementDirection;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool TransformLocal;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB65320", Offset = "0xB65320")]
	public float Speed;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Changed<ControllerPrototype> $IL2CPP_CHANGED;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ChangedDelegate<ControllerPrototype> $IL2CPP_CHANGED_DELEGATE;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static NetworkBehaviourCallbacks<ControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

	[Token(Token = "0x17000097")]
	[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB89E14", Offset = "0xB89E14")]
	[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB89E14", Offset = "0xB89E14")]
	public Vector3 MovementDirection
	{
		[Token(Token = "0x600057E")]
		[Address(RVA = "0x11AA07C", Offset = "0x11AA07C", VA = "0x11AA07C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x11AA104", Offset = "0x11AA104", VA = "0x11AA104")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	private bool ShowSpeed
	{
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x11AA214", Offset = "0x11AA214", VA = "0x11AA214")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x11AA2C0", Offset = "0x11AA2C0", VA = "0x11AA2C0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x11AA49C", Offset = "0x11AA49C", VA = "0x11AA49C", Slot = "16")]
	public override void Spawned()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x11AA2C4", Offset = "0x11AA2C4", VA = "0x11AA2C4")]
	private void CacheComponents()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x11AA4A0", Offset = "0x11AA4A0", VA = "0x11AA4A0", Slot = "8")]
	public override void FixedUpdateNetwork()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x11AA970", Offset = "0x11AA970", VA = "0x11AA970")]
	public ControllerPrototype()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x11AA980", Offset = "0x11AA980", VA = "0x11AA980", Slot = "13")]
	public override void CopyBackingFieldsToState(bool P_0)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x11AA98C", Offset = "0x11AA98C", VA = "0x11AA98C", Slot = "14")]
	public override void CopyStateToBackingFields()
	{
	}
}
[Token(Token = "0x2000138")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5ABC0", Offset = "0xB5ABC0")]
public class InputBehaviourPrototype : Fusion.Behaviour, INetworkRunnerCallbacks
{
	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1C5BDAC", Offset = "0x1C5BDAC", VA = "0x1C5BDAC", Slot = "6")]
	public void OnInput(NetworkRunner runner, NetworkInput input)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1C5BFBC", Offset = "0x1C5BFBC", VA = "0x1C5BFBC", Slot = "7")]
	public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1C5BFC0", Offset = "0x1C5BFC0", VA = "0x1C5BFC0", Slot = "9")]
	public void OnConnectedToServer(NetworkRunner runner)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1C5BFC4", Offset = "0x1C5BFC4", VA = "0x1C5BFC4", Slot = "12")]
	public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1C5BFC8", Offset = "0x1C5BFC8", VA = "0x1C5BFC8", Slot = "11")]
	public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1C5BFCC", Offset = "0x1C5BFCC", VA = "0x1C5BFCC", Slot = "10")]
	public void OnDisconnectedFromServer(NetworkRunner runner)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1C5BFD0", Offset = "0x1C5BFD0", VA = "0x1C5BFD0", Slot = "4")]
	public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1C5BFD4", Offset = "0x1C5BFD4", VA = "0x1C5BFD4", Slot = "5")]
	public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1C5BFD8", Offset = "0x1C5BFD8", VA = "0x1C5BFD8", Slot = "13")]
	public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1C5BFDC", Offset = "0x1C5BFDC", VA = "0x1C5BFDC", Slot = "8")]
	public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1C5BFE0", Offset = "0x1C5BFE0", VA = "0x1C5BFE0", Slot = "14")]
	public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1C5BFE4", Offset = "0x1C5BFE4", VA = "0x1C5BFE4", Slot = "17")]
	public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1C5BFE8", Offset = "0x1C5BFE8", VA = "0x1C5BFE8", Slot = "18")]
	public void OnSceneLoadDone(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1C5BFEC", Offset = "0x1C5BFEC", VA = "0x1C5BFEC", Slot = "19")]
	public void OnSceneLoadStart(NetworkRunner runner)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1C5BFF0", Offset = "0x1C5BFF0", VA = "0x1C5BFF0", Slot = "15")]
	public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1C5BFF4", Offset = "0x1C5BFF4", VA = "0x1C5BFF4", Slot = "16")]
	public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1C5BFF8", Offset = "0x1C5BFF8", VA = "0x1C5BFF8")]
	public InputBehaviourPrototype()
	{
	}
}
[StructLayout(2)]
[Token(Token = "0x2000139")]
[AttributeAttribute(Name = "NetworkInputWeavedAttribute", RVA = "0xB5ABF4", Offset = "0xB5ABF4")]
public struct NetworkInputPrototype : INetworkInput
{
	[Token(Token = "0x400077D")]
	public const int BUTTON_USE = 0;

	[Token(Token = "0x400077E")]
	public const int BUTTON_FIRE = 1;

	[Token(Token = "0x400077F")]
	public const int BUTTON_FIRE_ALT = 2;

	[Token(Token = "0x4000780")]
	public const int BUTTON_FORWARD = 3;

	[Token(Token = "0x4000781")]
	public const int BUTTON_BACKWARD = 4;

	[Token(Token = "0x4000782")]
	public const int BUTTON_LEFT = 5;

	[Token(Token = "0x4000783")]
	public const int BUTTON_RIGHT = 6;

	[Token(Token = "0x4000784")]
	public const int BUTTON_JUMP = 7;

	[Token(Token = "0x4000785")]
	public const int BUTTON_CROUCH = 8;

	[Token(Token = "0x4000786")]
	public const int BUTTON_WALK = 9;

	[Token(Token = "0x4000787")]
	public const int BUTTON_ACTION1 = 10;

	[Token(Token = "0x4000788")]
	public const int BUTTON_ACTION2 = 11;

	[Token(Token = "0x4000789")]
	public const int BUTTON_ACTION3 = 12;

	[Token(Token = "0x400078A")]
	public const int BUTTON_ACTION4 = 14;

	[Token(Token = "0x400078B")]
	public const int BUTTON_RELOAD = 15;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NetworkButtons Buttons;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public byte Weapon;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Angle Yaw;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Angle Pitch;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x10DE648", Offset = "0x10DE648", VA = "0x10DE648")]
	public bool IsUp(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x10DE668", Offset = "0x10DE668", VA = "0x10DE668")]
	public bool IsDown(int button)
	{
		return default(bool);
	}
}
[Token(Token = "0x200013A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5AC08", Offset = "0xB5AC08")]
[AttributeAttribute(Name = "OrderBeforeAttribute", RVA = "0xB5AC08", Offset = "0xB5AC08")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5AC08", Offset = "0xB5AC08")]
public class NetworkCharacterControllerPrototype : NetworkTransform
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB65364", Offset = "0xB65364")]
	public float gravity;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float jumpImpulse;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float acceleration;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float braking;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float maxSpeed;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float rotationSpeed;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6539C", Offset = "0xB6539C")]
	private bool _IsGrounded;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB65400", Offset = "0xB65400")]
	private Vector3 _Velocity;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB65464", Offset = "0xB65464")]
	private CharacterController <Controller>k__BackingField;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Changed<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ChangedDelegate<NetworkCharacterControllerPrototype> $IL2CPP_CHANGED_DELEGATE;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static NetworkBehaviourCallbacks<NetworkCharacterControllerPrototype> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

	[Token(Token = "0x17000099")]
	[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB89E54", Offset = "0xB89E54")]
	[HideInInspector]
	[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB89E54", Offset = "0xB89E54")]
	public bool IsGrounded
	{
		[Token(Token = "0x600059B")]
		[Address(RVA = "0xF27718", Offset = "0xF27718", VA = "0xF27718")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600059C")]
		[Address(RVA = "0xF27784", Offset = "0xF27784", VA = "0xF27784")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB89EA4", Offset = "0xB89EA4")]
	[HideInInspector]
	[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB89EA4", Offset = "0xB89EA4")]
	public Vector3 Velocity
	{
		[Token(Token = "0x600059D")]
		[Address(RVA = "0xF277EC", Offset = "0xF277EC", VA = "0xF277EC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xF27874", Offset = "0xF27874", VA = "0xF27874")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	protected override Vector3 DefaultTeleportInterpolationVelocity
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0xF27984", Offset = "0xF27984", VA = "0xF27984", Slot = "50")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700009C")]
	protected override Vector3 DefaultTeleportInterpolationAngularVelocity
	{
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xF27988", Offset = "0xF27988", VA = "0xF27988", Slot = "51")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700009D")]
	public CharacterController Controller
	{
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xF27998", Offset = "0xF27998", VA = "0xF27998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7AB54", Offset = "0xB7AB54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xF279A0", Offset = "0xF279A0", VA = "0xF279A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7AB64", Offset = "0xB7AB64")]
		private set
		{
		}
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xF279B0", Offset = "0xF279B0", VA = "0xF279B0", Slot = "26")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xF27A88", Offset = "0xF27A88", VA = "0xF27A88", Slot = "16")]
	public override void Spawned()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xF279D8", Offset = "0xF279D8", VA = "0xF279D8")]
	private void CacheController()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xF27AB0", Offset = "0xF27AB0", VA = "0xF27AB0", Slot = "33")]
	protected override void CopyFromBufferToEngine()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xF27BAC", Offset = "0xF27BAC", VA = "0xF27BAC", Slot = "57")]
	public virtual void Jump(bool ignoreGrounded = false, [Optional] float? overrideImpulse)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xF27C48", Offset = "0xF27C48", VA = "0xF27C48", Slot = "58")]
	public virtual void Move(Vector3 direction)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xF27F20", Offset = "0xF27F20", VA = "0xF27F20")]
	public NetworkCharacterControllerPrototype()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xF27F48", Offset = "0xF27F48", VA = "0xF27F48", Slot = "13")]
	public override void CopyBackingFieldsToState(bool P_0)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xF27F8C", Offset = "0xF27F8C", VA = "0xF27F8C", Slot = "14")]
	public override void CopyStateToBackingFields()
	{
	}
}
[Token(Token = "0x200013B")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5ACF4", Offset = "0xB5ACF4")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5ACF4", Offset = "0xB5ACF4")]
public class NetworkDebugStart : Fusion.Behaviour
{
	[Token(Token = "0x200013C")]
	public enum StartModes
	{
		[Token(Token = "0x40007AB")]
		UserInterface,
		[Token(Token = "0x40007AC")]
		Automatic,
		[Token(Token = "0x40007AD")]
		Manual
	}

	[Token(Token = "0x200013D")]
	public enum Stage
	{
		[Token(Token = "0x40007AF")]
		Disconnected,
		[Token(Token = "0x40007B0")]
		StartingUp,
		[Token(Token = "0x40007B1")]
		UnloadOriginalScene,
		[Token(Token = "0x40007B2")]
		ConnectingServer,
		[Token(Token = "0x40007B3")]
		ConnectingClients,
		[Token(Token = "0x40007B4")]
		AllConnected
	}

	[Serializable]
	[Token(Token = "0x200013E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5AD60", Offset = "0xB5AD60")]
	private sealed class <>c
	{
		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<NetworkRunner> <>9__54_0;

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xFB1B18", Offset = "0xFB1B18", VA = "0xFB1B18")]
		public <>c()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xFB1B20", Offset = "0xFB1B20", VA = "0xFB1B20")]
		internal void <StartWithClients>b__54_0(NetworkRunner runner)
		{
		}
	}

	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5AD70", Offset = "0xB5AD70")]
	private sealed class <StartWithClients>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkDebugStart <>4__this;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Fusion.GameMode serverMode;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int clientCount;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SceneRef sceneRef;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <includesServerStart>5__2;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task <serverTask>5__3;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0xFB2814", Offset = "0xFB2814", VA = "0xFB2814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0xFB285C", Offset = "0xFB285C", VA = "0xFB285C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xFB1E44", Offset = "0xFB1E44", VA = "0xFB1E44")]
		[DebuggerHidden]
		public <StartWithClients>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xFB1E70", Offset = "0xFB1E70", VA = "0xFB1E70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xFB1E74", Offset = "0xFB1E74", VA = "0xFB1E74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xFB281C", Offset = "0xFB281C", VA = "0xFB281C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5AD80", Offset = "0xB5AD80")]
	private sealed class <StartClients>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkDebugStart <>4__this;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Fusion.GameMode serverMode;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public SceneRef sceneRef;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int clientCount;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Task> <clientTasks>5__2;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Task <clientsStartTask>5__3;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__4;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0xFB1DF4", Offset = "0xFB1DF4", VA = "0xFB1DF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005DE")]
			[Address(RVA = "0xFB1E3C", Offset = "0xFB1E3C", VA = "0xFB1E3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xFB1B24", Offset = "0xFB1B24", VA = "0xFB1B24")]
		[DebuggerHidden]
		public <StartClients>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xFB1B50", Offset = "0xFB1B50", VA = "0xFB1B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xFB1B54", Offset = "0xFB1B54", VA = "0xFB1B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xFB1DFC", Offset = "0xFB1DFC", VA = "0xFB1DFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[MultiPropertyDrawersFix]
	[InlineHelp]
	[AttributeAttribute(Name = "WarnIfAttribute", RVA = "0xB65474", Offset = "0xB65474")]
	public NetworkRunner RunnerPrefab;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[InlineHelp]
	[MultiPropertyDrawersFix]
	[AttributeAttribute(Name = "WarnIfAttribute", RVA = "0xB654E8", Offset = "0xB654E8")]
	public StartModes StartMode;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB65568", Offset = "0xB65568")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB65568", Offset = "0xB65568")]
	[InlineHelp]
	public Fusion.GameMode AutoStartAs;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB655E4", Offset = "0xB655E4")]
	public bool AutoHideGUI;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB65640", Offset = "0xB65640")]
	public int AutoClients;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[InlineHelp]
	public ushort ServerPort;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[InlineHelp]
	public string DefaultRoomName;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[InlineHelp]
	public bool AlwaysShowStats;

	[NonSerialized]
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NetworkRunner _server;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[InlineHelp]
	[ScenePath]
	[MultiPropertyDrawersFix]
	public string InitialScenePath;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _initialScenePath;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[InlineHelp]
	[SerializeField]
	[AttributeAttribute(Name = "EditorDisabledAttribute", RVA = "0xB65710", Offset = "0xB65710")]
	[MultiPropertyDrawersFix]
	protected Stage _currentStage;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6576C", Offset = "0xB6576C")]
	private int <LastCreatedClientIndex>k__BackingField;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6577C", Offset = "0xB6577C")]
	private Fusion.GameMode <CurrentServerMode>k__BackingField;

	[Token(Token = "0x1700009E")]
	public Stage CurrentStage
	{
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xF28430", Offset = "0xF28430", VA = "0xF28430")]
		get
		{
			return default(Stage);
		}
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xF28438", Offset = "0xF28438", VA = "0xF28438")]
		internal set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public int LastCreatedClientIndex
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xF28440", Offset = "0xF28440", VA = "0xF28440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7AB74", Offset = "0xB7AB74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xF28448", Offset = "0xF28448", VA = "0xF28448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7AB84", Offset = "0xB7AB84")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public Fusion.GameMode CurrentServerMode
	{
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xF28450", Offset = "0xF28450", VA = "0xF28450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7AB94", Offset = "0xB7AB94")]
		get
		{
			return default(Fusion.GameMode);
		}
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xF28458", Offset = "0xF28458", VA = "0xF28458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7ABA4", Offset = "0xB7ABA4")]
		internal set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	protected bool CanAddClients
	{
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xF28460", Offset = "0xF28460", VA = "0xF28460")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	protected bool CanAddSharedClients
	{
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xF2848C", Offset = "0xF2848C", VA = "0xF2848C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A3")]
	protected bool IsShutdown
	{
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xF284B0", Offset = "0xF284B0", VA = "0xF284B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A4")]
	protected bool IsShutdownAndMultiPeer
	{
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xF284C0", Offset = "0xF284C0", VA = "0xF284C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A5")]
	protected bool UsingMultiPeerMode
	{
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xF284FC", Offset = "0xF284FC", VA = "0xF284FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A6")]
	protected bool ShowAutoClients
	{
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xF28528", Offset = "0xF28528", VA = "0xF28528")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xF28580", Offset = "0xF28580", VA = "0xF28580", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xF28934", Offset = "0xF28934", VA = "0xF28934")]
	protected bool TryGetSceneRef(out SceneRef sceneRef)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xF28AB8", Offset = "0xF28AB8", VA = "0xF28AB8", Slot = "5")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7ABB4", Offset = "0xB7ABB4")]
	public virtual void StartSinglePlayer()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xF28B08", Offset = "0xF28B08", VA = "0xF28B08", Slot = "6")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AC08", Offset = "0xB7AC08")]
	public virtual void StartServer()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xF28B58", Offset = "0xF28B58", VA = "0xF28B58", Slot = "7")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AC5C", Offset = "0xB7AC5C")]
	public virtual void StartHost()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xF28BA8", Offset = "0xF28BA8", VA = "0xF28BA8", Slot = "8")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7ACB0", Offset = "0xB7ACB0")]
	public virtual void StartClient()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xF28BE0", Offset = "0xF28BE0", VA = "0xF28BE0", Slot = "9")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AD04", Offset = "0xB7AD04")]
	public virtual void StartSharedClient()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xF28C30", Offset = "0xF28C30", VA = "0xF28C30", Slot = "10")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AD58", Offset = "0xB7AD58")]
	public virtual void StartAutoClient()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xF28C80", Offset = "0xF28C80", VA = "0xF28C80", Slot = "11")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7ADAC", Offset = "0xB7ADAC")]
	public virtual void StartServerPlusClients()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xF28C90", Offset = "0xF28C90", VA = "0xF28C90")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AE00", Offset = "0xB7AE00")]
	public void StartHostPlusClients()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xF28D74", Offset = "0xF28D74", VA = "0xF28D74")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AE54", Offset = "0xB7AE54")]
	public void Shutdown()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xF2904C", Offset = "0xF2904C", VA = "0xF2904C", Slot = "12")]
	public virtual void StartServerPlusClients(int clientCount)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xF28C98", Offset = "0xF28C98", VA = "0xF28C98")]
	public void StartHostPlusClients(int clientCount)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xF29128", Offset = "0xF29128", VA = "0xF29128")]
	public void StartMultipleClients(int clientCount)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xF29204", Offset = "0xF29204", VA = "0xF29204")]
	public void StartMultipleSharedClients(int clientCount)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xF292E0", Offset = "0xF292E0", VA = "0xF292E0")]
	public void StartMultipleAutoClients(int clientCount)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xF28D78", Offset = "0xF28D78", VA = "0xF28D78")]
	public void ShutdownAll()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xF28A1C", Offset = "0xF28A1C", VA = "0xF28A1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7AEA8", Offset = "0xB7AEA8")]
	protected IEnumerator StartWithClients(Fusion.GameMode serverMode, SceneRef sceneRef, int clientCount)
	{
		return null;
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xF293BC", Offset = "0xF293BC", VA = "0xF293BC")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AF08", Offset = "0xB7AF08")]
	public void AddClient()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xF29648", Offset = "0xF29648", VA = "0xF29648")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7AF58", Offset = "0xB7AF58")]
	public void AddSharedClient()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xF293F8", Offset = "0xF293F8", VA = "0xF293F8")]
	public Task AddClient(Fusion.GameMode serverMode, SceneRef sceneRef)
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xF29684", Offset = "0xF29684", VA = "0xF29684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7AFA8", Offset = "0xB7AFA8")]
	protected IEnumerator StartClients(int clientCount, Fusion.GameMode serverMode, [Optional] SceneRef sceneRef)
	{
		return null;
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xF29720", Offset = "0xF29720", VA = "0xF29720", Slot = "13")]
	protected virtual Task InitializeNetworkRunner(NetworkRunner runner, Fusion.GameMode gameMode, NetAddress address, SceneRef scene, Action<NetworkRunner> initialized)
	{
		return null;
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xF299AC", Offset = "0xF299AC", VA = "0xF299AC")]
	public NetworkDebugStart()
	{
	}
}
[Token(Token = "0x2000141")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5AD90", Offset = "0xB5AD90")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5AD90", Offset = "0xB5AD90")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AD90", Offset = "0xB5AD90")]
public class NetworkDebugStartGUI : Fusion.Behaviour
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[InlineHelp]
	public bool EnableHotkeys;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[InlineHelp]
	public GUISkin BaseSkin;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NetworkDebugStart _networkDebugStart;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _clientCount;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isMultiplePeerMode;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<NetworkDebugStart.Stage, string> _nicifiedStageNames;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xF29A24", Offset = "0xF29A24", VA = "0xF29A24", Slot = "4")]
	protected virtual void OnValidate()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xF29A28", Offset = "0xF29A28", VA = "0xF29A28")]
	protected void ValidateClientCount()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xF29AF4", Offset = "0xF29AF4", VA = "0xF29AF4")]
	protected int GetClientCount()
	{
		return default(int);
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xF29BD8", Offset = "0xF29BD8", VA = "0xF29BD8", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xF29E18", Offset = "0xF29E18", VA = "0xF29E18", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xF29C94", Offset = "0xF29C94", VA = "0xF29C94")]
	protected NetworkDebugStart EnsureNetworkDebugStartExists()
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xF29E54", Offset = "0xF29E54", VA = "0xF29E54")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xF2A43C", Offset = "0xF2A43C", VA = "0xF2A43C", Slot = "7")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xF29FF0", Offset = "0xF29FF0", VA = "0xF29FF0")]
	private void StartHostWithClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xF2A0F0", Offset = "0xF2A0F0", VA = "0xF2A0F0")]
	private void StartServerWithClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xF2A1F8", Offset = "0xF2A1F8", VA = "0xF2A1F8")]
	private void StartMultipleClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xF2A2F8", Offset = "0xF2A2F8", VA = "0xF2A2F8")]
	private void StartMultipleAutoClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xF2A33C", Offset = "0xF2A33C", VA = "0xF2A33C")]
	private void StartMultipleSharedClients(NetworkDebugStart nds)
	{
	}

	[Token(Token = "0x60005EC")]
	public static Dictionary<T, string> ConvertEnumToNicifiedNameLookup<T>([Optional] string prefix, [Optional] Dictionary<T, string> nonalloc) where T : Enum
	{
		return null;
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xF2B3E8", Offset = "0xF2B3E8", VA = "0xF2B3E8")]
	public NetworkDebugStartGUI()
	{
	}
}
[Token(Token = "0x2000142")]
[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5AE34", Offset = "0xB5AE34")]
public class PlayerSpawnerPrototype : SpawnerPrototype<PlayerSpawnPointPrototype>, IPlayerJoined, IPlayerLeft, ISceneLoadDone
{
	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xFF5860", Offset = "0xFF5860", VA = "0xFF5860", Slot = "15")]
	protected override void RegisterPlayerAndObject(PlayerRef player, NetworkObject playerObject)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xFF58E4", Offset = "0xFF58E4", VA = "0xFF58E4")]
	public PlayerSpawnerPrototype()
	{
	}
}
[Token(Token = "0x2000143")]
public interface ISpawnPointManagerPrototype<T> where T : Component, ISpawnPointPrototype
{
	[Token(Token = "0x60005F0")]
	void CollectSpawnPoints(NetworkRunner runner);

	[Token(Token = "0x60005F1")]
	Transform GetNextSpawnPoint(NetworkRunner runner, PlayerRef player, bool skipIfBlocked = true);
}
[Token(Token = "0x2000144")]
public interface ISpawnPointPrototype
{
}
[Token(Token = "0x2000145")]
public class PlayerSpawnPointManagerPrototype : SpawnPointManagerPrototype<PlayerSpawnPointPrototype>
{
	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xFF580C", Offset = "0xFF580C", VA = "0xFF580C")]
	public PlayerSpawnPointManagerPrototype()
	{
	}
}
[Token(Token = "0x2000146")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AE6C", Offset = "0xB5AE6C")]
public class PlayerSpawnPointPrototype : SimulationBehaviour, ISpawnPointPrototype
{
	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xFF5858", Offset = "0xFF5858", VA = "0xFF5858")]
	public PlayerSpawnPointPrototype()
	{
	}
}
[Token(Token = "0x2000147")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AEA0", Offset = "0xB5AEA0")]
public abstract class SpawnPointManagerPrototype<T> : Fusion.Behaviour, ISpawnPointManagerPrototype<T> where T : Component, ISpawnPointPrototype
{
	[Token(Token = "0x2000148")]
	public enum SpawnSequence
	{
		[Token(Token = "0x40007D6")]
		PlayerId,
		[Token(Token = "0x40007D7")]
		RoundRobin,
		[Token(Token = "0x40007D8")]
		Random
	}

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public SpawnSequence Sequence;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public LayerMask BlockingLayers;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public float BlockedCheckRadius;

	[NonSerialized]
	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal List<Component> _spawnPoints;

	[NonSerialized]
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int LastSpawnIndex;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private NetworkRNG rng;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Collider[] blocked3D;

	[Token(Token = "0x60005F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F5")]
	public void CollectSpawnPoints(NetworkRunner runner)
	{
	}

	[Token(Token = "0x60005F6")]
	public virtual Transform GetNextSpawnPoint(NetworkRunner runner, PlayerRef player, bool skipIfBlocked = true)
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	public virtual Transform AllSpawnPointsBlockedFallback()
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	public virtual (int, Component) GetNextUnblocked(int failedIndex)
	{
		return default((int, Component));
	}

	[Token(Token = "0x60005F9")]
	public virtual bool IsBlocked(Component spawnPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60005FA")]
	protected SpawnPointManagerPrototype()
	{
	}
}
[Token(Token = "0x2000149")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AED4", Offset = "0xB5AED4")]
public class SpawnerPrototype<T> : SimulationBehaviour, IPlayerJoined, IPlayerLeft, ISpawned, ISceneLoadDone where T : Component, ISpawnPointPrototype
{
	[Token(Token = "0x200014A")]
	public enum SpawnMethods
	{
		[Token(Token = "0x40007DF")]
		AutoOnNetworkStart,
		[Token(Token = "0x40007E0")]
		ByScriptOnly
	}

	[Token(Token = "0x200014B")]
	public enum AuthorityOptions
	{
		[Token(Token = "0x40007E2")]
		Auto,
		[Token(Token = "0x40007E3")]
		Server,
		[Token(Token = "0x40007E4")]
		Player
	}

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Dictionary<PlayerRef, List<NetworkObject>> _spawnedLookup;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public NetworkObject PlayerPrefab;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	public SpawnMethods SpawnMethod;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[InlineHelp]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xB657FC", Offset = "0xB657FC")]
	[MultiPropertyDrawersFix]
	public AuthorityOptions StateAuthority;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected ISpawnPointManagerPrototype<T> spawnManager;

	[Token(Token = "0x170000AB")]
	protected bool _AllowClientObjects
	{
		[Token(Token = "0x60005FB")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005FC")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60005FD")]
	public void Spawned()
	{
	}

	[Token(Token = "0x60005FE")]
	public void SceneLoadDone()
	{
	}

	[Token(Token = "0x60005FF")]
	public void PlayerJoined(PlayerRef player)
	{
	}

	[Token(Token = "0x6000600")]
	public void PlayerLeft(PlayerRef player)
	{
	}

	[Token(Token = "0x6000601")]
	private void PlayerJoined(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x6000602")]
	private void PlayerLeft(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x6000603")]
	public NetworkObject TrySpawn(NetworkRunner runner, PlayerRef player)
	{
		return null;
	}

	[Token(Token = "0x6000604")]
	[AttributeAttribute(Name = "BehaviourButtonActionAttribute", RVA = "0xB7B0A8", Offset = "0xB7B0A8")]
	public void TrySpawnAll()
	{
	}

	[Token(Token = "0x6000605")]
	protected virtual void RegisterPlayerAndObject(PlayerRef player, NetworkObject playerObject)
	{
	}

	[Token(Token = "0x6000606")]
	protected void DespawnPlayersObjects(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x6000607")]
	protected void UnregisterPlayer(PlayerRef player)
	{
	}

	[Token(Token = "0x6000608")]
	public SpawnerPrototype()
	{
	}
}
[Token(Token = "0x200014C")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5AF08", Offset = "0xB5AF08")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AF08", Offset = "0xB5AF08")]
public class ToggleRunnerProvideInput : Fusion.Behaviour
{
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToggleRunnerProvideInput _instance;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x15D7138", Offset = "0x15D7138", VA = "0x15D7138")]
	public void Awake()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x15D72A0", Offset = "0x15D72A0", VA = "0x15D72A0")]
	public void Update()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x15D73F8", Offset = "0x15D73F8", VA = "0x15D73F8")]
	private void ToggleAll(int runnerIndex)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x15D7560", Offset = "0x15D7560", VA = "0x15D7560")]
	public ToggleRunnerProvideInput()
	{
	}
}
[Token(Token = "0x200014D")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5AF74", Offset = "0xB5AF74")]
[AttributeAttribute(Name = "ScriptHelpAttribute", RVA = "0xB5AF74", Offset = "0xB5AF74")]
public class ToggleRunnerVisibility : Fusion.Behaviour
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ToggleRunnerVisibility _instance;

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x15D7568", Offset = "0x15D7568", VA = "0x15D7568")]
	public void Awake()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x15D76D0", Offset = "0x15D76D0", VA = "0x15D76D0")]
	public void Update()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x15D7838", Offset = "0x15D7838", VA = "0x15D7838")]
	private void ToggleAll(int runnerIndex)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x15D79A0", Offset = "0x15D79A0", VA = "0x15D79A0")]
	public ToggleRunnerVisibility()
	{
	}
}
[Token(Token = "0x200014E")]
public static class FusionScalableIMGUI
{
	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GUISkin _scalableSkin;

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x14C8FEC", Offset = "0x14C8FEC", VA = "0x14C8FEC")]
	private static void InitializedGUIStyles(GUISkin baseSkin)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x14C9494", Offset = "0x14C9494", VA = "0x14C9494")]
	public static GUISkin GetScaledSkin(GUISkin baseSkin, out float height, out float width, out int padding, out int margin, out float boxLeft)
	{
		return null;
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x14C9594", Offset = "0x14C9594", VA = "0x14C9594")]
	public static (float, float, int, int, float) ScaleGuiSkinToScreenHeight()
	{
		return default((float, float, int, int, float));
	}
}
[Token(Token = "0x200014F")]
public class DisplayHiddenFruitCounter : MonoBehaviour
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public GameObject m_counter;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public CumulativeHitInteraction m_cumulativeHitInteraction;

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x10EE568", Offset = "0x10EE568", VA = "0x10EE568")]
	public void DisplayCounter()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x10EE760", Offset = "0x10EE760", VA = "0x10EE760")]
	public DisplayHiddenFruitCounter()
	{
	}
}
[Token(Token = "0x2000150")]
public class SkeetShootingScoreDisplay : MonoBehaviour
{
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5AFE0", Offset = "0xB5AFE0")]
	private sealed class <GameOverCor>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeetShootingScoreDisplay <>4__this;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000621")]
			[Address(RVA = "0xFE6AF0", Offset = "0xFE6AF0", VA = "0xFE6AF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000623")]
			[Address(RVA = "0xFE6B38", Offset = "0xFE6B38", VA = "0xFE6B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xFE6888", Offset = "0xFE6888", VA = "0xFE6888")]
		[DebuggerHidden]
		public <GameOverCor>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xFE68B4", Offset = "0xFE68B4", VA = "0xFE68B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xFE68B8", Offset = "0xFE68B8", VA = "0xFE68B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xFE6AF8", Offset = "0xFE6AF8", VA = "0xFE6AF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro m_bestScoreText;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro m_currentScoreText;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_targetAnimator;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private EnvironmentHit m_targetEnvironmentHit;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private WaveManagerMinigame m_waveManagerMinigame;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_gameOverDelay;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_currentScore;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_inGame;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xF0EC38", Offset = "0xF0EC38", VA = "0xF0EC38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xF0ED10", Offset = "0xF0ED10", VA = "0xF0ED10")]
	public void ActivateTargetIfPossible()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xF0EDB0", Offset = "0xF0EDB0", VA = "0xF0EDB0")]
	public void GameStarted()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xF0EEE4", Offset = "0xF0EEE4", VA = "0xF0EEE4")]
	private void IncrementScore(Fruit fruit, FruitHalf fruitHalf, FruitHalf fruitHalf2, Fruit.FruitSlicedEvent fruitSlicedEvent)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xF0EF30", Offset = "0xF0EF30", VA = "0xF0EF30")]
	public void GameOver()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xF0EF5C", Offset = "0xF0EF5C", VA = "0xF0EF5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B0EC", Offset = "0xB7B0EC")]
	private IEnumerator GameOverCor()
	{
		return null;
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xF0EFD4", Offset = "0xF0EFD4", VA = "0xF0EFD4")]
	public void GameAborted()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xF0F0D0", Offset = "0xF0F0D0", VA = "0xF0F0D0")]
	public SkeetShootingScoreDisplay()
	{
	}
}
[Token(Token = "0x2000152")]
public class AchievementUnlocker : MonoBehaviour
{
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AchievementBase m_achievement;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_useCounter;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_wantedCount;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_currentCount;

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xF98ECC", Offset = "0xF98ECC", VA = "0xF98ECC")]
	public void UnlockAchievement()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xF98F34", Offset = "0xF98F34", VA = "0xF98F34")]
	public AchievementUnlocker()
	{
	}
}
[Token(Token = "0x2000153")]
public class IKLookAt : MonoBehaviour
{
	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_ikAnimator;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_ikForward;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_objectToLookAt;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_lookRotationSpeed;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_headPivotTracker;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_headPivotTrackerConstrained;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB658E0", Offset = "0xB658E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB658E0", Offset = "0xB658E0")]
	public float m_yRotationLimitMax;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB65934", Offset = "0xB65934")]
	public float m_yRotationLimitMin;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6594C", Offset = "0xB6594C")]
	public bool m_lookAtPlayerInRange;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_playerLookAtRange;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_playerFullLookAtWeightRange;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_playerTransform;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 m_playerPosition;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 m_up;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_forward;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float m_lookAtRangeSquared;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_lookAtWeightRangeSquared;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float m_playerDistance;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float m_lookAtWeight;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float m_prevLookAtWeight;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float m_lookAtTimer;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_trackerY;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool m_foundPlayerTransform;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool m_lookAtPlayerNow;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool m_prevLookAtPlayerNow;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1C5AF04", Offset = "0x1C5AF04", VA = "0x1C5AF04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1C5B074", Offset = "0x1C5B074", VA = "0x1C5B074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1C5B3D8", Offset = "0x1C5B3D8", VA = "0x1C5B3D8")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1C5B4FC", Offset = "0x1C5B4FC", VA = "0x1C5B4FC")]
	public IKLookAt()
	{
	}
}
[Token(Token = "0x2000154")]
public class AnimationEventRelay : MonoBehaviour
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent m_recycleTriggered;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent m_resetTextTriggered;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent m_updateUiTriggered;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent m_playSoundTriggered;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent m_activateGameObjectTriggered;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent m_deactivateGameObjectTriggered;

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xFA0CA4", Offset = "0xFA0CA4", VA = "0xFA0CA4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xFA0CB8", Offset = "0xFA0CB8", VA = "0xFA0CB8")]
	public void ResetText()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xFA0CCC", Offset = "0xFA0CCC", VA = "0xFA0CCC")]
	public void UpdateUi()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xFA0CE0", Offset = "0xFA0CE0", VA = "0xFA0CE0")]
	public void PlaySound()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xFA0CF4", Offset = "0xFA0CF4", VA = "0xFA0CF4")]
	public void ActivateGameObject()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xFA0D08", Offset = "0xFA0D08", VA = "0xFA0D08")]
	public void DeactivateGameObject()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xFA0D1C", Offset = "0xFA0D1C", VA = "0xFA0D1C")]
	public AnimationEventRelay()
	{
	}
}
[Token(Token = "0x2000155")]
public class AnimationTriggerEvent : MonoBehaviour
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent m_animationEvent;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xFA0D24", Offset = "0xFA0D24", VA = "0xFA0D24")]
	public void TriggerAnimationEvent()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xFA0D38", Offset = "0xFA0D38", VA = "0xFA0D38")]
	public AnimationTriggerEvent()
	{
	}
}
[Token(Token = "0x2000156")]
public static class AnimatorStringIds
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int start;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int stop;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int pause;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int spawn;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int drip;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int Pull;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int isPulling;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int kill;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int Activate;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int Deactivate;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int Refresh;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int transitionIn;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int transitionOut;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int doText;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int Shoot;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int Load;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int Speed;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int Open;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int Close;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int CloseImmediate;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int LevelPassed;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int FirstUnlock;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int Unlocked;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int Rotate;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int Jump;
}
[Token(Token = "0x2000157")]
public class ArcheryPauseMenuSettings : MonoBehaviour
{
	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Slider m_bowPullingRangeSlider;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle m_bowAutoReleaseToggle;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Toggle m_bowTrajectoryLineToggle;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SettingsPlayerDataObject m_settingsPlayerDataObject;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_cachedBowPullingRange;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool m_cachedAutoRelease;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool m_cachedTrajectoryLine;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xFAA624", Offset = "0xFAA624", VA = "0xFAA624")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xFAA6B8", Offset = "0xFAA6B8", VA = "0xFAA6B8")]
	public void ChangeBowPullingRange(float value)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xFAA6F0", Offset = "0xFAA6F0", VA = "0xFAA6F0")]
	public void ChangeAutoRelease(bool isOn)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xFAA710", Offset = "0xFAA710", VA = "0xFAA710")]
	public void ChangeTrajectoryLine(bool isOn)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xFAA730", Offset = "0xFAA730", VA = "0xFAA730")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xFAA89C", Offset = "0xFAA89C", VA = "0xFAA89C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xFAAB10", Offset = "0xFAAB10", VA = "0xFAAB10")]
	public ArcheryPauseMenuSettings()
	{
	}
}
[Token(Token = "0x2000158")]
public class Armory : MonoBehaviour
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmoryPanel[] m_panels;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_initialized;

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xFAC1CC", Offset = "0xFAC1CC", VA = "0xFAC1CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xFAC1D0", Offset = "0xFAC1D0", VA = "0xFAC1D0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xFAC73C", Offset = "0xFAC73C", VA = "0xFAC73C")]
	public void ScrollToItem(UnlockablePrefab unlockableItem, InventoryPlayerDataObject.ItemType itemType)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xFAC784", Offset = "0xFAC784", VA = "0xFAC784")]
	private bool TryGetPanel(InventoryPlayerDataObject.ItemType itemType, out ArmoryPanel panel)
	{
		return default(bool);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xFAC9A4", Offset = "0xFAC9A4", VA = "0xFAC9A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xFAC6D4", Offset = "0xFAC6D4", VA = "0xFAC6D4")]
	public void ResetArmoryListAnchoredPosition()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xFACB60", Offset = "0xFACB60", VA = "0xFACB60")]
	public void ForceUpdateContentVisibility()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xFACEB8", Offset = "0xFACEB8", VA = "0xFACEB8")]
	public void UpdateArmoryColours()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xFAD034", Offset = "0xFAD034", VA = "0xFAD034")]
	public Armory()
	{
	}
}
[Token(Token = "0x2000159")]
public class ArmoryItem : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5AFF0", Offset = "0xB5AFF0")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InventoryPlayerDataObject.InventorySlot inventorySlot;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ArmoryItem <>4__this;

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xF8BFC8", Offset = "0xF8BFC8", VA = "0xF8BFC8")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xF8BFD0", Offset = "0xF8BFD0", VA = "0xF8BFD0")]
		internal void <SetUpInventorySlotButtons>b__0()
		{
		}
	}

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image m_itemImage;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color m_lockedColor;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color m_itemLockedColor;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Localize m_itemNameText;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private InventorySlotSelection[] m_inventorySlotButtons;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform m_inventorySlotButtonsParent;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_newItem;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform m_rectTransform;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image[] m_displayImages;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshProUGUI[] m_displayTexts;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB65A54", Offset = "0xB65A54")]
	[SerializeField]
	private UnityEvent m_onLocked;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private UnityEvent m_onUnlocked;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private UnityEvent m_onEquipped;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private UnityEvent m_onUnequipped;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UnlockablePrefab m_unlockablePrefab;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly List<InventorySlotSelection> m_inventorySlotDisplays;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private TintChildren m_tintChildren;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Color m_itemUnlockedColor;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool m_unlockOnManagerInitialize;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool m_visualsActive;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool m_unlocked;

	[Token(Token = "0x170000AE")]
	public UnlockablePrefab UnlockablePrefab
	{
		[Token(Token = "0x6000644")]
		[Address(RVA = "0xFAD03C", Offset = "0xFAD03C", VA = "0xFAD03C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xFAD044", Offset = "0xFAD044", VA = "0xFAD044")]
	public void Initialize(UnlockablePrefab unlockablePrefab)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xFAD6E0", Offset = "0xFAD6E0", VA = "0xFAD6E0")]
	public void Uninitialize()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xFAD890", Offset = "0xFAD890", VA = "0xFAD890")]
	public void SetItemAsSelected(int inventorySlot)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xFAD5D8", Offset = "0xFAD5D8", VA = "0xFAD5D8")]
	public void SetVisualsActive(bool isActive)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xFAD8F8", Offset = "0xFAD8F8", VA = "0xFAD8F8")]
	public void UpdateTintColor()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xFAD940", Offset = "0xFAD940", VA = "0xFAD940")]
	private void SetUpInventorySlotButtons()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xFADB90", Offset = "0xFADB90", VA = "0xFADB90")]
	private void UpdateSelectedState(object dataObject)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xFAD3D4", Offset = "0xFAD3D4", VA = "0xFAD3D4")]
	private void Unlock()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xFADDD4", Offset = "0xFADDD4", VA = "0xFADDD4")]
	public ArmoryItem()
	{
	}
}
[Token(Token = "0x200015B")]
public class ArmoryPanel : MonoBehaviour
{
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B000", Offset = "0xB5B000")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnlockablePrefab unlockableItem;

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xF8BFF4", Offset = "0xF8BFF4", VA = "0xF8BFF4")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xF8BFFC", Offset = "0xF8BFFC", VA = "0xF8BFFC")]
		internal bool <ScrollTo>b__0(ArmoryItem x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB65AD0", Offset = "0xB65AD0")]
	public InventoryPlayerDataObject.ItemType m_type;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnlockableList m_unlockableList;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ArmoryItem m_itemPrefab;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB65B28", Offset = "0xB65B28")]
	[SerializeField]
	private RectTransform m_scrollTransform;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ScrollRectScroller m_scroller;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ScrollRect m_scrollRect;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform m_scrollContent;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly List<ArmoryItem> m_items;

	[Token(Token = "0x400085A")]
	private const float DistanceToReCalcVisibility = 0.08f;

	[Token(Token = "0x400085B")]
	private const float DistanceMarginForLoad = 0.5f;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xFAC25C", Offset = "0xFAC25C", VA = "0xFAC25C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xFACA0C", Offset = "0xFACA0C", VA = "0xFACA0C")]
	public void Uninitialize()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xFAC874", Offset = "0xFAC874", VA = "0xFAC874")]
	public void ScrollTo(UnlockablePrefab unlockableItem)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xFACB20", Offset = "0xFACB20", VA = "0xFACB20")]
	public void ResetAnchoredPosition()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xFACF20", Offset = "0xFACF20", VA = "0xFACF20")]
	public void UpdateColors()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xFADE80", Offset = "0xFADE80", VA = "0xFADE80")]
	private void UpdateContentVisibility(Vector2 pos)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xFACBDC", Offset = "0xFACBDC", VA = "0xFACBDC")]
	public void UpdateContentVisibility(float lastPos = float.PositiveInfinity)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xFADE8C", Offset = "0xFADE8C", VA = "0xFADE8C")]
	public ArmoryPanel()
	{
	}
}
[Token(Token = "0x200015D")]
public class AudioMixerManager : MonoBehaviour
{
	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B010", Offset = "0xB5B010")]
	private sealed class <FadeAudioCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeIn;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioMixerManager <>4__this;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float time;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000665")]
			[Address(RVA = "0xF8C3CC", Offset = "0xF8C3CC", VA = "0xF8C3CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000667")]
			[Address(RVA = "0xF8C414", Offset = "0xF8C414", VA = "0xF8C414", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xF8C2C8", Offset = "0xF8C2C8", VA = "0xF8C2C8")]
		[DebuggerHidden]
		public <FadeAudioCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xF8C2F4", Offset = "0xF8C2F4", VA = "0xF8C2F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xF8C2F8", Offset = "0xF8C2F8", VA = "0xF8C2F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xF8C3D4", Offset = "0xF8C3D4", VA = "0xF8C3D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB65BA4", Offset = "0xB65BA4")]
	public AudioMixerSnapshot title_mixsnapshot;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerSnapshot ingame_mixsnapshot;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float title_snapshot_time;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixer m_fadeInMixer;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string m_mixerParameterName;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioMixerManager s_instance;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_mixerOriginalVolume;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_mixerQuietVolume;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly FeatureLock m_soundFading;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine m_fadeCoroutine;

	[Token(Token = "0x170000AF")]
	public static AudioMixerManager Instance
	{
		[Token(Token = "0x600065A")]
		[Address(RVA = "0x144CE20", Offset = "0x144CE20", VA = "0x144CE20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x144CF0C", Offset = "0x144CF0C", VA = "0x144CF0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x144D1E4", Offset = "0x144D1E4", VA = "0x144D1E4")]
	public void SetSoundEnabled(object obj, bool isEnabled)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x144D1F0", Offset = "0x144D1F0", VA = "0x144D1F0")]
	public void FadeAudio(object obj, bool fadeIn, float time = 0.5f)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x144D310", Offset = "0x144D310", VA = "0x144D310")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B19C", Offset = "0xB7B19C")]
	private IEnumerator FadeAudioCoroutine(bool fadeIn, float time = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x144D3AC", Offset = "0x144D3AC", VA = "0x144D3AC")]
	public static void SetMixerSnapshot_ingame()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x144D3EC", Offset = "0x144D3EC", VA = "0x144D3EC")]
	public static void SetMixerSnapshot_title()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x144D418", Offset = "0x144D418", VA = "0x144D418")]
	public AudioMixerManager()
	{
	}
}
[Token(Token = "0x200015F")]
public class AutoDestroy : MonoBehaviour
{
	[Token(Token = "0x2000160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B020", Offset = "0xB5B020")]
	private sealed class <SelfDestruct>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoDestroy <>4__this;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600066F")]
			[Address(RVA = "0xF8C944", Offset = "0xF8C944", VA = "0xF8C944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000671")]
			[Address(RVA = "0xF8C98C", Offset = "0xF8C98C", VA = "0xF8C98C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xF8C7B4", Offset = "0xF8C7B4", VA = "0xF8C7B4")]
		[DebuggerHidden]
		public <SelfDestruct>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xF8C7E0", Offset = "0xF8C7E0", VA = "0xF8C7E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xF8C7E4", Offset = "0xF8C7E4", VA = "0xF8C7E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xF8C94C", Offset = "0xF8C94C", VA = "0xF8C94C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_waitTime;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent m_onDestroy;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_destroyOnDisable;

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x144E414", Offset = "0x144E414", VA = "0x144E414")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x144E4B8", Offset = "0x144E4B8", VA = "0x144E4B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x144E440", Offset = "0x144E440", VA = "0x144E440")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B24C", Offset = "0xB7B24C")]
	private IEnumerator SelfDestruct()
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x144E544", Offset = "0x144E544", VA = "0x144E544")]
	public AutoDestroy()
	{
	}
}
[Token(Token = "0x2000161")]
public class AutoDestroyWithParticle : MonoBehaviour
{
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B030", Offset = "0xB5B030")]
	private sealed class <SelfDestruct>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoDestroyWithParticle <>4__this;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000678")]
			[Address(RVA = "0xF8CBEC", Offset = "0xF8CBEC", VA = "0xF8CBEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067A")]
			[Address(RVA = "0xF8CC34", Offset = "0xF8CC34", VA = "0xF8CC34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xF8C994", Offset = "0xF8C994", VA = "0xF8C994")]
		[DebuggerHidden]
		public <SelfDestruct>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xF8C9C0", Offset = "0xF8C9C0", VA = "0xF8C9C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xF8C9C4", Offset = "0xF8C9C4", VA = "0xF8C9C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xF8CBF4", Offset = "0xF8CBF4", VA = "0xF8CBF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_waitTime;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PooledObject m_objectPrefab;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_destroy;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x144E554", Offset = "0x144E554", VA = "0x144E554")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x144E580", Offset = "0x144E580", VA = "0x144E580")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B2FC", Offset = "0xB7B2FC")]
	private IEnumerator SelfDestruct()
	{
		return null;
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x144E5F8", Offset = "0x144E5F8", VA = "0x144E5F8")]
	public AutoDestroyWithParticle()
	{
	}
}
[Token(Token = "0x2000163")]
public class AutoRotate : MonoBehaviour
{
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B040", Offset = "0xB5B040")]
	private sealed class <LerpRotationSpeedCor>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoRotate <>4__this;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 newRotation;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lerpTime;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startRotation>5__2;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <time>5__3;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0xF8CD7C", Offset = "0xF8CD7C", VA = "0xF8CD7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000685")]
			[Address(RVA = "0xF8CDC4", Offset = "0xF8CDC4", VA = "0xF8CDC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xF8CC3C", Offset = "0xF8CC3C", VA = "0xF8CC3C")]
		[DebuggerHidden]
		public <LerpRotationSpeedCor>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xF8CC68", Offset = "0xF8CC68", VA = "0xF8CC68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xF8CC6C", Offset = "0xF8CC6C", VA = "0xF8CC6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xF8CD84", Offset = "0xF8CD84", VA = "0xF8CD84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_rotation;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space m_space;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_startRotation;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_newRotation;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_isLerpingSpeed;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_speedLerpTimer;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_speedLerpDuration;

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x144E610", Offset = "0x144E610", VA = "0x144E610")]
	private void Update()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x144E6FC", Offset = "0x144E6FC", VA = "0x144E6FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x144E708", Offset = "0x144E708", VA = "0x144E708")]
	public void LerpRotationSpeed(Vector3 newRotation, float lerpTime)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x144E734", Offset = "0x144E734", VA = "0x144E734")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B3AC", Offset = "0xB7B3AC")]
	private IEnumerator LerpRotationSpeedCor(Vector3 newRotation, float lerpTime)
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x144E7D4", Offset = "0x144E7D4", VA = "0x144E7D4")]
	public AutoRotate()
	{
	}
}
[Token(Token = "0x2000165")]
public class BasketEnemyShotsDisplayer : MonoBehaviour
{
	[Token(Token = "0x6000686")]
	[Address(RVA = "0x1452C10", Offset = "0x1452C10", VA = "0x1452C10")]
	public BasketEnemyShotsDisplayer()
	{
	}
}
[Token(Token = "0x2000166")]
public class ClassicCross : MonoBehaviour
{
	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DOTweenAnimation m_animation;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_isVisible;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x11A6748", Offset = "0x11A6748", VA = "0x11A6748")]
	public void SetVisible(bool visible, bool animate)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x11A6798", Offset = "0x11A6798", VA = "0x11A6798")]
	public ClassicCross()
	{
	}
}
[Token(Token = "0x2000167")]
public class DebugMenuLobby : MultiplayerHelper
{
	[Token(Token = "0x2000168")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B050", Offset = "0xB5B050")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SessionInfo sessionInfo;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DebugMenuLobby <>4__this;

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xF95490", Offset = "0xF95490", VA = "0xF95490")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xF95498", Offset = "0xF95498", VA = "0xF95498")]
		internal void <UpdateList>b__0()
		{
		}
	}

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_lobbyPrefab;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_content;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_connectionType;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_currentRoomName;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text m_currentAppVersion;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text m_isPublic;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DebugMenuStepper m_maxPlayers;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x109E978", Offset = "0x109E978", VA = "0x109E978")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x109F87C", Offset = "0x109F87C", VA = "0x109F87C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x109F33C", Offset = "0x109F33C", VA = "0x109F33C")]
	private void OnStartGame(bool success)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x109ECEC", Offset = "0x109ECEC", VA = "0x109ECEC")]
	private void UpdateList(List<SessionInfo> sessions)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x109FA54", Offset = "0x109FA54", VA = "0x109FA54", Slot = "4")]
	public override void AutoConnect()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x109FABC", Offset = "0x109FABC", VA = "0x109FABC")]
	public void AutoConnectPrivateMachine()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x109FBC4", Offset = "0x109FBC4", VA = "0x109FBC4", Slot = "7")]
	public override void AutoConnectLocalNetwork()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x109FCCC", Offset = "0x109FCCC", VA = "0x109FCCC", Slot = "8")]
	public override void HostPrivate()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x109FDE0", Offset = "0x109FDE0", VA = "0x109FDE0")]
	private void OnMaxPlayerValueChanged(float value)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x109FEBC", Offset = "0x109FEBC", VA = "0x109FEBC")]
	public DebugMenuLobby()
	{
	}
}
[Token(Token = "0x2000169")]
public class DebugMenuSlider : MonoBehaviour
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider m_sliderUI;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB65BDC", Offset = "0xB65BDC")]
	public string m_format;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI m_text;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x109FEC4", Offset = "0x109FEC4", VA = "0x109FEC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x109FF4C", Offset = "0x109FF4C", VA = "0x109FF4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x10A0010", Offset = "0x10A0010", VA = "0x10A0010")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x109FF00", Offset = "0x109FF00", VA = "0x109FF00")]
	private void ShowSliderValue(float value)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x10A00D4", Offset = "0x10A00D4", VA = "0x10A00D4")]
	public DebugMenuSlider()
	{
	}
}
[Token(Token = "0x200016A")]
public class DebugMenuStepper : MonoBehaviour
{
	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB65C14", Offset = "0xB65C14")]
	public Button m_plus;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button m_minus;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityAction<float> OnValueChanged;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB65C4C", Offset = "0xB65C4C")]
	public float m_value;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_min;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_max;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_step;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB65C84", Offset = "0xB65C84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB65C84", Offset = "0xB65C84")]
	public string m_format;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI m_text;

	[Token(Token = "0x170000B8")]
	public float Value
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x10A0130", Offset = "0x10A0130", VA = "0x10A0130")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x109ECE4", Offset = "0x109ECE4", VA = "0x109ECE4")]
		set
		{
		}
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x10A0188", Offset = "0x10A0188", VA = "0x10A0188")]
	private void Start()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x10A018C", Offset = "0x10A018C", VA = "0x10A018C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x10A0278", Offset = "0x10A0278", VA = "0x10A0278")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x10A0364", Offset = "0x10A0364", VA = "0x10A0364")]
	private void OnPlus()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x10A03E4", Offset = "0x10A03E4", VA = "0x10A03E4")]
	private void OnMinus()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x10A0138", Offset = "0x10A0138", VA = "0x10A0138")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x10A0464", Offset = "0x10A0464", VA = "0x10A0464")]
	public DebugMenuStepper()
	{
	}
}
[Token(Token = "0x200016B")]
public class DesktopCamera : MonoBehaviour
{
	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera m_camera;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScreenFade m_screenFade;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_fadeMaterial;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer m_fadeRenderer;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter m_fadeMesh;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color m_fadeColor;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x10A4770", Offset = "0x10A4770", VA = "0x10A4770")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x10A48F0", Offset = "0x10A48F0", VA = "0x10A48F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x10A497C", Offset = "0x10A497C", VA = "0x10A497C")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x10A49E0", Offset = "0x10A49E0", VA = "0x10A49E0")]
	public DesktopCamera()
	{
	}
}
[Token(Token = "0x200016C")]
public class ModalDialog : MonoBehaviour
{
	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float m_menusDistanceFromPlayer;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB65CF4", Offset = "0xB65CF4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB65CF4", Offset = "0xB65CF4")]
	protected GameObject m_ui;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject m_visionBlocker;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB65D74", Offset = "0xB65D74")]
	[SerializeField]
	protected LayerMask m_cameraCullingMask;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB65DC0", Offset = "0xB65DC0")]
	[SerializeField]
	private UnityEvent m_onOpen;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent m_onClosed;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB65E1C", Offset = "0xB65E1C")]
	private bool <IsActive>k__BackingField;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB65E2C", Offset = "0xB65E2C")]
	private static ModalDialog <Current>k__BackingField;

	[Token(Token = "0x170000B9")]
	public bool IsActive
	{
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xF1A540", Offset = "0xF1A540", VA = "0xF1A540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B46C", Offset = "0xB7B46C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xF1A534", Offset = "0xF1A534", VA = "0xF1A534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B45C", Offset = "0xB7B45C")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public LayerMask CameraCullingMask
	{
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xF1A548", Offset = "0xF1A548", VA = "0xF1A548")]
		get
		{
			return default(LayerMask);
		}
	}

	[Token(Token = "0x170000BB")]
	protected bool CanMenuBeOpenedOrClosed
	{
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xF1A550", Offset = "0xF1A550", VA = "0xF1A550")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BC")]
	public static ModalDialog Current
	{
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xF1A810", Offset = "0xF1A810", VA = "0xF1A810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B47C", Offset = "0xB7B47C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xF1A85C", Offset = "0xF1A85C", VA = "0xF1A85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B48C", Offset = "0xB7B48C")]
		private set
		{
		}
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xF1A8B0", Offset = "0xF1A8B0", VA = "0xF1A8B0", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xF1A8F4", Offset = "0xF1A8F4", VA = "0xF1A8F4", Slot = "5")]
	public virtual void Hide()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xF1A904", Offset = "0xF1A904", VA = "0xF1A904", Slot = "6")]
	protected virtual void SetActive(bool active)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xF1AE8C", Offset = "0xF1AE8C", VA = "0xF1AE8C")]
	public void ActivateToNewPlayer()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xF1B670", Offset = "0xF1B670", VA = "0xF1B670")]
	public Quaternion GetRelativeRotationToPlayer()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xF1B73C", Offset = "0xF1B73C", VA = "0xF1B73C")]
	public void ApplyRelativeRotationToPlayer(Quaternion relativeRotation)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xF1B270", Offset = "0xF1B270", VA = "0xF1B270")]
	private static void FreeUpHands()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xF1B7F8", Offset = "0xF1B7F8", VA = "0xF1B7F8")]
	public ModalDialog()
	{
	}
}
[Token(Token = "0x200016D")]
public class ModalDialogMultiplayer : ModalDialog
{
	[Token(Token = "0x200016E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B060", Offset = "0xB5B060")]
	private sealed class <AcceptAfterCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModalDialogMultiplayer <>4__this;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <text>5__2;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0xFDCD2C", Offset = "0xFDCD2C", VA = "0xFDCD2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0xFDCD74", Offset = "0xFDCD74", VA = "0xFDCD74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xFDCBA8", Offset = "0xFDCBA8", VA = "0xFDCBA8")]
		[DebuggerHidden]
		public <AcceptAfterCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xFDCBD4", Offset = "0xFDCBD4", VA = "0xFDCBD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xFDCBD8", Offset = "0xFDCBD8", VA = "0xFDCBD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xFDCD34", Offset = "0xFDCD34", VA = "0xFDCD34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_buttonAccept;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Localize m_buttonAcceptLocalize;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TMP_Text m_buttonAcceptText;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_buttonDisconnect;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Localize m_textTitle;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Localize m_textMessage;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB65E3C", Offset = "0xB65E3C")]
	private static ModalDialogMultiplayer <Instance>k__BackingField;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Action m_onAccept;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Action m_onDisconnect;

	[Token(Token = "0x170000BD")]
	public static ModalDialogMultiplayer Instance
	{
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xF1C10C", Offset = "0xF1C10C", VA = "0xF1C10C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B4AC", Offset = "0xB7B4AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xF1C0B8", Offset = "0xF1C0B8", VA = "0xF1C0B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B49C", Offset = "0xB7B49C")]
		private set
		{
		}
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xF1C158", Offset = "0xF1C158", VA = "0xF1C158", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xF1C1B0", Offset = "0xF1C1B0", VA = "0xF1C1B0")]
	public void Show(string titleTerm, string messageTerm, bool showAccept, bool showDisconnect, [Optional] Action onAccept, [Optional] Action onDisconnect)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xF1C290", Offset = "0xF1C290", VA = "0xF1C290", Slot = "6")]
	protected override void SetActive(bool active)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xF1C3AC", Offset = "0xF1C3AC", VA = "0xF1C3AC")]
	public void ShowInviteError(string messageTerm)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xF1C49C", Offset = "0xF1C49C", VA = "0xF1C49C")]
	public void ShowDisconnected(string messageTerm, Action onAccept)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xF1C50C", Offset = "0xF1C50C", VA = "0xF1C50C")]
	public void ShowServerUnresponsive(Action onDisconnect)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xF1C470", Offset = "0xF1C470", VA = "0xF1C470")]
	public void AcceptAfter(float time)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xF1C58C", Offset = "0xF1C58C", VA = "0xF1C58C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B4BC", Offset = "0xB7B4BC")]
	private IEnumerator AcceptAfterCoroutine(float time)
	{
		return null;
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xF1C614", Offset = "0xF1C614", VA = "0xF1C614")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xF1C684", Offset = "0xF1C684", VA = "0xF1C684")]
	public void Accept()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xF1C644", Offset = "0xF1C644", VA = "0xF1C644")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xF1C6B4", Offset = "0xF1C6B4", VA = "0xF1C6B4")]
	public ModalDialogMultiplayer()
	{
	}
}
[Token(Token = "0x200016F")]
public class ModalDialogQuit : ModalDialog
{
	[Serializable]
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B070", Offset = "0xB5B070")]
	private sealed class <>c
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__9_0;

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xFDCDE0", Offset = "0xFDCDE0", VA = "0xFDCDE0")]
		public <>c()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xFDCDE8", Offset = "0xFDCDE8", VA = "0xFDCDE8")]
		internal void <QuitGame>b__9_0()
		{
		}
	}

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SettingsPlayerDataObject m_settingsPlayerDataObject;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB65E4C", Offset = "0xB65E4C")]
	private static ModalDialogQuit <Instance>k__BackingField;

	[Token(Token = "0x170000C0")]
	public static ModalDialogQuit Instance
	{
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xF1C6C8", Offset = "0xF1C6C8", VA = "0xF1C6C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B56C", Offset = "0xB7B56C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xF1C714", Offset = "0xF1C714", VA = "0xF1C714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B57C", Offset = "0xB7B57C")]
		private set
		{
		}
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xF1C768", Offset = "0xF1C768", VA = "0xF1C768", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xF1C890", Offset = "0xF1C890", VA = "0xF1C890", Slot = "7")]
	public virtual void ToggleMenu()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xF1C8D8", Offset = "0xF1C8D8", VA = "0xF1C8D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xF1C9C4", Offset = "0xF1C9C4", VA = "0xF1C9C4", Slot = "6")]
	protected override void SetActive(bool active)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xF1CA64", Offset = "0xF1CA64", VA = "0xF1CA64")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xF1CBAC", Offset = "0xF1CBAC", VA = "0xF1CBAC")]
	public ModalDialogQuit()
	{
	}
}
[Token(Token = "0x2000171")]
public class DisplayBasedOnMapAreaUnlockable : MonoBehaviour
{
	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AreaManager.AreaType m_areaType;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x10EDE84", Offset = "0x10EDE84", VA = "0x10EDE84")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x10EDF44", Offset = "0x10EDF44", VA = "0x10EDF44")]
	public DisplayBasedOnMapAreaUnlockable()
	{
	}
}
[Token(Token = "0x2000172")]
public class DisplayBasedOnUnlockable : MonoBehaviour
{
	[Token(Token = "0x2000173")]
	private enum DisplayType
	{
		[Token(Token = "0x40008C1")]
		DisplayWhileNotUnlocked,
		[Token(Token = "0x40008C2")]
		DisplayWhileUnlockNotSeen,
		[Token(Token = "0x40008C3")]
		DisplayWhenUnlocked,
		[Token(Token = "0x40008C4")]
		DisplayWhenUnlockedSeen
	}

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Game.Unlockable m_unlockable;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB65E7C", Offset = "0xB65E7C")]
	[SerializeField]
	private DisplayType m_displayType;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x10EDF4C", Offset = "0x10EDF4C", VA = "0x10EDF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x10EE3C4", Offset = "0x10EE3C4", VA = "0x10EE3C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x10EE510", Offset = "0x10EE510", VA = "0x10EE510")]
	private void TurnGameObjectOff()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x10EE538", Offset = "0x10EE538", VA = "0x10EE538")]
	private void TurnGameObjectOn()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x10EE560", Offset = "0x10EE560", VA = "0x10EE560")]
	public DisplayBasedOnUnlockable()
	{
	}
}
[Token(Token = "0x2000174")]
public class DisplayUserInfo : MonoBehaviour
{
	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RawImage m_userIcon;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_userName;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_downloadedUserIcon;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x10EF3E0", Offset = "0x10EF3E0", VA = "0x10EF3E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x10EF6CC", Offset = "0x10EF6CC", VA = "0x10EF6CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x10EF82C", Offset = "0x10EF82C", VA = "0x10EF82C")]
	private void GotAvatarImage(Texture2D texture2D)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x10EF93C", Offset = "0x10EF93C", VA = "0x10EF93C")]
	private void OnPingResultReceived(bool isConnected)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x10EFACC", Offset = "0x10EFACC", VA = "0x10EFACC")]
	public DisplayUserInfo()
	{
	}
}
[Token(Token = "0x2000175")]
public class DistanceTransformAdjuster : MonoBehaviour
{
	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB65EE8", Offset = "0xB65EE8")]
	public RangedVector3 m_scaleRange;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB65F20", Offset = "0xB65F20")]
	public RangedFloat m_scaleDistanceRange;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Ease m_scaleEase;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB65F58", Offset = "0xB65F58")]
	public RangedFloat m_heightRange;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB65F90", Offset = "0xB65F90")]
	public RangedFloat m_heightDistanceRange;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Ease m_heightEase;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RangedFloat m_scaleDistanceRangeSquared;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RangedFloat m_heightDistanceRangeSquared;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_transform;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 m_defaultPos;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x10F1A2C", Offset = "0x10F1A2C", VA = "0x10F1A2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x10F1AB8", Offset = "0x10F1AB8", VA = "0x10F1AB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x10F1CF0", Offset = "0x10F1CF0", VA = "0x10F1CF0")]
	public DistanceTransformAdjuster()
	{
	}
}
[Token(Token = "0x2000176")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B080", Offset = "0xB5B080")]
public class DoTweenPathController : MonoBehaviour
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DOTweenPath m_path;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_currentWaypointTarget;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_lastHitWayPoint;

	[Token(Token = "0x170000C1")]
	public int CurrentWaypointTarget
	{
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x10F1F80", Offset = "0x10F1F80", VA = "0x10F1F80")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x10F1F88", Offset = "0x10F1F88", VA = "0x10F1F88")]
		set
		{
		}
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x10F20E0", Offset = "0x10F20E0", VA = "0x10F20E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x10F21C0", Offset = "0x10F21C0", VA = "0x10F21C0")]
	public DoTweenPathController()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x10F21C8", Offset = "0x10F21C8", VA = "0x10F21C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B58C", Offset = "0xB7B58C")]
	private void <set_CurrentWaypointTarget>b__3_0(int waypoint)
	{
	}
}
[Token(Token = "0x2000177")]
public class EnableParticle : MonoBehaviour
{
	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_particle;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x10F69D4", Offset = "0x10F69D4", VA = "0x10F69D4")]
	public void TriggerParticle()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x10F6A7C", Offset = "0x10F6A7C", VA = "0x10F6A7C")]
	public EnableParticle()
	{
	}
}
[Token(Token = "0x2000178")]
public class EnumFlagsAttribute : UnityEngine.PropertyAttribute
{
	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x10F6C70", Offset = "0x10F6C70", VA = "0x10F6C70")]
	public EnumFlagsAttribute()
	{
	}
}
[Token(Token = "0x2000179")]
public class EnvironmentHit : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200017A")]
	public class HitType
	{
		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask m_layers;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_tag;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent m_onHitEvent;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ISound m_sound;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PooledObject m_effectPrefab;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Animator m_animator;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_animTrigger;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 m_offset;

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xF96328", Offset = "0xF96328", VA = "0xF96328")]
		public HitType()
		{
		}
	}

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB65FC8", Offset = "0xB65FC8")]
	public bool m_isEnabled;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_isTriggerCollider;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_minHitRepeatTime;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_allowArrowSticking;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66000", Offset = "0xB66000")]
	public bool m_sendHitEvents;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_objectID;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<HitType> m_hitTypes;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_lastHitTime;

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x10F6C78", Offset = "0x10F6C78", VA = "0x10F6C78")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x10F7308", Offset = "0x10F7308", VA = "0x10F7308")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x10F6D14", Offset = "0x10F6D14", VA = "0x10F6D14")]
	public void GetHit(Rigidbody otherObject, Vector3 hitPosition)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x10F738C", Offset = "0x10F738C", VA = "0x10F738C")]
	public void SetEnabled(bool value)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x10F7398", Offset = "0x10F7398", VA = "0x10F7398")]
	public EnvironmentHit()
	{
	}
}
[Token(Token = "0x200017B")]
public class EnvironmentMaterial : MonoBehaviour
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66038", Offset = "0xB66038")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66038", Offset = "0xB66038")]
	public EnvironmentMaterialTextureConfig m_materialTextureConfig;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66098", Offset = "0xB66098")]
	public EnvironmentMaterialConfig m_materialConfig;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x10F7428", Offset = "0x10F7428", VA = "0x10F7428")]
	public EnvironmentMaterial()
	{
	}
}
[Token(Token = "0x200017C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5B0E0", Offset = "0xB5B0E0")]
public class EnvironmentMaterialConfig : ScriptableObject
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PooledObject m_arrowImpactParticle;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ISound m_arrowImpactSound;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_affectedByArrowSpeed;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x10F7430", Offset = "0x10F7430", VA = "0x10F7430")]
	public EnvironmentMaterialConfig()
	{
	}
}
[Token(Token = "0x200017D")]
public class EnvironmentMaterialConfigHolder : MonoBehaviour
{
	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<EnvironmentMaterialConfig> m_materialConfigs;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB660E0", Offset = "0xB660E0")]
	private static EnvironmentMaterialConfigHolder <Instance>k__BackingField;

	[Token(Token = "0x170000C2")]
	public static EnvironmentMaterialConfigHolder Instance
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x10F7440", Offset = "0x10F7440", VA = "0x10F7440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B59C", Offset = "0xB7B59C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x10F748C", Offset = "0x10F748C", VA = "0x10F748C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B5AC", Offset = "0xB7B5AC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public List<EnvironmentMaterialConfig> MaterialConfigs
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x10F74E0", Offset = "0x10F74E0", VA = "0x10F74E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x10F74E8", Offset = "0x10F74E8", VA = "0x10F74E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x10F761C", Offset = "0x10F761C", VA = "0x10F761C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x10F7708", Offset = "0x10F7708", VA = "0x10F7708")]
	public EnvironmentMaterialConfigHolder()
	{
	}
}
[Token(Token = "0x200017E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5B140", Offset = "0xB5B140")]
public class EnvironmentMaterialTextureConfig : ScriptableObject
{
	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2Int m_gridSize;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EnvironmentMaterialConfig> m_materials;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x10F7710", Offset = "0x10F7710", VA = "0x10F7710")]
	public EnvironmentMaterialTextureConfig()
	{
	}
}
[Token(Token = "0x200017F")]
public class ExplosiveForce : MonoBehaviour
{
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B1A0", Offset = "0xB5B1A0")]
	private sealed class <ExplodeAfterDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExplosiveForce <>4__this;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000702")]
			[Address(RVA = "0xF96604", Offset = "0xF96604", VA = "0xF96604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0xF9664C", Offset = "0xF9664C", VA = "0xF9664C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xF96408", Offset = "0xF96408", VA = "0xF96408")]
		[DebuggerHidden]
		public <ExplodeAfterDelay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xF96434", Offset = "0xF96434", VA = "0xF96434", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xF96438", Offset = "0xF96438", VA = "0xF96438", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xF9660C", Offset = "0xF9660C", VA = "0xF9660C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_radius;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_force;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_explosionTransform;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool m_explodeOnStart;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_explosionDelay;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_upwardModifier;

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x10F8070", Offset = "0x10F8070", VA = "0x10F8070")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x10F80AC", Offset = "0x10F80AC", VA = "0x10F80AC")]
	public void Explode()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x10F8164", Offset = "0x10F8164", VA = "0x10F8164")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x10F80DC", Offset = "0x10F80DC", VA = "0x10F80DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B5BC", Offset = "0xB7B5BC")]
	private IEnumerator ExplodeAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x10F819C", Offset = "0x10F819C", VA = "0x10F819C")]
	public ExplosiveForce()
	{
	}
}
[Token(Token = "0x2000181")]
public class Frog : MonoBehaviour
{
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B1B0", Offset = "0xB5B1B0")]
	private sealed class <FrogBehaviour>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Frog <>4__this;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FrogNode <frogNode>5__2;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <nextJump>5__3;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000710")]
			[Address(RVA = "0xFC8ED4", Offset = "0xFC8ED4", VA = "0xFC8ED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000712")]
			[Address(RVA = "0xFC8F1C", Offset = "0xFC8F1C", VA = "0xFC8F1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xFC8D24", Offset = "0xFC8D24", VA = "0xFC8D24")]
		[DebuggerHidden]
		public <FrogBehaviour>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xFC8D50", Offset = "0xFC8D50", VA = "0xFC8D50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xFC8D54", Offset = "0xFC8D54", VA = "0xFC8D54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xFC8EDC", Offset = "0xFC8EDC", VA = "0xFC8EDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B1C0", Offset = "0xB5B1C0")]
	private sealed class <RotateFrogCor>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Frog <>4__this;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 destination;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float jumpTime;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <initialRotation>5__2;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion <finalRotation>5__3;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <rotationTime>5__4;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <timeElapsed>5__5;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000716")]
			[Address(RVA = "0xFC9708", Offset = "0xFC9708", VA = "0xFC9708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000718")]
			[Address(RVA = "0xFC9750", Offset = "0xFC9750", VA = "0xFC9750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xFC9318", Offset = "0xFC9318", VA = "0xFC9318")]
		[DebuggerHidden]
		public <RotateFrogCor>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xFC9344", Offset = "0xFC9344", VA = "0xFC9344", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xFC9348", Offset = "0xFC9348", VA = "0xFC9348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xFC9710", Offset = "0xFC9710", VA = "0xFC9710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B1D0", Offset = "0xB5B1D0")]
	private sealed class <JumpCor>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Frog <>4__this;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 destination;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float jumpTime;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FruitCannon.LaunchData <launchData>5__2;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 <initialPosition>5__3;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float <timeElapsed>5__4;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600071C")]
			[Address(RVA = "0xFC92C8", Offset = "0xFC92C8", VA = "0xFC92C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071E")]
			[Address(RVA = "0xFC9310", Offset = "0xFC9310", VA = "0xFC9310", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xFC8F24", Offset = "0xFC8F24", VA = "0xFC8F24")]
		[DebuggerHidden]
		public <JumpCor>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xFC8F50", Offset = "0xFC8F50", VA = "0xFC8F50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xFC8F54", Offset = "0xFC8F54", VA = "0xFC8F54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xFC92D0", Offset = "0xFC92D0", VA = "0xFC92D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator m_animator;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationClip m_jumpAnimationClip;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AnimationClip m_rotateAnimationClip;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66180", Offset = "0xB66180")]
	[SerializeField]
	private float m_delayBetweenRotationAndJump;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Ease m_easeJump;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_parabolaHeightModifier;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_jumpSpeed;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_anticipationTimePercentage;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6620C", Offset = "0xB6620C")]
	[SerializeField]
	private float m_angleRotationThreshold;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Ease m_easeRotation;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float m_rotationSpeed;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private FrogNode m_startingNode;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private RangedFloat m_timeBetweenEachJumpSequence;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ISound m_frogJump;

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x10FD720", Offset = "0x10FD720", VA = "0x10FD720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x10FD7C4", Offset = "0x10FD7C4", VA = "0x10FD7C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x10FD74C", Offset = "0x10FD74C", VA = "0x10FD74C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B66C", Offset = "0xB7B66C")]
	private IEnumerator FrogBehaviour()
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x10FD7CC", Offset = "0x10FD7CC", VA = "0x10FD7CC")]
	private FrogNode FindValidNodeToJumpTo(FrogNode currentNode)
	{
		return null;
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x10FD824", Offset = "0x10FD824", VA = "0x10FD824")]
	private void InitiateJumpSequence(Vector3 destination)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x10FD8B0", Offset = "0x10FD8B0", VA = "0x10FD8B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B6CC", Offset = "0xB7B6CC")]
	private IEnumerator RotateFrogCor(float jumpTime, Vector3 destination)
	{
		return null;
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x10FD950", Offset = "0x10FD950", VA = "0x10FD950")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7B72C", Offset = "0xB7B72C")]
	private IEnumerator JumpCor(Vector3 destination, float jumpTime)
	{
		return null;
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x10FD9F0", Offset = "0x10FD9F0", VA = "0x10FD9F0")]
	public Frog()
	{
	}
}
[Token(Token = "0x2000185")]
public class FrogNode : MonoBehaviour
{
	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FrogNode[] m_connectingNodes;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RangedVector3 m_offset;

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x10FDA18", Offset = "0x10FDA18", VA = "0x10FDA18")]
	public Vector3 GetDestinationOnNode()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x10FDA84", Offset = "0x10FDA84", VA = "0x10FDA84")]
	public FrogNode()
	{
	}
}
[Token(Token = "0x2000186")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B1E0", Offset = "0xB5B1E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B1E0", Offset = "0xB5B1E0")]
public class Fruit : MonoBehaviour
{
	[Token(Token = "0x2000187")]
	public class FruitSlicedEvent
	{
		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FruitConfig m_fruitConfig;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_slicedPosition;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion m_slicedRotation;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 m_fruitVelocity;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 m_sliceImpactPoint;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 m_sliceVelocity;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Plane m_slicePlane;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_lifetime;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int m_waveId;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int m_fruitId;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string m_slicingEntityId;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_directionalSliceScore;

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xFC9990", Offset = "0xFC9990", VA = "0xFC9990")]
		public FruitSlicedEvent()
		{
		}
	}

	[Token(Token = "0x2000188")]
	public enum PhysicsMode
	{
		[Token(Token = "0x4000970")]
		CustomPhysicsPassive,
		[Token(Token = "0x4000971")]
		CustomPhysicsActive,
		[Token(Token = "0x4000972")]
		RigidbodyPhysics
	}

	[Token(Token = "0x2000189")]
	public enum SliceDirection
	{
		[Token(Token = "0x4000974")]
		None,
		[Token(Token = "0x4000975")]
		Random,
		[Token(Token = "0x4000976")]
		Up,
		[Token(Token = "0x4000977")]
		Down,
		[Token(Token = "0x4000978")]
		Left,
		[Token(Token = "0x4000979")]
		Right,
		[Token(Token = "0x400097A")]
		UpLeft,
		[Token(Token = "0x400097B")]
		UpRight,
		[Token(Token = "0x400097C")]
		DownLeft,
		[Token(Token = "0x400097D")]
		DownRight
	}

	[Token(Token = "0x200018A")]
	public enum SliceQuality
	{
		[Token(Token = "0x400097F")]
		None,
		[Token(Token = "0x4000980")]
		Bad,
		[Token(Token = "0x4000981")]
		Good,
		[Token(Token = "0x4000982")]
		Great,
		[Token(Token = "0x4000983")]
		Perfect
	}

	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B274", Offset = "0xB5B274")]
	private sealed class <FruitColorCoroutine>d__174 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fruit <>4__this;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float time;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <remainingTime>5__2;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xFC9940", Offset = "0xFC9940", VA = "0xFC9940", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xFC9988", Offset = "0xFC9988", VA = "0xFC9988", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xFC9758", Offset = "0xFC9758", VA = "0xFC9758")]
		[DebuggerHidden]
		public <FruitColorCoroutine>d__174(int <>1__state)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xFC9784", Offset = "0xFC9784", VA = "0xFC9784", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xFC9788", Offset = "0xFC9788", VA = "0xFC9788", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xFC9948", Offset = "0xFC9948", VA = "0xFC9948", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter m_fruitMeshFilter;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter m_fruitOutlineMeshFilter;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SphereCollider m_collider;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB662A8", Offset = "0xB662A8")]
	public bool m_deadWhenGrounded;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB662E0", Offset = "0xB662E0")]
	public float m_environmentHitKillDelay;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_collisionGracePeriod;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_arrowTransform;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_deflectionGravityModifier;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer m_fruitMeshRenderer;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshRenderer m_fruitOutlineMeshRenderer;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected FruitConfig m_fruitConfig;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected FruitPhysics m_fruitPhysics;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected FruitSpinner m_fruitSpinner;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Rigidbody m_rigidbody;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected PooledObject m_pooledObject;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Transform m_transform;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected FruitAttachment m_attachment;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected int m_recycleCount;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected bool m_isPaused;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected SliceDirection m_requiredSliceDirection;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Material m_nonStandardMaterial;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Material m_fruitMaterialOverride;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float m_lifetime;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected float m_deflectDelayTime;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected float m_collisionDetectionDelay;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected SliceableObjectBase m_sliceableObject;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Grabbable m_grabbable;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected FruitHalf m_cachedLeftHalf;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected FruitHalf m_cachedRightHalf;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66318", Offset = "0xB66318")]
	private bool <HasLaunched>k__BackingField;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66328", Offset = "0xB66328")]
	private int <Id>k__BackingField;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66338", Offset = "0xB66338")]
	private int <WaveId>k__BackingField;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66348", Offset = "0xB66348")]
	private List<FruitTag> <Tags>k__BackingField;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_colorBlendId;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int s_colorBlendFactorId;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66358", Offset = "0xB66358")]
	private bool <IsSliced>k__BackingField;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66368", Offset = "0xB66368")]
	private bool <IsGrounded>k__BackingField;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66378", Offset = "0xB66378")]
	private bool <IsSliceable>k__BackingField;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	protected bool m_waitingToBeKilled;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66388", Offset = "0xB66388")]
	private bool <SuppressCriticalEffects>k__BackingField;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66398", Offset = "0xB66398")]
	private Transform <SliceTarget>k__BackingField;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected float m_lastSliceTime;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	protected float m_scaleMultiplier;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected float m_waitKillTimer;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	protected PhysicsMode m_physicsMode;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected string m_slicedById;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static int s_persistentId;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected int m_persistentId;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected bool m_hasBeenDeflected;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected Vector3 m_gravity;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	protected Vector3 m_rigidbodyVelocityOnPaused;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected Vector3 m_rigidbodyAngularVelocityOnPaused;

	[Token(Token = "0x4000953")]
	protected const float DefaultPhysics = -4f;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	protected bool m_pendingRecycle;

	[Token(Token = "0x170000CC")]
	public FruitConfig Config
	{
		[Token(Token = "0x6000721")]
		[Address(RVA = "0x10FDA8C", Offset = "0x10FDA8C", VA = "0x10FDA8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public float Lifetime
	{
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x10FDA94", Offset = "0x10FDA94", VA = "0x10FDA94")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CE")]
	public bool HasLaunched
	{
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x10FDA9C", Offset = "0x10FDA9C", VA = "0x10FDA9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B87C", Offset = "0xB7B87C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x10FDAA4", Offset = "0x10FDAA4", VA = "0x10FDAA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B88C", Offset = "0xB7B88C")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public int Id
	{
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x10FDAB0", Offset = "0x10FDAB0", VA = "0x10FDAB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B89C", Offset = "0xB7B89C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000726")]
		[Address(RVA = "0x10FDAB8", Offset = "0x10FDAB8", VA = "0x10FDAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B8AC", Offset = "0xB7B8AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public int WaveId
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0x10FDAC0", Offset = "0x10FDAC0", VA = "0x10FDAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B8BC", Offset = "0xB7B8BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x10FDAC8", Offset = "0x10FDAC8", VA = "0x10FDAC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B8CC", Offset = "0xB7B8CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public int PersistentId
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x10FDAD0", Offset = "0x10FDAD0", VA = "0x10FDAD0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D2")]
	public FruitPhysics FruitPhysics
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x10FDAD8", Offset = "0x10FDAD8", VA = "0x10FDAD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public FruitSpinner FruitSpinner
	{
		[Token(Token = "0x600072B")]
		[Address(RVA = "0x10FDAE0", Offset = "0x10FDAE0", VA = "0x10FDAE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D4")]
	public Rigidbody Rigidbody
	{
		[Token(Token = "0x600072C")]
		[Address(RVA = "0x10FDAE8", Offset = "0x10FDAE8", VA = "0x10FDAE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D5")]
	public MeshRenderer MeshRenderer
	{
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x10FDAF0", Offset = "0x10FDAF0", VA = "0x10FDAF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D6")]
	public List<FruitTag> Tags
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x10FDAF8", Offset = "0x10FDAF8", VA = "0x10FDAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B8DC", Offset = "0xB7B8DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x10FDB00", Offset = "0x10FDB00", VA = "0x10FDB00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B8EC", Offset = "0xB7B8EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public virtual bool IsSliced
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x10FDB08", Offset = "0x10FDB08", VA = "0x10FDB08", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B8FC", Offset = "0xB7B8FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x10FDB10", Offset = "0x10FDB10", VA = "0x10FDB10", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B90C", Offset = "0xB7B90C")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public bool IsGrounded
	{
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x10FDB1C", Offset = "0x10FDB1C", VA = "0x10FDB1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B91C", Offset = "0xB7B91C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x10FDB24", Offset = "0x10FDB24", VA = "0x10FDB24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B92C", Offset = "0xB7B92C")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public bool IsSliceable
	{
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x10FDB30", Offset = "0x10FDB30", VA = "0x10FDB30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B93C", Offset = "0xB7B93C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x10FDB38", Offset = "0x10FDB38", VA = "0x10FDB38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B94C", Offset = "0xB7B94C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public bool IsSkewered
	{
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x10FDB44", Offset = "0x10FDB44", VA = "0x10FDB44")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DB")]
	public SliceableObjectBase SliceableObject
	{
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x10FDB60", Offset = "0x10FDB60", VA = "0x10FDB60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DC")]
	public bool SuppressCriticalEffects
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x10FDB68", Offset = "0x10FDB68", VA = "0x10FDB68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B95C", Offset = "0xB7B95C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x10FDB70", Offset = "0x10FDB70", VA = "0x10FDB70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B96C", Offset = "0xB7B96C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public string SlicedById
	{
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x10FDB7C", Offset = "0x10FDB7C", VA = "0x10FDB7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DE")]
	public Transform SliceTarget
	{
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x10FDB84", Offset = "0x10FDB84", VA = "0x10FDB84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B97C", Offset = "0xB7B97C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x10FDB8C", Offset = "0x10FDB8C", VA = "0x10FDB8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B98C", Offset = "0xB7B98C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public float ScaleMultiplier
	{
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x10FDB9C", Offset = "0x10FDB9C", VA = "0x10FDB9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x10FDBA4", Offset = "0x10FDBA4", VA = "0x10FDBA4")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public Material FruitMaterialOverride
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x10FDC74", Offset = "0x10FDC74", VA = "0x10FDC74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x10FDC7C", Offset = "0x10FDC7C", VA = "0x10FDC7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public bool OutlineEnabled
	{
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x10FDE40", Offset = "0x10FDE40", VA = "0x10FDE40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x10FDEF4", Offset = "0x10FDEF4", VA = "0x10FDEF4")]
		set
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event Action<Fruit> OnFruitLaunched
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x10FDF98", Offset = "0x10FDF98", VA = "0x10FDF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B99C", Offset = "0xB7B99C")]
		add
		{
		}
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x10FE090", Offset = "0x10FE090", VA = "0x10FE090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B9AC", Offset = "0xB7B9AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event Action<Fruit> OnFruitDestroyed
	{
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x10FE188", Offset = "0x10FE188", VA = "0x10FE188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B9BC", Offset = "0xB7B9BC")]
		add
		{
		}
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x10FE280", Offset = "0x10FE280", VA = "0x10FE280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B9CC", Offset = "0xB7B9CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event Action<Fruit> OnFruitGrounded
	{
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x10FE378", Offset = "0x10FE378", VA = "0x10FE378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B9DC", Offset = "0xB7B9DC")]
		add
		{
		}
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x10FE470", Offset = "0x10FE470", VA = "0x10FE470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B9EC", Offset = "0xB7B9EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event Action<Fruit> OnFruitDeflected
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x10FE568", Offset = "0x10FE568", VA = "0x10FE568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7B9FC", Offset = "0xB7B9FC")]
		add
		{
		}
		[Token(Token = "0x600074A")]
		[Address(RVA = "0x10FE660", Offset = "0x10FE660", VA = "0x10FE660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA0C", Offset = "0xB7BA0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action<Fruit> OnFruitSelfDestructed
	{
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x10FE758", Offset = "0x10FE758", VA = "0x10FE758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA1C", Offset = "0xB7BA1C")]
		add
		{
		}
		[Token(Token = "0x600074C")]
		[Address(RVA = "0x10FE850", Offset = "0x10FE850", VA = "0x10FE850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA2C", Offset = "0xB7BA2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Action<Fruit, FruitHalf, FruitHalf, FruitSlicedEvent> OnFruitSliced
	{
		[Token(Token = "0x600074D")]
		[Address(RVA = "0x10FE948", Offset = "0x10FE948", VA = "0x10FE948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA3C", Offset = "0xB7BA3C")]
		add
		{
		}
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x10FEA40", Offset = "0x10FEA40", VA = "0x10FEA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA4C", Offset = "0xB7BA4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Action<Fruit> OnFruitSkewered
	{
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x10FEB38", Offset = "0x10FEB38", VA = "0x10FEB38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA5C", Offset = "0xB7BA5C")]
		add
		{
		}
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x10FEC30", Offset = "0x10FEC30", VA = "0x10FEC30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA6C", Offset = "0xB7BA6C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action<Fruit> OnThisFruitGrounded
	{
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x10FED28", Offset = "0x10FED28", VA = "0x10FED28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA7C", Offset = "0xB7BA7C")]
		add
		{
		}
		[Token(Token = "0x6000752")]
		[Address(RVA = "0x10FEDCC", Offset = "0x10FEDCC", VA = "0x10FEDCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA8C", Offset = "0xB7BA8C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event Action<Fruit> OnThisFruitDeflected
	{
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x10FEE70", Offset = "0x10FEE70", VA = "0x10FEE70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BA9C", Offset = "0xB7BA9C")]
		add
		{
		}
		[Token(Token = "0x6000754")]
		[Address(RVA = "0x10FEF14", Offset = "0x10FEF14", VA = "0x10FEF14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BAAC", Offset = "0xB7BAAC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event Action<Fruit> OnThisFruitSliced
	{
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x10FEFB8", Offset = "0x10FEFB8", VA = "0x10FEFB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BABC", Offset = "0xB7BABC")]
		add
		{
		}
		[Token(Token = "0x6000756")]
		[Address(RVA = "0x10FF05C", Offset = "0x10FF05C", VA = "0x10FF05C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BACC", Offset = "0xB7BACC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event Action<Fruit> OnThisFruitSkewered
	{
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x10FF100", Offset = "0x10FF100", VA = "0x10FF100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BADC", Offset = "0xB7BADC")]
		add
		{
		}
		[Token(Token = "0x6000758")]
		[Address(RVA = "0x10FF1A4", Offset = "0x10FF1A4", VA = "0x10FF1A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BAEC", Offset = "0xB7BAEC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action<Fruit> OnThisFruitLaunched
	{
		[Token(Token = "0x6000759")]
		[Address(RVA = "0x10FF248", Offset = "0x10FF248", VA = "0x10FF248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BAFC", Offset = "0xB7BAFC")]
		add
		{
		}
		[Token(Token = "0x600075A")]
		[Address(RVA = "0x10FF2EC", Offset = "0x10FF2EC", VA = "0x10FF2EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BB0C", Offset = "0xB7BB0C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event Action<Fruit> OnThisFruitDestroyed
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x10FF390", Offset = "0x10FF390", VA = "0x10FF390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BB1C", Offset = "0xB7BB1C")]
		add
		{
		}
		[Token(Token = "0x600075C")]
		[Address(RVA = "0x10FF434", Offset = "0x10FF434", VA = "0x10FF434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BB2C", Offset = "0xB7BB2C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action<Fruit> OnThisFruitSelfDestructed
	{
		[Token(Token = "0x600075D")]
		[Address(RVA = "0x10FF4D8", Offset = "0x10FF4D8", VA = "0x10FF4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BB3C", Offset = "0xB7BB3C")]
		add
		{
		}
		[Token(Token = "0x600075E")]
		[Address(RVA = "0x10FF57C", Offset = "0x10FF57C", VA = "0x10FF57C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BB4C", Offset = "0xB7BB4C")]
		remove
		{
		}
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x10FF620", Offset = "0x10FF620", VA = "0x10FF620", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x10FFA78", Offset = "0x10FFA78", VA = "0x10FFA78", Slot = "7")]
	public virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x10FFB80", Offset = "0x10FFB80", VA = "0x10FFB80", Slot = "8")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x10FFBE8", Offset = "0x10FFBE8", VA = "0x10FFBE8")]
	public void UpdateFruit()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x10FFCDC", Offset = "0x10FFCDC", VA = "0x10FFCDC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x10FFF1C", Offset = "0x10FFF1C", VA = "0x10FFF1C", Slot = "9")]
	public virtual void Init(FruitConfig config, SliceDirection sliceDirection = SliceDirection.None)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x11007E0", Offset = "0x11007E0", VA = "0x11007E0")]
	public FruitAttachment SetupAttachment(FruitAttachment fruitAttachmentPrefab)
	{
		return null;
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x110033C", Offset = "0x110033C", VA = "0x110033C")]
	protected void InitOutline(FruitConfig config)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1100990", Offset = "0x1100990", VA = "0x1100990", Slot = "10")]
	public virtual void Launch()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1100A5C", Offset = "0x1100A5C", VA = "0x1100A5C")]
	protected void InvokeLaunchedEvents()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1100B0C", Offset = "0x1100B0C", VA = "0x1100B0C", Slot = "11")]
	public virtual void Slice(SliceableObjectBase.SliceInfo sliceInfo)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x11011E0", Offset = "0x11011E0", VA = "0x11011E0", Slot = "12")]
	protected virtual void SpawnSliceEffect(Vector3 position, Vector3 velocity, Plane slicePlane)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1101868", Offset = "0x1101868", VA = "0x1101868")]
	private void Skewer(Blade blade)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x11019BC", Offset = "0x11019BC", VA = "0x11019BC")]
	private void Deflect()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1101AF4", Offset = "0x1101AF4", VA = "0x1101AF4")]
	public void Explode(Vector3 sliceDirection)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x11015BC", Offset = "0x11015BC", VA = "0x11015BC")]
	protected void SetupFruitHalfPhysics(bool isLeft, FruitHalf fruitHalf, Plane slicePlane, float sliceSpeed, Vector3 sliceNormal)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1101C58", Offset = "0x1101C58", VA = "0x1101C58")]
	public void SetDtMultiplier(float dtMultiplier)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1101C84", Offset = "0x1101C84", VA = "0x1101C84")]
	public void SetFruitColor(Color color, float time)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x1101CB0", Offset = "0x1101CB0", VA = "0x1101CB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7BB5C", Offset = "0xB7BB5C")]
	private IEnumerator FruitColorCoroutine(Color color, float time)
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x10FDCA4", Offset = "0x10FDCA4", VA = "0x10FDCA4")]
	protected void ApplyFruitMaterial()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x1101D60", Offset = "0x1101D60", VA = "0x1101D60")]
	public bool IsTouching(Fruit otherFruit, float colliderScale = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1101F14", Offset = "0x1101F14", VA = "0x1101F14")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1102328", Offset = "0x1102328", VA = "0x1102328")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x11025BC", Offset = "0x11025BC", VA = "0x11025BC", Slot = "13")]
	protected virtual bool IsGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1102080", Offset = "0x1102080", VA = "0x1102080")]
	private void HandleWorldCollision(GameObject collisionObj)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x11025FC", Offset = "0x11025FC", VA = "0x11025FC", Slot = "14")]
	protected virtual void KillInSeconds(float seconds)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x110260C", Offset = "0x110260C", VA = "0x110260C")]
	private void OnRecycle()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x11026EC", Offset = "0x11026EC", VA = "0x11026EC", Slot = "15")]
	public virtual void SetPhysicsMode(PhysicsMode mode, bool inheritVelocity = true, float collisionDelay = 0f)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x10FFBE0", Offset = "0x10FFBE0", VA = "0x10FFBE0")]
	public void SelfDestruct()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1102AA4", Offset = "0x1102AA4", VA = "0x1102AA4")]
	public void SelfDestruct(bool immediately)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x110063C", Offset = "0x110063C", VA = "0x110063C")]
	public void SetPaused(bool paused, bool beingRemoved = false)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1100448", Offset = "0x1100448", VA = "0x1100448")]
	protected void SetupSliceDirectionRequirements(SliceDirection sliceDirection)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x1102D24", Offset = "0x1102D24", VA = "0x1102D24")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7BBBC", Offset = "0xB7BBBC")]
	private void Log(string message)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x1101144", Offset = "0x1101144", VA = "0x1101144")]
	private static Vector3 GetLocalSliceDirection(SliceDirection sliceDirection)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x1102D28", Offset = "0x1102D28", VA = "0x1102D28")]
	public float GetMeshExtentsAlongYAxis(bool upper)
	{
		return default(float);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x1102E68", Offset = "0x1102E68", VA = "0x1102E68")]
	public Fruit()
	{
	}
}
[Token(Token = "0x200018C")]
public class FruitAttachment : MonoBehaviour
{
	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected SingleAudioSource m_propellerSingleAudioSource;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected ISound m_loopingSound;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB664A8", Offset = "0xB664A8")]
	[SerializeField]
	protected ISound m_breakSound;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_breakForce;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float m_breakRadius;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_breakUpwardsModifier;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject m_brokenReplacementPrefab;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int m_maxPiecesWhenBreaking;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleUser m_breakParticle;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PooledObject m_pooledObject;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SoundPlaybackContext m_soundPlaybackContext;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator m_animator;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action<bool> m_onPaused;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x14BB850", Offset = "0x14BB850", VA = "0x14BB850", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x14BB9BC", Offset = "0x14BB9BC", VA = "0x14BB9BC", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x14BBA20", Offset = "0x14BBA20", VA = "0x14BBA20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x14BBAE4", Offset = "0x14BBAE4", VA = "0x14BBAE4", Slot = "6")]
	public virtual void Break(float sliceSpeed, Vector3 slicePosition)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x14BC078", Offset = "0x14BC078", VA = "0x14BC078")]
	private void MatchObjectTransforms(Transform currentTransform, Transform otherObject)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x14BC3F8", Offset = "0x14BC3F8", VA = "0x14BC3F8")]
	public void SelfDestruct()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x14BC414", Offset = "0x14BC414", VA = "0x14BC414", Slot = "7")]
	protected virtual void Reset()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x14BC4E0", Offset = "0x14BC4E0", VA = "0x14BC4E0", Slot = "8")]
	protected virtual void Pause(bool isPaused)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x14BC650", Offset = "0x14BC650", VA = "0x14BC650", Slot = "9")]
	public virtual void SelfDestructIndication(float duration)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x14BC654", Offset = "0x14BC654", VA = "0x14BC654", Slot = "10")]
	public virtual void SetupLocalTransform(Fruit fruit)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x14BC658", Offset = "0x14BC658", VA = "0x14BC658")]
	public FruitAttachment()
	{
	}
}
[Token(Token = "0x200018D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5B284", Offset = "0xB5B284")]
public class FruitConfig : SpawnableFruit
{
	[Serializable]
	[Token(Token = "0x200018E")]
	public struct SkuHeadset
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0xB66B5C", Offset = "0xB66B5C")]
		public string m_sku;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ProviderBase.HeadsetModels m_headsetModel;
	}

	[Token(Token = "0x200018F")]
	public enum SplatType
	{
		[Token(Token = "0x40009D8")]
		None,
		[Token(Token = "0x40009D9")]
		Random,
		[Token(Token = "0x40009DA")]
		DropsOnly
	}

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_fruitNameSingular;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_fruitNamePlural;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66554", Offset = "0xB66554")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66554", Offset = "0xB66554")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66554", Offset = "0xB66554")]
	public Fruit m_prefabOverride;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_nonStandardMaterial;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB665C4", Offset = "0xB665C4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB665C4", Offset = "0xB665C4")]
	public Mesh m_wholeMesh;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh m_outlineMesh;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_alwaysDisplayOutline;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_colliderRadius;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66610", Offset = "0xB66610")]
	public float m_defaultRadius;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_opponentColliderScale;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 m_scale;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 m_rightSideUpRotation;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool m_canBeSkewered;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool m_canBeDeflected;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PhysicMaterial m_physicMaterial;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66648", Offset = "0xB66648")]
	public SkuHeadset[] m_overrides;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Mesh m_optimisedWholeMesh;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Mesh m_optimisedOutlineMesh;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66680", Offset = "0xB66680")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66680", Offset = "0xB66680")]
	public bool m_hasHalves;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AssetVariationPrefab m_leftFruitHalfVariationPrefab;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AssetVariationPrefab m_rightFruitHalfVariationPrefab;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB666CC", Offset = "0xB666CC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB666CC", Offset = "0xB666CC")]
	public bool m_useJuiceParticle;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public JuiceManager.JuiceType m_juiceParticleType;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool m_showSplash;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Color m_splashColour;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public SplatType m_splatType;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool m_useSeedsInSplat;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float m_splatScale;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RangedInt m_splatCount;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool m_useCustomSliceParticle;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public PooledObject m_customParticle;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66718", Offset = "0xB66718")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66718", Offset = "0xB66718")]
	public ParticleSystem m_juiceTrailEmitterPrefab;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66764", Offset = "0xB66764")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66764", Offset = "0xB66764")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66764", Offset = "0xB66764")]
	public float m_fruitHalvesVelocityInheritance;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB667D4", Offset = "0xB667D4")]
	public RangedFloat m_sliceSpeedInfluence;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public RangedFloat m_sliceSpeedScale;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6680C", Offset = "0xB6680C")]
	public float m_fruitHalvesAccelerationScale;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66844", Offset = "0xB66844")]
	public RangedFloat m_chunkSpinSpeed;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6687C", Offset = "0xB6687C")]
	public RangedFloat m_sliceHitAngle;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB668B4", Offset = "0xB668B4")]
	public float m_sliceHitVelocityPercentage;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB668EC", Offset = "0xB668EC")]
	public RangedFloat m_chunkSpinAngleRange;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66924", Offset = "0xB66924")]
	[SerializeField]
	public RangedFloat m_chunkSpinZAxisRotation;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB66970", Offset = "0xB66970")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66970", Offset = "0xB66970")]
	public float m_skeweredMaxDistanceFromTip;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB669D0", Offset = "0xB669D0")]
	public float m_minSkeweringPenetrationDepth;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66A08", Offset = "0xB66A08")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66A08", Offset = "0xB66A08")]
	public ISound m_launchSound;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public ISound m_slicedSound;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public ISound m_multiplayerSlicedSound;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ISound m_bounceSound;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ISound m_deflectSound;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public ISound m_skewerSound;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66A54", Offset = "0xB66A54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66A54", Offset = "0xB66A54")]
	public bool m_isMultiSliceable;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float m_minSliceInterval;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66AA0", Offset = "0xB66AA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66AA0", Offset = "0xB66AA0")]
	public bool m_canBeCombo;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool m_canBeCritical;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	public bool m_isBomb;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
	public bool m_isPowerUpFruit;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66AEC", Offset = "0xB66AEC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66AEC", Offset = "0xB66AEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66AEC", Offset = "0xB66AEC")]
	public bool m_isGrabbable;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Vector3 m_grabbableRelativePosition;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public Vector3 m_grabbableRelativeRotation;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public HandPose m_grabbableHandPose;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool m_initialised;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Mesh m_cachedWholeMesh;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Mesh m_cachedOutlineMesh;

	[Token(Token = "0x170000E4")]
	public Mesh OutlineMesh
	{
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x14BD968", Offset = "0x14BD968", VA = "0x14BD968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E5")]
	public Mesh WholeMesh
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x14BDE74", Offset = "0x14BDE74", VA = "0x14BDE74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x14BD998", Offset = "0x14BD998", VA = "0x14BD998")]
	private void Initialise()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x14BDEA4", Offset = "0x14BDEA4", VA = "0x14BDEA4", Slot = "4")]
	public override FruitConfig GetFruitConfig(Spawner spawner, [Optional] System.Random generator)
	{
		return null;
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x14BDEA8", Offset = "0x14BDEA8", VA = "0x14BDEA8")]
	public FruitConfig()
	{
	}
}
[Token(Token = "0x2000190")]
public class FruitHalf : MonoBehaviour
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_physicsDelay;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_physicsTimer;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PooledObject m_pooledObject;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PooledObjectRecycleAfterDelay m_recycler;

	[Token(Token = "0x170000E6")]
	public bool IsPhysicsable
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x14BE51C", Offset = "0x14BE51C", VA = "0x14BE51C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E7")]
	public Rigidbody Rigidbody
	{
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x14BE52C", Offset = "0x14BE52C", VA = "0x14BE52C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x14BE534", Offset = "0x14BE534", VA = "0x14BE534")]
	private void Awake()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x14BE648", Offset = "0x14BE648", VA = "0x14BE648")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x14BE76C", Offset = "0x14BE76C", VA = "0x14BE76C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x14BE778", Offset = "0x14BE778", VA = "0x14BE778")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x14BE7E4", Offset = "0x14BE7E4", VA = "0x14BE7E4")]
	private void OnRecycle()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x14BE968", Offset = "0x14BE968", VA = "0x14BE968")]
	public void SetPaused(bool paused)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x14BEA58", Offset = "0x14BEA58", VA = "0x14BEA58")]
	public FruitHalf()
	{
	}
}
[Token(Token = "0x2000191")]
public class FruitManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B2C8", Offset = "0xB5B2C8")]
	private sealed class <>c
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Fruit> <>9__50_0;

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xFC9CE8", Offset = "0xFC9CE8", VA = "0xFC9CE8")]
		public <>c()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xFC9CF0", Offset = "0xFC9CF0", VA = "0xFC9CF0")]
		internal bool <HasAnyActiveFruitOrBombs>b__50_0(Fruit fruit)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Fruit m_fruitPrefab;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FruitHalf m_fruitHalfPrefab;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_fruitSplashPrefab;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_fruitSplatPrefab;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_sliceDiamondPlayerPrefab;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FruitTag m_criticalFruitTag;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color m_criticalSplashColour;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_criticalSplatColorResetDelay;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_criticalSplatColorResetDuration;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_longFruitSplatMinimumSliceVelocity;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FruitSliceDirectionsConfig m_sliceDirectionsConfig;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_zPositionForEffects;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float m_zPositionForSplats;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_zOffsetPerFruit;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public RangedFloat m_zOffset;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected int m_currentOffsetMultiplier;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool m_isPaused;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material m_defaultFruitMaterial;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ObjectPool.Purpose m_purpose;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject m_cachedSplash;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private SpriteRenderer m_cachedSplashSpriteRenderer;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FruitHalf m_cachedHalf;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66B94", Offset = "0xB66B94")]
	private int <NumFruitSpawned>k__BackingField;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Dictionary<int, Fruit> m_liveFruit;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public readonly List<Fruit> m_liveFruitList;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public readonly List<FruitHalf> m_liveFruitHalvesList;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static FruitManager s_instance;

	[Token(Token = "0x170000E8")]
	public int NumFruitSpawned
	{
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x14BEA6C", Offset = "0x14BEA6C", VA = "0x14BEA6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BC44", Offset = "0xB7BC44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x14BEA74", Offset = "0x14BEA74", VA = "0x14BEA74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BC54", Offset = "0xB7BC54")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public int FruitAlive
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x14BEA7C", Offset = "0x14BEA7C", VA = "0x14BEA7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000EA")]
	public static FruitManager Instance
	{
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x14BEAD0", Offset = "0x14BEAD0", VA = "0x14BEAD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x14BEB34", Offset = "0x14BEB34", VA = "0x14BEB34")]
		protected set
		{
		}
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x14BEBA0", Offset = "0x14BEBA0", VA = "0x14BEBA0")]
	public void ApplyPurpose(ObjectPool.Purpose currentPurpose)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x14BED68", Offset = "0x14BED68", VA = "0x14BED68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x14BEEA4", Offset = "0x14BEEA4", VA = "0x14BEEA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x14BEF60", Offset = "0x14BEF60", VA = "0x14BEF60", Slot = "4")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x14BF12C", Offset = "0x14BF12C", VA = "0x14BF12C")]
	private void OnGamePaused(GameEvent evt)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x14BF3DC", Offset = "0x14BF3DC", VA = "0x14BF3DC")]
	public void RemoveFruit(Fruit fruit)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x14BE708", Offset = "0x14BE708", VA = "0x14BE708")]
	public void RemoveFruitHalf(FruitHalf half)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x14BF46C", Offset = "0x14BF46C", VA = "0x14BF46C", Slot = "5")]
	public virtual Fruit SpawnFruit(FruitConfig config, Fruit.SliceDirection sliceDirection = Fruit.SliceDirection.None, [Optional] Vector3? position, [Optional] Quaternion? rotation)
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x14BF99C", Offset = "0x14BF99C", VA = "0x14BF99C", Slot = "6")]
	public virtual bool SpawnHalves(FruitConfig config, out FruitHalf leftHalf, out FruitHalf rightHalf)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x14BFDA0", Offset = "0x14BFDA0", VA = "0x14BFDA0")]
	public GameObject MakeSplat(FruitSplat.FruitSplatType splatType, bool useSeeds, Vector3 pos, float radius, Color colour, float scale)
	{
		return null;
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x14C01E0", Offset = "0x14C01E0", VA = "0x14C01E0")]
	public void DoSplashEffect(FruitConfig config, Vector3 pos, Quaternion rot, float scale, Color splashColour)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x14C0400", Offset = "0x14C0400", VA = "0x14C0400", Slot = "7")]
	public virtual void SpawnSliceEffects(FruitConfig config, Vector3 pos, Quaternion rot, float scaleMultiplier)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x14C095C", Offset = "0x14C095C", VA = "0x14C095C")]
	public void SliceAllFruit(bool slicedByBomb, [Optional] Fruit except)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x14C0C78", Offset = "0x14C0C78", VA = "0x14C0C78")]
	public void DestroyAllFruit(bool immediately = false)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x14C0DE8", Offset = "0x14C0DE8", VA = "0x14C0DE8")]
	public void ExplodeAllFruit(Vector3 explosionCenter, bool sliceFruit, bool suppressCriticalEffects = true, float explosionVelocity = 10f, float explosionAcceleration = 10f)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x14C10B0", Offset = "0x14C10B0", VA = "0x14C10B0")]
	public bool HasAnyActiveFruitOrBombs()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x14C11DC", Offset = "0x14C11DC", VA = "0x14C11DC")]
	public FruitManager()
	{
	}
}
[Token(Token = "0x2000193")]
public class FruitPhysics : MonoBehaviour
{
	[Token(Token = "0x2000194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B2D8", Offset = "0xB5B2D8")]
	private sealed class <PausePhysicsCoroutine>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FruitPhysics <>4__this;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <wasSimulating>5__2;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DC")]
			[Address(RVA = "0xFC9E50", Offset = "0xFC9E50", VA = "0xFC9E50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0xFC9E98", Offset = "0xFC9E98", VA = "0xFC9E98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xFC9D4C", Offset = "0xFC9D4C", VA = "0xFC9D4C")]
		[DebuggerHidden]
		public <PausePhysicsCoroutine>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xFC9D78", Offset = "0xFC9D78", VA = "0xFC9D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xFC9D7C", Offset = "0xFC9D7C", VA = "0xFC9D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xFC9E58", Offset = "0xFC9E58", VA = "0xFC9E58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_simulateInUpdate;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66BA4", Offset = "0xB66BA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66BA4", Offset = "0xB66BA4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB66BA4", Offset = "0xB66BA4")]
	public bool m_isRepelCollider;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66C28", Offset = "0xB66C28")]
	public bool m_repelFromOtherFruit;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66C60", Offset = "0xB66C60")]
	public float m_repelForceFromOtherFruit;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66C98", Offset = "0xB66C98")]
	public float m_repelColliderScale;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Fruit m_repelFromSpecificFruit;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float m_repelForceFromSpecificFruit;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float m_repelRadiusFromSpecificFruit;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66D00", Offset = "0xB66D00")]
	private Vector3 <Velocity>k__BackingField;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66D10", Offset = "0xB66D10")]
	private Vector3 <AngularVelocity>k__BackingField;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66D20", Offset = "0xB66D20")]
	private Vector3 <Acceleration>k__BackingField;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66D30", Offset = "0xB66D30")]
	private Vector3 <FruitHalfAcceleration>k__BackingField;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66D40", Offset = "0xB66D40")]
	private float <DtMultiplier>k__BackingField;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66D50", Offset = "0xB66D50")]
	private static float <BlitzDtMultiplier>k__BackingField;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66D60", Offset = "0xB66D60")]
	private bool <IsPassive>k__BackingField;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66D70", Offset = "0xB66D70")]
	private bool <FruitHalfInheritAccel>k__BackingField;

	[Token(Token = "0x4000A0D")]
	public const float DefaultGravity = -3.5f;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 m_currentPassivePosition;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Fruit m_fruit;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform m_transform;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_isPaused;

	[Token(Token = "0x170000EB")]
	public Vector3 Velocity
	{
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x14C1360", Offset = "0x14C1360", VA = "0x14C1360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BC64", Offset = "0xB7BC64")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x14C136C", Offset = "0x14C136C", VA = "0x14C136C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BC74", Offset = "0xB7BC74")]
		set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public Vector3 AngularVelocity
	{
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x14C1378", Offset = "0x14C1378", VA = "0x14C1378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BC84", Offset = "0xB7BC84")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x14C1384", Offset = "0x14C1384", VA = "0x14C1384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BC94", Offset = "0xB7BC94")]
		set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public Vector3 Acceleration
	{
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x14C1390", Offset = "0x14C1390", VA = "0x14C1390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BCA4", Offset = "0xB7BCA4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x14C139C", Offset = "0x14C139C", VA = "0x14C139C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BCB4", Offset = "0xB7BCB4")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public Vector3 FruitHalfAcceleration
	{
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x14C13A8", Offset = "0x14C13A8", VA = "0x14C13A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BCC4", Offset = "0xB7BCC4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x14C13B4", Offset = "0x14C13B4", VA = "0x14C13B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BCD4", Offset = "0xB7BCD4")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public Vector3 PreviousPosition
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x14C13C0", Offset = "0x14C13C0", VA = "0x14C13C0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000F0")]
	public float DtMultiplier
	{
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x14C13CC", Offset = "0x14C13CC", VA = "0x14C13CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BCE4", Offset = "0xB7BCE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x14C13D4", Offset = "0x14C13D4", VA = "0x14C13D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BCF4", Offset = "0xB7BCF4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public static float BlitzDtMultiplier
	{
		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x14C13DC", Offset = "0x14C13DC", VA = "0x14C13DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BD04", Offset = "0xB7BD04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x14C1440", Offset = "0x14C1440", VA = "0x14C1440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BD14", Offset = "0xB7BD14")]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public float ExtraDtMultiplier
	{
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x14C14B0", Offset = "0x14C14B0", VA = "0x14C14B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F3")]
	public bool IsPassive
	{
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x14C15A8", Offset = "0x14C15A8", VA = "0x14C15A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BD24", Offset = "0xB7BD24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x14C15B0", Offset = "0x14C15B0", VA = "0x14C15B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BD34", Offset = "0xB7BD34")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public bool FruitHalfInheritAccel
	{
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x14C15BC", Offset = "0x14C15BC", VA = "0x14C15BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BD44", Offset = "0xB7BD44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x14C15C4", Offset = "0x14C15C4", VA = "0x14C15C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BD54", Offset = "0xB7BD54")]
		set
		{
		}
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x14C15D0", Offset = "0x14C15D0", VA = "0x14C15D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x14C167C", Offset = "0x14C167C", VA = "0x14C167C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x14C16B8", Offset = "0x14C16B8", VA = "0x14C16B8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x14C1798", Offset = "0x14C1798", VA = "0x14C1798")]
	public void UpdatePhysics(float dt)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x14C1D78", Offset = "0x14C1D78", VA = "0x14C1D78")]
	public void PausePhysics(float duration)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x14C1DA4", Offset = "0x14C1DA4", VA = "0x14C1DA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7BD64", Offset = "0xB7BD64")]
	private IEnumerator PausePhysicsCoroutine(float duration)
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x14C1E2C", Offset = "0x14C1E2C", VA = "0x14C1E2C")]
	public void SetPaused(bool paused)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x14C1E38", Offset = "0x14C1E38", VA = "0x14C1E38")]
	public FruitPhysics()
	{
	}
}
[Token(Token = "0x2000195")]
public class FruitSpawnerTest : MonoBehaviour
{
	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FruitConfig> m_possibleFruit;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RangedVector3 m_velocityRange;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x14C2280", Offset = "0x14C2280", VA = "0x14C2280")]
	public void SpawnFruit()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x14C24B0", Offset = "0x14C24B0", VA = "0x14C24B0")]
	public FruitSpawnerTest()
	{
	}
}
[Token(Token = "0x2000196")]
public class FruitSpinner : MonoBehaviour
{
	[Token(Token = "0x2000197")]
	public enum SpinDirection
	{
		[Token(Token = "0x4000A26")]
		None,
		[Token(Token = "0x4000A27")]
		Up,
		[Token(Token = "0x4000A28")]
		Down,
		[Token(Token = "0x4000A29")]
		Left,
		[Token(Token = "0x4000A2A")]
		Right
	}

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66D80", Offset = "0xB66D80")]
	private float <DtMultiplier>k__BackingField;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66D90", Offset = "0xB66D90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66D90", Offset = "0xB66D90")]
	public bool m_generateRandomSpinProperties;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66DDC", Offset = "0xB66DDC")]
	public bool m_alwaysFaceCamera;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66E14", Offset = "0xB66E14")]
	public bool m_useYSpin;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66E4C", Offset = "0xB66E4C")]
	public RangedFloat m_spinSpeed;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66E84", Offset = "0xB66E84")]
	public SpinDirection m_spinDirection;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float m_currentSpinSpeed;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector3 m_spinAxis;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB66EDC", Offset = "0xB66EDC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB66EDC", Offset = "0xB66EDC")]
	public bool m_simulateInUpdate;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool m_initOnAwake;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_transform;

	[Token(Token = "0x170000F7")]
	public float DtMultiplier
	{
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x14C2534", Offset = "0x14C2534", VA = "0x14C2534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BE14", Offset = "0xB7BE14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x14C253C", Offset = "0x14C253C", VA = "0x14C253C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BE24", Offset = "0xB7BE24")]
		set
		{
		}
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x14C2544", Offset = "0x14C2544", VA = "0x14C2544")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x14C25BC", Offset = "0x14C25BC", VA = "0x14C25BC")]
	public void Init([Optional] System.Random generator)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x14C2748", Offset = "0x14C2748", VA = "0x14C2748")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x14C2828", Offset = "0x14C2828", VA = "0x14C2828")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x14C277C", Offset = "0x14C277C", VA = "0x14C277C")]
	public void UpdateSpin(float dt)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x14C268C", Offset = "0x14C268C", VA = "0x14C268C")]
	private Vector3 GetDirectionalSpinAxis()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x14C2914", Offset = "0x14C2914", VA = "0x14C2914")]
	public FruitSpinner()
	{
	}
}
[Token(Token = "0x2000198")]
public class FruitSplat : MonoBehaviour
{
	[Token(Token = "0x2000199")]
	public enum FruitSplatType
	{
		[Token(Token = "0x4000A3C")]
		Splat,
		[Token(Token = "0x4000A3D")]
		Long,
		[Token(Token = "0x4000A3E")]
		Drops,
		[Token(Token = "0x4000A3F")]
		RandomNotLong
	}

	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B2E8", Offset = "0xB5B2E8")]
	private sealed class <DripCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FruitSplat <>4__this;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <trans>5__2;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <moveSpeed>5__4;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <initialScale>5__5;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0xFCA1C4", Offset = "0xFCA1C4", VA = "0xFCA1C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0xFCA20C", Offset = "0xFCA20C", VA = "0xFCA20C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xFC9F64", Offset = "0xFC9F64", VA = "0xFC9F64")]
		[DebuggerHidden]
		public <DripCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xFC9F90", Offset = "0xFC9F90", VA = "0xFC9F90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xFC9F94", Offset = "0xFC9F94", VA = "0xFC9F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xFCA1CC", Offset = "0xFCA1CC", VA = "0xFCA1CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Sprite> m_splatterSprites;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Sprite> m_dropsSprites;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Sprite> m_splashSprites;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Sprite> m_seededSplatterSprites;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Sprite> m_seededDropsSprites;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Sprite> m_seededSplashSprites;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RangedFloat m_dripDelay;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_dripDuration;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public RangedFloat m_dripRange;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_dripScale;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Sprite> m_allSplatsSprites;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Sprite> m_seededAllSplatsSprites;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator m_animator;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PooledObject m_pooledObject;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine m_dripCoroutine;

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x14C298C", Offset = "0x14C298C", VA = "0x14C298C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x14BFFD0", Offset = "0x14BFFD0", VA = "0x14BFFD0")]
	public void SetupFruitSplat(FruitSplatType splatType, bool isSeeded, Color colour)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x14C2BB0", Offset = "0x14C2BB0", VA = "0x14C2BB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7BE34", Offset = "0xB7BE34")]
	private IEnumerator DripCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x14C2C28", Offset = "0x14C2C28", VA = "0x14C2C28")]
	private void OnRecycle()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x14C2C3C", Offset = "0x14C2C3C", VA = "0x14C2C3C")]
	public FruitSplat()
	{
	}
}
[Token(Token = "0x200019B")]
public class FruitSplatEmitter : MonoBehaviour
{
	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_splatFrequency;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_splatRadius;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66F28", Offset = "0xB66F28")]
	private float <DtMultiplier>k__BackingField;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RangedFloat m_splatScale;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FruitConfig m_fruitConfig;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_splatCountdown;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_splatInterval;

	[Token(Token = "0x170000FA")]
	public float DtMultiplier
	{
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x14C2D58", Offset = "0x14C2D58", VA = "0x14C2D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BEE4", Offset = "0xB7BEE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x14C2D60", Offset = "0x14C2D60", VA = "0x14C2D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BEF4", Offset = "0xB7BEF4")]
		set
		{
		}
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x14C2D68", Offset = "0x14C2D68", VA = "0x14C2D68")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x14C2D7C", Offset = "0x14C2D7C", VA = "0x14C2D7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x14C2EFC", Offset = "0x14C2EFC", VA = "0x14C2EFC")]
	public FruitSplatEmitter()
	{
	}
}
[Token(Token = "0x200019C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5B2F8", Offset = "0xB5B2F8")]
public class FruitTag : ScriptableObject
{
	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x14C2F60", Offset = "0x14C2F60", VA = "0x14C2F60")]
	public FruitTag()
	{
	}
}
[Token(Token = "0x200019D")]
public class FruitAttachmentPropeller : FruitAttachment
{
	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ParticleSystem m_puffTrail;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject m_destructIndicatorParticle;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AutoRotate m_autoRotate;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float m_fallingRotationSpeed;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TrailRenderer m_trail;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float m_fruitPenetrationY;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ParticleSystem.MinMaxGradient m_originalPuffTrailColor;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 m_originalRotationSpeed;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x14BC67C", Offset = "0x14BC67C", VA = "0x14BC67C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x14BC728", Offset = "0x14BC728", VA = "0x14BC728", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x14BC75C", Offset = "0x14BC75C", VA = "0x14BC75C", Slot = "6")]
	public override void Break(float sliceSpeed, Vector3 slicePosition)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x14BC760", Offset = "0x14BC760", VA = "0x14BC760", Slot = "9")]
	public override void SelfDestructIndication(float duration)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x14BC8A0", Offset = "0x14BC8A0", VA = "0x14BC8A0", Slot = "7")]
	protected override void Reset()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x14BC9B8", Offset = "0x14BC9B8", VA = "0x14BC9B8", Slot = "10")]
	public override void SetupLocalTransform(Fruit fruit)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x14BCA4C", Offset = "0x14BCA4C", VA = "0x14BCA4C")]
	public FruitAttachmentPropeller()
	{
	}
}
[Token(Token = "0x200019E")]
public class Arrow : MonoBehaviour
{
	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_speed;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_tip;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_impactEffectSpawn;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EnvironmentMaterialConfig m_defaultMaterialConfig;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB66F98", Offset = "0xB66F98")]
	public float m_velDotNormalThreshold;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_sphereCastRadius;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ISound m_arrowShootSound;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ISound m_arrowImpactSound;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_comboTimeBetweenFruit;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_impactParticlesVelocityMultiplier;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_impactForceVelocityMultiplier;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_penetrationDistance;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB66FB0", Offset = "0xB66FB0")]
	public float m_liftFactor;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEngine.Gradient m_lineGradient;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_lineStartAlpha;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float m_lineEndAlpha;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_impactEffectDistance;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_recycleDelayAfterHittingMenu;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PooledObjectRecycleAfterDelay m_timedRecycler;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TrajectoryPredictor m_trajectoryPredictor;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TrailRenderer m_trailRenderer;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PooledObject m_pooledObject;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly RaycastHit[] s_raycastHits;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_gravity;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 m_previousVelocity;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float m_pullValue;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly List<SliceableObjectBase.SliceInfo> m_fruitCombo;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float m_timeSinceLastFruitSliced;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool m_isPaused;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 m_velocityBackup;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool m_hasFlown;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool m_pausedWhenShot;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Collider> m_collidersToIgnore;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Fruit m_cachedFruit;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SliceableObjectBase m_cachedSliceableObject;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Plane m_cachedSlicePlane;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PooledObject m_cachedImpactParticle;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ParticleSystem.MainModule m_cachedMainModule;

	[Token(Token = "0x4000A7E")]
	private const string ArrowIdPrefix = "ARROW";

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int s_arrowId;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int m_id;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB66FE8", Offset = "0xB66FE8")]
	private static bool <EnableTrajectory>k__BackingField;

	[Token(Token = "0x170000FB")]
	private string Id
	{
		[Token(Token = "0x6000802")]
		[Address(RVA = "0xFADF10", Offset = "0xFADF10", VA = "0xFADF10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FC")]
	private Vector3 LaunchVelocity
	{
		[Token(Token = "0x6000803")]
		[Address(RVA = "0xFADF70", Offset = "0xFADF70", VA = "0xFADF70")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000FD")]
	public PooledObject PooledObject
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0xFADFBC", Offset = "0xFADFBC", VA = "0xFADFBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FE")]
	public static bool EnableTrajectory
	{
		[Token(Token = "0x6000805")]
		[Address(RVA = "0xFADFC4", Offset = "0xFADFC4", VA = "0xFADFC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BF04", Offset = "0xB7BF04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000806")]
		[Address(RVA = "0xFAE028", Offset = "0xFAE028", VA = "0xFAE028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BF14", Offset = "0xB7BF14")]
		set
		{
		}
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xFAE094", Offset = "0xFAE094", VA = "0xFAE094")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xFAE23C", Offset = "0xFAE23C", VA = "0xFAE23C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xFAE444", Offset = "0xFAE444", VA = "0xFAE444")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xFAE47C", Offset = "0xFAE47C", VA = "0xFAE47C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xFAE538", Offset = "0xFAE538", VA = "0xFAE538")]
	private void Update()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xFAE834", Offset = "0xFAE834", VA = "0xFAE834")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xFAF848", Offset = "0xFAF848", VA = "0xFAF848")]
	private void ArrowImpact(RaycastHit hit)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xFAFDE0", Offset = "0xFAFDE0", VA = "0xFAFDE0")]
	public static EnvironmentMaterialConfig GetEnvironmentMaterialConfigFromRayCastHit(RaycastHit hit)
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xFB01E4", Offset = "0xFB01E4", VA = "0xFB01E4")]
	private void SetTrajectoryEnabled(bool enableTrajectory)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xFB0330", Offset = "0xFB0330", VA = "0xFB0330")]
	public void SetCurrentPullValue(float pullValue)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xFB0448", Offset = "0xFB0448", VA = "0xFB0448")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xFAE5D8", Offset = "0xFAE5D8", VA = "0xFAE5D8")]
	private void EvaluateCombo()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xFB0854", Offset = "0xFB0854", VA = "0xFB0854")]
	private void OnGamePaused(GameEvent evt)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xFB09B4", Offset = "0xFB09B4", VA = "0xFB09B4")]
	public Arrow()
	{
	}
}
[Token(Token = "0x200019F")]
public class BasketEnemyObject : MonoBehaviour
{
	[Token(Token = "0x1400001F")]
	public static event Action<BasketEnemyObject> OnBasketEnemyActivated
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1452818", Offset = "0x1452818", VA = "0x1452818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BF24", Offset = "0xB7BF24")]
		add
		{
		}
		[Token(Token = "0x6000817")]
		[Address(RVA = "0x14528D4", Offset = "0x14528D4", VA = "0x14528D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BF34", Offset = "0xB7BF34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event Action<BasketEnemyObject> OnBasketEnemyDeactivated
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0x1452990", Offset = "0x1452990", VA = "0x1452990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BF44", Offset = "0xB7BF44")]
		add
		{
		}
		[Token(Token = "0x6000819")]
		[Address(RVA = "0x1452A50", Offset = "0x1452A50", VA = "0x1452A50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BF54", Offset = "0xB7BF54")]
		remove
		{
		}
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1452B10", Offset = "0x1452B10", VA = "0x1452B10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1452B8C", Offset = "0x1452B8C", VA = "0x1452B8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x1452C08", Offset = "0x1452C08", VA = "0x1452C08")]
	public BasketEnemyObject()
	{
	}
}
[Token(Token = "0x20001A0")]
public class Blade : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	[Flags]
	public enum BladeSection
	{
		[Token(Token = "0x4000AF7")]
		Edge = 1,
		[Token(Token = "0x4000AF8")]
		Back = 2,
		[Token(Token = "0x4000AF9")]
		Side = 4,
		[Token(Token = "0x4000AFA")]
		Handle = 8,
		[Token(Token = "0x4000AFB")]
		Tip = 0x10
	}

	[Token(Token = "0x20001A2")]
	public enum SliceState
	{
		[Token(Token = "0x4000AFD")]
		Idle,
		[Token(Token = "0x4000AFE")]
		Begin,
		[Token(Token = "0x4000AFF")]
		Slicing,
		[Token(Token = "0x4000B00")]
		End
	}

	[Token(Token = "0x20001A3")]
	[Flags]
	public enum SliceDirection
	{
		[Token(Token = "0x4000B02")]
		None = 0,
		[Token(Token = "0x4000B03")]
		Forward = 1,
		[Token(Token = "0x4000B04")]
		Backward = 2,
		[Token(Token = "0x4000B05")]
		Any = 0x10
	}

	[Token(Token = "0x20001A4")]
	private class SkeweredSliceableObject
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_instanceID;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SliceableObjectBase m_sliceableObject;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_meshSizeOnBlade;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_spaceTaken;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_positionOnBlade;

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xF8CDF8", Offset = "0xF8CDF8", VA = "0xF8CDF8")]
		public SkeweredSliceableObject()
		{
		}
	}

	[Token(Token = "0x20001A5")]
	private struct IgnoredCollision
	{
		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider m_collider;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_duration;
	}

	[Token(Token = "0x20001A6")]
	private struct TimedTriangle
	{
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_creationTime;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Geometry3D.Triangle m_triangle;
	}

	[Token(Token = "0x20001A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B35C", Offset = "0xB5B35C")]
	private sealed class <>c__DisplayClass149_0
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sliceableId;

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xF8CDCC", Offset = "0xF8CDCC", VA = "0xF8CDCC")]
		public <>c__DisplayClass149_0()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xF8CDD4", Offset = "0xF8CDD4", VA = "0xF8CDD4")]
		internal bool <RemoveSliceableObjectFromSkeweredList>b__0(SkeweredSliceableObject sliceable)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB67018", Offset = "0xB67018")]
	public Transform m_base;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_tip;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider m_bladeCollider;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider m_handleCollider;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67050", Offset = "0xB67050")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67050", Offset = "0xB67050")]
	public float m_handleRatio;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB670A4", Offset = "0xB670A4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB670A4", Offset = "0xB670A4")]
	public float m_tipRatio;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB670F8", Offset = "0xB670F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB670F8", Offset = "0xB670F8")]
	public float m_edgeSpeedModifier;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6714C", Offset = "0xB6714C")]
	public float m_tipSpeedModifier;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67164", Offset = "0xB67164")]
	public float m_sideSpeedModifier;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6717C", Offset = "0xB6717C")]
	public float m_backSpeedModifier;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67194", Offset = "0xB67194")]
	public float m_thrustSpeedModifier;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB671AC", Offset = "0xB671AC")]
	public float m_minSweepDistance;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve m_tipDistanceFromVelocity;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_sliceTrailTime;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_futurePredictionTime;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BladeSection m_badSliceBladeSection;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_bladeTrailHistoryTime;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB671E4", Offset = "0xB671E4")]
	public float m_sliceVelocityThresholdWhenFree;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6721C", Offset = "0xB6721C")]
	[SerializeField]
	protected float m_stationarySliceMinBladeSpeed;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67268", Offset = "0xB67268")]
	[SerializeField]
	protected float m_stationarySliceEdgeMinRelativeSpeed;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB672B4", Offset = "0xB672B4")]
	[SerializeField]
	protected float m_stationaryTipSliceMinRelativeSpeed;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67300", Offset = "0xB67300")]
	[SerializeField]
	protected float m_stationarySliceBackMinRelativeSpeed;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	protected float m_deflectionFallbackMinSpeed;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_comboTimeBetweenFruit;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6735C", Offset = "0xB6735C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6735C", Offset = "0xB6735C")]
	public float m_skeweringSpace;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB673BC", Offset = "0xB673BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB673BC", Offset = "0xB673BC")]
	public bool m_canSkewer;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6741C", Offset = "0xB6741C")]
	public float m_tipSkeweringSpace;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67454", Offset = "0xB67454")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67454", Offset = "0xB67454")]
	public float m_gapBetweenSkeweredSliceable;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB674A8", Offset = "0xB674A8")]
	public float m_angularSpeedInfluenceOnSkewering;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB674C0", Offset = "0xB674C0")]
	public float m_sliceableSpeedInfluenceOnSkewering;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB674D8", Offset = "0xB674D8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB674D8", Offset = "0xB674D8")]
	public float m_thrustPokeSpeedModifier;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67530", Offset = "0xB67530")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67530", Offset = "0xB67530")]
	public float m_slicingSkeweredFruitThreshold;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67588", Offset = "0xB67588")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67588", Offset = "0xB67588")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB67588", Offset = "0xB67588")]
	public float m_minSkeweringSliceableTipAlignment;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB67600", Offset = "0xB67600")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67600", Offset = "0xB67600")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67600", Offset = "0xB67600")]
	public float m_minSkeweringTipMotionBladeUpAlignment;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB67678", Offset = "0xB67678")]
	public SliceDirection m_allowedSliceDirection;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_allowedSliceMinDotProduct;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private XWeaponTrail[] m_trails;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_trailSmoothStopTime;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB676B0", Offset = "0xB676B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB676B0", Offset = "0xB676B0")]
	public AnimationCurve m_deflectBladeVelocityCurve;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB67710", Offset = "0xB67710")]
	public float m_bladeDeflectMultiplier;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB67748", Offset = "0xB67748")]
	public float m_handleDeflectMultiplier;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB67780", Offset = "0xB67780")]
	public ISound m_swipeSoundLp;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SingleAudioSource m_swipeSoundLpSingleAudioSource;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioHighPassFilter m_highPassFilter;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioLowPassFilter m_lowPassFilter;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AnimationCurve m_swipeSpeedToSoundFrequencyCurve;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AnimationCurve m_frequencyBandWidthCurve;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float m_swipeFrequencyLerpSpeed;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB677B8", Offset = "0xB677B8")]
	public ISound m_swipeSound;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SingleAudioSource m_swipeSoundSingleAudioSource;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float m_swipeMinInterval;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float m_swipeMinSpeedThreshold;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AnimationCurve m_swipeSoundVolumeCurve;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AnimationCurve m_swipeSoundPitchCurve;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB677F0", Offset = "0xB677F0")]
	public float m_sliceSoundSpeedSmoothTime;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB67828", Offset = "0xB67828")]
	public Renderer m_bladeRenderer;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject m_comboBlitzEffect;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UnityEvent<int> m_onComboBlitzUpgraded;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UnityEvent m_onComboBlitzEnded;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 m_currentTipPos;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Vector3 m_currentBasePos;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 m_previousBasePos;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Vector3 m_previousTipPos;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 m_tipMotion;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private Vector3 m_baseMotion;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Geometry3D.Triangle m_predictiveTriangleA;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Geometry3D.Triangle m_predictiveTriangleB;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private IGrabbable m_grabbable;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Transform m_transform;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Vector3 m_defaultTipPos;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float m_minDistSqr;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Transform m_tipDefaultTransform;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private bool m_wasInComboBlitz;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
	private bool m_shouldReenableBlitzEffects;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x222")]
	private bool m_assignedComboBlitzMaterial;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Material m_activeBladeMaterial;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Material m_originalBladeMaterial;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private IHand m_hand;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private float m_sliceVelocityThresholdWhenFreeSqr;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private float m_lowpassFreq;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private float m_highPassFreq;

	[Token(Token = "0x4000AD5")]
	private const string BladeIdPrefix = "BLADE";

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_bladeId;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private int m_id;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private SliceState m_sliceState;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private SliceDirection m_sliceDirection;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float m_sliceSpeed;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float m_sliceSpeedVelocity;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Transform m_lastParent;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Vector3 m_lastTipPos;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private float m_secondsSinceLastSlice;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private bool m_justSlicedBomb;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private readonly List<IgnoredCollision> m_ignoredCollisions;

	[Token(Token = "0x4000AE1")]
	private const float MinDeflectForce = 4f;

	[Token(Token = "0x4000AE2")]
	private const float MinDeflectForceSqr = 16f;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private float m_sliceSoundSpeed;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float m_sliceSoundSpeedVelocity;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private SoundPlaybackContext m_swipeLoopAudioContext;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float m_stopLoopDelay;

	[Token(Token = "0x4000AE7")]
	private const float LoopStopDelay = 5f;

	[Token(Token = "0x4000AE8")]
	private const int MAX_TRIANGLES = 32;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private readonly CircularArray<TimedTriangle> m_triangles;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private readonly List<SliceableObjectBase.SliceInfo> m_fruitCombo;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float m_timeSinceLastFruitSliced;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private SliceableObjectBase m_cachedSliceableBase;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<SliceableObjectBase> s_distanceOrderedSliceable;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private readonly List<SkeweredSliceableObject> m_skeweredSliceableObjects;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private bool m_isPaused;

	[Token(Token = "0x4000AF0")]
	private const float MinDistanceToProcessSliceable = 3f;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float m_minDistanceToProcessSliceableSqr;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private RaycastHit m_skeweringRaycastHit;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private Geometry3D.Line m_defaultBladeLine;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x4000AF5")]
	private const float SkeweringRayCastTolerance = 2f;

	[Token(Token = "0x170000FF")]
	public bool SlicingEnabled
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1453464", Offset = "0x1453464", VA = "0x1453464")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000100")]
	public string Id
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1453574", Offset = "0x1453574", VA = "0x1453574")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000101")]
	public IHand Hand
	{
		[Token(Token = "0x600081F")]
		[Address(RVA = "0x14535D4", Offset = "0x14535D4", VA = "0x14535D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x14535DC", Offset = "0x14535DC", VA = "0x14535DC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7BF64", Offset = "0xB7BF64")]
	public static void Log(string message, UnityEngine.Object sender)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1453800", Offset = "0x1453800", VA = "0x1453800")]
	public void SetComboBlitzEffectActive(bool toActive, int tier = 0)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1453A5C", Offset = "0x1453A5C", VA = "0x1453A5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1453F68", Offset = "0x1453F68", VA = "0x1453F68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1454148", Offset = "0x1454148", VA = "0x1454148")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x14541A0", Offset = "0x14541A0", VA = "0x14541A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x14544E8", Offset = "0x14544E8", VA = "0x14544E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x14553DC", Offset = "0x14553DC", VA = "0x14553DC")]
	private void OnHandCollisionEnterTriggered(Collision other)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x14555B8", Offset = "0x14555B8", VA = "0x14555B8")]
	private bool HasFlag(SliceDirection direction)
	{
		return default(bool);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1454938", Offset = "0x1454938", VA = "0x1454938")]
	private void UpdateSliceState()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x1454CC0", Offset = "0x1454CC0", VA = "0x1454CC0")]
	private void UpdateSounds()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x145488C", Offset = "0x145488C", VA = "0x145488C")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x14555C8", Offset = "0x14555C8", VA = "0x14555C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1455AAC", Offset = "0x1455AAC", VA = "0x1455AAC")]
	private void UpdateCollisionsTriangles(bool tipMoved, Vector3 tipPos, Vector3 tipMotion, bool baseMoved, Vector3 basePos, Vector3 baseMotion)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x1455DA8", Offset = "0x1455DA8", VA = "0x1455DA8")]
	private void ProcessAnyBladeCollision(bool tipMoved, Vector3 tipPos, Vector3 tipMotion, bool baseMoved, Vector3 basePos, Vector3 baseMotion)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1456690", Offset = "0x1456690", VA = "0x1456690")]
	private bool ProcessCollision(SliceableObjectBase sliceableObject, Vector3 tipPos, Vector3 tipMotion, Vector3 basePos, Vector3 baseMotion, bool intersectedWithNoRadiusDilation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1456F28", Offset = "0x1456F28", VA = "0x1456F28")]
	private bool CanSkewer(BladeSection bladeSection, SliceableObjectBase sliceableObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x14572CC", Offset = "0x14572CC", VA = "0x14572CC")]
	private void Skewer(SliceableObjectBase sliceableObject)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1454EA0", Offset = "0x1454EA0", VA = "0x1454EA0")]
	private void SliceSkeweredFruitIfPossible()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x14583A0", Offset = "0x14583A0", VA = "0x14583A0")]
	private bool UpdateSkeweredSliceableIfNeeded(float positionOnBlade, float spaceOccupiedByNewFruit, SkeweredSliceableObject skeweredSliceable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1458274", Offset = "0x1458274", VA = "0x1458274")]
	private float GetSpaceLeftOnBlade()
	{
		return default(float);
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1458680", Offset = "0x1458680", VA = "0x1458680")]
	private void OnSkeweredSliceableRecycled(SliceableObjectBase sliceableObject)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x14588C8", Offset = "0x14588C8", VA = "0x14588C8")]
	private void OnSkeweredSliceableSliced(SliceableObjectBase.SliceInfo sliceInfo)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x14586B8", Offset = "0x14586B8", VA = "0x14586B8")]
	private void RemoveSliceableObjectFromSkeweredList(int sliceableId)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x1457F78", Offset = "0x1457F78", VA = "0x1457F78")]
	private bool CanSlice(SliceableObjectBase sliceableObject, BladeSection bladeSectionHit, Vector3 bladeVelocity, Vector3 tipVelocity, Vector3 fruitVelocity)
	{
		return default(bool);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1456D90", Offset = "0x1456D90", VA = "0x1456D90")]
	private BladeSection GetBladeSectionHit(Vector3 basePosition, Vector3 tipPosition, Vector3 bladeDirection, Vector3 fruitPosition, Vector3 bladeVelocity, Vector3 fruitVelocity)
	{
		return default(BladeSection);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1458904", Offset = "0x1458904", VA = "0x1458904")]
	private void DrawTriangle(Geometry3D.Triangle triangle)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1455180", Offset = "0x1455180", VA = "0x1455180")]
	private void EvaluateCombo()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x145895C", Offset = "0x145895C", VA = "0x145895C")]
	private void OnGamePaused(GameEvent gameEvent)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x14589F0", Offset = "0x14589F0", VA = "0x14589F0")]
	private int CompareSliceablesDistanceToBlade(SliceableObjectBase s1, SliceableObjectBase s2)
	{
		return default(int);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x1458B28", Offset = "0x1458B28", VA = "0x1458B28")]
	private void OnGrabbed(IGrabbable grabbable, IHand hand)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1458CE4", Offset = "0x1458CE4", VA = "0x1458CE4")]
	private void OnReleased(IGrabbable grabbable)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1458E14", Offset = "0x1458E14", VA = "0x1458E14")]
	public Blade()
	{
	}
}
[Token(Token = "0x20001A8")]
public class Bomb : MonoBehaviour
{
	[Token(Token = "0x20001A9")]
	public enum ExplosionReason
	{
		[Token(Token = "0x4000B21")]
		HitPlayerFace,
		[Token(Token = "0x4000B22")]
		Sliced
	}

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleUser m_fuseSmokePfxUser;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ISound m_fuseSound;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ISound m_explosionSound;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_explosionPrefab;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SingleAudioSource m_audioSource;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_minVelocityEnvironmentExplosion;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Fruit m_fruit;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected SoundPlaybackContext m_fusePlaybackContext;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_isPaused;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action<Fruit> m_onFruitGrounded;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action<Fruit> m_onFruitSliced;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action<Fruit> m_onFruitLaunched;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action<bool> m_onPaused;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_hasAssignedActions;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool m_hasAssignedToFruit;

	[Token(Token = "0x14000021")]
	public static event Action<Bomb, ExplosionReason> OnBombExploded
	{
		[Token(Token = "0x6000845")]
		[Address(RVA = "0x145953C", Offset = "0x145953C", VA = "0x145953C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BF9C", Offset = "0xB7BF9C")]
		add
		{
		}
		[Token(Token = "0x6000846")]
		[Address(RVA = "0x14595F8", Offset = "0x14595F8", VA = "0x14595F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BFAC", Offset = "0xB7BFAC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x14596B4", Offset = "0x14596B4", VA = "0x14596B4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1459904", Offset = "0x1459904", VA = "0x1459904")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x145996C", Offset = "0x145996C", VA = "0x145996C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1459ACC", Offset = "0x1459ACC", VA = "0x1459ACC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1459B04", Offset = "0x1459B04", VA = "0x1459B04")]
	private void OnFruitLaunched(Fruit fruit)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1459B9C", Offset = "0x1459B9C", VA = "0x1459B9C")]
	private void OnFruitGrounded(Fruit fruit)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1459C1C", Offset = "0x1459C1C", VA = "0x1459C1C")]
	private void OnFruitSliced(Fruit fruit)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x1459C2C", Offset = "0x1459C2C", VA = "0x1459C2C")]
	private void DoExplosionEffect()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1459BA0", Offset = "0x1459BA0", VA = "0x1459BA0")]
	private void Defuse()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x1459D2C", Offset = "0x1459D2C", VA = "0x1459D2C", Slot = "5")]
	public virtual void Explode(ExplosionReason explosionReason = ExplosionReason.Sliced)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1459E70", Offset = "0x1459E70", VA = "0x1459E70")]
	protected void TriggerBombExplosionEvent(ExplosionReason explosionReason)
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1459F00", Offset = "0x1459F00", VA = "0x1459F00")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x145A014", Offset = "0x145A014", VA = "0x145A014")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x145A20C", Offset = "0x145A20C", VA = "0x145A20C")]
	public void SetPaused(bool isPaused)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x145A3AC", Offset = "0x145A3AC", VA = "0x145A3AC")]
	public Bomb()
	{
	}
}
[Token(Token = "0x20001AA")]
public class BombRhythm : Bomb
{
	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public RangedFloat m_explosionBeatRange;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_explosionVelocity;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float m_explosionAcceleration;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool m_sliceFruit;

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x145A3BC", Offset = "0x145A3BC", VA = "0x145A3BC", Slot = "5")]
	public override void Explode(ExplosionReason explosionReason = ExplosionReason.Sliced)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x145A964", Offset = "0x145A964", VA = "0x145A964")]
	public BombRhythm()
	{
	}
}
[Token(Token = "0x20001AB")]
public class Bow : MonoBehaviour
{
	[Token(Token = "0x20001AC")]
	public enum PullingRange
	{
		[Token(Token = "0x4000B70")]
		Short,
		[Token(Token = "0x4000B71")]
		Medium,
		[Token(Token = "0x4000B72")]
		Long,
		[Token(Token = "0x4000B73")]
		NotSet
	}

	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B36C", Offset = "0xB5B36C")]
	private sealed class <ResetBowHand>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bow <>4__this;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float time;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0xF8D1B0", Offset = "0xF8D1B0", VA = "0xF8D1B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0xF8D1F8", Offset = "0xF8D1F8", VA = "0xF8D1F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xF8CF7C", Offset = "0xF8CF7C", VA = "0xF8CF7C")]
		[DebuggerHidden]
		public <ResetBowHand>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xF8CFA8", Offset = "0xF8CFA8", VA = "0xF8CFA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xF8CFAC", Offset = "0xF8CFAC", VA = "0xF8CFAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xF8D1B8", Offset = "0xF8D1B8", VA = "0xF8D1B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B37C", Offset = "0xB5B37C")]
	private sealed class <ResetStringHand>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bow <>4__this;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float time;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600087E")]
			[Address(RVA = "0xF8D4AC", Offset = "0xF8D4AC", VA = "0xF8D4AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000880")]
			[Address(RVA = "0xF8D4F4", Offset = "0xF8D4F4", VA = "0xF8D4F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xF8D200", Offset = "0xF8D200", VA = "0xF8D200")]
		[DebuggerHidden]
		public <ResetStringHand>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xF8D22C", Offset = "0xF8D22C", VA = "0xF8D22C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xF8D230", Offset = "0xF8D230", VA = "0xF8D230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xF8D4B4", Offset = "0xF8D4B4", VA = "0xF8D4B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Arrow m_arrowPrefab;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_arrowLocalPos;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandPose m_bowHandRelaxedPose;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandPose m_bowHandClenchedPose;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandPose m_stringHandRelaxedPose;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandPose m_stringHandClenchedPose;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_arrowPullVibrateIncrement;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_nonAutoReleaseVibrateClamp;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ControllerInputBase.VibrationSettingsCurve m_pullStringVibration;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ControllerInputBase.VibrationSettingsCurve m_fireArrowVibration;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControllerInputBase.VibrationSettingsCurve m_snapStringVibration;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerInputBase.VibrationSettingsCurve m_releaseStringVibration;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_grabThreshold;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_handResetDelay;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_handResetTime;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float m_overPullDistanceReleaseThreshold;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_stringReleaseAnimTime;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67870", Offset = "0xB67870")]
	public float m_minPullTime;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float m_minPullStrength;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float m_fastMinPullStrength;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve m_pullCurve;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform m_start;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform m_end;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform m_socket;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_stringLeftHandParent;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform m_stringRightHandParent;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimationCurve m_bowHandMotionSmoothing;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AnimationCurve m_stringHandMotionSmoothing;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB678A8", Offset = "0xB678A8")]
	public float m_shortPullingRangePercentage;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float m_mediumPullingRangePercentage;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float m_longPullingRangePercentage;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB678E0", Offset = "0xB678E0")]
	public ISound m_stringStretchSound;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SingleAudioSource m_stringAudioSource;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public RangedFloat m_stretchPitchRange;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public RangedFloat m_stretchVolumeRange;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float m_stringSoundCooldown;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float m_stringSoundResetPullThreshold;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UnityEngine.Gradient m_lineGradient;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SkinnedMeshRenderer m_bowString;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Animation m_animation;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Transform m_transform;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Grabbable m_grabbable;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ControllerInputBase m_stringController;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Transform m_stringControllerTransform;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private ControllerInputBase m_bowController;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform m_bowControllerTransform;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private IHand m_bowHand;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private IHand m_stringHand;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform m_stringHandParent;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Arrow m_currentArrow;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private AnimationState m_animState;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Tweener m_stringTweener;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 m_lastStringHandPos;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float m_previousPullValue;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool m_isPulling;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private ControllerInputBase.VibrationSettingsSimple m_overPullVibration;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float m_grabThresholdSquared;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float m_lastStringGrabTime;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float m_currentStringLoopCooldown;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private SoundPlaybackContext m_stringSoundPlaybackContext;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Coroutine m_bowHandResetCoroutine;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Coroutine m_stringHandResetCoroutine;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float m_originalDistanceBetweenStartAndEnd;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float m_currentDistanceBetweenStartAndEnd;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float m_currentPullingRangePercentage;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private PullingRange m_currentPullingRange;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool m_autoReleaseEnabled;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	private bool m_trajectoryLineEnabled;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
	private bool m_isBlockingHandsGrabbingAndPulling;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float m_unclampedPullValue;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float m_pullValue;

	[Token(Token = "0x17000102")]
	public float PullValue
	{
		[Token(Token = "0x600085A")]
		[Address(RVA = "0x145D428", Offset = "0x145D428", VA = "0x145D428")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600085B")]
		[Address(RVA = "0x145D430", Offset = "0x145D430", VA = "0x145D430")]
		private set
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action OnArrowFired
	{
		[Token(Token = "0x6000858")]
		[Address(RVA = "0x145D2E0", Offset = "0x145D2E0", VA = "0x145D2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BFBC", Offset = "0xB7BFBC")]
		add
		{
		}
		[Token(Token = "0x6000859")]
		[Address(RVA = "0x145D384", Offset = "0x145D384", VA = "0x145D384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7BFCC", Offset = "0xB7BFCC")]
		remove
		{
		}
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x145D60C", Offset = "0x145D60C", VA = "0x145D60C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x145D940", Offset = "0x145D940", VA = "0x145D940")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x145DB24", Offset = "0x145DB24", VA = "0x145DB24")]
	private void Update()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x145E898", Offset = "0x145E898", VA = "0x145E898")]
	private bool CanAutoRelease(float overPullDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x145E64C", Offset = "0x145E64C", VA = "0x145E64C")]
	private void AlignBow(Transform affectedTransform, Vector3 planeNormal, Vector3 up)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x145ED34", Offset = "0x145ED34", VA = "0x145ED34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7BFDC", Offset = "0xB7BFDC")]
	private IEnumerator ResetBowHand(float delay, float time)
	{
		return null;
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x145EDC0", Offset = "0x145EDC0", VA = "0x145EDC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7C03C", Offset = "0xB7C03C")]
	private IEnumerator ResetStringHand(float delay, float time)
	{
		return null;
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x145EE4C", Offset = "0x145EE4C", VA = "0x145EE4C")]
	private void KillBowReset()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x145EEE8", Offset = "0x145EEE8", VA = "0x145EEE8")]
	private void SpawnArrow()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x145EC68", Offset = "0x145EC68", VA = "0x145EC68")]
	private void PlayStringSound()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x145ECF4", Offset = "0x145ECF4", VA = "0x145ECF4")]
	private void StopStringSound()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x145E32C", Offset = "0x145E32C", VA = "0x145E32C")]
	private bool EngageString()
	{
		return default(bool);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x145E8B8", Offset = "0x145E8B8", VA = "0x145E8B8")]
	private void Release(bool snappedString, bool immediatelyResetHands = false)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x145E7AC", Offset = "0x145E7AC", VA = "0x145E7AC")]
	private float GetPull()
	{
		return default(float);
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x145F01C", Offset = "0x145F01C", VA = "0x145F01C")]
	private void FireArrow(bool snappedString)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x145F120", Offset = "0x145F120", VA = "0x145F120")]
	private void ReleaseString()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x145F2BC", Offset = "0x145F2BC", VA = "0x145F2BC")]
	private void OnBowGrabbed(IGrabbable grabbable, IHand hand)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x145F60C", Offset = "0x145F60C", VA = "0x145F60C")]
	private void OnBowReleased(IGrabbable grabbable)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x145F7F0", Offset = "0x145F7F0", VA = "0x145F7F0")]
	private void OnSettingsDataChanged(object dataObject)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x145F8A8", Offset = "0x145F8A8", VA = "0x145F8A8")]
	private void SetPullingRange(PullingRange pullingRange)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x145F9F4", Offset = "0x145F9F4", VA = "0x145F9F4")]
	private void SetAutoRelease(bool isEnabled)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x145F940", Offset = "0x145F940", VA = "0x145F940")]
	private void SetTrajectoryLine(bool isEnabled)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x145FA00", Offset = "0x145FA00", VA = "0x145FA00")]
	public Bow()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x145FADC", Offset = "0x145FADC", VA = "0x145FADC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C09C", Offset = "0xB7C09C")]
	private void <ReleaseString>b__93_0(float value)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x145FB04", Offset = "0x145FB04", VA = "0x145FB04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C0AC", Offset = "0xB7C0AC")]
	private void <ReleaseString>b__93_1()
	{
	}
}
[Token(Token = "0x20001AF")]
public class EnvironmentSlice : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B0")]
	public class SliceType
	{
		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent m_onHitEvent;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ISound m_sound;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PooledObject m_effectPrefab;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator m_animator;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_animTrigger;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 m_offset;

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xF96398", Offset = "0xF96398", VA = "0xF96398")]
		public SliceType()
		{
		}
	}

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string m_objectID;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67938", Offset = "0xB67938")]
	public bool m_isEnabled;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_minHitRepeatTime;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<SliceType> m_sliceTypes;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_lastHitTime;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SliceableObjectBase m_sliceableObject;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action<SliceableObjectBase.SliceInfo> m_onSliced;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x10F779C", Offset = "0x10F779C", VA = "0x10F779C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x10F7854", Offset = "0x10F7854", VA = "0x10F7854")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x10F78E8", Offset = "0x10F78E8", VA = "0x10F78E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x10F797C", Offset = "0x10F797C", VA = "0x10F797C")]
	public void Sliced(SliceableObjectBase.SliceInfo sliceInfo)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x10F7E7C", Offset = "0x10F7E7C", VA = "0x10F7E7C")]
	public void SetEnabled(bool value)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x10F7E88", Offset = "0x10F7E88", VA = "0x10F7E88")]
	public EnvironmentSlice()
	{
	}
}
[Token(Token = "0x20001B1")]
public class FruitCannon : MonoBehaviour
{
	[Token(Token = "0x20001B2")]
	public enum AnimMode
	{
		[Token(Token = "0x4000B95")]
		NoAnim,
		[Token(Token = "0x4000B96")]
		LoadAndShoot,
		[Token(Token = "0x4000B97")]
		ShootOnly
	}

	[Serializable]
	[Token(Token = "0x20001B3")]
	public struct ShotData
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67970", Offset = "0xB67970")]
		public SpawnableFruit m_spawnableFruit;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB679A8", Offset = "0xB679A8")]
		public RangedFloat m_shotDelay;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB679E0", Offset = "0xB679E0")]
		public RangedFloat m_timeToTarget;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67A18", Offset = "0xB67A18")]
		public RangedFloat m_parabolaHeightModifier;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67A50", Offset = "0xB67A50")]
		public RangedVector3 m_targetOffset;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67A88", Offset = "0xB67A88")]
		public AnimMode m_animMode;
	}

	[Token(Token = "0x20001B4")]
	public struct LaunchData
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 m_gravity;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 m_startPosition;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_parabolaVertex;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_timeToTarget;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_initialVelocity;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_displacementY;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 m_displacementXZ;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 m_finalVelocity;
	}

	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B38C", Offset = "0xB5B38C")]
	private sealed class <ShootCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FruitCannon <>4__this;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ShotData <shotData>5__2;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000893")]
			[Address(RVA = "0xFC9C34", Offset = "0xFC9C34", VA = "0xFC9C34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000895")]
			[Address(RVA = "0xFC9C7C", Offset = "0xFC9C7C", VA = "0xFC9C7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xFC9998", Offset = "0xFC9998", VA = "0xFC9998")]
		[DebuggerHidden]
		public <ShootCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xFC99C4", Offset = "0xFC99C4", VA = "0xFC99C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xFC99C8", Offset = "0xFC99C8", VA = "0xFC99C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xFC9C3C", Offset = "0xFC9C3C", VA = "0xFC9C3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_cannonTransform;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RangedFloat m_fruitAngularSpeed;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ShotData[] m_currentShotArray;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_currentShotIndex;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_hasCompletedShot;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_currentWaveId;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator m_animator;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x14BCD20", Offset = "0x14BCD20", VA = "0x14BCD20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x14BCD70", Offset = "0x14BCD70", VA = "0x14BCD70")]
	public void OnCannonShot()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x14BD24C", Offset = "0x14BD24C", VA = "0x14BD24C")]
	public static Vector3 GetShotTargetPos(Vector3 cannonPos, Vector3 playerPos, Vector3 offset)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x14BCDD8", Offset = "0x14BCDD8", VA = "0x14BCDD8")]
	private void ShootFruit(ShotData shotData)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x14BD560", Offset = "0x14BD560", VA = "0x14BD560")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7C15C", Offset = "0xB7C15C")]
	private IEnumerator ShootCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x14BD5D8", Offset = "0x14BD5D8", VA = "0x14BD5D8")]
	public void ApplyShootProperties(FruitCannonClip clip)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x14BD360", Offset = "0x14BD360", VA = "0x14BD360")]
	public static LaunchData CalculateLaunchData(Vector3 startPosition, Vector3 target, float parabolaVertexModifier, float timeToTarget)
	{
		return default(LaunchData);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x14BD65C", Offset = "0x14BD65C", VA = "0x14BD65C")]
	public FruitCannon()
	{
	}
}
[Token(Token = "0x20001B6")]
public class Shuriken : MonoBehaviour
{
	[Token(Token = "0x20001B7")]
	private struct PosRot
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 m_pos;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion m_rot;
	}

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ISound m_throwSound;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ISound m_hitSound;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_velocityDependentAdditionalForce;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public RangedFloat m_speedRange;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_correctionForceMaxAngle;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_correctionForce;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public RangedVector3 m_autoAimVariation;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_autoAimRadius;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Grabbable m_grabbable;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_penetrationDistance;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 m_lastPos;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion m_lastRot;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PosRot[] m_posRotHistory;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RaycastHit[] m_hits;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Fruit m_targetFruit;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB67AC0", Offset = "0xB67AC0")]
	private static bool <DoAimAssist>k__BackingField;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB67AD0", Offset = "0xB67AD0")]
	private static bool <DoTrajectoryAssist>k__BackingField;

	[Token(Token = "0x17000109")]
	public static bool DoAimAssist
	{
		[Token(Token = "0x6000896")]
		[Address(RVA = "0xF0B5DC", Offset = "0xF0B5DC", VA = "0xF0B5DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C20C", Offset = "0xB7C20C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000897")]
		[Address(RVA = "0xF0B628", Offset = "0xF0B628", VA = "0xF0B628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C21C", Offset = "0xB7C21C")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public static bool DoTrajectoryAssist
	{
		[Token(Token = "0x6000898")]
		[Address(RVA = "0xF0B67C", Offset = "0xF0B67C", VA = "0xF0B67C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C22C", Offset = "0xB7C22C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000899")]
		[Address(RVA = "0xF0B6C8", Offset = "0xF0B6C8", VA = "0xF0B6C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C23C", Offset = "0xB7C23C")]
		set
		{
		}
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xF0B71C", Offset = "0xF0B71C", VA = "0xF0B71C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xF0B858", Offset = "0xF0B858", VA = "0xF0B858")]
	private void OnGrabbed(IGrabbable grabbable, IHand hand)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xF0B864", Offset = "0xF0B864", VA = "0xF0B864")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xF0BBAC", Offset = "0xF0BBAC", VA = "0xF0BBAC")]
	private void OnReleased(IGrabbable grabbable)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xF0C154", Offset = "0xF0C154", VA = "0xF0C154")]
	private void OnTargetFruitDestroyed(Fruit fruit)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xF0C20C", Offset = "0xF0C20C", VA = "0xF0C20C")]
	private void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xF0C39C", Offset = "0xF0C39C", VA = "0xF0C39C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xF0C5E8", Offset = "0xF0C5E8", VA = "0xF0C5E8")]
	public Shuriken()
	{
	}
}
[Token(Token = "0x20001B8")]
public abstract class SliceableObjectBase : MonoBehaviour
{
	[Token(Token = "0x20001B9")]
	public struct SliceInfo
	{
		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SliceableObjectBase m_sliceableObject;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Plane m_slicePlane;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_sliceImpactPoint;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_velocity;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_slicerId;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_waveId;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 m_slicedPosition;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MonoBehaviour m_trigger;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int m_inputAuthority;
	}

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly List<SliceableObjectBase> s_sliceableObjects;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB67B60", Offset = "0xB67B60")]
	public bool m_canBeSkewered;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool m_canBeDeflected;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_maxDistanceFromBlade;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected bool m_useExactColliderBoundsForDeflection;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float m_colliderHitTolerance;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_sliceForceMinThreshold;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float m_skewerForceMinThreshold;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67BF8", Offset = "0xB67BF8")]
	[SerializeField]
	private float m_badSliceQualityModifier;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float m_minPenetrationDepth;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67C48", Offset = "0xB67C48")]
	[SerializeField]
	private float m_maxDeflectionVelocity;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67C94", Offset = "0xB67C94")]
	protected AnimationCurve m_deflectDampenCurve;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67CE0", Offset = "0xB67CE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67CE0", Offset = "0xB67CE0")]
	protected float m_velocityDeflectRatio;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB67D44", Offset = "0xB67D44")]
	protected ControllerInputBase.VibrationSettingsCurve m_sliceVibration;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected ControllerInputBase.VibrationSettingsCurve m_deflectVibration;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	protected ControllerInputBase.VibrationSettingsCurve m_skewerVibration;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB67DB0", Offset = "0xB67DB0")]
	private ISound m_deflectSound;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 m_cachedPos;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 m_previousPos;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PooledObject m_pooledObject;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool m_isAPooledObject;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_maxDistanceFromBladeSqr;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 m_velocity;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int m_interactionAttempts;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool m_hasBeenDeflected;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB67DFC", Offset = "0xB67DFC")]
	private bool <IsAFruit>k__BackingField;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB67E0C", Offset = "0xB67E0C")]
	private Fruit <Fruit>k__BackingField;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB67E1C", Offset = "0xB67E1C")]
	private Blade <BladeSkeweredTo>k__BackingField;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB67E2C", Offset = "0xB67E2C")]
	private bool <IsSkewered>k__BackingField;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB67E3C", Offset = "0xB67E3C")]
	private float <MinPenetrationDepth>k__BackingField;

	[Token(Token = "0x1700010B")]
	public static List<SliceableObjectBase> SliceableObjects
	{
		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xF10064", Offset = "0xF10064", VA = "0xF10064")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public float ColliderHitTolerance
	{
		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xF100C8", Offset = "0xF100C8", VA = "0xF100C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010D")]
	public float SliceForceMinThreshold
	{
		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xF100D0", Offset = "0xF100D0", VA = "0xF100D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010E")]
	public float SkewerForceMinThreshold
	{
		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xF100D8", Offset = "0xF100D8", VA = "0xF100D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010F")]
	public float BadSliceQualityModifier
	{
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xF100E0", Offset = "0xF100E0", VA = "0xF100E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000110")]
	public float MaxDistanceFromBladeSqr
	{
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xF100E8", Offset = "0xF100E8", VA = "0xF100E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000111")]
	public float MaxDeflectionVelocity
	{
		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xF100F0", Offset = "0xF100F0", VA = "0xF100F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000112")]
	public float MaxDistanceFromBlade
	{
		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xF100F8", Offset = "0xF100F8", VA = "0xF100F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xF10100", Offset = "0xF10100", VA = "0xF10100")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public bool HasBeenDeflected
	{
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xF10110", Offset = "0xF10110", VA = "0xF10110")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000114")]
	public bool UseExactColliderBoundsForDeflection
	{
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xF10118", Offset = "0xF10118", VA = "0xF10118")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000115")]
	public AnimationCurve DeflectDampenCurve
	{
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xF10120", Offset = "0xF10120", VA = "0xF10120")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000116")]
	public float VelocityDeflectRatio
	{
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xF10128", Offset = "0xF10128", VA = "0xF10128")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000117")]
	public ControllerInputBase.VibrationSettingsCurve SliceVibration
	{
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xF10130", Offset = "0xF10130", VA = "0xF10130")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000118")]
	public ControllerInputBase.VibrationSettingsCurve DeflectVibration
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xF10138", Offset = "0xF10138", VA = "0xF10138")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000119")]
	public ControllerInputBase.VibrationSettingsCurve SkewerVibration
	{
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xF10140", Offset = "0xF10140", VA = "0xF10140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011A")]
	public bool CanBeDeflected
	{
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xF10148", Offset = "0xF10148", VA = "0xF10148")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xF10150", Offset = "0xF10150", VA = "0xF10150")]
		set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public Vector3 Velocity
	{
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xF1015C", Offset = "0xF1015C", VA = "0xF1015C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011C")]
	public Vector3 PreviousFramePosition
	{
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xF101B0", Offset = "0xF101B0", VA = "0xF101B0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700011D")]
	public float DefaultRadiusScaled
	{
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xF10204", Offset = "0xF10204", VA = "0xF10204")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700011E")]
	public ISound DeflectSound
	{
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xF1025C", Offset = "0xF1025C", VA = "0xF1025C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public bool IsAFruit
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xF10264", Offset = "0xF10264", VA = "0xF10264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C34C", Offset = "0xB7C34C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xF1026C", Offset = "0xF1026C", VA = "0xF1026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C35C", Offset = "0xB7C35C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public Fruit Fruit
	{
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xF10278", Offset = "0xF10278", VA = "0xF10278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C36C", Offset = "0xB7C36C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xF10280", Offset = "0xF10280", VA = "0xF10280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C37C", Offset = "0xB7C37C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public Blade BladeSkeweredTo
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xF10288", Offset = "0xF10288", VA = "0xF10288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C38C", Offset = "0xB7C38C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xF10290", Offset = "0xF10290", VA = "0xF10290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C39C", Offset = "0xB7C39C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public bool IsSkewered
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xF10298", Offset = "0xF10298", VA = "0xF10298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C3AC", Offset = "0xB7C3AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xF102A0", Offset = "0xF102A0", VA = "0xF102A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C3BC", Offset = "0xB7C3BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public float MinPenetrationDepth
	{
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xF102AC", Offset = "0xF102AC", VA = "0xF102AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C3CC", Offset = "0xB7C3CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xF102B4", Offset = "0xF102B4", VA = "0xF102B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C3DC", Offset = "0xB7C3DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public abstract Collider Collider
	{
		[Token(Token = "0x60008D2")]
		get;
	}

	[Token(Token = "0x14000023")]
	public event Action<SliceInfo> OnSliced
	{
		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xF0F3AC", Offset = "0xF0F3AC", VA = "0xF0F3AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C24C", Offset = "0xB7C24C")]
		add
		{
		}
		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xF0F44C", Offset = "0xF0F44C", VA = "0xF0F44C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C25C", Offset = "0xB7C25C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event Action<SliceableObjectBase, SliceInfo> OnAnySliced
	{
		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xF0F4EC", Offset = "0xF0F4EC", VA = "0xF0F4EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C26C", Offset = "0xB7C26C")]
		add
		{
		}
		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xF0F5E0", Offset = "0xF0F5E0", VA = "0xF0F5E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C27C", Offset = "0xB7C27C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event Action<Blade> OnSkewered
	{
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xF0F6D4", Offset = "0xF0F6D4", VA = "0xF0F6D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C28C", Offset = "0xB7C28C")]
		add
		{
		}
		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xF0F774", Offset = "0xF0F774", VA = "0xF0F774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C29C", Offset = "0xB7C29C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public static event Action<SliceableObjectBase, Blade> OnAnySkewered
	{
		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xF0F814", Offset = "0xF0F814", VA = "0xF0F814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2AC", Offset = "0xB7C2AC")]
		add
		{
		}
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xF0F90C", Offset = "0xF0F90C", VA = "0xF0F90C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2BC", Offset = "0xB7C2BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event Action OnDeflected
	{
		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xF0FA04", Offset = "0xF0FA04", VA = "0xF0FA04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2CC", Offset = "0xB7C2CC")]
		add
		{
		}
		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xF0FAA4", Offset = "0xF0FAA4", VA = "0xF0FAA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2DC", Offset = "0xB7C2DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public static event Action<SliceableObjectBase> OnAnyDeflected
	{
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xF0FB44", Offset = "0xF0FB44", VA = "0xF0FB44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2EC", Offset = "0xB7C2EC")]
		add
		{
		}
		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xF0FC3C", Offset = "0xF0FC3C", VA = "0xF0FC3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C2FC", Offset = "0xB7C2FC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action<SliceableObjectBase> OnRecycled
	{
		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xF0FD34", Offset = "0xF0FD34", VA = "0xF0FD34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C30C", Offset = "0xB7C30C")]
		add
		{
		}
		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xF0FDD4", Offset = "0xF0FDD4", VA = "0xF0FDD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C31C", Offset = "0xB7C31C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public static event Action<SliceableObjectBase> OnAnyRecycled
	{
		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xF0FE74", Offset = "0xF0FE74", VA = "0xF0FE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C32C", Offset = "0xB7C32C")]
		add
		{
		}
		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xF0FF6C", Offset = "0xF0FF6C", VA = "0xF0FF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C33C", Offset = "0xB7C33C")]
		remove
		{
		}
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xF102BC", Offset = "0xF102BC", VA = "0xF102BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xF102C8", Offset = "0xF102C8", VA = "0xF102C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xF103E0", Offset = "0xF103E0", VA = "0xF103E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xF1048C", Offset = "0xF1048C", VA = "0xF1048C")]
	protected void Update()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xF104B4", Offset = "0xF104B4", VA = "0xF104B4")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xF10518", Offset = "0xF10518", VA = "0xF10518")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xF105A4", Offset = "0xF105A4", VA = "0xF105A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xF10650", Offset = "0xF10650", VA = "0xF10650")]
	public void Initialise(float skeweredMaxDistanceFromTip, float minSkeweringPenetrationDepth, ISound deflectSound)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xF106B0", Offset = "0xF106B0", VA = "0xF106B0")]
	public void Deflect()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xF10764", Offset = "0xF10764", VA = "0xF10764")]
	public void Slice(SliceInfo sliceInfo)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xF10888", Offset = "0xF10888", VA = "0xF10888")]
	public void Skewer(Blade blade)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xF10978", Offset = "0xF10978", VA = "0xF10978")]
	private void Recycled()
	{
	}

	[Token(Token = "0x60008DF")]
	public abstract bool IsTriangleIntersecting(Geometry3D.Triangle triangleTriangle, float colliderDilation = 1f);

	[Token(Token = "0x60008E0")]
	public abstract bool IsLineIntersecting(Geometry3D.Line line, float colliderDilation = 1f);

	[Token(Token = "0x60008E1")]
	public abstract Vector3 GetImpactPoint(Geometry3D.Line line);

	[Token(Token = "0x60008E2")]
	public abstract float ColliderRadius();

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xF10A28", Offset = "0xF10A28", VA = "0xF10A28")]
	public void SetPosition(Vector3 newPosition)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xF10DAC", Offset = "0xF10DAC", VA = "0xF10DAC")]
	protected SliceableObjectBase()
	{
	}
}
[Token(Token = "0x20001BA")]
public class SliceableObjectBoxCollider : SliceableObjectBase
{
	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private BoxCollider m_boxCollider;

	[Token(Token = "0x17000125")]
	public override Collider Collider
	{
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xF11080", Offset = "0xF11080", VA = "0xF11080", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xF10E74", Offset = "0xF10E74", VA = "0xF10E74", Slot = "5")]
	public override bool IsTriangleIntersecting(Geometry3D.Triangle triangle, float colliderDilation = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xF10EB0", Offset = "0xF10EB0", VA = "0xF10EB0", Slot = "6")]
	public override bool IsLineIntersecting(Geometry3D.Line line, float colliderDilation = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xF10EF4", Offset = "0xF10EF4", VA = "0xF10EF4", Slot = "7")]
	public override Vector3 GetImpactPoint(Geometry3D.Line line)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xF11088", Offset = "0xF11088", VA = "0xF11088", Slot = "8")]
	public override float ColliderRadius()
	{
		return default(float);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xF110F8", Offset = "0xF110F8", VA = "0xF110F8")]
	public SliceableObjectBoxCollider()
	{
	}
}
[Token(Token = "0x20001BB")]
public class SliceableObjectCapsuleCollider : SliceableObjectBase
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private CapsuleCollider m_capsuleCollider;

	[Token(Token = "0x17000126")]
	public override Collider Collider
	{
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xF1127C", Offset = "0xF1127C", VA = "0xF1127C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xF11190", Offset = "0xF11190", VA = "0xF11190", Slot = "5")]
	public override bool IsTriangleIntersecting(Geometry3D.Triangle triangle, float colliderDilation = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xF111D8", Offset = "0xF111D8", VA = "0xF111D8", Slot = "6")]
	public override bool IsLineIntersecting(Geometry3D.Line line, float colliderDilation = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xF11220", Offset = "0xF11220", VA = "0xF11220", Slot = "7")]
	public override Vector3 GetImpactPoint(Geometry3D.Line line)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xF11284", Offset = "0xF11284", VA = "0xF11284", Slot = "8")]
	public override float ColliderRadius()
	{
		return default(float);
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xF112A0", Offset = "0xF112A0", VA = "0xF112A0")]
	public SliceableObjectCapsuleCollider()
	{
	}
}
[Token(Token = "0x20001BC")]
public class SliceableObjectSphereCollider : SliceableObjectBase
{
	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private SphereCollider m_sphereCollider;

	[Token(Token = "0x17000127")]
	public override Collider Collider
	{
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xF11424", Offset = "0xF11424", VA = "0xF11424", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xF11338", Offset = "0xF11338", VA = "0xF11338", Slot = "5")]
	public override bool IsTriangleIntersecting(Geometry3D.Triangle triangle, float colliderDilation = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xF11380", Offset = "0xF11380", VA = "0xF11380", Slot = "6")]
	public override bool IsLineIntersecting(Geometry3D.Line line, float colliderDilation = 1f)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xF113C8", Offset = "0xF113C8", VA = "0xF113C8", Slot = "7")]
	public override Vector3 GetImpactPoint(Geometry3D.Line line)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xF1142C", Offset = "0xF1142C", VA = "0xF1142C", Slot = "8")]
	public override float ColliderRadius()
	{
		return default(float);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xF11448", Offset = "0xF11448", VA = "0xF11448")]
	public SliceableObjectSphereCollider()
	{
	}
}
[Token(Token = "0x20001BD")]
public class CombBlitzTierEffect : MonoBehaviour
{
	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ComboBlitzTier m_blitzTier;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro m_blitzText;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_blitzString;

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x11A740C", Offset = "0x11A740C", VA = "0x11A740C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x11A7410", Offset = "0x11A7410", VA = "0x11A7410")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x11A7524", Offset = "0x11A7524", VA = "0x11A7524")]
	public CombBlitzTierEffect()
	{
	}
}
[Token(Token = "0x20001BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B39C", Offset = "0xB5B39C")]
public class ComboBlitzMusicLayer : MonoBehaviour
{
	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67E8C", Offset = "0xB67E8C")]
	[SerializeField]
	private float m_fadeInTime;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67ECC", Offset = "0xB67ECC")]
	[SerializeField]
	private float m_fadeOutTime;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB67F0C", Offset = "0xB67F0C")]
	[SerializeField]
	private float m_activeVolume;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool m_fadeActive;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_fadeTimer;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_fadeMaxTime;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_startingVolume;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_targetVolume;

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x11A83E4", Offset = "0x11A83E4", VA = "0x11A83E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x11A8480", Offset = "0x11A8480", VA = "0x11A8480")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x11A84CC", Offset = "0x11A84CC", VA = "0x11A84CC")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x11A8514", Offset = "0x11A8514", VA = "0x11A8514")]
	public void ForceVolume(float toVolume)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x11A8538", Offset = "0x11A8538", VA = "0x11A8538")]
	public ComboBlitzMusicLayer()
	{
	}
}
[Token(Token = "0x20001BF")]
public class DefaultUnlocks : MonoBehaviour
{
	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Game.Unlockable> m_unlockables;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x10A45D0", Offset = "0x10A45D0", VA = "0x10A45D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x10A46EC", Offset = "0x10A46EC", VA = "0x10A46EC")]
	public DefaultUnlocks()
	{
	}
}
[Token(Token = "0x20001C0")]
public class GameEventAttribute : UnityEngine.PropertyAttribute
{
	[Token(Token = "0x6000902")]
	[Address(RVA = "0x125880C", Offset = "0x125880C", VA = "0x125880C")]
	public GameEventAttribute()
	{
	}
}
[Token(Token = "0x20001C1")]
public class GameStatusListener : MonoBehaviour
{
	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameRules m_gameRulesType;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent m_gameStartEvent;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent m_gameEndEvent;

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x12639F8", Offset = "0x12639F8", VA = "0x12639F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1263ADC", Offset = "0x1263ADC", VA = "0x1263ADC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1263BC0", Offset = "0x1263BC0", VA = "0x1263BC0")]
	private void OnGameStart(object data)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1263CB8", Offset = "0x1263CB8", VA = "0x1263CB8")]
	private void OnGameEnd(object data)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1263DA8", Offset = "0x1263DA8", VA = "0x1263DA8")]
	public GameStatusListener()
	{
	}
}
[Token(Token = "0x20001C2")]
public class GameHeightAdjuster : MonoBehaviour
{
	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_maxHeightAdjustment;

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x1259BE4", Offset = "0x1259BE4", VA = "0x1259BE4")]
	public void AdjustPlayerHeight()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1259D30", Offset = "0x1259D30", VA = "0x1259D30")]
	public GameHeightAdjuster()
	{
	}
}
[Token(Token = "0x20001C3")]
public class Grabbable : MonoBehaviour, IGrabbable
{
	[Serializable]
	[Token(Token = "0x20001C4")]
	public struct ScaleModifier
	{
		[Token(Token = "0x20001C5")]
		public enum SetOpposingSignOn
		{
			[Token(Token = "0x4000C42")]
			X,
			[Token(Token = "0x4000C43")]
			Y,
			[Token(Token = "0x4000C44")]
			Z
		}

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public Vector3 m_originalScale;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_transform;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SetOpposingSignOn m_setOpposingSignOn;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_resetScaleOnRelease;
	}

	[Token(Token = "0x20001C6")]
	public class Vector3History
	{
		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector4[] m_data;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_index;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_num;

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xFD2B90", Offset = "0xFD2B90", VA = "0xFD2B90")]
		public Vector3History(int amount)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xFD2C0C", Offset = "0xFD2C0C", VA = "0xFD2C0C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xFD2C14", Offset = "0xFD2C14", VA = "0xFD2C14")]
		public void Add(Vector3 value, float weight)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xFD2CB8", Offset = "0xFD2CB8", VA = "0xFD2CB8")]
		public Vector3 Current()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xFD2D00", Offset = "0xFD2D00", VA = "0xFD2D00")]
		public Vector3 Average()
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x20001C7")]
	public enum State
	{
		[Token(Token = "0x4000C49")]
		Resting,
		[Token(Token = "0x4000C4A")]
		FlyingToHand,
		[Token(Token = "0x4000C4B")]
		Grabbed,
		[Token(Token = "0x4000C4C")]
		Ungrabbable
	}

	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B3FC", Offset = "0xB5B3FC")]
	private sealed class <FlyToHandCoroutine>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable <>4__this;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Hands.Hand hand;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0xFD2B40", Offset = "0xFD2B40", VA = "0xFD2B40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0xFD2B88", Offset = "0xFD2B88", VA = "0xFD2B88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xFD2738", Offset = "0xFD2738", VA = "0xFD2738")]
		[DebuggerHidden]
		public <FlyToHandCoroutine>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xFD2764", Offset = "0xFD2764", VA = "0xFD2764", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xFD2768", Offset = "0xFD2768", VA = "0xFD2768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xFD2B48", Offset = "0xFD2B48", VA = "0xFD2B48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB67F5C", Offset = "0xB67F5C")]
	public ControllerInputBase.HandSide m_allowedHand;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB67F94", Offset = "0xB67F94")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB67F94", Offset = "0xB67F94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB67F94", Offset = "0xB67F94")]
	public Transform m_spawnPivot;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_overrideAnalyticName;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_analyticName;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68018", Offset = "0xB68018")]
	public Vector3 m_parentedLocalPosition;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 m_parentedLocalRotation;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 m_parentedLocalScale;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ScaleModifier[] m_transformsInversed;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68050", Offset = "0xB68050")]
	public bool m_vibrateOnGrab;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerInputBase.VibrationSettingsCurve m_grabVibration;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB68088", Offset = "0xB68088")]
	public HandPose m_grabbedHandPose;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float m_mass;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float m_maxRevolutionsPerSecond;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m_highlightObject;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool m_canBeStashed;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float m_maxPullDistance;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68098", Offset = "0xB68098")]
	public float m_travelSpeed;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float m_velocityPercentWhenNoGrab;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Ease m_travelEaseType;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public RangedFloat m_travelTimeBounds;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB680D0", Offset = "0xB680D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB680D0", Offset = "0xB680D0")]
	public float m_releaseVelocityScale;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB68130", Offset = "0xB68130")]
	public Vector3 m_releaseAngularVelocityScale;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB68168", Offset = "0xB68168")]
	public int m_velocityAveragingFrameCount;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB681A0", Offset = "0xB681A0")]
	public ISound m_onGrabSound;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ISound m_onReleaseSound;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ISound m_pullingSound;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ISound m_onStashSound;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ISound m_onUnstashSound;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ISound m_onUnstashOverlaySound;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SingleAudioSource m_singleAudioSource;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_idleLoopObj;

	[NonSerialized]
	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ObjectStash m_currentStash;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected State m_state;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected Rigidbody m_rigidbody;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected Transform m_transform;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected Quaternion m_localRotation;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected Coroutine m_flyToHandCoroutine;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected Hands.Hand m_highlightingHand;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected Hands.Hand m_pullingHand;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB681D8", Offset = "0xB681D8")]
	private Hands.Hand <m_holdingHand>k__BackingField;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected string m_name;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected Vector3 m_lastPosition;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	protected Quaternion m_lastRotation;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected Vector3History m_velocityHistory;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected Vector3History m_angularVelocityHistory;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected float m_lastFlightPathDuration;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	protected Vector3 m_lastPullStartPosition;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected Quaternion m_lastPullStartRotation;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68228", Offset = "0xB68228")]
	private readonly IHand <CurrentHand>k__BackingField;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68238", Offset = "0xB68238")]
	private bool <CanBeReleased>k__BackingField;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68248", Offset = "0xB68248")]
	private bool <IsPooledObject>k__BackingField;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68258", Offset = "0xB68258")]
	private PooledObject <PooledObject>k__BackingField;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Grabbable, Hands.Hand> OnObjectGrabbed;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<Grabbable, Hands.Hand> OnObjectReleased;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<Grabbable, Hands.Hand> OnObjectPulled;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<Grabbable, bool> OnObjectHighlightToggled;

	[Token(Token = "0x17000128")]
	public Hands.Hand m_holdingHand
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1C4868C", Offset = "0x1C4868C", VA = "0x1C4868C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C3EC", Offset = "0xB7C3EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600090B")]
		[Address(RVA = "0x1C48694", Offset = "0x1C48694", VA = "0x1C48694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C3FC", Offset = "0xB7C3FC")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public State CurrentState
	{
		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1C48BC4", Offset = "0x1C48BC4", VA = "0x1C48BC4", Slot = "12")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700012A")]
	public IHand CurrentHand
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1C48BCC", Offset = "0x1C48BCC", VA = "0x1C48BCC", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C48C", Offset = "0xB7C48C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012B")]
	public Transform Transform
	{
		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1C48BD4", Offset = "0x1C48BD4", VA = "0x1C48BD4", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	public Vector3 InstantVelocity
	{
		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1C48BDC", Offset = "0x1C48BDC", VA = "0x1C48BDC", Slot = "15")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700012D")]
	public Vector3 AverageVelocity
	{
		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1C48C74", Offset = "0x1C48C74", VA = "0x1C48C74", Slot = "16")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700012E")]
	public bool CanBeReleased
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0x1C48C90", Offset = "0x1C48C90", VA = "0x1C48C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C49C", Offset = "0xB7C49C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1C48C98", Offset = "0x1C48C98", VA = "0x1C48C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C4AC", Offset = "0xB7C4AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public bool CanBeGrabbed
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0x1C48CA4", Offset = "0x1C48CA4", VA = "0x1C48CA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000130")]
	public bool CanBeSwapped
	{
		[Token(Token = "0x600091C")]
		[Address(RVA = "0x1C48CB8", Offset = "0x1C48CB8", VA = "0x1C48CB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000131")]
	public Hands.Hand HighlightingHand
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0x1C48D40", Offset = "0x1C48D40", VA = "0x1C48D40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000132")]
	public bool IsPooledObject
	{
		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1C48D48", Offset = "0x1C48D48", VA = "0x1C48D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C4BC", Offset = "0xB7C4BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600091F")]
		[Address(RVA = "0x1C48D50", Offset = "0x1C48D50", VA = "0x1C48D50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C4CC", Offset = "0xB7C4CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public Rigidbody Rigidbody
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1C48D5C", Offset = "0x1C48D5C", VA = "0x1C48D5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000134")]
	public PooledObject PooledObject
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0x1C48D64", Offset = "0x1C48D64", VA = "0x1C48D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C4DC", Offset = "0xB7C4DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000922")]
		[Address(RVA = "0x1C48D6C", Offset = "0x1C48D6C", VA = "0x1C48D6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C4EC", Offset = "0xB7C4EC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public bool CanBeStashed
	{
		[Token(Token = "0x6000923")]
		[Address(RVA = "0x1C48D7C", Offset = "0x1C48D7C", VA = "0x1C48D7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000924")]
		[Address(RVA = "0x1C48D84", Offset = "0x1C48D84", VA = "0x1C48D84")]
		set
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event Action<IGrabbable, IHand> OnGrab
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1C486A4", Offset = "0x1C486A4", VA = "0x1C486A4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C40C", Offset = "0xB7C40C")]
		add
		{
		}
		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1C48748", Offset = "0x1C48748", VA = "0x1C48748", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C41C", Offset = "0xB7C41C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event Action<IGrabbable, IHand> OnPull
	{
		[Token(Token = "0x600090E")]
		[Address(RVA = "0x1C487EC", Offset = "0x1C487EC", VA = "0x1C487EC", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C42C", Offset = "0xB7C42C")]
		add
		{
		}
		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1C48890", Offset = "0x1C48890", VA = "0x1C48890", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C43C", Offset = "0xB7C43C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event Action<IGrabbable, IHand> OnSwappedHand
	{
		[Token(Token = "0x6000910")]
		[Address(RVA = "0x1C48934", Offset = "0x1C48934", VA = "0x1C48934", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C44C", Offset = "0xB7C44C")]
		add
		{
		}
		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1C489D8", Offset = "0x1C489D8", VA = "0x1C489D8", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C45C", Offset = "0xB7C45C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event Action<IGrabbable> OnRelease
	{
		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1C48A7C", Offset = "0x1C48A7C", VA = "0x1C48A7C", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C46C", Offset = "0xB7C46C")]
		add
		{
		}
		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1C48B20", Offset = "0x1C48B20", VA = "0x1C48B20", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C47C", Offset = "0xB7C47C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1C48D90", Offset = "0x1C48D90", VA = "0x1C48D90")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7C4FC", Offset = "0xB7C4FC")]
	public static void Log(string message, UnityEngine.Object sender)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1C48D94", Offset = "0x1C48D94", VA = "0x1C48D94", Slot = "19")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1C4902C", Offset = "0x1C4902C", VA = "0x1C4902C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1C49224", Offset = "0x1C49224", VA = "0x1C49224", Slot = "20")]
	public virtual void Pull(Hands.Hand hand)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1C49484", Offset = "0x1C49484", VA = "0x1C49484", Slot = "21")]
	protected virtual void KillFlyCoroutine()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1C49538", Offset = "0x1C49538", VA = "0x1C49538")]
	public void Grab(Hands.Hand hand)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1C49D10", Offset = "0x1C49D10", VA = "0x1C49D10", Slot = "22")]
	protected virtual void SetGrabbableInHand(Hands.Hand hand)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1C493F0", Offset = "0x1C493F0", VA = "0x1C493F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7C534", Offset = "0xB7C534")]
	protected IEnumerator FlyToHandCoroutine(Hands.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1C4A150", Offset = "0x1C4A150", VA = "0x1C4A150", Slot = "23")]
	public virtual void GracefullyStopPulling()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1C49818", Offset = "0x1C49818", VA = "0x1C49818")]
	public void Release(bool forceRelease = false)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1C4A4F0", Offset = "0x1C4A4F0", VA = "0x1C4A4F0", Slot = "18")]
	public void Freeze(bool freezing = true)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1C48F38", Offset = "0x1C48F38", VA = "0x1C48F38")]
	public void Highlight(Hands.Hand hand, bool highlight)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1C4A5A0", Offset = "0x1C4A5A0", VA = "0x1C4A5A0")]
	public void StopPullingTowards(Hands.Hand hand)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1C4A654", Offset = "0x1C4A654", VA = "0x1C4A654")]
	public void SetUngrabbable(bool isUngrabbable)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1C4A678", Offset = "0x1C4A678", VA = "0x1C4A678")]
	public bool IsAllowedHand(Hands.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1C4A318", Offset = "0x1C4A318", VA = "0x1C4A318")]
	private void SetupRigidbody()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1C4A6B8", Offset = "0x1C4A6B8", VA = "0x1C4A6B8")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1C4A758", Offset = "0x1C4A758", VA = "0x1C4A758")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x1C4A834", Offset = "0x1C4A834", VA = "0x1C4A834", Slot = "17")]
	public Vector3 GetSpawnPosition(Transform spawnTransform)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x1C4A8C0", Offset = "0x1C4A8C0", VA = "0x1C4A8C0")]
	private Vector3 GetSpawnPosition(Vector3 spawnPosition, Quaternion spawnRotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x1C4A9CC", Offset = "0x1C4A9CC", VA = "0x1C4A9CC")]
	public void SetIdleLoopActive(bool active)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1C4AA6C", Offset = "0x1C4AA6C", VA = "0x1C4AA6C")]
	public Grabbable()
	{
	}
}
[Token(Token = "0x20001C9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5B40C", Offset = "0xB5B40C")]
public class GrabbableAssignmentConfig : GrabbableAssignmentConfigBase
{
	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandAssignment m_leftHandAssignment;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandAssignment m_rightHandAssignment;

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1C4AB2C", Offset = "0x1C4AB2C", VA = "0x1C4AB2C", Slot = "4")]
	public override HandAssignment GetLeftAssignment()
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1C4AB34", Offset = "0x1C4AB34", VA = "0x1C4AB34", Slot = "5")]
	public override HandAssignment GetRightAssignment()
	{
		return null;
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x1C4AB3C", Offset = "0x1C4AB3C", VA = "0x1C4AB3C")]
	public GrabbableAssignmentConfig()
	{
	}
}
[Token(Token = "0x20001CA")]
public abstract class GrabbableAssignmentConfigBase : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20001CB")]
	public class HandAssignment
	{
		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Grabbable m_grabbable;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PooledObject m_particleEffect;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InventoryPlayerDataObject.ItemType m_itemType;

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xFD2DB4", Offset = "0xFD2DB4", VA = "0xFD2DB4")]
		public HandAssignment()
		{
		}
	}

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB68278", Offset = "0xB68278")]
	public bool m_enforceLeftRightAssignment;

	[Token(Token = "0x6000949")]
	public abstract HandAssignment GetLeftAssignment();

	[Token(Token = "0x600094A")]
	public abstract HandAssignment GetRightAssignment();

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x1C4AB44", Offset = "0x1C4AB44", VA = "0x1C4AB44")]
	protected GrabbableAssignmentConfigBase()
	{
	}
}
[Token(Token = "0x20001CC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5B46C", Offset = "0xB5B46C")]
public class GrabbableAssignmentUnlockableListConfig : GrabbableAssignmentConfigBase
{
	[Serializable]
	[Token(Token = "0x20001CD")]
	public class UnlockableHandAssignment : HandAssignment
	{
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnlockableList m_unlockableList;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnlockableList.SelectionType m_selectionType;

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xFD2DBC", Offset = "0xFD2DBC", VA = "0xFD2DBC")]
		public Grabbable GetGrabbable(bool leftHand, InventoryPlayerDataObject.ItemType itemType)
		{
			return null;
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xFD2F50", Offset = "0xFD2F50", VA = "0xFD2F50")]
		public UnlockableHandAssignment()
		{
		}
	}

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnlockableHandAssignment m_leftHandAssignment;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnlockableHandAssignment m_rightHandAssignment;

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1C4AB4C", Offset = "0x1C4AB4C", VA = "0x1C4AB4C", Slot = "4")]
	public override HandAssignment GetLeftAssignment()
	{
		return null;
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x1C4AC00", Offset = "0x1C4AC00", VA = "0x1C4AC00", Slot = "5")]
	public override HandAssignment GetRightAssignment()
	{
		return null;
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x1C4ACB4", Offset = "0x1C4ACB4", VA = "0x1C4ACB4")]
	public GrabbableAssignmentUnlockableListConfig()
	{
	}
}
[Token(Token = "0x20001CE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5B4CC", Offset = "0xB5B4CC")]
public class GrabbableAssignmentUnlockableListDominantConfig : GrabbableAssignmentConfigBase
{
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GrabbableAssignmentUnlockableListConfig.UnlockableHandAssignment m_dominantHandAssignment;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrabbableAssignmentUnlockableListConfig.UnlockableHandAssignment m_undominantHandAssignment;

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x1C4ACBC", Offset = "0x1C4ACBC", VA = "0x1C4ACBC", Slot = "4")]
	public override HandAssignment GetLeftAssignment()
	{
		return null;
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x1C4AD8C", Offset = "0x1C4AD8C", VA = "0x1C4AD8C", Slot = "5")]
	public override HandAssignment GetRightAssignment()
	{
		return null;
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1C4AE5C", Offset = "0x1C4AE5C", VA = "0x1C4AE5C")]
	public GrabbableAssignmentUnlockableListDominantConfig()
	{
	}
}
[Token(Token = "0x20001CF")]
public class GrabbableDesiredLocation : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B52C", Offset = "0xB5B52C")]
	private sealed class <ResetItemCoroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableDesiredLocation <>4__this;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <itemTransform>5__2;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <initialPosition>5__3;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion <initialRotation>5__4;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <timeElapsed>5__5;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0xFD332C", Offset = "0xFD332C", VA = "0xFD332C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0xFD3374", Offset = "0xFD3374", VA = "0xFD3374", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xFD2F60", Offset = "0xFD2F60", VA = "0xFD2F60")]
		[DebuggerHidden]
		public <ResetItemCoroutine>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xFD2F8C", Offset = "0xFD2F8C", VA = "0xFD2F8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xFD2F90", Offset = "0xFD2F90", VA = "0xFD2F90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xFD3334", Offset = "0xFD3334", VA = "0xFD3334", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Grabbable m_grabbable;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB682B0", Offset = "0xB682B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB682B0", Offset = "0xB682B0")]
	public Transform m_desiredLocation;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_releasedResetTimer;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_resetDuration;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Ease m_resetEase;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_deleteIfLocationIsNull;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68330", Offset = "0xB68330")]
	[SerializeField]
	private float m_minimumMetersBeforeResetting;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float m_minimumDegreesBeforeResetting;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6838C", Offset = "0xB6838C")]
	[SerializeField]
	private float m_maxResetDistance;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB683D8", Offset = "0xB683D8")]
	public float m_maxCarryDistance;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68410", Offset = "0xB68410")]
	[SerializeField]
	private bool m_resetParent;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool m_freezeOnReset;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6846C", Offset = "0xB6846C")]
	[SerializeField]
	private SoundCueTrigger m_pullingSound;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SoundCue m_reachedLocationSound;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_maxCarryDistanceSquared;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool m_isResettingItem;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_resetTimer;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool m_inCorrectLocation;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 m_desiredPosition;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion m_desiredRotation;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 m_desiredScale;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform m_parent;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float m_minimumMetersBeforeResettingSqr;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_maxResetDistanceSqr;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Grabbable.State m_cachedGrabbableState;

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1C4AFBC", Offset = "0x1C4AFBC", VA = "0x1C4AFBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1C4B154", Offset = "0x1C4B154", VA = "0x1C4B154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1C4B3A8", Offset = "0x1C4B3A8", VA = "0x1C4B3A8")]
	public void ResetItem()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1C4B84C", Offset = "0x1C4B84C", VA = "0x1C4B84C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7C5E4", Offset = "0xB7C5E4")]
	private IEnumerator ResetItemCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x1C4B8C4", Offset = "0x1C4B8C4", VA = "0x1C4B8C4")]
	public GrabbableDesiredLocation()
	{
	}
}
[Token(Token = "0x20001D1")]
public class GrabbableInteraction : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B53C", Offset = "0xB5B53C")]
	private sealed class <ResetToDefaultPosition>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableInteraction <>4__this;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000971")]
			[Address(RVA = "0xFD34A8", Offset = "0xFD34A8", VA = "0xFD34A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000973")]
			[Address(RVA = "0xFD34F0", Offset = "0xFD34F0", VA = "0xFD34F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xFD337C", Offset = "0xFD337C", VA = "0xFD337C")]
		[DebuggerHidden]
		public <ResetToDefaultPosition>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xFD33A8", Offset = "0xFD33A8", VA = "0xFD33A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xFD33AC", Offset = "0xFD33AC", VA = "0xFD33AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xFD34B0", Offset = "0xFD34B0", VA = "0xFD34B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB684C8", Offset = "0xB684C8")]
	public Transform m_handParentTransformLeft;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_handParentTransformRight;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB68500", Offset = "0xB68500")]
	public Transform m_handleTransform;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_grabThreshold;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_highlight;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandPose m_grabbedHandPose;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68538", Offset = "0xB68538")]
	public float m_releaseThreshold;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_releaseVibrationCurve;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_returnToDefaultPosition;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_returnDuration;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_returnCurve;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68570", Offset = "0xB68570")]
	public Animator m_animator;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string m_animationParameter;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform m_minPosition;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform m_maxPosition;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB685A8", Offset = "0xB685A8")]
	public float m_minValue;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_maxValue;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float m_defaultValueThreshold;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool m_useMaxValueEvent;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float m_maxValueThreshold;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public UnityEvent m_onMaxValueReached;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool m_useMinValueEvent;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float m_minValueThreshold;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UnityEvent m_onMinValueReached;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB685E0", Offset = "0xB685E0")]
	public Transform m_debugHandPositionDisplay;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float m_grabThresholdSquared;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float m_releaseThresholdSquared;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float m_leftHandDistance;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float m_rightHandDistance;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float m_grabControllerDistance;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float m_currentGrabValue;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float m_currentRawGrabValue;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool m_isGrabbed;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool m_triggeredMaxEvent;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
	private bool m_triggeredMinEvent;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private IHand m_leftHand;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private IHand m_rightHand;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private IHand m_grabbingHand;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ControllerInputBase m_grabbingController;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform m_grabbingControllerTransform;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 m_transformedHandPosition;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Geometry3D.Line m_handMovementLine;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 m_grabOffset;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform m_handParentTransform;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ControllerInputBase.VibrationSettingsSimple m_releaseVibration;

	[Token(Token = "0x1700013A")]
	public IHand PotentialGrabbingHand
	{
		[Token(Token = "0x6000960")]
		[Address(RVA = "0x1C4B8F0", Offset = "0x1C4B8F0", VA = "0x1C4B8F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x1C4B934", Offset = "0x1C4B934", VA = "0x1C4B934")]
	private void Start()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x1C4BB20", Offset = "0x1C4BB20", VA = "0x1C4BB20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x1C4BC64", Offset = "0x1C4BC64", VA = "0x1C4BC64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1C4BDA8", Offset = "0x1C4BDA8", VA = "0x1C4BDA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1C4BEEC", Offset = "0x1C4BEEC", VA = "0x1C4BEEC")]
	private void PadGrabbed()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1C4C104", Offset = "0x1C4C104", VA = "0x1C4C104")]
	private void Update()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1C4CBCC", Offset = "0x1C4CBCC", VA = "0x1C4CBCC")]
	private void UpdateHandDistances()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1C4CDAC", Offset = "0x1C4CDAC", VA = "0x1C4CDAC")]
	private float GetGrabValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1C4CDE4", Offset = "0x1C4CDE4", VA = "0x1C4CDE4")]
	private float GetRawGrabValue()
	{
		return default(float);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1C4BEFC", Offset = "0x1C4BEFC", VA = "0x1C4BEFC")]
	private void ReleaseHand()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1C4CEA8", Offset = "0x1C4CEA8", VA = "0x1C4CEA8")]
	private void ReleaseHandPositionControl()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1C4CFD8", Offset = "0x1C4CFD8", VA = "0x1C4CFD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7C694", Offset = "0xB7C694")]
	private IEnumerator ResetToDefaultPosition()
	{
		return null;
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1C4D050", Offset = "0x1C4D050", VA = "0x1C4D050")]
	public GrabbableInteraction()
	{
	}
}
[Token(Token = "0x20001D3")]
public class GrabbableSpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B54C", Offset = "0xB5B54C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<PooledObjectSpawner, bool> <>9__3_0;

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xFD355C", Offset = "0xFD355C", VA = "0xFD355C")]
		public <>c()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xFD3564", Offset = "0xFD3564", VA = "0xFD3564")]
		internal bool <Awake>b__3_0(PooledObjectSpawner s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PooledObjectSpawner[] m_spawners;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB68618", Offset = "0xB68618")]
	public float m_respawnCheckFrequency;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_waitTime;

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1C4D08C", Offset = "0x1C4D08C", VA = "0x1C4D08C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1C4D228", Offset = "0x1C4D228", VA = "0x1C4D228", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1C4D28C", Offset = "0x1C4D28C", VA = "0x1C4D28C", Slot = "5")]
	public virtual void RespawnAll()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1C4D320", Offset = "0x1C4D320", VA = "0x1C4D320", Slot = "6")]
	public virtual void SpawnIfNoValidObjectInVolume()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1C4D5DC", Offset = "0x1C4D5DC", VA = "0x1C4D5DC")]
	public GrabbableSpawner()
	{
	}
}
[Token(Token = "0x20001D5")]
public class HandGrabbingDisableVolume : MonoBehaviour
{
	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_handMask;

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1C50F4C", Offset = "0x1C50F4C", VA = "0x1C50F4C")]
	private bool IsValid(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1C50FAC", Offset = "0x1C50FAC", VA = "0x1C50FAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1C51080", Offset = "0x1C51080", VA = "0x1C51080")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1C51144", Offset = "0x1C51144", VA = "0x1C51144")]
	public HandGrabbingDisableVolume()
	{
	}
}
[Token(Token = "0x20001D6")]
public class FruitConfigHolder : MonoBehaviour
{
	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<FruitConfig> m_fruitConfigs;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68660", Offset = "0xB68660")]
	private static FruitConfigHolder <Instance>k__BackingField;

	[Token(Token = "0x1700013D")]
	public static FruitConfigHolder Instance
	{
		[Token(Token = "0x6000980")]
		[Address(RVA = "0x14BE068", Offset = "0x14BE068", VA = "0x14BE068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C744", Offset = "0xB7C744")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000981")]
		[Address(RVA = "0x14BE0B4", Offset = "0x14BE0B4", VA = "0x14BE0B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C754", Offset = "0xB7C754")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public List<FruitConfig> FruitConfigs
	{
		[Token(Token = "0x6000982")]
		[Address(RVA = "0x14BE108", Offset = "0x14BE108", VA = "0x14BE108")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x14BE110", Offset = "0x14BE110", VA = "0x14BE110")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x14BE428", Offset = "0x14BE428", VA = "0x14BE428")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x14BE3D4", Offset = "0x14BE3D4", VA = "0x14BE3D4")]
	private void Initialise()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x14BE514", Offset = "0x14BE514", VA = "0x14BE514")]
	public FruitConfigHolder()
	{
	}
}
[Token(Token = "0x20001D7")]
public class HandPosesHolder : MonoBehaviour
{
	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68670", Offset = "0xB68670")]
	private static HandPosesHolder <Instance>k__BackingField;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68680", Offset = "0xB68680")]
	private Dictionary<HandPose, int> <HandPosesMap>k__BackingField;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HandPose[] m_handPoses;

	[Token(Token = "0x1700013F")]
	public static HandPosesHolder Instance
	{
		[Token(Token = "0x6000987")]
		[Address(RVA = "0x1C56160", Offset = "0x1C56160", VA = "0x1C56160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C764", Offset = "0xB7C764")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x1C561AC", Offset = "0x1C561AC", VA = "0x1C561AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C774", Offset = "0xB7C774")]
		private set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public HandPose[] HandPoses
	{
		[Token(Token = "0x6000989")]
		[Address(RVA = "0x1C56200", Offset = "0x1C56200", VA = "0x1C56200")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000141")]
	public Dictionary<HandPose, int> HandPosesMap
	{
		[Token(Token = "0x600098A")]
		[Address(RVA = "0x1C56208", Offset = "0x1C56208", VA = "0x1C56208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C784", Offset = "0xB7C784")]
		get
		{
			return null;
		}
		[Token(Token = "0x600098B")]
		[Address(RVA = "0x1C56210", Offset = "0x1C56210", VA = "0x1C56210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C794", Offset = "0xB7C794")]
		private set
		{
		}
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1C56218", Offset = "0x1C56218", VA = "0x1C56218")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1C5660C", Offset = "0x1C5660C", VA = "0x1C5660C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1C564DC", Offset = "0x1C564DC", VA = "0x1C564DC")]
	private void Initialise()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1C566F8", Offset = "0x1C566F8", VA = "0x1C566F8")]
	public int GetPoseIndex([Optional] HandPose handPose)
	{
		return default(int);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1C567B0", Offset = "0x1C567B0", VA = "0x1C567B0")]
	public bool TryGetPose(int index, out HandPose pose)
	{
		return default(bool);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1C56820", Offset = "0x1C56820", VA = "0x1C56820")]
	public HandPosesHolder()
	{
	}
}
[Token(Token = "0x20001D8")]
public interface IGrabbable
{
	[Token(Token = "0x17000142")]
	Grabbable.State CurrentState
	{
		[Token(Token = "0x600099A")]
		get;
	}

	[Token(Token = "0x17000143")]
	IHand CurrentHand
	{
		[Token(Token = "0x600099B")]
		get;
	}

	[Token(Token = "0x17000144")]
	Transform Transform
	{
		[Token(Token = "0x600099C")]
		get;
	}

	[Token(Token = "0x17000145")]
	Vector3 InstantVelocity
	{
		[Token(Token = "0x600099D")]
		get;
	}

	[Token(Token = "0x17000146")]
	Vector3 AverageVelocity
	{
		[Token(Token = "0x600099E")]
		get;
	}

	[Token(Token = "0x1400002F")]
	event Action<IGrabbable, IHand> OnGrab;

	[Token(Token = "0x14000030")]
	event Action<IGrabbable, IHand> OnPull;

	[Token(Token = "0x14000031")]
	event Action<IGrabbable, IHand> OnSwappedHand;

	[Token(Token = "0x14000032")]
	event Action<IGrabbable> OnRelease;

	[Token(Token = "0x600099F")]
	Vector3 GetSpawnPosition(Transform spawnTransform);

	[Token(Token = "0x60009A0")]
	void Freeze(bool freezing = true);
}
[Token(Token = "0x20001D9")]
public class UIToucher : MonoBehaviour
{
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B55C", Offset = "0xB5B55C")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIToucher <>4__this;

		[Token(Token = "0x17000147")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x1B8F98C", Offset = "0x1B8F98C", VA = "0x1B8F98C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x1B8F9D4", Offset = "0x1B8F9D4", VA = "0x1B8F9D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1B8F6B4", Offset = "0x1B8F6B4", VA = "0x1B8F6B4")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x1B8F6E0", Offset = "0x1B8F6E0", VA = "0x1B8F6E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1B8F6E4", Offset = "0x1B8F6E4", VA = "0x1B8F6E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1B8F994", Offset = "0x1B8F994", VA = "0x1B8F994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IHand m_hand;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly Grabbable.Vector3History m_velocityHistory;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1225238", Offset = "0x1225238", VA = "0x1225238")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1225294", Offset = "0x1225294", VA = "0x1225294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7C824", Offset = "0xB7C824")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x122530C", Offset = "0x122530C", VA = "0x122530C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x122553C", Offset = "0x122553C", VA = "0x122553C")]
	private void OnPadGrabbed()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1225594", Offset = "0x1225594", VA = "0x1225594")]
	private void OnPadReleased()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x12255A0", Offset = "0x12255A0", VA = "0x12255A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x1225668", Offset = "0x1225668", VA = "0x1225668")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x1225798", Offset = "0x1225798", VA = "0x1225798")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1225880", Offset = "0x1225880", VA = "0x1225880")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x12259AC", Offset = "0x12259AC", VA = "0x12259AC")]
	public UIToucher()
	{
	}
}
[Token(Token = "0x20001DB")]
public sealed class InstantiateAssetVariant : MonoBehaviour
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB686A0", Offset = "0xB686A0")]
	[SerializeField]
	private AssetVariationPrefab m_assetVariationPrefab;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AssetVariationAddressable m_assetVariationAddressable;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB686FC", Offset = "0xB686FC")]
	[SerializeField]
	private Transform m_spawnTransform;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool m_onlyLoadWhenProviderInitialized;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform m_parent;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68768", Offset = "0xB68768")]
	[SerializeField]
	private bool m_startDoTween;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB687B4", Offset = "0xB687B4")]
	[SerializeField]
	private bool m_selfDestroyAfterInstantiation;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool m_subscribedToEvent;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<AssetVariationAddressable, GameObject> s_addressablePrefabs;

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x100A50C", Offset = "0x100A50C", VA = "0x100A50C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x100A6EC", Offset = "0x100A6EC", VA = "0x100A6EC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x100A89C", Offset = "0x100A89C", VA = "0x100A89C")]
	private void InstantiatePrefab(GameObject prefab)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x100AB14", Offset = "0x100AB14", VA = "0x100AB14")]
	private void InitializePrefab(GameObject gameObjectSpawned)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x100ABE8", Offset = "0x100ABE8", VA = "0x100ABE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x100ACA4", Offset = "0x100ACA4", VA = "0x100ACA4")]
	public InstantiateAssetVariant()
	{
	}
}
[Token(Token = "0x20001DC")]
public class BasinSpoon : MonoBehaviour
{
	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_waterEnterRadius;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_waterExitRadius;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_sphereCenter;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB687EC", Offset = "0xB687EC")]
	public float m_waterAngleThreshold;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_waterMeshTransform;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent m_onWaterEnter;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent m_onWaterExit;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent m_onEmptySpoon;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_isUnderWater;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_isGrabbed;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_waterMeshGameObject;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion m_defaultWaterRotation;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_waterDot;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Collider[] s_hitResults;

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x144F3F8", Offset = "0x144F3F8", VA = "0x144F3F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x144F540", Offset = "0x144F540", VA = "0x144F540")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x144F728", Offset = "0x144F728", VA = "0x144F728")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x144F8B4", Offset = "0x144F8B4", VA = "0x144F8B4")]
	public BasinSpoon()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x144FA04", Offset = "0x144FA04", VA = "0x144FA04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7C8D4", Offset = "0xB7C8D4")]
	private void <Awake>b__14_0(IGrabbable grabbable, IHand hand)
	{
	}
}
[Token(Token = "0x20001DD")]
public class OnPullOrGrabbed : MonoBehaviour
{
	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_objectsToDestroy;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PooledObject m_objectPrefab;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_spawnTransform;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grabbable m_grabbable;

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x184AAFC", Offset = "0x184AAFC", VA = "0x184AAFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x184AB4C", Offset = "0x184AB4C", VA = "0x184AB4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x184ACC0", Offset = "0x184ACC0", VA = "0x184ACC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x184AE34", Offset = "0x184AE34", VA = "0x184AE34")]
	private void OnGameStart(GameEvent evt)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x184AE6C", Offset = "0x184AE6C", VA = "0x184AE6C")]
	private void OnGrabbed([Optional] IGrabbable grabbable, [Optional] IHand hand)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x184B0B8", Offset = "0x184B0B8", VA = "0x184B0B8")]
	public OnPullOrGrabbed()
	{
	}
}
[Token(Token = "0x20001DE")]
public interface ILocalizeCallback
{
	[Token(Token = "0x60009C4")]
	void OnLocalize();
}
[Token(Token = "0x20001DF")]
public class Intro : MonoBehaviour
{
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B56C", Offset = "0xB5B56C")]
	private sealed class <Run>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intro <>4__this;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AreaUnlocksPlayerDataObject <areaData>5__2;

		[Token(Token = "0x17000149")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0xFD4F94", Offset = "0xFD4F94", VA = "0xFD4F94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0xFD4FDC", Offset = "0xFD4FDC", VA = "0xFD4FDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xFD4670", Offset = "0xFD4670", VA = "0xFD4670")]
		[DebuggerHidden]
		public <Run>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xFD469C", Offset = "0xFD469C", VA = "0xFD469C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xFD46A0", Offset = "0xFD46A0", VA = "0xFD46A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xFD4F9C", Offset = "0xFD4F9C", VA = "0xFD4F9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B57C", Offset = "0xB5B57C")]
	private sealed class <EndIntro>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intro <>4__this;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeInTime;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeOutTime;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009D5")]
			[Address(RVA = "0xFD4620", Offset = "0xFD4620", VA = "0xFD4620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0xFD4668", Offset = "0xFD4668", VA = "0xFD4668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xFD41F4", Offset = "0xFD41F4", VA = "0xFD41F4")]
		[DebuggerHidden]
		public <EndIntro>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xFD4220", Offset = "0xFD4220", VA = "0xFD4220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xFD4224", Offset = "0xFD4224", VA = "0xFD4224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xFD4628", Offset = "0xFD4628", VA = "0xFD4628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B58C", Offset = "0xB5B58C")]
	private sealed class <WaitForInput>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0xFD5114", Offset = "0xFD5114", VA = "0xFD5114", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0xFD515C", Offset = "0xFD515C", VA = "0xFD515C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xFD4FE4", Offset = "0xFD4FE4", VA = "0xFD4FE4")]
		[DebuggerHidden]
		public <WaitForInput>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xFD5010", Offset = "0xFD5010", VA = "0xFD5010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xFD5014", Offset = "0xFD5014", VA = "0xFD5014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xFD511C", Offset = "0xFD511C", VA = "0xFD511C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B59C", Offset = "0xB5B59C")]
	private sealed class <WaitUnlessSkipped>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Intro <>4__this;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xFD521C", Offset = "0xFD521C", VA = "0xFD521C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0xFD5264", Offset = "0xFD5264", VA = "0xFD5264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xFD5164", Offset = "0xFD5164", VA = "0xFD5164")]
		[DebuggerHidden]
		public <WaitUnlessSkipped>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xFD5190", Offset = "0xFD5190", VA = "0xFD5190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xFD5194", Offset = "0xFD5194", VA = "0xFD5194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xFD5224", Offset = "0xFD5224", VA = "0xFD5224", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_introSequenceAnimator;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_visionBlockerBlackFNVR2logo;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ScreenFade m_introFade;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SoundCue continueClickFluteSound;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_centerPosition;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_skipped;

	[Token(Token = "0x4000CE2")]
	private const string LogoOnly = "LogoOnly";

	[Token(Token = "0x4000CE3")]
	private const string StartupIntro = "StartupIntro";

	[Token(Token = "0x4000CE4")]
	private const string NewPlayerIntro = "NewPlayerIntro";

	[Token(Token = "0x4000CE5")]
	private const string ReturningPlayerFade = "ReturningPlayerFade";

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x100D3B0", Offset = "0x100D3B0", VA = "0x100D3B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7C8E4", Offset = "0xB7C8E4")]
	public IEnumerator Run()
	{
		return null;
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x100D428", Offset = "0x100D428", VA = "0x100D428")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7C944", Offset = "0xB7C944")]
	private IEnumerator EndIntro(float fadeInTime, float fadeOutTime)
	{
		return null;
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x100D4B4", Offset = "0x100D4B4", VA = "0x100D4B4")]
	private void EndIntro()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x100D6B0", Offset = "0x100D6B0", VA = "0x100D6B0")]
	private float GetAnimationLength(string animationName)
	{
		return default(float);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x100D774", Offset = "0x100D774", VA = "0x100D774")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7C9A4", Offset = "0xB7C9A4")]
	private IEnumerator WaitForInput()
	{
		return null;
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x100D7D0", Offset = "0x100D7D0", VA = "0x100D7D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7CA04", Offset = "0xB7CA04")]
	private IEnumerator WaitUnlessSkipped(float time)
	{
		return null;
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x100D858", Offset = "0x100D858", VA = "0x100D858")]
	public Intro()
	{
	}
}
[Token(Token = "0x20001E4")]
public class ItemManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E5")]
	public class InventorySlotInfo
	{
		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite m_spriteActive;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite m_spriteInactive;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_flipHorizontally;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LocalizedString m_localizeString;

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xFD5BA4", Offset = "0xFD5BA4", VA = "0xFD5BA4")]
		public InventorySlotInfo()
		{
		}
	}

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnlockableList[] m_unlockableList;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnlockablePrefab[] m_defaultSelection;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private InventorySlotInfo m_leftHand;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InventorySlotInfo m_rightHand;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InventorySlotInfo m_twoHanded;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InventoryPlayerDataObject m_inventoryPlayerDataObject;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly Dictionary<string, UnlockablePrefab> m_unlockablePrefabs;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_initializedPlayerDataObject;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action OnItemUnlocked;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnInitialized;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ItemManager s_privateInstance;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool s_instanceCreated;

	[Token(Token = "0x17000151")]
	public InventoryPlayerDataObject InventoryPlayerData
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1011678", Offset = "0x1011678", VA = "0x1011678")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000152")]
	public static ItemManager Instance
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x100DFF8", Offset = "0x100DFF8", VA = "0x100DFF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x1011680", Offset = "0x1011680", VA = "0x1011680")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1011704", Offset = "0x1011704", VA = "0x1011704")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1011B44", Offset = "0x1011B44", VA = "0x1011B44")]
	private void OnUnlocked()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x1011A58", Offset = "0x1011A58", VA = "0x1011A58")]
	private void SetDefaults()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x1011BA4", Offset = "0x1011BA4", VA = "0x1011BA4")]
	public bool SetItemAsSelected(UnlockablePrefab unlockablePrefab, InventoryPlayerDataObject.InventorySlot inventorySlot, bool wasFromPad = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x100E0C0", Offset = "0x100E0C0", VA = "0x100E0C0")]
	public UnlockablePrefab GetUnlockablePrefabSelected(InventoryPlayerDataObject.ItemType itemType, InventoryPlayerDataObject.InventorySlot inventorySlot)
	{
		return null;
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x100E558", Offset = "0x100E558", VA = "0x100E558")]
	public InventorySlotInfo GetInventorySlotInfo(InventoryPlayerDataObject.InventorySlot inventorySlot, bool twoHanded = false)
	{
		return null;
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x1011DD0", Offset = "0x1011DD0", VA = "0x1011DD0")]
	public ItemManager()
	{
	}
}
[Token(Token = "0x20001E6")]
public class LODCanvas : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B5AC", Offset = "0xB5B5AC")]
	private sealed class <DelayedDisable>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODCanvas <>4__this;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0xFD7794", Offset = "0xFD7794", VA = "0xFD7794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0xFD77DC", Offset = "0xFD77DC", VA = "0xFD77DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xFD768C", Offset = "0xFD768C", VA = "0xFD768C")]
		[DebuggerHidden]
		public <DelayedDisable>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xFD76B8", Offset = "0xFD76B8", VA = "0xFD76B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xFD76BC", Offset = "0xFD76BC", VA = "0xFD76BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xFD779C", Offset = "0xFD779C", VA = "0xFD779C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneLOD m_lod;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas m_canvas;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68874", Offset = "0xB68874")]
	public bool m_disableOnAwake;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_disableDelay;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_ignoreLODS;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_followSpecificTransform;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool m_followTransformRotation;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_transformToFollow;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_reparentOnAwake;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_newParent;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private List<LayoutGroup> m_layoutGroups;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private List<RectMask2D> m_rectMask2Ds;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<Mask> m_masks;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<VRGraphicRaycaster> m_raycasters;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<ScrollRect> m_scrollRects;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SceneLOD.Level m_enableAtLevel;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent<bool> m_onLODMatched;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine m_disableCoroutine;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool m_isLODCanvasActive;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB688FC", Offset = "0xB688FC")]
	private bool <PreviousLODCanvasActive>k__BackingField;

	[Token(Token = "0x17000153")]
	public bool PreviousLODCanvasActive
	{
		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x101C84C", Offset = "0x101C84C", VA = "0x101C84C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CBA4", Offset = "0xB7CBA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x101C854", Offset = "0x101C854", VA = "0x101C854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CBB4", Offset = "0xB7CBB4")]
		private set
		{
		}
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x101C860", Offset = "0x101C860", VA = "0x101C860")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x101C920", Offset = "0x101C920", VA = "0x101C920")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x101CA14", Offset = "0x101CA14", VA = "0x101CA14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x101CAD4", Offset = "0x101CAD4", VA = "0x101CAD4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x101CB7C", Offset = "0x101CB7C", VA = "0x101CB7C")]
	private void OnLODApplied(SceneLOD.Level level)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x101C99C", Offset = "0x101C99C", VA = "0x101C99C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7CBC4", Offset = "0xB7CBC4")]
	private IEnumerator DelayedDisable()
	{
		return null;
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x101CC30", Offset = "0x101CC30", VA = "0x101CC30")]
	private void SetBehavioursActive(bool isActive)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x101CB8C", Offset = "0x101CB8C", VA = "0x101CB8C")]
	public void SetLODCanvasActive(bool isActive)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x101D22C", Offset = "0x101D22C", VA = "0x101D22C")]
	public void FindAndStoreAllRelevantComponents()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x101D5A0", Offset = "0x101D5A0", VA = "0x101D5A0")]
	public LODCanvas()
	{
	}
}
[Token(Token = "0x20001E8")]
public class Layers : MonoBehaviour
{
	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6890C", Offset = "0xB6890C")]
	private static int <Environment>k__BackingField;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6891C", Offset = "0xB6891C")]
	private static int <Fruit>k__BackingField;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6892C", Offset = "0xB6892C")]
	private static int <FruitChunk>k__BackingField;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6893C", Offset = "0xB6893C")]
	private static int <FruitDead>k__BackingField;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6894C", Offset = "0xB6894C")]
	private static int <Grabbable>k__BackingField;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6895C", Offset = "0xB6895C")]
	private static int <Stash>k__BackingField;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6896C", Offset = "0xB6896C")]
	private static int <Head>k__BackingField;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6897C", Offset = "0xB6897C")]
	private static int <GameBounds>k__BackingField;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6898C", Offset = "0xB6898C")]
	private static int <Player>k__BackingField;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6899C", Offset = "0xB6899C")]
	private static int <Projectile>k__BackingField;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB689AC", Offset = "0xB689AC")]
	private static int <SettingsMenu>k__BackingField;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB689BC", Offset = "0xB689BC")]
	private static int <Ui>k__BackingField;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB689CC", Offset = "0xB689CC")]
	private static int <Water>k__BackingField;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB689DC", Offset = "0xB689DC")]
	private static int <HandLeft>k__BackingField;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB689EC", Offset = "0xB689EC")]
	private static int <HandRight>k__BackingField;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB689FC", Offset = "0xB689FC")]
	private static int <NetworkCollider>k__BackingField;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68A0C", Offset = "0xB68A0C")]
	private static int <FruitBounds>k__BackingField;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68A1C", Offset = "0xB68A1C")]
	private static Layers <Instance>k__BackingField;

	[Token(Token = "0x17000156")]
	public static int Environment
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x10BAA64", Offset = "0x10BAA64", VA = "0x10BAA64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CC74", Offset = "0xB7CC74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x10BAAB0", Offset = "0x10BAAB0", VA = "0x10BAAB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CC84", Offset = "0xB7CC84")]
		private set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public static int Fruit
	{
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x10BAB00", Offset = "0x10BAB00", VA = "0x10BAB00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CC94", Offset = "0xB7CC94")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x10BAB4C", Offset = "0x10BAB4C", VA = "0x10BAB4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CCA4", Offset = "0xB7CCA4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public static int FruitChunk
	{
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x10BAB9C", Offset = "0x10BAB9C", VA = "0x10BAB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CCB4", Offset = "0xB7CCB4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x10BABE8", Offset = "0x10BABE8", VA = "0x10BABE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CCC4", Offset = "0xB7CCC4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public static int FruitDead
	{
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x10BAC38", Offset = "0x10BAC38", VA = "0x10BAC38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CCD4", Offset = "0xB7CCD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x10BAC84", Offset = "0x10BAC84", VA = "0x10BAC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CCE4", Offset = "0xB7CCE4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public static int Grabbable
	{
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x10BACD4", Offset = "0x10BACD4", VA = "0x10BACD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CCF4", Offset = "0xB7CCF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x10BAD20", Offset = "0x10BAD20", VA = "0x10BAD20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD04", Offset = "0xB7CD04")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	public static int Stash
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x10BAD70", Offset = "0x10BAD70", VA = "0x10BAD70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD14", Offset = "0xB7CD14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x10BADBC", Offset = "0x10BADBC", VA = "0x10BADBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD24", Offset = "0xB7CD24")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public static int Head
	{
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x10BAE0C", Offset = "0x10BAE0C", VA = "0x10BAE0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD34", Offset = "0xB7CD34")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x10BAE58", Offset = "0x10BAE58", VA = "0x10BAE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD44", Offset = "0xB7CD44")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public static int GameBounds
	{
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x10BAEA8", Offset = "0x10BAEA8", VA = "0x10BAEA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD54", Offset = "0xB7CD54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x10BAEF4", Offset = "0x10BAEF4", VA = "0x10BAEF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD64", Offset = "0xB7CD64")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public static int Player
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x10BAF44", Offset = "0x10BAF44", VA = "0x10BAF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD74", Offset = "0xB7CD74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x10BAF90", Offset = "0x10BAF90", VA = "0x10BAF90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD84", Offset = "0xB7CD84")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public static int Projectile
	{
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x10BAFE0", Offset = "0x10BAFE0", VA = "0x10BAFE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CD94", Offset = "0xB7CD94")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x10BB02C", Offset = "0x10BB02C", VA = "0x10BB02C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CDA4", Offset = "0xB7CDA4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000160")]
	public static int SettingsMenu
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x10BB07C", Offset = "0x10BB07C", VA = "0x10BB07C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CDB4", Offset = "0xB7CDB4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x10BB0C8", Offset = "0x10BB0C8", VA = "0x10BB0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CDC4", Offset = "0xB7CDC4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public static int Ui
	{
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x10BB118", Offset = "0x10BB118", VA = "0x10BB118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CDD4", Offset = "0xB7CDD4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x10BB164", Offset = "0x10BB164", VA = "0x10BB164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CDE4", Offset = "0xB7CDE4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public static int Water
	{
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x10BB1B4", Offset = "0x10BB1B4", VA = "0x10BB1B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CDF4", Offset = "0xB7CDF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x10BB200", Offset = "0x10BB200", VA = "0x10BB200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE04", Offset = "0xB7CE04")]
		private set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public static int HandLeft
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x10BB250", Offset = "0x10BB250", VA = "0x10BB250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE14", Offset = "0xB7CE14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x10BB29C", Offset = "0x10BB29C", VA = "0x10BB29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE24", Offset = "0xB7CE24")]
		private set
		{
		}
	}

	[Token(Token = "0x17000164")]
	public static int HandRight
	{
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x10BB2EC", Offset = "0x10BB2EC", VA = "0x10BB2EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE34", Offset = "0xB7CE34")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x10BB338", Offset = "0x10BB338", VA = "0x10BB338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE44", Offset = "0xB7CE44")]
		private set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public static int NetworkCollider
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x10BB388", Offset = "0x10BB388", VA = "0x10BB388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE54", Offset = "0xB7CE54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x10BB3D4", Offset = "0x10BB3D4", VA = "0x10BB3D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE64", Offset = "0xB7CE64")]
		private set
		{
		}
	}

	[Token(Token = "0x17000166")]
	public static int FruitBounds
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x10BB424", Offset = "0x10BB424", VA = "0x10BB424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE74", Offset = "0xB7CE74")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x10BB470", Offset = "0x10BB470", VA = "0x10BB470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE84", Offset = "0xB7CE84")]
		private set
		{
		}
	}

	[Token(Token = "0x17000167")]
	private static Layers Instance
	{
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x10BB4C0", Offset = "0x10BB4C0", VA = "0x10BB4C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CE94", Offset = "0xB7CE94")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x10BB50C", Offset = "0x10BB50C", VA = "0x10BB50C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CEA4", Offset = "0xB7CEA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x10BB560", Offset = "0x10BB560", VA = "0x10BB560")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB7CEB4", Offset = "0xB7CEB4")]
	private static void CreateInstance()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x10BB6D8", Offset = "0x10BB6D8", VA = "0x10BB6D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x10BBC64", Offset = "0x10BBC64", VA = "0x10BBC64")]
	public Layers()
	{
	}
}
[Token(Token = "0x20001E9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B5BC", Offset = "0xB5B5BC")]
public class LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_lifetime;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_delay;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Light m_light;

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x10C6768", Offset = "0x10C6768", VA = "0x10C6768")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x10C67E0", Offset = "0x10C67E0", VA = "0x10C67E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x10C6818", Offset = "0x10C6818", VA = "0x10C6818")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x10C6948", Offset = "0x10C6948", VA = "0x10C6948")]
	public LightIntensityFade()
	{
	}
}
[Token(Token = "0x20001EA")]
public class LocalPlayerSpawnedListener : MonoBehaviour
{
	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnityEvent m_onLocalPlayerSpawned;

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x10C7D28", Offset = "0x10C7D28", VA = "0x10C7D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x10C7DA0", Offset = "0x10C7DA0", VA = "0x10C7DA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x10C7E18", Offset = "0x10C7E18", VA = "0x10C7E18")]
	private void OnLocalPlayerSpawned()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x10C7E2C", Offset = "0x10C7E2C", VA = "0x10C7E2C")]
	public LocalPlayerSpawnedListener()
	{
	}
}
[Token(Token = "0x20001EB")]
public class LocationTriggerEvent : MonoBehaviour
{
	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask m_validLayerMask;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string m_validTag;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected bool m_oneTimeUse;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent m_onEnterLocation;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent m_onExitLocation;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool m_isOpened;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Collider m_collider;

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x1CB9510", Offset = "0x1CB9510", VA = "0x1CB9510")]
	protected bool IsValidObject(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x1CB95B4", Offset = "0x1CB95B4", VA = "0x1CB95B4", Slot = "4")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x1CB9608", Offset = "0x1CB9608", VA = "0x1CB9608", Slot = "5")]
	protected virtual void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x1CB9718", Offset = "0x1CB9718", VA = "0x1CB9718", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x1CB97A8", Offset = "0x1CB97A8", VA = "0x1CB97A8", Slot = "7")]
	protected virtual void OnEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x1CB97D0", Offset = "0x1CB97D0", VA = "0x1CB97D0", Slot = "8")]
	protected virtual void OnExit(Collider other)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x1CB97F4", Offset = "0x1CB97F4", VA = "0x1CB97F4")]
	public LocationTriggerEvent()
	{
	}
}
[Token(Token = "0x20001EC")]
public class LocationTriggerEventOnline : LocationTriggerEvent
{
	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_offlineMessage;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float m_pingCheckFrequency;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x1CB9A80", Offset = "0x1CB9A80", VA = "0x1CB9A80", Slot = "6")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x1CB9B6C", Offset = "0x1CB9B6C", VA = "0x1CB9B6C", Slot = "7")]
	protected override void OnEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x1CB9C54", Offset = "0x1CB9C54", VA = "0x1CB9C54", Slot = "8")]
	protected override void OnExit(Collider other)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1CB9D74", Offset = "0x1CB9D74", VA = "0x1CB9D74")]
	private void OnPingResultReceived(bool isConnected)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x1CB9DEC", Offset = "0x1CB9DEC", VA = "0x1CB9DEC")]
	public LocationTriggerEventOnline()
	{
	}
}
[Token(Token = "0x20001ED")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B61C", Offset = "0xB5B61C")]
public class PlayerBoundary : MonoBehaviour
{
	[Token(Token = "0x20001EE")]
	public enum BoundaryType
	{
		[Token(Token = "0x4000D49")]
		OnExit,
		[Token(Token = "0x4000D4A")]
		OnEnter
	}

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoundaryType m_boundaryType;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_blinkTime;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_resetPosition;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LayerMask m_validLayers;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider m_playerCollider;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider m_previousPlayerCollider;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_enabled;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool m_previousEnabledState;

	[Token(Token = "0x17000168")]
	public bool Enabled
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xF5A0C4", Offset = "0xF5A0C4", VA = "0xF5A0C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xF5A0CC", Offset = "0xF5A0CC", VA = "0xF5A0CC")]
		set
		{
		}
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xF5A22C", Offset = "0xF5A22C", VA = "0xF5A22C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xF5A304", Offset = "0xF5A304", VA = "0xF5A304")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xF5A380", Offset = "0xF5A380", VA = "0xF5A380")]
	private bool IsValidObject(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xF5A3E0", Offset = "0xF5A3E0", VA = "0xF5A3E0")]
	public void TeleportPlayerToCenter()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xF5A4C8", Offset = "0xF5A4C8", VA = "0xF5A4C8")]
	public PlayerBoundary()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xF5A50C", Offset = "0xF5A50C", VA = "0xF5A50C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7CEC8", Offset = "0xB7CEC8")]
	private void <TeleportPlayerToCenter>b__15_0()
	{
	}
}
[Token(Token = "0x20001EF")]
public class TeleportPlayerToLocation : MonoBehaviour
{
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B67C", Offset = "0xB5B67C")]
	private sealed class <TeleportCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportPlayerToLocation <>4__this;

		[Token(Token = "0x17000169")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A4A")]
			[Address(RVA = "0xFEE6E0", Offset = "0xFEE6E0", VA = "0xFEE6E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xFEE728", Offset = "0xFEE728", VA = "0xFEE728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xFEE588", Offset = "0xFEE588", VA = "0xFEE588")]
		[DebuggerHidden]
		public <TeleportCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xFEE5B4", Offset = "0xFEE5B4", VA = "0xFEE5B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xFEE5B8", Offset = "0xFEE5B8", VA = "0xFEE5B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xFEE6E8", Offset = "0xFEE6E8", VA = "0xFEE6E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AreaManager.AreaType m_location;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_teleportDelay;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_blinkTime;

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x15CF3E4", Offset = "0x15CF3E4", VA = "0x15CF3E4")]
	public void TeleportPlayer()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x15CF410", Offset = "0x15CF410", VA = "0x15CF410")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7CED8", Offset = "0xB7CED8")]
	private IEnumerator TeleportCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x15CF488", Offset = "0x15CF488", VA = "0x15CF488")]
	public TeleportPlayerToLocation()
	{
	}
}
[Token(Token = "0x20001F1")]
public class TeleportPlayerToPosition : MonoBehaviour
{
	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AreaManager.AreaType m_teleportFromArea;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private AreaManager.AreaType m_teleportToArea;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_teleportPosition;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_blinkTime;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool m_useSceneLODs;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SceneConfig.AreaLODData m_lodA;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SceneConfig.AreaLODData m_lodB;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SceneConfig.AreaLODData m_mergedLod;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x15CF498", Offset = "0x15CF498", VA = "0x15CF498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x15CF580", Offset = "0x15CF580", VA = "0x15CF580")]
	public void Teleport()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x15CF614", Offset = "0x15CF614", VA = "0x15CF614")]
	public TeleportPlayerToPosition()
	{
	}
}
[Token(Token = "0x20001F2")]
public class LodBias : MonoBehaviour
{
	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B68C", Offset = "0xB5B68C")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0xFDBFB0", Offset = "0xFDBFB0", VA = "0xFDBFB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0xFDBFF8", Offset = "0xFDBFF8", VA = "0xFDBFF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xFDBDCC", Offset = "0xFDBDCC", VA = "0xFDBDCC")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xFDBDF8", Offset = "0xFDBDF8", VA = "0xFDBDF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xFDBDFC", Offset = "0xFDBDFC", VA = "0xFDBDFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xFDBFB8", Offset = "0xFDBFB8", VA = "0xFDBFB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D59")]
	private const int EditorCameraFOV = 60;

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x1CBEC2C", Offset = "0x1CBEC2C", VA = "0x1CBEC2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7CF88", Offset = "0xB7CF88")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1CBEC88", Offset = "0x1CBEC88", VA = "0x1CBEC88")]
	public LodBias()
	{
	}
}
[Token(Token = "0x20001F4")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform m_playerCameraTransform;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 m_axisConstraint;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1CBEDD8", Offset = "0x1CBEDD8", VA = "0x1CBEDD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1CBEF20", Offset = "0x1CBEF20", VA = "0x1CBEF20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1CBEDDC", Offset = "0x1CBEDDC", VA = "0x1CBEDDC")]
	private void CacheCameraTransform()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1CBEF24", Offset = "0x1CBEF24", VA = "0x1CBEF24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1CBF084", Offset = "0x1CBF084", VA = "0x1CBF084")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x20001F5")]
public abstract class ManagedScriptableObject : ScriptableObject
{
	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1CC057C", Offset = "0x1CC057C", VA = "0x1CC057C", Slot = "4")]
	protected virtual void OnBegin()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1CC0580", Offset = "0x1CC0580", VA = "0x1CC0580", Slot = "5")]
	protected virtual void OnEnd()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x1CC0584", Offset = "0x1CC0584", VA = "0x1CC0584")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1CC074C", Offset = "0x1CC074C", VA = "0x1CC074C")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1CC07EC", Offset = "0x1CC07EC", VA = "0x1CC07EC")]
	protected ManagedScriptableObject()
	{
	}
}
[Token(Token = "0x20001F6")]
public class DisplayUnlockBasedOnMission : MonoBehaviour, ILocalizeCallback
{
	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68B5C", Offset = "0xB68B5C")]
	[SerializeField]
	private Mission m_mission;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Game.Unlockable m_unlockable;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68BB8", Offset = "0xB68BB8")]
	[SerializeField]
	private TextMeshProUGUI m_progressionText;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI m_name;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI m_descriptionText;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI m_completedMissionText;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68C34", Offset = "0xB68C34")]
	[SerializeField]
	private UnityEvent m_onDisplayLockedState;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEvent m_onMissionActivatedState;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB68C90", Offset = "0xB68C90")]
	private UnityEvent m_onCompletedMissionState;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB68CDC", Offset = "0xB68CDC")]
	private UnityEvent m_onDisplayUnlockState;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB68D28", Offset = "0xB68D28")]
	private UnityEvent m_onFirstTimeSeen;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB68D74", Offset = "0xB68D74")]
	private UnityEvent m_onUnlockAndSeenState;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool m_unlockWhenMissionIsCompleted;

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x10EE768", Offset = "0x10EE768", VA = "0x10EE768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x10EF110", Offset = "0x10EF110", VA = "0x10EF110")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x10EEB54", Offset = "0x10EEB54", VA = "0x10EEB54")]
	private void UpdateNameAndDescriptionText()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x10EEF1C", Offset = "0x10EEF1C", VA = "0x10EEF1C")]
	private void UpdateDisplayText()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x10EF298", Offset = "0x10EF298", VA = "0x10EF298")]
	public void DisplayFistTimeVisualIfPossible()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x10EEC94", Offset = "0x10EEC94", VA = "0x10EEC94")]
	private void DisplayUnlockAndSeenState()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x10EF328", Offset = "0x10EF328", VA = "0x10EF328")]
	private void DisplayActivatedState(bool toActivate, Mission Mission)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x10EEDA0", Offset = "0x10EEDA0", VA = "0x10EEDA0")]
	private void DisplayUnlockState()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x10EEDF4", Offset = "0x10EEDF4", VA = "0x10EEDF4")]
	private void DisplayMissionCompleteState()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x10EF3CC", Offset = "0x10EF3CC", VA = "0x10EF3CC", Slot = "4")]
	public void OnLocalize()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x10EF3D0", Offset = "0x10EF3D0", VA = "0x10EF3D0")]
	public DisplayUnlockBasedOnMission()
	{
	}
}
[Token(Token = "0x20001F7")]
public class AudioData_AmplitudeBand : MonoBehaviour
{
	[Token(Token = "0x20001F8")]
	public enum m_channel
	{
		[Token(Token = "0x4000D7B")]
		Stereo,
		[Token(Token = "0x4000D7C")]
		Left,
		[Token(Token = "0x4000D7D")]
		Right
	}

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float[] m_samplesLeft;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float[] m_samplesRight;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FFTWindow m_fftWindow;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float[] m_freqBand;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] m_bandBuffer;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] m_bufferDecrease;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] m_freqBandHighest;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float[] m_audioBand;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float[] m_audioBandBuffer;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Amplitude;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float AmplitudeBuffer;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_amplitudeHighest;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_audioProfile;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public m_channel channel;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_audioValue;

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x144C024", Offset = "0x144C024", VA = "0x144C024")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x144C078", Offset = "0x144C078", VA = "0x144C078")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x144C02C", Offset = "0x144C02C", VA = "0x144C02C")]
	private void AudioProfile(float audioProfile)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x144C158", Offset = "0x144C158", VA = "0x144C158")]
	public void GetSpectrumAudioSource()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x144C250", Offset = "0x144C250", VA = "0x144C250")]
	private void MakeFrequencyBands()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x144C4B4", Offset = "0x144C4B4", VA = "0x144C4B4")]
	private void BandBuffer()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x144C6B0", Offset = "0x144C6B0", VA = "0x144C6B0")]
	private void CreateAudioBands()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x144C8A8", Offset = "0x144C8A8", VA = "0x144C8A8")]
	private void GetAmplitude()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x144C9A4", Offset = "0x144C9A4", VA = "0x144C9A4")]
	public AudioData_AmplitudeBand()
	{
	}
}
[Token(Token = "0x20001F9")]
public class AudioSpectrum : MonoBehaviour
{
	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68DD0", Offset = "0xB68DD0")]
	private static float <spectrumValue>k__BackingField;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] m_audioSpectrum;

	[Token(Token = "0x1700016D")]
	public static float spectrumValue
	{
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x144D680", Offset = "0x144D680", VA = "0x144D680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D038", Offset = "0xB7D038")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x144D6CC", Offset = "0x144D6CC", VA = "0x144D6CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D048", Offset = "0xB7D048")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x144D4C0", Offset = "0x144D4C0", VA = "0x144D4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x144D624", Offset = "0x144D624", VA = "0x144D624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x144D724", Offset = "0x144D724", VA = "0x144D724")]
	public AudioSpectrum()
	{
	}
}
[Token(Token = "0x20001FA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B69C", Offset = "0xB5B69C")]
public class AudioSyncColor : AudioSyncer
{
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B6FC", Offset = "0xB5B6FC")]
	private sealed class <MoveToColor>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSyncColor <>4__this;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color _target;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <_curr>5__2;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color <_initial>5__3;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <_timer>5__4;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xF8C588", Offset = "0xF8C588", VA = "0xF8C588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xF8C5D0", Offset = "0xF8C5D0", VA = "0xF8C5D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xF8C41C", Offset = "0xF8C41C", VA = "0xF8C41C")]
		[DebuggerHidden]
		public <MoveToColor>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xF8C448", Offset = "0xF8C448", VA = "0xF8C448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xF8C44C", Offset = "0xF8C44C", VA = "0xF8C44C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xF8C590", Offset = "0xF8C590", VA = "0xF8C590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color[] beatColors;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color restColor;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_randomIndx;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image m_img;

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x144D72C", Offset = "0x144D72C", VA = "0x144D72C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7D058", Offset = "0xB7D058")]
	private IEnumerator MoveToColor(Color _target)
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x144D7CC", Offset = "0x144D7CC", VA = "0x144D7CC")]
	private Color RandomColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x144D848", Offset = "0x144D848", VA = "0x144D848", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x144DA30", Offset = "0x144DA30", VA = "0x144DA30", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x144DB10", Offset = "0x144DB10", VA = "0x144DB10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x144DB6C", Offset = "0x144DB6C", VA = "0x144DB6C")]
	public AudioSyncColor()
	{
	}
}
[Token(Token = "0x20001FC")]
public class AudioSyncScale : AudioSyncer
{
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B70C", Offset = "0xB5B70C")]
	private sealed class <MoveToScale>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSyncScale <>4__this;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 target;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <curr>5__2;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <initial>5__3;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <timer>5__4;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0xF8C764", Offset = "0xF8C764", VA = "0xF8C764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0xF8C7AC", Offset = "0xF8C7AC", VA = "0xF8C7AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xF8C5D8", Offset = "0xF8C5D8", VA = "0xF8C5D8")]
		[DebuggerHidden]
		public <MoveToScale>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xF8C604", Offset = "0xF8C604", VA = "0xF8C604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xF8C608", Offset = "0xF8C608", VA = "0xF8C608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xF8C76C", Offset = "0xF8C76C", VA = "0xF8C76C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 m_beatScale;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 m_restScale;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine m_moveToScaleCor;

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x144DB7C", Offset = "0x144DB7C", VA = "0x144DB7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7D108", Offset = "0xB7D108")]
	private IEnumerator MoveToScale(Vector3 target)
	{
		return null;
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x144DC18", Offset = "0x144DC18", VA = "0x144DC18", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x144DD04", Offset = "0x144DD04", VA = "0x144DD04", Slot = "4")]
	public override void OnBeat()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x144DD70", Offset = "0x144DD70", VA = "0x144DD70")]
	public AudioSyncScale()
	{
	}
}
[Token(Token = "0x20001FE")]
public class AudioSyncer : MonoBehaviour
{
	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bias;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeStep;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToBeat;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float restSmoothTime;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_previousAudioValue;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float m_audioValue;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_timer;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected bool m_isBeat;

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x144DB00", Offset = "0x144DB00", VA = "0x144DB00", Slot = "4")]
	public virtual void OnBeat()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x144D93C", Offset = "0x144D93C", VA = "0x144D93C", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x144DB74", Offset = "0x144DB74", VA = "0x144DB74")]
	public AudioSyncer()
	{
	}
}
[Token(Token = "0x20001FF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B71C", Offset = "0xB5B71C")]
public class VFXConductor : MonoBehaviour
{
	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioData_AmplitudeBand m_audioData;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_varName;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_multiplier;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VisualEffect m_vfx;

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x122FD34", Offset = "0x122FD34", VA = "0x122FD34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x122FE54", Offset = "0x122FE54", VA = "0x122FE54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x122FE90", Offset = "0x122FE90", VA = "0x122FE90")]
	public VFXConductor()
	{
	}
}
[Token(Token = "0x2000200")]
public class BasketballChecker : MonoBehaviour
{
	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_tophit;

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1452C18", Offset = "0x1452C18", VA = "0x1452C18")]
	private void OnTriggerEnter()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1452C24", Offset = "0x1452C24", VA = "0x1452C24")]
	public BasketballChecker()
	{
	}
}
[Token(Token = "0x2000201")]
public class NetworkGrabbableDebug : MonoBehaviour
{
	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI m_inputAuthorityText;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_stateText;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_grabbingHandText;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI m_selectingHandText;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI m_idText;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 m_positionOffset;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private RangedFloat m_sizRangedFloat;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private RangedFloat m_minMaxDistance;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NetworkGrabbable m_networkGrabbable;

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x10D9D88", Offset = "0x10D9D88", VA = "0x10D9D88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x10D9DE4", Offset = "0x10D9DE4", VA = "0x10D9DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x10DA250", Offset = "0x10DA250", VA = "0x10DA250")]
	public NetworkGrabbableDebug()
	{
	}
}
[StructLayout(2)]
[Token(Token = "0x2000202")]
[AttributeAttribute(Name = "NetworkInputWeavedAttribute", RVA = "0xB5B77C", Offset = "0xB5B77C")]
public struct FingerCurls : INetworkInput
{
	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_thumbCurl;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float m_indexCurl;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float m_middleCurl;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float m_ringCurl;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_pinkyCurl;
}
[StructLayout(2)]
[Token(Token = "0x2000203")]
[AttributeAttribute(Name = "NetworkInputWeavedAttribute", RVA = "0xB5B790", Offset = "0xB5B790")]
public struct HandInputData : INetworkInput
{
	[Token(Token = "0x2000204")]
	[Flags]
	public enum Actions
	{
		[Token(Token = "0x4000DBA")]
		Interact = 0,
		[Token(Token = "0x4000DBB")]
		Hold = 1,
		[Token(Token = "0x4000DBC")]
		Settings = 2
	}

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NetworkButtons m_buttons;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 m_position;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Quaternion m_rotation;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FingerCurls m_fingerCurls;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int m_relaxedPose;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_clenchedPose;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool m_interactingWithUI;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public NetworkBehaviourId m_selection;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_selectionOverlap;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x1C5114C", Offset = "0x1C5114C", VA = "0x1C5114C")]
	public void Reset()
	{
	}
}
[Token(Token = "0x2000205")]
[Flags]
public enum InputState
{
	[Token(Token = "0x4000DBE")]
	Teleport = 1,
	[Token(Token = "0x4000DBF")]
	SnapTurn = 2
}
[StructLayout(2)]
[Token(Token = "0x2000206")]
[AttributeAttribute(Name = "NetworkInputWeavedAttribute", RVA = "0xB5B7C4", Offset = "0xB5B7C4")]
public struct InputData : INetworkInput
{
	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 m_headPosition;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion m_headRotation;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public HandInputData m_leftHandInput;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HandInputData m_rightHandInput;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 m_feetPosition;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public InputState m_inputState;

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x1C5C000", Offset = "0x1C5C000", VA = "0x1C5C000")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1C5C004", Offset = "0x1C5C004", VA = "0x1C5C004")]
	public bool HasState(InputState state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x1C5C014", Offset = "0x1C5C014", VA = "0x1C5C014")]
	public void SetState(InputState state, bool value)
	{
	}
}
[Token(Token = "0x2000207")]
public class MultiplayerModeSelector : MonoBehaviour
{
	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeleportPortalMultiplayer m_portal;

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xF21440", Offset = "0xF21440", VA = "0xF21440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xF21448", Offset = "0xF21448", VA = "0xF21448")]
	public void SetModePublic(bool isOn)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xF21474", Offset = "0xF21474", VA = "0xF21474")]
	public void SetModeHostPrivate(bool isOn)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xF214A0", Offset = "0xF214A0", VA = "0xF214A0")]
	public void SetModeJoinPrivate(bool isOn)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xF214FC", Offset = "0xF214FC", VA = "0xF214FC")]
	public MultiplayerModeSelector()
	{
	}
}
[Token(Token = "0x2000208")]
public class MultiplayerRegionSelector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000209")]
	private struct RegionToggle
	{
		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_regionToken;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Toggle m_regionToggle;
	}

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<RegionToggle> m_regionToggles;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_physicalBoard;

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xF21514", Offset = "0xF21514", VA = "0xF21514")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xF21658", Offset = "0xF21658", VA = "0xF21658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xF217C0", Offset = "0xF217C0", VA = "0xF217C0")]
	public void SetRegionAutomatic(bool isOn)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xF21834", Offset = "0xF21834", VA = "0xF21834")]
	public void SetRegionAsia(bool isOn)
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xF218A8", Offset = "0xF218A8", VA = "0xF218A8")]
	public void SetRegionJapan(bool isOn)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xF2191C", Offset = "0xF2191C", VA = "0xF2191C")]
	public void SetRegionEurope(bool isOn)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xF21990", Offset = "0xF21990", VA = "0xF21990")]
	public void SetRegionSouthKorea(bool isOn)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xF21A04", Offset = "0xF21A04", VA = "0xF21A04")]
	public void SetRegionSouthAmerica(bool isOn)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xF21A78", Offset = "0xF21A78", VA = "0xF21A78")]
	public void SetRegionUSAEast(bool isOn)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xF21AEC", Offset = "0xF21AEC", VA = "0xF21AEC")]
	public MultiplayerRegionSelector()
	{
	}
}
[Token(Token = "0x200020A")]
public class NetworkFruitManager : FruitManager
{
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B7D8", Offset = "0xB5B7D8")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FruitConfig config;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Fruit.SliceDirection sliceDirection;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Predicate<FruitConfig> <>9__1;

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xFB2A98", Offset = "0xFB2A98", VA = "0xFB2A98")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xFB2AA0", Offset = "0xFB2AA0", VA = "0xFB2AA0")]
		internal void <SpawnFruit>b__0(NetworkRunner runner, NetworkObject obj)
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xFB2C1C", Offset = "0xFB2C1C", VA = "0xFB2C1C")]
		internal bool <SpawnFruit>b__1(FruitConfig x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x10D6A44", Offset = "0x10D6A44", VA = "0x10D6A44", Slot = "5")]
	public override Fruit SpawnFruit(FruitConfig config, Fruit.SliceDirection sliceDirection = Fruit.SliceDirection.None, [Optional] Vector3? position, [Optional] Quaternion? rotation)
	{
		return null;
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x10D7034", Offset = "0x10D7034", VA = "0x10D7034", Slot = "4")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x10D70FC", Offset = "0x10D70FC", VA = "0x10D70FC", Slot = "7")]
	public override void SpawnSliceEffects(FruitConfig config, Vector3 pos, Quaternion rot, float scaleMultiplier)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x10D7660", Offset = "0x10D7660", VA = "0x10D7660")]
	public NetworkFruitManager()
	{
	}
}
[Token(Token = "0x200020C")]
public class SyncedHand : Hands.Hand
{
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB68E70", Offset = "0xB68E70")]
	private NetworkHand <NetworkHand>k__BackingField;

	[Token(Token = "0x17000172")]
	public NetworkHand NetworkHand
	{
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x116E878", Offset = "0x116E878", VA = "0x116E878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D1B8", Offset = "0xB7D1B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x116E880", Offset = "0x116E880", VA = "0x116E880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D1C8", Offset = "0xB7D1C8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x116E888", Offset = "0x116E888", VA = "0x116E888", Slot = "28")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x116E8F0", Offset = "0x116E8F0", VA = "0x116E8F0", Slot = "37")]
	public override bool ReleaseCurrentlyGrabbedObject(bool forceRelease = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x116E8F8", Offset = "0x116E8F8", VA = "0x116E8F8", Slot = "36")]
	public override void GrabObject(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x116E99C", Offset = "0x116E99C", VA = "0x116E99C", Slot = "31")]
	protected override void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x116E9A0", Offset = "0x116E9A0", VA = "0x116E9A0", Slot = "32")]
	protected override void SetStashIfPossible(GameObject stashGO, bool isFree, bool active = true)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x116E9A4", Offset = "0x116E9A4", VA = "0x116E9A4", Slot = "39")]
	public override void RemoveCurrentlyGrabbedObject()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x116E9A8", Offset = "0x116E9A8", VA = "0x116E9A8", Slot = "34")]
	protected override void KillObjectPullIfAny()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x116E9AC", Offset = "0x116E9AC", VA = "0x116E9AC", Slot = "30")]
	public override Grabbable GetGrabbableFromHit(RaycastHit hit)
	{
		return null;
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x116E9E0", Offset = "0x116E9E0", VA = "0x116E9E0")]
	public SyncedHand()
	{
	}
}
[Token(Token = "0x200020D")]
public class PlayerBoard : MonoBehaviour
{
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B7E8", Offset = "0xB5B7E8")]
	private sealed class <UpdateListCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerBoard <>4__this;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0xFC2950", Offset = "0xFC2950", VA = "0xFC2950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xFC2998", Offset = "0xFC2998", VA = "0xFC2998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xFC2870", Offset = "0xFC2870", VA = "0xFC2870")]
		[DebuggerHidden]
		public <UpdateListCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xFC289C", Offset = "0xFC289C", VA = "0xFC289C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xFC28A0", Offset = "0xFC28A0", VA = "0xFC28A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xFC2958", Offset = "0xFC2958", VA = "0xFC2958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_content;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerBoardItem m_playerBoardItem;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UILayoutEnabler m_uiLayoutEnabler;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Dictionary<PlayerRef, PlayerBoardItem> m_players;

	[Token(Token = "0x17000173")]
	public int PlayerCount
	{
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xF575B0", Offset = "0xF575B0", VA = "0xF575B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xF57604", Offset = "0xF57604", VA = "0xF57604")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xF5779C", Offset = "0xF5779C", VA = "0xF5779C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xF57900", Offset = "0xF57900", VA = "0xF57900")]
	private void OnStartGame(bool success)
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xF57904", Offset = "0xF57904", VA = "0xF57904")]
	private void OnPlayerChanged(NetworkRunner runner, PlayerRef player)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xF57764", Offset = "0xF57764", VA = "0xF57764")]
	private void Restart()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xF57908", Offset = "0xF57908", VA = "0xF57908")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7D1D8", Offset = "0xB7D1D8")]
	private IEnumerator UpdateListCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xF57980", Offset = "0xF57980", VA = "0xF57980")]
	private void UpdateList()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xF58978", Offset = "0xF58978", VA = "0xF58978")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xF58AA0", Offset = "0xF58AA0", VA = "0xF58AA0")]
	public PlayerBoard()
	{
	}
}
[Token(Token = "0x200020F")]
public class PlayerBoardItem : MonoBehaviour
{
	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68E90", Offset = "0xB68E90")]
	private TextMeshProUGUI m_playerNameText;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68EDC", Offset = "0xB68EDC")]
	[SerializeField]
	private Toggle m_muteToggle;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite m_localPlayerIconMuted;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite m_localPlayerIconNotMuted;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite m_proxieIconMuted;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite m_proxieIconNotMuted;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Image m_mutedOnImage;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image m_mutedOffImage;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB68F88", Offset = "0xB68F88")]
	[SerializeField]
	private Toggle m_ignoreToggle;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image m_ignoreOnImage;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image m_ignoreOffImage;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PlayerRef m_playerRef;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NetworkPlayer m_networkPlayer;

	[Token(Token = "0x14000033")]
	private static event Action<PlayerBoardItem, PlayerRef, bool> OnMuteChanged
	{
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xF58B24", Offset = "0xF58B24", VA = "0xF58B24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D288", Offset = "0xB7D288")]
		add
		{
		}
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xF58BE0", Offset = "0xF58BE0", VA = "0xF58BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D298", Offset = "0xB7D298")]
		remove
		{
		}
	}

	[Token(Token = "0x14000034")]
	private static event Action<PlayerBoardItem, PlayerRef, bool> OnIgnoreChanged
	{
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xF58C9C", Offset = "0xF58C9C", VA = "0xF58C9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D2A8", Offset = "0xB7D2A8")]
		add
		{
		}
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xF58D5C", Offset = "0xF58D5C", VA = "0xF58D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D2B8", Offset = "0xB7D2B8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xF5863C", Offset = "0xF5863C", VA = "0xF5863C")]
	public void Initialise(NetworkPlayer networkPlayer)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xF584F0", Offset = "0xF584F0", VA = "0xF584F0")]
	public void Uninitialize()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xF58E1C", Offset = "0xF58E1C", VA = "0xF58E1C")]
	private void MutedChanged(Dictionary<PlayerRef, bool> players)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xF59050", Offset = "0xF59050", VA = "0xF59050")]
	private void IgnoreChanged(Dictionary<PlayerRef, bool> players)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xF59460", Offset = "0xF59460", VA = "0xF59460")]
	public void OnMuteToggled(bool isMuted)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xF59604", Offset = "0xF59604", VA = "0xF59604")]
	public void OnIgnoreToggled(bool isIgnored)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xF59674", Offset = "0xF59674", VA = "0xF59674")]
	public PlayerBoardItem()
	{
	}
}
[Token(Token = "0x2000210")]
public class TempSpawner : MonoBehaviour
{
	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NetworkPrefabRef m_networkPrefab;

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x15D2724", Offset = "0x15D2724", VA = "0x15D2724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x15D27E0", Offset = "0x15D27E0", VA = "0x15D27E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x15D289C", Offset = "0x15D289C", VA = "0x15D289C")]
	private void Spawn(NetworkRunner runner, PlayerRef playerRef)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x15D2ABC", Offset = "0x15D2ABC", VA = "0x15D2ABC")]
	public TempSpawner()
	{
	}
}
[Token(Token = "0x2000211")]
public class ObjectDestroyWhenNoChildren : MonoBehaviour
{
	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x184181C", Offset = "0x184181C", VA = "0x184181C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x18418E8", Offset = "0x18418E8", VA = "0x18418E8")]
	public ObjectDestroyWhenNoChildren()
	{
	}
}
[Token(Token = "0x2000212")]
public class RecycleParticleOnFinish : MonoBehaviour
{
	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PooledObject m_pooledObject;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<ParticleSystem> m_pfxList;

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x1007A04", Offset = "0x1007A04", VA = "0x1007A04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x1007A54", Offset = "0x1007A54", VA = "0x1007A54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x1007B48", Offset = "0x1007B48", VA = "0x1007B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x1007C54", Offset = "0x1007C54", VA = "0x1007C54")]
	private void Kill()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x1007D24", Offset = "0x1007D24", VA = "0x1007D24")]
	public RecycleParticleOnFinish()
	{
	}
}
[Token(Token = "0x2000213")]
public class ObjectShaker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000214")]
	private class GroupShaker
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Transform> m_targets;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] m_initialPositions;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] m_initialRotations;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Tweener m_positionTweener;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Tweener m_rotationTweener;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_targetCount;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_shakeVector;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_rotationVector;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69104", Offset = "0xB69104")]
		private bool <IsInUse>k__BackingField;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool m_hasStarted;

		[Token(Token = "0x17000176")]
		public bool IsInUse
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0xFB7BF8", Offset = "0xFB7BF8", VA = "0xFB7BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D2C8", Offset = "0xB7D2C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0xFB7C00", Offset = "0xFB7C00", VA = "0xFB7C00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D2D8", Offset = "0xB7D2D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xFB7C0C", Offset = "0xFB7C0C", VA = "0xFB7C0C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xFB7CC8", Offset = "0xFB7CC8", VA = "0xFB7CC8")]
		public void Shake(float duration, Vector3 positionStrength, Vector3 rotationStrength, int positionVibration, int rotationVibration, float positionRandomness, float rotationRandomness)
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xFB8134", Offset = "0xFB8134", VA = "0xFB8134")]
		public void SetPause(bool isPaused)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xFB81E8", Offset = "0xFB81E8", VA = "0xFB81E8")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xFB7FE8", Offset = "0xFB7FE8", VA = "0xFB7FE8")]
		private void SetInitialValues()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xFB8220", Offset = "0xFB8220", VA = "0xFB8220")]
		private void UpdatePositions()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xFB8318", Offset = "0xFB8318", VA = "0xFB8318")]
		private void UpdateRotations()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xFB841C", Offset = "0xFB841C", VA = "0xFB841C")]
		public GroupShaker()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xFB84A4", Offset = "0xFB84A4", VA = "0xFB84A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D2E8", Offset = "0xB7D2E8")]
		private Vector3 <Shake>b__14_0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xFB84B0", Offset = "0xFB84B0", VA = "0xFB84B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D2F8", Offset = "0xB7D2F8")]
		private void <Shake>b__14_1(Vector3 x)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xFB84BC", Offset = "0xFB84BC", VA = "0xFB84BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D308", Offset = "0xB7D308")]
		private Vector3 <Shake>b__14_2()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xFB84C8", Offset = "0xFB84C8", VA = "0xFB84C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D318", Offset = "0xB7D318")]
		private void <Shake>b__14_3(Vector3 x)
		{
		}
	}

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_shakeChildren;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int m_groupShakerAmount;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform[] m_objectsToShake;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RangedVector3 m_strength;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RangedVector3 m_rotationStrength;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private RangedInt m_positionVibration;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private RangedFloat m_positionRandomness;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private RangedInt m_rotationVibration;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private RangedFloat m_rotationRandomness;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private RangedFloat m_shakeStagesPercentageRange;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ISound m_shakeSound;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private SingleAudioSource m_shakeSource;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private RangedFloat m_shakeVolumeRange;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Ease m_stageRampEase;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SoundPlaybackContext m_shakeSoundPlaybackContext;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool m_isPaused;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<Transform> m_activeObjectsToShake;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AudioSource m_audioSource;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform m_cachedTransform;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int m_objectToShakeCount;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool m_isInitialized;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GroupShaker[] m_groupShakers;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3[] m_initialPositions;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3[] m_initialRotations;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int[] m_randomTweenIDs;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool m_useAllShakers;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool m_performingShake;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float m_duration;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float m_stageDuration;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float m_currentStageTimer;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float m_breakDuration;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float m_currentBreakTimer;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float m_stagePercent;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float m_shakePercent;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool m_doPauseOnLastStage;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool m_shouldIncrementStage;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	private bool m_stageTimerInProgress;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
	private bool m_breakTimerInProgress;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool m_stageComplete;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int m_stages;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int m_currentStage;

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x1846110", Offset = "0x1846110", VA = "0x1846110")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x18465D0", Offset = "0x18465D0", VA = "0x18465D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x18466E4", Offset = "0x18466E4", VA = "0x18466E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x1846114", Offset = "0x1846114", VA = "0x1846114")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x1846A9C", Offset = "0x1846A9C", VA = "0x1846A9C")]
	private void OnPaused(bool paused)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x1846B98", Offset = "0x1846B98", VA = "0x1846B98")]
	public void Shake(float duration, float breakTime, bool doPauseOnLastStage, int stages = 1)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x18466F4", Offset = "0x18466F4", VA = "0x18466F4")]
	private void PerformShake()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x1846C78", Offset = "0x1846C78", VA = "0x1846C78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x1846CBC", Offset = "0x1846CBC", VA = "0x1846CBC")]
	public ObjectShaker()
	{
	}
}
[Token(Token = "0x2000215")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B7F8", Offset = "0xB5B7F8")]
public class ObjectStash : MonoBehaviour
{
	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69114", Offset = "0xB69114")]
	public bool m_hideOnStashed;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_parentOnStashed;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_handBasedStash;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool m_prioritiseGrabs;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_capacity;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected readonly Dictionary<UnityEngine.Object, List<Grabbable>> m_stashedItems;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6914C", Offset = "0xB6914C")]
	public ISound m_defaultStashSound;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ISound m_defaultUnstashSound;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Grabbable> OnObjectStashed;

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x1846EC4", Offset = "0x1846EC4", VA = "0x1846EC4")]
	public bool IsFull(Hands.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x184707C", Offset = "0x184707C", VA = "0x184707C")]
	public bool HasItems(Hands.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x18470E4", Offset = "0x18470E4", VA = "0x18470E4", Slot = "4")]
	public virtual bool Stash(Grabbable grabbable, [Optional] Hands.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x1847300", Offset = "0x1847300", VA = "0x1847300", Slot = "5")]
	public virtual Grabbable Unstash([Optional] Grabbable grabbable, [Optional] Hands.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x18475BC", Offset = "0x18475BC", VA = "0x18475BC", Slot = "6")]
	public virtual bool CanStash(Hands.Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x1847664", Offset = "0x1847664", VA = "0x1847664", Slot = "7")]
	protected virtual void ProcessNewStashItem(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x1846F30", Offset = "0x1846F30", VA = "0x1846F30")]
	protected List<Grabbable> GetList(Hands.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x18476E0", Offset = "0x18476E0", VA = "0x18476E0")]
	public ObjectStash()
	{
	}
}
[Token(Token = "0x2000216")]
public class OffScreenIndicators : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000217")]
	private struct Indicator
	{
		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform m_transform;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SpriteRenderer m_renderer;
	}

	[Token(Token = "0x2000218")]
	public enum IndicatorMode
	{
		[Token(Token = "0x4000E41")]
		Off,
		[Token(Token = "0x4000E42")]
		ShowOnlyBombs,
		[Token(Token = "0x4000E43")]
		ShowBombsAndFruits,
		[Token(Token = "0x4000E44")]
		ShowBombsAndPowerFruit,
		[Token(Token = "0x4000E45")]
		ShowOnlyEnemyBasket
	}

	[Token(Token = "0x2000219")]
	private enum TypeOfObjectBeingTracked
	{
		[Token(Token = "0x4000E47")]
		Bomb,
		[Token(Token = "0x4000E48")]
		Fruit,
		[Token(Token = "0x4000E49")]
		PowerFruit,
		[Token(Token = "0x4000E4A")]
		BasketEnemy
	}

	[Token(Token = "0x200021A")]
	public enum PlayerIndicatorPreference
	{
		[Token(Token = "0x4000E4C")]
		Default,
		[Token(Token = "0x4000E4D")]
		ShowAll,
		[Token(Token = "0x4000E4E")]
		Off
	}

	[Serializable]
	[Token(Token = "0x200021B")]
	private struct ObjectInfo
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform m_transform;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TypeOfObjectBeingTracked m_objectType;

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xFB8604", Offset = "0xFB8604", VA = "0xFB8604")]
		public ObjectInfo(Transform transform, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
		{
		}
	}

	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B858", Offset = "0xB5B858")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform sliceObject;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xFB84D4", Offset = "0xFB84D4", VA = "0xFB84D4")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xFB84DC", Offset = "0xFB84DC", VA = "0xFB84DC")]
		internal bool <RemoveTransformFromTrackingList>b__0(ObjectInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B868", Offset = "0xB5B868")]
	private sealed class <>c__DisplayClass48_0
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BasketEnemyObject basketEnemy;

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xFB856C", Offset = "0xFB856C", VA = "0xFB856C")]
		public <>c__DisplayClass48_0()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xFB8574", Offset = "0xFB8574", VA = "0xFB8574")]
		internal bool <RemoveBasketEnemyToList>b__0(ObjectInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69184", Offset = "0xB69184")]
	[SerializeField]
	private IndicatorMode m_indicatorMode;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB691D0", Offset = "0xB691D0")]
	[SerializeField]
	private GameObject m_indicator;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6921C", Offset = "0xB6921C")]
	[SerializeField]
	private int m_amountOfIndicatorToCreate;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB69268", Offset = "0xB69268")]
	[SerializeField]
	private RectTransform m_parentOfIndicator;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimationCurve m_indicatorScaling;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB692C4", Offset = "0xB692C4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB692C4", Offset = "0xB692C4")]
	[SerializeField]
	private float m_indicatorPositionOnScreen;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private bool m_usingObjectDistanceFromPlayer;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB69338", Offset = "0xB69338")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB69338", Offset = "0xB69338")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB69338", Offset = "0xB69338")]
	public float m_percentageOfScreenViewsAsInsideX;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB693B0", Offset = "0xB693B0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB693B0", Offset = "0xB693B0")]
	public float m_percentageOfScreenViewsAsInsideY;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB69404", Offset = "0xB69404")]
	public float m_cutOffPointOfIndicatorsFromPlayer;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6941C", Offset = "0xB6941C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6941C", Offset = "0xB6941C")]
	public float m_cutOffPointOfIndicatorsForX;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB69478", Offset = "0xB69478")]
	public float m_cutOffPointOfIndicatorsForY;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69498", Offset = "0xB69498")]
	[SerializeField]
	private Color m_colorForBombs;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private Color m_colorForFruit;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private Color m_colorForPowerFruit;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private Color m_colorForBasketEnemy;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69514", Offset = "0xB69514")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB69514", Offset = "0xB69514")]
	[SerializeField]
	private Camera m_camera;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Vector3 m_localCameraPosition;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69594", Offset = "0xB69594")]
	private static OffScreenIndicators <Instance>k__BackingField;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private PlayerIndicatorPreference m_playerIndicatorPreference;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Indicator[] m_indicators;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<ObjectInfo> m_activeObjectsToTrack;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float m_minimumForBeingInsideScreenX;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float m_minimumForBeingInsideScreenY;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector2 m_canvasSize;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform m_playerHead;

	[Token(Token = "0x17000177")]
	public static OffScreenIndicators Instance
	{
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1847774", Offset = "0x1847774", VA = "0x1847774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D328", Offset = "0xB7D328")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x18477C0", Offset = "0x18477C0", VA = "0x18477C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D338", Offset = "0xB7D338")]
		private set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public float ScreenWidth
	{
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1847814", Offset = "0x1847814", VA = "0x1847814")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000179")]
	public float ScreenHeight
	{
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1847830", Offset = "0x1847830", VA = "0x1847830")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x184784C", Offset = "0x184784C", VA = "0x184784C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x184806C", Offset = "0x184806C", VA = "0x184806C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x1848438", Offset = "0x1848438", VA = "0x1848438")]
	private void AddFruitToTrackingList(Fruit fruit)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x18484D0", Offset = "0x18484D0", VA = "0x18484D0")]
	private void AddTransformToTrackingList(Transform transformToAdd, TypeOfObjectBeingTracked objectType)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x1848560", Offset = "0x1848560", VA = "0x1848560")]
	private void RemoveFruitFromTrackingList(Fruit fruit)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x18486C8", Offset = "0x18486C8", VA = "0x18486C8")]
	private void RemoveFruitFromTrackingList(Fruit fruit, FruitHalf half1, FruitHalf half2, Fruit.FruitSlicedEvent sliceEvent)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x1848700", Offset = "0x1848700", VA = "0x1848700")]
	private void RemoveBombFromTrackingList(Bomb bomb)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x1848738", Offset = "0x1848738", VA = "0x1848738")]
	private void RemoveSlicedObjectFromTrackingList(SliceableObjectBase sliceObject)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x1848598", Offset = "0x1848598", VA = "0x1848598")]
	private void RemoveTransformFromTrackingList(Transform sliceObject)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x1848770", Offset = "0x1848770", VA = "0x1848770")]
	private void AddBasketEnemyToList(BasketEnemyObject basketEnemy)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x184880C", Offset = "0x184880C", VA = "0x184880C")]
	private void RemoveBasketEnemyToList(BasketEnemyObject basketEnemy)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x184893C", Offset = "0x184893C", VA = "0x184893C")]
	private void ApplyGameRulesIndicatorMode(object data)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x1848B44", Offset = "0x1848B44", VA = "0x1848B44")]
	private void ClearAllObjects(object data)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x1848A2C", Offset = "0x1848A2C", VA = "0x1848A2C")]
	private void ChangeIndicatorMode(IndicatorMode indicatorMode)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x1848BF0", Offset = "0x1848BF0", VA = "0x1848BF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1848C14", Offset = "0x1848C14", VA = "0x1848C14")]
	private void CreateIndicators()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1849438", Offset = "0x1849438", VA = "0x1849438")]
	private void SetUpOffScreenIndicator(Vector3 screenPos, Vector3 worldPosition, int i, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x1849D50", Offset = "0x1849D50", VA = "0x1849D50")]
	private void OnSettingsDataChanged(object dataObject)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1849DE4", Offset = "0x1849DE4", VA = "0x1849DE4")]
	private void SetPlayerIndicatorPreference(int playerIndicatorPreference)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x184997C", Offset = "0x184997C", VA = "0x184997C")]
	private void ScaleIndicatorBasedOnPlayerDistance(int i, Vector3 worldPosition, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1849B18", Offset = "0x1849B18", VA = "0x1849B18")]
	private void ScaleIndicatorBasedOnScreenDistance(Vector3 screenPosition, int i, TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x184938C", Offset = "0x184938C", VA = "0x184938C")]
	private bool IsOnScreen(Vector3 screenPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x184904C", Offset = "0x184904C", VA = "0x184904C")]
	private bool NeedToShowIndicatorForThisSliceObject(int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x18496AC", Offset = "0x18496AC", VA = "0x18496AC")]
	private Color ChooseIndicatorColor(TypeOfObjectBeingTracked typeOfObjectBeingTracked)
	{
		return default(Color);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x18484AC", Offset = "0x18484AC", VA = "0x18484AC")]
	private bool IsPowerFruit(Fruit fruit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1847F24", Offset = "0x1847F24", VA = "0x1847F24")]
	private void SetupInstance()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x1849DEC", Offset = "0x1849DEC", VA = "0x1849DEC")]
	private string TrackedObjectsToString()
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x1849F98", Offset = "0x1849F98", VA = "0x1849F98")]
	public void DebugUpdateCutOffPointX(float newVal)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1849FA0", Offset = "0x1849FA0", VA = "0x1849FA0")]
	public void DebugUpdateCutOffPointY(float newVal)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x1849FA8", Offset = "0x1849FA8", VA = "0x1849FA8")]
	public void DebugUpdateCutOffPointPlayerDist(float newVal)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x1849FB0", Offset = "0x1849FB0", VA = "0x1849FB0")]
	public float DebugUpdateScreenPercentageAsInside(float newVal)
	{
		return default(float);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x1849FC4", Offset = "0x1849FC4", VA = "0x1849FC4")]
	public void DebugUpdateCanvasZPos(float newVal)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x184A000", Offset = "0x184A000", VA = "0x184A000")]
	public string DebugCycleThroughCameras()
	{
		return null;
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x184A02C", Offset = "0x184A02C", VA = "0x184A02C")]
	public Vector3 DebugGrabFirstTrackedObjectScreenPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x184A0BC", Offset = "0x184A0BC", VA = "0x184A0BC")]
	public Vector2 DebugGrabFirstTrackedObjectViewportPos()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x184A14C", Offset = "0x184A14C", VA = "0x184A14C")]
	public bool DebugIsFirstTrackedObjectOnScreen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x184A170", Offset = "0x184A170", VA = "0x184A170")]
	public float[] DebugGrabScreenLimits()
	{
		return null;
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x184A268", Offset = "0x184A268", VA = "0x184A268")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x184A3B8", Offset = "0x184A3B8", VA = "0x184A3B8")]
	public OffScreenIndicators()
	{
	}
}
[Token(Token = "0x200021E")]
public enum LISTDIRECTION
{
	[Token(Token = "0x4000E54")]
	HORIZONTAL,
	[Token(Token = "0x4000E55")]
	VERTICAL
}
[Token(Token = "0x200021F")]
public class PadOptimizedScrollList : MonoBehaviour
{
	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform Container;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mask Mask;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform Prefab;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int Num;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Spacing;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LISTDIRECTION Direction;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool Optimize;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RectTransform maskRT;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int numVisible;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int numBuffer;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float containerHalfSize;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float prefabSize;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, int[]> itemDict;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RectTransform> listItemRect;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<PadOptimizedScrollListItem> listItems;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int numItems;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 startPos;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 offsetVec;

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x13DB8E4", Offset = "0x13DB8E4", VA = "0x13DB8E4")]
	public void Intialize(int numberOfObjects, RectTransform prefab)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x13DBE5C", Offset = "0x13DBE5C", VA = "0x13DBE5C")]
	public void ReorderItemsByPos(float normPos)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x13DC030", Offset = "0x13DC030", VA = "0x13DC030")]
	private void moveItemByIndex(RectTransform item, int index)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x13DC110", Offset = "0x13DC110", VA = "0x13DC110")]
	public PadOptimizedScrollList()
	{
	}
}
[Token(Token = "0x2000220")]
public class PadOptimizedScrollListItem : MonoBehaviour
{
	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x13DC23C", Offset = "0x13DC23C", VA = "0x13DC23C", Slot = "4")]
	public virtual void DoOptimizedInit(int index)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x13DC240", Offset = "0x13DC240", VA = "0x13DC240", Slot = "5")]
	public virtual void UpdateContent()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x13DC244", Offset = "0x13DC244", VA = "0x13DC244")]
	public PadOptimizedScrollListItem()
	{
	}
}
[Token(Token = "0x2000221")]
public class PadStateListener : MonoBehaviour
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_listenForSpecificPanel;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_listenForPanelClose;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PadUIController.PanelType m_panelType;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent<bool> m_onPanelSwitched;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent m_onNotificationUpdated;

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x13DD230", Offset = "0x13DD230", VA = "0x13DD230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x13DD534", Offset = "0x13DD534", VA = "0x13DD534")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x13DD838", Offset = "0x13DD838", VA = "0x13DD838")]
	private void OnPanelSwitched(PadUIController.PanelType panel, PadPullout pullout)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x13DD8D0", Offset = "0x13DD8D0", VA = "0x13DD8D0")]
	private void OnNotificationUpdated(PadUIController.PanelType panel, bool notificationOn)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x13DD8F8", Offset = "0x13DD8F8", VA = "0x13DD8F8")]
	public PadStateListener()
	{
	}
}
[Token(Token = "0x2000222")]
public class ParticlePauser : MonoBehaviour
{
	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_particleHolder;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] m_particles;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystemRenderer[] m_renderers;

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xF4AD5C", Offset = "0xF4AD5C", VA = "0xF4AD5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xF4AF54", Offset = "0xF4AF54", VA = "0xF4AF54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xF4B090", Offset = "0xF4B090", VA = "0xF4B090")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xF4B1CC", Offset = "0xF4B1CC", VA = "0xF4B1CC")]
	public ParticlePauser()
	{
	}
}
[Token(Token = "0x2000223")]
public static class ParticleArray
{
	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ParticleSystem.Particle[] s_bigParticleArray;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x13E4564", Offset = "0x13E4564", VA = "0x13E4564")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB7D348", Offset = "0xB7D348")]
	public static void Init()
	{
	}
}
[Token(Token = "0x2000224")]
[ExecuteInEditMode]
public class ParticleLifeShortener : MonoBehaviour
{
	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem m_particleSystem;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_newLifeTime;

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x13E5D38", Offset = "0x13E5D38", VA = "0x13E5D38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x13E5FC8", Offset = "0x13E5FC8", VA = "0x13E5FC8")]
	public ParticleLifeShortener()
	{
	}
}
[Token(Token = "0x2000225")]
[ExecuteInEditMode]
public class ParticleMagnet : MonoBehaviour
{
	[Token(Token = "0x2000226")]
	public delegate void OnParticleKilledDelegate();

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem m_particleSystem;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_force;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool m_additiveForce;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_killParticlesWithinRange;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_killParticlesMovingFurtherAway;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RangedFloat m_delayRange;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_particleCount;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_killParticleRangeSquared;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ParticleSystem> m_particleSystems;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<uint, float> m_particleDelayTimers;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<uint, float> m_particlePreviousMagSqr;

	[Token(Token = "0x14000035")]
	public event OnParticleKilledDelegate OnParticleKilled
	{
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x13E5FD8", Offset = "0x13E5FD8", VA = "0x13E5FD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D358", Offset = "0xB7D358")]
		add
		{
		}
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x13E6078", Offset = "0x13E6078", VA = "0x13E6078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D368", Offset = "0xB7D368")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x13E6118", Offset = "0x13E6118", VA = "0x13E6118")]
	public void AddParticleSystem(ParticleSystem particles)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x13E61CC", Offset = "0x13E61CC", VA = "0x13E61CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x13E61DC", Offset = "0x13E61DC", VA = "0x13E61DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x13E63DC", Offset = "0x13E63DC", VA = "0x13E63DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x13E6B00", Offset = "0x13E6B00", VA = "0x13E6B00")]
	public ParticleMagnet()
	{
	}
}
[Token(Token = "0x2000227")]
public class ParticleMagnetToAttract : MonoBehaviour
{
	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xF4A4C8", Offset = "0xF4A4C8", VA = "0xF4A4C8")]
	public ParticleMagnetToAttract()
	{
	}
}
[Token(Token = "0x2000228")]
[ExecuteInEditMode]
public class ParticleRotateToDirection : MonoBehaviour
{
	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem m_particleSystem;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_particleCount;

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xF4B1D4", Offset = "0xF4B1D4", VA = "0xF4B1D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xF4B36C", Offset = "0xF4B36C", VA = "0xF4B36C")]
	public ParticleRotateToDirection()
	{
	}
}
[Token(Token = "0x2000229")]
[ExecuteInEditMode]
public class ParticleSimulationSpeedLerp : MonoBehaviour
{
	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_speedStart;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_speedEnd;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_lerpTime;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem m_particleSystem;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_timer;

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xF4B374", Offset = "0xF4B374", VA = "0xF4B374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xF4B450", Offset = "0xF4B450", VA = "0xF4B450")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xF4B4FC", Offset = "0xF4B4FC", VA = "0xF4B4FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xF4B588", Offset = "0xF4B588", VA = "0xF4B588")]
	public ParticleSimulationSpeedLerp()
	{
	}
}
[Token(Token = "0x200022A")]
public class ParticleSystemDisableGameObjectWhenFinished : MonoBehaviour
{
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B8B8", Offset = "0xB5B8B8")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystemDisableGameObjectWhenFinished <>4__this;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ParticleSystem> <pfxList>5__2;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xFBB09C", Offset = "0xFBB09C", VA = "0xFBB09C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xFBB0E4", Offset = "0xFBB0E4", VA = "0xFBB0E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xFBACCC", Offset = "0xFBACCC", VA = "0xFBACCC")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xFBACF8", Offset = "0xFBACF8", VA = "0xFBACF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xFBACFC", Offset = "0xFBACFC", VA = "0xFBACFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xFBB0A4", Offset = "0xFBB0A4", VA = "0xFBB0A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_stop;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_delay;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_destroyOnDisable;

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xF4B590", Offset = "0xF4B590", VA = "0xF4B590")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7D378", Offset = "0xB7D378")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xF4B608", Offset = "0xF4B608", VA = "0xF4B608")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xF4B640", Offset = "0xF4B640", VA = "0xF4B640")]
	public ParticleSystemDisableGameObjectWhenFinished()
	{
	}
}
[Token(Token = "0x200022C")]
public class ParticleSystemScaler : MonoBehaviour
{
	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem ThisSystem;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.MainModule ThisMain;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.NoiseModule ThisNoise;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.LimitVelocityOverLifetimeModule ThisLimitVelocity;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float CurrentScale;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float InitialGravity;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float InitialNoiseStrength;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float InitialNoiseFrequency;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float InitialMaxVelocity;

	[Token(Token = "0x4000E96")]
	private const float ScaleDelta = 0.001f;

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xF4B650", Offset = "0xF4B650", VA = "0xF4B650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xF4B690", Offset = "0xF4B690", VA = "0xF4B690")]
	private void Initialise()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xF4B7EC", Offset = "0xF4B7EC", VA = "0xF4B7EC")]
	private void ResizeSystem(float NewScale)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xF4B8E4", Offset = "0xF4B8E4", VA = "0xF4B8E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xF4B958", Offset = "0xF4B958", VA = "0xF4B958")]
	public ParticleSystemScaler()
	{
	}
}
[Token(Token = "0x200022D")]
public class ParticleSystemStopAndDestroyWhenFinished : MonoBehaviour
{
	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B8C8", Offset = "0xB5B8C8")]
	private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystemStopAndDestroyWhenFinished <>4__this;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ParticleSystem> <pfxList>5__2;

		[Token(Token = "0x1700017C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xFBB4AC", Offset = "0xFBB4AC", VA = "0xFBB4AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xFBB4F4", Offset = "0xFBB4F4", VA = "0xFBB4F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xFBB0EC", Offset = "0xFBB0EC", VA = "0xFBB0EC")]
		[DebuggerHidden]
		public <Start>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xFBB118", Offset = "0xFBB118", VA = "0xFBB118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xFBB11C", Offset = "0xFBB11C", VA = "0xFBB11C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xFBB4B4", Offset = "0xFBB4B4", VA = "0xFBB4B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_stop;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_delay;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_destroyOnDisable;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PooledObject m_pooledObject;

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xF4B960", Offset = "0xF4B960", VA = "0xF4B960")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xF4B9B0", Offset = "0xF4B9B0", VA = "0xF4B9B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7D428", Offset = "0xB7D428")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xF4BA28", Offset = "0xF4BA28", VA = "0xF4BA28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xF4BA38", Offset = "0xF4BA38", VA = "0xF4BA38")]
	private void Kill()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xF4BB04", Offset = "0xF4BB04", VA = "0xF4BB04")]
	public ParticleSystemStopAndDestroyWhenFinished()
	{
	}
}
[Token(Token = "0x200022F")]
public class UnparentAndStopParticlesOnDestroy : MonoBehaviour
{
	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x1229EAC", Offset = "0x1229EAC", VA = "0x1229EAC")]
	private void AboutToDestroy()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x1229F30", Offset = "0x1229F30", VA = "0x1229F30")]
	public UnparentAndStopParticlesOnDestroy()
	{
	}
}
[Token(Token = "0x2000230")]
public class WaitForParticlesBeforeRecycle : MonoBehaviour
{
	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem m_particleSystem;

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x1236730", Offset = "0x1236730", VA = "0x1236730")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x123678C", Offset = "0x123678C", VA = "0x123678C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x1236790", Offset = "0x1236790", VA = "0x1236790")]
	public void StartEmitting()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x1236824", Offset = "0x1236824", VA = "0x1236824")]
	public void StopEmitting()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x12368BC", Offset = "0x12368BC", VA = "0x12368BC")]
	public bool Waiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x1236954", Offset = "0x1236954", VA = "0x1236954")]
	public WaitForParticlesBeforeRecycle()
	{
	}
}
[Token(Token = "0x2000231")]
public class PauseAnimation : MonoBehaviour
{
	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_animator;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animation m_animation;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_playBackTimeWhenPaused;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameEvent.EventTriggered m_paused;

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xF4E824", Offset = "0xF4E824", VA = "0xF4E824")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xF4E978", Offset = "0xF4E978", VA = "0xF4E978")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xF4E9F4", Offset = "0xF4E9F4", VA = "0xF4E9F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xF4EA70", Offset = "0xF4EA70", VA = "0xF4EA70")]
	private void SetPaused(GameEvent gameEvent)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xF4EBBC", Offset = "0xF4EBBC", VA = "0xF4EBBC")]
	public PauseAnimation()
	{
	}
}
[Token(Token = "0x2000232")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B8D8", Offset = "0xB5B8D8")]
public class PauseParticleSystem : MonoBehaviour
{
	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_wasPlaying;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem m_particleSystem;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameEvent.EventTriggered m_paused;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xF4ECD0", Offset = "0xF4ECD0", VA = "0xF4ECD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xF4ED74", Offset = "0xF4ED74", VA = "0xF4ED74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xF4EDF0", Offset = "0xF4EDF0", VA = "0xF4EDF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xF4EE6C", Offset = "0xF4EE6C", VA = "0xF4EE6C")]
	private void SetPaused(GameEvent gameEvent)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xF4EF78", Offset = "0xF4EF78", VA = "0xF4EF78")]
	public PauseParticleSystem()
	{
	}
}
[Token(Token = "0x2000233")]
public class PicoControls : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x2000234")]
	public struct GeneralActions
	{
		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PicoControls m_Wrapper;

		[Token(Token = "0x17000185")]
		public InputAction TriggerPressLeft
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xFBBBE0", Offset = "0xFBBBE0", VA = "0xFBBBE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public InputAction TriggerPressRight
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xFBBBFC", Offset = "0xFBBBFC", VA = "0xFBBBFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public InputAction GripPressLeft
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xFBBC18", Offset = "0xFBBC18", VA = "0xFBBC18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public InputAction GripPressRight
		{
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0xFBBC34", Offset = "0xFBBC34", VA = "0xFBBC34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public InputAction PositionLeft
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0xFBBC50", Offset = "0xFBBC50", VA = "0xFBBC50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		public InputAction PositionRight
		{
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0xFBBC6C", Offset = "0xFBBC6C", VA = "0xFBBC6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public InputAction RotationLeft
		{
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0xFBBC88", Offset = "0xFBBC88", VA = "0xFBBC88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		public InputAction RotationRight
		{
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0xFBBCA4", Offset = "0xFBBCA4", VA = "0xFBBCA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018D")]
		public InputAction SettingsLeft
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xFBBCC0", Offset = "0xFBBCC0", VA = "0xFBBCC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		public InputAction SettingsRight
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xFBBCDC", Offset = "0xFBBCDC", VA = "0xFBBCDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		public InputAction SecondaryLeft
		{
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xFBBCF8", Offset = "0xFBBCF8", VA = "0xFBBCF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public InputAction SecondaryRight
		{
			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0xFBBD14", Offset = "0xFBBD14", VA = "0xFBBD14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public InputAction ThumbstickPressLeft
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0xFBBD30", Offset = "0xFBBD30", VA = "0xFBBD30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public InputAction ThumbstickPressRight
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0xFBBD4C", Offset = "0xFBBD4C", VA = "0xFBBD4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public InputAction ThumbstickAxisLeft
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xFBBD68", Offset = "0xFBBD68", VA = "0xFBBD68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public InputAction ThumbstickAxisRight
		{
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0xFBBD84", Offset = "0xFBBD84", VA = "0xFBBD84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public InputAction TriggerAxisLeft
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0xFBBDA0", Offset = "0xFBBDA0", VA = "0xFBBDA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		public InputAction TriggerAxisRight
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0xFBBDBC", Offset = "0xFBBDBC", VA = "0xFBBDBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		public InputAction GripAxisLeft
		{
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0xFBBDD8", Offset = "0xFBBDD8", VA = "0xFBBDD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		public InputAction GripAxisRight
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0xFBBDF4", Offset = "0xFBBDF4", VA = "0xFBBDF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		public InputAction SettingsAxisLeft
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xFBBE10", Offset = "0xFBBE10", VA = "0xFBBE10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		public InputAction SettingsAxisRight
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0xFBBE2C", Offset = "0xFBBE2C", VA = "0xFBBE2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public InputAction ThumbstickPressAxisLeft
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xFBBE48", Offset = "0xFBBE48", VA = "0xFBBE48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		public InputAction ThumbstickPressAxisRight
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xFBBE64", Offset = "0xFBBE64", VA = "0xFBBE64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public InputAction TrackingStateLeft
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xFBBE80", Offset = "0xFBBE80", VA = "0xFBBE80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		public InputAction TrackingStateRight
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0xFBBE9C", Offset = "0xFBBE9C", VA = "0xFBBE9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		public bool enabled
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xFBBF24", Offset = "0xFBBF24", VA = "0xFBBF24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xFBBBD8", Offset = "0xFBBBD8", VA = "0xFBBBD8")]
		public GeneralActions(PicoControls wrapper)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xFBBEB8", Offset = "0xFBBEB8", VA = "0xFBBEB8")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xFBBED4", Offset = "0xFBBED4", VA = "0xFBBED4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xFBBEFC", Offset = "0xFBBEFC", VA = "0xFBBEFC")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xFBBF4C", Offset = "0xFBBF4C", VA = "0xFBBF4C")]
		public static implicit operator InputActionMap(GeneralActions set)
		{
			return null;
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xFBBF64", Offset = "0xFBBF64", VA = "0xFBBF64")]
		public void SetCallbacks(IGeneralActions instance)
		{
		}
	}

	[Token(Token = "0x2000235")]
	public interface IGeneralActions
	{
		[Token(Token = "0x6000BBB")]
		void OnTriggerPressLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BBC")]
		void OnTriggerPressRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BBD")]
		void OnGripPressLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BBE")]
		void OnGripPressRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BBF")]
		void OnPositionLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC0")]
		void OnPositionRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC1")]
		void OnRotationLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC2")]
		void OnRotationRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC3")]
		void OnSettingsLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC4")]
		void OnSettingsRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC5")]
		void OnSecondaryLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC6")]
		void OnSecondaryRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC7")]
		void OnThumbstickPressLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC8")]
		void OnThumbstickPressRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BC9")]
		void OnThumbstickAxisLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BCA")]
		void OnThumbstickAxisRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BCB")]
		void OnTriggerAxisLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BCC")]
		void OnTriggerAxisRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BCD")]
		void OnGripAxisLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BCE")]
		void OnGripAxisRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BCF")]
		void OnSettingsAxisLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BD0")]
		void OnSettingsAxisRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BD1")]
		void OnThumbstickPressAxisLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BD2")]
		void OnThumbstickPressAxisRight(InputAction.CallbackContext context);

		[Token(Token = "0x6000BD3")]
		void OnTrackingStateLeft(InputAction.CallbackContext context);

		[Token(Token = "0x6000BD4")]
		void OnTrackingStateRight(InputAction.CallbackContext context);
	}

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB695B4", Offset = "0xB695B4")]
	private readonly InputActionAsset <asset>k__BackingField;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_General;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IGeneralActions m_GeneralActionsCallbackInterface;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_General_TriggerPressLeft;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly InputAction m_General_TriggerPressRight;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly InputAction m_General_GripPressLeft;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly InputAction m_General_GripPressRight;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly InputAction m_General_PositionLeft;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly InputAction m_General_PositionRight;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly InputAction m_General_RotationLeft;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly InputAction m_General_RotationRight;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly InputAction m_General_SettingsLeft;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly InputAction m_General_SettingsRight;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly InputAction m_General_SecondaryLeft;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly InputAction m_General_SecondaryRight;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly InputAction m_General_ThumbstickPressLeft;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly InputAction m_General_ThumbstickPressRight;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly InputAction m_General_ThumbstickAxisLeft;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly InputAction m_General_ThumbstickAxisRight;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly InputAction m_General_TriggerAxisLeft;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly InputAction m_General_TriggerAxisRight;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly InputAction m_General_GripAxisLeft;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly InputAction m_General_GripAxisRight;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly InputAction m_General_SettingsAxisLeft;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly InputAction m_General_SettingsAxisRight;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly InputAction m_General_ThumbstickPressAxisLeft;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private readonly InputAction m_General_ThumbstickPressAxisRight;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly InputAction m_General_TrackingStateLeft;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly InputAction m_General_TrackingStateRight;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int m_PicoSchemeIndex;

	[Token(Token = "0x1700017E")]
	public InputActionAsset asset
	{
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xF51428", Offset = "0xF51428", VA = "0xF51428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D4D8", Offset = "0xB7D4D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017F")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xF51BC8", Offset = "0xF51BC8", VA = "0xF51BC8", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xF51BF4", Offset = "0xF51BF4", VA = "0xF51BF4", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000180")]
	public ReadOnlyArray<UnityEngine.InputSystem.InputDevice>? devices
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xF51C4C", Offset = "0xF51C4C", VA = "0xF51C4C", Slot = "9")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xF51C98", Offset = "0xF51C98", VA = "0xF51C98", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xF51CE8", Offset = "0xF51CE8", VA = "0xF51CE8", Slot = "11")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x17000182")]
	public IEnumerable<InputBinding> bindings
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF51D90", Offset = "0xF51D90", VA = "0xF51D90", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000183")]
	public GeneralActions General
	{
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xF51E2C", Offset = "0xF51E2C", VA = "0xF51E2C")]
		get
		{
			return default(GeneralActions);
		}
	}

	[Token(Token = "0x17000184")]
	public InputControlScheme PicoScheme
	{
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xF51E58", Offset = "0xF51E58", VA = "0xF51E58")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xF51430", Offset = "0xF51430", VA = "0xF51430")]
	public PicoControls()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xF51B60", Offset = "0xF51B60", VA = "0xF51B60", Slot = "17")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xF51D04", Offset = "0xF51D04", VA = "0xF51D04", Slot = "12")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xF51D20", Offset = "0xF51D20", VA = "0xF51D20", Slot = "15")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xF51D3C", Offset = "0xF51D3C", VA = "0xF51D3C", Slot = "16")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xF51D58", Offset = "0xF51D58", VA = "0xF51D58", Slot = "13")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xF51D74", Offset = "0xF51D74", VA = "0xF51D74", Slot = "14")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xF51DAC", Offset = "0xF51DAC", VA = "0xF51DAC", Slot = "5")]
	public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
	{
		return null;
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xF51DCC", Offset = "0xF51DCC", VA = "0xF51DCC", Slot = "6")]
	public int FindBinding(InputBinding bindingMask, out InputAction action)
	{
		return default(int);
	}
}
[Token(Token = "0x2000236")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B938", Offset = "0xB5B938")]
public class PlayRandomAnimationTimer : MonoBehaviour
{
	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animation m_animation;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationClip[] m_animationClips;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_waitTimeMin;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_waitTimeMax;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_waitTime;

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xF52288", Offset = "0xF52288", VA = "0xF52288")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xF522D8", Offset = "0xF522D8", VA = "0xF522D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xF523F8", Offset = "0xF523F8", VA = "0xF523F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xF52554", Offset = "0xF52554", VA = "0xF52554")]
	public PlayRandomAnimationTimer()
	{
	}
}
[Token(Token = "0x2000237")]
public class Player : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B998", Offset = "0xB5B998")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__111_0;

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xFC1F90", Offset = "0xFC1F90", VA = "0xFC1F90")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xFC1F98", Offset = "0xFC1F98", VA = "0xFC1F98")]
		internal void <Awake>b__111_0(bool block)
		{
		}
	}

	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B9A8", Offset = "0xB5B9A8")]
	private sealed class <TeleportCoroutine>d__128 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Player <>4__this;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ISound startSound;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeInTime;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public AreaManager.AreaType areaType;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform customLocation;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action onTeleport;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IEnumerator onTeleportCoroutine;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ISound endSound;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SceneConfig.AreaLODData LODData;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float fadeOutTime;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0xFC24E0", Offset = "0xFC24E0", VA = "0xFC24E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0xFC2528", Offset = "0xFC2528", VA = "0xFC2528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xFC2010", Offset = "0xFC2010", VA = "0xFC2010")]
		[DebuggerHidden]
		public <TeleportCoroutine>d__128(int <>1__state)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xFC203C", Offset = "0xFC203C", VA = "0xFC203C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xFC2040", Offset = "0xFC2040", VA = "0xFC2040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xFC24E8", Offset = "0xFC24E8", VA = "0xFC24E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Hands.Hand m_leftHand;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Hands.Hand m_rightHand;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera m_camera;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FNVR2.Input.UI.VRInputModule m_inputModule;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandPointer m_laserPointer;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_locomotionSystem;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ScreenFade m_screenFade;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform m_trackingSpace;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Locomotion.LocomotionController m_locomotionController;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerMovementControllerBase m_movementController;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PadController m_pad;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PadStorageController m_padStorage;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PlayerBody m_playerBodyPrefab;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RigidbodyTransformTracker m_headTrackerPrefab;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PadHologram m_padHologram;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB695E4", Offset = "0xB695E4")]
	public OpaqueSortMode opaqueSortMode;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6961C", Offset = "0xB6961C")]
	public GameObject m_feet;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject m_hip;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject m_shoulders;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m_head;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69654", Offset = "0xB69654")]
	private int <DefaultCameraCullingMask>k__BackingField;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69664", Offset = "0xB69664")]
	private LayerMask <DefaultUIInteractionLayer>k__BackingField;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RigidbodyTransformTracker m_headTracker;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ControllerInputBase.HandSide m_preferredUiHand;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private IHand m_pointerHand;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PlayerBody m_playerBody;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool m_isTeleporting;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int m_amountWaitingForCameraMask;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB696B4", Offset = "0xB696B4")]
	private FeatureLock <SaveDataBlock>k__BackingField;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB696C4", Offset = "0xB696C4")]
	private FeatureLock <GrabBlock>k__BackingField;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB696D4", Offset = "0xB696D4")]
	private FeatureLock <LocomotionBlock>k__BackingField;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB696E4", Offset = "0xB696E4")]
	private FeatureLock <UIInteractionBlock>k__BackingField;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB696F4", Offset = "0xB696F4")]
	private FeatureLock <SnapTurnBlock>k__BackingField;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69704", Offset = "0xB69704")]
	private FeatureLock <SettingsButtonBlock>k__BackingField;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69714", Offset = "0xB69714")]
	private FeatureLockStack<int> <CameraCullingMask>k__BackingField;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69724", Offset = "0xB69724")]
	private static Player <Instance>k__BackingField;

	[Token(Token = "0x170001A0")]
	public Camera Camera
	{
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xF52568", Offset = "0xF52568", VA = "0xF52568")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A1")]
	public virtual IHand LeftHand
	{
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xF52570", Offset = "0xF52570", VA = "0xF52570", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A2")]
	public virtual IHand RightHand
	{
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xF52578", Offset = "0xF52578", VA = "0xF52578", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A3")]
	public Transform TrackingSpace
	{
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xF52580", Offset = "0xF52580", VA = "0xF52580")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A4")]
	public ScreenFade ScreenFade
	{
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xF52588", Offset = "0xF52588", VA = "0xF52588")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A5")]
	public ControllerInputBase LeftHandInput
	{
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xF52590", Offset = "0xF52590", VA = "0xF52590")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A6")]
	public ControllerInputBase RightHandInput
	{
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xF5264C", Offset = "0xF5264C", VA = "0xF5264C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A7")]
	public Locomotion.LocomotionController LocomotionController
	{
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xF52708", Offset = "0xF52708", VA = "0xF52708")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A8")]
	public PlayerBody Body
	{
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xF52710", Offset = "0xF52710", VA = "0xF52710")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A9")]
	public bool IsHoldingSomething
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xF52718", Offset = "0xF52718", VA = "0xF52718")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AA")]
	public virtual bool IsMovingOrTurning
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xF52874", Offset = "0xF52874", VA = "0xF52874", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AB")]
	public bool IsHoldingBow
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xF52920", Offset = "0xF52920", VA = "0xF52920")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AC")]
	public bool IsTeleporting
	{
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xF52988", Offset = "0xF52988", VA = "0xF52988")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AD")]
	public PlayerBody PlayerBody
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xF52990", Offset = "0xF52990", VA = "0xF52990")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AE")]
	public int DefaultCameraCullingMask
	{
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xF52998", Offset = "0xF52998", VA = "0xF52998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D4E8", Offset = "0xB7D4E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xF529A0", Offset = "0xF529A0", VA = "0xF529A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D4F8", Offset = "0xB7D4F8")]
		protected set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public LayerMask DefaultUIInteractionLayer
	{
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xF529A8", Offset = "0xF529A8", VA = "0xF529A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D508", Offset = "0xB7D508")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xF529B0", Offset = "0xF529B0", VA = "0xF529B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D518", Offset = "0xB7D518")]
		protected set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	private IHand PointerHand
	{
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xF52FB0", Offset = "0xF52FB0", VA = "0xF52FB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xF52FB8", Offset = "0xF52FB8", VA = "0xF52FB8")]
		set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public ControllerInputBase.HandSide UIPointerHandSide
	{
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xF53284", Offset = "0xF53284", VA = "0xF53284")]
		get
		{
			return default(ControllerInputBase.HandSide);
		}
	}

	[Token(Token = "0x170001B2")]
	public FeatureLock SaveDataBlock
	{
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xF53348", Offset = "0xF53348", VA = "0xF53348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D5B8", Offset = "0xB7D5B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xF53340", Offset = "0xF53340", VA = "0xF53340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D5A8", Offset = "0xB7D5A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public FeatureLock GrabBlock
	{
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xF53358", Offset = "0xF53358", VA = "0xF53358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D5D8", Offset = "0xB7D5D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xF53350", Offset = "0xF53350", VA = "0xF53350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D5C8", Offset = "0xB7D5C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	public FeatureLock LocomotionBlock
	{
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xF53368", Offset = "0xF53368", VA = "0xF53368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D5F8", Offset = "0xB7D5F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xF53360", Offset = "0xF53360", VA = "0xF53360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D5E8", Offset = "0xB7D5E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B5")]
	public FeatureLock UIInteractionBlock
	{
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xF53380", Offset = "0xF53380", VA = "0xF53380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D618", Offset = "0xB7D618")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xF53370", Offset = "0xF53370", VA = "0xF53370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D608", Offset = "0xB7D608")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public FeatureLock SnapTurnBlock
	{
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xF53398", Offset = "0xF53398", VA = "0xF53398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D638", Offset = "0xB7D638")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xF53388", Offset = "0xF53388", VA = "0xF53388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D628", Offset = "0xB7D628")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public FeatureLock SettingsButtonBlock
	{
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xF533B0", Offset = "0xF533B0", VA = "0xF533B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D658", Offset = "0xB7D658")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xF533A0", Offset = "0xF533A0", VA = "0xF533A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D648", Offset = "0xB7D648")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public FeatureLockStack<int> CameraCullingMask
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xF533C8", Offset = "0xF533C8", VA = "0xF533C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D678", Offset = "0xB7D678")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xF533B8", Offset = "0xF533B8", VA = "0xF533B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D668", Offset = "0xB7D668")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B9")]
	public static Player Instance
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xF533D0", Offset = "0xF533D0", VA = "0xF533D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D688", Offset = "0xB7D688")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xF5341C", Offset = "0xF5341C", VA = "0xF5341C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D698", Offset = "0xB7D698")]
		private set
		{
		}
	}

	[Token(Token = "0x14000036")]
	public static event Action OnTeleportStarted
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xF529B8", Offset = "0xF529B8", VA = "0xF529B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D528", Offset = "0xB7D528")]
		add
		{
		}
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xF52A74", Offset = "0xF52A74", VA = "0xF52A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D538", Offset = "0xB7D538")]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public static event Action OnTeleport
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xF52B30", Offset = "0xF52B30", VA = "0xF52B30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D548", Offset = "0xB7D548")]
		add
		{
		}
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xF52BF0", Offset = "0xF52BF0", VA = "0xF52BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D558", Offset = "0xB7D558")]
		remove
		{
		}
	}

	[Token(Token = "0x14000038")]
	public static event Action OnTeleportCompleted
	{
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xF52CB0", Offset = "0xF52CB0", VA = "0xF52CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D568", Offset = "0xB7D568")]
		add
		{
		}
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xF52D70", Offset = "0xF52D70", VA = "0xF52D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D578", Offset = "0xB7D578")]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public static event Action OnTeleportImmediate
	{
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xF52E30", Offset = "0xF52E30", VA = "0xF52E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D588", Offset = "0xB7D588")]
		add
		{
		}
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xF52EF0", Offset = "0xF52EF0", VA = "0xF52EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D598", Offset = "0xB7D598")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xF53470", Offset = "0xF53470", VA = "0xF53470", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xF54048", Offset = "0xF54048", VA = "0xF54048", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xF542A0", Offset = "0xF542A0", VA = "0xF542A0")]
	private void OnSettingsDataChanged(object dataObject)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xF543B0", Offset = "0xF543B0", VA = "0xF543B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xF547C8", Offset = "0xF547C8", VA = "0xF547C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xF54AA0", Offset = "0xF54AA0", VA = "0xF54AA0")]
	private void OnSettingsLongPress()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xF53F38", Offset = "0xF53F38", VA = "0xF53F38")]
	private void UpdateUIPointerState()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xF53FD0", Offset = "0xF53FD0", VA = "0xF53FD0")]
	private void UpdateLocomotionState()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xF54B90", Offset = "0xF54B90", VA = "0xF54B90")]
	private void UpdateSnapTurnState()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xF54BD4", Offset = "0xF54BD4", VA = "0xF54BD4")]
	private void UpdateSettingsButtonState()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xF54D68", Offset = "0xF54D68", VA = "0xF54D68")]
	private void UpdateCameraCullingState()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xF54DF8", Offset = "0xF54DF8", VA = "0xF54DF8")]
	public static void IncreaseAllBlocks(object obj)
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xF54FA8", Offset = "0xF54FA8", VA = "0xF54FA8")]
	public static void DecreaseAllBlocks(object obj)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xF55158", Offset = "0xF55158", VA = "0xF55158")]
	private void UpdateGrabBlockState()
	{
	}

	[Token(Token = "0x6000C14")]
	public bool IsHoldingObjectOfType<T>()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xF5535C", Offset = "0xF5535C", VA = "0xF5535C")]
	public void Teleport(AreaManager.AreaType areaType, [Optional] Action onTeleport, [Optional] IEnumerator onTeleportCoroutine, float fadeInTime = 0.5f, float fadeOutTime = 0.5f, [Optional] ISound startSound, [Optional] ISound endSound, [Optional] Transform customLocation)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xF554E4", Offset = "0xF554E4", VA = "0xF554E4")]
	public void TeleportWithLODData(AreaManager.AreaType areaType, [Optional] SceneConfig.AreaLODData lodData, [Optional] Action onTeleport, [Optional] IEnumerator onTeleportCoroutine, float fadeInTime = 0.5f, float fadeOutTime = 0.5f, [Optional] ISound startSound, [Optional] ISound endSound, [Optional] Transform customLocation)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xF553B4", Offset = "0xF553B4", VA = "0xF553B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7D6A8", Offset = "0xB7D6A8")]
	private IEnumerator TeleportCoroutine(AreaManager.AreaType areaType, SceneConfig.AreaLODData LODData, [Optional] Action onTeleport, [Optional] IEnumerator onTeleportCoroutine, float fadeInTime = 0.5f, float fadeOutTime = 0.5f, [Optional] ISound startSound, [Optional] ISound endSound, [Optional] Transform customLocation)
	{
		return null;
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xF55524", Offset = "0xF55524", VA = "0xF55524")]
	public void TeleportImmediately(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xF5560C", Offset = "0xF5560C", VA = "0xF5560C")]
	public void TeleportImmediately(Transform location)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xF55698", Offset = "0xF55698", VA = "0xF55698")]
	public void TeleportImmediately(AreaManager.AreaType areaType)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xF557BC", Offset = "0xF557BC", VA = "0xF557BC")]
	public bool IsInteractingWithUI(IHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xF557F0", Offset = "0xF557F0", VA = "0xF557F0")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xF5594C", Offset = "0xF5594C", VA = "0xF5594C")]
	public void DestroyImmediate()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xF55AA8", Offset = "0xF55AA8", VA = "0xF55AA8")]
	public Player()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xF55AB8", Offset = "0xF55AB8", VA = "0xF55AB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D708", Offset = "0xB7D708")]
	private void <Awake>b__111_1(bool block)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xF55ABC", Offset = "0xF55ABC", VA = "0xF55ABC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D718", Offset = "0xB7D718")]
	private void <Awake>b__111_2(bool block)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xF55AE0", Offset = "0xF55AE0", VA = "0xF55AE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D728", Offset = "0xB7D728")]
	private void <Awake>b__111_3(bool block)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xF55AE4", Offset = "0xF55AE4", VA = "0xF55AE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D738", Offset = "0xB7D738")]
	private void <Awake>b__111_4(bool block)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xF55AE8", Offset = "0xF55AE8", VA = "0xF55AE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D748", Offset = "0xB7D748")]
	private void <Awake>b__111_5(bool block)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xF55AEC", Offset = "0xF55AEC", VA = "0xF55AEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D758", Offset = "0xB7D758")]
	private void <Awake>b__111_6(bool mask)
	{
	}
}
[Token(Token = "0x200023A")]
public class PlayerBody : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5B9B8", Offset = "0xB5B9B8")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 dropPosition;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerBody <>4__this;

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xFC29A0", Offset = "0xFC29A0", VA = "0xFC29A0")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xFC29A8", Offset = "0xFC29A8", VA = "0xFC29A8")]
		internal void <Update>b__0()
		{
		}
	}

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_defaultBodyHeight;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RangedFloat m_acceptableHeightRange;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_neckHeight;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RangedFloat m_dropHeightRange;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_dropBlinkTime;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_minValidHeadHeight;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB69734", Offset = "0xB69734")]
	private float m_gameBoundCapsuleSize;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ISound m_dropSound;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CapsuleCollider m_collider;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaycastHit m_spherecastHit;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool m_trackingEnabled;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_sphereCastRadius;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Player m_player;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69774", Offset = "0xB69774")]
	private bool <IsInsideGameBound>k__BackingField;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly Collider[] m_colliders;

	[Token(Token = "0x170001BC")]
	public bool IsInsideGameBound
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xF5967C", Offset = "0xF5967C", VA = "0xF5967C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D7B8", Offset = "0xB7D7B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xF59684", Offset = "0xF59684", VA = "0xF59684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D7C8", Offset = "0xB7D7C8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xF59690", Offset = "0xF59690", VA = "0xF59690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xF59768", Offset = "0xF59768", VA = "0xF59768")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xF597E0", Offset = "0xF597E0", VA = "0xF597E0")]
	private void OnTeleportCompleted()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xF59844", Offset = "0xF59844", VA = "0xF59844")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xF59A04", Offset = "0xF59A04", VA = "0xF59A04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xF59ED8", Offset = "0xF59ED8", VA = "0xF59ED8")]
	private void UpdateCollider(Vector3 feetPos, float neckHeight, float colliderHeight)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xF59FA8", Offset = "0xF59FA8", VA = "0xF59FA8")]
	private void SetTrackingEnabled(bool trackingEnabled)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xF59FB4", Offset = "0xF59FB4", VA = "0xF59FB4")]
	public void SetPlayer(Player player)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xF59FBC", Offset = "0xF59FBC", VA = "0xF59FBC")]
	public PlayerBody()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xF5A0B8", Offset = "0xF5A0B8", VA = "0xF5A0B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D7D8", Offset = "0xB7D7D8")]
	private void <Update>b__23_1()
	{
	}
}
[Serializable]
[Token(Token = "0x200023C")]
public class StatsPlayerDataObject : PlayerDataObject
{
	[Serializable]
	[Token(Token = "0x200023D")]
	public class StatsData
	{
		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_value;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_minValue;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_maxValue;

		[Token(Token = "0x170001BE")]
		public float Value
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0xFEDA80", Offset = "0xFEDA80", VA = "0xFEDA80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0xFEDA88", Offset = "0xFEDA88", VA = "0xFEDA88")]
			set
			{
			}
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xFEDADC", Offset = "0xFEDADC", VA = "0xFEDADC")]
		public StatsData()
		{
		}
	}

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB69784", Offset = "0xB69784")]
	private Dictionary<string, StatsData> m_stats;

	[Token(Token = "0x170001BD")]
	public Dictionary<string, StatsData> Stats
	{
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1B0A6B8", Offset = "0x1B0A6B8", VA = "0x1B0A6B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x1B0A6C0", Offset = "0x1B0A6C0", VA = "0x1B0A6C0")]
	public StatsData GetOrCreate(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x1B0A7D4", Offset = "0x1B0A7D4", VA = "0x1B0A7D4")]
	public void SetStat(string key, StatsData statsData)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x1B0A954", Offset = "0x1B0A954", VA = "0x1B0A954")]
	public StatsPlayerDataObject()
	{
	}
}
[Token(Token = "0x200023E")]
public class Error<T>
{
	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69794", Offset = "0xB69794")]
	private T <Code>k__BackingField;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB697A4", Offset = "0xB697A4")]
	private string <Message>k__BackingField;

	[Token(Token = "0x170001BF")]
	public T Code
	{
		[Token(Token = "0x6000C43")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D7E8", Offset = "0xB7D7E8")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000C44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D7F8", Offset = "0xB7D7F8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	public string Message
	{
		[Token(Token = "0x6000C45")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D808", Offset = "0xB7D808")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C46")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D818", Offset = "0xB7D818")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C47")]
	public Error(T code, string msg)
	{
	}

	[Token(Token = "0x6000C48")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200023F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5B9C8", Offset = "0xB5B9C8")]
public class PooledObjectTransformsReset : MonoBehaviour
{
	[Token(Token = "0x2000240")]
	private struct LocalTransform
	{
		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 m_position;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion m_quaternion;
	}

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PooledObject m_pooledObject;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<int, LocalTransform> m_localTransforms;

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xFF8158", Offset = "0xFF8158", VA = "0xFF8158")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xFF8500", Offset = "0xFF8500", VA = "0xFF8500")]
	private void CacheTransforms(Transform trans)
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xFF8850", Offset = "0xFF8850", VA = "0xFF8850")]
	private void ResetTransforms(Transform trans)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xFF8B90", Offset = "0xFF8B90", VA = "0xFF8B90")]
	private void OnRecycle()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xFF8BBC", Offset = "0xFF8BBC", VA = "0xFF8BBC")]
	public PooledObjectTransformsReset()
	{
	}
}
[Token(Token = "0x2000241")]
public class NonRepeatingRandom<T> : ScriptableObject, IReferenceId
{
	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string m_referenceId;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<T> m_list;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB697B4", Offset = "0xB697B4")]
	public int m_historySize;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB697EC", Offset = "0xB697EC")]
	public bool m_persist;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Queue<int> m_history;

	[Token(Token = "0x6000C4E")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C4F")]
	public T GetRandomValue()
	{
		return (T)null;
	}

	[Token(Token = "0x6000C50")]
	private void LoadHistory()
	{
	}

	[Token(Token = "0x6000C51")]
	private void AddToHistory(int index)
	{
	}

	[Token(Token = "0x6000C52")]
	private void SaveHistory()
	{
	}

	[Token(Token = "0x6000C53")]
	public string GetReferenceId()
	{
		return null;
	}

	[Token(Token = "0x6000C54")]
	public NonRepeatingRandom()
	{
	}
}
[Token(Token = "0x2000242")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5BA28", Offset = "0xB5BA28")]
public class NonRepeatingRandomLocalizedString : NonRepeatingRandom<LocalizedString>
{
	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x1BCAEB4", Offset = "0x1BCAEB4", VA = "0x1BCAEB4")]
	public NonRepeatingRandomLocalizedString()
	{
	}
}
[Token(Token = "0x2000243")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5BA88", Offset = "0xB5BA88")]
public class NonRepeatingRandomMaterial : NonRepeatingRandom<Material>
{
	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x1BCAF00", Offset = "0x1BCAF00", VA = "0x1BCAF00")]
	public NonRepeatingRandomMaterial()
	{
	}
}
[Token(Token = "0x2000244")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5BAE8", Offset = "0xB5BAE8")]
public class NonRepeatingRandomMesh : NonRepeatingRandom<Mesh>
{
	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x1BCAF4C", Offset = "0x1BCAF4C", VA = "0x1BCAF4C")]
	public NonRepeatingRandomMesh()
	{
	}
}
[Token(Token = "0x2000245")]
public class RandomMaterial : MonoBehaviour
{
	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NonRepeatingRandomMaterial m_randomMaterialConfig;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] m_renderers;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_randomiseOnEnable;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_useRandomMaterialPerRenderer;

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x1004B34", Offset = "0x1004B34", VA = "0x1004B34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x1004B44", Offset = "0x1004B44", VA = "0x1004B44")]
	public void RandomiseMaterial()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x1004C20", Offset = "0x1004C20", VA = "0x1004C20")]
	public RandomMaterial()
	{
	}
}
[Token(Token = "0x2000246")]
public class RandomMesh : MonoBehaviour
{
	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NonRepeatingRandomMesh m_randomMeshConfig;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter[] m_meshFilters;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_randomiseOnEnable;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_useRandomPerObject;

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x1004C30", Offset = "0x1004C30", VA = "0x1004C30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x1004C40", Offset = "0x1004C40", VA = "0x1004C40")]
	public void RandomiseMesh()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1004D10", Offset = "0x1004D10", VA = "0x1004D10")]
	public RandomMesh()
	{
	}
}
[Token(Token = "0x2000247")]
public class RandomTransform : MonoBehaviour
{
	[Token(Token = "0x2000248")]
	public enum Event
	{
		[Token(Token = "0x4000F3A")]
		OnEnable,
		[Token(Token = "0x4000F3B")]
		OnAwake,
		[Token(Token = "0x4000F3C")]
		OnDisable,
		[Token(Token = "0x4000F3D")]
		Never
	}

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Event m_whenToRandomise;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Event m_whenToReset;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Space m_space;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69824", Offset = "0xB69824")]
	public bool m_doPosition;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool m_additivePosition;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RangedVector3 m_positionRange;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6985C", Offset = "0xB6985C")]
	public bool m_doRotation;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool m_additiveRotation;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public RangedVector3 m_rotationRange;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69894", Offset = "0xB69894")]
	public bool m_doScale;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RangedVector3 m_scaleRange;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform m_transform;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_baseLocalPos;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion m_baseLocalRot;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 m_baseLocalScale;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x1004D20", Offset = "0x1004D20", VA = "0x1004D20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x1004E18", Offset = "0x1004E18", VA = "0x1004E18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x1004E20", Offset = "0x1004E20", VA = "0x1004E20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x1004DC8", Offset = "0x1004DC8", VA = "0x1004DC8")]
	private void ProcessEvent(Event evt)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x1004E28", Offset = "0x1004E28", VA = "0x1004E28")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x1004E8C", Offset = "0x1004E8C", VA = "0x1004E8C")]
	private void Randomise()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x1005000", Offset = "0x1005000", VA = "0x1005000")]
	public RandomTransform()
	{
	}
}
[Token(Token = "0x2000249")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5BB48", Offset = "0xB5BB48")]
public class RandomLegacyAnimationPlayer : MonoBehaviour
{
	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animation m_animation;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RangedFloat m_delayBetweenAnimations;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB698DC", Offset = "0xB698DC")]
	private AnimationClip[] m_animationClips;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_nextAnimationTime;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_animationFinishTime;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_isIdling;

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x10044B8", Offset = "0x10044B8", VA = "0x10044B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x100497C", Offset = "0x100497C", VA = "0x100497C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1004AEC", Offset = "0x1004AEC", VA = "0x1004AEC")]
	public RandomLegacyAnimationPlayer()
	{
	}
}
[Token(Token = "0x200024A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5BBA8", Offset = "0xB5BBA8")]
public class FruitSliceDirectionsConfig : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200024B")]
	public class SliceDirectionInfo
	{
		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Fruit.SliceDirection m_sliceDirection;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public FruitSpinner.SpinDirection m_spinDirection;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_arrowRotation;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_editorDisplayString;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xFC9F5C", Offset = "0xFC9F5C", VA = "0xFC9F5C")]
		public SliceDirectionInfo()
		{
		}
	}

	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BBEC", Offset = "0xB5BBEC")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Fruit.SliceDirection direction;

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xFC9EA0", Offset = "0xFC9EA0", VA = "0xFC9EA0")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xFC9EA8", Offset = "0xFC9EA8", VA = "0xFC9EA8")]
		internal bool <GetSliceInfoForDirection>b__0(SliceDirectionInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SliceDirectionInfo> m_sliceDirections;

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x14C20AC", Offset = "0x14C20AC", VA = "0x14C20AC")]
	public SliceDirectionInfo GetSliceInfoForDirection(Fruit.SliceDirection direction)
	{
		return null;
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x14C21FC", Offset = "0x14C21FC", VA = "0x14C21FC")]
	public FruitSliceDirectionsConfig()
	{
	}
}
[Token(Token = "0x200024D")]
[ExecuteAlways]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5BBFC", Offset = "0xB5BBFC")]
public class RhythmPlayHeadUpdater : MonoBehaviour
{
	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x13BE6A0", Offset = "0x13BE6A0", VA = "0x13BE6A0")]
	public RhythmPlayHeadUpdater()
	{
	}
}
[Token(Token = "0x200024E")]
public class RhythmTrackPlayer : MonoBehaviour
{
	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackInfoConfig m_trackInfoConfig;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MusicCue m_musicCue;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextAsset m_spawnCueList;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_trackStartTime;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_trackEndTime;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB69928", Offset = "0xB69928")]
	public float m_endTrackTimeBuffer;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private double m_lastDSPTime;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private double m_startDSPTime;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private double m_pauseStartDspTime;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private double m_timeSpentPaused;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine m_reconnectPauseCoroutine;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private double m_pauseStartTime;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69960", Offset = "0xB69960")]
	private bool <IsPaused>k__BackingField;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69970", Offset = "0xB69970")]
	private bool <IsTrackPlaying>k__BackingField;

	[Token(Token = "0x170001C1")]
	public bool IsPaused
	{
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x13BE6A8", Offset = "0x13BE6A8", VA = "0x13BE6A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D828", Offset = "0xB7D828")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x13BE6B0", Offset = "0x13BE6B0", VA = "0x13BE6B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D838", Offset = "0xB7D838")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public double CurrentTrackTime
	{
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x13BE6BC", Offset = "0x13BE6BC", VA = "0x13BE6BC")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170001C3")]
	private bool IsTrackFinished
	{
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x13BE6DC", Offset = "0x13BE6DC", VA = "0x13BE6DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C4")]
	public bool IsTrackPlaying
	{
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x13BE708", Offset = "0x13BE708", VA = "0x13BE708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D848", Offset = "0xB7D848")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x13BE710", Offset = "0x13BE710", VA = "0x13BE710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D858", Offset = "0xB7D858")]
		private set
		{
		}
	}

	[Token(Token = "0x1400003A")]
	public event Action OnTrackFinished
	{
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x13BE71C", Offset = "0x13BE71C", VA = "0x13BE71C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D868", Offset = "0xB7D868")]
		add
		{
		}
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x13BE7BC", Offset = "0x13BE7BC", VA = "0x13BE7BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D878", Offset = "0xB7D878")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x13BE85C", Offset = "0x13BE85C", VA = "0x13BE85C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x13BE920", Offset = "0x13BE920", VA = "0x13BE920")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x13BE9DC", Offset = "0x13BE9DC", VA = "0x13BE9DC")]
	public void StartTrack()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x13BEA9C", Offset = "0x13BEA9C", VA = "0x13BEA9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x13BEB4C", Offset = "0x13BEB4C", VA = "0x13BEB4C")]
	public float GetRoundedTrackTimeWithBuffer()
	{
		return default(float);
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x13BEB88", Offset = "0x13BEB88", VA = "0x13BEB88")]
	private void OnPaused(bool isPaused)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x13BEC90", Offset = "0x13BEC90", VA = "0x13BEC90")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x13BED0C", Offset = "0x13BED0C", VA = "0x13BED0C")]
	public RhythmTrackPlayer()
	{
	}
}
[Token(Token = "0x200024F")]
public class SliceBar : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BC7C", Offset = "0xB5BC7C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ParticleSystem> <>9__5_0;

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xFE6BA4", Offset = "0xFE6BA4", VA = "0xFE6BA4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xFE6BAC", Offset = "0xFE6BAC", VA = "0xFE6BAC")]
		internal void <PlayParticleSystems>b__5_0(ParticleSystem ps)
		{
		}
	}

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ParticleSystem> m_particleSystems;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_isSliceHereRequired;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool m_isVisible;

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xF0F0D8", Offset = "0xF0F0D8", VA = "0xF0F0D8")]
	public void DoFadeIn()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xF0F1F4", Offset = "0xF0F1F4", VA = "0xF0F1F4")]
	public void PlayParticleSystems()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xF0F320", Offset = "0xF0F320", VA = "0xF0F320")]
	public SliceBar()
	{
	}
}
[Token(Token = "0x2000251")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5BC8C", Offset = "0xB5BC8C")]
public class TrackInfoConfig : ScriptableObject
{
	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_beatsPerMinute;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundClip m_musicTrack;

	[Token(Token = "0x170001C5")]
	public float TrackLengthSeconds
	{
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x15D8A04", Offset = "0x15D8A04", VA = "0x15D8A04")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001C6")]
	public int RoundedTrackLength
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x15D8AA4", Offset = "0x15D8AA4", VA = "0x15D8AA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C7")]
	public float BeatsPerSecond
	{
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x15D8ABC", Offset = "0x15D8ABC", VA = "0x15D8ABC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001C8")]
	public int BeatsInTrack
	{
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x15D8AD0", Offset = "0x15D8AD0", VA = "0x15D8AD0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C9")]
	public float BeatLengthSeconds
	{
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x15D8B04", Offset = "0x15D8B04", VA = "0x15D8B04")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x15D8B20", Offset = "0x15D8B20", VA = "0x15D8B20")]
	public TrackInfoConfig()
	{
	}
}
[Token(Token = "0x2000252")]
public class RigidbodyTransformTracker : MonoBehaviour
{
	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_sourceTransform;

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x13BED14", Offset = "0x13BED14", VA = "0x13BED14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x13BED64", Offset = "0x13BED64", VA = "0x13BED64")]
	public void Init(Transform sourceTransform)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x13BED6C", Offset = "0x13BED6C", VA = "0x13BED6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x13BEE30", Offset = "0x13BEE30", VA = "0x13BEE30")]
	public RigidbodyTransformTracker()
	{
	}
}
[Token(Token = "0x2000253")]
public class RigidbodyWindApplier : MonoBehaviour
{
	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WindZone m_windZone;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody m_rigidbody;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_mainForceAmount;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public RangedFloat m_pulseFrequency;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public RangedFloat m_pulseMagnitude;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_pulseFreqTimer;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_pulseCurrentMagnitude;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float m_pulseMaxFreq;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_pulseMaxMagnitude;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 m_mainForce;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_pulseForce;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 m_finalForce;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_increasingTimer;

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x13BEE38", Offset = "0x13BEE38", VA = "0x13BEE38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x13BEF64", Offset = "0x13BEF64", VA = "0x13BEF64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x13BEF20", Offset = "0x13BEF20", VA = "0x13BEF20")]
	private void SetMaxValues()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x13BF0A4", Offset = "0x13BF0A4", VA = "0x13BF0A4")]
	public RigidbodyWindApplier()
	{
	}
}
[Token(Token = "0x2000254")]
public class RotateSky : MonoBehaviour
{
	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotateSpeed;

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x13C0284", Offset = "0x13C0284", VA = "0x13C0284")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x13C0300", Offset = "0x13C0300", VA = "0x13C0300")]
	public RotateSky()
	{
	}
}
[Token(Token = "0x2000255")]
public class ScreenFade : MonoBehaviour
{
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BCD0", Offset = "0xB5BCD0")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action midBlinkHandler;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenFade <>4__this;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onComplete;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float midBlinkWaitTime;

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xFE215C", Offset = "0xFE215C", VA = "0xFE215C")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xFE2164", Offset = "0xFE2164", VA = "0xFE2164")]
		internal void <Blink>b__0()
		{
		}
	}

	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BCE0", Offset = "0xB5BCE0")]
	private sealed class <FadeInternal>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeIn;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScreenFade <>4__this;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool forceInitFadeLevel;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float waitTime;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeTime;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action onComplete;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <targetAlpha>5__2;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <startAlpha>5__3;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <time>5__4;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <wTimer>5__5;

		[Token(Token = "0x170001CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0xFE2400", Offset = "0xFE2400", VA = "0xFE2400", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0xFE2448", Offset = "0xFE2448", VA = "0xFE2448", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xFE21B4", Offset = "0xFE21B4", VA = "0xFE21B4")]
		[DebuggerHidden]
		public <FadeInternal>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xFE21E0", Offset = "0xFE21E0", VA = "0xFE21E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xFE21E4", Offset = "0xFE21E4", VA = "0xFE21E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xFE2408", Offset = "0xFE2408", VA = "0xFE2408", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ease m_fadeInEase;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Ease m_fadeOutEase;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB69990", Offset = "0xB69990")]
	public Color m_fadeColor;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_fadeMaterial;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_initialAlpha;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer m_fadeRenderer;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshFilter m_fadeMesh;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_isFading;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected float m_currentAlpha;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IEnumerator m_fadeEnumerator;

	[Token(Token = "0x170001CA")]
	public float CurrentAlpha
	{
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x13CFE4C", Offset = "0x13CFE4C", VA = "0x13CFE4C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x13CFE54", Offset = "0x13CFE54", VA = "0x13CFE54", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x13D0060", Offset = "0x13D0060", VA = "0x13D0060")]
	public Mesh CreateQuadMesh()
	{
		return null;
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x13D02E0", Offset = "0x13D02E0", VA = "0x13D02E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x13D02D0", Offset = "0x13D02D0", VA = "0x13D02D0")]
	public void SetFadeLevel(float level)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x13D0360", Offset = "0x13D0360", VA = "0x13D0360", Slot = "5")]
	protected virtual void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x13D02E8", Offset = "0x13D02E8", VA = "0x13D02E8")]
	private void KillFade(bool clear = false)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x13D03B8", Offset = "0x13D03B8", VA = "0x13D03B8")]
	public void Fade(float time, bool fadeIn, Action onComplete, bool forceInitFadeLevel = false, float waitTime = 0f)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x13D0504", Offset = "0x13D0504", VA = "0x13D0504")]
	public IEnumerator FadeCoroutine(float fadeTime, bool fadeIn, [Optional] Action onComplete, bool forceInitFadeLevel = false, float waitTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x13D057C", Offset = "0x13D057C", VA = "0x13D057C")]
	public void Blink(float blinkTime, [Optional] Action midBlinkHandler, [Optional] Action onComplete, bool forceInitFadeLevel = false, float midBlinkWaitTime = 0f)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x13D0438", Offset = "0x13D0438", VA = "0x13D0438")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7D888", Offset = "0xB7D888")]
	private IEnumerator FadeInternal(float fadeTime, bool fadeIn, [Optional] Action onComplete, bool forceInitFadeLevel = false, float waitTime = 0f)
	{
		return null;
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x13D06A4", Offset = "0x13D06A4", VA = "0x13D06A4")]
	public ScreenFade()
	{
	}
}
[Token(Token = "0x2000258")]
public class ScreenFadeOpenVR : ScreenFade
{
	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x13D0700", Offset = "0x13D0700", VA = "0x13D0700")]
	public ScreenFadeOpenVR()
	{
	}
}
[Token(Token = "0x2000259")]
public class ScriptableObjectHolder : MonoBehaviour
{
	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScriptableObject[] m_scriptableObjects;

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x13D0704", Offset = "0x13D0704", VA = "0x13D0704")]
	public ScriptableObjectHolder()
	{
	}
}
[Token(Token = "0x200025A")]
public class SetAnimationSpeed : MonoBehaviour
{
	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RangedFloat m_rigidbodyVelocityRange;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RangedFloat m_animSpeedRange;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_speedDampen;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_currentAnimSpeed;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xEFF8DC", Offset = "0xEFF8DC", VA = "0xEFF8DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xEFF92C", Offset = "0xEFF92C", VA = "0xEFF92C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xEFFA40", Offset = "0xEFFA40", VA = "0xEFFA40")]
	public SetAnimationSpeed()
	{
	}
}
[Token(Token = "0x200025B")]
public class SettingsMenu : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BCF0", Offset = "0xB5BCF0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__52_0;

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xFE4D6C", Offset = "0xFE4D6C", VA = "0xFE4D6C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xFE4D74", Offset = "0xFE4D74", VA = "0xFE4D74")]
		internal void <QuitGame>b__52_0()
		{
		}
	}

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_menusDistanceFromPlayer;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_settingsMenu;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_visionBlocker;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioMixer m_audioMixer;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LayerMask m_cameraCullingMaskWhenInSettings;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69A28", Offset = "0xB69A28")]
	[SerializeField]
	private Slider m_musicSlider;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Slider m_sfxSlider;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Toggle m_blinkToggle;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Toggle m_dashToggle;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Toggle m_rightMovementHandsToggle;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Toggle m_leftMovementHandsToggle;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Toggle m_bowAutoReleaseToggle;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Toggle m_bowTrajectoryToggle;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Button m_cancelQuitButton;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Slider m_bowPullingRangeSlider;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69B04", Offset = "0xB69B04")]
	[SerializeField]
	private UnityEvent m_onSettingsClosed;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_isActive;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SettingsPlayerDataObject m_settingsPlayerDataObject;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_originalCameraCullingMask;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int m_originalUiInteractionLayers;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float m_originalMusicVolume;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_originalSfxVolume;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Locomotion.LocomotionController.LocomotionMode m_originalLocomotionMode;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Bow.PullingRange m_originalPullingRange;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool m_originalAutoRelease;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool m_originalTrajectoryLine;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool m_originalFlipMovementHands;

	[Token(Token = "0x4000FAE")]
	private const string SfxVolume = "SfxVolume";

	[Token(Token = "0x4000FAF")]
	private const string MusicVolume = "MusicVolume";

	[Token(Token = "0x4000FB0")]
	private const string IntroSFX = "IntroSFX";

	[Token(Token = "0x4000FB1")]
	private const float MuteVolume = -80f;

	[Token(Token = "0x4000FB2")]
	private const float FloatComparisonTolerance = 0.1f;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69B50", Offset = "0xB69B50")]
	private static SettingsMenu <Instance>k__BackingField;

	[Token(Token = "0x170001CD")]
	public bool IsActive
	{
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xEFFF3C", Offset = "0xEFFF3C", VA = "0xEFFF3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CE")]
	public static SettingsMenu Instance
	{
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xEFFF44", Offset = "0xEFFF44", VA = "0xEFFF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D938", Offset = "0xB7D938")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xEFFF90", Offset = "0xEFFF90", VA = "0xEFFF90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D948", Offset = "0xB7D948")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xEFFFE4", Offset = "0xEFFFE4", VA = "0xEFFFE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xF00194", Offset = "0xF00194", VA = "0xF00194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xF00264", Offset = "0xF00264", VA = "0xF00264")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xF00350", Offset = "0xF00350", VA = "0xF00350")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xF00524", Offset = "0xF00524", VA = "0xF00524")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xF006F8", Offset = "0xF006F8", VA = "0xF006F8")]
	private void OnButtonPress()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xF009AC", Offset = "0xF009AC", VA = "0xF009AC")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xF0099C", Offset = "0xF0099C", VA = "0xF0099C")]
	private void ToggleMenu()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xF009E4", Offset = "0xF009E4", VA = "0xF009E4")]
	private void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xF01694", Offset = "0xF01694", VA = "0xF01694")]
	private void SetMenuActive(bool active)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xF01878", Offset = "0xF01878", VA = "0xF01878")]
	public void ChangeMusicVolume(float value)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xF01930", Offset = "0xF01930", VA = "0xF01930")]
	public void ChangeSfxVolume(float value)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xF01A14", Offset = "0xF01A14", VA = "0xF01A14")]
	public void ChangeBowPullingRange(float value)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xF01A68", Offset = "0xF01A68", VA = "0xF01A68")]
	public void TeleportTo(int location)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xF01B4C", Offset = "0xF01B4C", VA = "0xF01B4C")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xF01CA0", Offset = "0xF01CA0", VA = "0xF01CA0")]
	public void OnBlinkTeleportValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xF01CDC", Offset = "0xF01CDC", VA = "0xF01CDC")]
	public void OnDashTeleportValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xF01D00", Offset = "0xF01D00", VA = "0xF01D00")]
	public void OnBowAutoReleaseValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xF01D3C", Offset = "0xF01D3C", VA = "0xF01D3C")]
	public void OnBowTrajectoryLineValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xF01D78", Offset = "0xF01D78", VA = "0xF01D78")]
	public void OnRightMovementHandsValueChanged()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xF01E28", Offset = "0xF01E28", VA = "0xF01E28")]
	public void OnLeftMovementHandsValueChanged()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xF00F24", Offset = "0xF00F24", VA = "0xF00F24")]
	public void SetBlinkDashToggles(Locomotion.LocomotionController.LocomotionMode toMode)
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xF00F74", Offset = "0xF00F74", VA = "0xF00F74")]
	public void SetBowAutoReleaseToggle(bool isOn)
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xF00F94", Offset = "0xF00F94", VA = "0xF00F94")]
	public void SetBowTrajectoryLine(bool isOn)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xF00FB4", Offset = "0xF00FB4", VA = "0xF00FB4")]
	public void SetFlipMovementHands(bool isOn)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xF01CC4", Offset = "0xF01CC4", VA = "0xF01CC4")]
	private void SetTeleportMode(Locomotion.LocomotionController.LocomotionMode teleportMode)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xF00738", Offset = "0xF00738", VA = "0xF00738")]
	private bool CanSettingsBeOpenOrClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xF01050", Offset = "0xF01050", VA = "0xF01050")]
	private void FreeUpHands()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xF01000", Offset = "0xF01000", VA = "0xF01000")]
	private void CacheOriginalSettingsValues()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xF01354", Offset = "0xF01354", VA = "0xF01354")]
	private void EmitSettingsChangedEvents()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xF01F44", Offset = "0xF01F44", VA = "0xF01F44")]
	private bool HasSettingChanged(float original, float current)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xF01F5C", Offset = "0xF01F5C", VA = "0xF01F5C")]
	private bool HasSettingChanged(int original, int current)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xF01F68", Offset = "0xF01F68", VA = "0xF01F68")]
	private bool HasSettingChanged(bool original, bool current)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xF01F74", Offset = "0xF01F74", VA = "0xF01F74")]
	public SettingsMenu()
	{
	}
}
[Token(Token = "0x200025D")]
public class ShopCartItemDisplay : MonoBehaviour, ILocalizeCallback
{
	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShopItem m_item;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI m_itemNameText;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI m_costText;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_inUse;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xF067DC", Offset = "0xF067DC", VA = "0xF067DC")]
	public void Initialize(ShopItem item, Transform parent)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xF03FC4", Offset = "0xF03FC4", VA = "0xF03FC4")]
	public void Deactivate(Transform newParent)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xF07C24", Offset = "0xF07C24", VA = "0xF07C24", Slot = "4")]
	public void OnLocalize()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xF07B58", Offset = "0xF07B58", VA = "0xF07B58")]
	private void AssignNameText()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xF07C28", Offset = "0xF07C28", VA = "0xF07C28")]
	public ShopCartItemDisplay()
	{
	}
}
[Token(Token = "0x200025E")]
public abstract class SingletonScriptableObject<T> : ScriptableObject where T : ScriptableObject
{
	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T s_instance;

	[Token(Token = "0x170001CF")]
	public static T Instance
	{
		[Token(Token = "0x6000CDA")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CDB")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDC")]
	protected SingletonScriptableObject()
	{
	}
}
[Token(Token = "0x200025F")]
public class SpawnerBeatGrid : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000260")]
	public class SpawnInfo
	{
		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_spawnableFruitIndex;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Fruit.SliceDirection m_requiredSliceDirection;

		[Token(Token = "0x170001D3")]
		public bool IsEmpty
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0xFE875C", Offset = "0xFE875C", VA = "0xFE875C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xFE8768", Offset = "0xFE8768", VA = "0xFE8768")]
		public SpawnInfo()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BD00", Offset = "0xB5BD00")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform fruitTransform;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 localDestination;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Fruit fruit;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 localFruitPositionOnGrid;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SpawnerBeatGrid <>4__this;

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xFE7DF8", Offset = "0xFE7DF8", VA = "0xFE7DF8")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xFE7E00", Offset = "0xFE7E00", VA = "0xFE7E00")]
		internal void <Spawn>b__0()
		{
		}
	}

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BD10", Offset = "0xB5BD10")]
	private sealed class <Spawn>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnerBeatGrid <>4__this;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 <startPos>5__2;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <incX>5__3;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <incY>5__4;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <firstLerpDuration>5__5;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <startPositionOffset>5__6;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <secondCatchUpStartOffset>5__7;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int <fruitSpawnedThisFrame>5__8;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <x>5__9;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int <y>5__10;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF2")]
			[Address(RVA = "0xFE870C", Offset = "0xFE870C", VA = "0xFE870C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF4")]
			[Address(RVA = "0xFE8754", Offset = "0xFE8754", VA = "0xFE8754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xFE7EB8", Offset = "0xFE7EB8", VA = "0xFE7EB8")]
		[DebuggerHidden]
		public <Spawn>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xFE7EE4", Offset = "0xFE7EE4", VA = "0xFE7EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xFE7EE8", Offset = "0xFE7EE8", VA = "0xFE7EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xFE8714", Offset = "0xFE8714", VA = "0xFE8714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BD20", Offset = "0xB5BD20")]
	private sealed class <>c
	{
		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Fruit> <>9__24_0;

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xFE7DC4", Offset = "0xFE7DC4", VA = "0xFE7DC4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xFE7DCC", Offset = "0xFE7DCC", VA = "0xFE7DCC")]
		internal bool <Despawn>b__24_0(Fruit x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_beat;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	public SpawnInfo[] m_spawnGrid;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private int m_columns;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[HideInInspector]
	private int m_rows;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_hasSpawned;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool m_hasDespawned;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_id;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_beatGridId;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public readonly List<Fruit> m_spawned;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action<Fruit> m_fruitRemovedAction;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB69C08", Offset = "0xB69C08")]
	private WaveManagerRhythm <RhythmManager>k__BackingField;

	[Token(Token = "0x170001D0")]
	public WaveManagerRhythm RhythmManager
	{
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x21A21AC", Offset = "0x21A21AC", VA = "0x21A21AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D958", Offset = "0xB7D958")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x21A21B4", Offset = "0x21A21B4", VA = "0x21A21B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7D968", Offset = "0xB7D968")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public bool HasSpawned
	{
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x21A21BC", Offset = "0x21A21BC", VA = "0x21A21BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D2")]
	public bool HasDespawned
	{
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x21A21C4", Offset = "0x21A21C4", VA = "0x21A21C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x21A21CC", Offset = "0x21A21CC", VA = "0x21A21CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x21A22A8", Offset = "0x21A22A8", VA = "0x21A22A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7D978", Offset = "0xB7D978")]
	public IEnumerator Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x21A2320", Offset = "0x21A2320", VA = "0x21A2320")]
	private void OnFruitRemoved(Fruit fruit)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x21A23B8", Offset = "0x21A23B8", VA = "0x21A23B8")]
	public SpawnInfo GetFruitAtPosition(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x21A251C", Offset = "0x21A251C", VA = "0x21A251C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x21A2544", Offset = "0x21A2544", VA = "0x21A2544")]
	public void Despawn(bool duringGameplay)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x21A277C", Offset = "0x21A277C", VA = "0x21A277C")]
	public int GetNumFruitToSpawn()
	{
		return default(int);
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x21A2884", Offset = "0x21A2884", VA = "0x21A2884")]
	public SpawnerBeatGrid()
	{
	}
}
[Token(Token = "0x2000264")]
public class SpawnerGrid : Spawner
{
	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB69C18", Offset = "0xB69C18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69C18", Offset = "0xB69C18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB69C18", Offset = "0xB69C18")]
	public int m_columns;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB69C7C", Offset = "0xB69C7C")]
	public int m_rows;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[HideInInspector]
	public bool[] m_spawnLocations;

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x21A290C", Offset = "0x21A290C", VA = "0x21A290C", Slot = "22")]
	protected override int GetNumberOfFruitToSpawn()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x21A2978", Offset = "0x21A2978", VA = "0x21A2978", Slot = "9")]
	protected override Vector3 GetNextFruitPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x21A2ACC", Offset = "0x21A2ACC", VA = "0x21A2ACC")]
	public SpawnerGrid()
	{
	}
}
[Token(Token = "0x2000265")]
public class GeyserSpawnerVisuals : SpawnerVisuals
{
	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Spawner m_spawner;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_fruitSpawnPoint;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_geyserVisuals;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_geyserTop;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_geyserTopFoam;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_geyserMiddle;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform m_geyserBottom;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer m_geyserTopFoamSplash;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Renderer m_geyserBottomRipple;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_geyserHeight;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public RangedFloat m_geyserTopMinMaxSize;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public RangedFloat m_geyserBottomMinMaxSize;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float m_topHeightScaleFactor;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_middleHeightScaleFactor;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float m_bottomHeightScaleFactor;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 m_geyserTopInitialPos;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 m_geyserTopInitialScale;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 m_geyserMiddleInitialPos;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Vector3 m_geyserMiddleInitialScale;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector3 m_geyserBottomInitialScale;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 m_geyserTopEndPos;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 m_geyserMiddleEndPos;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Vector3 m_geyserBottomEndPos;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float m_anticipationDuration;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_anticipationEffect;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Ease m_spawnAnimEaseType;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Ease m_despawnAnimEaseType;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float m_spawnAnimDuration;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float m_despawnAnimDuration;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float m_geyserLifeDuration;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Ease m_idleAnimEaseType;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float m_idleMovementAmount;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject[] m_effectsOnSpawn;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject[] m_effectsOnDespawn;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69CA4", Offset = "0xB69CA4")]
	public ISound m_spawnStartSound;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public ISound m_loopingSound;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public ISound m_despawnStartSound;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ISound m_despawnEndSound;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool m_spawnedDespawnParticles;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 m_minIdleMovement;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 m_maxIdleMovement;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private SoundPlaybackContext m_loopSoundContext;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool m_isSpawning;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool m_waitingForAnticipation;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	private bool m_waitingForSpawnDuration;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float m_anticipationTimer;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float m_spawnDurationTimer;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float m_topScaledHeight;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float m_midScaledHeight;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float m_bottomScaledHeight;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 m_geyserTopPos;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Vector3 m_geyserTopScale;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 m_geyserMidScale;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private Vector3 m_geyserBottomScale;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Action m_onSpawnComplete;

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x2292A44", Offset = "0x2292A44", VA = "0x2292A44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x2292A48", Offset = "0x2292A48", VA = "0x2292A48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x2292D28", Offset = "0x2292D28", VA = "0x2292D28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x2292E68", Offset = "0x2292E68", VA = "0x2292E68", Slot = "4")]
	public override void Spawn(Action onSpawnVisualsComplete)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x22930B0", Offset = "0x22930B0", VA = "0x22930B0", Slot = "5")]
	public override void Despawn()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x2292AE4", Offset = "0x2292AE4", VA = "0x2292AE4")]
	private void StartSpawnSequence()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x2292D68", Offset = "0x2292D68", VA = "0x2292D68")]
	private void SetSpawnEffectsActive(bool isActive)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x2292DE4", Offset = "0x2292DE4", VA = "0x2292DE4")]
	private void SetDespawnEffectsActive(bool isActive)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x2293474", Offset = "0x2293474", VA = "0x2293474")]
	private void PerformIdleMovement()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x229360C", Offset = "0x229360C", VA = "0x229360C")]
	public GeyserSpawnerVisuals()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x2293660", Offset = "0x2293660", VA = "0x2293660")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DA28", Offset = "0xB7DA28")]
	private void <Despawn>b__59_0()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x22936B4", Offset = "0x22936B4", VA = "0x22936B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DA38", Offset = "0xB7DA38")]
	private void <Despawn>b__59_1()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x22937C8", Offset = "0x22937C8", VA = "0x22937C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DA48", Offset = "0xB7DA48")]
	private void <Despawn>b__59_2()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x229383C", Offset = "0x229383C", VA = "0x229383C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DA58", Offset = "0xB7DA58")]
	private void <Despawn>b__59_3()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x22938B0", Offset = "0x22938B0", VA = "0x22938B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DA68", Offset = "0xB7DA68")]
	private void <Despawn>b__59_4()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x2293924", Offset = "0x2293924", VA = "0x2293924")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DA78", Offset = "0xB7DA78")]
	private void <StartSpawnSequence>b__60_0()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x2293A64", Offset = "0x2293A64", VA = "0x2293A64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DA88", Offset = "0xB7DA88")]
	private void <PerformIdleMovement>b__63_0()
	{
	}
}
[Token(Token = "0x2000266")]
public abstract class SpawnerVisuals : MonoBehaviour
{
	[Token(Token = "0x6000D0C")]
	public abstract void Spawn(Action onSpawnVisualsComplete);

	[Token(Token = "0x6000D0D")]
	public abstract void Despawn();

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x21A2E88", Offset = "0x21A2E88", VA = "0x21A2E88")]
	protected SpawnerVisuals()
	{
	}
}
[Token(Token = "0x2000267")]
[ExecuteAlways]
public class SplineController : MonoBehaviour
{
	[Token(Token = "0x2000268")]
	public enum RotationMode
	{
		[Token(Token = "0x4001022")]
		None,
		[Token(Token = "0x4001023")]
		LookForward,
		[Token(Token = "0x4001024")]
		LookBackward,
		[Token(Token = "0x4001025")]
		LookAtPlayer,
		[Token(Token = "0x4001026")]
		LookAtTarget
	}

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineComputer[] m_splineComputers;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_currentSplineIndex;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateType m_updateType;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RotationMode m_rotationMode;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB69CDC", Offset = "0xB69CDC")]
	public Transform m_lookAtTarget;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB69D14", Offset = "0xB69D14")]
	private float m_splinePercentage;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool m_isGamePaused;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_lastEvaluatedSplinePercentage;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_previousPosition;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 m_currentPosition;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_updatePositionOnSpline;

	[Token(Token = "0x170001D6")]
	public float SplinePercentage
	{
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x1AFA084", Offset = "0x1AFA084", VA = "0x1AFA084")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x1AFA08C", Offset = "0x1AFA08C", VA = "0x1AFA08C")]
		set
		{
		}
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x1AFA12C", Offset = "0x1AFA12C", VA = "0x1AFA12C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x1AFA230", Offset = "0x1AFA230", VA = "0x1AFA230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x1AFA238", Offset = "0x1AFA238", VA = "0x1AFA238")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x1AFA2F4", Offset = "0x1AFA2F4", VA = "0x1AFA2F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x1AFA378", Offset = "0x1AFA378", VA = "0x1AFA378")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x1AFA38C", Offset = "0x1AFA38C", VA = "0x1AFA38C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x1AFA3A0", Offset = "0x1AFA3A0", VA = "0x1AFA3A0")]
	private bool GetLookTarget(Vector3 currentPosition, Vector3 lastPosition, out Vector3 lookAtTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x1AFA334", Offset = "0x1AFA334", VA = "0x1AFA334")]
	private void UpdateTransform()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x1AFA54C", Offset = "0x1AFA54C", VA = "0x1AFA54C")]
	private void UpdateSplinePosition()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x1AFA684", Offset = "0x1AFA684", VA = "0x1AFA684")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x1AFA7E8", Offset = "0x1AFA7E8", VA = "0x1AFA7E8")]
	private void ResetCurrentSplineIndex(PlayableDirector obj)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x1AFA7F0", Offset = "0x1AFA7F0", VA = "0x1AFA7F0")]
	public void SetPositionUpdate(bool value)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x1AFA7FC", Offset = "0x1AFA7FC", VA = "0x1AFA7FC")]
	public void UseNextAvailableSpline()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x1AFA82C", Offset = "0x1AFA82C", VA = "0x1AFA82C")]
	private void OnGamePaused(GameEvent gameEvent)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x1AFA8C0", Offset = "0x1AFA8C0", VA = "0x1AFA8C0")]
	public SplineController()
	{
	}
}
[Token(Token = "0x2000269")]
public class StatDisplay : MonoBehaviour, ILocalizeCallback
{
	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StatConfig m_statConfig;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI m_statNameText;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_valueText;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Stat m_stat;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_subscribedToInitializeEvent;

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x1B07EE8", Offset = "0x1B07EE8", VA = "0x1B07EE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x1B083F4", Offset = "0x1B083F4", VA = "0x1B083F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x1B07FDC", Offset = "0x1B07FDC", VA = "0x1B07FDC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x1B08488", Offset = "0x1B08488", VA = "0x1B08488")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x1B08638", Offset = "0x1B08638", VA = "0x1B08638")]
	private void OnStatChanged(Stat stat)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x1B08684", Offset = "0x1B08684", VA = "0x1B08684", Slot = "4")]
	public void OnLocalize()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x1B08744", Offset = "0x1B08744", VA = "0x1B08744")]
	public StatDisplay()
	{
	}
}
[Token(Token = "0x200026A")]
public class SceneLOD : MonoBehaviour
{
	[Token(Token = "0x200026B")]
	[Flags]
	public enum Level
	{
		[Token(Token = "0x4001032")]
		Culled = 1,
		[Token(Token = "0x4001033")]
		Low = 2,
		[Token(Token = "0x4001034")]
		Mixed1 = 4,
		[Token(Token = "0x4001035")]
		Mixed2 = 8,
		[Token(Token = "0x4001036")]
		Mixed3 = 0x10,
		[Token(Token = "0x4001037")]
		High = 0x20,
		[Token(Token = "0x4001038")]
		All = int.MaxValue
	}

	[Token(Token = "0x200026C")]
	public enum BakeGroup
	{
		[Token(Token = "0x400103A")]
		Ignore,
		[Token(Token = "0x400103B")]
		Group01,
		[Token(Token = "0x400103C")]
		Group02,
		[Token(Token = "0x400103D")]
		Group03,
		[Token(Token = "0x400103E")]
		Group04,
		[Token(Token = "0x400103F")]
		Group05
	}

	[Serializable]
	[Token(Token = "0x200026D")]
	public class Data
	{
		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject m_gameObject;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Level m_levels;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB69D94", Offset = "0xB69D94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB69D94", Offset = "0xB69D94")]
		public BakeGroup m_bakeGroup;

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xFDFDE8", Offset = "0xFDFDE8", VA = "0xFDFDE8")]
		public Data()
		{
		}
	}

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AreaManager.AreaType m_type;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Data[] m_lods;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Level m_current;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<AreaManager.AreaType, List<SceneLOD>> s_map;

	[Token(Token = "0x1400003B")]
	public event Action<Level> OnLODApplied
	{
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x13CC29C", Offset = "0x13CC29C", VA = "0x13CC29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DA98", Offset = "0xB7DA98")]
		add
		{
		}
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x13CC33C", Offset = "0x13CC33C", VA = "0x13CC33C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DAA8", Offset = "0xB7DAA8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x13CC3DC", Offset = "0x13CC3DC", VA = "0x13CC3DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x13CC578", Offset = "0x13CC578", VA = "0x13CC578")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x13CC628", Offset = "0x13CC628", VA = "0x13CC628")]
	public void Apply(Level level)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x13CC758", Offset = "0x13CC758", VA = "0x13CC758")]
	public static List<SceneLOD> Get(AreaManager.AreaType areaType)
	{
		return null;
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x13CBE54", Offset = "0x13CBE54", VA = "0x13CBE54")]
	public static void ApplyAll(Level level)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x13CC844", Offset = "0x13CC844", VA = "0x13CC844")]
	public static List<GameObject> GetGameObjects(Level level)
	{
		return null;
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x13CCCFC", Offset = "0x13CCCFC", VA = "0x13CCCFC")]
	public static List<GameObject> GetGameObjects(BakeGroup group)
	{
		return null;
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x13CD128", Offset = "0x13CD128", VA = "0x13CD128")]
	public SceneLOD()
	{
	}
}
[Token(Token = "0x200026E")]
public class TESTInputDetection : MonoBehaviour
{
	[Token(Token = "0x200026F")]
	public enum DetectionState
	{
		[Token(Token = "0x400104E")]
		Invalid,
		[Token(Token = "0x400104F")]
		Waiting,
		[Token(Token = "0x4001050")]
		Ready,
		[Token(Token = "0x4001051")]
		Completed
	}

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DetectionState m_currentState;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_detectionPosition;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_backPosition;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_inputObject;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer m_inputRenderer;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Plane m_detectionPlane;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Plane m_backPlane;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_inputMat;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_frontOfDetectPos;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool m_frontOfBackPos;

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x11729DC", Offset = "0x11729DC", VA = "0x11729DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x1172A2C", Offset = "0x1172A2C", VA = "0x1172A2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x1172A58", Offset = "0x1172A58", VA = "0x1172A58")]
	private void UpdatePlanes()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x1172B48", Offset = "0x1172B48", VA = "0x1172B48")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x1172BF4", Offset = "0x1172BF4", VA = "0x1172BF4")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x1172CB4", Offset = "0x1172CB4", VA = "0x1172CB4")]
	public void TryDoInput()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x1172CCC", Offset = "0x1172CCC", VA = "0x1172CCC")]
	public TESTInputDetection()
	{
	}
}
[Token(Token = "0x2000270")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5BD50", Offset = "0xB5BD50")]
public class TeleportPortal : MonoBehaviour
{
	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AreaManager.AreaType m_teleportDestination;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Game.Unlockable m_unlockableObject;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color m_unlockedColor;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color m_lockedColor;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_lockedDisplay;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_unlockedDisplay;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Renderer m_portalRenderer;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture m_portalDestinationTexture;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ISound m_onTeleportStartSound;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ISound m_onTeleportEndSound;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent m_onTeleport;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Collider m_collider;

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x15CF72C", Offset = "0x15CF72C", VA = "0x15CF72C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x15CFAB8", Offset = "0x15CFAB8", VA = "0x15CFAB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x15CFBA0", Offset = "0x15CFBA0", VA = "0x15CFBA0")]
	private void UnlockPortal()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x15CF8F8", Offset = "0x15CF8F8", VA = "0x15CF8F8")]
	private void SetUnlockStatus(bool unlocked)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x15CFBA8", Offset = "0x15CFBA8", VA = "0x15CFBA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x15CFC30", Offset = "0x15CFC30", VA = "0x15CFC30", Slot = "5")]
	public virtual void Teleport()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x15CFD10", Offset = "0x15CFD10", VA = "0x15CFD10")]
	public TeleportPortal()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x15CFD60", Offset = "0x15CFD60", VA = "0x15CFD60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DAB8", Offset = "0xB7DAB8")]
	private void <Teleport>b__17_0()
	{
	}
}
[Token(Token = "0x2000271")]
public class TeleportPortalMultiplayer : TeleportPortal, ILocalizeCallback
{
	[Token(Token = "0x2000272")]
	public enum TeleportType
	{
		[Token(Token = "0x4001065")]
		Teleport,
		[Token(Token = "0x4001066")]
		AutoConnect,
		[Token(Token = "0x4001067")]
		HostPrivate,
		[Token(Token = "0x4001068")]
		JoinPrivate,
		[Token(Token = "0x4001069")]
		Disconnect
	}

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TeleportType m_teleportType;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text m_modeText;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LocalizedString m_textPublic;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LocalizedString m_textPrivate;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string m_roomName;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private LocalizedString? m_currentLocalizedString;

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x15CFD74", Offset = "0x15CFD74", VA = "0x15CFD74", Slot = "5")]
	public override void Teleport()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x15CFF00", Offset = "0x15CFF00", VA = "0x15CFF00")]
	public void SetTeleportType(TeleportType teleportType, [Optional] string roomName)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x15D0038", Offset = "0x15D0038", VA = "0x15D0038", Slot = "6")]
	public void OnLocalize()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x15D0150", Offset = "0x15D0150", VA = "0x15D0150")]
	public TeleportPortalMultiplayer()
	{
	}
}
[Token(Token = "0x2000273")]
public class TextEffect : MonoBehaviour
{
	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro m_text;

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x15D448C", Offset = "0x15D448C", VA = "0x15D448C")]
	public void SetProperties(string text, Color colour)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x15D4508", Offset = "0x15D4508", VA = "0x15D4508")]
	public TextEffect()
	{
	}
}
[Token(Token = "0x2000274")]
public class TextEffectReposition : MonoBehaviour
{
	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<TextEffectReposition> s_textEffects;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_minDistance;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_repelForce;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_minDistanceFromPlayer;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_sqrDist;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform m_transform;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_initialPositionSetUp;

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x15D4510", Offset = "0x15D4510", VA = "0x15D4510")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x15D4560", Offset = "0x15D4560", VA = "0x15D4560")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x15D45F8", Offset = "0x15D45F8", VA = "0x15D45F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x15D4688", Offset = "0x15D4688", VA = "0x15D4688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x15D4B84", Offset = "0x15D4B84", VA = "0x15D4B84")]
	public TextEffectReposition()
	{
	}
}
[Token(Token = "0x2000275")]
public class TextEffectScaler : MonoBehaviour
{
	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BDB0", Offset = "0xB5BDB0")]
	private sealed class <WaitForNextFrameToUpdateScale>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextEffectScaler <>4__this;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xFEF980", Offset = "0xFEF980", VA = "0xFEF980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xFEF9C8", Offset = "0xFEF9C8", VA = "0xFEF9C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xFEF8E0", Offset = "0xFEF8E0", VA = "0xFEF8E0")]
		[DebuggerHidden]
		public <WaitForNextFrameToUpdateScale>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xFEF90C", Offset = "0xFEF90C", VA = "0xFEF90C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xFEF910", Offset = "0xFEF910", VA = "0xFEF910", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xFEF988", Offset = "0xFEF988", VA = "0xFEF988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RangedFloat m_textEffectSize;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RangedFloat m_rangedDistanceFromPlayer;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Ease m_ease;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 m_originalLocalScale;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PooledObject m_pooledObject;

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x15D4C2C", Offset = "0x15D4C2C", VA = "0x15D4C2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x15D4D04", Offset = "0x15D4D04", VA = "0x15D4D04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x15D4D30", Offset = "0x15D4D30", VA = "0x15D4D30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7DAC8", Offset = "0xB7DAC8")]
	private IEnumerator WaitForNextFrameToUpdateScale()
	{
		return null;
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x15D4DA8", Offset = "0x15D4DA8", VA = "0x15D4DA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x15D4E3C", Offset = "0x15D4E3C", VA = "0x15D4E3C")]
	private void UpdateScale()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x15D5008", Offset = "0x15D5008", VA = "0x15D5008")]
	private void ResetToOriginalScale()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x15D5040", Offset = "0x15D5040", VA = "0x15D5040")]
	public TextEffectScaler()
	{
	}
}
[Token(Token = "0x2000277")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5BDC0", Offset = "0xB5BDC0")]
public class TextSizeFitter : MonoBehaviour
{
	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI m_textComponent;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_autoUpdateSize;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool m_ignoreX;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool m_ignoreY;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_maxX;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_maxY;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform m_rectTransform;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 m_textSize;

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x15D61E8", Offset = "0x15D61E8", VA = "0x15D61E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x15D62E0", Offset = "0x15D62E0", VA = "0x15D62E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x15D6404", Offset = "0x15D6404", VA = "0x15D6404")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x15D6528", Offset = "0x15D6528", VA = "0x15D6528")]
	private void TextChanged(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x15D65BC", Offset = "0x15D65BC", VA = "0x15D65BC")]
	public void Fit()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x15D678C", Offset = "0x15D678C", VA = "0x15D678C")]
	public TextSizeFitter()
	{
	}
}
[Token(Token = "0x2000278")]
public class TutorialReminder : MonoBehaviour
{
	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_initialReminderDelay;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_reminderInterval;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_instantRemindOnEnable;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem m_reminderParticles;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoundCueTrigger m_reminderSoundCue;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_reminderTimer;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool m_useAudio;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool m_useParticles;

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x1158024", Offset = "0x1158024", VA = "0x1158024")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x1158168", Offset = "0x1158168", VA = "0x1158168")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x115810C", Offset = "0x115810C", VA = "0x115810C")]
	private void Remind()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x11581B8", Offset = "0x11581B8", VA = "0x11581B8")]
	public TutorialReminder()
	{
	}
}
[Token(Token = "0x2000279")]
public class TutorialSettingsMenu : MonoBehaviour
{
	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69E34", Offset = "0xB69E34")]
	[SerializeField]
	private Slider m_bowPullingRangeSlider;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle m_bowAutoReleaseToggle;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Toggle m_dashToggle;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Toggle m_blinkToggle;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Toggle m_smoothToggle;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Toggle m_flipMovementHandsToggle;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_isLocomotion;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SettingsPlayerDataObject m_settingsPlayerDataObject;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Bow.PullingRange m_originalPullingRange;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int m_originalLocomotionMode;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_originalAutoRelease;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool m_originalFlipMovementHands;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x1158230", Offset = "0x1158230", VA = "0x1158230")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x1158658", Offset = "0x1158658", VA = "0x1158658")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x1158738", Offset = "0x1158738", VA = "0x1158738")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x11587F4", Offset = "0x11587F4", VA = "0x11587F4")]
	private void OnSettingsDataChanged(object dataObject)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x11588F8", Offset = "0x11588F8", VA = "0x11588F8")]
	public void OnBlinkTeleportValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x115893C", Offset = "0x115893C", VA = "0x115893C")]
	public void OnDashTeleportValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x115894C", Offset = "0x115894C", VA = "0x115894C")]
	public void OnSmoothTeleportValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x115895C", Offset = "0x115895C", VA = "0x115895C")]
	public void OnFlipMovementHandValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x1158BE0", Offset = "0x1158BE0", VA = "0x1158BE0")]
	public void OnAutoReleaseValueChanged(bool isOn)
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x1158908", Offset = "0x1158908", VA = "0x1158908")]
	private void SetTeleportMode(Locomotion.LocomotionController.LocomotionMode teleportMode)
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x115837C", Offset = "0x115837C", VA = "0x115837C")]
	private void SetMovementToggles(Locomotion.LocomotionController.LocomotionMode teleportMode)
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x11584E8", Offset = "0x11584E8", VA = "0x11584E8")]
	private void SetFlipMovementHandToggles(bool toValue)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x115858C", Offset = "0x115858C", VA = "0x115858C")]
	private void SetPullRangeSlider(int toValue)
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x1158638", Offset = "0x1158638", VA = "0x1158638")]
	private void SetAutoReleaseToggle(bool toValue)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x1158C18", Offset = "0x1158C18", VA = "0x1158C18")]
	public void ChangeBowPullingRange(float value)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x1158348", Offset = "0x1158348", VA = "0x1158348")]
	private void CacheOriginalSettingsValues(SettingsPlayerDataObject playerDataObject)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x1158994", Offset = "0x1158994", VA = "0x1158994")]
	public void EmitSettingsChangedEvent()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x1158C68", Offset = "0x1158C68", VA = "0x1158C68")]
	private bool HasSettingChanged(int original, int current)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x1158C74", Offset = "0x1158C74", VA = "0x1158C74")]
	private bool HasSettingChanged(bool original, bool current)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x1158C80", Offset = "0x1158C80", VA = "0x1158C80")]
	public TutorialSettingsMenu()
	{
	}
}
[Token(Token = "0x200027A")]
public class InventorySlotItemDisplay : MonoBehaviour
{
	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InventoryPlayerDataObject.InventorySlot m_inventorySlot;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private InventoryPlayerDataObject.ItemType m_itemType;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image m_itemImage;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Localize m_localize;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button m_button;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Armory m_armory;

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x100DBF8", Offset = "0x100DBF8", VA = "0x100DBF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x100DDF8", Offset = "0x100DDF8", VA = "0x100DDF8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x100DF04", Offset = "0x100DF04", VA = "0x100DF04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x100DF08", Offset = "0x100DF08", VA = "0x100DF08")]
	private void UpdateSelectedItem(object obj)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x100E1E0", Offset = "0x100E1E0", VA = "0x100E1E0")]
	private void ScrollToThisItem()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x100E28C", Offset = "0x100E28C", VA = "0x100E28C")]
	private void OnPadOpened()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x100E290", Offset = "0x100E290", VA = "0x100E290")]
	public InventorySlotItemDisplay()
	{
	}
}
[Token(Token = "0x200027B")]
public class InventorySlotSelection : MonoBehaviour, ILocalizeCallback
{
	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button m_button;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image m_inventorySlotImage;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI m_text;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sprite m_inactiveImage;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Sprite m_activeImage;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_isSetup;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool m_updateSelectionAfterSetup;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool m_isSelected;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private InventoryPlayerDataObject.InventorySlot m_inventorySlot;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ItemManager.InventorySlotInfo m_inventorySlotInfo;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_twoHanded;

	[Token(Token = "0x170001D9")]
	public InventoryPlayerDataObject.InventorySlot InventorySlot
	{
		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x100E2A0", Offset = "0x100E2A0", VA = "0x100E2A0")]
		get
		{
			return default(InventoryPlayerDataObject.InventorySlot);
		}
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x100E2A8", Offset = "0x100E2A8", VA = "0x100E2A8")]
	public void SetUp(InventoryPlayerDataObject.InventorySlot inventorySlot, bool twoHanded)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x100E880", Offset = "0x100E880", VA = "0x100E880")]
	public void UpdateSelectedState(bool isSelected)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x100E8FC", Offset = "0x100E8FC", VA = "0x100E8FC")]
	private void DelayedSetup()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x100E828", Offset = "0x100E828", VA = "0x100E828")]
	private void UpdateSlotText()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x100E9F4", Offset = "0x100E9F4", VA = "0x100E9F4", Slot = "4")]
	public void OnLocalize()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x100E9F8", Offset = "0x100E9F8", VA = "0x100E9F8")]
	public InventorySlotSelection()
	{
	}
}
[Token(Token = "0x200027C")]
public class LanguageButton : MonoBehaviour
{
	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PadSettingsMenu m_padSettingsMenu;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle m_toggle;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string m_language;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent m_onLanguageChanged;

	[Token(Token = "0x170001DA")]
	public string Language
	{
		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x101D760", Offset = "0x101D760", VA = "0x101D760")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DB")]
	public bool IsOn
	{
		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x101D768", Offset = "0x101D768", VA = "0x101D768")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x101D784", Offset = "0x101D784", VA = "0x101D784")]
		set
		{
		}
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x101D7A4", Offset = "0x101D7A4", VA = "0x101D7A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x101D870", Offset = "0x101D870", VA = "0x101D870")]
	public void SetIsOnWithoutNotify(bool value)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x101D890", Offset = "0x101D890", VA = "0x101D890")]
	public void ApplyLanguage(bool isOn)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x101DA90", Offset = "0x101DA90", VA = "0x101DA90")]
	public LanguageButton()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x101DA98", Offset = "0x101DA98", VA = "0x101DA98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DB78", Offset = "0xB7DB78")]
	private void <ApplyLanguage>b__11_0()
	{
	}
}
[Token(Token = "0x200027D")]
public class TextMeshGroup : MonoBehaviour
{
	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TextMeshPro> m_textMeshes;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<MeshRenderer> m_meshRenderers;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB69FB0", Offset = "0xB69FB0")]
	private bool m_disableAfterFirstInitialize;

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x15D50BC", Offset = "0x15D50BC", VA = "0x15D50BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x15D50D0", Offset = "0x15D50D0", VA = "0x15D50D0")]
	public void SetTextVisualsActive(bool isActive)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x15D51FC", Offset = "0x15D51FC", VA = "0x15D51FC")]
	public void GetAllChildText()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x15D539C", Offset = "0x15D539C", VA = "0x15D539C")]
	public TextMeshGroup()
	{
	}
}
[Token(Token = "0x200027E")]
public class TextMeshProCustom : TextMeshPro
{
	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x759")]
	public bool m_rebuildOnlyOnce;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75A")]
	private bool m_rebuiltOnce;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x15D546C", Offset = "0x15D546C", VA = "0x15D546C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x15D5480", Offset = "0x15D5480", VA = "0x15D5480")]
	public void CallAwake()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x15D548C", Offset = "0x15D548C", VA = "0x15D548C", Slot = "26")]
	public override void SetAllDirty()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x15D54CC", Offset = "0x15D54CC", VA = "0x15D54CC")]
	public void ForceAllDirty()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x15D54F8", Offset = "0x15D54F8", VA = "0x15D54F8")]
	public TextMeshProCustom()
	{
	}
}
[Token(Token = "0x200027F")]
public class TextMeshProUGUICustom : TextMeshProUGUI
{
	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
	public bool m_rebuildOnlyOnce;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x791")]
	private bool m_rebuiltOnce;

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x15D568C", Offset = "0x15D568C", VA = "0x15D568C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x15D5680", Offset = "0x15D5680", VA = "0x15D5680")]
	public void CallAwake()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x15D56A0", Offset = "0x15D56A0", VA = "0x15D56A0", Slot = "26")]
	public override void SetAllDirty()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x15D56E0", Offset = "0x15D56E0", VA = "0x15D56E0", Slot = "142")]
	protected override void GenerateTextMesh()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x15D57F8", Offset = "0x15D57F8", VA = "0x15D57F8")]
	public TextMeshProUGUICustom()
	{
	}
}
[Token(Token = "0x2000280")]
public class TextValueReplacer : MonoBehaviour, ILocalizationParamsManager
{
	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro m_text;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI m_textUI;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_replaceKey;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_replaceValue;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_replaceOnLocalize;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_replaceOnAwake;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool m_replaceOnEnable;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_textFormat;

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x15D6794", Offset = "0x15D6794", VA = "0x15D6794")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x15D68C0", Offset = "0x15D68C0", VA = "0x15D68C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x15D69BC", Offset = "0x15D69BC", VA = "0x15D69BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x15D67A4", Offset = "0x15D67A4", VA = "0x15D67A4")]
	public void Replace()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x15D6A5C", Offset = "0x15D6A5C", VA = "0x15D6A5C", Slot = "5")]
	public virtual string GetParameterValue(string ParamName)
	{
		return null;
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x15D6A9C", Offset = "0x15D6A9C", VA = "0x15D6A9C")]
	public TextValueReplacer()
	{
	}
}
[Token(Token = "0x2000281")]
public class TintChildren : NonDrawingGraphic
{
	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color m_cachedColor;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LinkedList<CanvasRenderer> m_childrenCanvasRenderers;

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x15D6AA4", Offset = "0x15D6AA4", VA = "0x15D6AA4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x15D6C50", Offset = "0x15D6C50", VA = "0x15D6C50", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x15D6D0C", Offset = "0x15D6D0C", VA = "0x15D6D0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x15D6D9C", Offset = "0x15D6D9C", VA = "0x15D6D9C")]
	private void OnTransformChildrenChanged()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x15D6ACC", Offset = "0x15D6ACC", VA = "0x15D6ACC")]
	private void CacheChildren()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x15D6DA0", Offset = "0x15D6DA0", VA = "0x15D6DA0")]
	public void Register(CanvasRenderer canvasRenderer)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x15D6F00", Offset = "0x15D6F00", VA = "0x15D6F00")]
	private void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x15D6C80", Offset = "0x15D6C80", VA = "0x15D6C80")]
	public void SetColor(Color colour)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x15D70A4", Offset = "0x15D70A4", VA = "0x15D70A4")]
	public TintChildren()
	{
	}
}
[Token(Token = "0x2000282")]
public class UIGradeReward : MonoBehaviour
{
	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI m_grade;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI m_amount;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image m_image;

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x115FFB8", Offset = "0x115FFB8", VA = "0x115FFB8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x115FFBC", Offset = "0x115FFBC", VA = "0x115FFBC")]
	public UIGradeReward()
	{
	}
}
[Token(Token = "0x2000283")]
public class UILayoutEnabler : MonoBehaviour
{
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BE20", Offset = "0xB5BE20")]
	private sealed class <SetEnableLayoutAfterDelay>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UILayoutEnabler <>4__this;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool value;

		[Token(Token = "0x170001DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x1B8E5AC", Offset = "0x1B8E5AC", VA = "0x1B8E5AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x1B8E5F4", Offset = "0x1B8E5F4", VA = "0x1B8E5F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1B8E4B8", Offset = "0x1B8E4B8", VA = "0x1B8E4B8")]
		[DebuggerHidden]
		public <SetEnableLayoutAfterDelay>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1B8E4E4", Offset = "0x1B8E4E4", VA = "0x1B8E4E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1B8E4E8", Offset = "0x1B8E4E8", VA = "0x1B8E4E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1B8E5B4", Offset = "0x1B8E5B4", VA = "0x1B8E5B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB69FFC", Offset = "0xB69FFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB69FFC", Offset = "0xB69FFC")]
	[SerializeField]
	private bool m_setValueOnEnable;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_valueOnEnable;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_delay;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A08C", Offset = "0xB6A08C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A08C", Offset = "0xB6A08C")]
	[SerializeField]
	private bool m_setValueOnDisable;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool m_valueOnDisable;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LayoutGroup m_layoutGroup;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ContentSizeFitter m_contentSizeFitter;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine m_disableCountdown;

	[Token(Token = "0x170001DC")]
	public float Delay
	{
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x11604A0", Offset = "0x11604A0", VA = "0x11604A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x11604A8", Offset = "0x11604A8", VA = "0x11604A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x116051C", Offset = "0x116051C", VA = "0x116051C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x11606A8", Offset = "0x11606A8", VA = "0x11606A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x11606C0", Offset = "0x11606C0", VA = "0x11606C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7DB88", Offset = "0xB7DB88")]
	private IEnumerator SetEnableLayoutAfterDelay(bool value, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x1160534", Offset = "0x1160534", VA = "0x1160534")]
	public void SetLayoutGroupEnable(bool value, float delay = 0f)
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x116075C", Offset = "0x116075C", VA = "0x116075C")]
	public void EnableLayout()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x1160768", Offset = "0x1160768", VA = "0x1160768")]
	public void DisableLayoutAfterDelay(float delay = 0f)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x1160770", Offset = "0x1160770", VA = "0x1160770")]
	public void EnableThenDisableLayoutAfterDelay(float delay = 0f)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x11607B0", Offset = "0x11607B0", VA = "0x11607B0")]
	public UILayoutEnabler()
	{
	}
}
[Token(Token = "0x2000285")]
public class UISimpleGameScoreboard : MonoBehaviour
{
	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_ID;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameRules m_gameRules;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text m_timerText;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text m_currentScore;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text m_previousBestTime;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_isTimed;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool m_timeIsScore;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_time;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_lastGameTimerSeconds;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_lastGameScore;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_hasTimerStarted;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_timeElapsed;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_timeRemaining;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_interactionStartTime;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_score;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEvent m_onTimerStart;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private UnityEvent m_onTimedGameEnd;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x122449C", Offset = "0x122449C", VA = "0x122449C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x1224780", Offset = "0x1224780", VA = "0x1224780")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x1224864", Offset = "0x1224864", VA = "0x1224864")]
	public void AddScore()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x12248E4", Offset = "0x12248E4", VA = "0x12248E4")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x1224854", Offset = "0x1224854", VA = "0x1224854")]
	public void StopTimer(bool gameEnd)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x1224E30", Offset = "0x1224E30", VA = "0x1224E30")]
	public void AbortGame()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x122466C", Offset = "0x122466C", VA = "0x122466C")]
	private void UpdateGameTimer(int seconds)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x1224A7C", Offset = "0x1224A7C", VA = "0x1224A7C")]
	private void GameOver(bool gameCompleted, GameEventWorldInteractionComplete.InteractionState completionState)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x1224E48", Offset = "0x1224E48", VA = "0x1224E48")]
	public void FoundInteraction()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x1224F24", Offset = "0x1224F24", VA = "0x1224F24")]
	public UISimpleGameScoreboard()
	{
	}
}
[Token(Token = "0x2000286")]
public class BladeAttachment : MonoBehaviour
{
	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_attachmentTransform;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 m_attachmentLocalPosition;

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x14590DC", Offset = "0x14590DC", VA = "0x14590DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x1459104", Offset = "0x1459104", VA = "0x1459104")]
	public BladeAttachment()
	{
	}
}
[Token(Token = "0x2000287")]
public class CameraClippingPlaneModifier : MonoBehaviour
{
	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_modifiedNearClippingPlane;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_modifiedFarClippingPlane;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_defaultNearClippingPlane;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_defaultFarClippingPlane;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_isModificationActive;

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x11A3064", Offset = "0x11A3064", VA = "0x11A3064")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x11A3118", Offset = "0x11A3118", VA = "0x11A3118")]
	public void SetModificationActive(bool isActive)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x11A320C", Offset = "0x11A320C", VA = "0x11A320C")]
	public CameraClippingPlaneModifier()
	{
	}
}
[Token(Token = "0x2000288")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x2000289")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BE30", Offset = "0xB5BE30")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FPSCounter <>4__this;

		[Token(Token = "0x170001DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xF96AD4", Offset = "0xF96AD4", VA = "0xF96AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xF96B1C", Offset = "0xF96B1C", VA = "0xF96B1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xF96894", Offset = "0xF96894", VA = "0xF96894")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xF968C0", Offset = "0xF968C0", VA = "0xF968C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xF968C4", Offset = "0xF968C4", VA = "0xF968C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xF96ADC", Offset = "0xF96ADC", VA = "0xF96ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string m_label;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_count;

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x10F8808", Offset = "0x10F8808", VA = "0x10F8808")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7DC38", Offset = "0xB7DC38")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x10F8880", Offset = "0x10F8880", VA = "0x10F8880")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x10F8940", Offset = "0x10F8940", VA = "0x10F8940")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x200028A")]
public class FollowRotation : MonoBehaviour
{
	[Token(Token = "0x200028B")]
	public enum FollowDirection
	{
		[Token(Token = "0x40010F7")]
		Forward,
		[Token(Token = "0x40010F8")]
		Backward,
		[Token(Token = "0x40010F9")]
		Up,
		[Token(Token = "0x40010FA")]
		Down,
		[Token(Token = "0x40010FB")]
		Right,
		[Token(Token = "0x40010FC")]
		Left
	}

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_followTarget;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FollowDirection m_targetDirection;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public FollowDirection m_thisDirection;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A14C", Offset = "0xB6A14C")]
	public bool m_overrideRotationAxis;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 m_overrides;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A184", Offset = "0xB6A184")]
	public bool m_useDamping;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_dampingTime;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_targetVector;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 m_dampVelocity;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_targetResultVector;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_xDampVelocity;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_yDampVelocity;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_zDampVelocity;

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x10FC714", Offset = "0x10FC714", VA = "0x10FC714")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x10FC8FC", Offset = "0x10FC8FC", VA = "0x10FC8FC")]
	private Vector3 GetTargetVector(Vector3 originalDir)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x10FCA0C", Offset = "0x10FCA0C", VA = "0x10FCA0C")]
	public FollowRotation()
	{
	}
}
[Token(Token = "0x200028C")]
public class FontReplacer : MonoBehaviour
{
	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_parentObjectToReplace;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset m_fontToReplace;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset m_newFont;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Material> m_materialsToReplace;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Material> m_newMaterials;

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x10FCF24", Offset = "0x10FCF24", VA = "0x10FCF24")]
	public void ReplaceFonts()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x10FD168", Offset = "0x10FD168", VA = "0x10FD168")]
	private void ReplaceText(TextMeshProUGUI text)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x10FD2FC", Offset = "0x10FD2FC", VA = "0x10FD2FC")]
	private void ReplaceText(TextMeshPro text)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x10FD490", Offset = "0x10FD490", VA = "0x10FD490")]
	public FontReplacer()
	{
	}
}
[Token(Token = "0x200028D")]
public class FruitBounceSoundIgnore : MonoBehaviour
{
	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly HashSet<int> s_colliderToBouncedSoundIgnored;

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x14BCA84", Offset = "0x14BCA84", VA = "0x14BCA84")]
	public static bool CanPlayBounceSound(GameObject collisionGameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x14BCB34", Offset = "0x14BCB34", VA = "0x14BCB34")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x14BCBE0", Offset = "0x14BCBE0", VA = "0x14BCBE0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x14BCC8C", Offset = "0x14BCC8C", VA = "0x14BCC8C")]
	public FruitBounceSoundIgnore()
	{
	}
}
[Token(Token = "0x200028E")]
public class LocalizationChecker : MonoBehaviour
{
	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x10C7E34", Offset = "0x10C7E34", VA = "0x10C7E34")]
	public void CheckAllTextForLocalization()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x10C8254", Offset = "0x10C8254", VA = "0x10C8254")]
	private string GetPath(Transform trans)
	{
		return null;
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x10C834C", Offset = "0x10C834C", VA = "0x10C834C")]
	public LocalizationChecker()
	{
	}
}
[Token(Token = "0x200028F")]
public class LocalizationHelper : MonoBehaviour
{
	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_callbackCollectionDelay;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ILocalizeCallback> m_cachedCallbacks;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_subscribedToLoadEvent;

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x10C8354", Offset = "0x10C8354", VA = "0x10C8354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x10C89F8", Offset = "0x10C89F8", VA = "0x10C89F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x10C8CF0", Offset = "0x10C8CF0", VA = "0x10C8CF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x10C8694", Offset = "0x10C8694", VA = "0x10C8694")]
	private void FindAllCallbacks()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x10C8CF4", Offset = "0x10C8CF4", VA = "0x10C8CF4")]
	private void TriggerOnLocalize()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x10C8E78", Offset = "0x10C8E78", VA = "0x10C8E78")]
	private void OnSceneLoad(Scene scene, LoadSceneMode loadMode)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x10C8EE8", Offset = "0x10C8EE8", VA = "0x10C8EE8")]
	private void ChangeLanguage(string keyPressed, string toLanguage)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x10C91E0", Offset = "0x10C91E0", VA = "0x10C91E0")]
	public LocalizationHelper()
	{
	}
}
[Token(Token = "0x2000290")]
public class OffsetOnEnable : MonoBehaviour
{
	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RangedVector3 m_randomOffset;

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x184AA7C", Offset = "0x184AA7C", VA = "0x184AA7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x184AAF4", Offset = "0x184AAF4", VA = "0x184AAF4")]
	public OffsetOnEnable()
	{
	}
}
[Token(Token = "0x2000291")]
public class OppositeGameObjectEnabler : MonoBehaviour
{
	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_oppositeGameObject;

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x184B310", Offset = "0x184B310", VA = "0x184B310")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x184B330", Offset = "0x184B330", VA = "0x184B330")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x184B350", Offset = "0x184B350", VA = "0x184B350")]
	public OppositeGameObjectEnabler()
	{
	}
}
[Token(Token = "0x2000292")]
public class SimpleCanvasInitializer : MonoBehaviour
{
	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Canvas m_canvas;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_disableDelayAfterInitialize;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_delayTimer;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_waitingToDisable;

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xF0C990", Offset = "0xF0C990", VA = "0xF0C990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xF0C9D4", Offset = "0xF0C9D4", VA = "0xF0C9D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xF0CA8C", Offset = "0xF0CA8C", VA = "0xF0CA8C")]
	public SimpleCanvasInitializer()
	{
	}
}
[Token(Token = "0x2000293")]
public class TextDifferenceDumper : MonoBehaviour
{
	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset m_textToAnalyze;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset m_textToIgnore;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_fileName;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<char> m_charsToIgnore;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<char> m_charDifferences;

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x15D4064", Offset = "0x15D4064", VA = "0x15D4064")]
	public void DumpDifferences()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x15D43B8", Offset = "0x15D43B8", VA = "0x15D43B8")]
	public TextDifferenceDumper()
	{
	}
}
[Token(Token = "0x2000294")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5BE40", Offset = "0xB5BE40")]
public class UIToggleManualEvents : MonoBehaviour
{
	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Toggle m_toggle;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool m_useUpdateToTrackEvents;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent m_onToggleOn;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent m_onToggleOff;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_previousToggleValue;

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x1224FE4", Offset = "0x1224FE4", VA = "0x1224FE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x12250C0", Offset = "0x12250C0", VA = "0x12250C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x122519C", Offset = "0x122519C", VA = "0x122519C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x1225210", Offset = "0x1225210", VA = "0x1225210")]
	private void OnValueChanged(bool newValue)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x1225230", Offset = "0x1225230", VA = "0x1225230")]
	public UIToggleManualEvents()
	{
	}
}
[Token(Token = "0x2000295")]
public static class Vector2Extension
{
	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x1235088", Offset = "0x1235088", VA = "0x1235088")]
	public static Vector2 Rotate(this Vector2 v, float degrees)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x2000296")]
public class CumulativeHitInteraction : MonoBehaviour
{
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BEB0", Offset = "0xB5BEB0")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EnvironmentHit environmentHit;

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xF8FC90", Offset = "0xF8FC90", VA = "0xF8FC90")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xF8FC98", Offset = "0xF8FC98", VA = "0xF8FC98")]
		internal bool <AddInteractedObject>b__0(EnvironmentHit x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000298")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BEC0", Offset = "0xB5BEC0")]
	private sealed class <Countdown>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CumulativeHitInteraction <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xF8FE00", Offset = "0xF8FE00", VA = "0xF8FE00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xF8FE48", Offset = "0xF8FE48", VA = "0xF8FE48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xF8FD10", Offset = "0xF8FD10", VA = "0xF8FD10")]
		[DebuggerHidden]
		public <Countdown>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xF8FD3C", Offset = "0xF8FD3C", VA = "0xF8FD3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xF8FD40", Offset = "0xF8FD40", VA = "0xF8FD40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xF8FE08", Offset = "0xF8FE08", VA = "0xF8FE08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_ID;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameRules m_gameRules;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_saveCompletion;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<EnvironmentHit> m_interactionObjects;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_isTimed;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_isSequencePuzzle;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool m_doesShuffle;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_delay;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WorldInteractionEffects m_interactionSoundEffects;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> m_objectsToActivate;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_interactionStarted;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PooledObject m_incorrectSequenceHitEffect;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PooledObject m_correctSequenceHitEffect;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_numberRequired;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int m_numberActivated;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_interactionStartTime;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly List<EnvironmentHit> m_interactedObjects;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine m_countdownRoutine;

	[Token(Token = "0x170001E1")]
	public int NumberRequired
	{
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x11AAC28", Offset = "0x11AAC28", VA = "0x11AAC28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x11AAC30", Offset = "0x11AAC30", VA = "0x11AAC30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x11AAF14", Offset = "0x11AAF14", VA = "0x11AAF14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x11AACF4", Offset = "0x11AACF4", VA = "0x11AACF4")]
	private void ShuffleIfNeeded()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x11AAD10", Offset = "0x11AAD10", VA = "0x11AAD10")]
	private void LoadIfNeeded()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x11AB2E8", Offset = "0x11AB2E8", VA = "0x11AB2E8")]
	private void PlaySound(ISound sound, Vector3 position)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x11AB3E0", Offset = "0x11AB3E0", VA = "0x11AB3E0")]
	public void AddInteractedObject(EnvironmentHit environmentHit)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x11ABDF0", Offset = "0x11ABDF0", VA = "0x11ABDF0")]
	public void FoundInteraction()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x11ABBE8", Offset = "0x11ABBE8", VA = "0x11ABBE8")]
	private void CompleteIfFinished()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x11ABB70", Offset = "0x11ABB70", VA = "0x11ABB70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7DCF8", Offset = "0xB7DCF8")]
	private IEnumerator Countdown()
	{
		return null;
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x11AC114", Offset = "0x11AC114", VA = "0x11AC114")]
	private void ResetInteraction()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x11ABA8C", Offset = "0x11ABA8C", VA = "0x11ABA8C")]
	private void FailSequence()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x11AB030", Offset = "0x11AB030", VA = "0x11AB030")]
	private void ShuffleSequence(IList list)
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x11AB960", Offset = "0x11AB960", VA = "0x11AB960")]
	private void SendStartAnalytics()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x11ABECC", Offset = "0x11ABECC", VA = "0x11ABECC")]
	private void CompleteInteraction(GameEventWorldInteractionComplete.InteractionState completionState)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x11AC174", Offset = "0x11AC174", VA = "0x11AC174")]
	public CumulativeHitInteraction()
	{
	}
}
[Token(Token = "0x2000299")]
public class ADH
{
	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_angle;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float m_depth;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_height;

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xF97284", Offset = "0xF97284", VA = "0xF97284")]
	public ADH()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xF972B0", Offset = "0xF972B0", VA = "0xF972B0")]
	public Vector3 ConvertToPosition(Transform referenceTransform)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200029A")]
public class BasketEnemy : MonoBehaviour
{
	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ADH m_anglePosition;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody m_baseBody;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody m_followBody;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_cannonTip;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_acceleration;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_rotateSpeed;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_shotVelocity;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_explosionBonusPoints;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_explosionPFX;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string m_bonusPFX;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_shotFX;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_shotBombFX;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_maxSteamFX;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_maxSteamDelay;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ISound m_shotWindUp;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ISound m_shotRelease;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ISound m_flinchSound;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ISound m_collisionSound;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ISound m_enemySpawnSound;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject m_head;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected FlyingEnemyManager m_enemyManager;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator m_anim;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float m_timeTillMove;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float m_moveSpeed;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float m_moveSpeedShooting;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float m_actualVel;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float m_idleMovementTimer;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float m_evasionForce;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool m_isMoving;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool m_isShooting;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SpawnableFruit m_fruitSpawnable;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SpawnableFruit m_bombSpawnable;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float m_maxWidthShot;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float m_timerBetweenShots;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float m_timerShotDelay;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float m_timerSafetyMode;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float m_afterShootingDelay;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int m_shotsLeftInBurst;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int m_wavesTillNextBomb;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Vector2 m_minMaxWavesTillNextBomb;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	protected Vector2 m_minMaxFruitCount;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool m_isFirstShot;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 m_tagetFirstPos;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 m_tagetLastPos;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 m_targetShotUnitVec;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector2 m_minMaxShotsInBurst;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector2 m_minMaxShotDelay;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector2 m_minMaxSafetyMode;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float m_minShotDelayOnOverlap;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float m_overlapDistance;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int m_totalInBurst;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float m_firstShotExclusionPercentage;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private MultipleParticlePlays[] m_allSteamFX;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int m_currentWaveID;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float m_shotSpreadWidth;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float m_randCurveOffset;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float m_collisionPlayDelay;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float m_collisionPlayDelayTimer;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float m_disruptTime;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float m_disrupt;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float m_xSpeed;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float m_ySpeed;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float m_zSpeed;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float m_shotRecoil;

	[Token(Token = "0x1400003C")]
	public static event Action<BasketEnemy> OnBasketEnemyActivated
	{
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x144FA10", Offset = "0x144FA10", VA = "0x144FA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DDA8", Offset = "0xB7DDA8")]
		add
		{
		}
		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x144FACC", Offset = "0x144FACC", VA = "0x144FACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DDB8", Offset = "0xB7DDB8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400003D")]
	public static event Action<BasketEnemy> OnBasketEnemyDeactivated
	{
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x144FB88", Offset = "0x144FB88", VA = "0x144FB88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DDC8", Offset = "0xB7DDC8")]
		add
		{
		}
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x144FC48", Offset = "0x144FC48", VA = "0x144FC48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DDD8", Offset = "0xB7DDD8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x144FD08", Offset = "0x144FD08", VA = "0x144FD08")]
	public void SetMoveSpeed(float speed)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x144FD18", Offset = "0x144FD18", VA = "0x144FD18")]
	public void SetIdleTime(float time)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x144FD20", Offset = "0x144FD20", VA = "0x144FD20")]
	public void SetFruitWavesCount(float min, float max)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x144FD2C", Offset = "0x144FD2C", VA = "0x144FD2C")]
	public void SetBombWavesDelay(float min, float max)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x144FD34", Offset = "0x144FD34", VA = "0x144FD34")]
	public void SetSafetyModeDelay(float min, float max)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x144FD40", Offset = "0x144FD40", VA = "0x144FD40")]
	public void Initialise(FlyingEnemyManager man)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x1450360", Offset = "0x1450360", VA = "0x1450360")]
	private float GetYDirectionAngleTo(Vector3 from, Vector3 to)
	{
		return default(float);
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x1450214", Offset = "0x1450214", VA = "0x1450214")]
	private void SnapToDestination()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1450388", Offset = "0x1450388", VA = "0x1450388")]
	private void Move()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x145063C", Offset = "0x145063C", VA = "0x145063C")]
	private Vector3 GetEvasionOffset(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x14508F4", Offset = "0x14508F4", VA = "0x14508F4")]
	private void Idle()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1450BB4", Offset = "0x1450BB4", VA = "0x1450BB4")]
	public Vector3 GetShotVector(Vector3 from, Vector3 target, float v, float upThrust = 0f, bool local = false, bool useMin = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x14501B8", Offset = "0x14501B8", VA = "0x14501B8")]
	private void SetNextBombsWave()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x1450FB0", Offset = "0x1450FB0", VA = "0x1450FB0")]
	public void WarmUpCannon()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x1450FBC", Offset = "0x1450FBC", VA = "0x1450FBC")]
	public void CoolDownCannon()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x1450FC4", Offset = "0x1450FC4", VA = "0x1450FC4")]
	private bool IsFriendlyInTheWayOfTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x14512C4", Offset = "0x14512C4", VA = "0x14512C4")]
	public void StartShooting()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x14519A0", Offset = "0x14519A0", VA = "0x14519A0")]
	public void StopShooting()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x1451A88", Offset = "0x1451A88", VA = "0x1451A88")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x145209C", Offset = "0x145209C", VA = "0x145209C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x1451948", Offset = "0x1451948", VA = "0x1451948")]
	private bool CanShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x145211C", Offset = "0x145211C", VA = "0x145211C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x1452464", Offset = "0x1452464", VA = "0x1452464")]
	public void Explode(Vector3 position)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x14524E0", Offset = "0x14524E0", VA = "0x14524E0")]
	public void Disorientate()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x14525B0", Offset = "0x14525B0", VA = "0x14525B0")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x14526D8", Offset = "0x14526D8", VA = "0x14526D8")]
	public BasketEnemy()
	{
	}
}
[Token(Token = "0x200029B")]
public class FlyingEnemyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200029C")]
	public class EnemyCount
	{
		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int startScore;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int enemyCount;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int enemyExtents;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int enemySpread;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 m_minMaxFruitCount;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 m_minMaxBombCount;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 m_minMaxShotSafetyTime;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 m_minMaxWaitTime;

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xFC8CEC", Offset = "0xFC8CEC", VA = "0xFC8CEC")]
		public EnemyCount()
		{
		}
	}

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BasketEnemy m_enemyPrefab;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BasketEnemy> m_allEnemies;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RangedFloat m_angleRange;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RangedFloat m_depthRange;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RangedFloat m_heightRange;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 m_minMaxMoveSpeed;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_maxEnemyArc;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_exclusionColParent;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BoxCollider[] m_allExclusionCols;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Queue<int> m_destroyedEnemyScores;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_currentEnemyIndex;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int m_rebirthScoreAmount;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_timeBetweenShots;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected float m_timeSinceLastShot;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected int m_score;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<EnemyCount> m_enemyCount;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_medianAngle;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_medianAngleSpeed;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_medianAngleTimer;

	[Token(Token = "0x170001E4")]
	public int Score
	{
		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x10FAE1C", Offset = "0x10FAE1C", VA = "0x10FAE1C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x10FAE24", Offset = "0x10FAE24", VA = "0x10FAE24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x10FB0F4", Offset = "0x10FB0F4", VA = "0x10FB0F4")]
	public bool CanShoot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x10FB104", Offset = "0x10FB104", VA = "0x10FB104")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x10FB10C", Offset = "0x10FB10C", VA = "0x10FB10C")]
	private bool IsPointInExclusionZone(Vector3 pos, BasketEnemy enemy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x10FB41C", Offset = "0x10FB41C", VA = "0x10FB41C")]
	public void SetNewRandomPosition(BasketEnemy curEnemy)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x10FB748", Offset = "0x10FB748", VA = "0x10FB748")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x10FB8A0", Offset = "0x10FB8A0", VA = "0x10FB8A0")]
	public void AddEnemy()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x10FBA30", Offset = "0x10FBA30", VA = "0x10FBA30")]
	public void DestroyEnemy(BasketEnemy enemy)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x10FBAFC", Offset = "0x10FBAFC", VA = "0x10FBAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x10FBCE4", Offset = "0x10FBCE4", VA = "0x10FBCE4")]
	public void OnScoreChanged(int score)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x10FAF2C", Offset = "0x10FAF2C", VA = "0x10FAF2C")]
	public void SetEnemyCountData(EnemyCount en)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x10FBE54", Offset = "0x10FBE54", VA = "0x10FBE54")]
	public void OnGameover()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x10FC04C", Offset = "0x10FC04C", VA = "0x10FC04C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x10FC558", Offset = "0x10FC558", VA = "0x10FC558")]
	public FlyingEnemyManager()
	{
	}
}
[Token(Token = "0x200029D")]
public class MultipleParticlePlays : MonoBehaviour
{
	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] m_allsystems;

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xF21B04", Offset = "0xF21B04", VA = "0xF21B04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xF21B60", Offset = "0xF21B60", VA = "0xF21B60")]
	public void SetDelay(float delay)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xF21C10", Offset = "0xF21C10", VA = "0xF21C10")]
	public void Play()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xF21C7C", Offset = "0xF21C7C", VA = "0xF21C7C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xF21CE8", Offset = "0xF21CE8", VA = "0xF21CE8")]
	public MultipleParticlePlays()
	{
	}
}
[Token(Token = "0x200029E")]
public class StreakManagerLegacy : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200029F")]
	public class Streak
	{
		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_streakName;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RangedInt m_streakRequirement;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_scoreMultiplier;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ISound m_streakSound;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A27C", Offset = "0xB6A27C")]
		public ParticleSystem m_particleEffects;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color m_overlayColour;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A2B4", Offset = "0xB6A2B4")]
		public Utils.TextMeshColourData m_textColourData;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material m_streakTitleTextMaterial;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6A2EC", Offset = "0xB6A2EC")]
		private bool <IsDoingEffects>k__BackingField;

		[Token(Token = "0x170001EB")]
		public bool IsDoingEffects
		{
			[Token(Token = "0x6000E60")]
			[Address(RVA = "0xFEDBD8", Offset = "0xFEDBD8", VA = "0xFEDBD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DEA8", Offset = "0xB7DEA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E61")]
			[Address(RVA = "0xFEDBE0", Offset = "0xFEDBE0", VA = "0xFEDBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DEB8", Offset = "0xB7DEB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xFEDBEC", Offset = "0xFEDBEC", VA = "0xFEDBEC")]
		public void DoStreakEffects()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xFEDC98", Offset = "0xFEDC98", VA = "0xFEDC98")]
		public void PlayParticleEffects()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xFEDB70", Offset = "0xFEDB70", VA = "0xFEDB70")]
		public void StopStreakEffects()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xFEDCD0", Offset = "0xFEDCD0", VA = "0xFEDCD0")]
		public Streak()
		{
		}
	}

	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BED0", Offset = "0xB5BED0")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int currentStreak;

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xFEDBAC", Offset = "0xFEDBAC", VA = "0xFEDBAC")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xFEDBB4", Offset = "0xFEDBB4", VA = "0xFEDBB4")]
		internal bool <StartNewStreakLevel>b__0(Streak x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BEE0", Offset = "0xB5BEE0")]
	private sealed class <>c
	{
		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Streak> <>9__38_0;

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xFEDB50", Offset = "0xFEDB50", VA = "0xFEDB50")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xFEDB58", Offset = "0xFEDB58", VA = "0xFEDB58")]
		internal void <StreakLostCleanup>b__38_0(Streak x)
		{
		}
	}

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ISound m_streakBrokenSound;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Streak> m_streakInfo;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Streak m_currentStreakInfo;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_streakPointTally;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6A21C", Offset = "0xB6A21C")]
	private int <CurrentStreakIndex>k__BackingField;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6A22C", Offset = "0xB6A22C")]
	private int <BestStreak>k__BackingField;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6A23C", Offset = "0xB6A23C")]
	private int <CurrentStreak>k__BackingField;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6A24C", Offset = "0xB6A24C")]
	private int <CurrentScoreMultiplier>k__BackingField;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6A25C", Offset = "0xB6A25C")]
	private bool <IsInStreak>k__BackingField;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6A26C", Offset = "0xB6A26C")]
	private static StreakManagerLegacy <Instance>k__BackingField;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<Streak> OnStreakLevelChanged;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action OnStreakReset;

	[Token(Token = "0x170001E5")]
	public int CurrentStreakIndex
	{
		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x1168F50", Offset = "0x1168F50", VA = "0x1168F50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DDE8", Offset = "0xB7DDE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x1168F58", Offset = "0x1168F58", VA = "0x1168F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DDF8", Offset = "0xB7DDF8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E6")]
	public int BestStreak
	{
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x1168F60", Offset = "0x1168F60", VA = "0x1168F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE08", Offset = "0xB7DE08")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x1168F68", Offset = "0x1168F68", VA = "0x1168F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE18", Offset = "0xB7DE18")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	public int CurrentStreak
	{
		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x1168F70", Offset = "0x1168F70", VA = "0x1168F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE28", Offset = "0xB7DE28")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x1168F78", Offset = "0x1168F78", VA = "0x1168F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE38", Offset = "0xB7DE38")]
		set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public int CurrentScoreMultiplier
	{
		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x1168F80", Offset = "0x1168F80", VA = "0x1168F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE48", Offset = "0xB7DE48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x1168F88", Offset = "0x1168F88", VA = "0x1168F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE58", Offset = "0xB7DE58")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public bool IsInStreak
	{
		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x1168F90", Offset = "0x1168F90", VA = "0x1168F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE68", Offset = "0xB7DE68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x1168F98", Offset = "0x1168F98", VA = "0x1168F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE78", Offset = "0xB7DE78")]
		private set
		{
		}
	}

	[Token(Token = "0x170001EA")]
	public static StreakManagerLegacy Instance
	{
		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x1168FA4", Offset = "0x1168FA4", VA = "0x1168FA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE88", Offset = "0xB7DE88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x1168FF0", Offset = "0x1168FF0", VA = "0x1168FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7DE98", Offset = "0xB7DE98")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x1169044", Offset = "0x1169044", VA = "0x1169044")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x11692DC", Offset = "0x11692DC", VA = "0x11692DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x116948C", Offset = "0x116948C", VA = "0x116948C")]
	public void StartNewStreakLevel(int slicePoints, int currentStreak)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x1169734", Offset = "0x1169734", VA = "0x1169734")]
	private void OnScoreChange(Fruit.FruitSlicedEvent sliceEvent, int points)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x11697AC", Offset = "0x11697AC", VA = "0x11697AC")]
	private void OnFruitSliced(Fruit fruit, FruitHalf leftHalf, FruitHalf rightHalf, Fruit.FruitSlicedEvent sliceEvent)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x11697B0", Offset = "0x11697B0", VA = "0x11697B0")]
	private void OnFruitDropped(Fruit fruit)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x1169660", Offset = "0x1169660", VA = "0x1169660")]
	private void EnableAllRequiredParticleEffects(int streakIndex)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x1169890", Offset = "0x1169890", VA = "0x1169890")]
	private void StreakLostCleanup()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x11697B4", Offset = "0x11697B4", VA = "0x11697B4")]
	public void ResetStreak()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x11699E0", Offset = "0x11699E0", VA = "0x11699E0")]
	public StreakManagerLegacy()
	{
	}
}
[Token(Token = "0x20002A2")]
public class StreakOverlay : MonoBehaviour
{
	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer m_overlaySpriteRenderer;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_colorTransitionTime;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color m_overlayColor;

	[Token(Token = "0x170001EC")]
	public Color OverlayColor
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x1169A64", Offset = "0x1169A64", VA = "0x1169A64")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x1169A70", Offset = "0x1169A70", VA = "0x1169A70")]
		set
		{
		}
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x1169A7C", Offset = "0x1169A7C", VA = "0x1169A7C")]
	private void TweenSpriteColour()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x1169AE0", Offset = "0x1169AE0", VA = "0x1169AE0")]
	public StreakOverlay()
	{
	}
}
[Token(Token = "0x20002A3")]
public class TowerSpawnFX : MonoBehaviour
{
	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_enableChildObject;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 effectOffset;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PooledObject m_effectPrefab;

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x15D84D0", Offset = "0x15D84D0", VA = "0x15D84D0")]
	public void SpawnFX(bool enableChild = false)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x15D89EC", Offset = "0x15D89EC", VA = "0x15D89EC")]
	public TowerSpawnFX()
	{
	}
}
[Token(Token = "0x20002A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5BEF0", Offset = "0xB5BEF0")]
public class TestCapsuleCollision : MonoBehaviour
{
	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_pointA;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_pointB;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_pointC;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_testLine;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A2FC", Offset = "0xB6A2FC")]
	public bool m_baseLineIntersection;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool m_plane;

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x15D34D4", Offset = "0x15D34D4", VA = "0x15D34D4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x15D3DEC", Offset = "0x15D3DEC", VA = "0x15D3DEC")]
	public TestCapsuleCollision()
	{
	}
}
[Token(Token = "0x20002A5")]
public class TestMultiplayerAutoHost : MultiplayerHelper
{
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BF50", Offset = "0xB5BF50")]
	private sealed class <AutoHostPrivate>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestMultiplayerAutoHost <>4__this;

		[Token(Token = "0x170001ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0xFEF890", Offset = "0xFEF890", VA = "0xFEF890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0xFEF8D8", Offset = "0xFEF8D8", VA = "0xFEF8D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xFEF75C", Offset = "0xFEF75C", VA = "0xFEF75C")]
		[DebuggerHidden]
		public <AutoHostPrivate>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xFEF788", Offset = "0xFEF788", VA = "0xFEF788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xFEF78C", Offset = "0xFEF78C", VA = "0xFEF78C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xFEF898", Offset = "0xFEF898", VA = "0xFEF898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x15D3DFC", Offset = "0x15D3DFC", VA = "0x15D3DFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x15D3EE4", Offset = "0x15D3EE4", VA = "0x15D3EE4")]
	private void OnSceneLoadComplete()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x15D3FE4", Offset = "0x15D3FE4", VA = "0x15D3FE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7DEC8", Offset = "0xB7DEC8")]
	private IEnumerator AutoHostPrivate()
	{
		return null;
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x15D405C", Offset = "0x15D405C", VA = "0x15D405C")]
	public TestMultiplayerAutoHost()
	{
	}
}
[Token(Token = "0x20002A7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5BF60", Offset = "0xB5BF60")]
public class TrajectoryPredictor : MonoBehaviour
{
	[Token(Token = "0x20002A8")]
	public enum lineMode
	{
		[Token(Token = "0x40011DE")]
		DrawRayEditorOnly = 1,
		[Token(Token = "0x40011DF")]
		LineRendererBoth
	}

	[Token(Token = "0x20002A9")]
	public enum predictionMode
	{
		[Token(Token = "0x40011E1")]
		Prediction2D = 2,
		[Token(Token = "0x40011E2")]
		Prediction3D
	}

	[Token(Token = "0x20002AA")]
	public delegate void PredictionIterationEvent(ref Vector3 currentIterationVel, Vector3 currentIterationPos, TrajectoryPredictor tpInstance);

	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BF98", Offset = "0xB5BF98")]
	private sealed class <KillLineDelay>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TrajectoryPredictor <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xFF02E8", Offset = "0xFF02E8", VA = "0xFF02E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xFF0330", Offset = "0xFF0330", VA = "0xFF0330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xFF0170", Offset = "0xFF0170", VA = "0xFF0170")]
		[DebuggerHidden]
		public <KillLineDelay>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xFF019C", Offset = "0xFF019C", VA = "0xFF019C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xFF01A0", Offset = "0xFF01A0", VA = "0xFF01A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xFF02F0", Offset = "0xFF02F0", VA = "0xFF02F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A334", Offset = "0xB6A334")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A334", Offset = "0xB6A334")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6A334", Offset = "0xB6A334")]
	public float accuracy;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A3B4", Offset = "0xB6A3B4")]
	public int iterationLimit;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A3EC", Offset = "0xB6A3EC")]
	public predictionMode predictionType;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A424", Offset = "0xB6A424")]
	public LayerMask raycastMask;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A45C", Offset = "0xB6A45C")]
	public bool checkForCollision;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool computeRelativeToTransform;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bounceOnCollision;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A494", Offset = "0xB6A494")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A494", Offset = "0xB6A494")]
	public lineMode debugLineMode;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A4F4", Offset = "0xB6A4F4")]
	public bool drawDebugOnStart;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A52C", Offset = "0xB6A52C")]
	public bool drawDebugOnUpdate;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A564", Offset = "0xB6A564")]
	public bool drawDebugOnPrediction;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A59C", Offset = "0xB6A59C")]
	public float debugLineDuration;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A5D4", Offset = "0xB6A5D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6A5D4", Offset = "0xB6A5D4")]
	public int debugLineUpdateRate;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A628", Offset = "0xB6A628")]
	public bool reuseLine;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A660", Offset = "0xB6A660")]
	public string lineSortingLayerName;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int lineSortingLayer;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6A698", Offset = "0xB6A698")]
	public float debugLineFadeOutPercent;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A6B0", Offset = "0xB6A6B0")]
	public int lineSortingOrder;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A6E8", Offset = "0xB6A6E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A6E8", Offset = "0xB6A6E8")]
	public float lineWidth;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A748", Offset = "0xB6A748")]
	public Color lineStartColor;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A780", Offset = "0xB6A780")]
	public Color lineEndColor;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A7B8", Offset = "0xB6A7B8")]
	public Shader lineShader;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A7F0", Offset = "0xB6A7F0")]
	public Texture lineTexture;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A828", Offset = "0xB6A828")]
	public float textureTilingMult;

	[NonSerialized]
	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public RaycastHit hitInfo3D;

	[NonSerialized]
	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RaycastHit2D hitInfo2D;

	[NonSerialized]
	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector3[] predictionPoints;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Rigidbody rb;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Rigidbody2D rb2;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Material _lineMat;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool triedGetMat;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int frameCount;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject debugLineObj;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public LineRenderer debugLine;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float drag;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 vel;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 pos;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 grav;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 velDependantAccel;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[HideInInspector]
	public float lineDistance;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public PredictionIterationEvent OnPredictionIterationStep;

	[Token(Token = "0x170001EF")]
	private Material lineMat
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x15DC0C8", Offset = "0x15DC0C8", VA = "0x15DC0C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x15DBC98", Offset = "0x15DBC98", VA = "0x15DBC98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x15DBD44", Offset = "0x15DBD44", VA = "0x15DBD44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x15DC230", Offset = "0x15DC230", VA = "0x15DC230")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x15DC3D4", Offset = "0x15DC3D4", VA = "0x15DC3D4")]
	private void LineDebug(Vector3[] pointList, int num)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x15DCB38", Offset = "0x15DCB38", VA = "0x15DCB38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x15DCAB0", Offset = "0x15DCAB0", VA = "0x15DCAB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7DF78", Offset = "0xB7DF78")]
	private IEnumerator KillLineDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x15DCBE4", Offset = "0x15DCBE4", VA = "0x15DCBE4")]
	public int Predict3D(Vector3 startPos, Vector3 velocity, Vector3 gravity, Vector3 velocityDependantAcceleration, float linearDrag = 0f)
	{
		return default(int);
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x15DD6C8", Offset = "0x15DD6C8", VA = "0x15DD6C8")]
	public int Predict2D(Vector3 startPos, Vector2 velocity, Vector2 gravity, float linearDrag = 0f)
	{
		return default(int);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x15DC018", Offset = "0x15DC018", VA = "0x15DC018")]
	public int Predict3D(Rigidbody rb)
	{
		return default(int);
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x15DBF30", Offset = "0x15DBF30", VA = "0x15DBF30")]
	public int Predict2D(Rigidbody2D rb)
	{
		return default(int);
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x15DD6F4", Offset = "0x15DD6F4", VA = "0x15DD6F4")]
	public static int GetPoints3D(Vector3[] points, Vector3 startPos, Vector3 velocity, Vector3 gravity, Vector3 velocityDependantAcceleration, float linearDrag = 0f, float accuracy = 0.985f, bool stopOnCollision = true, int rayCastMask = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x15DD8BC", Offset = "0x15DD8BC", VA = "0x15DD8BC")]
	public static int GetPoints2D(Vector3[] points, Vector3 startPos, Vector2 velocity, Vector2 gravity, float linearDrag = 0f, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true, int rayCastMask = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x15DDA88", Offset = "0x15DDA88", VA = "0x15DDA88")]
	public static int GetPoints3D(Vector3[] points, Rigidbody rb, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true, int rayCastMask = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x15DDBF0", Offset = "0x15DDBF0", VA = "0x15DDBF0")]
	public static int GetPoints2D(Vector3[] points, Rigidbody2D rb, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true, int rayCastMask = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x15DDD5C", Offset = "0x15DDD5C", VA = "0x15DDD5C")]
	public static RaycastHit GetHitInfo3D(Vector3 startPos, Vector3 velocity, Vector3 gravity, Vector3 velocityDependantAcceleration, float linearDrag = 0f, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true, int rayCastMask = -1)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x15DDF14", Offset = "0x15DDF14", VA = "0x15DDF14")]
	public static RaycastHit GetHitInfo3D(Rigidbody rb, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true, int rayCastMask = -1)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x15DE06C", Offset = "0x15DE06C", VA = "0x15DE06C")]
	public static RaycastHit2D GetHitInfo2D(Vector3 startPos, Vector2 velocity, Vector2 gravity, float linearDrag = 0f, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true, int rayCastMask = -1)
	{
		return default(RaycastHit2D);
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x15DE218", Offset = "0x15DE218", VA = "0x15DE218")]
	public static RaycastHit2D GetHitInfo2D(Rigidbody2D rb, float accuracy = 0.985f, int iterationLimit = 150, bool stopOnCollision = true, int rayCastMask = -1)
	{
		return default(RaycastHit2D);
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x15DCC2C", Offset = "0x15DCC2C", VA = "0x15DCC2C")]
	private int PerformPrediction()
	{
		return default(int);
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x15DE374", Offset = "0x15DE374", VA = "0x15DE374")]
	public TrajectoryPredictor()
	{
	}
}
namespace Tests.Multiplayer.Scripts
{
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5BFA8", Offset = "0xB5BFA8")]
	public class NetworkVariableTest : NetworkBehaviour
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6A880", Offset = "0xB6A880")]
		private int _TestVariable;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_currentValue;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkVariableTest> $IL2CPP_CHANGED;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkVariableTest> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkVariableTest> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170001F2")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB89EF4", Offset = "0xB89EF4")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB89EF4", Offset = "0xB89EF4")]
		public int TestVariable
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x10E9A28", Offset = "0x10E9A28", VA = "0x10E9A28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x10E9A8C", Offset = "0x10E9A8C", VA = "0x10E9A8C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x10E9AF0", Offset = "0x10E9AF0", VA = "0x10E9AF0", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x10E9B50", Offset = "0x10E9B50", VA = "0x10E9B50")]
		[Preserve]
		private static void OnChanged(Changed<NetworkVariableTest> changed)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x10E9BA4", Offset = "0x10E9BA4", VA = "0x10E9BA4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x10E9CE8", Offset = "0x10E9CE8", VA = "0x10E9CE8")]
		public NetworkVariableTest()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x10E9CF0", Offset = "0x10E9CF0", VA = "0x10E9CF0", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x10E9CF8", Offset = "0x10E9CF8", VA = "0x10E9CF8", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
}
namespace Waves
{
	[Token(Token = "0x20002AD")]
	public abstract class Wave : MonoBehaviour
	{
		[Token(Token = "0x20002AE")]
		protected enum State
		{
			[Token(Token = "0x40011F1")]
			NotStarted,
			[Token(Token = "0x40011F2")]
			Running,
			[Token(Token = "0x40011F3")]
			Ending,
			[Token(Token = "0x40011F4")]
			Ended
		}

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected State m_state;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int m_waveId;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6A8E4", Offset = "0xB6A8E4")]
		private static int <WaveCounter>k__BackingField;

		[Token(Token = "0x170001F3")]
		public bool IsFinished
		{
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x123695C", Offset = "0x123695C", VA = "0x123695C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F4")]
		private static int WaveCounter
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x1236AAC", Offset = "0x1236AAC", VA = "0x1236AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E058", Offset = "0xB7E058")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EA9")]
			[Address(RVA = "0x1236AF8", Offset = "0x1236AF8", VA = "0x1236AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E068", Offset = "0xB7E068")]
			set
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action OnWaveFinished
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x123696C", Offset = "0x123696C", VA = "0x123696C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E038", Offset = "0xB7E038")]
			add
			{
			}
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x1236A0C", Offset = "0x1236A0C", VA = "0x1236A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E048", Offset = "0xB7E048")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x1236B48", Offset = "0x1236B48", VA = "0x1236B48")]
		public void StartSpawning()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x1236C00", Offset = "0x1236C00", VA = "0x1236C00")]
		public void EndWaveNow()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x1236C48", Offset = "0x1236C48", VA = "0x1236C48", Slot = "4")]
		public virtual void ResetState()
		{
		}

		[Token(Token = "0x6000EAD")]
		protected abstract void StartSpawningInternal();

		[Token(Token = "0x6000EAE")]
		protected internal abstract void CancelAndEndSpawning();

		[Token(Token = "0x6000EAF")]
		public abstract int Initialise();

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x1236C50", Offset = "0x1236C50", VA = "0x1236C50", Slot = "8")]
		public virtual float GetDTScale()
		{
			return default(float);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x1236C58", Offset = "0x1236C58", VA = "0x1236C58", Slot = "9")]
		public virtual float GetDTIncrease()
		{
			return default(float);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x1236C60", Offset = "0x1236C60", VA = "0x1236C60")]
		protected Wave()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class WaveBasic : Wave
	{
		[Token(Token = "0x20002B0")]
		public enum WaveEndBehaviour
		{
			[Token(Token = "0x4001202")]
			AfterDelay,
			[Token(Token = "0x4001203")]
			ImmediatelyAfterAllFruitKilled,
			[Token(Token = "0x4001204")]
			ProlongUntilAllFruitKilled,
			[Token(Token = "0x4001205")]
			ProlongWhileAnyFruitOrBombActiveWithDelay
		}

		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BFBC", Offset = "0xB5BFBC")]
		private sealed class <StartSpawningRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveBasic <>4__this;

			[Token(Token = "0x170001F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EC7")]
				[Address(RVA = "0x1B90C88", Offset = "0x1B90C88", VA = "0x1B90C88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EC9")]
				[Address(RVA = "0x1B90CD0", Offset = "0x1B90CD0", VA = "0x1B90CD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x1B90A68", Offset = "0x1B90A68", VA = "0x1B90A68")]
			[DebuggerHidden]
			public <StartSpawningRoutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000EC5")]
			[Address(RVA = "0x1B90A94", Offset = "0x1B90A94", VA = "0x1B90A94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x1B90A98", Offset = "0x1B90A98", VA = "0x1B90A98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0x1B90C90", Offset = "0x1B90C90", VA = "0x1B90C90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BFCC", Offset = "0xB5BFCC")]
		private sealed class <SpawnAll>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400120A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveBasic <>4__this;

			[Token(Token = "0x170001F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ECD")]
				[Address(RVA = "0x1B90A18", Offset = "0x1B90A18", VA = "0x1B90A18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ECF")]
				[Address(RVA = "0x1B90A60", Offset = "0x1B90A60", VA = "0x1B90A60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x1B90864", Offset = "0x1B90864", VA = "0x1B90864")]
			[DebuggerHidden]
			public <SpawnAll>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x1B90890", Offset = "0x1B90890", VA = "0x1B90890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x1B90894", Offset = "0x1B90894", VA = "0x1B90894", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x1B90A20", Offset = "0x1B90A20", VA = "0x1B90A20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BFDC", Offset = "0xB5BFDC")]
		private sealed class <EndSpawningRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveBasic <>4__this;

			[Token(Token = "0x400120F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <endDelayElapsed>5__2;

			[Token(Token = "0x4001210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <fruitCount>5__3;

			[Token(Token = "0x170001F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000ED3")]
				[Address(RVA = "0x1B90814", Offset = "0x1B90814", VA = "0x1B90814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000ED5")]
				[Address(RVA = "0x1B9085C", Offset = "0x1B9085C", VA = "0x1B9085C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x1B903F0", Offset = "0x1B903F0", VA = "0x1B903F0")]
			[DebuggerHidden]
			public <EndSpawningRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x1B9041C", Offset = "0x1B9041C", VA = "0x1B9041C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x1B90420", Offset = "0x1B90420", VA = "0x1B90420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x1B9081C", Offset = "0x1B9081C", VA = "0x1B9081C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WaveEndBehaviour m_endBehaviour;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_startDelay;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_endDelay;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A8F4", Offset = "0xB6A8F4")]
		public float m_immediateEndDelay;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Spawner> m_spawnerList;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int m_spawnersStarted;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly HashSet<int> m_deadFruitIds;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly HashSet<int> m_deadBombIds;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly HashSet<int> m_skeweredFruitIds;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine m_activeCoroutine;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_isPrematureEnding;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_prematureEndTimer;

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x1236C68", Offset = "0x1236C68", VA = "0x1236C68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x1236EC0", Offset = "0x1236EC0", VA = "0x1236EC0", Slot = "5")]
		protected override void StartSpawningInternal()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x1236EFC", Offset = "0x1236EFC", VA = "0x1236EFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E078", Offset = "0xB7E078")]
		private IEnumerator StartSpawningRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x1236F74", Offset = "0x1236F74", VA = "0x1236F74", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E0D8", Offset = "0xB7E0D8")]
		protected virtual IEnumerator SpawnAll()
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x1236FEC", Offset = "0x1236FEC", VA = "0x1236FEC", Slot = "11")]
		protected virtual void Spawn(Spawner spawner)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x1237290", Offset = "0x1237290", VA = "0x1237290")]
		private void OnSpawnerAllFruitInteracted(Spawner spawner)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1237494", Offset = "0x1237494", VA = "0x1237494")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E138", Offset = "0xB7E138")]
		private IEnumerator EndSpawningRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x123750C", Offset = "0x123750C", VA = "0x123750C", Slot = "12")]
		protected virtual void OnSpawnerFinished()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x1237580", Offset = "0x1237580", VA = "0x1237580", Slot = "4")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x12376D0", Offset = "0x12376D0", VA = "0x12376D0", Slot = "6")]
		protected internal override void CancelAndEndSpawning()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x12379EC", Offset = "0x12379EC", VA = "0x12379EC", Slot = "7")]
		public override int Initialise()
		{
			return default(int);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x1237B24", Offset = "0x1237B24", VA = "0x1237B24", Slot = "13")]
		protected virtual bool HasSpawnedAllFruit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x1236D70", Offset = "0x1236D70", VA = "0x1236D70")]
		private int GetNumFruitSpawned(bool includeBombs)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x1237C5C", Offset = "0x1237C5C", VA = "0x1237C5C")]
		private void OnFruitKilled(Fruit fruit)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x1237D1C", Offset = "0x1237D1C", VA = "0x1237D1C")]
		private void OnFruitSkewered(Fruit fruit)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x1236EA4", Offset = "0x1236EA4", VA = "0x1236EA4")]
		private void StartPrematureEnding()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x1237DB4", Offset = "0x1237DB4", VA = "0x1237DB4")]
		public WaveBasic()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class WaveCompound : Wave
	{
		[Token(Token = "0x20002B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BFEC", Offset = "0xB5BFEC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int total;

			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x1B90CD8", Offset = "0x1B90CD8", VA = "0x1B90CD8")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0x1B90CE0", Offset = "0x1B90CE0", VA = "0x1B90CE0")]
			internal void <Initialise>b__0(Wave wave)
			{
			}
		}

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Wave> m_waves;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_wavesSpawning;

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x1237E98", Offset = "0x1237E98", VA = "0x1237E98", Slot = "5")]
		protected override void StartSpawningInternal()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x123804C", Offset = "0x123804C", VA = "0x123804C")]
		private void OnChildWaveFinished()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x1238064", Offset = "0x1238064", VA = "0x1238064", Slot = "4")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1238188", Offset = "0x1238188", VA = "0x1238188", Slot = "6")]
		protected internal override void CancelAndEndSpawning()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x12382A4", Offset = "0x12382A4", VA = "0x12382A4", Slot = "7")]
		public override int Initialise()
		{
			return default(int);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x1238398", Offset = "0x1238398", VA = "0x1238398")]
		public WaveCompound()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public abstract class WaveManager : MonoBehaviour
	{
		[Token(Token = "0x20002B7")]
		public enum State
		{
			[Token(Token = "0x400121D")]
			NotStarted,
			[Token(Token = "0x400121E")]
			Running,
			[Token(Token = "0x400121F")]
			Finished
		}

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5BFFC", Offset = "0xB5BFFC")]
		private sealed class <WaitForTimeScaled>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <elapsed>5__2;

			[Token(Token = "0x17000201")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EF9")]
				[Address(RVA = "0x1B90E34", Offset = "0x1B90E34", VA = "0x1B90E34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EFB")]
				[Address(RVA = "0x1B90E7C", Offset = "0x1B90E7C", VA = "0x1B90E7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x1B90D24", Offset = "0x1B90D24", VA = "0x1B90D24")]
			[DebuggerHidden]
			public <WaitForTimeScaled>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x1B90D50", Offset = "0x1B90D50", VA = "0x1B90D50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x1B90D54", Offset = "0x1B90D54", VA = "0x1B90D54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x1B90E3C", Offset = "0x1B90E3C", VA = "0x1B90E3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected bool m_dtScaleAffectsFruit;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool m_isPaused;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int m_totalFruitToSpawn;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_usingForcedWave;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Wave m_forcedWave;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<int, int> m_fruitSpawnedInWave;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected State m_state;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6A93C", Offset = "0xB6A93C")]
		private static WaveManager <Instance>k__BackingField;

		[Token(Token = "0x170001FB")]
		public virtual float WaveDTScale
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0x12383A0", Offset = "0x12383A0", VA = "0x12383A0", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FC")]
		public virtual float FruitDTScale
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x12383B8", Offset = "0x12383B8", VA = "0x12383B8", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FD")]
		public bool WaveDTAffectsFruit
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x12383D0", Offset = "0x12383D0", VA = "0x12383D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FE")]
		public int TotalFruitToSpawn
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x12383D8", Offset = "0x12383D8", VA = "0x12383D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001FF")]
		public State CurrentState
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x12383E0", Offset = "0x12383E0", VA = "0x12383E0")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x17000200")]
		public static WaveManager Instance
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x12383E8", Offset = "0x12383E8", VA = "0x12383E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E288", Offset = "0xB7E288")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x1238434", Offset = "0x1238434", VA = "0x1238434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E298", Offset = "0xB7E298")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1238488", Offset = "0x1238488", VA = "0x1238488")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E2A8", Offset = "0xB7E2A8")]
		public static IEnumerator WaitForTimeScaled(float time)
		{
			return null;
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x12384FC", Offset = "0x12384FC", VA = "0x12384FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7E308", Offset = "0xB7E308")]
		public static void Log(string message, UnityEngine.Object sender)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x1238500", Offset = "0x1238500", VA = "0x1238500", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x12385F8", Offset = "0x12385F8", VA = "0x12385F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x123864C", Offset = "0x123864C", VA = "0x123864C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x1238738", Offset = "0x1238738", VA = "0x1238738", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x12388A4", Offset = "0x12388A4", VA = "0x12388A4", Slot = "8")]
		public virtual void Initialise()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x1238900", Offset = "0x1238900", VA = "0x1238900", Slot = "9")]
		public virtual void StartSpawning()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x12389F8", Offset = "0x12389F8", VA = "0x12389F8", Slot = "10")]
		public virtual void StopSpawning()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x1238A04", Offset = "0x1238A04", VA = "0x1238A04", Slot = "11")]
		public virtual void ResetWaves()
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x1238A08", Offset = "0x1238A08", VA = "0x1238A08", Slot = "12")]
		public virtual void ForceWave(Wave wave)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x1238A18", Offset = "0x1238A18", VA = "0x1238A18", Slot = "13")]
		public virtual void StopForcedWave()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x12371E4", Offset = "0x12371E4", VA = "0x12371E4")]
		public void AddFruitCountForWave(int waveId, int fruitCount)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x1238A28", Offset = "0x1238A28", VA = "0x1238A28")]
		public int GetNumberOfFruitSpawnedInWave(int waveId)
		{
			return default(int);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x1238A9C", Offset = "0x1238A9C", VA = "0x1238A9C")]
		protected void OnGamePaused(GameEvent evt)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x1238B40", Offset = "0x1238B40", VA = "0x1238B40", Slot = "14")]
		protected virtual void OnGamePaused(bool paused)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x1238B44", Offset = "0x1238B44", VA = "0x1238B44")]
		protected WaveManager()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class WaveManagerArcade : WaveManagerStaticSpawners
	{
		[Serializable]
		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C00C", Offset = "0xB5C00C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400123A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<ParticleSystem> <>9__16_0;

			[Token(Token = "0x400123B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<ParticleSystem> <>9__16_1;

			[Token(Token = "0x400123C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<ParticleSystem> <>9__51_0;

			[Token(Token = "0x400123D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<ParticleSystem> <>9__51_1;

			[Token(Token = "0x6000F19")]
			[Address(RVA = "0x1B90EE8", Offset = "0x1B90EE8", VA = "0x1B90EE8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0x1B90EF0", Offset = "0x1B90EF0", VA = "0x1B90EF0")]
			internal void <set_FrenzyEnabled>b__16_0(ParticleSystem system)
			{
			}

			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x1B90F0C", Offset = "0x1B90F0C", VA = "0x1B90F0C")]
			internal void <set_FrenzyEnabled>b__16_1(ParticleSystem system)
			{
			}

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x1B90F28", Offset = "0x1B90F28", VA = "0x1B90F28")]
			internal void <OnGamePaused>b__51_0(ParticleSystem system)
			{
			}

			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x1B90F44", Offset = "0x1B90F44", VA = "0x1B90F44")]
			internal void <OnGamePaused>b__51_1(ParticleSystem system)
			{
			}
		}

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A94C", Offset = "0xB6A94C")]
		public List<SpawnableFruit> m_powerBananas;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<ParticleSystem> m_frenzyEmitters;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float m_minWaitForBanana;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float m_maxWaitForBanana;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float m_bananaChanceStart;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6A984", Offset = "0xB6A984")]
		public float m_timePeachChanceStart;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6A99C", Offset = "0xB6A99C")]
		public float m_timePeachChanceIncrease;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Wave m_frenzyWave;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Wave m_freezeWave;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A9B4", Offset = "0xB6A9B4")]
		public AudioMixerSnapshot m_gameMixerSnapshot;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioMixerSnapshot m_freezeMixerSnapshot;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_freezeModifier;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_timeToNextPowerBanana;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_timePeachChance;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool m_frenzyEnabled;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_desiredSpeed;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_speed;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_speedOverrideActive;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_speedOverride;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<SpawnableFruit> m_availableBananas;

		[Token(Token = "0x17000203")]
		public bool FrenzyEnabled
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x1238D08", Offset = "0x1238D08", VA = "0x1238D08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x1238D10", Offset = "0x1238D10", VA = "0x1238D10")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public bool FreezeEnabled
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x1238EE4", Offset = "0x1238EE4", VA = "0x1238EE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x1238EF8", Offset = "0x1238EF8", VA = "0x1238EF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public override float WaveDTScale
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x1238F68", Offset = "0x1238F68", VA = "0x1238F68", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000206")]
		public override float FruitDTScale
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x1238FB8", Offset = "0x1238FB8", VA = "0x1238FB8", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000207")]
		public float CurrentTimePeachChance
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x1238FD0", Offset = "0x1238FD0", VA = "0x1238FD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action<FruitConfig> OnPowerBananaSliced
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x1238BC8", Offset = "0x1238BC8", VA = "0x1238BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E390", Offset = "0xB7E390")]
			add
			{
			}
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x1238C68", Offset = "0x1238C68", VA = "0x1238C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E3A0", Offset = "0xB7E3A0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x1238FD8", Offset = "0x1238FD8", VA = "0x1238FD8", Slot = "15")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x12392A0", Offset = "0x12392A0", VA = "0x12392A0")]
		private float PickNextBananaTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x12391C4", Offset = "0x12391C4", VA = "0x12391C4")]
		private void SpawnNewPowerBanana()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1239580", Offset = "0x1239580", VA = "0x1239580")]
		private void OnFruitSliced(Fruit fruit, FruitHalf leftHalf, FruitHalf rightHalf, Fruit.FruitSlicedEvent slicedEvent)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x1239624", Offset = "0x1239624", VA = "0x1239624")]
		private void OnFruitGrounded(Fruit fruit)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x12392F4", Offset = "0x12392F4", VA = "0x12392F4")]
		private void SpawnFromRandomSpawner(SpawnableFruit fruitToSpawn)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x12396D0", Offset = "0x12396D0", VA = "0x12396D0", Slot = "8")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x1239948", Offset = "0x1239948", VA = "0x1239948")]
		public void AddAvaliableBanana(FruitConfig bananaConfig)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x12399AC", Offset = "0x12399AC", VA = "0x12399AC")]
		public void IncreaseTimePeachChance()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x12399C0", Offset = "0x12399C0", VA = "0x12399C0")]
		public void ResetTimePeachChance()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x12399CC", Offset = "0x12399CC", VA = "0x12399CC")]
		public void ForceStartFreezeWave()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x12399DC", Offset = "0x12399DC", VA = "0x12399DC")]
		public void ForceStartFrenzyWave()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x12399EC", Offset = "0x12399EC", VA = "0x12399EC")]
		public void AddSpeed(int val)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1239A34", Offset = "0x1239A34", VA = "0x1239A34")]
		public void ResetSpeed()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1239A40", Offset = "0x1239A40", VA = "0x1239A40")]
		public void SetSpeedOverride(bool overrideActive, float speedOverride = 1f)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1239A50", Offset = "0x1239A50", VA = "0x1239A50", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1239B84", Offset = "0x1239B84", VA = "0x1239B84", Slot = "14")]
		protected override void OnGamePaused(bool paused)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x12393C4", Offset = "0x12393C4", VA = "0x12393C4")]
		private void LogAvailableBananas()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1239D68", Offset = "0x1239D68", VA = "0x1239D68")]
		public WaveManagerArcade()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class WaveManagerMinigame : WaveManagerStandard
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string m_ID;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameRules m_rules;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_standaloneMinigame;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent m_onPlay;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent m_onAborted;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent m_onFinished;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent m_onAreaEnter;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent m_onAreaExit;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_minigameStartTime;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int m_fruitSliced;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_aborted;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool m_inArea;

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x1239E6C", Offset = "0x1239E6C", VA = "0x1239E6C")]
		public void ColliderStart()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x123A098", Offset = "0x123A098", VA = "0x123A098")]
		public void ColliderAbort()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x123A0D0", Offset = "0x123A0D0", VA = "0x123A0D0")]
		public void ColliderEnterArea()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x123A0F8", Offset = "0x123A0F8", VA = "0x123A0F8")]
		public void ColliderLeaveArea()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1239E80", Offset = "0x1239E80", VA = "0x1239E80")]
		public void Play()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x123A0BC", Offset = "0x123A0BC", VA = "0x123A0BC")]
		public void AbortGame()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x123A3B0", Offset = "0x123A3B0", VA = "0x123A3B0", Slot = "8")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x123A15C", Offset = "0x123A15C", VA = "0x123A15C")]
		private void ResetAllWaves()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x123A3D8", Offset = "0x123A3D8", VA = "0x123A3D8", Slot = "10")]
		public override void StopSpawning()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x123A7C8", Offset = "0x123A7C8", VA = "0x123A7C8")]
		public void FoundInteraction()
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x123A8A4", Offset = "0x123A8A4", VA = "0x123A8A4")]
		private void FruitSliced(Fruit fruit, FruitHalf firstHalf, FruitHalf secondHald, Fruit.FruitSlicedEvent evt)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x123A284", Offset = "0x123A284", VA = "0x123A284")]
		private void SendStartAnalytics()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x123A580", Offset = "0x123A580", VA = "0x123A580")]
		private void CompleteMinigame(GameEventWorldInteractionComplete.InteractionState completionState)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x123A8B4", Offset = "0x123A8B4", VA = "0x123A8B4")]
		public WaveManagerMinigame()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5C01C", Offset = "0xB5C01C")]
	public class WaveManagerRhythm : WaveManager
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6A9FC", Offset = "0xB6A9FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6A9FC", Offset = "0xB6A9FC")]
		public float m_spawnFruitBeforeNumberOfBeats;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6AA5C", Offset = "0xB6AA5C")]
		public float m_spawnBeatOffset;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6AA94", Offset = "0xB6AA94")]
		public float m_catchUpBeatCount;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6AACC", Offset = "0xB6AACC")]
		public Ease m_easeCatchUp;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6AB04", Offset = "0xB6AB04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6AB04", Offset = "0xB6AB04")]
		public bool m_doSecondCatchUp;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6AB64", Offset = "0xB6AB64")]
		public float m_secondCatchUpStartOffset;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB6AB9C", Offset = "0xB6AB9C")]
		public float m_killFruitAfterNumberOfBeats;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform m_scrollTransform;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6ABAC", Offset = "0xB6ABAC")]
		public float m_trackLerpSpeed;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_trackMarkerWidth;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool m_drawBeatMarkers;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool m_drawSecondMarkers;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool m_labelMarkers;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<SpawnableFruit> m_spawnableList;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_distanceBetweenBeats;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_forwardPositionOffset;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6ABE4", Offset = "0xB6ABE4")]
		public int m_spawnGridColumns;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6ABFC", Offset = "0xB6ABFC")]
		public int m_spawnGridRows;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 m_gridExtents;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FruitSliceDirectionsConfig m_directionsConfig;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SliceBar m_sliceBar;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_cachedBeatsPerSecond;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_trackTimer;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_startPos;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 m_scrollDirection;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RhythmTrackPlayer m_trackPlayer;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6AC14", Offset = "0xB6AC14")]
		private SpawnerBeatGrid[] <Spawners>k__BackingField;

		[Token(Token = "0x17000208")]
		public float CurrentBeat
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x123A8BC", Offset = "0x123A8BC", VA = "0x123A8BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000209")]
		public float CachedBeatsPerSecond
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x123A8C4", Offset = "0x123A8C4", VA = "0x123A8C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020A")]
		public SpawnerBeatGrid[] Spawners
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x123A8CC", Offset = "0x123A8CC", VA = "0x123A8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E3B0", Offset = "0xB7E3B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x123A8D4", Offset = "0x123A8D4", VA = "0x123A8D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E3C0", Offset = "0xB7E3C0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x123A8DC", Offset = "0x123A8DC", VA = "0x123A8DC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x123AAF0", Offset = "0x123AAF0", VA = "0x123AAF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x123ABF4", Offset = "0x123ABF4", VA = "0x123ABF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x123ACCC", Offset = "0x123ACCC", VA = "0x123ACCC", Slot = "8")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x123AE10", Offset = "0x123AE10", VA = "0x123AE10", Slot = "9")]
		public override void StartSpawning()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x123AE40", Offset = "0x123AE40", VA = "0x123AE40", Slot = "10")]
		public override void StopSpawning()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x123AF04", Offset = "0x123AF04", VA = "0x123AF04")]
		public SpawnableFruit GetSpawnableFruitAt(int index)
		{
			return null;
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x123AF94", Offset = "0x123AF94", VA = "0x123AF94")]
		public WaveManagerRhythm()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class WaveManagerStandard : WaveManager
	{
		[Token(Token = "0x20002BE")]
		public enum NoMoreWavesBehaviour
		{
			[Token(Token = "0x400126F")]
			RepeatLast,
			[Token(Token = "0x4001270")]
			Loop,
			[Token(Token = "0x4001271")]
			End
		}

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6AC24", Offset = "0xB6AC24")]
		public float m_startingDtScale;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6AC40", Offset = "0xB6AC40")]
		public float m_dtScaleIncrement;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6AC60", Offset = "0xB6AC60")]
		public float m_maxDtScale;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NoMoreWavesBehaviour m_noMoreWavesBehaviour;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Wave> m_waveList;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int m_nextWaveIndex;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Wave m_currentWave;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_finishedWaveCount;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected float m_globalDtScale;

		[Token(Token = "0x1700020B")]
		public override float WaveDTScale
		{
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0xF83F48", Offset = "0xF83F48", VA = "0xF83F48", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020C")]
		public override float FruitDTScale
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0xF83F60", Offset = "0xF83F60", VA = "0xF83F60", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xF83F78", Offset = "0xF83F78", VA = "0xF83F78", Slot = "15")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xF84098", Offset = "0xF84098", VA = "0xF84098", Slot = "8")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xF841E8", Offset = "0xF841E8", VA = "0xF841E8", Slot = "9")]
		public override void StartSpawning()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xF8421C", Offset = "0xF8421C", VA = "0xF8421C", Slot = "10")]
		public override void StopSpawning()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xF842C8", Offset = "0xF842C8", VA = "0xF842C8", Slot = "11")]
		public override void ResetWaves()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xF842E8", Offset = "0xF842E8", VA = "0xF842E8", Slot = "12")]
		public override void ForceWave(Wave wave)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xF84344", Offset = "0xF84344", VA = "0xF84344", Slot = "16")]
		protected virtual void StartNextWave()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xF84510", Offset = "0xF84510", VA = "0xF84510")]
		protected int GetNextWaveIndex(int fromIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xF845A4", Offset = "0xF845A4", VA = "0xF845A4")]
		public WaveManagerStandard()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xF845BC", Offset = "0xF845BC", VA = "0xF845BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E3D0", Offset = "0xB7E3D0")]
		private void <Initialise>b__15_0(Wave wave)
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class WaveManagerStaticSpawners : WaveManagerStandard
	{
		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<SpawnerQueued> m_spawners;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool m_immediatelyResetOnGameOver;

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xF84600", Offset = "0xF84600", VA = "0xF84600", Slot = "10")]
		public override void StopSpawning()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xF846B0", Offset = "0xF846B0", VA = "0xF846B0", Slot = "11")]
		public override void ResetWaves()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xF84820", Offset = "0xF84820", VA = "0xF84820")]
		public WaveManagerStaticSpawners()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class WaveManagerTimeline : WaveManager
	{
		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlayableDirector m_director;

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xF848B4", Offset = "0xF848B4", VA = "0xF848B4", Slot = "8")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xF85288", Offset = "0xF85288", VA = "0xF85288", Slot = "9")]
		public override void StartSpawning()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xF8534C", Offset = "0xF8534C", VA = "0xF8534C")]
		private void OnTimelineFinished(PlayableDirector obj)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xF85404", Offset = "0xF85404", VA = "0xF85404", Slot = "10")]
		public override void StopSpawning()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xF85438", Offset = "0xF85438", VA = "0xF85438", Slot = "14")]
		protected override void OnGamePaused(bool paused)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xF848DC", Offset = "0xF848DC", VA = "0xF848DC")]
		private void GetNumberOfFruitToSpawnPerWave()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xF85484", Offset = "0xF85484", VA = "0xF85484")]
		public WaveManagerTimeline()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class WaveManagerZen : WaveManagerStaticSpawners
	{
		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6AC7C", Offset = "0xB6AC7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6AC7C", Offset = "0xB6AC7C")]
		public float m_timePeachChanceStart;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6ACD0", Offset = "0xB6ACD0")]
		public float m_timePeachChanceIncrease;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_timePeachChance;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_desiredSpeed;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_speed;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_speedOverrideActive;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_speedOverride;

		[Token(Token = "0x1700020D")]
		public override float WaveDTScale
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0xF8548C", Offset = "0xF8548C", VA = "0xF8548C", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020E")]
		public override float FruitDTScale
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xF854C4", Offset = "0xF854C4", VA = "0xF854C4", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020F")]
		public float CurrentTimePeachChance
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0xF854DC", Offset = "0xF854DC", VA = "0xF854DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xF854E4", Offset = "0xF854E4", VA = "0xF854E4", Slot = "15")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xF855A8", Offset = "0xF855A8", VA = "0xF855A8", Slot = "8")]
		public override void Initialise()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xF855D0", Offset = "0xF855D0", VA = "0xF855D0")]
		public void IncreaseTimePeachChance()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xF855E0", Offset = "0xF855E0", VA = "0xF855E0")]
		public void ResetTimePeachChance()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xF855EC", Offset = "0xF855EC", VA = "0xF855EC")]
		public void AddSpeed(int val)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xF85634", Offset = "0xF85634", VA = "0xF85634")]
		public void ResetSpeed()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xF85640", Offset = "0xF85640", VA = "0xF85640")]
		public void SetSpeedOverride(bool overrideActive, float speedOverride = 1f)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xF85650", Offset = "0xF85650", VA = "0xF85650")]
		public WaveManagerZen()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class WaveSequential : Wave
	{
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C07C", Offset = "0xB5C07C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int total;

			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1B90F60", Offset = "0x1B90F60", VA = "0x1B90F60")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x1B90F68", Offset = "0x1B90F68", VA = "0x1B90F68")]
			internal void <Initialise>b__0(Wave wave)
			{
			}
		}

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Wave> m_waves;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentWaveIndex;

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xF85674", Offset = "0xF85674", VA = "0xF85674", Slot = "5")]
		protected override void StartSpawningInternal()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xF8579C", Offset = "0xF8579C", VA = "0xF8579C")]
		private void OnWaveFinishedInternal()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xF858B4", Offset = "0xF858B4", VA = "0xF858B4", Slot = "4")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xF859E4", Offset = "0xF859E4", VA = "0xF859E4", Slot = "6")]
		protected internal override void CancelAndEndSpawning()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xF85A70", Offset = "0xF85A70", VA = "0xF85A70", Slot = "7")]
		public override int Initialise()
		{
			return default(int);
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xF85B64", Offset = "0xF85B64", VA = "0xF85B64")]
		public WaveSequential()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class WaveStaticSpawners : WaveBasic
	{
		[Serializable]
		[Token(Token = "0x20002C5")]
		public class WaveComboParameters
		{
			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RangedInt m_comboSize;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpawnableFruit m_spawnableFruit;

			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x1B912A4", Offset = "0x1B912A4", VA = "0x1B912A4")]
			public WaveComboParameters()
			{
			}
		}

		[Token(Token = "0x20002C6")]
		public class SpawnSet
		{
			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpawnerQueued[] m_spawners;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SpawnableFruit m_spawnableFruit;

			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_isCombo;

			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x1B9129C", Offset = "0x1B9129C", VA = "0x1B9129C")]
			public SpawnSet()
			{
			}
		}

		[Token(Token = "0x20002C7")]
		public enum Placement
		{
			[Token(Token = "0x4001299")]
			Left,
			[Token(Token = "0x400129A")]
			Right,
			[Token(Token = "0x400129B")]
			RandomLeftRight
		}

		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C08C", Offset = "0xB5C08C")]
		private sealed class <SpawnAll>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveStaticSpawners <>4__this;

			[Token(Token = "0x400129F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SpawnSet[] <>7__wrap1;

			[Token(Token = "0x40012A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x40012A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SpawnSet <spawnSet>5__4;

			[Token(Token = "0x40012A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SpawnerQueued[] <>7__wrap4;

			[Token(Token = "0x40012A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap5;

			[Token(Token = "0x40012A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private SpawnerQueued <spawner>5__7;

			[Token(Token = "0x17000210")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000F6F")]
				[Address(RVA = "0x1B9124C", Offset = "0x1B9124C", VA = "0x1B9124C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000211")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000F71")]
				[Address(RVA = "0x1B91294", Offset = "0x1B91294", VA = "0x1B91294", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x1B90FAC", Offset = "0x1B90FAC", VA = "0x1B90FAC")]
			[DebuggerHidden]
			public <SpawnAll>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x1B90FD8", Offset = "0x1B90FD8", VA = "0x1B90FD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x1B90FDC", Offset = "0x1B90FDC", VA = "0x1B90FDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x1B91254", Offset = "0x1B91254", VA = "0x1B91254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6ACE8", Offset = "0xB6ACE8")]
		public List<SpawnerQueued> m_spawnerListQueued;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool m_newSpawnerPerFruit;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<SpawnerQueued> m_specificSpawnerSequence;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool m_useCustomSpawners;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool m_useRandomSpawnerPerFruit;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Placement m_customSpawnerPlacement;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<SpawnerQueued> m_customSpawnersLeft;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<SpawnerQueued> m_customSpawnersRight;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public RangedInt m_fruitCount;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_spawnDelay;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_delayBetweenFruit;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public SpawnableFruit m_spawnableFruit;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_amountOfFruitToSpawn;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_amountOfFruitSpawned;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6AD20", Offset = "0xB6AD20")]
		public bool m_useCombos;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<WaveComboParameters> m_comboParameters;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private WaveManagerStaticSpawners m_waveManager;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SpawnSet[] m_spawnSets;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<SpawnerQueued> m_history;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SpawnerQueued m_selectedCustomSpawner;

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xF85B74", Offset = "0xF85B74", VA = "0xF85B74", Slot = "7")]
		public override int Initialise()
		{
			return default(int);
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xF85CA4", Offset = "0xF85CA4", VA = "0xF85CA4", Slot = "5")]
		protected override void StartSpawningInternal()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xF85D34", Offset = "0xF85D34", VA = "0xF85D34")]
		private void InitSpawnSets()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xF86314", Offset = "0xF86314", VA = "0xF86314")]
		private SpawnerQueued GetCustomSpawner()
		{
			return null;
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xF863A0", Offset = "0xF863A0", VA = "0xF863A0")]
		private SpawnerQueued GetNextSpawner(bool useHistory, bool rebuildOnEmpty = true)
		{
			return null;
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xF864CC", Offset = "0xF864CC", VA = "0xF864CC", Slot = "13")]
		protected override bool HasSpawnedAllFruit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xF864E8", Offset = "0xF864E8", VA = "0xF864E8", Slot = "10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E3E0", Offset = "0xB7E3E0")]
		protected override IEnumerator SpawnAll()
		{
			return null;
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xF86560", Offset = "0xF86560", VA = "0xF86560", Slot = "14")]
		protected virtual void Spawn(SpawnerQueued spawner, SpawnableFruit fruit)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xF866B4", Offset = "0xF866B4", VA = "0xF866B4")]
		public WaveStaticSpawners()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class WaveWeightedRandom : Wave
	{
		[Serializable]
		[Token(Token = "0x20002CA")]
		public struct WeightedWave
		{
			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Wave m_wave;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_weight;
		}

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<WeightedWave> m_waves;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Wave m_currentPickedWave;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xF867E4", Offset = "0xF867E4", VA = "0xF867E4")]
		private void PickWave()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xF8694C", Offset = "0xF8694C", VA = "0xF8694C", Slot = "5")]
		protected override void StartSpawningInternal()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xF86A78", Offset = "0xF86A78", VA = "0xF86A78", Slot = "4")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xF86BB8", Offset = "0xF86BB8", VA = "0xF86BB8", Slot = "6")]
		protected internal override void CancelAndEndSpawning()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xF86C4C", Offset = "0xF86C4C", VA = "0xF86C4C", Slot = "7")]
		public override int Initialise()
		{
			return default(int);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xF86CE8", Offset = "0xF86CE8", VA = "0xF86CE8")]
		public WaveWeightedRandom()
		{
		}
	}
}
namespace Tutorial
{
	[Token(Token = "0x20002CB")]
	public class DisableDuringTutorial : MonoBehaviour
	{
		[Token(Token = "0x20002CC")]
		public enum Mode
		{
			[Token(Token = "0x40012B6")]
			Completed,
			[Token(Token = "0x40012B7")]
			StepReached
		}

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode m_mode;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_stepReachedName;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_specificBranch;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int m_stepBranchIndex;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_validateOnStart;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_validateOnLoaded;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool m_validateOnTutorialStart;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] m_objectsToDisable;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] m_objectsToEnable;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6AD58", Offset = "0xB6AD58")]
		public UnityEvent m_onBeforeReached;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6AD90", Offset = "0xB6AD90")]
		public UnityEvent m_onStep;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6ADC8", Offset = "0xB6ADC8")]
		public UnityEvent m_onAfterReached;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x10A4AB0", Offset = "0x10A4AB0", VA = "0x10A4AB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x10A51D4", Offset = "0x10A51D4", VA = "0x10A51D4")]
		private void OnLoaded(Tutorial obj)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x10A52F0", Offset = "0x10A52F0", VA = "0x10A52F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x10A4EA4", Offset = "0x10A4EA4", VA = "0x10A4EA4")]
		private void Validate()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x10A54C0", Offset = "0x10A54C0", VA = "0x10A54C0")]
		public DisableDuringTutorial()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class Tutorial : MonoBehaviour
	{
		[Token(Token = "0x20002CE")]
		public enum TutorialState
		{
			[Token(Token = "0x40012CA")]
			Loading,
			[Token(Token = "0x40012CB")]
			Active,
			[Token(Token = "0x40012CC")]
			Inactive
		}

		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C09C", Offset = "0xB5C09C")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TutorialBranch branch;

			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x1B8B270", Offset = "0x1B8B270", VA = "0x1B8B270")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x1B8B278", Offset = "0x1B8B278", VA = "0x1B8B278")]
			internal bool <GetBranchIndex>b__0(TutorialBranch x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C0AC", Offset = "0xB5C0AC")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stepId;

			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x1B8B2F0", Offset = "0x1B8B2F0", VA = "0x1B8B2F0")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x1B8B2F8", Offset = "0x1B8B2F8", VA = "0x1B8B2F8")]
			internal bool <GetStepNumber>b__0(TutorialStep x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C0BC", Offset = "0xB5C0BC")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stepId;

			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x1B8B330", Offset = "0x1B8B330", VA = "0x1B8B330")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x1B8B338", Offset = "0x1B8B338", VA = "0x1B8B338")]
			internal bool <HasStepReached>b__0(TutorialStep x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x1B8B370", Offset = "0x1B8B370", VA = "0x1B8B370")]
			internal bool <HasStepReached>b__1(TutorialStep x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_tutorialID;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TutorialBranch> m_branches;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<TutorialStep> m_steps;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent m_onStart;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent m_onComplete;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_runOnStart;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Localize> m_localizeComponents;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ProfilerMarker s_localizeTutorial;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_currentBranchIndex;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TutorialPlayerDataObject m_tutorialSavedData;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, TutorialSceneReference> s_tutorialSceneReferences;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool s_completedLoading;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6AE10", Offset = "0xB6AE10")]
		private static Tutorial <Instance>k__BackingField;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action OnTutorialComplete;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action OnTutorialNextStep;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action OnTutorialStart;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action<Tutorial> OnTutorialLoaded;

		[Token(Token = "0x17000212")]
		public TutorialStep CurrentStep
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x1152524", Offset = "0x1152524", VA = "0x1152524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		public TutorialBranch CurrentBranch
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x1152540", Offset = "0x1152540", VA = "0x1152540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		public static Tutorial Instance
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x1152650", Offset = "0x1152650", VA = "0x1152650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E490", Offset = "0xB7E490")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x11526B4", Offset = "0x11526B4", VA = "0x11526B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E4A0", Offset = "0xB7E4A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public static TutorialState State
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x1152720", Offset = "0x1152720", VA = "0x1152720")]
			get
			{
				return default(TutorialState);
			}
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x1152858", Offset = "0x1152858", VA = "0x1152858")]
		public static void AddSceneReference(TutorialSceneReference sceneReference)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x11528EC", Offset = "0x11528EC", VA = "0x11528EC")]
		public static TutorialSceneReference GetSceneReference(string refID)
		{
			return null;
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x11529D0", Offset = "0x11529D0", VA = "0x11529D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1152AC8", Offset = "0x1152AC8", VA = "0x1152AC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1152FC0", Offset = "0x1152FC0", VA = "0x1152FC0")]
		public void Run()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1153204", Offset = "0x1153204", VA = "0x1153204")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x115313C", Offset = "0x115313C", VA = "0x115313C")]
		private void StartCurrentStep()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x1153480", Offset = "0x1153480", VA = "0x1153480")]
		private void Save(int stepReached, int branchID)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x1152AF8", Offset = "0x1152AF8", VA = "0x1152AF8")]
		public void Load()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x11532D0", Offset = "0x11532D0", VA = "0x11532D0")]
		private void StartNextStep()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1153268", Offset = "0x1153268", VA = "0x1153268")]
		public bool IsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x11534F8", Offset = "0x11534F8", VA = "0x11534F8")]
		private void Complete()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x11537E0", Offset = "0x11537E0", VA = "0x11537E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1153864", Offset = "0x1153864", VA = "0x1153864")]
		public void SetBranch(int branchIndex)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1153A3C", Offset = "0x1153A3C", VA = "0x1153A3C")]
		public int GetBranchIndex(TutorialBranch branch)
		{
			return default(int);
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1153B38", Offset = "0x1153B38", VA = "0x1153B38")]
		public int GetStepNumber(string stepId, int branchIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1153C70", Offset = "0x1153C70", VA = "0x1153C70")]
		public bool HasStepReached(string stepId, int branchIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x1153D04", Offset = "0x1153D04", VA = "0x1153D04")]
		public bool HasStepReached(string stepId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1153EF0", Offset = "0x1153EF0", VA = "0x1153EF0")]
		public bool IsStep(string stepId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x115400C", Offset = "0x115400C", VA = "0x115400C")]
		public void DebugCompleteTutorial()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1154010", Offset = "0x1154010", VA = "0x1154010")]
		public void FindAndStoreAllLocalizeComponents()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x1154108", Offset = "0x1154108", VA = "0x1154108")]
		public void LocalizeEverything()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x1154224", Offset = "0x1154224", VA = "0x1154224")]
		public Tutorial()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5C0CC", Offset = "0xB5C0CC")]
	public class TutorialAnimator : MonoBehaviour
	{
		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator m_animator;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_attachedStepObjects;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_onlyCheckStepObjects;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_setObjectsInactiveOnAwake;

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1154440", Offset = "0x1154440", VA = "0x1154440")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x115456C", Offset = "0x115456C", VA = "0x115456C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x11545E8", Offset = "0x11545E8", VA = "0x11545E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1154964", Offset = "0x1154964", VA = "0x1154964")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x11546F0", Offset = "0x11546F0", VA = "0x11546F0")]
		private void Process()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x1154A64", Offset = "0x1154A64", VA = "0x1154A64")]
		public TutorialAnimator()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class TutorialBranch : MonoBehaviour
	{
		[Token(Token = "0x20002D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C12C", Offset = "0xB5C12C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stepID;

			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x1B8B3A8", Offset = "0x1B8B3A8", VA = "0x1B8B3A8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x1B8B3B0", Offset = "0x1B8B3B0", VA = "0x1B8B3B0")]
			internal bool <GetStepIndex>b__0(TutorialStep x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_completeTutorialOnFinish;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TutorialStep> m_steps;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent m_onStart;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent m_onComplete;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_currentStepID;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_isActive;

		[Token(Token = "0x17000216")]
		public TutorialStep CurrentStep
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x11525C8", Offset = "0x11525C8", VA = "0x11525C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public int CurrentStepID
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x1154A74", Offset = "0x1154A74", VA = "0x1154A74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x1154A7C", Offset = "0x1154A7C", VA = "0x1154A7C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x115310C", Offset = "0x115310C", VA = "0x115310C")]
		public void CompleteBranch()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x11539F0", Offset = "0x11539F0", VA = "0x11539F0")]
		public void SetBranchActive(bool toActive)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x11530F8", Offset = "0x11530F8", VA = "0x11530F8")]
		public void CallOnStart()
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x11533C4", Offset = "0x11533C4", VA = "0x11533C4")]
		public void StartCurrentStep()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1153774", Offset = "0x1153774", VA = "0x1153774")]
		public bool IsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1154A84", Offset = "0x1154A84", VA = "0x1154A84")]
		public int GetStepIndex(string stepID)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1154B80", Offset = "0x1154B80", VA = "0x1154B80")]
		public TutorialBranch()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5C13C", Offset = "0xB5C13C")]
	public class TutorialConstraint : MonoBehaviour
	{
		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6AE50", Offset = "0xB6AE50")]
		public bool m_disableMovement;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_disableSnapTurn;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_disableGrabbing;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool m_disableUIInteraction;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_disableForceGrab;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_disabledForceGrabRange;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_disableSettingsMenu;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6AE88", Offset = "0xB6AE88")]
		public GameObject m_padReleased;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6AEC0", Offset = "0xB6AEC0")]
		public bool m_enableHighPerformanceMode;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_cachedForceGrab;

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1154C04", Offset = "0x1154C04", VA = "0x1154C04")]
		public void EnableConstraints()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x11553F0", Offset = "0x11553F0", VA = "0x11553F0")]
		public void DisableConstraints()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1155344", Offset = "0x1155344", VA = "0x1155344")]
		private void OnPadRelease(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1155298", Offset = "0x1155298", VA = "0x1155298")]
		private void OnPadGrab(IGrabbable grabbable, IHand obj)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x11559FC", Offset = "0x11559FC", VA = "0x11559FC")]
		public TutorialConstraint()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class TutorialControlDisplay : MonoBehaviour
	{
		[Token(Token = "0x20002D7")]
		public enum ControlType
		{
			[Token(Token = "0x40012EA")]
			Teleport,
			[Token(Token = "0x40012EB")]
			SnapTurn,
			[Token(Token = "0x40012EC")]
			Settings
		}

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControlType m_controlType;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro m_controlText;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LocalizedString m_left;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizedString m_right;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1155A10", Offset = "0x1155A10", VA = "0x1155A10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x1155C5C", Offset = "0x1155C5C", VA = "0x1155C5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x1155B24", Offset = "0x1155B24", VA = "0x1155B24")]
		private void UpdateControlText(object dataObject)
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x1155D18", Offset = "0x1155D18", VA = "0x1155D18")]
		public TutorialControlDisplay()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5C19C", Offset = "0xB5C19C")]
	public class TutorialGrabbableMission : MonoBehaviour
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mission m_mission;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Grabbable m_grabbable;

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1155D20", Offset = "0x1155D20", VA = "0x1155D20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1155DF8", Offset = "0x1155DF8", VA = "0x1155DF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1155EF0", Offset = "0x1155EF0", VA = "0x1155EF0")]
		private void OnGrabbed(IGrabbable grabbable, IHand obj)
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1155F6C", Offset = "0x1155F6C", VA = "0x1155F6C")]
		public TutorialGrabbableMission()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class TutorialGrabbableRespawner : MonoBehaviour
	{
		[Token(Token = "0x20002DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C1FC", Offset = "0xB5C1FC")]
		private sealed class <RespawnCheckCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialGrabbableRespawner <>4__this;

			[Token(Token = "0x17000218")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FD2")]
				[Address(RVA = "0x1B8B494", Offset = "0x1B8B494", VA = "0x1B8B494", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000219")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FD4")]
				[Address(RVA = "0x1B8B4DC", Offset = "0x1B8B4DC", VA = "0x1B8B4DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x1B8B3E8", Offset = "0x1B8B3E8", VA = "0x1B8B3E8")]
			[DebuggerHidden]
			public <RespawnCheckCoroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x1B8B414", Offset = "0x1B8B414", VA = "0x1B8B414", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x1B8B418", Offset = "0x1B8B418", VA = "0x1B8B418", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x1B8B49C", Offset = "0x1B8B49C", VA = "0x1B8B49C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_respawnPoint;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoxCollider m_validVolume;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_validTag;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Grabbable m_grabbableToRespawn;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6AEF8", Offset = "0xB6AEF8")]
		public float m_respawnCheckFrequency;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6AF30", Offset = "0xB6AF30")]
		public bool m_setKinematicOnRespawn;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool m_spawnAttachmentOnRespawn;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool m_parentRespawnAttachment;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool m_recycleRespawnAttachmentOnGrab;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_recycleRespawnAttachmentOnPull;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PooledObject m_respawnAttachment;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_spawnAttachmentOnGrab;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool m_parentGrabAttachment;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PooledObject m_grabAttachment;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_spawnAttachmentOnPull;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool m_parentPullAttachment;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PooledObject m_pullAttachment;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform m_attachmentSpawnPosition;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent m_onRespawn;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent m_onGrabAfterRespawn;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_hasRespawnedWaitingForGrab;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_hasRespawnedWaitingForPull;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PooledObject m_grabbedRespawnAttachment;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine m_coroutine;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private WaitForSeconds m_waitTime;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Collider[] s_queryResults;

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1155F74", Offset = "0x1155F74", VA = "0x1155F74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1155FE8", Offset = "0x1155FE8", VA = "0x1155FE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1156294", Offset = "0x1156294", VA = "0x1156294")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x11563CC", Offset = "0x11563CC", VA = "0x11563CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x115621C", Offset = "0x115621C", VA = "0x115621C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E4B0", Offset = "0xB7E4B0")]
		private IEnumerator RespawnCheckCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1156664", Offset = "0x1156664", VA = "0x1156664")]
		private void SpawnIfGrabbableNotGrabbedOrInVolume()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1156ACC", Offset = "0x1156ACC", VA = "0x1156ACC")]
		public void RespawnGrabbable()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1156C14", Offset = "0x1156C14", VA = "0x1156C14")]
		private void SpawnRespawnAttachment()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1156D6C", Offset = "0x1156D6C", VA = "0x1156D6C")]
		private void RecycleRespawnAttachment()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1156DF8", Offset = "0x1156DF8", VA = "0x1156DF8")]
		private void SpawnGrabAttachment()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1156F34", Offset = "0x1156F34", VA = "0x1156F34")]
		private void SpawnPullAttachment()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x11564AC", Offset = "0x11564AC", VA = "0x11564AC")]
		private bool IsHoldingGrabbable(IHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1157070", Offset = "0x1157070", VA = "0x1157070")]
		private void OnGrabbablePulled(Grabbable grabbable, Hands.Hand hand)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1157174", Offset = "0x1157174", VA = "0x1157174")]
		public TutorialGrabbableRespawner()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class TutorialHandler : MonoBehaviour
	{
		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_stepReachedName;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_branchIndex;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onMinStep;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onComplete;

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x11571F8", Offset = "0x11571F8", VA = "0x11571F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1157600", Offset = "0x1157600", VA = "0x1157600")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x115777C", Offset = "0x115777C", VA = "0x115777C")]
		private void HandleOnNextStep()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x11574DC", Offset = "0x11574DC", VA = "0x11574DC")]
		private void HandleOnComplete()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x11575EC", Offset = "0x11575EC", VA = "0x11575EC")]
		private void HandleMinStep()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1157914", Offset = "0x1157914", VA = "0x1157914")]
		public TutorialHandler()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class TutorialPadPanel : MonoBehaviour
	{
		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_hideScreensOnStart;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<TutorialPadUIScreen> m_screens;

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x115791C", Offset = "0x115791C", VA = "0x115791C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1157930", Offset = "0x1157930", VA = "0x1157930")]
		public void SetTutorialPanelsVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x1157BCC", Offset = "0x1157BCC", VA = "0x1157BCC")]
		public TutorialPadPanel()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class TutorialPadUIScreen : MonoBehaviour
	{
		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas m_screenCanvas;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectMask2D m_screenMask;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<BoxCollider> m_screenUIColliders;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent m_onScreenSetActive;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_screenActive;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_prevScreenActive;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_hasMask;

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x1157BD4", Offset = "0x1157BD4", VA = "0x1157BD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x1157C54", Offset = "0x1157C54", VA = "0x1157C54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1157A58", Offset = "0x1157A58", VA = "0x1157A58")]
		public void SetUIScreenActive(bool isActive)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1157DD0", Offset = "0x1157DD0", VA = "0x1157DD0")]
		public void GrabAllScreenColliders()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1157ECC", Offset = "0x1157ECC", VA = "0x1157ECC")]
		public TutorialPadUIScreen()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class TutorialSceneReference : MonoBehaviour
	{
		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_id;

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x11581C8", Offset = "0x11581C8", VA = "0x11581C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1158228", Offset = "0x1158228", VA = "0x1158228")]
		public TutorialSceneReference()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public class TutorialSlider : PadUISlider
	{
		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6AFD8", Offset = "0xB6AFD8")]
		public float m_minValue;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent m_onSliderMaxValue;

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1158C88", Offset = "0x1158C88", VA = "0x1158C88", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x1158D58", Offset = "0x1158D58", VA = "0x1158D58", Slot = "10")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x1158D60", Offset = "0x1158D60", VA = "0x1158D60")]
		private void OnValueChanged(float value)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x1158D80", Offset = "0x1158D80", VA = "0x1158D80")]
		public TutorialSlider()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public abstract class TutorialStep : MonoBehaviour
	{
		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B010", Offset = "0xB6B010")]
		public AreaManager.AreaType m_areaType;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B048", Offset = "0xB6B048")]
		public UnityEvent m_onStart;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent m_onComplete;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent m_onForceComplete;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TutorialConstraint m_tutorialConstraint;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TutorialBranch m_branch;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_stepID;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B080", Offset = "0xB6B080")]
		private bool <IsComplete>k__BackingField;

		[Token(Token = "0x1700021A")]
		public string StepID
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x1153FAC", Offset = "0x1153FAC", VA = "0x1153FAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		public bool IsComplete
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x1158D94", Offset = "0x1158D94", VA = "0x1158D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E560", Offset = "0xB7E560")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FEB")]
			[Address(RVA = "0x1158D9C", Offset = "0x1158D9C", VA = "0x1158D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E570", Offset = "0xB7E570")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1158DA8", Offset = "0x1158DA8", VA = "0x1158DA8", Slot = "4")]
		public virtual void StartStep()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1158E20", Offset = "0x1158E20", VA = "0x1158E20", Slot = "5")]
		public virtual void ForceComplete()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x1158E34", Offset = "0x1158E34", VA = "0x1158E34", Slot = "6")]
		public virtual Transform GetPlayerSpawnPosition()
		{
			return null;
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1158E3C", Offset = "0x1158E3C", VA = "0x1158E3C")]
		public void AssignToBranch(TutorialBranch branch)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1158E44", Offset = "0x1158E44", VA = "0x1158E44")]
		public void MarkComplete()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1158E50", Offset = "0x1158E50", VA = "0x1158E50", Slot = "7")]
		public virtual void Complete()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x1159020", Offset = "0x1159020", VA = "0x1159020")]
		protected TutorialStep()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class TutorialStepAreaEntered : TutorialStep
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public AreaManager.AreaType m_areaEntered;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_didSubscribeToAreaEvent;

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1159028", Offset = "0x1159028", VA = "0x1159028", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x11590CC", Offset = "0x11590CC", VA = "0x11590CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1159170", Offset = "0x1159170", VA = "0x1159170")]
		private void OnEntered(AreaManager.AreaType areaType)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x1159188", Offset = "0x1159188", VA = "0x1159188")]
		public TutorialStepAreaEntered()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class TutorialStepBackpack : TutorialStep
	{
		[Serializable]
		[Token(Token = "0x20002E3")]
		public class StashedGrabbableData
		{
			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Grabbable m_grabbable;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6B100", Offset = "0xB6B100")]
			public string m_grabbableTag;

			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int m_wantedBranchID;

			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent m_onPulled;

			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UnityEvent m_onGrabbed;

			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public UnityEvent m_onReleased;

			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public UnityEvent m_onStashed;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool m_triggerWhenDiffType;

			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public UnityEvent m_onHighlightActivated;

			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public UnityEvent m_onHighlightDeactivated;

			[NonSerialized]
			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public bool m_wasGrabbed;

			[NonSerialized]
			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
			public bool m_wasReleased;

			[NonSerialized]
			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
			public bool m_wasStashed;

			[NonSerialized]
			[Token(Token = "0x400133B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
			public bool m_wasHighlighted;

			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x1B8B4E4", Offset = "0x1B8B4E4", VA = "0x1B8B4E4")]
			public bool Match(Grabbable other)
			{
				return default(bool);
			}

			[Token(Token = "0x6001000")]
			[Address(RVA = "0x1B8B600", Offset = "0x1B8B600", VA = "0x1B8B600")]
			public StashedGrabbableData()
			{
			}
		}

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent m_onAllObjectsGrabbed;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent m_onAllObjectsReleased;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent m_onSingleObjectGrabbed;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B090", Offset = "0xB6B090")]
		public bool m_branchOnCompletion;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B0C8", Offset = "0xB6B0C8")]
		public List<StashedGrabbableData> m_grabbableObjects;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_objectsGrabbed;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string m_currentGrabbableTag;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string m_previousGrabbableTag;

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x1159190", Offset = "0x1159190", VA = "0x1159190", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x11594E8", Offset = "0x11594E8", VA = "0x11594E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1159838", Offset = "0x1159838", VA = "0x1159838")]
		private void OnObjectPulled(Grabbable grabbable, Hands.Hand hand)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x11599B4", Offset = "0x11599B4", VA = "0x11599B4")]
		private void OnObjectReleased(Grabbable grabbable, Hands.Hand hand)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1159B5C", Offset = "0x1159B5C", VA = "0x1159B5C")]
		private void OnObjectGrabbed(Grabbable grabbable, Hands.Hand hand)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x1159D04", Offset = "0x1159D04", VA = "0x1159D04")]
		private void OnObjectHighlightToggled(Grabbable grabbable, bool isHighlightActive)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x1159F70", Offset = "0x1159F70", VA = "0x1159F70")]
		private void OnObjectStashed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x115A178", Offset = "0x115A178", VA = "0x115A178")]
		public TutorialStepBackpack()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class TutorialStepBowInteraction : TutorialStep
	{
		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B138", Offset = "0xB6B138")]
		public bool m_completeOnBowFire;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool m_completeOnBowDraw;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6B170", Offset = "0xB6B170")]
		public float m_targetDrawLength;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Bow m_bow;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IHand m_leftHand;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IHand m_rightHand;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IHand m_bowHand;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x115A1FC", Offset = "0x115A1FC", VA = "0x115A1FC", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x115A2C4", Offset = "0x115A2C4", VA = "0x115A2C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x115A2F8", Offset = "0x115A2F8", VA = "0x115A2F8")]
		private void CheckForBow(IHand hand)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x115A660", Offset = "0x115A660", VA = "0x115A660")]
		private void CheckForBowDraw()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x115A700", Offset = "0x115A700", VA = "0x115A700")]
		private void ArrowFired()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x115A714", Offset = "0x115A714", VA = "0x115A714")]
		public TutorialStepBowInteraction()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class TutorialStepGameEvent : TutorialStep
	{
		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_gameEventName;

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x115A724", Offset = "0x115A724", VA = "0x115A724", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x115A7D4", Offset = "0x115A7D4", VA = "0x115A7D4")]
		private void OnEvent(GameEvent evt)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x115A8C4", Offset = "0x115A8C4", VA = "0x115A8C4")]
		public TutorialStepGameEvent()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class TutorialStepInputMovement : TutorialStep
	{
		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B188", Offset = "0xB6B188")]
		public bool m_completeOnInputRelease;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Locomotion.LocomotionTeleport m_locomotionTeleport;

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x115A8CC", Offset = "0x115A8CC", VA = "0x115A8CC", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x115A9CC", Offset = "0x115A9CC", VA = "0x115A9CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x115AA78", Offset = "0x115AA78", VA = "0x115AA78")]
		private void InputDetected()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x115AA84", Offset = "0x115AA84", VA = "0x115AA84")]
		public TutorialStepInputMovement()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class TutorialStepInputRotation : TutorialStep
	{
		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B1C0", Offset = "0xB6B1C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6B1C0", Offset = "0xB6B1C0")]
		public float m_wantedRotation;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6B21C", Offset = "0xB6B21C")]
		public float m_rotationLeniency;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool m_useAbsoluteRotation;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_totalRotation;

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x115AA94", Offset = "0x115AA94", VA = "0x115AA94", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x115AB84", Offset = "0x115AB84", VA = "0x115AB84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x115AC6C", Offset = "0x115AC6C", VA = "0x115AC6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x115AD38", Offset = "0x115AD38", VA = "0x115AD38")]
		private void SnapTurnDetected(float joystickMagnitude, float angleAdded)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x115AD5C", Offset = "0x115AD5C", VA = "0x115AD5C")]
		public TutorialStepInputRotation()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class TutorialStepInputStepBack : TutorialStep
	{
		[Token(Token = "0x6001013")]
		[Address(RVA = "0x115AD70", Offset = "0x115AD70", VA = "0x115AD70", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x115AE4C", Offset = "0x115AE4C", VA = "0x115AE4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x115AF20", Offset = "0x115AF20", VA = "0x115AF20")]
		private void StepBackDetected()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x115AF2C", Offset = "0x115AF2C", VA = "0x115AF2C")]
		public TutorialStepInputStepBack()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class TutorialStepMission : TutorialStepObjectInteraction
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B234", Offset = "0xB6B234")]
		public Mission m_mission;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent m_onMissionActivated;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent m_onMissionCompleted;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent m_onMissionCollect;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x115AF34", Offset = "0x115AF34", VA = "0x115AF34", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x115B144", Offset = "0x115B144", VA = "0x115B144", Slot = "7")]
		public override void Complete()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x115B12C", Offset = "0x115B12C", VA = "0x115B12C")]
		private void OnActivated(bool active)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x115B118", Offset = "0x115B118", VA = "0x115B118")]
		private void OnComplete()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x115B104", Offset = "0x115B104", VA = "0x115B104")]
		private void OnCollect()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x115B298", Offset = "0x115B298", VA = "0x115B298")]
		public TutorialStepMission()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class TutorialStepMovement : TutorialStep
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B26C", Offset = "0xB6B26C")]
		public Transform m_locationToReach;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_locationRadius;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool m_trackObjectInsteadOfPlayer;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool m_requireObjectToBeHeld;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform m_objectToTrack;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_setupComplete;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_trackingOffset;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_distanceToPosition;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_locationRadiusSquared;

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x115B2A8", Offset = "0x115B2A8", VA = "0x115B2A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x115B714", Offset = "0x115B714", VA = "0x115B714", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x115B53C", Offset = "0x115B53C", VA = "0x115B53C")]
		private bool IsHoldingObject(IHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x115B72C", Offset = "0x115B72C", VA = "0x115B72C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x115B7D8", Offset = "0x115B7D8", VA = "0x115B7D8")]
		public TutorialStepMovement()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class TutorialStepObjectGrab : TutorialStep
	{
		[Serializable]
		[Token(Token = "0x20002EC")]
		public class Data
		{
			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Grabbable m_grabbable;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6B2DC", Offset = "0xB6B2DC")]
			public string m_grabbableTag;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEvent m_onPulled;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent m_onGrabbed;

			[NonSerialized]
			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool m_wasGrabbed;

			[NonSerialized]
			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool m_wasReleased;

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x1B8B608", Offset = "0x1B8B608", VA = "0x1B8B608")]
			public bool Match(Grabbable other)
			{
				return default(bool);
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0x1B8B724", Offset = "0x1B8B724", VA = "0x1B8B724")]
			public Data()
			{
			}
		}

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B2A4", Offset = "0xB6B2A4")]
		public bool m_completeOnRelease;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Data> m_objects;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_allObjectsGrabbed;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_allObjectsReleased;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool m_subscribedToEvents;

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x115B7F0", Offset = "0x115B7F0", VA = "0x115B7F0", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x115BB54", Offset = "0x115BB54", VA = "0x115BB54")]
		private void Update()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x115BB80", Offset = "0x115BB80", VA = "0x115BB80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x115BD74", Offset = "0x115BD74", VA = "0x115BD74")]
		private void OnObjectGrabbed(Grabbable grabbable, Hands.Hand hand)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x115BF10", Offset = "0x115BF10", VA = "0x115BF10")]
		private void OnObjectReleased(Grabbable grabbable, Hands.Hand hand)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x115C074", Offset = "0x115C074", VA = "0x115C074")]
		private void OnObjectPulled(Grabbable grabbable, Hands.Hand hand)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x115C1F8", Offset = "0x115C1F8", VA = "0x115C1F8")]
		public TutorialStepObjectGrab()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class TutorialStepObjectInteraction : TutorialStep
	{
		[Token(Token = "0x600102B")]
		[Address(RVA = "0x115C27C", Offset = "0x115C27C", VA = "0x115C27C")]
		public void OnInteraction()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x115B2A0", Offset = "0x115B2A0", VA = "0x115B2A0")]
		public TutorialStepObjectInteraction()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public class TutorialStepRotation : TutorialStep
	{
		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform m_transformToMatchForward;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6B314", Offset = "0xB6B314")]
		public float m_rotationAccuracyNeeded;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool m_requireSingleSnapTurn;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_playerTransform;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_angleDifference;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool m_snapTurnDetected;

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x115C2BC", Offset = "0x115C2BC", VA = "0x115C2BC", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x115C404", Offset = "0x115C404", VA = "0x115C404")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x115C504", Offset = "0x115C504", VA = "0x115C504")]
		private void Update()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x115C5B0", Offset = "0x115C5B0", VA = "0x115C5B0")]
		private void SnapTurnDetected(float input, float angle)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x115C5BC", Offset = "0x115C5BC", VA = "0x115C5BC")]
		public TutorialStepRotation()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5C20C", Offset = "0xB5C20C")]
	public class TutorialStepTeleport : TutorialStep
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TutorialStep m_step;

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x115C5D0", Offset = "0x115C5D0", VA = "0x115C5D0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x115C720", Offset = "0x115C720", VA = "0x115C720")]
		public TutorialStepTeleport()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x115C728", Offset = "0x115C728", VA = "0x115C728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E580", Offset = "0xB7E580")]
		private void <OnTriggerEnter>b__1_0()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class TutorialStepUIInteraction : TutorialStep
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B32C", Offset = "0xB6B32C")]
		public Transform m_customUI;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_disableOtherUI;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string[] m_disableUINames;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool m_parentCustomUIToObject;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string m_parentObjectName;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_setLocalPositionOnParent;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 m_wantedLocalPosition;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<TutorialSceneReference> m_objectsToDisable;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform m_canvasParent;

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x115C734", Offset = "0x115C734", VA = "0x115C734", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x115CB44", Offset = "0x115CB44", VA = "0x115CB44", Slot = "7")]
		public override void Complete()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x115CBF0", Offset = "0x115CBF0", VA = "0x115CBF0")]
		public void UIInteraction()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x115C94C", Offset = "0x115C94C", VA = "0x115C94C")]
		private void SetOtherUIActive(bool active)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x115CAEC", Offset = "0x115CAEC", VA = "0x115CAEC")]
		private void ParentCustomUI(Transform toParent)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x115CBFC", Offset = "0x115CBFC", VA = "0x115CBFC")]
		public void SetMovementMethodToBlink(bool isOn)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x115CCA0", Offset = "0x115CCA0", VA = "0x115CCA0")]
		public void SetMovementMethodToDash(bool isOn)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x115CD44", Offset = "0x115CD44", VA = "0x115CD44")]
		public TutorialStepUIInteraction()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class TutorialStepUnlockable : TutorialStep
	{
		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B364", Offset = "0xB6B364")]
		public Game.Unlockable m_unlockable;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AreaTriggerCollider.WaitCondition m_completeCondition;

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x115CDD8", Offset = "0x115CDD8", VA = "0x115CDD8", Slot = "4")]
		public override void StartStep()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x115CF20", Offset = "0x115CF20", VA = "0x115CF20")]
		private void OnStateChanged()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x115CF2C", Offset = "0x115CF2C", VA = "0x115CF2C", Slot = "7")]
		public override void Complete()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x115D004", Offset = "0x115D004", VA = "0x115D004")]
		public TutorialStepUnlockable()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class TutorialStepWaitForPad : TutorialStep
	{
		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B39C", Offset = "0xB6B39C")]
		public PadUIController.PanelType m_panelType;

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x115D014", Offset = "0x115D014", VA = "0x115D014")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x115D0D0", Offset = "0x115D0D0", VA = "0x115D0D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x115D18C", Offset = "0x115D18C", VA = "0x115D18C")]
		private void OnPanelSwitched(PadUIController.PanelType panelType, PadPullout pullout)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x115D1A4", Offset = "0x115D1A4", VA = "0x115D1A4")]
		public TutorialStepWaitForPad()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class TutorialStepWaitTime : TutorialStep
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_waitTime;

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x115D1AC", Offset = "0x115D1AC", VA = "0x115D1AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x115D1F0", Offset = "0x115D1F0", VA = "0x115D1F0")]
		public TutorialStepWaitTime()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class TutorialUtils : MonoBehaviour
	{
		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material m_videoMaterial;

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x115D200", Offset = "0x115D200", VA = "0x115D200")]
		public void ChangeVideoMaterialIndex(int index)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x115D2BC", Offset = "0x115D2BC", VA = "0x115D2BC")]
		public void DestroyGameObject(GameObject other)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x115D320", Offset = "0x115D320", VA = "0x115D320")]
		public void ShowPlayerBraceletLeft(bool active)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x115D424", Offset = "0x115D424", VA = "0x115D424")]
		public void ShowPlayerBraceletRight(bool active)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x115D528", Offset = "0x115D528", VA = "0x115D528")]
		public void SpawnPlayerBraceletEffectLeft(GameObject spawnEffect)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x115D6E0", Offset = "0x115D6E0", VA = "0x115D6E0")]
		public void SpawnPlayerBraceletEffectRight(GameObject spawnEffect)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x115D898", Offset = "0x115D898", VA = "0x115D898")]
		public void PlayerPadActive(bool active)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x115D968", Offset = "0x115D968", VA = "0x115D968")]
		public void OpenPad(GameObject spawnEffect)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x115DCEC", Offset = "0x115DCEC", VA = "0x115DCEC")]
		public void ClosePad()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x115DD50", Offset = "0x115DD50", VA = "0x115DD50")]
		public void CompleteCurrentStep()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x115DE4C", Offset = "0x115DE4C", VA = "0x115DE4C")]
		public void ActivateMission(Mission mission)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x115DE6C", Offset = "0x115DE6C", VA = "0x115DE6C")]
		public void CreatePadGrabbableCallback(Mission mission)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x115DF14", Offset = "0x115DF14", VA = "0x115DF14")]
		public void HasEnteredOpenWorld(bool on)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x115DF74", Offset = "0x115DF74", VA = "0x115DF74")]
		public TutorialUtils()
		{
		}
	}
}
namespace Utility
{
	[Token(Token = "0x20002F5")]
	public static class Tags
	{
		[Token(Token = "0x1700021C")]
		public static string Blade
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x11772C0", Offset = "0x11772C0", VA = "0x11772C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public static string Bow
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x1177304", Offset = "0x1177304", VA = "0x1177304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public static string GameController
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x1177348", Offset = "0x1177348", VA = "0x1177348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		public static string MainCamera
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x117738C", Offset = "0x117738C", VA = "0x117738C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public static string Menu
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x11773D0", Offset = "0x11773D0", VA = "0x11773D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public static string Player
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x1177414", Offset = "0x1177414", VA = "0x1177414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public static string NavmeshOnly
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x1177458", Offset = "0x1177458", VA = "0x1177458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		public static string PurchasableTag
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x117749C", Offset = "0x117749C", VA = "0x117749C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		public static string SceneLoading
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x11774E0", Offset = "0x11774E0", VA = "0x11774E0")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5C26C", Offset = "0xB5C26C")]
	public class AudioFader : MonoBehaviour
	{
		[Token(Token = "0x20002F7")]
		public enum AfterFade
		{
			[Token(Token = "0x4001382")]
			Nothing,
			[Token(Token = "0x4001383")]
			Mute,
			[Token(Token = "0x4001384")]
			Pause,
			[Token(Token = "0x4001385")]
			Stop
		}

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6B3E4", Offset = "0xB6B3E4")]
		[SerializeField]
		private float m_fadeInTime;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6B424", Offset = "0xB6B424")]
		[SerializeField]
		private float m_fadeOutTime;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6B464", Offset = "0xB6B464")]
		[SerializeField]
		private float m_activeVolume;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_fadeActive;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_fadeTimer;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_fadeMaxTime;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_startingVolume;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_targetVolume;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AfterFade m_afterFade;

		[Token(Token = "0x17000225")]
		public bool IsPlaying
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x144CB48", Offset = "0x144CB48", VA = "0x144CB48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000226")]
		public bool IsMuted
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x144CB64", Offset = "0x144CB64", VA = "0x144CB64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x144CB80", Offset = "0x144CB80", VA = "0x144CB80")]
		private void Update()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x144CCF0", Offset = "0x144CCF0", VA = "0x144CCF0")]
		public void FadeIn(bool forceFromZero = false, AfterFade afterFade = AfterFade.Nothing)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x144CD4C", Offset = "0x144CD4C", VA = "0x144CD4C")]
		public void FadeOut(AfterFade afterFade = AfterFade.Nothing, float durationOverride = -1f)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x144CDB0", Offset = "0x144CDB0", VA = "0x144CDB0")]
		public void ForceVolume(float toVolume)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x144CDD4", Offset = "0x144CDD4", VA = "0x144CDD4")]
		public void Play(bool fadeIn)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x144CCA8", Offset = "0x144CCA8", VA = "0x144CCA8")]
		public void Pause(bool fadeOut)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x144CCD4", Offset = "0x144CCD4", VA = "0x144CCD4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x144CC88", Offset = "0x144CC88", VA = "0x144CC88")]
		public void Mute(bool isMuted)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x144CE10", Offset = "0x144CE10", VA = "0x144CE10")]
		public AudioFader()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class Billboard : MonoBehaviour
	{
		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform m_playerHead;

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x1452C2C", Offset = "0x1452C2C", VA = "0x1452C2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1452D48", Offset = "0x1452D48", VA = "0x1452D48")]
		public Billboard()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public static class Extensions
	{
		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C2DC", Offset = "0xB5C2DC")]
		private sealed class <Fade>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioMixer mixer;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string parameterName;

			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float from;

			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float time;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float to;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <startTime>5__2;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <alpha>5__3;

			[Token(Token = "0x17000227")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600107A")]
				[Address(RVA = "0xF96844", Offset = "0xF96844", VA = "0xF96844", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000228")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600107C")]
				[Address(RVA = "0xF9688C", Offset = "0xF9688C", VA = "0xF9688C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001077")]
			[Address(RVA = "0xF966C0", Offset = "0xF966C0", VA = "0xF966C0")]
			[DebuggerHidden]
			public <Fade>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0xF966EC", Offset = "0xF966EC", VA = "0xF966EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0xF966F0", Offset = "0xF966F0", VA = "0xF966F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0xF9684C", Offset = "0xF9684C", VA = "0xF9684C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C2EC", Offset = "0xB5C2EC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Task task;

			[Token(Token = "0x600107D")]
			[Address(RVA = "0xF96654", Offset = "0xF96654", VA = "0xF96654")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600107E")]
			[Address(RVA = "0xF9665C", Offset = "0xF9665C", VA = "0xF9665C")]
			internal bool <WaitCoroutine>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x10F81B0", Offset = "0x10F81B0", VA = "0x10F81B0")]
		public static void ToWorldSpaceCapsule(this CapsuleCollider capsule, out Vector3 point0, out Vector3 point1, out float radius)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x10F8450", Offset = "0x10F8450", VA = "0x10F8450")]
		public static Vector3 Abs(this Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x10F8460", Offset = "0x10F8460", VA = "0x10F8460")]
		public static bool Contains(this LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x10F84B8", Offset = "0x10F84B8", VA = "0x10F84B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E5C0", Offset = "0xB7E5C0")]
		public static IEnumerator Fade(this AudioMixer mixer, string parameterName = "MasterVolume", float from = -80f, float to = 0f, float time = 1f)
		{
			return null;
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x10F8570", Offset = "0x10F8570", VA = "0x10F8570")]
		public static Quaternion GetXAxisRotation(this Quaternion quaternion)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x10F85E0", Offset = "0x10F85E0", VA = "0x10F85E0")]
		public static Quaternion GetYAxisRotation(this Quaternion quaternion)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x10F8650", Offset = "0x10F8650", VA = "0x10F8650")]
		public static Quaternion GetZAxisRotation(this Quaternion quaternion)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001072")]
		public static T RemoveRandom<T>(this List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6001073")]
		public static T Random<T>(this List<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x10F86C0", Offset = "0x10F86C0", VA = "0x10F86C0")]
		public static bool IsVisibleFrom(this Bounds bounds, Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x10F8710", Offset = "0x10F8710", VA = "0x10F8710")]
		public static IEnumerator WaitCoroutine(this Task task)
		{
			return null;
		}

		[Token(Token = "0x6001076")]
		public static bool TryPopFirst<T>(this List<T> list, out T item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002FC")]
	public class FeatureLock
	{
		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> m_onChange;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<object> m_lockedObjects;

		[Token(Token = "0x17000229")]
		public bool IsLocked
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x10F89F0", Offset = "0x10F89F0", VA = "0x10F89F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x10F8A44", Offset = "0x10F8A44", VA = "0x10F8A44")]
		public FeatureLock([Optional] Action<bool> onChange)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x10F8AE4", Offset = "0x10F8AE4", VA = "0x10F8AE4")]
		public void Lock(object obj)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x10F8B94", Offset = "0x10F8B94", VA = "0x10F8B94")]
		public void Release(object obj)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x10F8C44", Offset = "0x10F8C44", VA = "0x10F8C44")]
		public void LockOrRelease(object obj, bool lockOrRelease)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x10F8C50", Offset = "0x10F8C50", VA = "0x10F8C50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FD")]
	public class FeatureLock<T> where T : IComparable
	{
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<bool> m_onChange;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Dictionary<object, T> m_lockedObjects;

		[Token(Token = "0x1700022A")]
		public bool IsLocked
		{
			[Token(Token = "0x6001085")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001086")]
		public FeatureLock([Optional] Action<bool> onChange)
		{
		}

		[Token(Token = "0x6001087")]
		public virtual void Lock(object obj, T value)
		{
		}

		[Token(Token = "0x6001088")]
		public virtual void Release(object obj)
		{
		}

		[Token(Token = "0x6001089")]
		public T Max()
		{
			return (T)null;
		}

		[Token(Token = "0x600108A")]
		public T Min()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20002FE")]
	public class FeatureLockStack<T> : FeatureLock<T> where T : IComparable
	{
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly List<object> m_lockedObjectList;

		[Token(Token = "0x600108B")]
		public FeatureLockStack([Optional] Action<bool> onChange)
		{
		}

		[Token(Token = "0x600108C")]
		public override void Lock(object obj, T value)
		{
		}

		[Token(Token = "0x600108D")]
		public override void Release(object obj)
		{
		}

		[Token(Token = "0x600108E")]
		public bool TryGetCurrent(out T value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002FF")]
	public class GenericEventTriggers : MonoBehaviour
	{
		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent m_onGameObjectEnable;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onGameObjectDisable;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onGameObjectStart;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onGameObjectDestroy;

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x1264830", Offset = "0x1264830", VA = "0x1264830")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1264844", Offset = "0x1264844", VA = "0x1264844")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x1264858", Offset = "0x1264858", VA = "0x1264858")]
		private void Start()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x126486C", Offset = "0x126486C", VA = "0x126486C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x1264880", Offset = "0x1264880", VA = "0x1264880")]
		public GenericEventTriggers()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public static class GenuineCheck
	{
		[Token(Token = "0x400139A")]
		public const string ConfigFileName = "config";

		[Token(Token = "0x400139B")]
		private const int HashSize = 16;

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1264888", Offset = "0x1264888", VA = "0x1264888")]
		public static bool IsGenuine()
		{
			return default(bool);
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1265458", Offset = "0x1265458", VA = "0x1265458")]
		private static void CopyHash(byte[] hash, byte[] dstArray, ref int idx)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1265494", Offset = "0x1265494", VA = "0x1265494")]
		private static byte[] GetHashes(string dllPath)
		{
			return null;
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1265348", Offset = "0x1265348", VA = "0x1265348")]
		public static byte[] GetAllHashes(string[] paths)
		{
			return null;
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x12651C0", Offset = "0x12651C0", VA = "0x12651C0")]
		private static Dictionary<string, string> ConvertHashes(byte[] bytes)
		{
			return null;
		}
	}
	[Token(Token = "0x2000301")]
	public static class Geometry3D
	{
		[Token(Token = "0x2000302")]
		public struct Line
		{
			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 start;

			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 end;

			[Token(Token = "0x1700022B")]
			public Ray Ray
			{
				[Token(Token = "0x60010B0")]
				[Address(RVA = "0xFCDE30", Offset = "0xFCDE30", VA = "0xFCDE30")]
				get
				{
					return default(Ray);
				}
			}

			[Token(Token = "0x1700022C")]
			public Vector3 Direction
			{
				[Token(Token = "0x60010B1")]
				[Address(RVA = "0xFCDEBC", Offset = "0xFCDEBC", VA = "0xFCDEBC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x1700022D")]
			public float Length
			{
				[Token(Token = "0x60010B2")]
				[Address(RVA = "0xFCDF00", Offset = "0xFCDF00", VA = "0xFCDF00")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700022E")]
			public float LengthSqr
			{
				[Token(Token = "0x60010B3")]
				[Address(RVA = "0xFCDF44", Offset = "0xFCDF44", VA = "0xFCDF44")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0xFCDF88", Offset = "0xFCDF88", VA = "0xFCDF88")]
			public Vector3 FromDistanceClamped(float distance)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0xFCE064", Offset = "0xFCE064", VA = "0xFCE064")]
			public Line(Vector3 s, Vector3 e)
			{
			}
		}

		[Token(Token = "0x2000303")]
		public struct AABB
		{
			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_min;

			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 m_max;

			[Token(Token = "0x1700022F")]
			public Vector3 Center
			{
				[Token(Token = "0x60010B6")]
				[Address(RVA = "0xFCDD30", Offset = "0xFCDD30", VA = "0xFCDD30")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x60010B7")]
			[Address(RVA = "0xFCDD60", Offset = "0xFCDD60", VA = "0xFCDD60")]
			public AABB(Vector3 min, Vector3 max)
			{
			}
		}

		[Token(Token = "0x2000304")]
		public struct Sphere
		{
			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float radius;

			[Token(Token = "0x60010B8")]
			[Address(RVA = "0xFCE074", Offset = "0xFCE074", VA = "0xFCE074")]
			public Sphere(Vector3 p, float r)
			{
			}
		}

		[Token(Token = "0x2000305")]
		public struct Triangle
		{
			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 a;

			[Token(Token = "0x40013A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 b;

			[Token(Token = "0x40013A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 c;

			[Token(Token = "0x17000230")]
			public Vector3 Center
			{
				[Token(Token = "0x60010B9")]
				[Address(RVA = "0xFCE080", Offset = "0xFCE080", VA = "0xFCE080")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x60010BA")]
			[Address(RVA = "0xFCE0C0", Offset = "0xFCE0C0", VA = "0xFCE0C0")]
			public Triangle(Vector3 a, Vector3 b, Vector3 c)
			{
			}
		}

		[Token(Token = "0x2000306")]
		public struct RaycastResult
		{
			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 point;

			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 normal;

			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float t;

			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool hit;
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1265888", Offset = "0x1265888", VA = "0x1265888")]
		public static Plane FromTriangle(Triangle t)
		{
			return default(Plane);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1265940", Offset = "0x1265940", VA = "0x1265940")]
		public static bool VectorsOnSameSide(Vector3 p, Vector3 a, Vector3 b, float sameSideEpsilon = 0.001f)
		{
			return default(bool);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x12659FC", Offset = "0x12659FC", VA = "0x12659FC")]
		public static bool PointInTriangle(Vector3 p, Triangle t)
		{
			return default(bool);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1265B2C", Offset = "0x1265B2C", VA = "0x1265B2C")]
		public static float PercentageOnLine(Line line, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x1265B84", Offset = "0x1265B84", VA = "0x1265B84")]
		public static Vector3 ClosestPoint(Line line, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1265BFC", Offset = "0x1265BFC", VA = "0x1265BFC")]
		public static Vector3 ClosestPoint(Vector3 origin, Vector3 direction, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1265C58", Offset = "0x1265C58", VA = "0x1265C58")]
		public static Vector3 ClosestPoint(Plane plane, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x1265CE8", Offset = "0x1265CE8", VA = "0x1265CE8")]
		public static Vector3 ClosestPoint(Triangle t, Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x126601C", Offset = "0x126601C", VA = "0x126601C")]
		public static bool TriangleSphere(Triangle t, Sphere s, out Vector3 closest)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x12660B4", Offset = "0x12660B4", VA = "0x12660B4")]
		public static bool Linetest(Sphere sphere, Line line, out Vector3 closest)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1266198", Offset = "0x1266198", VA = "0x1266198")]
		public static bool Linetest(Plane plane, Line line, out RaycastResult raycast)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x126640C", Offset = "0x126640C", VA = "0x126640C")]
		public static bool Linetest(Triangle triangle, Line line, out RaycastResult raycast)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x1266508", Offset = "0x1266508", VA = "0x1266508")]
		public static bool Raycast(Triangle triangle, Ray ray, out RaycastResult outResult)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x12662A4", Offset = "0x12662A4", VA = "0x12662A4")]
		public static bool Raycast(Plane plane, Ray ray, out RaycastResult outResult)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1266698", Offset = "0x1266698", VA = "0x1266698")]
		public static Vector3 Barycentric(Vector3 p, Triangle t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x12668A4", Offset = "0x12668A4", VA = "0x12668A4")]
		public static bool Intersects(Triangle triangle, CapsuleCollider capsule, out Vector3 closest, float radiusMultiplier = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x12669C4", Offset = "0x12669C4", VA = "0x12669C4")]
		public static bool Intersects(Line line, CapsuleCollider capsule, out Vector3 closest, float radiusMultiplier = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x1266BBC", Offset = "0x1266BBC", VA = "0x1266BBC")]
		public static bool Intersects(Triangle t, SphereCollider sphere, out Vector3 closest, float radiusMultiplier = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1266CC4", Offset = "0x1266CC4", VA = "0x1266CC4")]
		public static bool Intersects(Line line, SphereCollider sphere, out Vector3 closest, float radiusMultiplier = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x1266E1C", Offset = "0x1266E1C", VA = "0x1266E1C")]
		public static bool Intersects(Line line, BoxCollider boxCollider, out Vector3[] intersections, float colliderDilation = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x1266ED8", Offset = "0x1266ED8", VA = "0x1266ED8")]
		public static bool Intersects(Ray ray, BoxCollider boxCollider, out Vector3[] intersections, float colliderDilation = 1f, float distance = float.MaxValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x12672B0", Offset = "0x12672B0", VA = "0x12672B0")]
		public static bool Intersects(Triangle triangle, BoxCollider boxCollider, float colliderDilation)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x1268134", Offset = "0x1268134", VA = "0x1268134")]
		public static Vector3 ProjectPointLine(Vector3 point, Line line)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000307")]
	public class MaterialLerp
	{
		[Serializable]
		[Token(Token = "0x2000308")]
		public abstract class MaterialMod
		{
			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material m_material;

			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_propertyName;

			[Token(Token = "0x60010C1")]
			public abstract void Apply(float time);

			[Token(Token = "0x60010C2")]
			[Address(RVA = "0xFDC000", Offset = "0xFDC000", VA = "0xFDC000")]
			protected MaterialMod()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000309")]
		public class MaterialModFloat : MaterialMod
		{
			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float m_from;

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float m_to;

			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xFDC0F4", Offset = "0xFDC0F4", VA = "0xFDC0F4", Slot = "4")]
			public override void Apply(float time)
			{
			}

			[Token(Token = "0x60010C4")]
			[Address(RVA = "0xFDC13C", Offset = "0xFDC13C", VA = "0xFDC13C")]
			public MaterialModFloat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200030A")]
		public class MaterialModColor : MaterialMod
		{
			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color m_from;

			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color m_to;

			[Token(Token = "0x60010C5")]
			[Address(RVA = "0xFDC05C", Offset = "0xFDC05C", VA = "0xFDC05C", Slot = "4")]
			public override void Apply(float time)
			{
			}

			[Token(Token = "0x60010C6")]
			[Address(RVA = "0xFDC0B4", Offset = "0xFDC0B4", VA = "0xFDC0B4")]
			public MaterialModColor()
			{
			}
		}

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeReference]
		public List<MaterialMod> m_materialMods;

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1CC07F4", Offset = "0x1CC07F4", VA = "0x1CC07F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x1CC0804", Offset = "0x1CC0804", VA = "0x1CC0804")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x1CC080C", Offset = "0x1CC080C", VA = "0x1CC080C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1CC07FC", Offset = "0x1CC07FC", VA = "0x1CC07FC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1CC0814", Offset = "0x1CC0814", VA = "0x1CC0814")]
		public void Lerp(float t)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1CC0950", Offset = "0x1CC0950", VA = "0x1CC0950")]
		public MaterialLerp()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class MaterialPropertyBlockHelper : MonoBehaviour
	{
		[Token(Token = "0x200030C")]
		public enum PropBlockTypes
		{
			[Token(Token = "0x40013B7")]
			Int,
			[Token(Token = "0x40013B8")]
			Float,
			[Token(Token = "0x40013B9")]
			Vector,
			[Token(Token = "0x40013BA")]
			Color
		}

		[Serializable]
		[Token(Token = "0x200030D")]
		public struct PropBlockVals
		{
			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_propertyName;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PropBlockTypes m_propertyType;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int m_intValue;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_floatValue;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector2 m_vectorValue;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Color m_colorValue;
		}

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Renderer> m_renderers;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PropBlockVals> m_propertyActiveValues;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<PropBlockVals> m_propertyInactiveValues;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PropBlockVals> m_selectedValues;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock m_propertyBlock;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isSetup;

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1CC09D4", Offset = "0x1CC09D4", VA = "0x1CC09D4")]
		private void Setup()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1CC0A44", Offset = "0x1CC0A44", VA = "0x1CC0A44")]
		public void SetPropertyBlocksActive(bool isActive)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1CC0DD4", Offset = "0x1CC0DD4", VA = "0x1CC0DD4")]
		public MaterialPropertyBlockHelper()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public static class NetworkUtils
	{
		[Token(Token = "0x200030F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C2FC", Offset = "0xB5C2FC")]
		private sealed class <PingPeriodically>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<bool> onCheck;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float pingTimeout;

			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string address;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float checkEvery;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010D0")]
				[Address(RVA = "0xFB535C", Offset = "0xFB535C", VA = "0xFB535C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010D2")]
				[Address(RVA = "0xFB53A4", Offset = "0xFB53A4", VA = "0xFB53A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xFB524C", Offset = "0xFB524C", VA = "0xFB524C")]
			[DebuggerHidden]
			public <PingPeriodically>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60010CE")]
			[Address(RVA = "0xFB5278", Offset = "0xFB5278", VA = "0xFB5278", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010CF")]
			[Address(RVA = "0xFB527C", Offset = "0xFB527C", VA = "0xFB527C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010D1")]
			[Address(RVA = "0xFB5364", Offset = "0xFB5364", VA = "0xFB5364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C30C", Offset = "0xB5C30C")]
		private sealed class <PingHttp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string address;

			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float pingTimeout;

			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<bool> onCheck;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010D6")]
				[Address(RVA = "0xFB51FC", Offset = "0xFB51FC", VA = "0xFB51FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010D8")]
				[Address(RVA = "0xFB5244", Offset = "0xFB5244", VA = "0xFB5244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xFB50A0", Offset = "0xFB50A0", VA = "0xFB50A0")]
			[DebuggerHidden]
			public <PingHttp>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60010D4")]
			[Address(RVA = "0xFB50CC", Offset = "0xFB50CC", VA = "0xFB50CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010D5")]
			[Address(RVA = "0xFB50D0", Offset = "0xFB50D0", VA = "0xFB50D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xFB5204", Offset = "0xFB5204", VA = "0xFB5204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000311")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C31C", Offset = "0xB5C31C")]
		private sealed class <Ping>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string ip;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float pingTimeout;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<bool> onCheck;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Ping <ping>5__2;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeoutTime>5__3;

			[Token(Token = "0x17000235")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010DC")]
				[Address(RVA = "0xFB5050", Offset = "0xFB5050", VA = "0xFB5050", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000236")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010DE")]
				[Address(RVA = "0xFB5098", Offset = "0xFB5098", VA = "0xFB5098", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010D9")]
			[Address(RVA = "0xFB4EBC", Offset = "0xFB4EBC", VA = "0xFB4EBC")]
			[DebuggerHidden]
			public <Ping>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60010DA")]
			[Address(RVA = "0xFB4EE8", Offset = "0xFB4EE8", VA = "0xFB4EE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010DB")]
			[Address(RVA = "0xFB4EEC", Offset = "0xFB4EEC", VA = "0xFB4EEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010DD")]
			[Address(RVA = "0xFB5058", Offset = "0xFB5058", VA = "0xFB5058", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013C1")]
		public const string PingIPGlobal = "www.google.com";

		[Token(Token = "0x40013C2")]
		public const string PingIPChina = "www.baidu.com";

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x10DEE7C", Offset = "0x10DEE7C", VA = "0x10DEE7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E700", Offset = "0xB7E700")]
		public static IEnumerator PingPeriodically(Action<bool> onCheck, float checkEvery = 1f, float pingTimeout = 1f, string address = "www.google.com")
		{
			return null;
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x10E98E0", Offset = "0x10E98E0", VA = "0x10E98E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E760", Offset = "0xB7E760")]
		public static IEnumerator PingHttp(Action<bool> onCheck, float pingTimeout = 1f, string address = "www.google.com")
		{
			return null;
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x10E9984", Offset = "0x10E9984", VA = "0x10E9984")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7E7C0", Offset = "0xB7E7C0")]
		public static IEnumerator Ping(Action<bool> onCheck, float pingTimeout = 1f, string ip = "www.google.com")
		{
			return null;
		}
	}
	[Token(Token = "0x2000312")]
	public static class Physics
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RaycastHit[] s_raycastHits;

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xF510A0", Offset = "0xF510A0", VA = "0xF510A0")]
		public static bool ConeCast(Vector3 origin, float startRadius, float endRadius, Vector3 direction, out RaycastHit hit, float maxDistance, int layerMask, [Optional] Predicate<RaycastHit> isValid, QueryTriggerInteraction queryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000313")]
	public class RaycastHitDistanceComparer : IComparer<RaycastHit>
	{
		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RaycastHitDistanceComparer s_instance;

		[Token(Token = "0x17000237")]
		public static RaycastHitDistanceComparer Instance
		{
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x1006A98", Offset = "0x1006A98", VA = "0x1006A98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1006B24", Offset = "0x1006B24", VA = "0x1006B24", Slot = "4")]
		public int Compare(RaycastHit left, RaycastHit right)
		{
			return default(int);
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1006B1C", Offset = "0x1006B1C", VA = "0x1006B1C")]
		public RaycastHitDistanceComparer()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class SimpleArcJoint : MonoBehaviour
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B4F4", Offset = "0xB6B4F4")]
		public Vector3 m_normal;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_up;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform m_connectedBody;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B52C", Offset = "0xB6B52C")]
		public bool m_clampRotation;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6B564", Offset = "0xB6B564")]
		public RangedFloat m_maxRotation;

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xF0C6D4", Offset = "0xF0C6D4", VA = "0xF0C6D4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xF0C92C", Offset = "0xF0C92C", VA = "0xF0C92C")]
		public SimpleArcJoint()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class SimpleDynamicBone : MonoBehaviour
	{
		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B59C", Offset = "0xB6B59C")]
		public Vector3 m_up;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_gravityMultiplier;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] m_transforms;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xF0D3B8", Offset = "0xF0D3B8", VA = "0xF0D3B8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xF0D4F8", Offset = "0xF0D4F8", VA = "0xF0D4F8")]
		public SimpleDynamicBone()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class UnityEventAnimationPlayer : MonoBehaviour
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation m_animation;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_canRepeatAnimation;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_usePlayMode;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PlayMode m_playMode;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_useAnimationName;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_animationName;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6B5E4", Offset = "0xB6B5E4")]
		public float m_animationSpeed;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_hasPlayedAnimation;

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1226E38", Offset = "0x1226E38", VA = "0x1226E38")]
		public void Play()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1226EF8", Offset = "0x1226EF8", VA = "0x1226EF8")]
		public void PlayReverse()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1226F70", Offset = "0x1226F70", VA = "0x1226F70")]
		public UnityEventAnimationPlayer()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public static class Utils
	{
		[Serializable]
		[Token(Token = "0x2000318")]
		public struct TextMeshColourData
		{
			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color m_gradientTop;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color m_gradientBottom;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color m_stroke;

			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color m_underlay;
		}

		[Token(Token = "0x2000319")]
		public enum Operator
		{
			[Token(Token = "0x40013F9")]
			None,
			[Token(Token = "0x40013FA")]
			EqualTo,
			[Token(Token = "0x40013FB")]
			NotEqualTo,
			[Token(Token = "0x40013FC")]
			LessThan,
			[Token(Token = "0x40013FD")]
			LessThanOrEqualTo,
			[Token(Token = "0x40013FE")]
			GreaterThan,
			[Token(Token = "0x40013FF")]
			GreaterThanOrEqualTo
		}

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B61C", Offset = "0xB6B61C")]
		private static readonly Type <IntType>k__BackingField;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B62C", Offset = "0xB6B62C")]
		private static readonly Type <FloatType>k__BackingField;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B63C", Offset = "0xB6B63C")]
		private static readonly Type <BoolType>k__BackingField;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B64C", Offset = "0xB6B64C")]
		private static readonly Type <StringType>k__BackingField;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static DateTime s_epoch;

		[Token(Token = "0x40013ED")]
		public const float SqrtTwoOverTwo = 0.70710677f;

		[Token(Token = "0x40013EE")]
		private const int SecondsInMinute = 60;

		[Token(Token = "0x40013EF")]
		private const int SecondsInHour = 3600;

		[Token(Token = "0x40013F0")]
		private const int SecondsInDay = 86400;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly string[] s_numberStringsToNinetyNine;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly StringBuilder s_timeSpanStringBuilder;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly FieldInfo s_doTweenPathLengthField;

		[Token(Token = "0x17000238")]
		public static Type IntType
		{
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x122A634", Offset = "0x122A634", VA = "0x122A634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E910", Offset = "0xB7E910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		public static Type FloatType
		{
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x122A698", Offset = "0x122A698", VA = "0x122A698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E920", Offset = "0xB7E920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		public static Type BoolType
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x122A6FC", Offset = "0x122A6FC", VA = "0x122A6FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E930", Offset = "0xB7E930")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public static Type StringType
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x122A760", Offset = "0x122A760", VA = "0x122A760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7E940", Offset = "0xB7E940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x122A7C4", Offset = "0x122A7C4", VA = "0x122A7C4")]
		public static bool PerformOperation(Operator op, IComparable input, object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x122AA70", Offset = "0x122AA70", VA = "0x122AA70")]
		public static Vector3 RandomOnUnitSphere(System.Random generator)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x122AB1C", Offset = "0x122AB1C", VA = "0x122AB1C")]
		public static bool AreSameSign(float num1, float num2)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x122AB4C", Offset = "0x122AB4C", VA = "0x122AB4C")]
		public static Vector2 RandomOnUnitCircle()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x122AC2C", Offset = "0x122AC2C", VA = "0x122AC2C")]
		public static void RandomSpan(int minInclusive, int maxExclusive, int span, out int start, out int num)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x122ABEC", Offset = "0x122ABEC", VA = "0x122ABEC")]
		public static Vector2 CoordinatesOnUnitCircle(float degrees)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x122ACD4", Offset = "0x122ACD4", VA = "0x122ACD4")]
		public static void SetBoolParamOnAnimatorInHierarchy(GameObject obj, int paramId, bool value)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x122ADD4", Offset = "0x122ADD4", VA = "0x122ADD4")]
		public static string AddOrdinal(int num)
		{
			return null;
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x122AF18", Offset = "0x122AF18", VA = "0x122AF18")]
		public static void StopAllPFXInHierarchy(GameObject obj)
		{
		}

		[Token(Token = "0x60010F8")]
		public static List<Type> GetTypesInheritedFrom<T>(bool includeNested = false)
		{
			return null;
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x122B048", Offset = "0x122B048", VA = "0x122B048")]
		public static List<Type> GetTypesInheritedFrom(Type target, bool includeNested = false)
		{
			return null;
		}

		[Token(Token = "0x60010FA")]
		public static bool GetFirstComponentOfAnyInParent<T1, T2>(Transform transform, out T1 output1, out T2 output2) where T1 : UnityEngine.Behaviour where T2 : UnityEngine.Behaviour
		{
			return default(bool);
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x122B208", Offset = "0x122B208", VA = "0x122B208")]
		public static DateTime ConvertEpochTimestampToDateTime(int epochTimestamp)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1229CD4", Offset = "0x1229CD4", VA = "0x1229CD4")]
		public static int ConvertDateTimeToEpochTimestamp(DateTime time)
		{
			return default(int);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x122B278", Offset = "0x122B278", VA = "0x122B278")]
		public static int ConvertDateTimeToEpochDay(DateTime time)
		{
			return default(int);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x122B3C8", Offset = "0x122B3C8", VA = "0x122B3C8")]
		public static string ConvertSecondsToMeaningfulTimeSpanString(int seconds)
		{
			return null;
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x12246FC", Offset = "0x12246FC", VA = "0x12246FC")]
		public static string GetTimerString(int seconds)
		{
			return null;
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x122B870", Offset = "0x122B870", VA = "0x122B870")]
		public static string GetTimerString(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x122B93C", Offset = "0x122B93C", VA = "0x122B93C")]
		public static Transform FindDeepChild(this Transform aParent, string aName)
		{
			return null;
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x122BCD4", Offset = "0x122BCD4", VA = "0x122BCD4")]
		public static GameObject FindChildWithTag(this GameObject parent, string tag)
		{
			return null;
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x122C07C", Offset = "0x122C07C", VA = "0x122C07C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7E970", Offset = "0xB7E970")]
		public static void DrawWireCapsule(Vector3 pos, Quaternion rot, float radius, float height, [Optional] Color color)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x122C080", Offset = "0x122C080", VA = "0x122C080")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7E9A8", Offset = "0xB7E9A8")]
		public static void DrawWireCone(Vector3 pos, Quaternion rot, float distance, float startRadius, float endRadius, [Optional] Color color)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x122C084", Offset = "0x122C084", VA = "0x122C084")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7E9E0", Offset = "0xB7E9E0")]
		public static void DebugDrawCapsule(Vector3 start, Vector3 end, float radius, Color color)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x122C4E4", Offset = "0x122C4E4", VA = "0x122C4E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7EA18", Offset = "0xB7EA18")]
		public static void DebugDrawBox(Vector3 center, Vector3 extents, Quaternion rotation, Color color, float duration = 0.016f)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x122CA50", Offset = "0x122CA50", VA = "0x122CA50")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7EA50", Offset = "0xB7EA50")]
		public static void DebugDrawPoint(Vector3 center, Color color, float size = 0.1f, float duration = 0.016f)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x122CBE4", Offset = "0x122CBE4", VA = "0x122CBE4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7EA88", Offset = "0xB7EA88")]
		public static void DebugDrawCircle(Vector3 center, float radius, Color color, int precision = 36, float duration = 0.2f)
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x122CD78", Offset = "0x122CD78", VA = "0x122CD78")]
		public static float GetPathDuration(this DOTweenPath path)
		{
			return default(float);
		}

		[Token(Token = "0x600110A")]
		public static List<Type> FindSubClassesOf<T>([Optional] Type excludingAttributeType)
		{
			return null;
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x122CED4", Offset = "0x122CED4", VA = "0x122CED4")]
		public static void SetLayerRecursively(this GameObject obj, int layer)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x122D1CC", Offset = "0x122D1CC", VA = "0x122D1CC")]
		public static Texture2D FlippedTexture(Texture2D original, bool upSideDown = true)
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x122D344", Offset = "0x122D344", VA = "0x122D344")]
		public static void SetParentAtCurrentTransform(this ParentConstraint parentConstraint, Transform parent, int constraintIndex)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x122D4AC", Offset = "0x122D4AC", VA = "0x122D4AC")]
		public static void SetConstraintWeight(this ParentConstraint parentConstraint, int constraintIndex, float weight)
		{
		}

		[Token(Token = "0x600110F")]
		public static List<T> Filter<T>(this IEnumerable<T> array, Predicate<T> condition)
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x122D51C", Offset = "0x122D51C", VA = "0x122D51C")]
		public static Vector3 GetSmallestRotationValue(Vector3 eulerAngles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x122D614", Offset = "0x122D614", VA = "0x122D614")]
		public static Vector3 GetAngularVelocity(Quaternion previousRotation, Quaternion currentRotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001112")]
		public static void Fill<T>(this T[] array, T value)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x122D70C", Offset = "0x122D70C", VA = "0x122D70C")]
		public static bool IsNaNOrInfinite(this Vector3 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x122D7A0", Offset = "0x122D7A0", VA = "0x122D7A0")]
		public static Mesh BuildQuad(float width, float height)
		{
			return null;
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x122D9F0", Offset = "0x122D9F0", VA = "0x122D9F0")]
		public static List<GameObject> FindObjectsWithTag(this GameObject parent, string tag, bool includeInactive)
		{
			return null;
		}
	}
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB5C33C", Offset = "0xB5C33C")]
	public class CircularArray<T> : IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x200031B")]
		private class CircularEnumerator<TS> : IEnumerator<TS>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CircularArray<TS> m_array;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int m_position;

			[Token(Token = "0x17000240")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001124")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			public TS Current
			{
				[Token(Token = "0x6001125")]
				get
				{
					return (TS)null;
				}
			}

			[Token(Token = "0x6001121")]
			public CircularEnumerator(CircularArray<TS> array)
			{
			}

			[Token(Token = "0x6001122")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001123")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001126")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T[] m_list;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int m_num;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_start;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_count;

		[Token(Token = "0x1700023C")]
		public int Count
		{
			[Token(Token = "0x6001117")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023D")]
		public T Last
		{
			[Token(Token = "0x6001118")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700023E")]
		public T First
		{
			[Token(Token = "0x6001119")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700023F")]
		public T Item
		{
			[Token(Token = "0x600111B")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600111A")]
		public CircularArray(int num)
		{
		}

		[Token(Token = "0x600111C")]
		public void AddLast(T value)
		{
		}

		[Token(Token = "0x600111D")]
		public void RemoveFirst()
		{
		}

		[Token(Token = "0x600111E")]
		private int Modulo(int delta)
		{
			return default(int);
		}

		[Token(Token = "0x600111F")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001120")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace Quality
{
	[Token(Token = "0x200031C")]
	public class LowQualityDisable : MonoBehaviour
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QualityDisable.DisableType m_type;

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x1CBF09C", Offset = "0x1CBF09C", VA = "0x1CBF09C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1CBF194", Offset = "0x1CBF194", VA = "0x1CBF194")]
		public LowQualityDisable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031D")]
	public class QualityCondition
	{
		[Token(Token = "0x200031E")]
		public enum Operator
		{
			[Token(Token = "0x400140A")]
			LowerThan,
			[Token(Token = "0x400140B")]
			LowerOrEqualThan,
			[Token(Token = "0x400140C")]
			Is,
			[Token(Token = "0x400140D")]
			IsNot,
			[Token(Token = "0x400140E")]
			HigherOrEqualThan,
			[Token(Token = "0x400140F")]
			HigherThan
		}

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_quality;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Operator m_operator;

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xFFFF24", Offset = "0xFFFF24", VA = "0xFFFF24")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xFFFFCC", Offset = "0xFFFFCC", VA = "0xFFFFCC")]
		public QualityCondition()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class QualityDisable : MonoBehaviour
	{
		[Token(Token = "0x2000320")]
		public enum DisableType
		{
			[Token(Token = "0x4001413")]
			Destroy,
			[Token(Token = "0x4001414")]
			Disable
		}

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QualityCondition m_condition;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableType m_type;

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xFFFFDC", Offset = "0xFFFFDC", VA = "0xFFFFDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x10000A8", Offset = "0x10000A8", VA = "0x10000A8")]
		public QualityDisable()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public class QualityLevelAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x600112D")]
		[Address(RVA = "0x1000120", Offset = "0x1000120", VA = "0x1000120")]
		public QualityLevelAttribute()
		{
		}
	}
}
namespace Systems
{
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C374", Offset = "0xB5C374")]
	public class GameConfig : SingletonScriptableObject<GameConfig>
	{
		[Serializable]
		[Token(Token = "0x2000323")]
		public struct QualityHeadsetOverride
		{
			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ProviderBase.HeadsetModels m_headsetModel;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string[] m_shaderDisabledFeatures;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_maxShaderLOD;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MaterialQuality m_materialQuality;
		}

		[Serializable]
		[Token(Token = "0x2000324")]
		public struct GameData
		{
			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0xB6B68C", Offset = "0xB6B68C")]
			[SerializeField]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B68C", Offset = "0xB6B68C")]
			public string m_sku;

			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SceneConfig m_sceneConfig;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B6FC", Offset = "0xB6B6FC")]
			public ShaderPreload m_shaderPreload;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ShaderPreloadingFirstTimeSetUp m_shaderPreloadingPrefab;

			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B734", Offset = "0xB6B734")]
			public GameObject m_playerPrefab;

			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalPlayer m_networkPlayerPrefab;

			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PhotonAppSettingsOverrides m_photonOverrides;

			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B76C", Offset = "0xB6B76C")]
			public string[] m_shaderDisabledFeatures;

			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int m_maxShaderLOD;

			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public MaterialQuality m_materialQuality;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public QualityHeadsetOverride[] m_qualityHeadsetOverrides;
		}

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_useNetworkAuthentication;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameData m_data;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string m_platformName;

		[Token(Token = "0x17000242")]
		public string PlatformName
		{
			[Token(Token = "0x600112E")]
			[Address(RVA = "0x125745C", Offset = "0x125745C", VA = "0x125745C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		public GameData Data
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0x1257464", Offset = "0x1257464", VA = "0x1257464")]
			get
			{
				return default(GameData);
			}
		}

		[Token(Token = "0x17000244")]
		public string SKU
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x1257474", Offset = "0x1257474", VA = "0x1257474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		public string[] ShaderDisabledFeatures
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0x125747C", Offset = "0x125747C", VA = "0x125747C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public ShaderPreloadingFirstTimeSetUp ShaderPreloadingPrefab
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0x1257484", Offset = "0x1257484", VA = "0x1257484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public MaterialQuality MaterialQuality
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0x125748C", Offset = "0x125748C", VA = "0x125748C")]
			get
			{
				return default(MaterialQuality);
			}
		}

		[Token(Token = "0x17000248")]
		public GameObject PlayerPrefab
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x1257494", Offset = "0x1257494", VA = "0x1257494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		public LocalPlayer NetworkPlayerPrefab
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x125749C", Offset = "0x125749C", VA = "0x125749C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		public bool UseNetworkAuthentication
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x12574A4", Offset = "0x12574A4", VA = "0x12574A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024B")]
		public SceneConfig SceneConfig
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x12574AC", Offset = "0x12574AC", VA = "0x12574AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		public ShaderPreload ShaderPreload
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x12574B4", Offset = "0x12574B4", VA = "0x12574B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		public bool HasFixedRegionOverride
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x12574BC", Offset = "0x12574BC", VA = "0x12574BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024E")]
		private static string GameConfigLocation
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x1257558", Offset = "0x1257558", VA = "0x1257558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x125759C", Offset = "0x125759C", VA = "0x125759C")]
		public void Apply()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x1257864", Offset = "0x1257864", VA = "0x1257864")]
		public GameConfig()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class NetworkManager : MonoBehaviour
	{
		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_defaultFrequencyCheck;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_defaultOfflineFrequencyCheck;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RangedFloat m_timeoutRange;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B7D4", Offset = "0xB6B7D4")]
		private static NetworkManager <Instance>k__BackingField;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B7E4", Offset = "0xB6B7E4")]
		private bool <Connected>k__BackingField;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B7F4", Offset = "0xB6B7F4")]
		private float <CheckFrequency>k__BackingField;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B804", Offset = "0xB6B804")]
		private float <TimeoutTime>k__BackingField;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly FeatureLock<float> m_pingFrequencyFeatureLock;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_checkChina;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_periodicallyPingCor;

		[Token(Token = "0x1700024F")]
		public static NetworkManager Instance
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x10DE670", Offset = "0x10DE670", VA = "0x10DE670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EB40", Offset = "0xB7EB40")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x10DE6BC", Offset = "0x10DE6BC", VA = "0x10DE6BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EB50", Offset = "0xB7EB50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public bool Connected
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0x10DE710", Offset = "0x10DE710", VA = "0x10DE710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EB60", Offset = "0xB7EB60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001140")]
			[Address(RVA = "0x10DE718", Offset = "0x10DE718", VA = "0x10DE718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EB70", Offset = "0xB7EB70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public float CheckFrequency
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0x10DE724", Offset = "0x10DE724", VA = "0x10DE724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EB80", Offset = "0xB7EB80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x10DE72C", Offset = "0x10DE72C", VA = "0x10DE72C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EB90", Offset = "0xB7EB90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public float TimeoutTime
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x10DE734", Offset = "0x10DE734", VA = "0x10DE734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EBA0", Offset = "0xB7EBA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x10DE73C", Offset = "0x10DE73C", VA = "0x10DE73C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EBB0", Offset = "0xB7EBB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public float DefaultOfflineFrequencyCheck
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x10DE8C4", Offset = "0x10DE8C4", VA = "0x10DE8C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000040")]
		public static event Action<bool> OnPingResultReceived
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x10DE744", Offset = "0x10DE744", VA = "0x10DE744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EBC0", Offset = "0xB7EBC0")]
			add
			{
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0x10DE804", Offset = "0x10DE804", VA = "0x10DE804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EBD0", Offset = "0xB7EBD0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x10DE8CC", Offset = "0x10DE8CC", VA = "0x10DE8CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x10DEA44", Offset = "0x10DEA44", VA = "0x10DEA44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x10DEB30", Offset = "0x10DEB30", VA = "0x10DEB30")]
		private void Start()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x10DEC20", Offset = "0x10DEC20", VA = "0x10DEC20")]
		private void SetPingPeriodically(float checkEvery = 1f)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x10DEF28", Offset = "0x10DEF28", VA = "0x10DEF28")]
		private void OnLockChanged(bool isLocked)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x10DEF9C", Offset = "0x10DEF9C", VA = "0x10DEF9C")]
		private void OnPingResult(bool success)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x10DF024", Offset = "0x10DF024", VA = "0x10DF024")]
		public NetworkManager()
		{
		}
	}
}
namespace Systems.Scenes
{
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C3E0", Offset = "0xB5C3E0")]
	public class SceneConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000327")]
		public class AreaSceneData
		{
			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AreaManager.AreaType m_areaType;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public SceneType m_active;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SceneType m_loaded;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightingSettings m_lightingSettings;

			[Token(Token = "0x6001161")]
			[Address(RVA = "0xFDFDD8", Offset = "0xFDFDD8", VA = "0xFDFDD8")]
			public AreaSceneData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000328")]
		public class AreaLOD
		{
			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AreaManager.AreaType m_areaType;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public SceneLOD.Level m_level;

			[Token(Token = "0x6001162")]
			[Address(RVA = "0xFDF87C", Offset = "0xFDF87C", VA = "0xFDF87C")]
			public AreaLOD()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000329")]
		public class AreaLODData
		{
			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AreaManager.AreaType m_areaType;

			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<AreaLOD> m_levels;

			[Token(Token = "0x6001163")]
			[Address(RVA = "0xFDF884", Offset = "0xFDF884", VA = "0xFDF884")]
			public void Apply()
			{
			}

			[Token(Token = "0x6001164")]
			[Address(RVA = "0xFDFB9C", Offset = "0xFDFB9C", VA = "0xFDFB9C")]
			public static AreaLODData Merge(AreaLODData first, AreaLODData second)
			{
				return null;
			}

			[Token(Token = "0x6001165")]
			[Address(RVA = "0xFDFDD0", Offset = "0xFDFDD0", VA = "0xFDFDD0")]
			public AreaLODData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200032A")]
		public class SceneData
		{
			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneType m_sceneType;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_sceneName;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string m_scenePath;

			[NonSerialized]
			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_active;

			[Token(Token = "0x6001166")]
			[Address(RVA = "0xFDFDE0", Offset = "0xFDFDE0", VA = "0xFDFDE0")]
			public SceneData()
			{
			}
		}

		[Token(Token = "0x200032B")]
		[Flags]
		public enum SceneType
		{
			[Token(Token = "0x4001446")]
			Manager = 2,
			[Token(Token = "0x4001447")]
			Main = 4,
			[Token(Token = "0x4001448")]
			DojoInterior = 8,
			[Token(Token = "0x4001449")]
			SocialHubInterior = 0x10
		}

		[StructLayout(3)]
		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C458", Offset = "0xB5C458")]
		private struct <Load>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneConfig <>4__this;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001167")]
			[Address(RVA = "0xFC7794", Offset = "0xFC7794", VA = "0xFC7794", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001168")]
			[Address(RVA = "0xFC7930", Offset = "0xFC7930", VA = "0xFC7930", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C468", Offset = "0xB5C468")]
		private struct <Load>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneConfig <>4__this;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AreaManager.AreaType areaType;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool applyLOD;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001169")]
			[Address(RVA = "0xFC793C", Offset = "0xFC793C", VA = "0xFC793C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0xFC7B20", Offset = "0xFC7B20", VA = "0xFC7B20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C478", Offset = "0xB5C478")]
		private struct <Load>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneConfig <>4__this;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneType sceneTypes;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public SceneType active;

			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600116B")]
			[Address(RVA = "0xFC7B2C", Offset = "0xFC7B2C", VA = "0xFC7B2C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600116C")]
			[Address(RVA = "0xFC7CE0", Offset = "0xFC7CE0", VA = "0xFC7CE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C488", Offset = "0xB5C488")]
		private struct <Load>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneConfig <>4__this;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<SceneData> scenes;

			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityEngine.ThreadPriority <priority>5__2;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<AsyncOperation> <operations>5__3;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<SceneData> <load>5__4;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private SceneData <active>5__5;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <total>5__6;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x600116D")]
			[Address(RVA = "0xFDEC8C", Offset = "0xFDEC8C", VA = "0xFDEC8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600116E")]
			[Address(RVA = "0xFDF870", Offset = "0xFDF870", VA = "0xFDF870", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C498", Offset = "0xB5C498")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneData sceneData;

			[Token(Token = "0x600116F")]
			[Address(RVA = "0xFC7734", Offset = "0xFC7734", VA = "0xFC7734")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001170")]
			[Address(RVA = "0xFC773C", Offset = "0xFC773C", VA = "0xFC773C")]
			internal bool <CreateDiff>b__0(SceneData element)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C4A8", Offset = "0xB5C4A8")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AreaManager.AreaType areaType;

			[Token(Token = "0x6001171")]
			[Address(RVA = "0xFC7768", Offset = "0xFC7768", VA = "0xFC7768")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001172")]
			[Address(RVA = "0xFC7770", Offset = "0xFC7770", VA = "0xFC7770")]
			internal bool <GetLODData>b__0(AreaLODData data)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public AreaManager.AreaType m_startArea;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<AreaSceneData> m_dependencies;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<AreaSceneData> m_lightingDependencies;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<SceneData> m_scenes;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public bool m_useLODs;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public List<AreaLODData> m_lods;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B884", Offset = "0xB6B884")]
		private float <LoadPercent>k__BackingField;

		[Token(Token = "0x17000254")]
		public float LoadPercent
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0x13CA7C4", Offset = "0x13CA7C4", VA = "0x13CA7C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EBE0", Offset = "0xB7EBE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x13CA7CC", Offset = "0x13CA7CC", VA = "0x13CA7CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EBF0", Offset = "0xB7EBF0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x13CA7D4", Offset = "0x13CA7D4", VA = "0x13CA7D4")]
		public SceneData GetSceneData(SceneType sceneType)
		{
			return null;
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x13CA918", Offset = "0x13CA918", VA = "0x13CA918")]
		public List<SceneData> GetSceneList(AreaManager.AreaType areaType)
		{
			return null;
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x13CAA6C", Offset = "0x13CAA6C", VA = "0x13CAA6C")]
		public List<SceneData> GetSceneList(AreaSceneData data)
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x13CAE94", Offset = "0x13CAE94", VA = "0x13CAE94")]
		public List<SceneData> GetSceneList(SceneType sceneTypes, SceneType active)
		{
			return null;
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x13CB0C4", Offset = "0x13CB0C4", VA = "0x13CB0C4")]
		public AreaLODData GetCurrentLOD()
		{
			return null;
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x13CB23C", Offset = "0x13CB23C", VA = "0x13CB23C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB7EC00", Offset = "0xB7EC00")]
		public Task Load()
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x13CB358", Offset = "0x13CB358", VA = "0x13CB358")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB7EC60", Offset = "0xB7EC60")]
		public Task Load(AreaManager.AreaType areaType, bool applyLOD = true)
		{
			return null;
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x13CB4A8", Offset = "0x13CB4A8", VA = "0x13CB4A8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB7ECC0", Offset = "0xB7ECC0")]
		public Task Load(SceneType sceneTypes, SceneType active)
		{
			return null;
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x13CB5F0", Offset = "0x13CB5F0", VA = "0x13CB5F0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB7ED20", Offset = "0xB7ED20")]
		public Task Load(List<SceneData> scenes)
		{
			return null;
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x13CB72C", Offset = "0x13CB72C", VA = "0x13CB72C")]
		private void AwakeAllTMP()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x13CB87C", Offset = "0x13CB87C", VA = "0x13CB87C")]
		private void CreateDiff(List<SceneData> scenes, out List<SceneData> load, out List<SceneData> unload, out List<SceneData> keep, out SceneData active)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x13CBCC8", Offset = "0x13CBCC8", VA = "0x13CBCC8")]
		public AreaLODData GetLODData(AreaManager.AreaType areaType)
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x13CBDB8", Offset = "0x13CBDB8", VA = "0x13CBDB8")]
		public void ApplyLOD(AreaManager.AreaType areaType)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x13CBDD8", Offset = "0x13CBDD8", VA = "0x13CBDD8")]
		public void ApplyLOD(AreaLODData data)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x13CBDF4", Offset = "0x13CBDF4", VA = "0x13CBDF4")]
		public void ApplyLOD(SceneLOD.Level level)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x13CC14C", Offset = "0x13CC14C", VA = "0x13CC14C")]
		public SceneConfig()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public static class SceneLODExtensions
	{
		[Token(Token = "0x6001173")]
		[Address(RVA = "0x13CD1C4", Offset = "0x13CD1C4", VA = "0x13CD1C4")]
		public static string ToShortName(this SceneLOD.Level value)
		{
			return null;
		}
	}
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5C4C8", Offset = "0xB5C4C8")]
	public class SceneLODPortal : LocationTriggerEvent
	{
		[Token(Token = "0x2000334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C528", Offset = "0xB5C528")]
		private sealed class <EnterCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLODPortal <>4__this;

			[Token(Token = "0x17000255")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600117F")]
				[Address(RVA = "0xFE0040", Offset = "0xFE0040", VA = "0xFE0040", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000256")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001181")]
				[Address(RVA = "0xFE0088", Offset = "0xFE0088", VA = "0xFE0088", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600117C")]
			[Address(RVA = "0xFDFDFC", Offset = "0xFDFDFC", VA = "0xFDFDFC")]
			[DebuggerHidden]
			public <EnterCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600117D")]
			[Address(RVA = "0xFDFE28", Offset = "0xFDFE28", VA = "0xFDFE28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600117E")]
			[Address(RVA = "0xFDFE2C", Offset = "0xFDFE2C", VA = "0xFDFE2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001180")]
			[Address(RVA = "0xFE0048", Offset = "0xFE0048", VA = "0xFE0048", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C538", Offset = "0xB5C538")]
		private sealed class <ExitCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLODPortal <>4__this;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AreaManager.AreaType areaType;

			[Token(Token = "0x17000257")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001185")]
				[Address(RVA = "0xFE041C", Offset = "0xFE041C", VA = "0xFE041C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000258")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001187")]
				[Address(RVA = "0xFE0464", Offset = "0xFE0464", VA = "0xFE0464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0xFE0090", Offset = "0xFE0090", VA = "0xFE0090")]
			[DebuggerHidden]
			public <ExitCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001183")]
			[Address(RVA = "0xFE00BC", Offset = "0xFE00BC", VA = "0xFE00BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0xFE00C0", Offset = "0xFE00C0", VA = "0xFE00C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0xFE0424", Offset = "0xFE0424", VA = "0xFE0424", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AreaManager.AreaType m_areaTypeA;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public AreaManager.AreaType m_areaTypeB;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_useMergedLODWithA;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool m_useMergedLODWithB;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_exitSceneLODDelay;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_allowLODSwitchingDuringTeleport;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SceneConfig.AreaLODData m_lodA;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SceneConfig.AreaLODData m_lodB;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SceneConfig.AreaLODData m_mergedLod;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool m_useSceneLODs;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Collider m_playerCollider;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IEnumerator m_coroutine;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x13CD2A4", Offset = "0x13CD2A4", VA = "0x13CD2A4", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x13CD380", Offset = "0x13CD380", VA = "0x13CD380")]
		public void Open()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x13CD390", Offset = "0x13CD390", VA = "0x13CD390", Slot = "7")]
		protected override void OnEnter(Collider other)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x13CD4DC", Offset = "0x13CD4DC", VA = "0x13CD4DC", Slot = "8")]
		protected override void OnExit(Collider other)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x13CD464", Offset = "0x13CD464", VA = "0x13CD464")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7EDD0", Offset = "0xB7EDD0")]
		private IEnumerator EnterCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x13CD728", Offset = "0x13CD728", VA = "0x13CD728")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7EE30", Offset = "0xB7EE30")]
		private IEnumerator ExitCoroutine(AreaManager.AreaType areaType)
		{
			return null;
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x13CD7B0", Offset = "0x13CD7B0", VA = "0x13CD7B0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x13CD920", Offset = "0x13CD920", VA = "0x13CD920")]
		public SceneLODPortal()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class SceneLoader : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000337")]
		public struct PreloadData
		{
			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SceneConfig.SceneType m_sceneType;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Camera m_camera;
		}

		[Token(Token = "0x2000338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C548", Offset = "0xB5C548")]
		private sealed class <LoadSceneCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private VersionFirstTimeSetUpPlayerDataObject <versionFirstTimeSetUp>5__2;

			[Token(Token = "0x1700025C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600119E")]
				[Address(RVA = "0xFE1688", Offset = "0xFE1688", VA = "0xFE1688", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011A0")]
				[Address(RVA = "0xFE16D0", Offset = "0xFE16D0", VA = "0xFE16D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600119B")]
			[Address(RVA = "0xFE0A1C", Offset = "0xFE0A1C", VA = "0xFE0A1C")]
			[DebuggerHidden]
			public <LoadSceneCoroutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x600119C")]
			[Address(RVA = "0xFE0A48", Offset = "0xFE0A48", VA = "0xFE0A48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600119D")]
			[Address(RVA = "0xFE0A4C", Offset = "0xFE0A4C", VA = "0xFE0A4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0xFE1690", Offset = "0xFE1690", VA = "0xFE1690", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C558", Offset = "0xB5C558")]
		private sealed class <PerformFirstTimeSetUp>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RenderTexture <renderTexture>5__2;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private RenderTexture <originalRT>5__3;

			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private PreloadData[] <>7__wrap3;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap4;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private PreloadData <data>5__6;

			[Token(Token = "0x1700025E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011A4")]
				[Address(RVA = "0xFE1DCC", Offset = "0xFE1DCC", VA = "0xFE1DCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011A6")]
				[Address(RVA = "0xFE1E14", Offset = "0xFE1E14", VA = "0xFE1E14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xFE16D8", Offset = "0xFE16D8", VA = "0xFE16D8")]
			[DebuggerHidden]
			public <PerformFirstTimeSetUp>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0xFE1704", Offset = "0xFE1704", VA = "0xFE1704", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0xFE1708", Offset = "0xFE1708", VA = "0xFE1708", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0xFE1DD4", Offset = "0xFE1DD4", VA = "0xFE1DD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C568", Offset = "0xB5C568")]
		private sealed class <ShowLoadingScreenForDuration>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool showPercent;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool showLogo;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x17000260")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011AA")]
				[Address(RVA = "0xFE20C4", Offset = "0xFE20C4", VA = "0xFE20C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000261")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011AC")]
				[Address(RVA = "0xFE210C", Offset = "0xFE210C", VA = "0xFE210C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xFE1E1C", Offset = "0xFE1E1C", VA = "0xFE1E1C")]
			[DebuggerHidden]
			public <ShowLoadingScreenForDuration>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xFE1E48", Offset = "0xFE1E48", VA = "0xFE1E48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xFE1E4C", Offset = "0xFE1E4C", VA = "0xFE1E4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011AB")]
			[Address(RVA = "0xFE20CC", Offset = "0xFE20CC", VA = "0xFE20CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C578", Offset = "0xB5C578")]
		private sealed class <HandInviteCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x17000262")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011B0")]
				[Address(RVA = "0xFE09CC", Offset = "0xFE09CC", VA = "0xFE09CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000263")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011B2")]
				[Address(RVA = "0xFE0A14", Offset = "0xFE0A14", VA = "0xFE0A14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xFE046C", Offset = "0xFE046C", VA = "0xFE046C")]
			[DebuggerHidden]
			public <HandInviteCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60011AE")]
			[Address(RVA = "0xFE0498", Offset = "0xFE0498", VA = "0xFE0498", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011AF")]
			[Address(RVA = "0xFE049C", Offset = "0xFE049C", VA = "0xFE049C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011B1")]
			[Address(RVA = "0xFE09D4", Offset = "0xFE09D4", VA = "0xFE09D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B894", Offset = "0xB6B894")]
		public LayerMask m_loadingShaderLayerMask;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PreloadData[] m_preloadData;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_renderTimePerPosition;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnSceneLoadComplete;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B8CC", Offset = "0xB6B8CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6B8CC", Offset = "0xB6B8CC")]
		public bool m_preloadAllScenes;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_preloadDelayTime;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_startFadeOutTime;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] m_disableOnLoad;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] m_enableOnLoad;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B92C", Offset = "0xB6B92C")]
		public GameObject m_tutorialPrefab;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B964", Offset = "0xB6B964")]
		public Intro m_introPrefab;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6B99C", Offset = "0xB6B99C")]
		public GameConfig m_config;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_hasStartedLoading;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private global::Tutorial.Tutorial m_tutorial;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_loaded;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ShaderPreloadingFirstTimeSetUp m_shaderPreloadingFirstTimeSetUp;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B9D4", Offset = "0xB6B9D4")]
		private SceneConfig <SceneConfig>k__BackingField;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6B9E4", Offset = "0xB6B9E4")]
		private static SceneLoader <Instance>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool m_playerIsInOpenWorld;

		[Token(Token = "0x17000259")]
		public SceneConfig SceneConfig
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0x13CD928", Offset = "0x13CD928", VA = "0x13CD928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EF30", Offset = "0xB7EF30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001189")]
			[Address(RVA = "0x13CD930", Offset = "0x13CD930", VA = "0x13CD930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EF40", Offset = "0xB7EF40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public static SceneLoader Instance
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x13CD938", Offset = "0x13CD938", VA = "0x13CD938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EF50", Offset = "0xB7EF50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x13CD984", Offset = "0x13CD984", VA = "0x13CD984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7EF60", Offset = "0xB7EF60")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public bool FinishedInitialLoad
		{
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x13CD9D8", Offset = "0x13CD9D8", VA = "0x13CD9D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x13CD9E0", Offset = "0x13CD9E0", VA = "0x13CD9E0")]
			private set
			{
			}
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x13CD9EC", Offset = "0x13CD9EC", VA = "0x13CD9EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x13CDB7C", Offset = "0x13CDB7C", VA = "0x13CDB7C")]
		public void SpawnPlayer(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x13CDD10", Offset = "0x13CDD10", VA = "0x13CDD10")]
		private void LoadScene()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x13CDE5C", Offset = "0x13CDE5C", VA = "0x13CDE5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x13CDDE4", Offset = "0x13CDDE4", VA = "0x13CDDE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7EF70", Offset = "0xB7EF70")]
		private IEnumerator LoadSceneCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x13CDFD4", Offset = "0x13CDFD4", VA = "0x13CDFD4")]
		private void OnTeleport()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x13CE0FC", Offset = "0x13CE0FC", VA = "0x13CE0FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7EFD0", Offset = "0xB7EFD0")]
		private IEnumerator PerformFirstTimeSetUp()
		{
			return null;
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x13CE174", Offset = "0x13CE174", VA = "0x13CE174")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F030", Offset = "0xB7F030")]
		private IEnumerator ShowLoadingScreenForDuration(float duration, bool showPercent = false, bool showLogo = false)
		{
			return null;
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x13CE21C", Offset = "0x13CE21C", VA = "0x13CE21C")]
		private void InitTutorial(out AreaManager.AreaType areaType, out Transform customTransform, AreaManager.AreaType defaultAreaType)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x13CDFD8", Offset = "0x13CDFD8", VA = "0x13CDFD8")]
		private void CompleteSetup()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x13CE400", Offset = "0x13CE400", VA = "0x13CE400")]
		protected void HandleInvite()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x13CE42C", Offset = "0x13CE42C", VA = "0x13CE42C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F090", Offset = "0xB7F090")]
		private IEnumerator HandInviteCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x13CE4A4", Offset = "0x13CE4A4", VA = "0x13CE4A4")]
		public SceneLoader()
		{
		}
	}
}
namespace Systems.AssetVariant
{
	[Token(Token = "0x200033C")]
	public static class AddressableUtils
	{
		[Token(Token = "0x200033D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C588", Offset = "0xB5C588")]
		private sealed class <LoadAddressablePrefab>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AssetReference addressableAsset;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<GameObject> callback;

			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperationHandle<GameObject> <asyncOperation>5__2;

			[Token(Token = "0x17000264")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011B7")]
				[Address(RVA = "0xF8AE9C", Offset = "0xF8AE9C", VA = "0xF8AE9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000265")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011B9")]
				[Address(RVA = "0xF8AEE4", Offset = "0xF8AEE4", VA = "0xF8AEE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011B4")]
			[Address(RVA = "0xF8ACD8", Offset = "0xF8ACD8", VA = "0xF8ACD8")]
			[DebuggerHidden]
			public <LoadAddressablePrefab>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60011B5")]
			[Address(RVA = "0xF8AD04", Offset = "0xF8AD04", VA = "0xF8AD04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xF8AD08", Offset = "0xF8AD08", VA = "0xF8AD08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xF8AEA4", Offset = "0xF8AEA4", VA = "0xF8AEA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xF9B648", Offset = "0xF9B648", VA = "0xF9B648")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F230", Offset = "0xB7F230")]
		public static IEnumerator LoadAddressablePrefab(AssetReference addressableAsset, Action<GameObject> callback)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200033E")]
	public class Override<T> where T : class
	{
		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T m_assetVariant;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0xB6B9F4", Offset = "0xB6B9F4")]
		public string m_sku;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ProviderBase.HeadsetModels m_headsetModel;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "VariationAttribute", RVA = "0xB6BA2C", Offset = "0xB6BA2C")]
		public string m_quality;

		[Token(Token = "0x60011BA")]
		public Override()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	public class OverrideAddressable : Override<AssetReference>
	{
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x184B5C0", Offset = "0x184B5C0", VA = "0x184B5C0")]
		public OverrideAddressable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000340")]
	public class OverridePrefab : Override<GameObject>
	{
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x184B60C", Offset = "0x184B60C", VA = "0x184B60C")]
		public OverridePrefab()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public abstract class AssetVariation<AssetType, LoadedAssetType> : ScriptableObject where AssetType : class where LoadedAssetType : class
	{
		[Token(Token = "0x2000342")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C598", Offset = "0xB5C598")]
		private sealed class <LoadAssetAsync>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MonoBehaviour owner;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AssetVariation<AssetType, LoadedAssetType> <>4__this;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<LoadedAssetType> callback;

			[Token(Token = "0x17000266")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011C5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000267")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011C7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011C2")]
			[DebuggerHidden]
			public <LoadAssetAsync>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60011C3")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011C4")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011C6")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private AssetType m_defaultAsset;

		[Token(Token = "0x60011BD")]
		protected abstract Override<AssetType>[] GetOverrides();

		[Token(Token = "0x60011BE")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F2E0", Offset = "0xB7F2E0")]
		public virtual IEnumerator LoadAssetAsync(MonoBehaviour owner, Action<LoadedAssetType> callback)
		{
			return null;
		}

		[Token(Token = "0x60011BF")]
		protected abstract IEnumerator LoadAssetAsyncInternal(AssetType assetOverride, Action<LoadedAssetType> callback);

		[Token(Token = "0x60011C0")]
		public AssetType GetMatchedOverride()
		{
			return null;
		}

		[Token(Token = "0x60011C1")]
		protected AssetVariation()
		{
		}
	}
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C5A8", Offset = "0xB5C5A8")]
	public class AssetVariationAddressable : AssetVariation<AssetReference, GameObject>
	{
		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected OverrideAddressable[] m_overrides;

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x144BDF0", Offset = "0x144BDF0", VA = "0x144BDF0", Slot = "4")]
		protected override Override<AssetReference>[] GetOverrides()
		{
			return null;
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x144BDF8", Offset = "0x144BDF8", VA = "0x144BDF8", Slot = "6")]
		protected override IEnumerator LoadAssetAsyncInternal(AssetReference addressableAsset, Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x144BE08", Offset = "0x144BE08", VA = "0x144BE08")]
		public AssetVariationAddressable()
		{
		}
	}
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C614", Offset = "0xB5C614")]
	public class AssetVariationPrefab : AssetVariation<GameObject, GameObject>
	{
		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C680", Offset = "0xB5C680")]
		private sealed class <LoadAssetAsyncInternal>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<GameObject> callback;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject prefab;

			[Token(Token = "0x17000268")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011D1")]
				[Address(RVA = "0xF8C18C", Offset = "0xF8C18C", VA = "0xF8C18C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000269")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011D3")]
				[Address(RVA = "0xF8C1D4", Offset = "0xF8C1D4", VA = "0xF8C1D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011CE")]
			[Address(RVA = "0xF8C0F0", Offset = "0xF8C0F0", VA = "0xF8C0F0")]
			[DebuggerHidden]
			public <LoadAssetAsyncInternal>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60011CF")]
			[Address(RVA = "0xF8C11C", Offset = "0xF8C11C", VA = "0xF8C11C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011D0")]
			[Address(RVA = "0xF8C120", Offset = "0xF8C120", VA = "0xF8C120", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xF8C194", Offset = "0xF8C194", VA = "0xF8C194", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected OverridePrefab[] m_overrides;

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x144BE54", Offset = "0x144BE54", VA = "0x144BE54", Slot = "4")]
		protected override Override<GameObject>[] GetOverrides()
		{
			return null;
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x144BE5C", Offset = "0x144BE5C", VA = "0x144BE5C", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F390", Offset = "0xB7F390")]
		protected override IEnumerator LoadAssetAsyncInternal(GameObject prefab, Action<GameObject> callback)
		{
			return null;
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x144BEF0", Offset = "0x144BEF0", VA = "0x144BEF0")]
		public AssetVariationPrefab()
		{
		}
	}
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C690", Offset = "0xB5C690")]
	public class AssetVariationScriptableObject : AssetVariation<ScriptableObject, ScriptableObject>
	{
		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C6FC", Offset = "0xB5C6FC")]
		private sealed class <LoadAssetAsyncInternal>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<ScriptableObject> callback;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScriptableObject obj;

			[Token(Token = "0x1700026A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011DA")]
				[Address(RVA = "0xF8C278", Offset = "0xF8C278", VA = "0xF8C278", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011DC")]
				[Address(RVA = "0xF8C2C0", Offset = "0xF8C2C0", VA = "0xF8C2C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xF8C1DC", Offset = "0xF8C1DC", VA = "0xF8C1DC")]
			[DebuggerHidden]
			public <LoadAssetAsyncInternal>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60011D8")]
			[Address(RVA = "0xF8C208", Offset = "0xF8C208", VA = "0xF8C208", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011D9")]
			[Address(RVA = "0xF8C20C", Offset = "0xF8C20C", VA = "0xF8C20C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0xF8C280", Offset = "0xF8C280", VA = "0xF8C280", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Override<ScriptableObject>[] m_overrides;

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x144BF3C", Offset = "0x144BF3C", VA = "0x144BF3C", Slot = "4")]
		protected override Override<ScriptableObject>[] GetOverrides()
		{
			return null;
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x144BF44", Offset = "0x144BF44", VA = "0x144BF44", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F440", Offset = "0xB7F440")]
		protected override IEnumerator LoadAssetAsyncInternal(ScriptableObject obj, Action<ScriptableObject> callback)
		{
			return null;
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x144BFD8", Offset = "0x144BFD8", VA = "0x144BFD8")]
		public AssetVariationScriptableObject()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class VariationAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string m_configPath;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VariationConfig m_config;

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x1234FE8", Offset = "0x1234FE8", VA = "0x1234FE8")]
		public VariationAttribute(string configPath)
		{
		}
	}
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C70C", Offset = "0xB5C70C")]
	public class VariationConfig : ScriptableObject
	{
		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_variationList;

		[Token(Token = "0x1700026C")]
		public string[] VariationList
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x1235078", Offset = "0x1235078", VA = "0x1235078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x1235080", Offset = "0x1235080", VA = "0x1235080")]
		public VariationConfig()
		{
		}
	}
}
namespace Spawning
{
	[Token(Token = "0x200034A")]
	public class SimpleSpawner : MonoBehaviour
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnableFruit m_spawnableFruit;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_spawnOnStart;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_spawnOnEnable;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool m_destroyOnDisable;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Fruit.PhysicsMode m_physicsMode;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_parentFruit;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_hasEffects;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FruitAttachment m_fruitAttachmentPrefab;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Fruit m_currentFruit;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6BAB4", Offset = "0xB6BAB4")]
		public PooledObject m_spawnEffectPrefab;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform m_effectTransform;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundCueTrigger m_sound;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent m_onFruitSliced;

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xF0DD40", Offset = "0xF0DD40", VA = "0xF0DD40")]
		private void Start()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xF0E190", Offset = "0xF0E190", VA = "0xF0E190")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xF0E1A0", Offset = "0xF0E1A0", VA = "0xF0E1A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xF0DD50", Offset = "0xF0DD50", VA = "0xF0DD50")]
		public void Spawn()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xF0E464", Offset = "0xF0E464", VA = "0xF0E464")]
		public void DestroySpawned()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xF0E4F4", Offset = "0xF0E4F4", VA = "0xF0E4F4")]
		private void OnFruitSliced(Fruit fruit)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xF0E5BC", Offset = "0xF0E5BC", VA = "0xF0E5BC")]
		private void OnFruitDestroyed(Fruit fruit)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xF0E234", Offset = "0xF0E234", VA = "0xF0E234")]
		public void SpawnEffects()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xF0E6AC", Offset = "0xF0E6AC", VA = "0xF0E6AC")]
		public SimpleSpawner()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public abstract class SpawnableFruit : ScriptableObject
	{
		[Token(Token = "0x60011E9")]
		public abstract FruitConfig GetFruitConfig(Spawner spawner, [Optional] System.Random generator);

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x219DB70", Offset = "0x219DB70", VA = "0x219DB70")]
		protected SpawnableFruit()
		{
		}
	}
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C778", Offset = "0xB5C778")]
	public class SpawnableRandom : SpawnableFruit
	{
		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SpawnableFruit> m_choices;

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x219DB78", Offset = "0x219DB78", VA = "0x219DB78", Slot = "4")]
		public override FruitConfig GetFruitConfig(Spawner spawner, [Optional] System.Random generator)
		{
			return null;
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x219DC5C", Offset = "0x219DC5C", VA = "0x219DC5C")]
		public SpawnableRandom()
		{
		}
	}
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C7BC", Offset = "0xB5C7BC")]
	public class SpawnableRandomArcade : SpawnableFruit
	{
		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_isTimePeach;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnableFruit m_timePeach;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SpawnableFruit> m_fallbacks;

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x219DC64", Offset = "0x219DC64", VA = "0x219DC64", Slot = "4")]
		public override FruitConfig GetFruitConfig(Spawner spawner, [Optional] System.Random generator)
		{
			return null;
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x219DFA0", Offset = "0x219DFA0", VA = "0x219DFA0")]
		public SpawnableRandomArcade()
		{
		}
	}
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C800", Offset = "0xB5C800")]
	public class SpawnableSingleRandom : SpawnableFruit
	{
		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BAEC", Offset = "0xB6BAEC")]
		public List<FruitConfig> m_choices;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Spawner, int> m_spawnerFruitIndices;

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x219DFA8", Offset = "0x219DFA8", VA = "0x219DFA8", Slot = "4")]
		public override FruitConfig GetFruitConfig(Spawner spawner, [Optional] System.Random generator)
		{
			return null;
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x219E158", Offset = "0x219E158", VA = "0x219E158")]
		public SpawnableSingleRandom()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class Spawner : SpawnerBase
	{
		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C844", Offset = "0xB5C844")]
		private sealed class <>c__DisplayClass81_0
		{
			[Token(Token = "0x4001514")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Spawner <>4__this;

			[Token(Token = "0x4001515")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Fruit fruit;

			[Token(Token = "0x600121D")]
			[Address(RVA = "0xFE6BC8", Offset = "0xFE6BC8", VA = "0xFE6BC8")]
			public <>c__DisplayClass81_0()
			{
			}

			[Token(Token = "0x600121E")]
			[Address(RVA = "0xFE6BD0", Offset = "0xFE6BD0", VA = "0xFE6BD0")]
			internal void <SpawnNextFruit>b__0()
			{
			}
		}

		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C854", Offset = "0xB5C854")]
		private sealed class <>c__DisplayClass82_0
		{
			[Token(Token = "0x4001516")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Spawner <>4__this;

			[Token(Token = "0x4001517")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Fruit fruit;

			[Token(Token = "0x600121F")]
			[Address(RVA = "0xFE6BF4", Offset = "0xFE6BF4", VA = "0xFE6BF4")]
			public <>c__DisplayClass82_0()
			{
			}

			[Token(Token = "0x6001220")]
			[Address(RVA = "0xFE6BFC", Offset = "0xFE6BFC", VA = "0xFE6BFC")]
			internal void <DoFruitPath>b__0()
			{
			}
		}

		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C864", Offset = "0xB5C864")]
		private sealed class <WaitForSecondsScaled>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001518")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001519")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400151A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400151B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <timer>5__2;

			[Token(Token = "0x17000270")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001224")]
				[Address(RVA = "0xFE7A40", Offset = "0xFE7A40", VA = "0xFE7A40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000271")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001226")]
				[Address(RVA = "0xFE7A88", Offset = "0xFE7A88", VA = "0xFE7A88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001221")]
			[Address(RVA = "0xFE7930", Offset = "0xFE7930", VA = "0xFE7930")]
			[DebuggerHidden]
			public <WaitForSecondsScaled>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001222")]
			[Address(RVA = "0xFE795C", Offset = "0xFE795C", VA = "0xFE795C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001223")]
			[Address(RVA = "0xFE7960", Offset = "0xFE7960", VA = "0xFE7960", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001225")]
			[Address(RVA = "0xFE7A48", Offset = "0xFE7A48", VA = "0xFE7A48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C874", Offset = "0xB5C874")]
		private sealed class <WaitForSecondsScaledSkippable>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400151C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400151E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Spawner <>4__this;

			[Token(Token = "0x400151F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x17000272")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600122A")]
				[Address(RVA = "0xFE7BB0", Offset = "0xFE7BB0", VA = "0xFE7BB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000273")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600122C")]
				[Address(RVA = "0xFE7BF8", Offset = "0xFE7BF8", VA = "0xFE7BF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001227")]
			[Address(RVA = "0xFE7A90", Offset = "0xFE7A90", VA = "0xFE7A90")]
			[DebuggerHidden]
			public <WaitForSecondsScaledSkippable>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001228")]
			[Address(RVA = "0xFE7ABC", Offset = "0xFE7ABC", VA = "0xFE7ABC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001229")]
			[Address(RVA = "0xFE7AC0", Offset = "0xFE7AC0", VA = "0xFE7AC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600122B")]
			[Address(RVA = "0xFE7BB8", Offset = "0xFE7BB8", VA = "0xFE7BB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C884", Offset = "0xB5C884")]
		private sealed class <SpawnFruitCoroutine>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Spawner <>4__this;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int waveId;

			[Token(Token = "0x4001524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <continueSpawning>5__2;

			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endDelayElapsed>5__3;

			[Token(Token = "0x17000274")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001230")]
				[Address(RVA = "0xFE78E0", Offset = "0xFE78E0", VA = "0xFE78E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000275")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001232")]
				[Address(RVA = "0xFE7928", Offset = "0xFE7928", VA = "0xFE7928", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600122D")]
			[Address(RVA = "0xFE7018", Offset = "0xFE7018", VA = "0xFE7018")]
			[DebuggerHidden]
			public <SpawnFruitCoroutine>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x600122E")]
			[Address(RVA = "0xFE7044", Offset = "0xFE7044", VA = "0xFE7044", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600122F")]
			[Address(RVA = "0xFE7048", Offset = "0xFE7048", VA = "0xFE7048", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001231")]
			[Address(RVA = "0xFE78E8", Offset = "0xFE78E8", VA = "0xFE78E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C894", Offset = "0xB5C894")]
		private sealed class <PlayShootAnimation>d__90 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Spawner <>4__this;

			[Token(Token = "0x17000276")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001236")]
				[Address(RVA = "0xFE6FC8", Offset = "0xFE6FC8", VA = "0xFE6FC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000277")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001238")]
				[Address(RVA = "0xFE7010", Offset = "0xFE7010", VA = "0xFE7010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001233")]
			[Address(RVA = "0xFE6DD0", Offset = "0xFE6DD0", VA = "0xFE6DD0")]
			[DebuggerHidden]
			public <PlayShootAnimation>d__90(int <>1__state)
			{
			}

			[Token(Token = "0x6001234")]
			[Address(RVA = "0xFE6DFC", Offset = "0xFE6DFC", VA = "0xFE6DFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001235")]
			[Address(RVA = "0xFE6E00", Offset = "0xFE6E00", VA = "0xFE6E00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001237")]
			[Address(RVA = "0xFE6FD0", Offset = "0xFE6FD0", VA = "0xFE6FD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public RangedInt m_fruitCount;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public SpawnableFruit m_spawnableFruit;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BB24", Offset = "0xB6BB24")]
		public List<SpawnableFruit> m_spawnableFruitSequence;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool m_spawnStaticFruit;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BB5C", Offset = "0xB6BB5C")]
		public bool m_keepFruitParented;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6BB94", Offset = "0xB6BB94")]
		public bool m_fruitUnbounceableDuringSpawn;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float m_startDelay;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float m_spawnDelay;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BBCC", Offset = "0xB6BBCC")]
		public float m_shootAnimDelay;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_expiryAnimationTimer;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public int m_expiryAnimationStages;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float m_expiryAnimationBreakTime;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BC04", Offset = "0xB6BC04")]
		public float m_endDelay;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float m_delayBetweenFruit;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool m_skipNextSpawnerDelaysWhenAllFruitSliced;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float m_overrideDelayWhenSkippingSpawner;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB6BC3C", Offset = "0xB6BC3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6BC3C", Offset = "0xB6BC3C")]
		public Transform m_objectToAnimate;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Vector3 m_spawnMoveAmount;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public Ease m_spawnAnimEaseType;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Ease m_despawnAnimEaseType;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float m_spawnAnimDuration;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float m_despawnAnimDuration;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public SingleAudioSource m_singleAudioSource;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public ISound m_movingSound;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<GameObject> m_objectsToEnableOnBegin;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<GameObject> m_objectsToEnableOnEnd;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public PooledObject m_onEndEffectPrefab;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Transform m_effectTransform;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BC88", Offset = "0xB6BC88")]
		public Animator m_animator;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BCC0", Offset = "0xB6BCC0")]
		public Animation m_animation;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool m_animateOutWhenAllFruitSliced;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public SpawnerVisuals m_spawnerVisuals;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB6BCF8", Offset = "0xB6BCF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6BCF8", Offset = "0xB6BCF8")]
		public DOTweenPath m_entryPath;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool m_linkToFruitPathFirstPoint;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6BD44", Offset = "0xB6BD44")]
		public DOTweenPath m_fruitPath;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public DOTweenPath m_exitPath;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool m_spawnFruitRightSideUp;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB6BD7C", Offset = "0xB6BD7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6BD7C", Offset = "0xB6BD7C")]
		public FruitAttachment m_fruitAttachmentPrefab;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public ObjectShaker m_objectShaker;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected readonly List<FruitConfig> m_fruitToSpawn;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected int m_numFruitSpawned;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		protected int m_numBombsSpawned;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected bool m_isRunning;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		protected Vector3 m_defaultPosition;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Coroutine m_spawnFruitCoroutine;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		protected readonly List<Fruit> m_parentedFruit;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected Vector3[] m_fruitPathPositions;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected Vector3[] m_entryPathPositions;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		protected Vector3[] m_exitPathPositions;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected float m_fruitPathDuration;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		protected float m_entryPathDuration;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		protected float m_exitPathDuration;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		protected Vector3 m_spawnerObjectDefaultPos;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		protected bool m_hasSpawnedAllFruit;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		protected int m_fruitSliced;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		protected readonly HashSet<int> m_fruitsSkewered;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private TweenerCore<Vector3, Vector3, VectorOptions> m_despawnTween;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float m_currentSkippableDelay;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private bool m_aboutToExpireIndicationShown;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float m_endDelayExpiryIndicationStartTime;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		protected List<FruitAttachment> m_fruitAttachments;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private SoundPlaybackContext m_soundPlaybackContext;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		protected bool m_despawning;

		[Token(Token = "0x1700026D")]
		public int FruitSpawnedCount
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x219E1DC", Offset = "0x219E1DC", VA = "0x219E1DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026E")]
		public int BombsSpawnedCount
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x219E1E4", Offset = "0x219E1E4", VA = "0x219E1E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026F")]
		public List<FruitConfig> FruitToSpawn
		{
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x219E1EC", Offset = "0x219E1EC", VA = "0x219E1EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000041")]
		public event Action<Spawner> OnAllFruitSliced
		{
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x219E1F4", Offset = "0x219E1F4", VA = "0x219E1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F4F0", Offset = "0xB7F4F0")]
			add
			{
			}
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x219E298", Offset = "0x219E298", VA = "0x219E298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F500", Offset = "0xB7F500")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action<Spawner> OnAllFruitInteracted
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x219E33C", Offset = "0x219E33C", VA = "0x219E33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F510", Offset = "0xB7F510")]
			add
			{
			}
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x219E3E0", Offset = "0x219E3E0", VA = "0x219E3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F520", Offset = "0xB7F520")]
			remove
			{
			}
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x219E484", Offset = "0x219E484", VA = "0x219E484")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7F530", Offset = "0xB7F530")]
		public static void Log(string message, UnityEngine.Object sender)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x219E488", Offset = "0x219E488", VA = "0x219E488", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x219EC7C", Offset = "0x219EC7C", VA = "0x219EC7C", Slot = "5")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x219ED64", Offset = "0x219ED64", VA = "0x219ED64")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x219E94C", Offset = "0x219E94C", VA = "0x219E94C")]
		private void CalculateFruitExpiryTimeAndPathDuration()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x219ED68", Offset = "0x219ED68", VA = "0x219ED68")]
		private SpawnableFruit GetNextFruitToSpawn(int sequenceOrder)
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x219EE00", Offset = "0x219EE00", VA = "0x219EE00", Slot = "15")]
		protected virtual bool SpawnNextFruit(int waveId)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x219F484", Offset = "0x219F484", VA = "0x219F484")]
		protected void DoFruitPath(Fruit fruit)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x219F654", Offset = "0x219F654", VA = "0x219F654", Slot = "16")]
		public virtual int StartSpawning(int waveId)
		{
			return default(int);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x219F864", Offset = "0x219F864", VA = "0x219F864", Slot = "17")]
		public virtual void Spawn(int waveId = 0)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x219F89C", Offset = "0x219F89C", VA = "0x219F89C", Slot = "6")]
		public override void Spawn(SpawnData data)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x219F90C", Offset = "0x219F90C", VA = "0x219F90C", Slot = "18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F568", Offset = "0xB7F568")]
		protected new virtual IEnumerator WaitForSecondsScaled(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x219F980", Offset = "0x219F980", VA = "0x219F980")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F5C8", Offset = "0xB7F5C8")]
		private IEnumerator WaitForSecondsScaledSkippable(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x219FA08", Offset = "0x219FA08", VA = "0x219FA08")]
		public void SkipDelay()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x219F7DC", Offset = "0x219F7DC", VA = "0x219F7DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F628", Offset = "0xB7F628")]
		private IEnumerator SpawnFruitCoroutine(int waveId)
		{
			return null;
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x219FA38", Offset = "0x219FA38", VA = "0x219FA38", Slot = "19")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F688", Offset = "0xB7F688")]
		public virtual IEnumerator PlayShootAnimation()
		{
			return null;
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x219FAB0", Offset = "0x219FAB0", VA = "0x219FAB0")]
		private void ShowAboutToExpireIndication()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x219FC38", Offset = "0x219FC38", VA = "0x219FC38")]
		private void EndSpawning()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x21A0448", Offset = "0x21A0448", VA = "0x21A0448", Slot = "20")]
		protected virtual void Deactivate()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x21A02DC", Offset = "0x21A02DC", VA = "0x21A02DC")]
		private void KillFruitPaths()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x21A056C", Offset = "0x21A056C", VA = "0x21A056C")]
		public void CancelSpawning()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x21A05B4", Offset = "0x21A05B4", VA = "0x21A05B4")]
		public bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x21A05C4", Offset = "0x21A05C4", VA = "0x21A05C4")]
		public bool HasAllFruitAndBombsLaunched()
		{
			return default(bool);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x21A0750", Offset = "0x21A0750", VA = "0x21A0750", Slot = "21")]
		public virtual void ResetState()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x219E820", Offset = "0x219E820", VA = "0x219E820")]
		public void RollFruitToSpawn()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x21A0998", Offset = "0x21A0998", VA = "0x21A0998", Slot = "22")]
		protected virtual int GetNumberOfFruitToSpawn()
		{
			return default(int);
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x21A09A8", Offset = "0x21A09A8", VA = "0x21A09A8", Slot = "9")]
		protected override Vector3 GetNextFruitPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x21A0824", Offset = "0x21A0824", VA = "0x21A0824")]
		public void DestroyAllNonLaunchedFruit()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x21A018C", Offset = "0x21A018C", VA = "0x21A018C")]
		private void ReleaseParentedFruit()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x21A0A44", Offset = "0x21A0A44", VA = "0x21A0A44", Slot = "8")]
		protected override void HandleKilledFruit(Fruit fruit)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x21A0C44", Offset = "0x21A0C44", VA = "0x21A0C44", Slot = "12")]
		protected override void OnSpawnedFruitSliced(Fruit fruit)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x21A0D78", Offset = "0x21A0D78", VA = "0x21A0D78", Slot = "10")]
		protected override void OnSpawnedFruitSkewered(Fruit fruit)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x21A0E9C", Offset = "0x21A0E9C", VA = "0x21A0E9C", Slot = "14")]
		protected override void OnGamePaused(GameEvent evt)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x21A123C", Offset = "0x21A123C", VA = "0x21A123C")]
		public Spawner()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x21A16C8", Offset = "0x21A16C8", VA = "0x21A16C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F6E8", Offset = "0xB7F6E8")]
		private void <SpawnFruitCoroutine>b__89_0()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x21A1720", Offset = "0x21A1720", VA = "0x21A1720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F6F8", Offset = "0xB7F6F8")]
		private void <SpawnFruitCoroutine>b__89_1()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x21A1870", Offset = "0x21A1870", VA = "0x21A1870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F708", Offset = "0xB7F708")]
		private void <EndSpawning>b__92_0()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public abstract class SpawnerBase : MonoBehaviour
	{
		[Token(Token = "0x2000357")]
		public struct SpawnData
		{
			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SpawnableFruit m_fruit;

			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_waveId;
		}

		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C8A4", Offset = "0xB5C8A4")]
		private sealed class <WaitForSecondsScaled>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <timer>5__2;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001252")]
				[Address(RVA = "0xFE7D10", Offset = "0xFE7D10", VA = "0xFE7D10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001254")]
				[Address(RVA = "0xFE7D58", Offset = "0xFE7D58", VA = "0xFE7D58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600124F")]
			[Address(RVA = "0xFE7C00", Offset = "0xFE7C00", VA = "0xFE7C00")]
			[DebuggerHidden]
			public <WaitForSecondsScaled>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001250")]
			[Address(RVA = "0xFE7C2C", Offset = "0xFE7C2C", VA = "0xFE7C2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001251")]
			[Address(RVA = "0xFE7C30", Offset = "0xFE7C30", VA = "0xFE7C30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001253")]
			[Address(RVA = "0xFE7D18", Offset = "0xFE7D18", VA = "0xFE7D18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6BDE8", Offset = "0xB6BDE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BDE8", Offset = "0xB6BDE8")]
		public Transform m_spawnFrom;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6BE48", Offset = "0xB6BE48")]
		public RangedVector3 m_velocity;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RangedVector3 m_acceleration;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BE80", Offset = "0xB6BE80")]
		public RangedVector3 m_positionOffset;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BEB8", Offset = "0xB6BEB8")]
		public RangedVector3 m_hierarchyPositionOffset;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BEF0", Offset = "0xB6BEF0")]
		public RangedVector3 m_rotation;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RangedFloat m_scale;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6BF38", Offset = "0xB6BF38")]
		private bool <IsRunning>k__BackingField;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6BF48", Offset = "0xB6BF48")]
		private List<Fruit> <SpawnedFruit>k__BackingField;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected bool m_isPaused;

		[Token(Token = "0x17000278")]
		public bool IsRunning
		{
			[Token(Token = "0x600123B")]
			[Address(RVA = "0x21A1A1C", Offset = "0x21A1A1C", VA = "0x21A1A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F878", Offset = "0xB7F878")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600123C")]
			[Address(RVA = "0x21A1A24", Offset = "0x21A1A24", VA = "0x21A1A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F888", Offset = "0xB7F888")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public List<Fruit> SpawnedFruit
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x21A1A30", Offset = "0x21A1A30", VA = "0x21A1A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F898", Offset = "0xB7F898")]
			get
			{
				return null;
			}
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x21A1A38", Offset = "0x21A1A38", VA = "0x21A1A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F8A8", Offset = "0xB7F8A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		protected Transform SpawnTransform
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x219F3F8", Offset = "0x219F3F8", VA = "0x219F3F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000043")]
		public event Action OnSpawnerFinished
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0x21A18DC", Offset = "0x21A18DC", VA = "0x21A18DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F858", Offset = "0xB7F858")]
			add
			{
			}
			[Token(Token = "0x600123A")]
			[Address(RVA = "0x21A197C", Offset = "0x21A197C", VA = "0x21A197C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7F868", Offset = "0xB7F868")]
			remove
			{
			}
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x219EBC8", Offset = "0x219EBC8", VA = "0x219EBC8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x219ECB0", Offset = "0x219ECB0", VA = "0x219ECB0", Slot = "5")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001242")]
		public abstract void Spawn(SpawnData data);

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x21A1A40", Offset = "0x21A1A40", VA = "0x21A1A40", Slot = "7")]
		protected virtual Fruit SpawnFruit(FruitConfig config, int waveId = 0)
		{
			return null;
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x21A0B04", Offset = "0x21A0B04", VA = "0x21A0B04", Slot = "8")]
		protected virtual void HandleKilledFruit(Fruit fruit)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x21A09DC", Offset = "0x21A09DC", VA = "0x21A09DC", Slot = "9")]
		protected virtual Vector3 GetNextFruitPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x21A1D28", Offset = "0x21A1D28", VA = "0x21A1D28", Slot = "10")]
		protected virtual void OnSpawnedFruitSkewered(Fruit fruit)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x21A1D2C", Offset = "0x21A1D2C", VA = "0x21A1D2C", Slot = "11")]
		protected virtual void OnSpawnedFruitDestroyed(Fruit fruit)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x21A1D38", Offset = "0x21A1D38", VA = "0x21A1D38", Slot = "12")]
		protected virtual void OnSpawnedFruitSliced(Fruit fruit)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x21A1D3C", Offset = "0x21A1D3C", VA = "0x21A1D3C", Slot = "13")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F8B8", Offset = "0xB7F8B8")]
		protected virtual IEnumerator WaitForSecondsScaled(float delay)
		{
			return null;
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x21A1088", Offset = "0x21A1088", VA = "0x21A1088", Slot = "14")]
		protected virtual void OnGamePaused(GameEvent evt)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x21A1DB0", Offset = "0x21A1DB0", VA = "0x21A1DB0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x21A2090", Offset = "0x21A2090", VA = "0x21A2090")]
		private void DrawProjectilePathGizmo(Vector3 positionOffset, Vector3 velocity, Color colour)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x21A0434", Offset = "0x21A0434", VA = "0x21A0434")]
		protected void OnSpawnerFinishedInvoke()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x21A1460", Offset = "0x21A1460", VA = "0x21A1460")]
		protected SpawnerBase()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class SpawnerQueued : SpawnerBase
	{
		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C8B4", Offset = "0xB5C8B4")]
		private sealed class <SpawnFruitCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnerQueued <>4__this;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SpawnData <spawnData>5__2;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private FruitConfig <config>5__3;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600125F")]
				[Address(RVA = "0xFE8A48", Offset = "0xFE8A48", VA = "0xFE8A48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001261")]
				[Address(RVA = "0xFE8A90", Offset = "0xFE8A90", VA = "0xFE8A90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600125C")]
			[Address(RVA = "0xFE8778", Offset = "0xFE8778", VA = "0xFE8778")]
			[DebuggerHidden]
			public <SpawnFruitCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600125D")]
			[Address(RVA = "0xFE87A4", Offset = "0xFE87A4", VA = "0xFE87A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600125E")]
			[Address(RVA = "0xFE87A8", Offset = "0xFE87A8", VA = "0xFE87A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001260")]
			[Address(RVA = "0xFE8A50", Offset = "0xFE8A50", VA = "0xFE8A50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6BF58", Offset = "0xB6BF58")]
		public Animation m_animation;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BF90", Offset = "0xB6BF90")]
		public float m_shootAnimDelay;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6BFC8", Offset = "0xB6BFC8")]
		public float m_delayBetweenFruit;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<SpawnData> m_spawnQueue;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Coroutine m_coroutine;

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x21A2B3C", Offset = "0x21A2B3C", VA = "0x21A2B3C", Slot = "6")]
		public override void Spawn(SpawnData data)
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x21A2C30", Offset = "0x21A2C30", VA = "0x21A2C30")]
		public void Spawn(SpawnData data, bool nextInLine)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x21A2BB0", Offset = "0x21A2BB0", VA = "0x21A2BB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x21A2CE0", Offset = "0x21A2CE0", VA = "0x21A2CE0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x21A2CF4", Offset = "0x21A2CF4", VA = "0x21A2CF4", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7F968", Offset = "0xB7F968")]
		protected virtual IEnumerator SpawnFruitCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x21A2D6C", Offset = "0x21A2D6C", VA = "0x21A2D6C", Slot = "7")]
		protected override Fruit SpawnFruit(FruitConfig config, int waveId = 0)
		{
			return null;
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x21A2DFC", Offset = "0x21A2DFC", VA = "0x21A2DFC")]
		public SpawnerQueued()
		{
		}
	}
}
namespace ShopSystem
{
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C8C4", Offset = "0xB5C8C4")]
	public class Purchasable : UnlockablePrefab
	{
		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LocalizedString m_description;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CurrencyConfig m_currency;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int m_cost;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6C000", Offset = "0xB6C000")]
		public Vector3 m_shopItemOffset;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 m_shopItemRotation;

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xFFFDCC", Offset = "0xFFFDCC", VA = "0xFFFDCC")]
		public bool Purchase()
		{
			return default(bool);
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xFFFF1C", Offset = "0xFFFF1C", VA = "0xFFFF1C")]
		public Purchasable()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class Shop : MonoBehaviour
	{
		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C924", Offset = "0xB5C924")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShopItem item;

			[Token(Token = "0x6001287")]
			[Address(RVA = "0xFE5E54", Offset = "0xFE5E54", VA = "0xFE5E54")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6001288")]
			[Address(RVA = "0xFE5E5C", Offset = "0xFE5E5C", VA = "0xFE5E5C")]
			internal bool <Purchase>b__0(ShopItem x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C934", Offset = "0xB5C934")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShopItem item;

			[Token(Token = "0x6001289")]
			[Address(RVA = "0xFE5EE8", Offset = "0xFE5EE8", VA = "0xFE5EE8")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x600128A")]
			[Address(RVA = "0xFE5EF0", Offset = "0xFE5EF0", VA = "0xFE5EF0")]
			internal bool <RemoveShopItem>b__0(ShopCartItemDisplay x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C944", Offset = "0xB5C944")]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x400156D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShopItem shopItem;

			[Token(Token = "0x600128B")]
			[Address(RVA = "0xFE5F74", Offset = "0xFE5F74", VA = "0xFE5F74")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x600128C")]
			[Address(RVA = "0xFE5F7C", Offset = "0xFE5F7C", VA = "0xFE5F7C")]
			internal bool <RemoveItemFromDisplay>b__0(ShopItemDisplay x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5C954", Offset = "0xB5C954")]
		private sealed class <>c__DisplayClass64_0
		{
			[Token(Token = "0x400156E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShopItem item;

			[Token(Token = "0x600128D")]
			[Address(RVA = "0xFE6000", Offset = "0xFE6000", VA = "0xFE6000")]
			public <>c__DisplayClass64_0()
			{
			}

			[Token(Token = "0x600128E")]
			[Address(RVA = "0xFE6008", Offset = "0xFE6008", VA = "0xFE6008")]
			internal bool <RemoveFromCart>b__0(ShopCartItemDisplay x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShopInventory m_inventory;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShopItem m_shopItemPrefab;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator m_shopAnimator;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6C038", Offset = "0xB6C038")]
		public bool m_isPhysicalShop;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<ShopItemDisplay> m_itemDisplays;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InventoryPlayerDataObject.ItemType m_secondaryItemType;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<ShopItemDisplay> m_secondaryItemDisplays;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool m_noActivationIfSoldOut;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent m_onActivateShop;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent m_deactivateShop;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6C070", Offset = "0xB6C070")]
		public Transform m_shopItemParent;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform m_purchaseSpawnPosition;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ShopItemTag m_itemTagPrefab;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6C0A8", Offset = "0xB6C0A8")]
		public UnityEvent m_onPurchaseSuccess;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent m_onPurchaseFailure;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent m_onSoldOut;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6C0E0", Offset = "0xB6C0E0")]
		public TextMeshProUGUI m_shoppingCartTotalText;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject m_shoppingCartEmptyEffect;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform m_shoppingCartDisplayParent;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<ShopCartItemDisplay> m_shoppingCartItemDisplays;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6C118", Offset = "0xB6C118")]
		public bool m_resetShopOnEnable;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_isInitialized;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool m_isShopActive;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly HashSet<ShopItem> m_shoppingCart;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly List<ShopItem> m_shopItems;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly Dictionary<CurrencyConfig, int> m_shoppingCartTotal;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private HashSet<ShopItem> m_playerHeldShoppingCartItems;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_playerHoldingShopItemInCart;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ShopItem m_tempShopItem;

		[Token(Token = "0x1700027F")]
		public bool SoldOut
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xF037BC", Offset = "0xF037BC", VA = "0xF037BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000280")]
		public bool ShoppingCartEmpty
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0xF03810", Offset = "0xF03810", VA = "0xF03810")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000281")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xF03864", Offset = "0xF03864", VA = "0xF03864")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000044")]
		public event Action OnInitializeComplete
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xF0367C", Offset = "0xF0367C", VA = "0xF0367C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA18", Offset = "0xB7FA18")]
			add
			{
			}
			[Token(Token = "0x6001265")]
			[Address(RVA = "0xF0371C", Offset = "0xF0371C", VA = "0xF0371C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA28", Offset = "0xB7FA28")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public static event Action<bool, Shop, ShopItem> OnPurchase
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0xF0386C", Offset = "0xF0386C", VA = "0xF0386C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA38", Offset = "0xB7FA38")]
			add
			{
			}
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xF03928", Offset = "0xF03928", VA = "0xF03928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA48", Offset = "0xB7FA48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public static event Action<Shop, ShopItem> OnItemAddedToCart
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xF039E4", Offset = "0xF039E4", VA = "0xF039E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA58", Offset = "0xB7FA58")]
			add
			{
			}
			[Token(Token = "0x600126C")]
			[Address(RVA = "0xF03AA4", Offset = "0xF03AA4", VA = "0xF03AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA68", Offset = "0xB7FA68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public static event Action<Shop, ShopItem> OnItemRemovedFromCart
		{
			[Token(Token = "0x600126D")]
			[Address(RVA = "0xF03B64", Offset = "0xF03B64", VA = "0xF03B64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA78", Offset = "0xB7FA78")]
			add
			{
			}
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xF03C24", Offset = "0xF03C24", VA = "0xF03C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA88", Offset = "0xB7FA88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public static event Action<Shop> OnShopDisabled
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0xF03CE4", Offset = "0xF03CE4", VA = "0xF03CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FA98", Offset = "0xB7FA98")]
			add
			{
			}
			[Token(Token = "0x6001270")]
			[Address(RVA = "0xF03DA4", Offset = "0xF03DA4", VA = "0xF03DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAA8", Offset = "0xB7FAA8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xF03E64", Offset = "0xF03E64", VA = "0xF03E64")]
		private void Start()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xF043D0", Offset = "0xF043D0", VA = "0xF043D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xF044D4", Offset = "0xF044D4", VA = "0xF044D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xF047A4", Offset = "0xF047A4", VA = "0xF047A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xF04030", Offset = "0xF04030", VA = "0xF04030")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xF056C4", Offset = "0xF056C4", VA = "0xF056C4")]
		private void SpawnShopItem(ShopItem shopItem, Purchasable purchasable, List<ShopItemDisplay> itemDisplays)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xF05A5C", Offset = "0xF05A5C", VA = "0xF05A5C")]
		private void Purchase(bool success, Shop shop, ShopItem item)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xF05DA0", Offset = "0xF05DA0", VA = "0xF05DA0")]
		private void RemoveShopItem(ShopItem item, bool removeFromCart)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xF060E4", Offset = "0xF060E4", VA = "0xF060E4")]
		private void RemoveItemFromDisplay(ShopItem shopItem, List<ShopItemDisplay> itemDisplays)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xF062D4", Offset = "0xF062D4", VA = "0xF062D4")]
		public void PurchaseItem(ShopItem item)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xF063F8", Offset = "0xF063F8", VA = "0xF063F8")]
		public bool IsInCart(ShopItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xF0645C", Offset = "0xF0645C", VA = "0xF0645C")]
		public bool AddToCart(GameObject objectToAdd)
		{
			return default(bool);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xF04BC0", Offset = "0xF04BC0", VA = "0xF04BC0")]
		public void AddToCart(ShopItem item)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xF0690C", Offset = "0xF0690C", VA = "0xF0690C")]
		public bool RemoveFromCart(GameObject objectToRemove)
		{
			return default(bool);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xF04F24", Offset = "0xF04F24", VA = "0xF04F24")]
		public void RemoveFromCart(ShopItem item, bool checkForHeldItem = true)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xF06C94", Offset = "0xF06C94", VA = "0xF06C94")]
		public void ToggleInCart(ShopItem item)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xF06D24", Offset = "0xF06D24", VA = "0xF06D24")]
		public void PurchaseCart()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xF07210", Offset = "0xF07210", VA = "0xF07210")]
		public void SetShopActive(bool toActive)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xF073CC", Offset = "0xF073CC", VA = "0xF073CC")]
		public void ResetAllItems()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xF04694", Offset = "0xF04694", VA = "0xF04694")]
		private void RemoveAllItemsFromCart()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xF04B08", Offset = "0xF04B08", VA = "0xF04B08")]
		public void TogglePlayerHeldShopItem(ShopItem item, bool addToList)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xF07A08", Offset = "0xF07A08", VA = "0xF07A08")]
		public Shop()
		{
		}
	}
	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5C964", Offset = "0xB5C964")]
	public class ShopInventory : ScriptableObject
	{
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Purchasable> m_inventory;

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xF07C30", Offset = "0xF07C30", VA = "0xF07C30")]
		public bool CanAffordCheapestItem(CurrencyConfig currency)
		{
			return default(bool);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xF07DA8", Offset = "0xF07DA8", VA = "0xF07DA8")]
		public ShopInventory()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class ShopItem : MonoBehaviour
	{
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_spawnPurchasablePrefabOnInit;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6C1A0", Offset = "0xB6C1A0")]
		public bool m_useUI;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_nameText;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_descriptionText;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI m_costText;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image m_currencyIcon;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_inCart;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool m_inSecondaryDisplay;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Purchasable m_purchasable;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Shop m_shop;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject m_spawnedObject;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Grabbable m_grabbable;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ShopItemTag m_tag;

		[Token(Token = "0x17000282")]
		public Purchasable Purchasable
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0xF07DB0", Offset = "0xF07DB0", VA = "0xF07DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000283")]
		public GameObject SpawnedObject
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0xF07DB8", Offset = "0xF07DB8", VA = "0xF07DB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0xF07DC0", Offset = "0xF07DC0", VA = "0xF07DC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000049")]
		public event Action<ShopItem> OnShopItemGrabbed
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xF07DC8", Offset = "0xF07DC8", VA = "0xF07DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAB8", Offset = "0xB7FAB8")]
			add
			{
			}
			[Token(Token = "0x6001295")]
			[Address(RVA = "0xF07E68", Offset = "0xF07E68", VA = "0xF07E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAC8", Offset = "0xB7FAC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action<ShopItem> OnShopItemReleased
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0xF07F08", Offset = "0xF07F08", VA = "0xF07F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAD8", Offset = "0xB7FAD8")]
			add
			{
			}
			[Token(Token = "0x6001297")]
			[Address(RVA = "0xF07FA8", Offset = "0xF07FA8", VA = "0xF07FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FAE8", Offset = "0xB7FAE8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xF05254", Offset = "0xF05254", VA = "0xF05254")]
		public void Initialize(Shop shop, Purchasable purchasable)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xF08230", Offset = "0xF08230", VA = "0xF08230")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xF082BC", Offset = "0xF082BC", VA = "0xF082BC")]
		private void OnShopPurchase(bool success, Shop shop, ShopItem item)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xF085D8", Offset = "0xF085D8", VA = "0xF085D8")]
		public void Purchase()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xF08048", Offset = "0xF08048", VA = "0xF08048")]
		private void SetupUI()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xF085F4", Offset = "0xF085F4", VA = "0xF085F4")]
		private void ShopItemGrabbed(IGrabbable grabbable, IHand hand)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xF08654", Offset = "0xF08654", VA = "0xF08654")]
		private void ShopItemReleased(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xF086B4", Offset = "0xF086B4", VA = "0xF086B4")]
		public ShopItem()
		{
		}
	}
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5C9C4", Offset = "0xB5C9C4")]
	public class ShopItemCartTrigger : MonoBehaviour
	{
		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shop m_shop;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask m_validLayerMask;

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xF086BC", Offset = "0xF086BC", VA = "0xF086BC")]
		private bool IsValidObject(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xF0871C", Offset = "0xF0871C", VA = "0xF0871C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xF087EC", Offset = "0xF087EC", VA = "0xF087EC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xF088BC", Offset = "0xF088BC", VA = "0xF088BC")]
		public ShopItemCartTrigger()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class ShopItemDisplay : MonoBehaviour
	{
		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CA24", Offset = "0xB5CA24")]
		private sealed class <ResetItemCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShopItemDisplay <>4__this;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <itemTransform>5__2;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <initialPosition>5__3;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <initialRotation>5__4;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <timer>5__5;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012B0")]
				[Address(RVA = "0xFE63C8", Offset = "0xFE63C8", VA = "0xFE63C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012B2")]
				[Address(RVA = "0xFE6410", Offset = "0xFE6410", VA = "0xFE6410", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xFE608C", Offset = "0xFE608C", VA = "0xFE608C")]
			[DebuggerHidden]
			public <ResetItemCoroutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60012AE")]
			[Address(RVA = "0xFE60B8", Offset = "0xFE60B8", VA = "0xFE60B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012AF")]
			[Address(RVA = "0xFE60BC", Offset = "0xFE60BC", VA = "0xFE60BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xFE63D0", Offset = "0xFE63D0", VA = "0xFE63D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_itemPosition;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShopItem m_shopItem;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_spawnedItem;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_maxCarryDistance;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_releasedResetTimer;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_resetDuration;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Ease m_resetEase;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Shop m_shop;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_initialized;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grabbable m_spawnedGrabbable;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_maxCarryDistanceSquared;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_isResting;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool m_isResettingItem;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_resetTimer;

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xF05920", Offset = "0xF05920", VA = "0xF05920")]
		public void Initialize(Shop shop, ShopItem shopItem, GameObject spawnedItem)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xF0620C", Offset = "0xF0620C", VA = "0xF0620C")]
		public void Uninitialize()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xF075F0", Offset = "0xF075F0", VA = "0xF075F0")]
		public void ResetItem()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xF0893C", Offset = "0xF0893C", VA = "0xF0893C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xF088C4", Offset = "0xF088C4", VA = "0xF088C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7FAF8", Offset = "0xB7FAF8")]
		private IEnumerator ResetItemCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xF08AC4", Offset = "0xF08AC4", VA = "0xF08AC4")]
		private void OnShopDisabled(Shop shop)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xF08B58", Offset = "0xF08B58", VA = "0xF08B58")]
		private void ImmediateForceResetItem()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xF08FE0", Offset = "0xF08FE0", VA = "0xF08FE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xF0906C", Offset = "0xF0906C", VA = "0xF0906C")]
		public ShopItemDisplay()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class ShopItemTag : MonoBehaviour
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text m_purchaseCostText;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image m_purchaseCostCurrencyIcon;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_canvas;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform m_tagTransform;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_toEnableWhenTagPops;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] m_toDisableWhenTagPops;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_selfDestructTimer;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_canvasScale;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Grabbable m_grabbable;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_prevScale;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_localPosition;

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xF08158", Offset = "0xF08158", VA = "0xF08158")]
		public void Init(int cost, Sprite sprite)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xF0908C", Offset = "0xF0908C", VA = "0xF0908C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xF09164", Offset = "0xF09164", VA = "0xF09164")]
		private void ApplyCorrectScale(float sign)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xF084BC", Offset = "0xF084BC", VA = "0xF084BC")]
		public void PopTag()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xF091B4", Offset = "0xF091B4", VA = "0xF091B4")]
		public ShopItemTag()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class ShopTutorial : MonoBehaviour
	{
		[Token(Token = "0x2000368")]
		public enum ShopTutorialState
		{
			[Token(Token = "0x40015AC")]
			NotEnoughCurrency,
			[Token(Token = "0x40015AD")]
			ReadyToStart,
			[Token(Token = "0x40015AE")]
			GrabbedWeapon,
			[Token(Token = "0x40015AF")]
			PlacedWeaponInCart,
			[Token(Token = "0x40015B0")]
			PurchasedWeapon,
			[Token(Token = "0x40015B1")]
			Complete
		}

		[Serializable]
		[Token(Token = "0x2000369")]
		public class TutorialEvent
		{
			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ShopTutorialState m_assignedState;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent m_onStateReached;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject[] m_objectsEnabledDuringState;

			[Token(Token = "0x60012C7")]
			[Address(RVA = "0xFE6418", Offset = "0xFE6418", VA = "0xFE6418")]
			public TutorialEvent()
			{
			}
		}

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shop m_shop;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurrencyConfig m_starfruitConfig;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mission m_shopMission;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShopTutorialState m_tutorialState;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<TutorialEvent> m_tutorialStateEvents;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] m_tutorialObjects;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ShopItem m_currentShopItem;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_grabbedObjects;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_subscribedToEvents;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ShopTutorialState m_prevState;

		[Token(Token = "0x17000287")]
		private bool AnyItemGrabbed
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0xF091C4", Offset = "0xF091C4", VA = "0xF091C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xF091D4", Offset = "0xF091D4", VA = "0xF091D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xF09280", Offset = "0xF09280", VA = "0xF09280")]
		private void InitializeTutorial()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xF098BC", Offset = "0xF098BC", VA = "0xF098BC")]
		private void OnCurrencyGained(CurrencyConfig currency, int amount)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xF09BC8", Offset = "0xF09BC8", VA = "0xF09BC8")]
		private void OnShopItemGrabbed(ShopItem item)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xF09C28", Offset = "0xF09C28", VA = "0xF09C28")]
		private void OnShopItemReleased(ShopItem item)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xF09C54", Offset = "0xF09C54", VA = "0xF09C54")]
		private void OnItemAddedToCart(Shop shop, ShopItem item)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xF09C6C", Offset = "0xF09C6C", VA = "0xF09C6C")]
		private void OnItemRemovedFromCart(Shop shop, ShopItem item)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xF09CD0", Offset = "0xF09CD0", VA = "0xF09CD0")]
		private void OnShopItemPurchased(bool success, Shop shop, ShopItem item)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xF09998", Offset = "0xF09998", VA = "0xF09998")]
		private void UpdateState(ShopTutorialState toState, bool forceUpdate = false)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xF09834", Offset = "0xF09834", VA = "0xF09834")]
		private void CompleteTutorial()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xF09CE4", Offset = "0xF09CE4", VA = "0xF09CE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xF0A28C", Offset = "0xF0A28C", VA = "0xF0A28C")]
		public ShopTutorial()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xF0A29C", Offset = "0xF0A29C", VA = "0xF0A29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBA8", Offset = "0xB7FBA8")]
		private bool <UpdateState>b__22_0(TutorialEvent x)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xF0A2C0", Offset = "0xF0A2C0", VA = "0xF0A2C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBB8", Offset = "0xB7FBB8")]
		private bool <UpdateState>b__22_1(TutorialEvent x)
		{
			return default(bool);
		}
	}
}
namespace RhythmGame.StreakSystem
{
	[Token(Token = "0x200036A")]
	public class StreakEffect : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200036B")]
		public class Effect
		{
			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB6C228", Offset = "0xB6C228")]
			public bool m_isAdditive;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_effectObject;

			[Token(Token = "0x60012CF")]
			[Address(RVA = "0xFEDAE4", Offset = "0xFEDAE4", VA = "0xFEDAE4")]
			public Effect()
			{
			}
		}

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Effect[] m_streakReachedEffects;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro m_streakText;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PooledObject m_pooledObject;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StreakTier m_streakTier;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_tierID;

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x1B0B058", Offset = "0x1B0B058", VA = "0x1B0B058")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x1B0B0E8", Offset = "0x1B0B0E8", VA = "0x1B0B0E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x1B0B178", Offset = "0x1B0B178", VA = "0x1B0B178")]
		private void OnStreakTierChanged(StreakTier newTier, int tierID)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x1B0B3B0", Offset = "0x1B0B3B0", VA = "0x1B0B3B0")]
		public void SetStreakTier(StreakTier toTier, int toID)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x1B0B4C8", Offset = "0x1B0B4C8", VA = "0x1B0B4C8")]
		public void SetEffectsActive(bool isActive)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x1B0B5B4", Offset = "0x1B0B5B4", VA = "0x1B0B5B4")]
		public void RecycleEffect()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x1B0B690", Offset = "0x1B0B690", VA = "0x1B0B690")]
		public StreakEffect()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class StreakFruitEffect : MonoBehaviour
	{
		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_enableAfterStreakTier;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer m_fruitFlame;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PooledObject m_pooledObject;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleUser[] m_streakChangedParticles;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Fruit m_fruit;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_hasInitialized;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_wasRecycled;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_sqrDistanceFromPlayerToRender;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action<StreakTier, int> m_onStreakChanged;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action<Fruit> m_onFruitDeflected;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action<Fruit> m_onDisableThisEffect;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_streakChangedParticleOffset;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int s_drawOrderID;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int s_flameDrawOrder;

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1B0B698", Offset = "0x1B0B698", VA = "0x1B0B698")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x1B0B894", Offset = "0x1B0B894", VA = "0x1B0B894")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x1B0BBC8", Offset = "0x1B0BBC8", VA = "0x1B0BBC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x1B0BF10", Offset = "0x1B0BF10", VA = "0x1B0BF10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x1B0BF54", Offset = "0x1B0BF54", VA = "0x1B0BF54")]
		private void DisableThisEffect(Fruit fruitSliced)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x1B0BA9C", Offset = "0x1B0BA9C", VA = "0x1B0BA9C")]
		private void OnStreakTierChanged(StreakTier newTier, int tierID)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x1B0BCB0", Offset = "0x1B0BCB0", VA = "0x1B0BCB0")]
		public void AssignFruit(Fruit toFruit)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x1B0BFFC", Offset = "0x1B0BFFC", VA = "0x1B0BFFC")]
		private void OnFruitDeflected(Fruit fruit)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x1B0C15C", Offset = "0x1B0C15C", VA = "0x1B0C15C")]
		public StreakFruitEffect()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class StreakManager : MonoBehaviour
	{
		[Token(Token = "0x200036E")]
		public enum StreakBreakingReason
		{
			[Token(Token = "0x40015EA")]
			BombSliced,
			[Token(Token = "0x40015EB")]
			BombToTheFace,
			[Token(Token = "0x40015EC")]
			MissedFruit,
			[Token(Token = "0x40015ED")]
			WrongDirection,
			[Token(Token = "0x40015EE")]
			DeflectedFruit
		}

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString m_streakName;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizedString m_streakBreakName;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public StreakTier[] m_streakTiers;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshPro m_streakCountText;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshPro m_streakCountTitleText;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshPro m_streakMultiplierText;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshPro m_streakMultiplierTitleText;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject m_streakBreakEffect;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshPro m_streakBreakEffectText;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public StreakFruitEffect m_streakFruitEffect;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material m_fruitBaseMaterial;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public DOTweenAnimation[] m_streakImproveAnimations;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private StreakTier m_currentStreakTier;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_currentStreakTierID;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int m_currentStreakCount;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_previousStreakTierID;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material m_textMaterial;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material m_numberMaterial;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material m_fruitEffectMaterial;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material m_fruitStreakMaterial;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color m_fruitStreakRimDefaultColor;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_highestStreakTier;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int m_numStreaksStarted;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<StreakEffect> m_streakEffects;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Dictionary<StreakTier, string> m_streakNames;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Dictionary<StreakTier, string> m_streakMultiplierNames;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static StreakManager Instance;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C25C", Offset = "0xB6C25C")]
		private bool <IsInStreak>k__BackingField;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private WaveManagerRhythm m_waveManagerRhythm;

		[Token(Token = "0x17000288")]
		private bool InFinalStreak
		{
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x11672A4", Offset = "0x11672A4", VA = "0x11672A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000289")]
		public int CurrentStreakID
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x11672D0", Offset = "0x11672D0", VA = "0x11672D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028A")]
		public int CurrentStreakCount
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x11672D8", Offset = "0x11672D8", VA = "0x11672D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028B")]
		public int CurrentStreakMultiplier
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x11672E0", Offset = "0x11672E0", VA = "0x11672E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028C")]
		public int HighestStreakTierAchieved
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x116736C", Offset = "0x116736C", VA = "0x116736C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028D")]
		public int NumStreaksStarted
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x1167374", Offset = "0x1167374", VA = "0x1167374")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028E")]
		public Material FruitEffectMaterial
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x116737C", Offset = "0x116737C", VA = "0x116737C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028F")]
		public Material FruitStreakMaterial
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x1167384", Offset = "0x1167384", VA = "0x1167384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public Dictionary<StreakTier, string> StreakNames
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x116738C", Offset = "0x116738C", VA = "0x116738C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public bool IsInStreak
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x116768C", Offset = "0x116768C", VA = "0x116768C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FC08", Offset = "0xB7FC08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012E8")]
			[Address(RVA = "0x1167694", Offset = "0x1167694", VA = "0x1167694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FC18", Offset = "0xB7FC18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public WaveManagerRhythm WaveManagerRhythm
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x11676A0", Offset = "0x11676A0", VA = "0x11676A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004B")]
		public static event Action<StreakTier, int> OnStreakTierChanged
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x1167394", Offset = "0x1167394", VA = "0x1167394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBC8", Offset = "0xB7FBC8")]
			add
			{
			}
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x1167450", Offset = "0x1167450", VA = "0x1167450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBD8", Offset = "0xB7FBD8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public static event Action OnStreakBroken
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x116750C", Offset = "0x116750C", VA = "0x116750C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBE8", Offset = "0xB7FBE8")]
			add
			{
			}
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x11675CC", Offset = "0x11675CC", VA = "0x11675CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FBF8", Offset = "0xB7FBF8")]
			remove
			{
			}
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x11676A8", Offset = "0x11676A8", VA = "0x11676A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x1167764", Offset = "0x1167764", VA = "0x1167764")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x1168140", Offset = "0x1168140", VA = "0x1168140")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x1168260", Offset = "0x1168260", VA = "0x1168260")]
		public void BreakStreak(StreakBreakingReason reason)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x11684D4", Offset = "0x11684D4", VA = "0x11684D4")]
		public void SetupFruitEffectMaterial(Material toMaterial)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x1168548", Offset = "0x1168548", VA = "0x1168548")]
		public StreakFruitEffect SpawnStreakFruitEffect(Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x1167AC8", Offset = "0x1167AC8", VA = "0x1167AC8")]
		private void SetupStreakEffects()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x1167D9C", Offset = "0x1167D9C", VA = "0x1167D9C")]
		private void SetupTextMaterial()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x1167ED8", Offset = "0x1167ED8", VA = "0x1167ED8")]
		private void SetupFruitMaterial()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x1167918", Offset = "0x1167918", VA = "0x1167918")]
		private void SetupStringDictionaries()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x1168654", Offset = "0x1168654", VA = "0x1168654")]
		public void RecycleStreakEffects()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x1168790", Offset = "0x1168790", VA = "0x1168790")]
		private void OnFruitSliced(Fruit fruit, FruitHalf leftHalf, FruitHalf rightHalf, Fruit.FruitSlicedEvent slicedEvent)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x11689C4", Offset = "0x11689C4", VA = "0x11689C4")]
		private void OnBombExploded(Bomb bomb, Bomb.ExplosionReason explosionReason)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x116884C", Offset = "0x116884C", VA = "0x116884C")]
		private void ImproveStreak()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1167F80", Offset = "0x1167F80", VA = "0x1167F80")]
		private void UpdateStreakCountText()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x1167FC4", Offset = "0x1167FC4", VA = "0x1167FC4")]
		private void UpdateStreakMultiplierText()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x1168D10", Offset = "0x1168D10", VA = "0x1168D10")]
		private void UpdateTextColours()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x1168C70", Offset = "0x1168C70", VA = "0x1168C70")]
		private void UpdateFruitEffectColors()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1168068", Offset = "0x1168068", VA = "0x1168068")]
		private void UpdateFruitColors()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x1168EA0", Offset = "0x1168EA0", VA = "0x1168EA0")]
		public StreakManager()
		{
		}
	}
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5CA34", Offset = "0xB5CA34")]
	public class StreakTier : ScriptableObject
	{
		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString m_tierName;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_tierMultiplier;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_tierStreakRequirement;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssetVariationPrefab m_streakEffect;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_tierMultiplierString;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color m_tierPrimaryColor;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color m_tierSecondaryColor;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color m_tierTertiaryColor;

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1169AF4", Offset = "0x1169AF4", VA = "0x1169AF4")]
		public StreakTier()
		{
		}
	}
}
namespace PlayerData
{
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xB5CA94", Offset = "0xB5CA94")]
	public class DataUpgradableAttribute : Attribute
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C26C", Offset = "0xB6C26C")]
		private int <Version>k__BackingField;

		[Token(Token = "0x17000293")]
		public int Version
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x109E4E0", Offset = "0x109E4E0", VA = "0x109E4E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FC28", Offset = "0xB7FC28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x109E4E8", Offset = "0x109E4E8", VA = "0x109E4E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FC38", Offset = "0xB7FC38")]
			private set
			{
			}
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x109E4F0", Offset = "0x109E4F0", VA = "0x109E4F0")]
		public DataUpgradableAttribute(int version)
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class JsonFilePlayerDataManager : PlayerDataManager
	{
		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CAA8", Offset = "0xB5CAA8")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerDataObject obj;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public JsonFilePlayerDataManager <>4__this;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string key;

			[Token(Token = "0x600130B")]
			[Address(RVA = "0xFD70FC", Offset = "0xFD70FC", VA = "0xFD70FC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600130C")]
			[Address(RVA = "0xFD7104", Offset = "0xFD7104", VA = "0xFD7104")]
			internal void <SaveInternal>b__0()
			{
			}
		}

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C27C", Offset = "0xB6C27C")]
		private string <DirectoryPath>k__BackingField;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C28C", Offset = "0xB6C28C")]
		private string <CacheDirectoryPath>k__BackingField;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly object m_saveLock;

		[Token(Token = "0x17000294")]
		private string DirectoryPath
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x1018574", Offset = "0x1018574", VA = "0x1018574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FC48", Offset = "0xB7FC48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x101857C", Offset = "0x101857C", VA = "0x101857C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FC58", Offset = "0xB7FC58")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		private string CacheDirectoryPath
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x1018584", Offset = "0x1018584", VA = "0x1018584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FC68", Offset = "0xB7FC68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x101858C", Offset = "0x101858C", VA = "0x101858C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FC78", Offset = "0xB7FC78")]
			set
			{
			}
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1018594", Offset = "0x1018594", VA = "0x1018594", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x10187FC", Offset = "0x10187FC", VA = "0x10187FC", Slot = "7")]
		protected override PlayerDataObject GetInternal(string key, Type type)
		{
			return null;
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x10189EC", Offset = "0x10189EC", VA = "0x10189EC", Slot = "8")]
		protected override void SaveInternal(string key, PlayerDataObject obj)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1018B04", Offset = "0x1018B04", VA = "0x1018B04")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB7FC88", Offset = "0xB7FC88")]
		public static void Log(string message, UnityEngine.Object sender)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1018B08", Offset = "0x1018B08", VA = "0x1018B08")]
		public JsonFilePlayerDataManager()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public abstract class PlayerDataManager : MonoBehaviour
	{
		[Token(Token = "0x2000374")]
		public enum DataUpgradeError
		{
			[Token(Token = "0x400160A")]
			DuplicateVersion,
			[Token(Token = "0x400160B")]
			MissingVersion,
			[Token(Token = "0x400160C")]
			SerialisedVersionMismatch,
			[Token(Token = "0x400160D")]
			TypeNotFound,
			[Token(Token = "0x400160E")]
			MethodNotFound,
			[Token(Token = "0x400160F")]
			StepCall
		}

		[Token(Token = "0x2000375")]
		public struct DataUpgradeOutcome
		{
			[Token(Token = "0x4001610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Error<DataUpgradeError> m_error;

			[Token(Token = "0x4001611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PlayerDataObject m_resultingData;

			[Token(Token = "0x4001612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_fromVersion;

			[Token(Token = "0x4001613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int m_toVersion;

			[Token(Token = "0x4001614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m_latestVersion;

			[Token(Token = "0x6001333")]
			[Address(RVA = "0xFC331C", Offset = "0xFC331C", VA = "0xFC331C")]
			public DataUpgradeOutcome(Error<DataUpgradeError> error, PlayerDataObject finalData, int from, int to, int latest)
			{
			}
		}

		[Token(Token = "0x2000376")]
		public delegate void DataObjectChanged(object dataObject);

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly Dictionary<Type, string> s_validDataTypes;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, PlayerDataObject> m_cachedDataObjects;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Type, DataObjectChanged> m_objectDataChangedEvents;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<Type> m_deferredSaveObjects;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C29C", Offset = "0xB6C29C")]
		private bool <AreSavesDeferred>k__BackingField;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C2AC", Offset = "0xB6C2AC")]
		private bool <HadPreviouslySavedData>k__BackingField;

		[Token(Token = "0x4001604")]
		private const int UnsavedDataVersion = -1;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static PlayerDataManager s_instance;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly ProfilerMarker s_saveAllDirty;

		[Token(Token = "0x17000296")]
		public bool AreSavesDeferred
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0xF5D3BC", Offset = "0xF5D3BC", VA = "0xF5D3BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FCC0", Offset = "0xB7FCC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600130E")]
			[Address(RVA = "0xF5D3C4", Offset = "0xF5D3C4", VA = "0xF5D3C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FCD0", Offset = "0xB7FCD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public bool HadPreviouslySavedData
		{
			[Token(Token = "0x600130F")]
			[Address(RVA = "0xF5D3D0", Offset = "0xF5D3D0", VA = "0xF5D3D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FCE0", Offset = "0xB7FCE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001310")]
			[Address(RVA = "0xF5D3D8", Offset = "0xF5D3D8", VA = "0xF5D3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FCF0", Offset = "0xB7FCF0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public static PlayerDataManager Instance
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0xF4FB9C", Offset = "0xF4FB9C", VA = "0xF4FB9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004D")]
		public static event Action OnPlayerDataReset
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0xF5D3E4", Offset = "0xF5D3E4", VA = "0xF5D3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD00", Offset = "0xB7FD00")]
			add
			{
			}
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xF5D4DC", Offset = "0xF5D4DC", VA = "0xF5D4DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD10", Offset = "0xB7FD10")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public static event Action OnPlayerChanged
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0xF5D5D4", Offset = "0xF5D5D4", VA = "0xF5D5D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD20", Offset = "0xB7FD20")]
			add
			{
			}
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xF5D6CC", Offset = "0xF5D6CC", VA = "0xF5D6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD30", Offset = "0xB7FD30")]
			remove
			{
			}
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xF5D7C4", Offset = "0xF5D7C4", VA = "0xF5D7C4")]
		public static void Initialise()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xF5DBE4", Offset = "0xF5DBE4", VA = "0xF5DBE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xF5DC50", Offset = "0xF5DC50", VA = "0xF5DC50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xF5DD3C", Offset = "0xF5DD3C", VA = "0xF5DD3C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600131A")]
		public void AddAndCallObjectChangeListener<T>(DataObjectChanged evt)
		{
		}

		[Token(Token = "0x600131B")]
		private void RemoveObjectChangeListenerInternal<T>(DataObjectChanged evt)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xF5DE78", Offset = "0xF5DE78", VA = "0xF5DE78")]
		public void DeferSaves(bool defer, bool applySaves = true)
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xF5E484", Offset = "0xF5E484", VA = "0xF5E484")]
		protected Type GetObjectTypeForKey(string key)
		{
			return null;
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xF5E610", Offset = "0xF5E610", VA = "0xF5E610")]
		private Error<DataUpgradeError> GetDataVersionHistory(Type inputType, out Dictionary<int, Type> output)
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xF5EA48", Offset = "0xF5EA48", VA = "0xF5EA48")]
		private DataUpgradeOutcome PerformDataUpgrade(string key, Type outputType, Dictionary<int, Type> versionHistory, int originalVersion, int finalVersion)
		{
			return default(DataUpgradeOutcome);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xF5F3E8", Offset = "0xF5F3E8", VA = "0xF5F3E8")]
		private bool CheckDataUpgradeOutcome(string key, DataUpgradeOutcome outcome)
		{
			return default(bool);
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xF5F3F8", Offset = "0xF5F3F8", VA = "0xF5F3F8")]
		private PlayerDataObject CloneDataObjectToOtherType(PlayerDataObject from, Type toType)
		{
			return null;
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xF5F608", Offset = "0xF5F608", VA = "0xF5F608")]
		private void DeepMemberwiseClone(object from, object to)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xF5F7F4", Offset = "0xF5F7F4", VA = "0xF5F7F4")]
		private PlayerDataObject GetOrCreateDefault(string key, Type objectType, int version = -1)
		{
			return null;
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xF5E0A0", Offset = "0xF5E0A0", VA = "0xF5E0A0")]
		protected PlayerDataObject Get(Type inputType)
		{
			return null;
		}

		[Token(Token = "0x6001325")]
		public T Get<T>() where T : PlayerDataObject
		{
			return null;
		}

		[Token(Token = "0x6001326")]
		public void Save<T>() where T : PlayerDataObject
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xF5E2B0", Offset = "0xF5E2B0", VA = "0xF5E2B0")]
		public void Save(PlayerDataObject obj)
		{
		}

		[Token(Token = "0x6001328")]
		public void ResetData<T>() where T : PlayerDataObject
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xF5F8B4", Offset = "0xF5F8B4", VA = "0xF5F8B4", Slot = "4")]
		public virtual void ResetAllData()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xF5FBCC", Offset = "0xF5FBCC", VA = "0xF5FBCC", Slot = "5")]
		protected virtual void PlayerChanged()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xF5FB50", Offset = "0xF5FB50", VA = "0xF5FB50")]
		private int GetLatestVersion(Type objectType)
		{
			return default(int);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xF5DD40", Offset = "0xF5DD40", VA = "0xF5DD40")]
		private void SaveAllDirty()
		{
		}

		[Token(Token = "0x600132D")]
		public static void RemoveObjectChangeListener<T>(DataObjectChanged evt)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xF5FE08", Offset = "0xF5FE08", VA = "0xF5FE08", Slot = "6")]
		protected virtual int GetDataVersion(string key, Type type)
		{
			return default(int);
		}

		[Token(Token = "0x600132F")]
		protected abstract PlayerDataObject GetInternal(string key, Type type);

		[Token(Token = "0x6001330")]
		protected abstract void SaveInternal(string key, PlayerDataObject obj);

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xF5FE34", Offset = "0xF5FE34", VA = "0xF5FE34")]
		protected PlayerDataManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000377")]
	public class PlayerDataObject
	{
		[Token(Token = "0x2000378")]
		public class FieldsOnlyResolver : DefaultContractResolver
		{
			[Serializable]
			[Token(Token = "0x2000379")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CAB8", Offset = "0xB5CAB8")]
			private sealed class <>c
			{
				[Token(Token = "0x400161A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x400161B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Predicate<MemberInfo> <>9__0_0;

				[Token(Token = "0x6001346")]
				[Address(RVA = "0x1B9170C", Offset = "0x1B9170C", VA = "0x1B9170C")]
				public <>c()
				{
				}

				[Token(Token = "0x6001347")]
				[Address(RVA = "0x1B91714", Offset = "0x1B91714", VA = "0x1B91714")]
				internal bool <GetSerializableMembers>b__0_0(MemberInfo member)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001343")]
			[Address(RVA = "0xFC3378", Offset = "0xFC3378", VA = "0xFC3378", Slot = "6")]
			protected override List<MemberInfo> GetSerializableMembers(Type objectType)
			{
				return null;
			}

			[Token(Token = "0x6001344")]
			[Address(RVA = "0xFC34C8", Offset = "0xFC34C8", VA = "0xFC34C8")]
			public FieldsOnlyResolver()
			{
			}
		}

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JsonSerializerSettings s_serializerSettings;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_version;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_isDirty;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C2DC", Offset = "0xB6C2DC")]
		private bool <IsCache>k__BackingField;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C2EC", Offset = "0xB6C2EC")]
		private bool <IsDirtyNotify>k__BackingField;

		[Token(Token = "0x17000299")]
		public static JsonSerializerSettings SerializerSettings
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0xF6002C", Offset = "0xF6002C", VA = "0xF6002C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		public virtual bool IsCache
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0xF60090", Offset = "0xF60090", VA = "0xF60090", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD40", Offset = "0xB7FD40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600133A")]
			[Address(RVA = "0xF60098", Offset = "0xF60098", VA = "0xF60098", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD50", Offset = "0xB7FD50")]
			set
			{
			}
		}

		[Token(Token = "0x1700029B")]
		public bool IsDirty
		{
			[Token(Token = "0x600133B")]
			[Address(RVA = "0xF600A4", Offset = "0xF600A4", VA = "0xF600A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600133C")]
			[Address(RVA = "0xF57428", Offset = "0xF57428", VA = "0xF57428")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public bool IsDirtyNotify
		{
			[Token(Token = "0x600133D")]
			[Address(RVA = "0xF600AC", Offset = "0xF600AC", VA = "0xF600AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD60", Offset = "0xB7FD60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600133E")]
			[Address(RVA = "0xF600B4", Offset = "0xF600B4", VA = "0xF600B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD70", Offset = "0xB7FD70")]
			set
			{
			}
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xF600C0", Offset = "0xF600C0", VA = "0xF600C0", Slot = "6")]
		public virtual string Serialise()
		{
			return null;
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xF60164", Offset = "0xF60164", VA = "0xF60164", Slot = "7")]
		public virtual void Deserialise(string json)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xF575A8", Offset = "0xF575A8", VA = "0xF575A8")]
		public PlayerDataObject()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public sealed class PlayerPrefsPlayerDataManager : PlayerDataManager
	{
		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CAC8", Offset = "0xB5CAC8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400161C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerDataObject obj;

			[Token(Token = "0x400161D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string key;

			[Token(Token = "0x600134D")]
			[Address(RVA = "0xFC352C", Offset = "0xFC352C", VA = "0xFC352C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600134E")]
			[Address(RVA = "0xFC3534", Offset = "0xFC3534", VA = "0xFC3534")]
			internal void <SaveInternal>b__0()
			{
			}
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xFF2304", Offset = "0xFF2304", VA = "0xFF2304")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xFF2460", Offset = "0xFF2460", VA = "0xFF2460", Slot = "7")]
		protected override PlayerDataObject GetInternal(string key, Type type)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xFF27E0", Offset = "0xFF27E0", VA = "0xFF27E0", Slot = "8")]
		protected override void SaveInternal(string key, PlayerDataObject obj)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xFF28E4", Offset = "0xFF28E4", VA = "0xFF28E4", Slot = "6")]
		protected override int GetDataVersion(string key, Type type)
		{
			return default(int);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xFF2998", Offset = "0xFF2998", VA = "0xFF2998")]
		public PlayerPrefsPlayerDataManager()
		{
		}
	}
}
namespace PlayerData.DataObjects
{
	[Serializable]
	[Token(Token = "0x200037C")]
	public class AreaUnlocksPlayerDataObject : PlayerDataObject
	{
		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C2FC", Offset = "0xB6C2FC")]
		private List<AreaManager.AreaType> m_unlockedAreas;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C30C", Offset = "0xB6C30C")]
		private bool m_introSequenceSeen;

		[Token(Token = "0x1700029D")]
		public List<AreaManager.AreaType> UnlockedAreas
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xFAC094", Offset = "0xFAC094", VA = "0xFAC094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029E")]
		public bool IntroSequenceSeen
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xFAC09C", Offset = "0xFAC09C", VA = "0xFAC09C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001351")]
			[Address(RVA = "0xFAC0A4", Offset = "0xFAC0A4", VA = "0xFAC0A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xFAB85C", Offset = "0xFAB85C", VA = "0xFAB85C")]
		public void UnlockArea(AreaManager.AreaType area)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xFAB7F8", Offset = "0xFAB7F8", VA = "0xFAB7F8")]
		public bool IsAreaUnlocked(AreaManager.AreaType area)
		{
			return default(bool);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xFAC0B8", Offset = "0xFAC0B8", VA = "0xFAC0B8")]
		public void ClearUnlockData()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xFAC11C", Offset = "0xFAC11C", VA = "0xFAC11C")]
		public AreaUnlocksPlayerDataObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037D")]
	public class CustomizationPlayerDataObject : PlayerDataObject
	{
		[Token(Token = "0x200037E")]
		public class CustomizationData
		{
			[Token(Token = "0x4001621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomizationManager.CustomizationArea m_customizationArea;

			[Token(Token = "0x4001622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public CustomizationManager.CustomizationType m_customizationType;

			[Token(Token = "0x4001623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_customizationName;

			[Token(Token = "0x600135A")]
			[Address(RVA = "0xF8FF70", Offset = "0xF8FF70", VA = "0xF8FF70")]
			public CustomizationData()
			{
			}
		}

		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CAD8", Offset = "0xB5CAD8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001624")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomizationConfigBase config;

			[Token(Token = "0x600135B")]
			[Address(RVA = "0xF8FEDC", Offset = "0xF8FEDC", VA = "0xF8FEDC")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600135C")]
			[Address(RVA = "0xF8FEE4", Offset = "0xF8FEE4", VA = "0xF8FEE4")]
			internal bool <SetOrCreateCustomizationData>b__0(CustomizationData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CAE8", Offset = "0xB5CAE8")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001625")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomizationManager.CustomizationArea area;

			[Token(Token = "0x4001626")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public CustomizationManager.CustomizationType type;

			[Token(Token = "0x600135D")]
			[Address(RVA = "0xF8FF2C", Offset = "0xF8FF2C", VA = "0xF8FF2C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600135E")]
			[Address(RVA = "0xF8FF34", Offset = "0xF8FF34", VA = "0xF8FF34")]
			internal bool <GetCustomizationData>b__0(CustomizationData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C31C", Offset = "0xB6C31C")]
		public List<CustomizationData> m_customizationData;

		[Token(Token = "0x1700029F")]
		public List<CustomizationData> CustomizationDataList
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0x108D29C", Offset = "0x108D29C", VA = "0x108D29C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x108CC50", Offset = "0x108CC50", VA = "0x108CC50")]
		public void SetOrCreateCustomizationData(CustomizationConfigBase config)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x108CB5C", Offset = "0x108CB5C", VA = "0x108CB5C")]
		public CustomizationData GetCustomizationData(CustomizationManager.CustomizationArea area, CustomizationManager.CustomizationType type)
		{
			return null;
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x108D2A4", Offset = "0x108D2A4", VA = "0x108D2A4")]
		public CustomizationPlayerDataObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000381")]
	public class DebugPlayerDataObject : PlayerDataObject
	{
		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C32C", Offset = "0xB6C32C")]
		private bool m_arrowTrajectoryEnabled;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C33C", Offset = "0xB6C33C")]
		private int m_teleportHand;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C34C", Offset = "0xB6C34C")]
		private int m_snapTurnHand;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C35C", Offset = "0xB6C35C")]
		private int m_locomotionMode;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C36C", Offset = "0xB6C36C")]
		private bool m_postProcessingEnabled;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C37C", Offset = "0xB6C37C")]
		private float m_renderScale;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C38C", Offset = "0xB6C38C")]
		private bool m_controllersVibrationsEnabled;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C39C", Offset = "0xB6C39C")]
		private bool m_poolingConsoleEnabled;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C3AC", Offset = "0xB6C3AC")]
		private bool m_multiplayerStatsEnabled;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C3BC", Offset = "0xB6C3BC")]
		private bool m_multiplayerEnableBowResimulations;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C3CC", Offset = "0xB6C3CC")]
		private bool m_multiplayerEnableGrabbableResimulations;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C3DC", Offset = "0xB6C3DC")]
		private bool m_multiplayerEnablePulling;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C3EC", Offset = "0xB6C3EC")]
		private bool m_enableFruitBasketSpawning;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C3FC", Offset = "0xB6C3FC")]
		private bool m_enableFruitSpawning;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C40C", Offset = "0xB6C40C")]
		private bool m_enableRackSpawning;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C41C", Offset = "0xB6C41C")]
		private bool m_networkConditionEnabled;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C42C", Offset = "0xB6C42C")]
		private float m_networkConditionMinDelay;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C43C", Offset = "0xB6C43C")]
		private float m_networkConditionMaxDelay;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C44C", Offset = "0xB6C44C")]
		private float m_networkConditionDelayPeriod;

		[Token(Token = "0x170002A0")]
		public bool PoolingConsoleEnabled
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x10A04CC", Offset = "0x10A04CC", VA = "0x10A04CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001360")]
			[Address(RVA = "0x10A04D4", Offset = "0x10A04D4", VA = "0x10A04D4")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public bool MultiplayerStatsEnabled
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0x10A04E8", Offset = "0x10A04E8", VA = "0x10A04E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001362")]
			[Address(RVA = "0x10A04F0", Offset = "0x10A04F0", VA = "0x10A04F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public bool NetworkConditionEnabled
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x10A0504", Offset = "0x10A0504", VA = "0x10A0504")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x10A050C", Offset = "0x10A050C", VA = "0x10A050C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public float NetworkConditionMinDelay
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x10A0520", Offset = "0x10A0520", VA = "0x10A0520")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x10A0528", Offset = "0x10A0528", VA = "0x10A0528")]
			set
			{
			}
		}

		[Token(Token = "0x170002A4")]
		public float NetworkConditionMaxDelay
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x10A0538", Offset = "0x10A0538", VA = "0x10A0538")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x10A0540", Offset = "0x10A0540", VA = "0x10A0540")]
			set
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public float NetworkConditionDelayPeriod
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x10A0550", Offset = "0x10A0550", VA = "0x10A0550")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x10A0558", Offset = "0x10A0558", VA = "0x10A0558")]
			set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public bool ArrowTrajectoryEnabled
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x10A0568", Offset = "0x10A0568", VA = "0x10A0568")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x10A0570", Offset = "0x10A0570", VA = "0x10A0570")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public bool MultiplayerEnableBowResimulations
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x10A0584", Offset = "0x10A0584", VA = "0x10A0584")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136E")]
			[Address(RVA = "0x10A058C", Offset = "0x10A058C", VA = "0x10A058C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public bool MultiplayerEnablePulling
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x10A05A0", Offset = "0x10A05A0", VA = "0x10A05A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001370")]
			[Address(RVA = "0x10A05A8", Offset = "0x10A05A8", VA = "0x10A05A8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public bool MultiplayerEnableGrabbableResimulations
		{
			[Token(Token = "0x6001371")]
			[Address(RVA = "0x10A05BC", Offset = "0x10A05BC", VA = "0x10A05BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001372")]
			[Address(RVA = "0x10A05C4", Offset = "0x10A05C4", VA = "0x10A05C4")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public bool EnableFruitBasketSpawning
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x10A05D8", Offset = "0x10A05D8", VA = "0x10A05D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001374")]
			[Address(RVA = "0x10A05E0", Offset = "0x10A05E0", VA = "0x10A05E0")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public bool EnableRackSpawning
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x10A05F4", Offset = "0x10A05F4", VA = "0x10A05F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x10A05FC", Offset = "0x10A05FC", VA = "0x10A05FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public bool EnableFruitSpawning
		{
			[Token(Token = "0x6001377")]
			[Address(RVA = "0x10A0610", Offset = "0x10A0610", VA = "0x10A0610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x10A0618", Offset = "0x10A0618", VA = "0x10A0618")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public bool ControllersVibrationsEnabled
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x10A062C", Offset = "0x10A062C", VA = "0x10A062C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x10A0634", Offset = "0x10A0634", VA = "0x10A0634")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public int TeleportHand
		{
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x10A0648", Offset = "0x10A0648", VA = "0x10A0648")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x10A0650", Offset = "0x10A0650", VA = "0x10A0650")]
			set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public int SnapTurnHand
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x10A0664", Offset = "0x10A0664", VA = "0x10A0664")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x10A066C", Offset = "0x10A066C", VA = "0x10A066C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public int LocomotionMode
		{
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x10A0680", Offset = "0x10A0680", VA = "0x10A0680")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x10A0688", Offset = "0x10A0688", VA = "0x10A0688")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public bool PostProcessingEnabled
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x10A069C", Offset = "0x10A069C", VA = "0x10A069C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001382")]
			[Address(RVA = "0x10A06A4", Offset = "0x10A06A4", VA = "0x10A06A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public float RenderScale
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x10A06B8", Offset = "0x10A06B8", VA = "0x10A06B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x10A06C0", Offset = "0x10A06C0", VA = "0x10A06C0")]
			set
			{
			}
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x10A06D0", Offset = "0x10A06D0", VA = "0x10A06D0")]
		public DebugPlayerDataObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000382")]
	public class GameLevelsPlayerDataObject : PlayerDataObject
	{
		[Serializable]
		[Token(Token = "0x2000383")]
		public class LevelData
		{
			[Token(Token = "0x400163C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_attempts;

			[Token(Token = "0x400163D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int m_highScore;

			[Token(Token = "0x400163E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_grade;

			[Token(Token = "0x400163F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int m_gradeIndex;

			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool m_isComplete;

			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float m_bestTime;

			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool m_wasLastAttemptPersonalBest;

			[Token(Token = "0x600138E")]
			[Address(RVA = "0xFCC638", Offset = "0xFCC638", VA = "0xFCC638")]
			public LevelData()
			{
			}
		}

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C45C", Offset = "0xB6C45C")]
		private Dictionary<string, LevelData> m_levelData;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C46C", Offset = "0xB6C46C")]
		private string <LastSelectedLevel>k__BackingField;

		[Token(Token = "0x170002B3")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB89F54", Offset = "0xB89F54")]
		public string LastSelectedLevel
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x1259D40", Offset = "0x1259D40", VA = "0x1259D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD80", Offset = "0xB7FD80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x1259D48", Offset = "0x1259D48", VA = "0x1259D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FD90", Offset = "0xB7FD90")]
			private set
			{
			}
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1259D50", Offset = "0x1259D50", VA = "0x1259D50")]
		public GameLevelsPlayerDataObject()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1259EE8", Offset = "0x1259EE8", VA = "0x1259EE8", Slot = "1")]
		~GameLevelsPlayerDataObject()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x125A050", Offset = "0x125A050", VA = "0x125A050")]
		private void OnGameOver(GameEvent evt)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x125A25C", Offset = "0x125A25C", VA = "0x125A25C")]
		private void OnLevelSelected(GameEvent evt)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x125A30C", Offset = "0x125A30C", VA = "0x125A30C")]
		public bool IsLevelComplete(Level level)
		{
			return default(bool);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x125A3A0", Offset = "0x125A3A0", VA = "0x125A3A0")]
		public LevelData GetLevelData(string levelId)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000384")]
	public class InventoryPlayerDataObject : PlayerDataObject
	{
		[Token(Token = "0x2000385")]
		public enum InventorySlot
		{
			[Token(Token = "0x4001647")]
			Unassigned = -1,
			[Token(Token = "0x4001648")]
			LeftHand,
			[Token(Token = "0x4001649")]
			RightHand,
			[Token(Token = "0x400164A")]
			Head,
			[Token(Token = "0x400164B")]
			Chest,
			[Token(Token = "0x400164C")]
			LeftLeg,
			[Token(Token = "0x400164D")]
			RightLeg
		}

		[Token(Token = "0x2000386")]
		public enum ItemType
		{
			[Token(Token = "0x400164F")]
			Unassigned = -1,
			[Token(Token = "0x4001650")]
			Blade,
			[Token(Token = "0x4001651")]
			Sai,
			[Token(Token = "0x4001652")]
			Bow
		}

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C47C", Offset = "0xB6C47C")]
		private readonly Dictionary<InventorySlot, string> m_bladesSelectedUnlockForInventorySlots;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C48C", Offset = "0xB6C48C")]
		private readonly Dictionary<InventorySlot, string> m_bowSelectedUnlockForInventorySlots;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C49C", Offset = "0xB6C49C")]
		private readonly Dictionary<InventorySlot, string> m_saiSelectedUnlockForInventorySlots;

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x100D860", Offset = "0x100D860", VA = "0x100D860")]
		public string GetUnlockableId(ItemType itemType, InventorySlot inventorySlot)
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x100D948", Offset = "0x100D948", VA = "0x100D948")]
		public void SetItemAsSelected(ItemType itemType, InventorySlot inventorySlot, string id)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x100DA08", Offset = "0x100DA08", VA = "0x100DA08")]
		public string GetSelected(ItemType itemType, InventorySlot inventorySlot)
		{
			return null;
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x100D910", Offset = "0x100D910", VA = "0x100D910")]
		private Dictionary<InventorySlot, string> GetDictionaryForItemType(ItemType itemType)
		{
			return null;
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x100DAEC", Offset = "0x100DAEC", VA = "0x100DAEC")]
		public InventoryPlayerDataObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000387")]
	public class MissionsPlayerDataObject : PlayerDataObject
	{
		[Token(Token = "0x2000388")]
		public class MissionData
		{
			[Token(Token = "0x4001654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_isActive;

			[Token(Token = "0x4001655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool m_isComplete;

			[Token(Token = "0x4001656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool m_isCollected;

			[Token(Token = "0x4001657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_completionValue;

			[Token(Token = "0x60013A0")]
			[Address(RVA = "0xFDCA6C", Offset = "0xFDCA6C", VA = "0xFDCA6C")]
			public MissionData()
			{
			}
		}

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C4AC", Offset = "0xB6C4AC")]
		private Dictionary<string, MissionData> m_missionData;

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xF1A204", Offset = "0xF1A204", VA = "0xF1A204")]
		private MissionData GetOrCreateMissionData(string referenceID)
		{
			return null;
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xF1A30C", Offset = "0xF1A30C", VA = "0xF1A30C")]
		public void SetComplete(string referenceID)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xF1A348", Offset = "0xF1A348", VA = "0xF1A348")]
		public void SetActive(string referenceID)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xF1A384", Offset = "0xF1A384", VA = "0xF1A384")]
		public void SetCollected(string referenceID)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xF197E8", Offset = "0xF197E8", VA = "0xF197E8")]
		public void SetCompletionValue(string referenceID, float toValue)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xF18570", Offset = "0xF18570", VA = "0xF18570")]
		public void IncrementCompletionValue(string referenceID, float incrementAmount)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xF1A3C0", Offset = "0xF1A3C0", VA = "0xF1A3C0")]
		public bool IsComplete(string referenceID)
		{
			return default(bool);
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xF1A3E0", Offset = "0xF1A3E0", VA = "0xF1A3E0")]
		public bool IsActive(string referenceID)
		{
			return default(bool);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xF1A400", Offset = "0xF1A400", VA = "0xF1A400")]
		public bool IsCollected(string referenceID)
		{
			return default(bool);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xF185BC", Offset = "0xF185BC", VA = "0xF185BC")]
		public float GetCompletionValue(string referenceID)
		{
			return default(float);
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xF1A420", Offset = "0xF1A420", VA = "0xF1A420")]
		public void ResetData()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xF1A484", Offset = "0xF1A484", VA = "0xF1A484")]
		public MissionsPlayerDataObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000389")]
	public class SettingsPlayerDataObject : PlayerDataObject
	{
		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C4BC", Offset = "0xB6C4BC")]
		private int m_locomotionMode;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C4CC", Offset = "0xB6C4CC")]
		private float m_musicVolume;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C4DC", Offset = "0xB6C4DC")]
		private float m_sfxVolume;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C4EC", Offset = "0xB6C4EC")]
		private int m_bowPullingRange;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C4FC", Offset = "0xB6C4FC")]
		private bool m_bowAutoRelease;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C50C", Offset = "0xB6C50C")]
		private bool m_bowTrajectoryLine;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C51C", Offset = "0xB6C51C")]
		private bool m_flipMovementHands;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C52C", Offset = "0xB6C52C")]
		private int m_rotationMode;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C53C", Offset = "0xB6C53C")]
		private int m_rotationSpeed;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C54C", Offset = "0xB6C54C")]
		private float m_movementSpeed;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C55C", Offset = "0xB6C55C")]
		private bool m_useUseHandBasedMovement;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C56C", Offset = "0xB6C56C")]
		private bool m_disableSpaceInvaders;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C57C", Offset = "0xB6C57C")]
		private int m_offScreenIndicatorPreference;

		[Token(Token = "0x170002B4")]
		public bool DisableSpaceInvaders
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0xF01F84", Offset = "0xF01F84", VA = "0xF01F84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0xF01F8C", Offset = "0xF01F8C", VA = "0xF01F8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public float MusicVolume
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xF01FA0", Offset = "0xF01FA0", VA = "0xF01FA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xF01920", Offset = "0xF01920", VA = "0xF01920")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public float SfxVolume
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xF01FA8", Offset = "0xF01FA8", VA = "0xF01FA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xF01A04", Offset = "0xF01A04", VA = "0xF01A04")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public int LocomotionMode
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0xF01FB0", Offset = "0xF01FB0", VA = "0xF01FB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0xF01E44", Offset = "0xF01E44", VA = "0xF01E44")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public int BowPullingRange
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0xF01FB8", Offset = "0xF01FB8", VA = "0xF01FB8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0xF01A54", Offset = "0xF01A54", VA = "0xF01A54")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public bool BowAutoRelease
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0xF01FC0", Offset = "0xF01FC0", VA = "0xF01FC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AC")]
			[Address(RVA = "0xF01D28", Offset = "0xF01D28", VA = "0xF01D28")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public bool BowTrajectoryLine
		{
			[Token(Token = "0x60013AD")]
			[Address(RVA = "0xF01FC8", Offset = "0xF01FC8", VA = "0xF01FC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0xF01D64", Offset = "0xF01D64", VA = "0xF01D64")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public bool FlipMovementHands
		{
			[Token(Token = "0x60013AF")]
			[Address(RVA = "0xF01FD0", Offset = "0xF01FD0", VA = "0xF01FD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0xF01D94", Offset = "0xF01D94", VA = "0xF01D94")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public int RotationMode
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0xF01FD8", Offset = "0xF01FD8", VA = "0xF01FD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013B2")]
			[Address(RVA = "0xF01FE0", Offset = "0xF01FE0", VA = "0xF01FE0")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public int RotationSpeed
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0xF020E0", Offset = "0xF020E0", VA = "0xF020E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0xF020E8", Offset = "0xF020E8", VA = "0xF020E8")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float MovementSpeed
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0xF020FC", Offset = "0xF020FC", VA = "0xF020FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0xF02104", Offset = "0xF02104", VA = "0xF02104")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public bool UseHandBasedMovement
		{
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0xF02114", Offset = "0xF02114", VA = "0xF02114")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0xF0211C", Offset = "0xF0211C", VA = "0xF0211C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public int OffScreenIndicatorPreference
		{
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xF021B0", Offset = "0xF021B0", VA = "0xF021B0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xF021B8", Offset = "0xF021B8", VA = "0xF021B8")]
			set
			{
			}
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xF021CC", Offset = "0xF021CC", VA = "0xF021CC")]
		public SettingsPlayerDataObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038A")]
	public class TutorialPlayerDataObject : PlayerDataObject
	{
		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C58C", Offset = "0xB6C58C")]
		private int m_stepReached;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C59C", Offset = "0xB6C59C")]
		private bool m_hasStarted;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C5AC", Offset = "0xB6C5AC")]
		private bool m_hasCompleted;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C5BC", Offset = "0xB6C5BC")]
		private int m_branchID;

		[Token(Token = "0x170002C1")]
		public int StepReached
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x1157F50", Offset = "0x1157F50", VA = "0x1157F50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x11534D0", Offset = "0x11534D0", VA = "0x11534D0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public bool HasStarted
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x1157F58", Offset = "0x1157F58", VA = "0x1157F58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x11533B0", Offset = "0x11533B0", VA = "0x11533B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public bool HasCompleted
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x1157F60", Offset = "0x1157F60", VA = "0x1157F60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x11537CC", Offset = "0x11537CC", VA = "0x11537CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public int BranchID
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x1157F68", Offset = "0x1157F68", VA = "0x1157F68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x11534E4", Offset = "0x11534E4", VA = "0x11534E4")]
			set
			{
			}
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1157F70", Offset = "0x1157F70", VA = "0x1157F70")]
		public void Reset()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x1157FC0", Offset = "0x1157FC0", VA = "0x1157FC0")]
		public TutorialPlayerDataObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038B")]
	public class UnlocksPlayerDataObject : PlayerDataObject
	{
		[Token(Token = "0x200038C")]
		[Flags]
		public enum SeenType
		{
			[Token(Token = "0x400166B")]
			Seen = 1,
			[Token(Token = "0x400166C")]
			Grabbed = 2,
			[Token(Token = "0x400166D")]
			SeenInUI = 4
		}

		[Token(Token = "0x200038D")]
		public class UnlockData
		{
			[Token(Token = "0x400166E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SeenType m_seenType;

			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int m_unlockTime;

			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x1B8FC80", Offset = "0x1B8FC80", VA = "0x1B8FC80")]
			public UnlockData()
			{
			}
		}

		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "DataUpgradableAttribute", RVA = "0xB5CB08", Offset = "0xB5CB08")]
		public class UnlocksPlayerDataObjectV1 : PlayerDataObject
		{
			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C5DC", Offset = "0xB6C5DC")]
			private HashSet<string> m_unlockedRefIds;

			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x1B8FC90", Offset = "0x1B8FC90", VA = "0x1B8FC90")]
			public bool DataUpgrade(UnlocksPlayerDataObject newData)
			{
				return default(bool);
			}

			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x1B8FE28", Offset = "0x1B8FE28", VA = "0x1B8FE28")]
			public UnlocksPlayerDataObjectV1()
			{
			}
		}

		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "DataUpgradableAttribute", RVA = "0xB5CB1C", Offset = "0xB5CB1C")]
		public class UnlocksPlayerDataObjectV2 : PlayerDataObject
		{
			[Token(Token = "0x2000390")]
			private class UnlockDataOld
			{
				[Token(Token = "0x4001672")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool m_unlockSeen;

				[Token(Token = "0x4001673")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int m_unlockTime;

				[Token(Token = "0x60013D1")]
				[Address(RVA = "0x1B96960", Offset = "0x1B96960", VA = "0x1B96960")]
				public UnlockDataOld()
				{
				}
			}

			[Token(Token = "0x4001671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C5EC", Offset = "0xB6C5EC")]
			private Dictionary<string, UnlockDataOld> m_unlockData;

			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x1B8FED8", Offset = "0x1B8FED8", VA = "0x1B8FED8")]
			public bool DataUpgrade(UnlocksPlayerDataObject newUnlockData)
			{
				return default(bool);
			}

			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x1B901CC", Offset = "0x1B901CC", VA = "0x1B901CC")]
			public UnlocksPlayerDataObjectV2()
			{
			}
		}

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C5CC", Offset = "0xB6C5CC")]
		private Dictionary<string, UnlockData> m_unlockData;

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x122872C", Offset = "0x122872C", VA = "0x122872C")]
		public UnlockData GetUnlockData(string referenceId)
		{
			return null;
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1228338", Offset = "0x1228338", VA = "0x1228338")]
		public bool UnlockItem(string referenceId)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x1228838", Offset = "0x1228838", VA = "0x1228838")]
		public bool IsUnlocked(string referenceId)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x122858C", Offset = "0x122858C", VA = "0x122858C")]
		public bool SetUnlockSeen(string referenceId, SeenType seenType)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x12284A8", Offset = "0x12284A8", VA = "0x12284A8")]
		public bool HasUnlockBeenSeen(string referenceId, SeenType seenType)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1229DFC", Offset = "0x1229DFC", VA = "0x1229DFC")]
		public UnlocksPlayerDataObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000391")]
	public class VersionFirstTimeSetUpPlayerDataObject : PlayerDataObject
	{
		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C5FC", Offset = "0xB6C5FC")]
		private readonly List<string> m_versionsFirstTimeSetUp;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C60C", Offset = "0xB6C60C")]
		private bool <IsCache>k__BackingField;

		[Token(Token = "0x170002C5")]
		public override bool IsCache
		{
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0x123517C", Offset = "0x123517C", VA = "0x123517C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FDA0", Offset = "0xB7FDA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0x1235184", Offset = "0x1235184", VA = "0x1235184", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FDB0", Offset = "0xB7FDB0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public bool DidCurrentVersionFirstTimeSetUp
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0x1235190", Offset = "0x1235190", VA = "0x1235190")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x12351F4", Offset = "0x12351F4", VA = "0x12351F4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public bool IsFirstTimeSetUp
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x12352E8", Offset = "0x12352E8", VA = "0x12352E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x123533C", Offset = "0x123533C", VA = "0x123533C")]
		public VersionFirstTimeSetUpPlayerDataObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000392")]
	public class WorldInteractionPlayerDataObject : PlayerDataObject
	{
		[Serializable]
		[Token(Token = "0x2000393")]
		public class InteractionData
		{
			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_attempts;

			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int m_highScore;

			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float m_bestTime;

			[Token(Token = "0x400167A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<int> m_interactedElements;

			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x1B91624", Offset = "0x1B91624", VA = "0x1B91624")]
			public InteractionData()
			{
			}
		}

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB6C61C", Offset = "0xB6C61C")]
		private Dictionary<string, InteractionData> m_interactionData;

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xF87D14", Offset = "0xF87D14", VA = "0xF87D14")]
		public WorldInteractionPlayerDataObject()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xF87EAC", Offset = "0xF87EAC", VA = "0xF87EAC", Slot = "1")]
		~WorldInteractionPlayerDataObject()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xF88014", Offset = "0xF88014", VA = "0xF88014")]
		private void OnInteractionComplete(GameEvent evt)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xF88198", Offset = "0xF88198", VA = "0xF88198")]
		private void OnInteractionProgressed(GameEvent evt)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xF8833C", Offset = "0xF8833C", VA = "0xF8833C")]
		public InteractionData GetInteractionData(string interactionID)
		{
			return null;
		}
	}
}
namespace Playables
{
	[Token(Token = "0x2000394")]
	public class DoTweenPathClip : PlayableAsset
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_targetWaypoint;

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x10F1E80", Offset = "0x10F1E80", VA = "0x10F1E80", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x10F1F78", Offset = "0x10F1F78", VA = "0x10F1F78")]
		public DoTweenPathClip()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class DoTweenPathPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_targetWaypoint;

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x10F21FC", Offset = "0x10F21FC", VA = "0x10F21FC", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x10F2320", Offset = "0x10F2320", VA = "0x10F2320")]
		public DoTweenPathPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB5CB30", Offset = "0xB5CB30")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xB5CB30", Offset = "0xB5CB30")]
	public class DoTweenPathTrack : PlayableTrack
	{
		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x10F2328", Offset = "0x10F2328", VA = "0x10F2328")]
		public DoTweenPathTrack()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class FruitCannonClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FruitCannon.ShotData[] m_shots;

		[Token(Token = "0x170002C8")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x14BD6A4", Offset = "0x14BD6A4", VA = "0x14BD6A4", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x14BD6AC", Offset = "0x14BD6AC", VA = "0x14BD6AC", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x14BD7A8", Offset = "0x14BD7A8", VA = "0x14BD7A8")]
		public FruitCannonClip()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class FruitCannonPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_hasAppliedClip;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C62C", Offset = "0xB6C62C")]
		private FruitCannonClip <Clip>k__BackingField;

		[Token(Token = "0x170002C9")]
		public FruitCannonClip Clip
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x14BD7B0", Offset = "0x14BD7B0", VA = "0x14BD7B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FDC0", Offset = "0xB7FDC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x14BD7B8", Offset = "0x14BD7B8", VA = "0x14BD7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FDD0", Offset = "0xB7FDD0")]
			set
			{
			}
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x14BD7C0", Offset = "0x14BD7C0", VA = "0x14BD7C0", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x14BD8F4", Offset = "0x14BD8F4", VA = "0x14BD8F4")]
		public FruitCannonPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xB5CBC4", Offset = "0xB5CBC4")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xB5CBC4", Offset = "0xB5CBC4")]
	public class FruitCannonTrack : TrackAsset
	{
		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x14BD8FC", Offset = "0x14BD8FC", VA = "0x14BD8FC", Slot = "29")]
		public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x14BD904", Offset = "0x14BD904", VA = "0x14BD904")]
		public FruitCannonTrack()
		{
		}
	}
}
namespace Platform
{
	[Token(Token = "0x200039A")]
	public class ApplicationStateChangeListener : MonoBehaviour
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6C63C", Offset = "0xB6C63C")]
		private bool m_onlyTriggerEventsWhileActive;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6C688", Offset = "0xB6C688")]
		private UnityEvent<bool> m_onApplicationStateChange;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onApplicationResumed;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onApplicationPaused;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xFA5E98", Offset = "0xFA5E98", VA = "0xFA5E98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xFA6044", Offset = "0xFA6044", VA = "0xFA6044")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xFA61F0", Offset = "0xFA61F0", VA = "0xFA61F0")]
		private void OnApplicationStateChanged(bool isPaused)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xFA62A4", Offset = "0xFA62A4", VA = "0xFA62A4")]
		public ApplicationStateChangeListener()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class ApplicationStateManager : ApplicationStateManagerBase
	{
		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CC58", Offset = "0xB5CC58")]
		private sealed class <AwakeHighPerformanceMode>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ApplicationStateManager <>4__this;

			[Token(Token = "0x170002CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013FC")]
				[Address(RVA = "0xF8BDB4", Offset = "0xF8BDB4", VA = "0xF8BDB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013FE")]
				[Address(RVA = "0xF8BDFC", Offset = "0xF8BDFC", VA = "0xF8BDFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xF8BBC4", Offset = "0xF8BBC4", VA = "0xF8BBC4")]
			[DebuggerHidden]
			public <AwakeHighPerformanceMode>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xF8BBF0", Offset = "0xF8BBF0", VA = "0xF8BBF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xF8BBF4", Offset = "0xF8BBF4", VA = "0xF8BBF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xF8BDBC", Offset = "0xF8BDBC", VA = "0xF8BDBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xFA62AC", Offset = "0xFA62AC", VA = "0xFA62AC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xFA656C", Offset = "0xFA656C", VA = "0xFA656C")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xFA66D0", Offset = "0xFA66D0", VA = "0xFA66D0")]
		private void AcquiredInputFocus()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xFA7308", Offset = "0xFA7308", VA = "0xFA7308")]
		private void LostInputFocus()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xFA73B8", Offset = "0xFA73B8", VA = "0xFA73B8")]
		private void OnHmdMounted()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xFA74FC", Offset = "0xFA74FC", VA = "0xFA74FC")]
		private void OnHmdUnmounted()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xFA7484", Offset = "0xFA7484", VA = "0xFA7484")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB7FDE0", Offset = "0xB7FDE0")]
		private IEnumerator AwakeHighPerformanceMode()
		{
			return null;
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xFA75AC", Offset = "0xFA75AC", VA = "0xFA75AC")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xFA75B4", Offset = "0xFA75B4", VA = "0xFA75B4")]
		public ApplicationStateManager()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public abstract class ApplicationStateManagerBase : MonoBehaviour
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C704", Offset = "0xB6C704")]
		private float <MaxPauseTimeBeforeNewSession>k__BackingField;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeOnPause;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_timeScaleOnPause;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C714", Offset = "0xB6C714")]
		private static bool <IsQuitting>k__BackingField;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C724", Offset = "0xB6C724")]
		private static bool <IsPaused>k__BackingField;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C734", Offset = "0xB6C734")]
		private static bool <HasInputFocus>k__BackingField;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C744", Offset = "0xB6C744")]
		private static bool <HasVrFocus>k__BackingField;

		[Token(Token = "0x170002CC")]
		public float MaxPauseTimeBeforeNewSession
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xFA7640", Offset = "0xFA7640", VA = "0xFA7640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FEB0", Offset = "0xB7FEB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001402")]
			[Address(RVA = "0xFA7648", Offset = "0xFA7648", VA = "0xFA7648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FEC0", Offset = "0xB7FEC0")]
			set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public static bool IsQuitting
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0xFA76BC", Offset = "0xFA76BC", VA = "0xFA76BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FEE0", Offset = "0xB7FEE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001403")]
			[Address(RVA = "0xFA7650", Offset = "0xFA7650", VA = "0xFA7650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FED0", Offset = "0xB7FED0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public static bool IsPaused
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xFA7720", Offset = "0xFA7720", VA = "0xFA7720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FEF0", Offset = "0xB7FEF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xFA7784", Offset = "0xFA7784", VA = "0xFA7784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF00", Offset = "0xB7FF00")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public static bool HasInputFocus
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xFA77F0", Offset = "0xFA77F0", VA = "0xFA77F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF10", Offset = "0xB7FF10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001408")]
			[Address(RVA = "0xFA7854", Offset = "0xFA7854", VA = "0xFA7854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF20", Offset = "0xB7FF20")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public static bool HasVrFocus
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0xFA78C0", Offset = "0xFA78C0", VA = "0xFA78C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF30", Offset = "0xB7FF30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xFA7924", Offset = "0xFA7924", VA = "0xFA7924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF40", Offset = "0xB7FF40")]
			protected set
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public static event Action<bool> OnApplicationStateChanged
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xFA5F50", Offset = "0xFA5F50", VA = "0xFA5F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FE90", Offset = "0xB7FE90")]
			add
			{
			}
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xFA60FC", Offset = "0xFA60FC", VA = "0xFA60FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FEA0", Offset = "0xB7FEA0")]
			remove
			{
			}
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xFA648C", Offset = "0xFA648C", VA = "0xFA648C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xFA7990", Offset = "0xFA7990", VA = "0xFA7990")]
		protected void OnInitialized()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xFA7A6C", Offset = "0xFA7A6C", VA = "0xFA7A6C", Slot = "5")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xFA6784", Offset = "0xFA6784", VA = "0xFA6784")]
		protected void SetPaused(bool isPaused)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xFA7628", Offset = "0xFA7628", VA = "0xFA7628")]
		protected ApplicationStateManagerBase()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class ControllerInput : ControllerInputBase
	{
		[Token(Token = "0x200039F")]
		public class OculusFingerCurls : FingerCurls
		{
			[Token(Token = "0x4001692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C754", Offset = "0xB6C754")]
			private OVRInput.Controller <Controller>k__BackingField;

			[Token(Token = "0x4001693")]
			private const float LerpSpeed = 8f;

			[Token(Token = "0x170002D2")]
			public OVRInput.Controller Controller
			{
				[Token(Token = "0x6001424")]
				[Address(RVA = "0xF8EC94", Offset = "0xF8EC94", VA = "0xF8EC94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF50", Offset = "0xB7FF50")]
				get
				{
					return default(OVRInput.Controller);
				}
				[Token(Token = "0x6001425")]
				[Address(RVA = "0xF8EC9C", Offset = "0xF8EC9C", VA = "0xF8EC9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF60", Offset = "0xB7FF60")]
				set
				{
				}
			}

			[Token(Token = "0x6001426")]
			[Address(RVA = "0xF8ECA4", Offset = "0xF8ECA4", VA = "0xF8ECA4")]
			internal void Update()
			{
			}

			[Token(Token = "0x6001427")]
			[Address(RVA = "0xF8EDF0", Offset = "0xF8EDF0", VA = "0xF8EDF0")]
			public OculusFingerCurls()
			{
			}
		}

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly OculusFingerCurls m_fingerCurls;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_vibrateTimer;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VibrationSettingsCurve m_currentVibration;

		[Token(Token = "0x170002D1")]
		public OVRInput.Controller Controller
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x11A8DC0", Offset = "0x11A8DC0", VA = "0x11A8DC0")]
			get
			{
				return default(OVRInput.Controller);
			}
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x11A8DD4", Offset = "0x11A8DD4", VA = "0x11A8DD4")]
		private OVRInput.Button ConvertButton(Button button)
		{
			return default(OVRInput.Button);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x11A8E2C", Offset = "0x11A8E2C", VA = "0x11A8E2C", Slot = "8")]
		public override bool GetButtonUp(Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x11A8F00", Offset = "0x11A8F00", VA = "0x11A8F00", Slot = "6")]
		public override bool GetButtonDown(Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x11A8FD4", Offset = "0x11A8FD4", VA = "0x11A8FD4", Slot = "7")]
		public override bool GetButton(Button button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x11A90A8", Offset = "0x11A90A8", VA = "0x11A90A8", Slot = "9")]
		public override Vector2 GetJoystick()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x11A9120", Offset = "0x11A9120", VA = "0x11A9120", Slot = "10")]
		public override Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x11A9194", Offset = "0x11A9194", VA = "0x11A9194", Slot = "11")]
		public override Quaternion GetRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x11A9208", Offset = "0x11A9208", VA = "0x11A9208", Slot = "17")]
		public override bool AnyButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x11A926C", Offset = "0x11A926C", VA = "0x11A926C", Slot = "12")]
		public override bool GetFingerCurls(out FingerCurls fingerCurls)
		{
			return default(bool);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x11A92A8", Offset = "0x11A92A8", VA = "0x11A92A8", Slot = "4")]
		public override void Vibrate(VibrationSettingsCurve vibrateSettings)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x11A93B0", Offset = "0x11A93B0", VA = "0x11A93B0", Slot = "5")]
		public override void Vibrate(VibrationSettingsSimple vibrateSettings)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x11A9428", Offset = "0x11A9428", VA = "0x11A9428", Slot = "14")]
		protected override void StopVibrating()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x11A9444", Offset = "0x11A9444", VA = "0x11A9444", Slot = "15")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x11A9530", Offset = "0x11A9530", VA = "0x11A9530", Slot = "13")]
		public override bool IsControllerActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x11A95A4", Offset = "0x11A95A4", VA = "0x11A95A4", Slot = "16")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x11A9604", Offset = "0x11A9604", VA = "0x11A9604")]
		private void UpdateVibration()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x11A9334", Offset = "0x11A9334", VA = "0x11A9334")]
		private void SetControllerVibration(float frequency, float amplitude, OVRInput.Controller controller)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x11A973C", Offset = "0x11A973C", VA = "0x11A973C")]
		public ControllerInput()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public abstract class ControllerInputBase : MonoBehaviour
	{
		[Token(Token = "0x20003A1")]
		public class FingerCurls
		{
			[Token(Token = "0x40016A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_thumbCurl;

			[Token(Token = "0x40016A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_indexCurl;

			[Token(Token = "0x40016A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float m_middleCurl;

			[Token(Token = "0x40016A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float m_ringCurl;

			[Token(Token = "0x40016A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float m_pinkyCurl;

			[Token(Token = "0x6001443")]
			[Address(RVA = "0xF8EDF8", Offset = "0xF8EDF8", VA = "0xF8EDF8")]
			public FingerCurls()
			{
			}
		}

		[Token(Token = "0x20003A2")]
		public enum HandSide
		{
			[Token(Token = "0x40016A9")]
			Left,
			[Token(Token = "0x40016AA")]
			Right,
			[Token(Token = "0x40016AB")]
			Any
		}

		[Token(Token = "0x20003A3")]
		public enum Button
		{
			[Token(Token = "0x40016AD")]
			InteractUI,
			[Token(Token = "0x40016AE")]
			Interact,
			[Token(Token = "0x40016AF")]
			Pause,
			[Token(Token = "0x40016B0")]
			Settings,
			[Token(Token = "0x40016B1")]
			Hold,
			[Token(Token = "0x40016B2")]
			Thumbstick
		}

		[Serializable]
		[Token(Token = "0x20003A4")]
		public class ButtonPress
		{
			[Token(Token = "0x40016B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float m_currentTime;

			[Token(Token = "0x40016B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool m_active;

			[NonSerialized]
			[Token(Token = "0x40016B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ControllerInputBase m_inputBase;

			[Token(Token = "0x40016B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_inputEnabled;

			[Token(Token = "0x40016B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Button m_button;

			[Token(Token = "0x40016B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float m_longPressTime;

			[Token(Token = "0x40016B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6C83C", Offset = "0xB6C83C")]
			public bool m_longPressVibrationEnabled;

			[Token(Token = "0x170002D6")]
			public bool Active
			{
				[Token(Token = "0x6001448")]
				[Address(RVA = "0xF8F080", Offset = "0xF8F080", VA = "0xF8F080")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x14000050")]
			public event Action OnLongPress
			{
				[Token(Token = "0x6001444")]
				[Address(RVA = "0xF8EE00", Offset = "0xF8EE00", VA = "0xF8EE00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FFC0", Offset = "0xB7FFC0")]
				add
				{
				}
				[Token(Token = "0x6001445")]
				[Address(RVA = "0xF8EEA0", Offset = "0xF8EEA0", VA = "0xF8EEA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FFD0", Offset = "0xB7FFD0")]
				remove
				{
				}
			}

			[Token(Token = "0x14000051")]
			public event Action OnShortPress
			{
				[Token(Token = "0x6001446")]
				[Address(RVA = "0xF8EF40", Offset = "0xF8EF40", VA = "0xF8EF40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FFE0", Offset = "0xB7FFE0")]
				add
				{
				}
				[Token(Token = "0x6001447")]
				[Address(RVA = "0xF8EFE0", Offset = "0xF8EFE0", VA = "0xF8EFE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FFF0", Offset = "0xB7FFF0")]
				remove
				{
				}
			}

			[Token(Token = "0x6001449")]
			[Address(RVA = "0xF8F088", Offset = "0xF8F088", VA = "0xF8F088")]
			public ButtonPress(Button button, ControllerInputBase input)
			{
			}

			[Token(Token = "0x600144A")]
			[Address(RVA = "0xF8F0E4", Offset = "0xF8F0E4", VA = "0xF8F0E4")]
			public ButtonPress(Button button)
			{
			}

			[Token(Token = "0x600144B")]
			[Address(RVA = "0xF8F124", Offset = "0xF8F124", VA = "0xF8F124")]
			public void Update()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A5")]
		public class VibrationSettingsCurve
		{
			[Token(Token = "0x40016BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationCurve m_frequencyCurve;

			[Token(Token = "0x40016BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationCurve m_amplitudeCurve;

			[Token(Token = "0x40016BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VibrationSettingsSimple m_simpleSettings;

			[Token(Token = "0x40016BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float m_cachedDuration;

			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float m_cachedMaxFreq;

			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float m_cachedMaxAmp;

			[Token(Token = "0x600144C")]
			[Address(RVA = "0xF8F4FC", Offset = "0xF8F4FC", VA = "0xF8F4FC")]
			public float GetDuration()
			{
				return default(float);
			}

			[Token(Token = "0x600144D")]
			[Address(RVA = "0xF8F5EC", Offset = "0xF8F5EC", VA = "0xF8F5EC")]
			public float GetMaxAmplitude()
			{
				return default(float);
			}

			[Token(Token = "0x600144E")]
			[Address(RVA = "0xF8F6E4", Offset = "0xF8F6E4", VA = "0xF8F6E4")]
			public float GetMaxFrequency()
			{
				return default(float);
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0xF8F7DC", Offset = "0xF8F7DC", VA = "0xF8F7DC")]
			public static VibrationSettingsCurve Burst(float duration = 0.03f, float strength = 1f, float frequency = 1f)
			{
				return null;
			}

			[Token(Token = "0x6001450")]
			[Address(RVA = "0xF8F280", Offset = "0xF8F280", VA = "0xF8F280")]
			public static VibrationSettingsCurve Ascending(float duration = 1f, float strength = 1f, float frequency = 1f)
			{
				return null;
			}

			[Token(Token = "0x6001451")]
			[Address(RVA = "0xF8FA14", Offset = "0xF8FA14", VA = "0xF8FA14")]
			public static VibrationSettingsCurve Descending(float duration = 1f, float strength = 1f, float frequency = 1f)
			{
				return null;
			}

			[Token(Token = "0x6001452")]
			[Address(RVA = "0xF8FA0C", Offset = "0xF8FA0C", VA = "0xF8FA0C")]
			public VibrationSettingsCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A6")]
		public struct VibrationSettingsSimple
		{
			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6C894", Offset = "0xB6C894")]
			public float m_frequency;

			[Token(Token = "0x40016C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6C8AC", Offset = "0xB6C8AC")]
			public float m_amplitude;

			[Token(Token = "0x40016C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6C8C4", Offset = "0xB6C8C4")]
			public float m_duration;
		}

		[Token(Token = "0x20003A7")]
		protected struct ControllerSample
		{
			[Token(Token = "0x40016C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_position;

			[Token(Token = "0x40016C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion m_rotation;

			[Token(Token = "0x40016C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float m_frameTime;
		}

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandSide m_handSide;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6C764", Offset = "0xB6C764")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6C764", Offset = "0xB6C764")]
		public float m_inputSmoothingCurrentFrameBias;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6C7B8", Offset = "0xB6C7B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6C7B8", Offset = "0xB6C7B8")]
		public int m_inputSmoothingSampleCount;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_enableTracking;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Transform m_transform;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly ControllerSample[] m_controllerSamples;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_currentSample;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_sampleCount;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_calculatedControllerLocalPosition;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion m_calculatedControllerLocalRotation;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C80C", Offset = "0xB6C80C")]
		private readonly ButtonPress <ButtonSettings>k__BackingField;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C81C", Offset = "0xB6C81C")]
		private bool <AutoUpdatePosition>k__BackingField;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C82C", Offset = "0xB6C82C")]
		private bool <AutoUpdateRotation>k__BackingField;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		protected bool m_hasRigidbody;

		[Token(Token = "0x170002D3")]
		public ButtonPress ButtonSettings
		{
			[Token(Token = "0x6001428")]
			[Address(RVA = "0x11A9890", Offset = "0x11A9890", VA = "0x11A9890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF70", Offset = "0xB7FF70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public bool AutoUpdatePosition
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0x11A9898", Offset = "0x11A9898", VA = "0x11A9898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF80", Offset = "0xB7FF80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x11A98A0", Offset = "0x11A98A0", VA = "0x11A98A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FF90", Offset = "0xB7FF90")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public bool AutoUpdateRotation
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0x11A98AC", Offset = "0x11A98AC", VA = "0x11A98AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FFA0", Offset = "0xB7FFA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x11A98B4", Offset = "0x11A98B4", VA = "0x11A98B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7FFB0", Offset = "0xB7FFB0")]
			set
			{
			}
		}

		[Token(Token = "0x600142D")]
		public abstract void Vibrate(VibrationSettingsCurve vibrateSettings);

		[Token(Token = "0x600142E")]
		public abstract void Vibrate(VibrationSettingsSimple vibrateSettings);

		[Token(Token = "0x600142F")]
		public abstract bool GetButtonDown(Button button);

		[Token(Token = "0x6001430")]
		public abstract bool GetButton(Button button);

		[Token(Token = "0x6001431")]
		public abstract bool GetButtonUp(Button button);

		[Token(Token = "0x6001432")]
		public abstract Vector2 GetJoystick();

		[Token(Token = "0x6001433")]
		public abstract Vector3 GetPosition();

		[Token(Token = "0x6001434")]
		public abstract Quaternion GetRotation();

		[Token(Token = "0x6001435")]
		public abstract bool GetFingerCurls(out FingerCurls fingerCurls);

		[Token(Token = "0x6001436")]
		public abstract bool IsControllerActive();

		[Token(Token = "0x6001437")]
		protected abstract void StopVibrating();

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x11A9484", Offset = "0x11A9484", VA = "0x11A9484", Slot = "15")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x11A98C0", Offset = "0x11A98C0", VA = "0x11A98C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x11A997C", Offset = "0x11A997C", VA = "0x11A997C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x11A9A38", Offset = "0x11A9A38", VA = "0x11A9A38")]
		private void OnApplicationStateChanged(bool value)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x11A95E8", Offset = "0x11A95E8", VA = "0x11A95E8", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x11A9A50", Offset = "0x11A9A50", VA = "0x11A9A50")]
		protected void FixedUpdate()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x11A9A6C", Offset = "0x11A9A6C", VA = "0x11A9A6C")]
		public void GetControllerLocalPosRot(out Vector3 localPosition, out Quaternion localRotation)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x11A9A88", Offset = "0x11A9A88", VA = "0x11A9A88")]
		public void GetControllerWorldPosRot(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x11A9B6C", Offset = "0x11A9B6C", VA = "0x11A9B6C", Slot = "17")]
		public virtual bool AnyButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x11A9BEC", Offset = "0x11A9BEC", VA = "0x11A9BEC", Slot = "18")]
		protected virtual void TrackControllers()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x11A97A8", Offset = "0x11A97A8", VA = "0x11A97A8")]
		protected ControllerInputBase()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public abstract class LeaderboardBase
	{
		[Token(Token = "0x20003A9")]
		public enum LeaderboardType
		{
			[Token(Token = "0x40016CE")]
			Global,
			[Token(Token = "0x40016CF")]
			AroundActiveUser,
			[Token(Token = "0x40016D0")]
			Friends
		}

		[Token(Token = "0x20003AA")]
		public class LeaderboardEntry
		{
			[Token(Token = "0x40016D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_userName;

			[Token(Token = "0x40016D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_userId;

			[Token(Token = "0x40016D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int m_rank;

			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int m_score;

			[Token(Token = "0x6001461")]
			[Address(RVA = "0xFD8488", Offset = "0xFD8488", VA = "0xFD8488")]
			public LeaderboardEntry()
			{
			}
		}

		[Token(Token = "0x20003AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CC68", Offset = "0xB5CC68")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<int> callback;

			[Token(Token = "0x6001462")]
			[Address(RVA = "0xFD822C", Offset = "0xFD822C", VA = "0xFD822C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001463")]
			[Address(RVA = "0xFD8234", Offset = "0xFD8234", VA = "0xFD8234")]
			internal void <GetCurrentScore>b__0(bool isError, LeaderboardBase leaderboard)
			{
			}
		}

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Action<bool, LeaderboardBase> m_callback;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C8DC", Offset = "0xB6C8DC")]
		private readonly List<LeaderboardEntry> <LeaderboardEntries>k__BackingField;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C8EC", Offset = "0xB6C8EC")]
		private RangedInt <Range>k__BackingField;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C8FC", Offset = "0xB6C8FC")]
		private LeaderboardType <Type>k__BackingField;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C90C", Offset = "0xB6C90C")]
		private string <LevelId>k__BackingField;

		[Token(Token = "0x170002D7")]
		public List<LeaderboardEntry> LeaderboardEntries
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x10BCBB8", Offset = "0x10BCBB8", VA = "0x10BCBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80000", Offset = "0xB80000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		public RangedInt Range
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x10BCBC0", Offset = "0x10BCBC0", VA = "0x10BCBC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80010", Offset = "0xB80010")]
			get
			{
				return default(RangedInt);
			}
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x10BCBC8", Offset = "0x10BCBC8", VA = "0x10BCBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80020", Offset = "0xB80020")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public LeaderboardType Type
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x10BCBD0", Offset = "0x10BCBD0", VA = "0x10BCBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80030", Offset = "0xB80030")]
			get
			{
				return default(LeaderboardType);
			}
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x10BCBD8", Offset = "0x10BCBD8", VA = "0x10BCBD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80040", Offset = "0xB80040")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public string LevelId
		{
			[Token(Token = "0x6001458")]
			[Address(RVA = "0x10BCBE0", Offset = "0x10BCBE0", VA = "0x10BCBE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80050", Offset = "0xB80050")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001459")]
			[Address(RVA = "0x10BCBE8", Offset = "0x10BCBE8", VA = "0x10BCBE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80060", Offset = "0xB80060")]
			protected set
			{
			}
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x10BCBF0", Offset = "0x10BCBF0", VA = "0x10BCBF0")]
		public static void RequestEntries(string levelId, LeaderboardType leaderboardType, RangedInt range, Action<bool, LeaderboardBase> callback)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x10BCFF8", Offset = "0x10BCFF8", VA = "0x10BCFF8")]
		public static void SubmitScore(string levelId, int score, [Optional] Action<bool, LeaderboardBase> callback)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x10BCCA0", Offset = "0x10BCCA0", VA = "0x10BCCA0")]
		private static bool IsProviderReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x10BD094", Offset = "0x10BD094", VA = "0x10BD094")]
		public static void GetCurrentScore(string levelId, Action<int> callback)
		{
		}

		[Token(Token = "0x600145E")]
		protected abstract void RequestEntriesInternal(string levelId, LeaderboardType leaderboardType, RangedInt rangedInt, Action<bool, LeaderboardBase> callback);

		[Token(Token = "0x600145F")]
		protected abstract void SubmitScoreInternal(string levelId, int score, Action<bool, LeaderboardBase> callback);

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x10BCB34", Offset = "0x10BCB34", VA = "0x10BCB34")]
		protected LeaderboardBase()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class Leaderboard : LeaderboardBase
	{
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_score;

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x10BBC6C", Offset = "0x10BBC6C", VA = "0x10BBC6C", Slot = "4")]
		protected override void RequestEntriesInternal(string levelId, LeaderboardType leaderboardType, RangedInt rangedInt, Action<bool, LeaderboardBase> callback)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x10BBE3C", Offset = "0x10BBE3C", VA = "0x10BBE3C", Slot = "5")]
		protected override void SubmitScoreInternal(string levelId, int score, Action<bool, LeaderboardBase> callback)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x10BBE88", Offset = "0x10BBE88", VA = "0x10BBE88")]
		private void SubmitScoreToLeaderboard()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x10BBCC0", Offset = "0x10BBCC0", VA = "0x10BBCC0")]
		private void GetLeaderboard()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x10BBF60", Offset = "0x10BBF60", VA = "0x10BBF60")]
		private void LeaderboardDownloaded(Message<LeaderboardEntryList> message)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x10BC648", Offset = "0x10BC648", VA = "0x10BC648")]
		private void ScoreSubmitted(Message<bool> message)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x10BCB30", Offset = "0x10BCB30", VA = "0x10BCB30")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class Provider : ProviderBase
	{
		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CC78", Offset = "0xB5CC78")]
		private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Provider <>4__this;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600148E")]
				[Address(RVA = "0xFC6B3C", Offset = "0xFC6B3C", VA = "0xFC6B3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001490")]
				[Address(RVA = "0xFC6B84", Offset = "0xFC6B84", VA = "0xFC6B84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600148B")]
			[Address(RVA = "0xFC6858", Offset = "0xFC6858", VA = "0xFC6858")]
			[DebuggerHidden]
			public <Start>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600148C")]
			[Address(RVA = "0xFC6884", Offset = "0xFC6884", VA = "0xFC6884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600148D")]
			[Address(RVA = "0xFC6888", Offset = "0xFC6888", VA = "0xFC6888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600148F")]
			[Address(RVA = "0xFC6B44", Offset = "0xFC6B44", VA = "0xFC6B44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CC88", Offset = "0xB5CC88")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40016E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Provider <>4__this;

			[Token(Token = "0x40016E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AvatarImageSize avatarImageSize;

			[Token(Token = "0x40016E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Texture2D> callback;

			[Token(Token = "0x6001491")]
			[Address(RVA = "0xFC43D0", Offset = "0xFC43D0", VA = "0xFC43D0")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001492")]
			[Address(RVA = "0xFC43D8", Offset = "0xFC43D8", VA = "0xFC43D8")]
			internal void <GetUserAvatarTexture>b__0(Message<User> msg)
			{
			}
		}

		[Token(Token = "0x20003B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CC98", Offset = "0xB5CC98")]
		private sealed class <FetchPlayerImage>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Provider <>4__this;

			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Texture2D> callback;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x170002DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001496")]
				[Address(RVA = "0xFC5BDC", Offset = "0xFC5BDC", VA = "0xFC5BDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001498")]
				[Address(RVA = "0xFC5C24", Offset = "0xFC5C24", VA = "0xFC5C24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001493")]
			[Address(RVA = "0xFC57E4", Offset = "0xFC57E4", VA = "0xFC57E4")]
			[DebuggerHidden]
			public <FetchPlayerImage>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001494")]
			[Address(RVA = "0xFC5810", Offset = "0xFC5810", VA = "0xFC5810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001495")]
			[Address(RVA = "0xFC5814", Offset = "0xFC5814", VA = "0xFC5814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001497")]
			[Address(RVA = "0xFC5BE4", Offset = "0xFC5BE4", VA = "0xFC5BE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CCA8", Offset = "0xB5CCA8")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40016EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string achievementID;

			[Token(Token = "0x40016F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Provider <>4__this;

			[Token(Token = "0x6001499")]
			[Address(RVA = "0xFC44A0", Offset = "0xFC44A0", VA = "0xFC44A0")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600149A")]
			[Address(RVA = "0xFC44A8", Offset = "0xFC44A8", VA = "0xFC44A8")]
			internal void <IsAchievementUnlocked>b__0(Message<AchievementProgressList> msg)
			{
			}
		}

		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CCB8", Offset = "0xB5CCB8")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x40016F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string achievementID;

			[Token(Token = "0x40016F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Provider <>4__this;

			[Token(Token = "0x600149B")]
			[Address(RVA = "0xFC4AF0", Offset = "0xFC4AF0", VA = "0xFC4AF0")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600149C")]
			[Address(RVA = "0xFC4AF8", Offset = "0xFC4AF8", VA = "0xFC4AF8")]
			internal void <UnlockAchievement>b__0(Message<AchievementUpdate> msg)
			{
			}
		}

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CCC8", Offset = "0xB5CCC8")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x40016F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Provider <>4__this;

			[Token(Token = "0x40016F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string statID;

			[Token(Token = "0x40016F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int toValue;

			[Token(Token = "0x600149D")]
			[Address(RVA = "0xFC4EDC", Offset = "0xFC4EDC", VA = "0xFC4EDC")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x600149E")]
			[Address(RVA = "0xFC4EE4", Offset = "0xFC4EE4", VA = "0xFC4EE4")]
			internal void <SetStat>b__0(Message<AchievementProgressList> msg)
			{
			}
		}

		[Token(Token = "0x20003B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CCD8", Offset = "0xB5CCD8")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x40016F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> onComplete;

			[Token(Token = "0x600149F")]
			[Address(RVA = "0xFC5408", Offset = "0xFC5408", VA = "0xFC5408")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xFC5410", Offset = "0xFC5410", VA = "0xFC5410")]
			internal void <IsMicrophoneAvailable>b__0(Message<MicrophoneAvailabilityState> message)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CCE8", Offset = "0xB5CCE8")]
		private struct <NetworkAuthenticationStart>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x40016F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40016F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Fusion.Photon.Realtime.AuthenticationValues> <>t__builder;

			[Token(Token = "0x40016F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Provider <>4__this;

			[Token(Token = "0x40016FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Fusion.Photon.Realtime.AuthenticationValues <values>5__2;

			[Token(Token = "0x40016FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationTokenSource <cts>5__3;

			[Token(Token = "0x40016FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Task<string> <task>5__4;

			[Token(Token = "0x40016FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xFC5FF8", Offset = "0xFC5FF8", VA = "0xFC5FF8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014A2")]
			[Address(RVA = "0xFC67FC", Offset = "0xFC67FC", VA = "0xFC67FC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CCF8", Offset = "0xB5CCF8")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x40016FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x40016FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Provider <>4__this;

			[Token(Token = "0x4001700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationTokenSource cts;

			[Token(Token = "0x4001701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string nonce;

			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xFC54C0", Offset = "0xFC54C0", VA = "0xFC54C0")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x60014A4")]
			[Address(RVA = "0xFC54C8", Offset = "0xFC54C8", VA = "0xFC54C8")]
			internal void <GetUserProof>b__0(Message<UserProof> message)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CD08", Offset = "0xB5CD08")]
		private struct <GetUserProof>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x4001702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4001704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Provider <>4__this;

			[Token(Token = "0x4001705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationTokenSource cts;

			[Token(Token = "0x4001706")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass36_0 <>8__1;

			[Token(Token = "0x4001707")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xFC5C2C", Offset = "0xFC5C2C", VA = "0xFC5C2C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xFC5F9C", Offset = "0xFC5F9C", VA = "0xFC5F9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_attemptsToGetCloudStorageDirectoryPath;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ulong m_rawUserID;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string[] m_achievementIDs;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_achievementIsUnlocked;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool m_achievementJustUnlocked;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool m_achievementStoredUnlocked;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_achievementCurrentCount;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_smallIconURL;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private string m_largeIconURL;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Texture2D m_retrievedIconTexture;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Dictionary<string, bool> m_achievementUnlockStates;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_lastResetCount;

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xFFBA90", Offset = "0xFFBA90", VA = "0xFFBA90", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xFFC280", Offset = "0xFFC280", VA = "0xFFC280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB80070", Offset = "0xB80070")]
		protected IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xFFC2F8", Offset = "0xFFC2F8", VA = "0xFFC2F8", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xFFC60C", Offset = "0xFFC60C", VA = "0xFFC60C")]
		private void Update()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xFFC790", Offset = "0xFFC790", VA = "0xFFC790")]
		private void OnUserLoaded(Message<User> msg)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xFFCBA0", Offset = "0xFFCBA0", VA = "0xFFCBA0")]
		private void OnUserGet(Message<User> msg)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xFFCE94", Offset = "0xFFCE94", VA = "0xFFCE94", Slot = "17")]
		public override void SceneLoaded()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xFFD058", Offset = "0xFFD058", VA = "0xFFD058", Slot = "18")]
		protected override void SetHighPerformanceModeCPU(bool active)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xFFD108", Offset = "0xFFD108", VA = "0xFFD108", Slot = "19")]
		protected override void SetHighPerformanceModeGPU(bool active)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xFFD1B8", Offset = "0xFFD1B8", VA = "0xFFD1B8")]
		private void OnApplicationStateChanged(bool isPaused)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xFFCFC8", Offset = "0xFFCFC8", VA = "0xFFCFC8")]
		private void UpdateFoveatedRendering()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xFFD1BC", Offset = "0xFFD1BC", VA = "0xFFD1BC")]
		private void CheckUserEntitlement(Message message)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xFFD1F0", Offset = "0xFFD1F0", VA = "0xFFD1F0")]
		private void GetOculusCloudStorageDirectoryPath(Message<string> message)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xFFD800", Offset = "0xFFD800", VA = "0xFFD800", Slot = "11")]
		public override void GetUserAvatarTexture(string userId, AvatarImageSize avatarImageSize, Action<Texture2D> callback)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xFFD974", Offset = "0xFFD974", VA = "0xFFD974")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB800D0", Offset = "0xB800D0")]
		private IEnumerator FetchPlayerImage(string url, AvatarImageSize avatarImageSize, Action<Texture2D> callback)
		{
			return null;
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xFFDA1C", Offset = "0xFFDA1C", VA = "0xFFDA1C", Slot = "12")]
		public override bool IsAchievementUnlocked(string achievementID)
		{
			return default(bool);
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xFFDC08", Offset = "0xFFDC08", VA = "0xFFDC08", Slot = "13")]
		public override bool UnlockAchievement(string achievementID)
		{
			return default(bool);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xFFDD34", Offset = "0xFFDD34", VA = "0xFFDD34", Slot = "14")]
		public override void IncrementStat(string statID, int incrementAmount)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xFFDD48", Offset = "0xFFDD48", VA = "0xFFDD48", Slot = "15")]
		public override void SetStat(Stat stat, string statID, int toValue)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xFFDF04", Offset = "0xFFDF04", VA = "0xFFDF04", Slot = "16")]
		public override void ResetPlayerStatsAndAchievements()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xFFC22C", Offset = "0xFFC22C", VA = "0xFFC22C")]
		private HeadsetModels ConvertHeadsetModel(OVRPlugin.SystemHeadset systemHeadset)
		{
			return default(HeadsetModels);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xFFDF08", Offset = "0xFFDF08", VA = "0xFFDF08", Slot = "22")]
		public override void RequestMicrophonePermission()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xFFDF6C", Offset = "0xFFDF6C", VA = "0xFFDF6C", Slot = "23")]
		public override void IsMicrophoneAvailable(Action<bool> onComplete)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xFFE070", Offset = "0xFFE070", VA = "0xFFE070", Slot = "20")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB80130", Offset = "0xB80130")]
		public override Task<Fusion.Photon.Realtime.AuthenticationValues> NetworkAuthenticationStart()
		{
			return null;
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xFFE1AC", Offset = "0xFFE1AC", VA = "0xFFE1AC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB80190", Offset = "0xB80190")]
		private Task<string> GetUserProof(CancellationTokenSource cts)
		{
			return null;
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xFFE30C", Offset = "0xFFE30C", VA = "0xFFE30C", Slot = "21")]
		public override void NetworkAuthenticationEnd()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xFFE310", Offset = "0xFFE310", VA = "0xFFE310", Slot = "26")]
		public override void SetPresenceMultiplayer(bool joinable)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xFFE3F0", Offset = "0xFFE3F0", VA = "0xFFE3F0", Slot = "27")]
		public override void ClearPresence()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xFFE3F8", Offset = "0xFFE3F8", VA = "0xFFE3F8")]
		private void OnJoinIntent(Message<GroupPresenceJoinIntent> message)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xFFEB48", Offset = "0xFFEB48", VA = "0xFFEB48", Slot = "28")]
		public override void InvitePlayers()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xFFEBA4", Offset = "0xFFEBA4", VA = "0xFFEBA4")]
		public Provider()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xFFECE4", Offset = "0xFFECE4", VA = "0xFFECE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB801F0", Offset = "0xB801F0")]
		[DebuggerHidden]
		private bool <>n__0(string achievementID)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003B8")]
	public class PlayerRecorder : MonoBehaviour
	{
		[Token(Token = "0x20003B9")]
		public struct InputData
		{
			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool m_interactUI;

			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool m_interact;

			[Token(Token = "0x4001713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool m_pause;

			[Token(Token = "0x4001714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public bool m_settings;

			[Token(Token = "0x4001715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool m_hold;

			[Token(Token = "0x4001716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool m_thumbstick;

			[Token(Token = "0x4001717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 m_joystick;

			[Token(Token = "0x4001718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_localPosition;

			[Token(Token = "0x4001719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion m_localRotation;

			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xFC37C8", Offset = "0xFC37C8", VA = "0xFC37C8")]
			public static InputData Create(ControllerInputBase input)
			{
				return default(InputData);
			}
		}

		[Token(Token = "0x20003BA")]
		public struct Data
		{
			[Token(Token = "0x400171A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_rootPosition;

			[Token(Token = "0x400171B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion m_rootRotation;

			[Token(Token = "0x400171C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 m_headLocalPosition;

			[Token(Token = "0x400171D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion m_headLocalRotation;

			[Token(Token = "0x400171E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public InputData m_leftInput;

			[Token(Token = "0x400171F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public InputData m_rightInput;

			[Token(Token = "0x60014BC")]
			[Address(RVA = "0xFC3590", Offset = "0xFC3590", VA = "0xFC3590")]
			public static Data Create(Player player)
			{
				return default(Data);
			}
		}

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_loopPlayback;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MemoryStream m_stream;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Data m_lastData;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_dataSize;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C91C", Offset = "0xB6C91C")]
		private static PlayerRecorder <Current>k__BackingField;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C92C", Offset = "0xB6C92C")]
		private static bool <IsPlaying>k__BackingField;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C93C", Offset = "0xB6C93C")]
		private static bool <IsRecording>k__BackingField;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C94C", Offset = "0xB6C94C")]
		private static Data <PreviousData>k__BackingField;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C95C", Offset = "0xB6C95C")]
		private static Data <CurrentData>k__BackingField;

		[Token(Token = "0x170002DF")]
		public static PlayerRecorder Current
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0xFF2DD0", Offset = "0xFF2DD0", VA = "0xFF2DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB802E8", Offset = "0xB802E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xFF2E34", Offset = "0xFF2E34", VA = "0xFF2E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB802F8", Offset = "0xB802F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public static bool IsPlaying
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0xFF2EA0", Offset = "0xFF2EA0", VA = "0xFF2EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80308", Offset = "0xB80308")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0xFF2F04", Offset = "0xFF2F04", VA = "0xFF2F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80318", Offset = "0xB80318")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public static bool IsRecording
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xFF2F70", Offset = "0xFF2F70", VA = "0xFF2F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80328", Offset = "0xB80328")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xFF2FD4", Offset = "0xFF2FD4", VA = "0xFF2FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80338", Offset = "0xB80338")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public static Data PreviousData
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xFF3040", Offset = "0xFF3040", VA = "0xFF3040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80348", Offset = "0xB80348")]
			get
			{
				return default(Data);
			}
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xFF30B0", Offset = "0xFF30B0", VA = "0xFF30B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80358", Offset = "0xB80358")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public static Data CurrentData
		{
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0xFF313C", Offset = "0xFF313C", VA = "0xFF313C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80368", Offset = "0xB80368")]
			get
			{
				return default(Data);
			}
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xFF31AC", Offset = "0xFF31AC", VA = "0xFF31AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80378", Offset = "0xB80378")]
			private set
			{
			}
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xFF3238", Offset = "0xFF3238", VA = "0xFF3238")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xFF3378", Offset = "0xFF3378", VA = "0xFF3378")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xFF3498", Offset = "0xFF3498", VA = "0xFF3498")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xFF3574", Offset = "0xFF3574", VA = "0xFF3574")]
		public void StopRecording([Optional] string saveToFile)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xFF36CC", Offset = "0xFF36CC", VA = "0xFF36CC")]
		public void StartPlayback(string path)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xFF3898", Offset = "0xFF3898", VA = "0xFF3898")]
		public void StopPlayback()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xFF3960", Offset = "0xFF3960", VA = "0xFF3960")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xFF3E24", Offset = "0xFF3E24", VA = "0xFF3E24")]
		public void Update()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xFF4434", Offset = "0xFF4434", VA = "0xFF4434")]
		public PlayerRecorder()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public abstract class ProviderBase : MonoBehaviour
	{
		[Token(Token = "0x20003BC")]
		public enum AvatarImageSize
		{
			[Token(Token = "0x4001738")]
			Small,
			[Token(Token = "0x4001739")]
			Medium,
			[Token(Token = "0x400173A")]
			Large
		}

		[Token(Token = "0x20003BD")]
		[Flags]
		public enum HeadsetModels
		{
			[Token(Token = "0x400173C")]
			Unidentified = 2,
			[Token(Token = "0x400173D")]
			Quest = 4,
			[Token(Token = "0x400173E")]
			Quest2 = 8,
			[Token(Token = "0x400173F")]
			Rift = 0x10,
			[Token(Token = "0x4001740")]
			RiftS = 0x20,
			[Token(Token = "0x4001741")]
			Vive = 0x40,
			[Token(Token = "0x4001742")]
			ViveProMv = 0x80,
			[Token(Token = "0x4001743")]
			VivePro2 = 0x100,
			[Token(Token = "0x4001744")]
			HtcViveCosmos = 0x200,
			[Token(Token = "0x4001745")]
			ViveElite = 0x400,
			[Token(Token = "0x4001746")]
			HpReverbVirtualRealityHeadsetG20 = 0x800,
			[Token(Token = "0x4001747")]
			Index = 0x1000,
			[Token(Token = "0x4001748")]
			PicoNeo3 = 0x2000
		}

		[Token(Token = "0x20003BE")]
		public enum PlayerLocales
		{
			[Token(Token = "0x400174A")]
			Global,
			[Token(Token = "0x400174B")]
			China,
			[Token(Token = "0x400174C")]
			Unknown
		}

		[Token(Token = "0x20003BF")]
		public enum HighPerformanceType
		{
			[Token(Token = "0x400174E")]
			Medium,
			[Token(Token = "0x400174F")]
			High
		}

		[Serializable]
		[Token(Token = "0x20003C0")]
		public class InviteData
		{
			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_version;

			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_region;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string m_roomName;

			[Token(Token = "0x4001753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_isPublic;

			[Token(Token = "0x6001500")]
			[Address(RVA = "0xFC6C40", Offset = "0xFC6C40", VA = "0xFC6C40")]
			public static InviteData Create(string roomName, bool isPublic = true, [Optional] string region)
			{
				return null;
			}

			[Token(Token = "0x6001501")]
			[Address(RVA = "0xFC6D18", Offset = "0xFC6D18", VA = "0xFC6D18")]
			public static InviteData Create()
			{
				return null;
			}

			[Token(Token = "0x6001502")]
			[Address(RVA = "0xFC6ED8", Offset = "0xFC6ED8", VA = "0xFC6ED8")]
			public string ToJsonString()
			{
				return null;
			}

			[Token(Token = "0x6001503")]
			[Address(RVA = "0xFC6EE0", Offset = "0xFC6EE0", VA = "0xFC6EE0")]
			public static InviteData FromJsonString(string json)
			{
				return null;
			}

			[Token(Token = "0x6001504")]
			[Address(RVA = "0xFC6D10", Offset = "0xFC6D10", VA = "0xFC6D10")]
			public InviteData()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CD28", Offset = "0xB5CD28")]
		private struct <IsLatestVersion>d__93 : IAsyncStateMachine
		{
			[Token(Token = "0x4001754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x6001505")]
			[Address(RVA = "0xFC6B8C", Offset = "0xFC6B8C", VA = "0xFC6B8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001506")]
			[Address(RVA = "0xFC6BE4", Offset = "0xFC6BE4", VA = "0xFC6BE4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C96C", Offset = "0xB6C96C")]
		private List<string> <DeveloperUserIDs>k__BackingField;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C98C", Offset = "0xB6C98C")]
		private static ProviderBase <Instance>k__BackingField;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C99C", Offset = "0xB6C99C")]
		private string <UserDataPath>k__BackingField;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C9AC", Offset = "0xB6C9AC")]
		private string <CacheUserDataPath>k__BackingField;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C9BC", Offset = "0xB6C9BC")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C9CC", Offset = "0xB6C9CC")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C9DC", Offset = "0xB6C9DC")]
		private string <HeadsetModel>k__BackingField;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C9EC", Offset = "0xB6C9EC")]
		private string <HeadsetMake>k__BackingField;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6C9FC", Offset = "0xB6C9FC")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CA0C", Offset = "0xB6CA0C")]
		private bool <DoesOwnPlaytest>k__BackingField;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CA1C", Offset = "0xB6CA1C")]
		private bool <IsLegitApp>k__BackingField;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CA2C", Offset = "0xB6CA2C")]
		private PlayerLocales <PlayerLocale>k__BackingField;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CA3C", Offset = "0xB6CA3C")]
		private UnityEngine.XR.InputDevice <ActiveDevice>k__BackingField;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CA4C", Offset = "0xB6CA4C")]
		private HeadsetModels <GenericHeadsetModel>k__BackingField;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CA5C", Offset = "0xB6CA5C")]
		private FeatureLock<HighPerformanceType> <HighPerformanceModeCPU>k__BackingField;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CA6C", Offset = "0xB6CA6C")]
		private FeatureLock<HighPerformanceType> <HighPerformanceModeGPU>k__BackingField;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action OnHmdReset;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_hasPausedFromFocus;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly CultureInfo DefaultCulture;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Action OnInviteReceived;

		[Token(Token = "0x4001735")]
		public const string DeepLinkSocialHub = "socialhub";

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InviteData m_inviteData;

		[Token(Token = "0x170002E4")]
		public virtual List<string> DeveloperUserIDs
		{
			[Token(Token = "0x60014BD")]
			[Address(RVA = "0xFFED78", Offset = "0xFFED78", VA = "0xFFED78", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80388", Offset = "0xB80388")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0xFFED80", Offset = "0xFFED80", VA = "0xFFED80", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80398", Offset = "0xB80398")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public static ProviderBase Instance
		{
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xFFEF70", Offset = "0xFFEF70", VA = "0xFFEF70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB803C8", Offset = "0xB803C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0xFFEFD4", Offset = "0xFFEFD4", VA = "0xFFEFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB803D8", Offset = "0xB803D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public string UserDataPath
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xFFF040", Offset = "0xFFF040", VA = "0xFFF040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB803E8", Offset = "0xB803E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xFFF048", Offset = "0xFFF048", VA = "0xFFF048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB803F8", Offset = "0xB803F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public string CacheUserDataPath
		{
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0xFFF050", Offset = "0xFFF050", VA = "0xFFF050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80408", Offset = "0xB80408")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0xFFF058", Offset = "0xFFF058", VA = "0xFFF058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80418", Offset = "0xB80418")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public string UserName
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0xFFF060", Offset = "0xFFF060", VA = "0xFFF060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80428", Offset = "0xB80428")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0xFFF068", Offset = "0xFFF068", VA = "0xFFF068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80438", Offset = "0xB80438")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public string UserId
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0xFFF070", Offset = "0xFFF070", VA = "0xFFF070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80448", Offset = "0xB80448")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xFFF078", Offset = "0xFFF078", VA = "0xFFF078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80458", Offset = "0xB80458")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public string HeadsetModel
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xFFF080", Offset = "0xFFF080", VA = "0xFFF080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80468", Offset = "0xB80468")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xFFF088", Offset = "0xFFF088", VA = "0xFFF088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80478", Offset = "0xB80478")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public string HeadsetMake
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0xFFF090", Offset = "0xFFF090", VA = "0xFFF090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80488", Offset = "0xB80488")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xFFF098", Offset = "0xFFF098", VA = "0xFFF098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80498", Offset = "0xB80498")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		public bool IsInitialized
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0xFFF0A0", Offset = "0xFFF0A0", VA = "0xFFF0A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB804A8", Offset = "0xB804A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xFFF0A8", Offset = "0xFFF0A8", VA = "0xFFF0A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB804B8", Offset = "0xB804B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public bool DoesOwnPlaytest
		{
			[Token(Token = "0x60014D1")]
			[Address(RVA = "0xFFF0B4", Offset = "0xFFF0B4", VA = "0xFFF0B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB804C8", Offset = "0xB804C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xFFF0BC", Offset = "0xFFF0BC", VA = "0xFFF0BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB804D8", Offset = "0xB804D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public bool IsLegitApp
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xFFF0C8", Offset = "0xFFF0C8", VA = "0xFFF0C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB804E8", Offset = "0xB804E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xFFF0D0", Offset = "0xFFF0D0", VA = "0xFFF0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB804F8", Offset = "0xB804F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public PlayerLocales PlayerLocale
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xFFF0DC", Offset = "0xFFF0DC", VA = "0xFFF0DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80508", Offset = "0xB80508")]
			get
			{
				return default(PlayerLocales);
			}
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xFFF0E4", Offset = "0xFFF0E4", VA = "0xFFF0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80518", Offset = "0xB80518")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public UnityEngine.XR.InputDevice ActiveDevice
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0xFFF0EC", Offset = "0xFFF0EC", VA = "0xFFF0EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80528", Offset = "0xB80528")]
			get
			{
				return default(UnityEngine.XR.InputDevice);
			}
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0xFFF0F8", Offset = "0xFFF0F8", VA = "0xFFF0F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80538", Offset = "0xB80538")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public HeadsetModels GenericHeadsetModel
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0xFFF100", Offset = "0xFFF100", VA = "0xFFF100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80548", Offset = "0xB80548")]
			get
			{
				return default(HeadsetModels);
			}
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0xFFF108", Offset = "0xFFF108", VA = "0xFFF108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80558", Offset = "0xB80558")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public FeatureLock<HighPerformanceType> HighPerformanceModeCPU
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0xFFF110", Offset = "0xFFF110", VA = "0xFFF110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80568", Offset = "0xB80568")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0xFFF118", Offset = "0xFFF118", VA = "0xFFF118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80578", Offset = "0xB80578")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public FeatureLock<HighPerformanceType> HighPerformanceModeGPU
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0xFFF120", Offset = "0xFFF120", VA = "0xFFF120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80588", Offset = "0xB80588")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xFFF128", Offset = "0xFFF128", VA = "0xFFF128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80598", Offset = "0xB80598")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public bool HasInvite
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xFFF600", Offset = "0xFFF600", VA = "0xFFF600")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F5")]
		public InviteData Invite
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xFFF65C", Offset = "0xFFF65C", VA = "0xFFF65C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xFFF610", Offset = "0xFFF610", VA = "0xFFF610")]
			set
			{
			}
		}

		[Token(Token = "0x14000052")]
		public static event Action OnPlatformProviderInitialized
		{
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xFFED88", Offset = "0xFFED88", VA = "0xFFED88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB803A8", Offset = "0xB803A8")]
			add
			{
			}
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0xFFEE7C", Offset = "0xFFEE7C", VA = "0xFFEE7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB803B8", Offset = "0xB803B8")]
			remove
			{
			}
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xFFBC40", Offset = "0xFFBC40", VA = "0xFFBC40", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xFFF130", Offset = "0xFFF130", VA = "0xFFF130", Slot = "7")]
		protected virtual void CompleteInitialisation()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xFFF3C8", Offset = "0xFFF3C8", VA = "0xFFF3C8", Slot = "8")]
		protected virtual void OnDeviceConnected(UnityEngine.XR.InputDevice device)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xFFF3D0", Offset = "0xFFF3D0", VA = "0xFFF3D0", Slot = "9")]
		protected virtual void OnDeviceDisconnected(UnityEngine.XR.InputDevice device)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xFFC3BC", Offset = "0xFFC3BC", VA = "0xFFC3BC", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60014E4")]
		public abstract void GetUserAvatarTexture(string userId, AvatarImageSize avatarImageSize, Action<Texture2D> callback);

		[Token(Token = "0x60014E5")]
		public abstract bool IsAchievementUnlocked(string achievementID);

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xFFECFC", Offset = "0xFFECFC", VA = "0xFFECFC", Slot = "13")]
		public virtual bool UnlockAchievement(string achievementID)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E7")]
		public abstract void IncrementStat(string statID, int incrementAmount);

		[Token(Token = "0x60014E8")]
		public abstract void SetStat(Stat stat, string onlinStatID, int toValue);

		[Token(Token = "0x60014E9")]
		public abstract void ResetPlayerStatsAndAchievements();

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xFFCEA8", Offset = "0xFFCEA8", VA = "0xFFCEA8", Slot = "17")]
		public virtual void SceneLoaded()
		{
		}

		[Token(Token = "0x60014EB")]
		protected abstract void SetHighPerformanceModeCPU(bool active);

		[Token(Token = "0x60014EC")]
		protected abstract void SetHighPerformanceModeGPU(bool active);

		[Token(Token = "0x60014ED")]
		public abstract Task<Fusion.Photon.Realtime.AuthenticationValues> NetworkAuthenticationStart();

		[Token(Token = "0x60014EE")]
		public abstract void NetworkAuthenticationEnd();

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xFFF3D4", Offset = "0xFFF3D4", VA = "0xFFF3D4")]
		public string GetBuildVersionLabel()
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xFFF474", Offset = "0xFFF474", VA = "0xFFF474", Slot = "22")]
		public virtual void RequestMicrophonePermission()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xFFF478", Offset = "0xFFF478", VA = "0xFFF478", Slot = "23")]
		public virtual void IsMicrophoneAvailable(Action<bool> onComplete)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xFFF4D8", Offset = "0xFFF4D8", VA = "0xFFF4D8", Slot = "24")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB805A8", Offset = "0xB805A8")]
		public virtual Task<bool> IsLatestVersion()
		{
			return null;
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xFFF5FC", Offset = "0xFFF5FC", VA = "0xFFF5FC", Slot = "25")]
		public virtual void OpenStorePage()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xFFF664", Offset = "0xFFF664", VA = "0xFFF664")]
		private void MultiplayerStart(bool success)
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xFFF7E4", Offset = "0xFFF7E4", VA = "0xFFF7E4")]
		private void MultiplayerEnd(ShutdownReason reason)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xFFF8EC", Offset = "0xFFF8EC", VA = "0xFFF8EC")]
		private void MultiplayerPlayerCountChanged(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xFFF9BC", Offset = "0xFFF9BC", VA = "0xFFF9BC", Slot = "26")]
		public virtual void SetPresenceMultiplayer(bool isJoinable)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xFFF9C0", Offset = "0xFFF9C0", VA = "0xFFF9C0", Slot = "27")]
		public virtual void ClearPresence()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xFFF9C4", Offset = "0xFFF9C4", VA = "0xFFF9C4", Slot = "28")]
		public virtual void InvitePlayers()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xFFEA40", Offset = "0xFFEA40", VA = "0xFFEA40")]
		protected void HandleDeeplink(string apiName, [Optional] string message, [Optional] string lobbySessionId)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xFFEC50", Offset = "0xFFEC50", VA = "0xFFEC50")]
		protected ProviderBase()
		{
		}
	}
}
namespace Particles
{
	[Token(Token = "0x20003C2")]
	public class BaseParticleUser : MonoBehaviour
	{
		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CA7C", Offset = "0xB6CA7C")]
		public bool m_playOnEnable;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_useBurstEmission;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_particleSystemControlsEmission;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_overridePosition;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_offsetSpawn;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CAB4", Offset = "0xB6CAB4")]
		public bool m_looping;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_emissionAmount;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_useParticleSystemFrequency;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_overriddenSpawnFrequency;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CAEC", Offset = "0xB6CAEC")]
		public bool m_playSoundOnEmit;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SoundCueTrigger m_soundOnEmit;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_shouldLoopEmit;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Transform m_particlePosition;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float m_emissionFrequency;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_emissionTimer;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_particlePositionSet;

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x144EADC", Offset = "0x144EADC", VA = "0x144EADC", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x144EB84", Offset = "0x144EB84", VA = "0x144EB84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x144EBC4", Offset = "0x144EBC4", VA = "0x144EBC4")]
		private void Update()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x144EC34", Offset = "0x144EC34", VA = "0x144EC34")]
		public void Play()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x144EC58", Offset = "0x144EC58", VA = "0x144EC58")]
		public void Stop()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x144EC68", Offset = "0x144EC68", VA = "0x144EC68", Slot = "5")]
		protected virtual bool EmitParticles(bool burst)
		{
			return default(bool);
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0x144ED6C", Offset = "0x144ED6C", VA = "0x144ED6C")]
		public BaseParticleUser()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class JuiceManager : ParticleManager
	{
		[Token(Token = "0x20003C4")]
		public enum JuiceType
		{
			[Token(Token = "0x400176B")]
			Apple,
			[Token(Token = "0x400176C")]
			Coconut,
			[Token(Token = "0x400176D")]
			Kiwi,
			[Token(Token = "0x400176E")]
			Lemon,
			[Token(Token = "0x400176F")]
			Lime,
			[Token(Token = "0x4001770")]
			Mango,
			[Token(Token = "0x4001771")]
			Orange,
			[Token(Token = "0x4001772")]
			PassionFruit,
			[Token(Token = "0x4001773")]
			Peach,
			[Token(Token = "0x4001774")]
			Pineapple,
			[Token(Token = "0x4001775")]
			Plum,
			[Token(Token = "0x4001776")]
			Pomegranate,
			[Token(Token = "0x4001777")]
			Strawberry,
			[Token(Token = "0x4001778")]
			Watermelon
		}

		[Serializable]
		[Token(Token = "0x20003C5")]
		public struct StoredJuiceParticle
		{
			[Token(Token = "0x4001779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public JuiceType m_particleType;

			[Token(Token = "0x400177A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ParticleSystem m_particleSystem;

			[Token(Token = "0x400177B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_useChildParticles;

			[Token(Token = "0x400177C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem[] m_childParticles;
		}

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private List<StoredJuiceParticle> m_storedJuiceParticles;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Dictionary<JuiceType, StoredJuiceParticle> m_runTimeDictionary;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private StoredJuiceParticle m_cachedJuiceParticle;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public new static JuiceManager Instance;

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x1018BA4", Offset = "0x1018BA4", VA = "0x1018BA4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x1018DD8", Offset = "0x1018DD8", VA = "0x1018DD8")]
		public void EmitJuiceParticle(JuiceType juiceType, Vector3 position, int amount, Vector3 scale, bool burst = false)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1018F6C", Offset = "0x1018F6C", VA = "0x1018F6C")]
		public float GetEmissionFrequency(JuiceType pType)
		{
			return default(float);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1019024", Offset = "0x1019024", VA = "0x1019024")]
		public JuiceManager()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class ParticleManager : MonoBehaviour
	{
		[Token(Token = "0x20003C7")]
		public enum ParticleType
		{
			[Token(Token = "0x4001786")]
			None = -1,
			[Token(Token = "0x4001787")]
			BombFuseSmoke,
			[Token(Token = "0x4001788")]
			AppearSmoke,
			[Token(Token = "0x4001789")]
			GeyserSplash,
			[Token(Token = "0x400178A")]
			DestructionIndicatorBurst,
			[Token(Token = "0x400178B")]
			DestructionIndicatorLoop,
			[Token(Token = "0x400178C")]
			RhythmStreakChangeFruit,
			[Token(Token = "0x400178D")]
			RhythmStreakChangeText,
			[Token(Token = "0x400178E")]
			RhythmFruitSlicedText,
			[Token(Token = "0x400178F")]
			TotemAppear,
			[Token(Token = "0x4001790")]
			GeyserAnticipation,
			[Token(Token = "0x4001791")]
			GeyserSpawnSplash,
			[Token(Token = "0x4001792")]
			GeyserDespawnSplash,
			[Token(Token = "0x4001793")]
			MissionClaimed
		}

		[Serializable]
		[Token(Token = "0x20003C8")]
		public struct StoredParticle
		{
			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ParticleType m_particleType;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ParticleSystem m_particleSystem;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool m_useChildParticles;

			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem[] m_childParticles;
		}

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<StoredParticle> m_storedParticles;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<ParticleType, StoredParticle> m_runTimeDictionary;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem.EmitParams m_emitParams;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private StoredParticle m_cachedParticle;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int m_cachedEmitAmount;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool m_cachedBurst;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CB44", Offset = "0xB6CB44")]
		private static ParticleManager <Instance>k__BackingField;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CB54", Offset = "0xB6CB54")]
		private static bool <IsInitialized>k__BackingField;

		[Token(Token = "0x170002F6")]
		public static ParticleManager Instance
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0xF4A4D0", Offset = "0xF4A4D0", VA = "0xF4A4D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80618", Offset = "0xB80618")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001513")]
			[Address(RVA = "0xF4A51C", Offset = "0xF4A51C", VA = "0xF4A51C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80628", Offset = "0xB80628")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public static bool IsInitialized
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0xF4A570", Offset = "0xF4A570", VA = "0xF4A570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80638", Offset = "0xB80638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001515")]
			[Address(RVA = "0xF4A5BC", Offset = "0xF4A5BC", VA = "0xF4A5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80648", Offset = "0xB80648")]
			private set
			{
			}
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xF4A610", Offset = "0xF4A610", VA = "0xF4A610", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xF4A8C4", Offset = "0xF4A8C4", VA = "0xF4A8C4")]
		public void EmitParticle(ParticleType pType, Vector3 position, int amount, bool burst = false, bool systemControlledEmission = false)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xF4AA28", Offset = "0xF4AA28", VA = "0xF4AA28")]
		protected void EmitInternal(ParticleSystem pSystem, Vector3 position, int amount, bool burst = false, bool systemControlledEmission = false)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xF4AC20", Offset = "0xF4AC20", VA = "0xF4AC20")]
		public float GetEmissionFrequency(ParticleType pType)
		{
			return default(float);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xF4ACD8", Offset = "0xF4ACD8", VA = "0xF4ACD8")]
		public ParticleManager()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class ParticleUser : BaseParticleUser
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CB64", Offset = "0xB6CB64")]
		public ParticleManager.ParticleType m_particleType;

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xF4BB14", Offset = "0xF4BB14", VA = "0xF4BB14", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xF4BB90", Offset = "0xF4BB90", VA = "0xF4BB90", Slot = "5")]
		protected override bool EmitParticles(bool burst)
		{
			return default(bool);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xF4BC50", Offset = "0xF4BC50", VA = "0xF4BC50")]
		public ParticleUser()
		{
		}
	}
}
namespace Pad
{
	[Token(Token = "0x20003CA")]
	public interface IPadController
	{
		[Token(Token = "0x170002F8")]
		Transform Transform
		{
			[Token(Token = "0x600151E")]
			get;
		}

		[Token(Token = "0x170002F9")]
		bool InDetectionTrigger
		{
			[Token(Token = "0x600151F")]
			get;
		}

		[Token(Token = "0x170002FA")]
		IHand InteractionHand
		{
			[Token(Token = "0x6001520")]
			get;
		}

		[Token(Token = "0x170002FB")]
		PadInput Input
		{
			[Token(Token = "0x6001521")]
			get;
		}

		[Token(Token = "0x170002FC")]
		UnityEvent OnGrabbed
		{
			[Token(Token = "0x6001522")]
			get;
		}

		[Token(Token = "0x170002FD")]
		UnityEvent OnReleased
		{
			[Token(Token = "0x6001523")]
			get;
		}

		[Token(Token = "0x170002FE")]
		IGrabbable Grabbable
		{
			[Token(Token = "0x6001524")]
			get;
		}
	}
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5CD38", Offset = "0xB5CD38")]
	public class PadController : MonoBehaviour, IPadController
	{
		[Token(Token = "0x20003CC")]
		private enum ReleaseState
		{
			[Token(Token = "0x40017C2")]
			Invalid,
			[Token(Token = "0x40017C3")]
			Delay,
			[Token(Token = "0x40017C4")]
			Start,
			[Token(Token = "0x40017C5")]
			Complete
		}

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CB9C", Offset = "0xB6CB9C")]
		public PadUIController m_padUIController;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_padCanvasTransform;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_detectionRect;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PadInputDetectionTrigger m_inputDetection;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Grabbable m_padGrabbable;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator m_padAnimator;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HandPose m_pointerHandPose;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Transform> m_flippedTransforms;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform m_padReturnPosition;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_releaseToStashDelay;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_releaseToStashDuration;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Ease m_releaseToStashEase;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent m_onGrabbed;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent m_onReleaseDelayStarted;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent m_onReleaseStarted;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent m_onReleaseCompleted;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public PadHologram m_hologram;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CBD4", Offset = "0xB6CBD4")]
		public TextMeshProUGUI m_buildInfoText;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PadInput m_padInput;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Plane m_hitPlane;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Plane m_backPlane;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IHand m_holdingHand;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IHand m_interactionHand;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_previousScaleSign;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Dictionary<Transform, Vector3> m_flippedTransformScales;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 m_grabbedPosition;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion m_grabbedRotation;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 m_releasedPosition;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion m_releasedRotation;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Rigidbody m_interactingRigidbody;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Transform m_currentFollowTransform;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public List<TextMeshProUGUI> m_texts;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool m_positiveHitSide;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		private bool m_positiveBackSide;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private ReleaseState m_releaseState;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float m_releaseTimer;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float m_timeOpen;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int m_leftHandHash;

		[Token(Token = "0x170002FF")]
		public Transform Transform
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0x13D9164", Offset = "0x13D9164", VA = "0x13D9164", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public bool InDetectionTrigger
		{
			[Token(Token = "0x600152A")]
			[Address(RVA = "0x13D916C", Offset = "0x13D916C", VA = "0x13D916C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000301")]
		public IHand InteractionHand
		{
			[Token(Token = "0x600152B")]
			[Address(RVA = "0x13D9188", Offset = "0x13D9188", VA = "0x13D9188", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		public PadInput Input
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0x13D9190", Offset = "0x13D9190", VA = "0x13D9190", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public UnityEvent OnGrabbed
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x13D9198", Offset = "0x13D9198", VA = "0x13D9198", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		public UnityEvent OnReleased
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x13D91A0", Offset = "0x13D91A0", VA = "0x13D91A0", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public IGrabbable Grabbable
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x13D91A8", Offset = "0x13D91A8", VA = "0x13D91A8", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000053")]
		public event Action OnGrabStart
		{
			[Token(Token = "0x6001525")]
			[Address(RVA = "0x13D8EE4", Offset = "0x13D8EE4", VA = "0x13D8EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80658", Offset = "0xB80658")]
			add
			{
			}
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x13D8F84", Offset = "0x13D8F84", VA = "0x13D8F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80668", Offset = "0xB80668")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event Action OnReleaseComplete
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x13D9024", Offset = "0x13D9024", VA = "0x13D9024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80678", Offset = "0xB80678")]
			add
			{
			}
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x13D90C4", Offset = "0x13D90C4", VA = "0x13D90C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80688", Offset = "0xB80688")]
			remove
			{
			}
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x13D91B0", Offset = "0x13D91B0", VA = "0x13D91B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x13D920C", Offset = "0x13D920C", VA = "0x13D920C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x13D935C", Offset = "0x13D935C", VA = "0x13D935C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x13D9548", Offset = "0x13D9548", VA = "0x13D9548")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x13D9680", Offset = "0x13D9680", VA = "0x13D9680")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x13D9744", Offset = "0x13D9744", VA = "0x13D9744")]
		private void OnGrab(IGrabbable grabbable, IHand handGrabbed)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x13D9D80", Offset = "0x13D9D80", VA = "0x13D9D80")]
		private void OnRelease(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x13DA440", Offset = "0x13DA440", VA = "0x13DA440")]
		private void Update()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x13DA788", Offset = "0x13DA788", VA = "0x13DA788")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x13DA808", Offset = "0x13DA808", VA = "0x13DA808")]
		private void ApplyCorrectScale()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x13DA9A4", Offset = "0x13DA9A4", VA = "0x13DA9A4")]
		public void Open(IHand hand)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x13DAAB0", Offset = "0x13DAAB0", VA = "0x13DAAB0")]
		public void GetAllActiveTexts()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x13DABBC", Offset = "0x13DABBC", VA = "0x13DABBC")]
		public PadController()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class PadHologram : MonoBehaviour
	{
		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 m_leftSidePosition;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_leftSideRotation;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_rightSidePosition;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 m_rightSideRotation;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_hologramObject;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FeatureLock m_disableHologram;

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x13DACA4", Offset = "0x13DACA4", VA = "0x13DACA4")]
		public void Awake()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x13DAD6C", Offset = "0x13DAD6C", VA = "0x13DAD6C")]
		private void HologramActive(bool disabled)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x13DAE14", Offset = "0x13DAE14", VA = "0x13DAE14", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x13DAFD4", Offset = "0x13DAFD4", VA = "0x13DAFD4", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x13DB178", Offset = "0x13DB178", VA = "0x13DB178")]
		private void OnGameStart(GameEvent evt)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x13DB198", Offset = "0x13DB198", VA = "0x13DB198")]
		private void OnGameOver(GameEvent evt)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x13DB1B8", Offset = "0x13DB1B8", VA = "0x13DB1B8")]
		private void OnSettingsDataChanged(object dataObject)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x13DB25C", Offset = "0x13DB25C", VA = "0x13DB25C")]
		protected void Apply(bool flipHands)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x13DB324", Offset = "0x13DB324", VA = "0x13DB324")]
		public PadHologram()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class PadInput : MonoBehaviour
	{
		[Token(Token = "0x20003CF")]
		public enum InputStateType
		{
			[Token(Token = "0x40017D8")]
			Invalid,
			[Token(Token = "0x40017D9")]
			Waiting,
			[Token(Token = "0x40017DA")]
			Ready,
			[Token(Token = "0x40017DB")]
			Complete
		}

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_hitPlanePosition;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_backPlanePosition;

		[NonSerialized]
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_updateInputOnUpdate;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_inputEnabled;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_timeOpen;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Plane m_hitPlane;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Plane m_backPlane;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_positiveHitSide;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_positiveBackSide;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private InputStateType m_inputState;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IHand m_inputHand;

		[Token(Token = "0x17000306")]
		public bool InputEnabled
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x13DB32C", Offset = "0x13DB32C", VA = "0x13DB32C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000307")]
		public InputStateType InputState
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0x13DB334", Offset = "0x13DB334", VA = "0x13DB334")]
			get
			{
				return default(InputStateType);
			}
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x13D9D50", Offset = "0x13D9D50", VA = "0x13D9D50")]
		public void Enable(IHand inputHand)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x13DA144", Offset = "0x13DA144", VA = "0x13DA144")]
		public void Disable()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x13DB33C", Offset = "0x13DB33C", VA = "0x13DB33C")]
		private void Update()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x13DB34C", Offset = "0x13DB34C", VA = "0x13DB34C")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x13DB3CC", Offset = "0x13DB3CC", VA = "0x13DB3CC")]
		private void UpdateInputPlanes()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x13DB4BC", Offset = "0x13DB4BC", VA = "0x13DB4BC")]
		private void UpdateInputState()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x13DB610", Offset = "0x13DB610", VA = "0x13DB610")]
		public bool CanHandInteract(IHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x13DB634", Offset = "0x13DB634", VA = "0x13DB634")]
		public void CompletedInteraction()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x13DB640", Offset = "0x13DB640", VA = "0x13DB640")]
		public PadInput()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class PadInputDetectionTrigger : MonoBehaviour
	{
		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CC7C", Offset = "0xB6CC7C")]
		private bool <IsDetected>k__BackingField;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IPadController m_padController;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_foundPadController;

		[Token(Token = "0x17000308")]
		public bool IsDetected
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x13DB650", Offset = "0x13DB650", VA = "0x13DB650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80698", Offset = "0xB80698")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x13DB658", Offset = "0x13DB658", VA = "0x13DB658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB806A8", Offset = "0xB806A8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x13DB664", Offset = "0x13DB664", VA = "0x13DB664")]
		private void Start()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x13DB780", Offset = "0x13DB780", VA = "0x13DB780")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x13DB788", Offset = "0x13DB788", VA = "0x13DB788", Slot = "4")]
		public virtual void SetDetected(IHand hand, bool isDetected)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x13DB8DC", Offset = "0x13DB8DC", VA = "0x13DB8DC")]
		public PadInputDetectionTrigger()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class PadPullout : MonoBehaviour
	{
		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator m_animator;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform m_centerPos;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_uiOffset;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CC8C", Offset = "0xB6CC8C")]
		private bool <IsOpen>k__BackingField;

		[Token(Token = "0x17000309")]
		public bool IsOpen
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x13DC24C", Offset = "0x13DC24C", VA = "0x13DC24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB806B8", Offset = "0xB806B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x13DC254", Offset = "0x13DC254", VA = "0x13DC254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB806C8", Offset = "0xB806C8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event Action OnPadFinishedClosing
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x13DC260", Offset = "0x13DC260", VA = "0x13DC260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB806D8", Offset = "0xB806D8")]
			add
			{
			}
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x13DC300", Offset = "0x13DC300", VA = "0x13DC300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB806E8", Offset = "0xB806E8")]
			remove
			{
			}
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x13DC3A0", Offset = "0x13DC3A0", VA = "0x13DC3A0")]
		public void Open(PadUIController.PanelType toPanel)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x13DC490", Offset = "0x13DC490", VA = "0x13DC490")]
		public void Close()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x13DC57C", Offset = "0x13DC57C", VA = "0x13DC57C")]
		public void FinishClosing()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x13DC590", Offset = "0x13DC590", VA = "0x13DC590")]
		public PadPullout()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class PadSettingsMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CD98", Offset = "0xB5CD98")]
		private sealed class <>c
		{
			[Token(Token = "0x400180A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400180B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<LanguageButton> <>9__41_0;

			[Token(Token = "0x600157C")]
			[Address(RVA = "0xFB9C58", Offset = "0xFB9C58", VA = "0xFB9C58")]
			public <>c()
			{
			}

			[Token(Token = "0x600157D")]
			[Address(RVA = "0xFB9C60", Offset = "0xFB9C60", VA = "0xFB9C60")]
			internal bool <LoadSavedValues>b__41_0(LanguageButton x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CDA8", Offset = "0xB5CDA8")]
		private sealed class <SwitchPanelWithDelay>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400180C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400180D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400180E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PadSettingsMenu <>4__this;

			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int panelNum;

			[Token(Token = "0x1700030A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001581")]
				[Address(RVA = "0xFB9E34", Offset = "0xFB9E34", VA = "0xFB9E34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001583")]
				[Address(RVA = "0xFB9E7C", Offset = "0xFB9E7C", VA = "0xFB9E7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600157E")]
			[Address(RVA = "0xFB9CDC", Offset = "0xFB9CDC", VA = "0xFB9CDC")]
			[DebuggerHidden]
			public <SwitchPanelWithDelay>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x600157F")]
			[Address(RVA = "0xFB9D08", Offset = "0xFB9D08", VA = "0xFB9D08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001580")]
			[Address(RVA = "0xFB9D0C", Offset = "0xFB9D0C", VA = "0xFB9D0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001582")]
			[Address(RVA = "0xFB9E3C", Offset = "0xFB9E3C", VA = "0xFB9E3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixer m_audioMixer;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CCBC", Offset = "0xB6CCBC")]
		[SerializeField]
		private GameObject[] m_panels;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_panelSwitchDelay;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Slider m_musicSlider;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Slider m_sfxSlider;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Toggle m_blinkToggle;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle m_dashToggle;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle m_smoothMoveToggle;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle m_handBasedMovementToggle;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle m_snapToggle;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle m_smoothToggle;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle m_rightMovementHandsToggle;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle m_leftMovementHandsToggle;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle m_bowAutoReleaseToggle;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle m_bowTrajectoryToggle;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Button m_cancelQuitButton;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Slider m_bowPullingRangeSlider;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Slider m_rotationSpeedSlider;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Slider m_movementSpeedSlider;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle m_offScreenIndicatorDefaultToggle;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Toggle m_offScreenIndicatorShowAllToggle;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Toggle m_offScreenIndicatorOffToggle;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private List<LanguageButton> m_languageButtons;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameObject m_currentPanel;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected SettingsPlayerDataObject m_settingsPlayerDataObject;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_originalMusicVolume;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_originalSfxVolume;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Locomotion.LocomotionController.LocomotionMode m_originalLocomotionMode;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Bow.PullingRange m_originalPullingRange;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_originalAutoRelease;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool m_originalTrajectoryLine;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool m_originalFlipMovementHands;

		[Token(Token = "0x4001804")]
		private const string SfxVolume = "SfxVolume";

		[Token(Token = "0x4001805")]
		private const string MusicVolume = "MusicVolume";

		[Token(Token = "0x4001806")]
		private const string IntroSFX = "IntroSFX";

		[Token(Token = "0x4001807")]
		private const float MuteVolume = -80f;

		[Token(Token = "0x4001808")]
		private const float FloatComparisonTolerance = 0.1f;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool m_isSwitchingPanels;

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x13DC598", Offset = "0x13DC598", VA = "0x13DC598")]
		private void Start()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x13DC65C", Offset = "0x13DC65C", VA = "0x13DC65C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x13DC668", Offset = "0x13DC668", VA = "0x13DC668")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x13DC78C", Offset = "0x13DC78C", VA = "0x13DC78C", Slot = "4")]
		protected virtual void LoadSavedValues()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x13DCC94", Offset = "0x13DCC94", VA = "0x13DCC94")]
		private void SetTeleportMode(Locomotion.LocomotionController.LocomotionMode teleportMode)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x13DCCB0", Offset = "0x13DCCB0", VA = "0x13DCCB0")]
		private void SetRotationMode(Locomotion.LocomotionController.RotationMode rotationMode)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x13DCCCC", Offset = "0x13DCCCC", VA = "0x13DCCCC")]
		private void SetHandBasedMovement(bool isActive)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x13DCCEC", Offset = "0x13DCCEC", VA = "0x13DCCEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB806F8", Offset = "0xB806F8")]
		private IEnumerator SwitchPanelWithDelay(int panelNum)
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x13DCD74", Offset = "0x13DCD74", VA = "0x13DCD74")]
		public void OnMusicVolumeValueChanged(float value)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x13DCE18", Offset = "0x13DCE18", VA = "0x13DCE18")]
		public void OnSfxVolumeValueChanged(float value)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x13DCEE8", Offset = "0x13DCEE8", VA = "0x13DCEE8")]
		public void ChangeBowPullingRange(float value)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x13DCF20", Offset = "0x13DCF20", VA = "0x13DCF20")]
		public void ChangeRotationSpeed(float value)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x13DCF58", Offset = "0x13DCF58", VA = "0x13DCF58")]
		public void ChangeMovementSpeed(float value)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x13DCF74", Offset = "0x13DCF74", VA = "0x13DCF74")]
		public void OnBlinkTeleportValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x13DCF9C", Offset = "0x13DCF9C", VA = "0x13DCF9C")]
		public void OnDashTeleportValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x13DCFC4", Offset = "0x13DCFC4", VA = "0x13DCFC4")]
		public void OnSmoothMovementValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x13DCFEC", Offset = "0x13DCFEC", VA = "0x13DCFEC")]
		public void OnHandBasedMovementChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x13DD00C", Offset = "0x13DD00C", VA = "0x13DD00C")]
		public void OnSnapTurnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x13DD034", Offset = "0x13DD034", VA = "0x13DD034")]
		public void OnSmoothTurnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x13DD05C", Offset = "0x13DD05C", VA = "0x13DD05C")]
		public void OnBowAutoReleaseValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x13DD07C", Offset = "0x13DD07C", VA = "0x13DD07C")]
		public void OnBowTrajectoryLineValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x13DD09C", Offset = "0x13DD09C", VA = "0x13DD09C")]
		public void OnRightMovementHandsValueChanged()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x13DD0BC", Offset = "0x13DD0BC", VA = "0x13DD0BC")]
		public void OnLeftMovementHandsValueChanged()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x13DD0DC", Offset = "0x13DD0DC", VA = "0x13DD0DC")]
		public void OnOffScreenIndicatorDefaultValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x13DD104", Offset = "0x13DD104", VA = "0x13DD104")]
		public void OnOffScreenIndicatorShowAllValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x13DD12C", Offset = "0x13DD12C", VA = "0x13DD12C")]
		public void OnOffScreenIndicatorOffValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x13DD154", Offset = "0x13DD154", VA = "0x13DD154")]
		public void SwitchPanel(int panelNum)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x13DD1AC", Offset = "0x13DD1AC", VA = "0x13DD1AC")]
		public PadSettingsMenu()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class PadStorageController : ObjectStash
	{
		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CDB8", Offset = "0xB5CDB8")]
		private sealed class <OpenCloseInitialize>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400181A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PadStorageController <>4__this;

			[Token(Token = "0x1700030C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600159C")]
				[Address(RVA = "0xFB9FD0", Offset = "0xFB9FD0", VA = "0xFB9FD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600159E")]
				[Address(RVA = "0xFBA018", Offset = "0xFBA018", VA = "0xFBA018", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001599")]
			[Address(RVA = "0xFB9E84", Offset = "0xFB9E84", VA = "0xFB9E84")]
			[DebuggerHidden]
			public <OpenCloseInitialize>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600159A")]
			[Address(RVA = "0xFB9EB0", Offset = "0xFB9EB0", VA = "0xFB9EB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600159B")]
			[Address(RVA = "0xFB9EB4", Offset = "0xFB9EB4", VA = "0xFB9EB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600159D")]
			[Address(RVA = "0xFB9FD8", Offset = "0xFB9FD8", VA = "0xFB9FD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CE58", Offset = "0xB6CE58")]
		public PadController m_padController;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Grabbable m_padGrabbable;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CE90", Offset = "0xB6CE90")]
		public Transform m_padCanvasParent;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Canvas m_padCanvas;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_initialized;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_gameInProgress;

		[Token(Token = "0x14000056")]
		public static event Action OnPadOpened
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x13DD900", Offset = "0x13DD900", VA = "0x13DD900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB807A8", Offset = "0xB807A8")]
			add
			{
			}
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x13DD9BC", Offset = "0x13DD9BC", VA = "0x13DD9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB807B8", Offset = "0xB807B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public static event Action OnPadClosed
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x13DDA78", Offset = "0x13DDA78", VA = "0x13DDA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB807C8", Offset = "0xB807C8")]
			add
			{
			}
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x13DDB38", Offset = "0x13DDB38", VA = "0x13DDB38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB807D8", Offset = "0xB807D8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x13DDBF8", Offset = "0x13DDBF8", VA = "0x13DDBF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x13DDBFC", Offset = "0x13DDBFC", VA = "0x13DDBFC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x13DDEC8", Offset = "0x13DDEC8", VA = "0x13DDEC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x13DE01C", Offset = "0x13DE01C", VA = "0x13DE01C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x13DDE50", Offset = "0x13DDE50", VA = "0x13DDE50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB807E8", Offset = "0xB807E8")]
		private IEnumerator OpenCloseInitialize()
		{
			return null;
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x13DE2B0", Offset = "0x13DE2B0", VA = "0x13DE2B0")]
		private void OnSettingsPressed()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x13DEA68", Offset = "0x13DEA68", VA = "0x13DEA68")]
		public void InvokePadClosed()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x13DE32C", Offset = "0x13DE32C", VA = "0x13DE32C")]
		public void ClosePad(bool forceClose = false)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x13DE6EC", Offset = "0x13DE6EC", VA = "0x13DE6EC")]
		public void OpenPad([Optional] IHand hand)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x13DEAC8", Offset = "0x13DEAC8", VA = "0x13DEAC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x13DED14", Offset = "0x13DED14", VA = "0x13DED14")]
		private void OnGameStart(GameEvent evt)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x13DED5C", Offset = "0x13DED5C", VA = "0x13DED5C")]
		private void OnGameOver(GameEvent evt)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x13DED64", Offset = "0x13DED64", VA = "0x13DED64")]
		private void OnPadReleased()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x13DED78", Offset = "0x13DED78", VA = "0x13DED78", Slot = "4")]
		public override bool Stash(Grabbable grabbable, [Optional] Hands.Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x13DEE4C", Offset = "0x13DEE4C", VA = "0x13DEE4C", Slot = "5")]
		public override Grabbable Unstash([Optional] Grabbable grabbable, [Optional] Hands.Hand hand)
		{
			return null;
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x13DEEF4", Offset = "0x13DEEF4", VA = "0x13DEEF4", Slot = "6")]
		public override bool CanStash(Hands.Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x13DF064", Offset = "0x13DF064", VA = "0x13DF064")]
		public PadStorageController()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class PadUIController : MonoBehaviour
	{
		[Token(Token = "0x20003D8")]
		public enum PanelType
		{
			[Token(Token = "0x400183B")]
			Main,
			[Token(Token = "0x400183C")]
			Map,
			[Token(Token = "0x400183D")]
			Mission,
			[Token(Token = "0x400183E")]
			Armory,
			[Token(Token = "0x400183F")]
			Settings,
			[Token(Token = "0x4001840")]
			Customization,
			[Token(Token = "0x4001841")]
			Multiplayer
		}

		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CDC8", Offset = "0xB5CDC8")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4001842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PanelType notificationType;

			[Token(Token = "0x60015B5")]
			[Address(RVA = "0xFBA020", Offset = "0xFBA020", VA = "0xFBA020")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x60015B6")]
			[Address(RVA = "0xFBA028", Offset = "0xFBA028", VA = "0xFBA028")]
			internal bool <RemoveAllNotifications>b__0(PanelType x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CDD8", Offset = "0xB5CDD8")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PanelType toType;

			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xFBA038", Offset = "0xFBA038", VA = "0xFBA038")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60015B8")]
			[Address(RVA = "0xFBA040", Offset = "0xFBA040", VA = "0xFBA040")]
			internal bool <SwitchPanel>b__0(PadUIPanel x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CDE8", Offset = "0xB5CDE8")]
		private sealed class <InitAndOpenAllPanels>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PadUIController <>4__this;

			[Token(Token = "0x4001847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<PadUIPanel>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000310")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015BE")]
				[Address(RVA = "0xFBA6AC", Offset = "0xFBA6AC", VA = "0xFBA6AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000311")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015C0")]
				[Address(RVA = "0xFBA6F4", Offset = "0xFBA6F4", VA = "0xFBA6F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015B9")]
			[Address(RVA = "0xFBA064", Offset = "0xFBA064", VA = "0xFBA064")]
			[DebuggerHidden]
			public <InitAndOpenAllPanels>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x60015BA")]
			[Address(RVA = "0xFBA090", Offset = "0xFBA090", VA = "0xFBA090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015BB")]
			[Address(RVA = "0xFBA1D4", Offset = "0xFBA1D4", VA = "0xFBA1D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015BC")]
			[Address(RVA = "0xFBA12C", Offset = "0xFBA12C", VA = "0xFBA12C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xFBA180", Offset = "0xFBA180", VA = "0xFBA180")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60015BF")]
			[Address(RVA = "0xFBA6B4", Offset = "0xFBA6B4", VA = "0xFBA6B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PadStorageController m_padStorageController;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncedPadControllerLocal m_syncedPadControllerLocal;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_padController;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MissionDisplayManager m_missionDisplayManager;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<PadUIPanel> m_panels;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PadUIPanel m_activePanel;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PadPullout m_backPullout;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PadPullout m_frontPullout;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CEE8", Offset = "0xB6CEE8")]
		public Color m_braceletGlowColor;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_braceletPulseFrequency;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Ease m_braceletPulseEase;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshRenderer[] m_braceletRenderers;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject[] m_braceletsEffects;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_vibrateOnPulse;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ControllerInputBase.VibrationSettingsCurve m_pulseVibration;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<AreaManager.AreaType> m_areaButtonTypes;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IPadController m_padControllerInterface;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Color m_currentGlowColor;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Tween m_pulseTween;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private PadPullout m_activePullout;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<PanelType> m_notifications;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int m_pulseLoopCount;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GameManager m_currentGame;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_originalPos;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material m_braceletMaterial;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int s_useGlow;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int s_glow;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static PanelType CurrentPanel;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static PadUIController Instance;

		[Token(Token = "0x1700030E")]
		public IPadController PadController
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x13DB714", Offset = "0x13DB714", VA = "0x13DB714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public bool NotificationsActive
		{
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x13DF06C", Offset = "0x13DF06C", VA = "0x13DF06C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000058")]
		public static event Action<PanelType, PadPullout> OnPanelSwitched
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x13DD348", Offset = "0x13DD348", VA = "0x13DD348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80898", Offset = "0xB80898")]
			add
			{
			}
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x13DD64C", Offset = "0x13DD64C", VA = "0x13DD64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB808A8", Offset = "0xB808A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public static event Action<PanelType, bool> OnNotificationUpdated
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x13DD43C", Offset = "0x13DD43C", VA = "0x13DD43C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB808B8", Offset = "0xB808B8")]
			add
			{
			}
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x13DD740", Offset = "0x13DD740", VA = "0x13DD740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB808C8", Offset = "0xB808C8")]
			remove
			{
			}
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x13DF0C0", Offset = "0x13DF0C0", VA = "0x13DF0C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x13DF86C", Offset = "0x13DF86C", VA = "0x13DF86C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x13DF690", Offset = "0x13DF690", VA = "0x13DF690")]
		private void SetupMissionNotifications()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x13DFC34", Offset = "0x13DFC34", VA = "0x13DFC34")]
		private void AddNotification(PanelType notificationType)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x13DFFE8", Offset = "0x13DFFE8", VA = "0x13DFFE8")]
		private void RemoveNotification(PanelType notificationType)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x13DFAB8", Offset = "0x13DFAB8", VA = "0x13DFAB8")]
		private void RemoveAllNotifications(PanelType notificationType)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x13DFD0C", Offset = "0x13DFD0C", VA = "0x13DFD0C")]
		private void SetBraceletGlowActive(bool toActive)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x13E0100", Offset = "0x13E0100", VA = "0x13E0100")]
		private void VibratePulse()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x13E040C", Offset = "0x13E040C", VA = "0x13E040C")]
		private void OnMissionCompleted(Mission mission)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x13E0414", Offset = "0x13E0414", VA = "0x13E0414")]
		private void OnMissionCollected(Mission mission)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x13E0498", Offset = "0x13E0498", VA = "0x13E0498")]
		private void OnAreaUnlocked(AreaManager.AreaType areaType)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x13E051C", Offset = "0x13E051C", VA = "0x13E051C")]
		private void OnItemUnlocked()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x13DA14C", Offset = "0x13DA14C", VA = "0x13DA14C")]
		public void SwitchPanel(PanelType toType)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x13DF7F4", Offset = "0x13DF7F4", VA = "0x13DF7F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB808D8", Offset = "0xB808D8")]
		public IEnumerator InitAndOpenAllPanels()
		{
			return null;
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x13E0524", Offset = "0x13E0524", VA = "0x13E0524")]
		public PadUIController()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class PadUIElement : TouchableUI
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IPadController m_padController;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_ignoreDetectionMask;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool m_checkCurrentPanel;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public PadUIController.PanelType m_thisPanelType;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_inDetectionMask;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		protected bool m_foundPadController;

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x13E0648", Offset = "0x13E0648", VA = "0x13E0648", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x13E07A0", Offset = "0x13E07A0", VA = "0x13E07A0", Slot = "6")]
		public override void TouchUI(IHand hand, bool forceInteracted = false)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x13E0B38", Offset = "0x13E0B38", VA = "0x13E0B38", Slot = "7")]
		public override void StayInUI(IHand handIn)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x13E0A70", Offset = "0x13E0A70", VA = "0x13E0A70")]
		private bool InDetection()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x13E0D60", Offset = "0x13E0D60", VA = "0x13E0D60")]
		public PadUIElement()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class PadUIElementClick : PadUIElement
	{
		[Token(Token = "0x20003DE")]
		[Flags]
		public enum ClickDirectionAllowed
		{
			[Token(Token = "0x400185B")]
			Forward = 1,
			[Token(Token = "0x400185C")]
			Backward = 2,
			[Token(Token = "0x400185D")]
			Right = 4,
			[Token(Token = "0x400185E")]
			Left = 8,
			[Token(Token = "0x400185F")]
			Up = 0x10,
			[Token(Token = "0x4001860")]
			Down = 0x20
		}

		[Serializable]
		[Token(Token = "0x20003DF")]
		public class ClickEffect
		{
			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image m_image;

			[NonSerialized]
			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color m_colorBeforeFirstTouch;

			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color m_pressedColor;

			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DOTweenAnimation m_pressedAnimation;

			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public DOTweenAnimation m_releasedAnimation;

			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xFBA6FC", Offset = "0xFBA6FC", VA = "0xFBA6FC")]
			public ClickEffect()
			{
			}
		}

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public ClickDirectionAllowed m_clickDirectionAllowed;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_clickMaxTime;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_directionSensitivity;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_exitDirectionSensitivity;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PadUIScrollRect m_padUIScrollRect;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_parentAllowedMovement;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ClickEffect[] m_clickEffects;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float m_touchTime;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool m_validEnterDirection;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 m_enterDirection;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_doneFirstTouch;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		private bool m_clickCanceled;

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x13E0D68", Offset = "0x13E0D68", VA = "0x13E0D68", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x13E0D74", Offset = "0x13E0D74", VA = "0x13E0D74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x13E0F0C", Offset = "0x13E0F0C", VA = "0x13E0F0C", Slot = "6")]
		public override void TouchUI(IHand handTouched, bool forceInteracted = false)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x13E1638", Offset = "0x13E1638", VA = "0x13E1638", Slot = "7")]
		public override void StayInUI(IHand handIn)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x13E169C", Offset = "0x13E169C", VA = "0x13E169C")]
		public void CancelClick()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x13E17F4", Offset = "0x13E17F4", VA = "0x13E17F4")]
		private void OnScrollMoveAttempt(Vector2 move)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x13E1840", Offset = "0x13E1840", VA = "0x13E1840", Slot = "8")]
		public override void ReleaseUI(IHand handReleased)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x13E11AC", Offset = "0x13E11AC", VA = "0x13E11AC")]
		private bool IsDirectionValid(Vector3 direction)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x13E1C3C", Offset = "0x13E1C3C", VA = "0x13E1C3C")]
		private Vector3 GetUIDirection(ClickDirectionAllowed clickDirectionAllowed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x13E1D2C", Offset = "0x13E1D2C", VA = "0x13E1D2C")]
		public PadUIElementClick()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class PadUIPanel : MonoBehaviour
	{
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator m_animator;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas m_padDisplayHolder;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_padDisplayHolderRect;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PadUIController m_padUIController;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PadUIController.PanelType m_panelType;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image m_notification;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button m_openButton;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image m_openButtonImage;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_useReturnImage;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI m_openButtonText;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image m_openButtonReturnImage;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent m_onOpened;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent m_onClosed;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent m_onPadClosed;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent m_onPadOpened;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_isOpen;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 m_initialButtonLocalPosition;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 m_initialPanelLocalPosition;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector2 m_initialContentAnchoredPosition;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 m_contentLocalPosition;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private PadPullout m_currentPullout;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_timeOpen;

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x13E1D4C", Offset = "0x13E1D4C", VA = "0x13E1D4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x13E1EF0", Offset = "0x13E1EF0", VA = "0x13E1EF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x13E21F4", Offset = "0x13E21F4", VA = "0x13E21F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x13E2234", Offset = "0x13E2234", VA = "0x13E2234")]
		private void OnPadPanelSwitched(PadUIController.PanelType panelType, PadPullout pullout)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x13E28F8", Offset = "0x13E28F8", VA = "0x13E28F8")]
		private void OnNotificationUpdated(PadUIController.PanelType panelType, bool notificationActive)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x13E2728", Offset = "0x13E2728", VA = "0x13E2728")]
		private void ResetPositions()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x13E29A8", Offset = "0x13E29A8", VA = "0x13E29A8")]
		public void OnPadClosed()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x13E29F4", Offset = "0x13E29F4", VA = "0x13E29F4")]
		public void OnPadOpened()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x13E2ACC", Offset = "0x13E2ACC", VA = "0x13E2ACC")]
		public void Initialize(PadUIController controller)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x13E2CBC", Offset = "0x13E2CBC", VA = "0x13E2CBC")]
		public void SwitchToThisPanel()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x13E2CDC", Offset = "0x13E2CDC", VA = "0x13E2CDC")]
		public void ToggleThisPanel()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x13E2D24", Offset = "0x13E2D24", VA = "0x13E2D24")]
		public PadUIPanel()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class PadUIScrollRect : TouchableUI
	{
		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ScrollRect m_scrollRect;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RectTransform m_scrollRectContent;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ScrollRectScroller m_scroller;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_sensitivity;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float m_maxSpeed;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_deceleration;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_deadZone;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IPadController m_padController;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_checkCurrentPanel;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public PadUIController.PanelType m_thisPanelType;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 m_initialPosition;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 m_currentPosition;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_movementDirection;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 m_releasedDirection;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_endDirection;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_initialScrollVertical;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_initialScrollHorizontal;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_currentScrollVertical;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_currentScrollSpeed;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_releasedScrollValue;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_wantedScrollValue;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_decelerationTime;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_currentScrollValue;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_previousScrollValue;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IHand m_activeHand;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private PointerEventData m_pointerEventData;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_foundPadController;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_passedDeadZone;

		[Token(Token = "0x1400005A")]
		public event Action<Vector2> m_moveAttempt
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0x13E1598", Offset = "0x13E1598", VA = "0x13E1598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80988", Offset = "0xB80988")]
			add
			{
			}
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0x13E0E6C", Offset = "0x13E0E6C", VA = "0x13E0E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80998", Offset = "0xB80998")]
			remove
			{
			}
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x13E2D2C", Offset = "0x13E2D2C", VA = "0x13E2D2C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x13E2E84", Offset = "0x13E2E84", VA = "0x13E2E84", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x13E2E88", Offset = "0x13E2E88", VA = "0x13E2E88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x13E2E98", Offset = "0x13E2E98", VA = "0x13E2E98")]
		private void Update()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x13E30A0", Offset = "0x13E30A0", VA = "0x13E30A0")]
		private void ApplyScrollSpeed(float amount, bool additive = false)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x13E31E8", Offset = "0x13E31E8", VA = "0x13E31E8", Slot = "6")]
		public override void TouchUI(IHand hand, bool forceInteracted = false)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x13E35F8", Offset = "0x13E35F8", VA = "0x13E35F8", Slot = "7")]
		public override void StayInUI(IHand handIn)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x13E3818", Offset = "0x13E3818", VA = "0x13E3818", Slot = "8")]
		public override void ReleaseUI(IHand hand)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x13E3898", Offset = "0x13E3898", VA = "0x13E3898")]
		public PadUIScrollRect()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5CE08", Offset = "0xB5CE08")]
	public class PadUISlider : TouchableUI
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IPadController m_padController;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RectTransform m_rectTransform;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Slider m_slider;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_sliderTransform;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IHand m_activeHand;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_initialPosition;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_currentPosition;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_initialSliderValue;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 m_movementDirection;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_foundPadController;

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x13E38B4", Offset = "0x13E38B4", VA = "0x13E38B4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x13E3A58", Offset = "0x13E3A58", VA = "0x13E3A58", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x13E3A5C", Offset = "0x13E3A5C", VA = "0x13E3A5C", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x13E3BCC", Offset = "0x13E3BCC", VA = "0x13E3BCC", Slot = "6")]
		public override void TouchUI(IHand hand, bool forceInteracted = false)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x13E3F2C", Offset = "0x13E3F2C", VA = "0x13E3F2C", Slot = "7")]
		public override void StayInUI(IHand handIn)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x13E414C", Offset = "0x13E414C", VA = "0x13E414C", Slot = "8")]
		public override void ReleaseUI(IHand hand)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x13E41A8", Offset = "0x13E41A8", VA = "0x13E41A8")]
		public PadUISlider()
		{
		}
	}
}
namespace ObjectPooling
{
	[Token(Token = "0x20003E3")]
	public class ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x20003E4")]
		public enum EmptyPoolBehaviour
		{
			[Token(Token = "0x40018B8")]
			ReturnNull,
			[Token(Token = "0x40018B9")]
			GrowByOne,
			[Token(Token = "0x40018BA")]
			DoubleSize,
			[Token(Token = "0x40018BB")]
			CustomStrategy
		}

		[Token(Token = "0x20003E5")]
		[Flags]
		public enum Purpose
		{
			[Token(Token = "0x40018BD")]
			SinglePlayer = 1,
			[Token(Token = "0x40018BE")]
			MultiPlayer = 2
		}

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_size;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PooledObject m_prefab;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetVariationPrefab m_variationPrefab;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_resetTransformWhenRecycle;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_requireShaderPreloading;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EmptyPoolBehaviour m_emptyPoolBehaviour;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Purpose m_purpose;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6CF50", Offset = "0xB6CF50")]
		public PooledObjectRecyclingStrategy m_recycleStrategy;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6CF88", Offset = "0xB6CF88")]
		public List<PooledObjectRecyclingFilter> m_recyclingFilters;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected readonly List<PooledObject> m_pool;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected readonly HashSet<PooledObject> m_objectsOutOfPool;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected readonly HashSet<PooledObject> m_recycledObjects;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int m_recycledObjectCount;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int m_actualSpawnCount;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PooledObject m_cachedPooledObj;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_cachedPooledObjTransform;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_cachedPrefabTransform;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<PooledObject> m_recyclableObjects;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<int, ObjectPool> s_objectPools;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<int, ObjectPool> s_assetVariationPrefabs;

		[Token(Token = "0x17000312")]
		public bool IsEmpty
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0x18438C0", Offset = "0x18438C0", VA = "0x18438C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x1843914", Offset = "0x1843914", VA = "0x1843914")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1843C98", Offset = "0x1843C98", VA = "0x1843C98")]
		private void Clear()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x1843F64", Offset = "0x1843F64", VA = "0x1843F64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x18440F0", Offset = "0x18440F0", VA = "0x18440F0", Slot = "4")]
		protected virtual bool PopulateEmptyPool()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x18446A8", Offset = "0x18446A8", VA = "0x18446A8")]
		public void ReParentRecycledObjects()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x1843BA0", Offset = "0x1843BA0", VA = "0x1843BA0")]
		public void SetupPool(PooledObject prefab)
		{
		}

		[Token(Token = "0x60015F6")]
		public static ObjectPool GetPool<T>(T prefab) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60015F7")]
		public static T GetObject<T>(AssetVariationPrefab assetVariationPrefab, [Optional] Transform parent) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x18448E0", Offset = "0x18448E0", VA = "0x18448E0")]
		public static GameObject GetObject(AssetVariationPrefab assetVariationPrefab, [Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60015F9")]
		public static T GetObject<T>(T prefab, [Optional] Transform parent) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		public static T GetObject<T>(T prefab, Vector3 position, Quaternion rotation, [Optional] Transform parent) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x1844D5C", Offset = "0x1844D5C", VA = "0x1844D5C")]
		public static GameObject GetObject(GameObject prefab, [Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x1844DFC", Offset = "0x1844DFC", VA = "0x1844DFC")]
		public static GameObject GetObject(GameObject prefab, Vector3? position, Quaternion? rotation, [Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x1844A28", Offset = "0x1844A28", VA = "0x1844A28")]
		public GameObject GetObject([Optional] Vector3? position, [Optional] Quaternion? rotation, [Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x18450D0", Offset = "0x18450D0", VA = "0x18450D0")]
		public static void ApplyPurpose(Purpose purpose)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x1844330", Offset = "0x1844330", VA = "0x1844330")]
		protected void InstantiateNewObjects(uint count)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x1845250", Offset = "0x1845250", VA = "0x1845250")]
		public void RecycleObject(PooledObject obj, bool reparent)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x18455D8", Offset = "0x18455D8", VA = "0x18455D8")]
		public void RemoveFromPool(PooledObject obj)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x18458B0", Offset = "0x18458B0", VA = "0x18458B0")]
		public bool CanSpawnFromPool()
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x1845AA8", Offset = "0x1845AA8", VA = "0x1845AA8")]
		public ObjectPool()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x1845CBC", Offset = "0x1845CBC", VA = "0x1845CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB809A8", Offset = "0xB809A8")]
		private void <Awake>b__24_0(GameObject gameObj)
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class ObjectPoolManger : MonoBehaviour
	{
		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectPool[] m_objectPools;

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x1846044", Offset = "0x1846044", VA = "0x1846044")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x18460A0", Offset = "0x18460A0", VA = "0x18460A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x1846108", Offset = "0x1846108", VA = "0x1846108")]
		public ObjectPoolManger()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class PooledObject : MonoBehaviour
	{
		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CE78", Offset = "0xB5CE78")]
		private sealed class <RecycleAfterDelayCor>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40018C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PooledObject <>4__this;

			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool reparent;

			[Token(Token = "0x17000314")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600161B")]
				[Address(RVA = "0xFC3A10", Offset = "0xFC3A10", VA = "0xFC3A10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000315")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600161D")]
				[Address(RVA = "0xFC3A58", Offset = "0xFC3A58", VA = "0xFC3A58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001618")]
			[Address(RVA = "0xFC3920", Offset = "0xFC3920", VA = "0xFC3920")]
			[DebuggerHidden]
			public <RecycleAfterDelayCor>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001619")]
			[Address(RVA = "0xFC394C", Offset = "0xFC394C", VA = "0xFC394C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600161A")]
			[Address(RVA = "0xFC3950", Offset = "0xFC3950", VA = "0xFC3950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600161C")]
			[Address(RVA = "0xFC3A18", Offset = "0xFC3A18", VA = "0xFC3A18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectPool m_pool;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_activationTime;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CFD0", Offset = "0xB6CFD0")]
		private bool <IsInPool>k__BackingField;

		[Token(Token = "0x17000313")]
		public bool IsInPool
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xFF6368", Offset = "0xFF6368", VA = "0xFF6368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB809D8", Offset = "0xB809D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xFF6370", Offset = "0xFF6370", VA = "0xFF6370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB809E8", Offset = "0xB809E8")]
			private set
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event Action OnRecycle
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0xFF6228", Offset = "0xFF6228", VA = "0xFF6228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB809B8", Offset = "0xB809B8")]
			add
			{
			}
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xFF62C8", Offset = "0xFF62C8", VA = "0xFF62C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB809C8", Offset = "0xB809C8")]
			remove
			{
			}
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xFF637C", Offset = "0xFF637C", VA = "0xFF637C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xFF6388", Offset = "0xFF6388", VA = "0xFF6388")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xFF641C", Offset = "0xFF641C", VA = "0xFF641C")]
		public void Init(ObjectPool pool)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xFF646C", Offset = "0xFF646C", VA = "0xFF646C")]
		public void Recycle()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xFF6474", Offset = "0xFF6474", VA = "0xFF6474")]
		public void Recycle(bool reparent)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xFF6584", Offset = "0xFF6584", VA = "0xFF6584")]
		public void RecycleAfterDelay(float delay, bool reparent)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xFF65B4", Offset = "0xFF65B4", VA = "0xFF65B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB809F8", Offset = "0xB809F8")]
		private IEnumerator RecycleAfterDelayCor(float delay, bool reparent)
		{
			return null;
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xFF6650", Offset = "0xFF6650", VA = "0xFF6650")]
		public bool IsOwnedBy(ObjectPool pool)
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xFF66C8", Offset = "0xFF66C8", VA = "0xFF66C8")]
		public void RemovePoolOwnership()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xFF66D4", Offset = "0xFF66D4", VA = "0xFF66D4")]
		public float GetObjectAge()
		{
			return default(float);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xFF6710", Offset = "0xFF6710", VA = "0xFF6710")]
		public PooledObject()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5CE88", Offset = "0xB5CE88")]
	public class PooledObjectRecycleAfterDelay : MonoBehaviour
	{
		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CEE8", Offset = "0xB5CEE8")]
		private sealed class <RecycleCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PooledObjectRecycleAfterDelay <>4__this;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600162A")]
				[Address(RVA = "0xFC3B28", Offset = "0xFC3B28", VA = "0xFC3B28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600162C")]
				[Address(RVA = "0xFC3B70", Offset = "0xFC3B70", VA = "0xFC3B70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001627")]
			[Address(RVA = "0xFC3A60", Offset = "0xFC3A60", VA = "0xFC3A60")]
			[DebuggerHidden]
			public <RecycleCoroutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001628")]
			[Address(RVA = "0xFC3A8C", Offset = "0xFC3A8C", VA = "0xFC3A8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001629")]
			[Address(RVA = "0xFC3A90", Offset = "0xFC3A90", VA = "0xFC3A90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600162B")]
			[Address(RVA = "0xFC3B30", Offset = "0xFC3B30", VA = "0xFC3B30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_delay;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool m_startTimerOnEnable;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PooledObject m_pooledObject;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_remainingLife;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_waitingToRecycle;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6CFE0", Offset = "0xB6CFE0")]
		private float <DtMultiplier>k__BackingField;

		[Token(Token = "0x17000316")]
		public float DtMultiplier
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0xFF6718", Offset = "0xFF6718", VA = "0xFF6718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80AA8", Offset = "0xB80AA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600161F")]
			[Address(RVA = "0xFF6720", Offset = "0xFF6720", VA = "0xFF6720")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80AB8", Offset = "0xB80AB8")]
			set
			{
			}
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xFF6728", Offset = "0xFF6728", VA = "0xFF6728")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xFF6784", Offset = "0xFF6784", VA = "0xFF6784")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xFF67B4", Offset = "0xFF67B4", VA = "0xFF67B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xFF67BC", Offset = "0xFF67BC", VA = "0xFF67BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xFF67A0", Offset = "0xFF67A0", VA = "0xFF67A0")]
		public void RecycleAfterDelay()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xFF6824", Offset = "0xFF6824", VA = "0xFF6824")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB80AC8", Offset = "0xB80AC8")]
		private IEnumerator RecycleCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xFF689C", Offset = "0xFF689C", VA = "0xFF689C")]
		public PooledObjectRecycleAfterDelay()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class PooledObjectRecycleOnEnter : StateMachineBehaviour
	{
		[Token(Token = "0x600162D")]
		[Address(RVA = "0xFF68B4", Offset = "0xFF68B4", VA = "0xFF68B4", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xFF696C", Offset = "0xFF696C", VA = "0xFF696C")]
		public PooledObjectRecycleOnEnter()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public abstract class PooledObjectRecyclingFilter : MonoBehaviour
	{
		[Token(Token = "0x600162F")]
		public abstract void FilterList(List<PooledObject> activeObjects);

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xFF6974", Offset = "0xFF6974", VA = "0xFF6974")]
		protected PooledObjectRecyclingFilter()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class PooledObjectRecyclingFilterDistanceToObject : PooledObjectRecyclingFilter
	{
		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform m_object;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_distanceToFilterUnder;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_sqrDist;

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xFF697C", Offset = "0xFF697C", VA = "0xFF697C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xFF698C", Offset = "0xFF698C", VA = "0xFF698C", Slot = "4")]
		public override void FilterList(List<PooledObject> activeObjects)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xFF6A48", Offset = "0xFF6A48", VA = "0xFF6A48")]
		public PooledObjectRecyclingFilterDistanceToObject()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xFF6A50", Offset = "0xFF6A50", VA = "0xFF6A50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80B78", Offset = "0xB80B78")]
		private bool <FilterList>b__4_0(PooledObject obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003EE")]
	public class PooledObjectRecyclingFilterObjectAge : PooledObjectRecyclingFilter
	{
		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_minimumAge;

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xFF6AF4", Offset = "0xFF6AF4", VA = "0xFF6AF4", Slot = "4")]
		public override void FilterList(List<PooledObject> activeObjects)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xFF6BB0", Offset = "0xFF6BB0", VA = "0xFF6BB0")]
		public PooledObjectRecyclingFilterObjectAge()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xFF6BC0", Offset = "0xFF6BC0", VA = "0xFF6BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80B88", Offset = "0xB80B88")]
		private bool <FilterList>b__1_0(PooledObject obj)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003EF")]
	public class PooledObjectRecyclingFilterObjectGrabbed : PooledObjectRecyclingFilter
	{
		[Serializable]
		[Token(Token = "0x20003F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CEF8", Offset = "0xB5CEF8")]
		private sealed class <>c
		{
			[Token(Token = "0x40018D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<PooledObject> <>9__0_0;

			[Token(Token = "0x600163B")]
			[Address(RVA = "0xFC3BDC", Offset = "0xFC3BDC", VA = "0xFC3BDC")]
			public <>c()
			{
			}

			[Token(Token = "0x600163C")]
			[Address(RVA = "0xFC3BE4", Offset = "0xFC3BE4", VA = "0xFC3BE4")]
			internal bool <FilterList>b__0_0(PooledObject obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xFF6C10", Offset = "0xFF6C10", VA = "0xFF6C10", Slot = "4")]
		public override void FilterList(List<PooledObject> activeObjects)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xFF6D38", Offset = "0xFF6D38", VA = "0xFF6D38")]
		public PooledObjectRecyclingFilterObjectGrabbed()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class PooledObjectRecyclingFilterParentToAnyPlayer : PooledObjectRecyclingFilter
	{
		[Serializable]
		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CF08", Offset = "0xB5CF08")]
		private sealed class <>c
		{
			[Token(Token = "0x40018D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<PooledObject> <>9__0_0;

			[Token(Token = "0x6001640")]
			[Address(RVA = "0xFC3D38", Offset = "0xFC3D38", VA = "0xFC3D38")]
			public <>c()
			{
			}

			[Token(Token = "0x6001641")]
			[Address(RVA = "0xFC3D40", Offset = "0xFC3D40", VA = "0xFC3D40")]
			internal bool <FilterList>b__0_0(PooledObject obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xFF6D40", Offset = "0xFF6D40", VA = "0xFF6D40", Slot = "4")]
		public override void FilterList(List<PooledObject> activeObjects)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xFF6E68", Offset = "0xFF6E68", VA = "0xFF6E68")]
		public PooledObjectRecyclingFilterParentToAnyPlayer()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class PooledObjectRecyclingFilterParentedToPlayer : PooledObjectRecyclingFilter
	{
		[Serializable]
		[Token(Token = "0x20003F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CF18", Offset = "0xB5CF18")]
		private sealed class <>c
		{
			[Token(Token = "0x40018DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<PooledObject> <>9__0_0;

			[Token(Token = "0x6001645")]
			[Address(RVA = "0xFC3EB0", Offset = "0xFC3EB0", VA = "0xFC3EB0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001646")]
			[Address(RVA = "0xFC3EB8", Offset = "0xFC3EB8", VA = "0xFC3EB8")]
			internal bool <FilterList>b__0_0(PooledObject obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xFF6E70", Offset = "0xFF6E70", VA = "0xFF6E70", Slot = "4")]
		public override void FilterList(List<PooledObject> activeObjects)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xFF6F98", Offset = "0xFF6F98", VA = "0xFF6F98")]
		public PooledObjectRecyclingFilterParentedToPlayer()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public abstract class PooledObjectRecyclingStrategy : ScriptableObject
	{
		[Token(Token = "0x6001647")]
		public abstract PooledObject PickObjectToRecycle(List<PooledObject> activeObjects);

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xFF6FA0", Offset = "0xFF6FA0", VA = "0xFF6FA0")]
		protected PooledObjectRecyclingStrategy()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5CF28", Offset = "0xB5CF28")]
	public class PooledObjectRecyclingStrategyInactiveFurthestBehindPlayer : PooledObjectRecyclingStrategy
	{
		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CF6C", Offset = "0xB5CF6C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 playerPos;

			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 playerForward;

			[Token(Token = "0x600164B")]
			[Address(RVA = "0xFC3FD4", Offset = "0xFC3FD4", VA = "0xFC3FD4")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600164C")]
			[Address(RVA = "0xFC3FDC", Offset = "0xFC3FDC", VA = "0xFC3FDC")]
			internal int <PickObjectToRecycle>b__0(PooledObject lhs, PooledObject rhs)
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xFF6FA8", Offset = "0xFF6FA8", VA = "0xFF6FA8", Slot = "4")]
		public override PooledObject PickObjectToRecycle(List<PooledObject> recyclableObjects)
		{
			return null;
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xFF7400", Offset = "0xFF7400", VA = "0xFF7400")]
		public PooledObjectRecyclingStrategyInactiveFurthestBehindPlayer()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5CF7C", Offset = "0xB5CF7C")]
	public class PooledObjectRecyclingStrategyOldest : PooledObjectRecyclingStrategy
	{
		[Serializable]
		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5CFC0", Offset = "0xB5CFC0")]
		private sealed class <>c
		{
			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<PooledObject> <>9__0_0;

			[Token(Token = "0x6001650")]
			[Address(RVA = "0xFC4300", Offset = "0xFC4300", VA = "0xFC4300")]
			public <>c()
			{
			}

			[Token(Token = "0x6001651")]
			[Address(RVA = "0xFC4308", Offset = "0xFC4308", VA = "0xFC4308")]
			internal int <PickObjectToRecycle>b__0_0(PooledObject lhs, PooledObject rhs)
			{
				return default(int);
			}
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xFF7408", Offset = "0xFF7408", VA = "0xFF7408", Slot = "4")]
		public override PooledObject PickObjectToRecycle(List<PooledObject> recyclableObjects)
		{
			return null;
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xFF7770", Offset = "0xFF7770", VA = "0xFF7770")]
		public PooledObjectRecyclingStrategyOldest()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class PooledObjectSpawner : MonoBehaviour
	{
		[Token(Token = "0x20003FB")]
		public enum SpawnEvent
		{
			[Token(Token = "0x40018E7")]
			None,
			[Token(Token = "0x40018E8")]
			OnStart,
			[Token(Token = "0x40018E9")]
			OnEnable
		}

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6CFF0", Offset = "0xB6CFF0")]
		public PooledObject m_objectPrefab;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnEvent m_spawnEvent;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D028", Offset = "0xB6D028")]
		public GameObject m_spawnEffectPrefab;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6D060", Offset = "0xB6D060")]
		public MeshRenderer m_spawnEffectVisibleRenderer;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected PooledObject m_spawnedObject;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IGrabbable m_spawnedGrabbable;

		[Token(Token = "0x17000319")]
		public IGrabbable SpawnedGrabbable
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0xFF7778", Offset = "0xFF7778", VA = "0xFF7778")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xFF7780", Offset = "0xFF7780", VA = "0xFF7780", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xFF77A4", Offset = "0xFF77A4", VA = "0xFF77A4", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xFF77C8", Offset = "0xFF77C8", VA = "0xFF77C8", Slot = "6")]
		public virtual PooledObject SpawnObject(bool force = false, bool showEffect = true)
		{
			return null;
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xFF77E8", Offset = "0xFF77E8", VA = "0xFF77E8", Slot = "7")]
		protected virtual PooledObject SpawnObject(PooledObject prefab, bool force = false, bool showEffect = true)
		{
			return null;
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xFF7B28", Offset = "0xFF7B28", VA = "0xFF7B28", Slot = "8")]
		protected virtual PooledObject GetObject(PooledObject prefab, Vector3 position, Quaternion rotation, [Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xFF7C08", Offset = "0xFF7C08", VA = "0xFF7C08", Slot = "9")]
		protected virtual void SpawnEffect()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xFF7DAC", Offset = "0xFF7DAC", VA = "0xFF7DAC", Slot = "10")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xFF7E40", Offset = "0xFF7E40", VA = "0xFF7E40")]
		protected void OnGrab(IGrabbable grabbable, IHand hand)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xFF7E4C", Offset = "0xFF7E4C", VA = "0xFF7E4C", Slot = "11")]
		protected virtual void BindCurrent()
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xFF7FB8", Offset = "0xFF7FB8", VA = "0xFF7FB8", Slot = "12")]
		protected virtual void UnbindCurrent()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xFF8150", Offset = "0xFF8150", VA = "0xFF8150")]
		public PooledObjectSpawner()
		{
		}
	}
}
namespace Projectiles
{
	[Token(Token = "0x20003FC")]
	public static class NumberExtensions
	{
		[Token(Token = "0x600165E")]
		[Address(RVA = "0x1BCCE38", Offset = "0x1BCCE38", VA = "0x1BCCE38")]
		public static bool IsBitSet(this byte flags, int bit)
		{
			return default(bool);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x1BCCE50", Offset = "0x1BCCE50", VA = "0x1BCCE50")]
		public static byte SetBit(this ref byte flags, int bit, bool value)
		{
			return default(byte);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x1BCCE78", Offset = "0x1BCCE78", VA = "0x1BCCE78")]
		public static byte SetBitNoRef(this byte flags, int bit, bool value)
		{
			return default(byte);
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x1BCCE94", Offset = "0x1BCCE94", VA = "0x1BCCE94")]
		public static bool IsBitSet(this int flags, int bit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x1BCCEA8", Offset = "0x1BCCEA8", VA = "0x1BCCEA8")]
		public static int SetBit(this ref int flags, int bit, bool value)
		{
			return default(int);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x1BCCED0", Offset = "0x1BCCED0", VA = "0x1BCCED0")]
		public static int SetBitNoRef(this int flags, int bit, bool value)
		{
			return default(int);
		}
	}
}
namespace Multiplayer.Entities
{
	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5CFE0", Offset = "0xB5CFE0")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5CFE0", Offset = "0xB5CFE0")]
	public class NetworkFruit : NetworkBehaviour
	{
		[Token(Token = "0x20003FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D028", Offset = "0xB5D028")]
		private sealed class <DespawnFruitIfOutOfBounds>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkFruit <>4__this;

			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <spawnedPosition>5__2;

			[Token(Token = "0x17000324")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001685")]
				[Address(RVA = "0xFB2A48", Offset = "0xFB2A48", VA = "0xFB2A48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000325")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001687")]
				[Address(RVA = "0xFB2A90", Offset = "0xFB2A90", VA = "0xFB2A90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001682")]
			[Address(RVA = "0xFB2864", Offset = "0xFB2864", VA = "0xFB2864")]
			[DebuggerHidden]
			public <DespawnFruitIfOutOfBounds>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6001683")]
			[Address(RVA = "0xFB2890", Offset = "0xFB2890", VA = "0xFB2890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001684")]
			[Address(RVA = "0xFB2894", Offset = "0xFB2894", VA = "0xFB2894", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001686")]
			[Address(RVA = "0xFB2A50", Offset = "0xFB2A50", VA = "0xFB2A50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D098", Offset = "0xB6D098")]
		private int _SelectedFruitConfigIndex;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D0EC", Offset = "0xB6D0EC")]
		private Fruit.SliceDirection _SliceDirection;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D140", Offset = "0xB6D140")]
		private bool _IsSliced;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D194", Offset = "0xB6D194")]
		private Vector3 _SlicePosition;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D1E8", Offset = "0xB6D1E8")]
		private Vector3 _SliceVelocity;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D23C", Offset = "0xB6D23C")]
		private Vector3 _SliceNormal;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_outOfBoundCheckTime;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_outOfBoundDistance;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Action<NetworkFruit> OnDespawned;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Action<SliceableObjectBase.SliceInfo> OnSliced;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6D2B0", Offset = "0xB6D2B0")]
		private SyncedFruit <SyncedFruit>k__BackingField;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6D2C0", Offset = "0xB6D2C0")]
		private NetworkTransform <NetworkTransform>k__BackingField;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6D2D0", Offset = "0xB6D2D0")]
		private NetworkGrabbable <NetworkGrabbable>k__BackingField;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6D2E0", Offset = "0xB6D2E0")]
		private bool <HasNetworkGrabbable>k__BackingField;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public Vector3 m_gravity;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private WaitForSeconds m_waitForSeconds;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float m_outOfBoundDistanceSqr;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int m_tickSlicedLocally;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int m_spawnTick;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkFruit> $IL2CPP_CHANGED;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkFruit> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkFruit> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700031A")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB89F64", Offset = "0xB89F64")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB89F64", Offset = "0xB89F64")]
		public int SelectedFruitConfigIndex
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0x10D595C", Offset = "0x10D595C", VA = "0x10D595C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x10D59C0", Offset = "0x10D59C0", VA = "0x10D59C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031B")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB89FA4", Offset = "0xB89FA4")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB89FA4", Offset = "0xB89FA4")]
		public Fruit.SliceDirection SliceDirection
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x10D5A24", Offset = "0x10D5A24", VA = "0x10D5A24")]
			get
			{
				return default(Fruit.SliceDirection);
			}
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x10D5A88", Offset = "0x10D5A88", VA = "0x10D5A88")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB89FE4", Offset = "0xB89FE4")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB89FE4", Offset = "0xB89FE4")]
		public bool IsSliced
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0x10D5AEC", Offset = "0x10D5AEC", VA = "0x10D5AEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001669")]
			[Address(RVA = "0x10D5B58", Offset = "0x10D5B58", VA = "0x10D5B58")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A024", Offset = "0xB8A024")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A024", Offset = "0xB8A024")]
		public Vector3 SlicePosition
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0x10D5BC0", Offset = "0x10D5BC0", VA = "0x10D5BC0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600166B")]
			[Address(RVA = "0x10D5C48", Offset = "0x10D5C48", VA = "0x10D5C48")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A064", Offset = "0xB8A064")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A064", Offset = "0xB8A064")]
		public Vector3 SliceVelocity
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x10D5D58", Offset = "0x10D5D58", VA = "0x10D5D58")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x10D5DE0", Offset = "0x10D5DE0", VA = "0x10D5DE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A0A4", Offset = "0xB8A0A4")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A0A4", Offset = "0xB8A0A4")]
		public Vector3 SliceNormal
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x10D5EF0", Offset = "0x10D5EF0", VA = "0x10D5EF0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x10D5F78", Offset = "0x10D5F78", VA = "0x10D5F78")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public SyncedFruit SyncedFruit
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0x10D6088", Offset = "0x10D6088", VA = "0x10D6088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80BF8", Offset = "0xB80BF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x10D6090", Offset = "0x10D6090", VA = "0x10D6090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80C08", Offset = "0xB80C08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public NetworkTransform NetworkTransform
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x10D6098", Offset = "0x10D6098", VA = "0x10D6098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80C18", Offset = "0xB80C18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x10D60A0", Offset = "0x10D60A0", VA = "0x10D60A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80C28", Offset = "0xB80C28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000322")]
		public NetworkGrabbable NetworkGrabbable
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x10D60A8", Offset = "0x10D60A8", VA = "0x10D60A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80C38", Offset = "0xB80C38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x10D60B0", Offset = "0x10D60B0", VA = "0x10D60B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80C48", Offset = "0xB80C48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public bool HasNetworkGrabbable
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0x10D60B8", Offset = "0x10D60B8", VA = "0x10D60B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80C58", Offset = "0xB80C58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001677")]
			[Address(RVA = "0x10D60C0", Offset = "0x10D60C0", VA = "0x10D60C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80C68", Offset = "0xB80C68")]
			private set
			{
			}
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x10D60CC", Offset = "0x10D60CC", VA = "0x10D60CC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB80C78", Offset = "0xB80C78")]
		public static void Log(string message, UnityEngine.Object sender)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x10D60D0", Offset = "0x10D60D0", VA = "0x10D60D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x10D6250", Offset = "0x10D6250", VA = "0x10D6250", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x10D6418", Offset = "0x10D6418", VA = "0x10D6418")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB80CB0", Offset = "0xB80CB0")]
		private IEnumerator DespawnFruitIfOutOfBounds()
		{
			return null;
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x10D6490", Offset = "0x10D6490", VA = "0x10D6490", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x10D6594", Offset = "0x10D6594", VA = "0x10D6594", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x10D66E0", Offset = "0x10D66E0", VA = "0x10D66E0")]
		public void Slice(ref SliceableObjectBase.SliceInfo sliceInfo)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x10D6958", Offset = "0x10D6958", VA = "0x10D6958")]
		public NetworkFruit()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x10D696C", Offset = "0x10D696C", VA = "0x10D696C", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x10D69D4", Offset = "0x10D69D4", VA = "0x10D69D4", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class SyncedFruit : Fruit
	{
		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D300", Offset = "0xB6D300")]
		[SerializeField]
		private Hitbox m_hitBox;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private HitboxRoot m_hitBoxRoot;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6D35C", Offset = "0xB6D35C")]
		private NetworkFruit <NetworkFruit>k__BackingField;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6D36C", Offset = "0xB6D36C")]
		private NetworkGrabbable <NetworkGrabbable>k__BackingField;

		[Token(Token = "0x17000326")]
		public NetworkFruit NetworkFruit
		{
			[Token(Token = "0x6001688")]
			[Address(RVA = "0x116D23C", Offset = "0x116D23C", VA = "0x116D23C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80D60", Offset = "0xB80D60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001689")]
			[Address(RVA = "0x116D244", Offset = "0x116D244", VA = "0x116D244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80D70", Offset = "0xB80D70")]
			set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public NetworkGrabbable NetworkGrabbable
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0x116D254", Offset = "0x116D254", VA = "0x116D254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80D80", Offset = "0xB80D80")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168B")]
			[Address(RVA = "0x116D25C", Offset = "0x116D25C", VA = "0x116D25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80D90", Offset = "0xB80D90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public override bool IsSliced
		{
			[Token(Token = "0x600168C")]
			[Address(RVA = "0x116D26C", Offset = "0x116D26C", VA = "0x116D26C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x116D288", Offset = "0x116D288", VA = "0x116D288", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x116D320", Offset = "0x116D320", VA = "0x116D320", Slot = "7")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x116D3D0", Offset = "0x116D3D0", VA = "0x116D3D0", Slot = "13")]
		protected override bool IsGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x116D414", Offset = "0x116D414", VA = "0x116D414", Slot = "9")]
		public override void Init(FruitConfig config, SliceDirection sliceDirection = SliceDirection.None)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x116D878", Offset = "0x116D878", VA = "0x116D878", Slot = "11")]
		public override void Slice(SliceableObjectBase.SliceInfo sliceInfo)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x116D998", Offset = "0x116D998", VA = "0x116D998")]
		public void ShowSlicedVisuals(Vector3 position, Vector3 velocity, Vector3 normal)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x116DA64", Offset = "0x116DA64", VA = "0x116DA64")]
		public void RevertSlicedVisuals()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x116DBC4", Offset = "0x116DBC4", VA = "0x116DBC4", Slot = "10")]
		public override void Launch()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x116DC80", Offset = "0x116DC80", VA = "0x116DC80", Slot = "15")]
		public override void SetPhysicsMode(PhysicsMode mode, bool inheritVelocity = true, float collisionDelay = 0f)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x116DFB0", Offset = "0x116DFB0", VA = "0x116DFB0", Slot = "14")]
		protected override void KillInSeconds(float seconds)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x116DFC0", Offset = "0x116DFC0", VA = "0x116DFC0")]
		public SyncedFruit()
		{
		}
	}
}
namespace Networking
{
	[Token(Token = "0x2000400")]
	public static class PhotonRegion
	{
		[Token(Token = "0x4001909")]
		public const string Automatic = "";

		[Token(Token = "0x400190A")]
		public const string Asia = "asia";

		[Token(Token = "0x400190B")]
		public const string ChineseMainland = "cn";

		[Token(Token = "0x400190C")]
		public const string Japan = "jp";

		[Token(Token = "0x400190D")]
		public const string Europe = "eu";

		[Token(Token = "0x400190E")]
		public const string SouthAmerica = "sa";

		[Token(Token = "0x400190F")]
		public const string SouthKorea = "kr";

		[Token(Token = "0x4001910")]
		public const string USAEast = "us";

		[Token(Token = "0x4001911")]
		public const string USAWest = "usw";

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] GlobalRegions;
	}
}
namespace Networking.UI
{
	[Token(Token = "0x2000401")]
	public class UIInviteButton : Button
	{
		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public TMP_Text m_text;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float m_inviteButtonCoolDown;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float s_timeClicked;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private PlayerBoard m_playerBoard;

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x115FFC4", Offset = "0x115FFC4", VA = "0x115FFC4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x11600D8", Offset = "0x11600D8", VA = "0x11600D8", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x1160178", Offset = "0x1160178", VA = "0x1160178")]
		private void OnClick()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x1160250", Offset = "0x1160250", VA = "0x1160250")]
		private void Update()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x1160490", Offset = "0x1160490", VA = "0x1160490")]
		public UIInviteButton()
		{
		}
	}
}
namespace Networking.Entities
{
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5D038", Offset = "0xB5D038")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5D038", Offset = "0xB5D038")]
	public class BrokenShield : MonoBehaviour
	{
		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody[] m_shieldFragments;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ExplosiveForce m_explosiveForce;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer[] m_renderers;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6D39C", Offset = "0xB6D39C")]
		private PooledObject <PooledObject>k__BackingField;

		[Token(Token = "0x17000329")]
		public PooledObject PooledObject
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0x1193080", Offset = "0x1193080", VA = "0x1193080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80DA0", Offset = "0xB80DA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600169F")]
			[Address(RVA = "0x1193088", Offset = "0x1193088", VA = "0x1193088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80DB0", Offset = "0xB80DB0")]
			private set
			{
			}
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x1193090", Offset = "0x1193090", VA = "0x1193090")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x1193224", Offset = "0x1193224", VA = "0x1193224")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x11932B0", Offset = "0x11932B0", VA = "0x11932B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x119337C", Offset = "0x119337C", VA = "0x119337C")]
		public void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x1193438", Offset = "0x1193438", VA = "0x1193438")]
		public BrokenShield()
		{
		}
	}
	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5D0CC", Offset = "0xB5D0CC")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5D0CC", Offset = "0xB5D0CC")]
	public class NetworkBasketball : NetworkBehaviour
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D3AC", Offset = "0xB6D3AC")]
		private int _Score;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshProUGUI m_scoreboard;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float counter;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float topResetChecker;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float topResetTime;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float resetTimer;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ParticleSystem m_celebrationPFX;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ISound m_celebrationAudio;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BasketballChecker m_basketballChecker;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public LayerMask m_shootableLayer;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool m_successfulHit;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkBasketball> $IL2CPP_CHANGED;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkBasketball> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkBasketball> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700032A")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A0E4", Offset = "0xB8A0E4")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A0E4", Offset = "0xB8A0E4")]
		public int Score
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xF22ABC", Offset = "0xF22ABC", VA = "0xF22ABC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0xF22B20", Offset = "0xF22B20", VA = "0xF22B20")]
			set
			{
			}
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xF22B84", Offset = "0xF22B84", VA = "0xF22B84", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xF22C54", Offset = "0xF22C54", VA = "0xF22C54")]
		private void OnTriggerEnter(Collider collision)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xF22DFC", Offset = "0xF22DFC", VA = "0xF22DFC")]
		[Preserve]
		private static void OnScoreChanged(Changed<NetworkBasketball> changed)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xF22F74", Offset = "0xF22F74", VA = "0xF22F74")]
		public NetworkBasketball()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xF22F94", Offset = "0xF22F94", VA = "0xF22F94", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xF22F9C", Offset = "0xF22F9C", VA = "0xF22F9C", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xB5D114", Offset = "0xB5D114")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5D114", Offset = "0xB5D114")]
	public class NetworkBlade : NetworkGrabbable
	{
		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D400", Offset = "0xB6D400")]
		private Blade.SliceState _SliceState;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D454", Offset = "0xB6D454")]
		private Blade.SliceDirection _SliceDirection;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D4A8", Offset = "0xB6D4A8")]
		private float _SliceSpeed;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D4FC", Offset = "0xB6D4FC")]
		public Transform m_base;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public Transform m_tip;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D534", Offset = "0xB6D534")]
		public BoxCollider m_bladeCollider;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public LayerMask m_bladeLayerMask;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D56C", Offset = "0xB6D56C")]
		public Blade.SliceDirection m_allowedSliceDirection;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float m_allowedSliceMinDotProduct;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private XWeaponTrail[] m_trails;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float m_trailSmoothStopTime;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public Blade.BladeSection m_badSliceBladeSection;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float m_restingMinSliceSpeed;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D5A4", Offset = "0xB6D5A4")]
		public AnimationCurve m_deflectBladeVelocityCurve;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public float m_bladeDeflectMultiplier;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		public float m_handleDeflectMultiplier;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public ControllerInputBase.VibrationSettingsCurve m_deflectVibration;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D5DC", Offset = "0xB6D5DC")]
		public ISound m_swipeSoundLp;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public SingleAudioSource m_swipeSoundLpSingleAudioSource;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public AudioHighPassFilter m_highPassFilter;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public AudioLowPassFilter m_lowPassFilter;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public AnimationCurve m_swipeSpeedToSoundFrequencyCurve;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public AnimationCurve m_frequencyBandWidthCurve;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float m_swipeFrequencyLerpSpeed;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D614", Offset = "0xB6D614")]
		public ISound m_swipeSound;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public SingleAudioSource m_swipeSoundSingleAudioSource;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public float m_swipeMinInterval;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public float m_swipeMinSpeedThreshold;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public AnimationCurve m_swipeSoundVolumeCurve;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public AnimationCurve m_swipeSoundPitchCurve;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6D64C", Offset = "0xB6D64C")]
		public float m_sliceSoundSpeedSmoothTime;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<LagCompensatedHit> s_lagCompensatedHits;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Transform m_transform;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private NetworkGrabbable m_grabbable;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private float m_lowpassFreq;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private float m_highPassFreq;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private float m_sliceSpeedVelocity;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private float m_secondsSinceLastSlice;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private bool m_justSlicedBomb;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float m_restingMinSliceSpeedSqr;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private float m_sliceSoundSpeed;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private float m_sliceSoundSpeedVelocity;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private SoundPlaybackContext m_swipeLoopAudioContext;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private float m_stopLoopDelay;

		[Token(Token = "0x4001956")]
		private const float LoopStopDelay = 5f;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private Vector3 m_lastPosition;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Vector3 m_lastTipPosLocal;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private Vector3 m_lastBasePosLocal;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Vector3 m_lastBasePosWorld;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private Vector3 m_lastTipPosWorld;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private Grabbable.State m_lastGrabState;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Changed<NetworkBlade> $IL2CPP_CHANGED;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static ChangedDelegate<NetworkBlade> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static NetworkBehaviourCallbacks<NetworkBlade> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700032B")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A144", Offset = "0xB8A144")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A144", Offset = "0xB8A144")]
		public Blade.SliceState SliceState
		{
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xF22FC0", Offset = "0xF22FC0", VA = "0xF22FC0")]
			get
			{
				return default(Blade.SliceState);
			}
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0xF23024", Offset = "0xF23024", VA = "0xF23024")]
			set
			{
			}
		}

		[Token(Token = "0x1700032C")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A1A4", Offset = "0xB8A1A4")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A1A4", Offset = "0xB8A1A4")]
		public Blade.SliceDirection SliceDirection
		{
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xF23088", Offset = "0xF23088", VA = "0xF23088")]
			get
			{
				return default(Blade.SliceDirection);
			}
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xF230EC", Offset = "0xF230EC", VA = "0xF230EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A1E4", Offset = "0xB8A1E4")]
		[AttributeAttribute(Name = "AccuracyAttribute", RVA = "0xB8A1E4", Offset = "0xB8A1E4")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A1E4", Offset = "0xB8A1E4")]
		public float SliceSpeed
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xF23150", Offset = "0xF23150", VA = "0xF23150")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xF231C4", Offset = "0xF231C4", VA = "0xF231C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700032E")]
		public bool SlicingEnabled
		{
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xF23270", Offset = "0xF23270", VA = "0xF23270")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xF23364", Offset = "0xF23364", VA = "0xF23364")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB80DD0", Offset = "0xB80DD0")]
		public static void Log(string message, UnityEngine.Object sender)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xF23368", Offset = "0xF23368", VA = "0xF23368", Slot = "34")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xF234C8", Offset = "0xF234C8", VA = "0xF234C8", Slot = "37")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xF2357C", Offset = "0xF2357C", VA = "0xF2357C", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xF23634", Offset = "0xF23634", VA = "0xF23634", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xF2417C", Offset = "0xF2417C", VA = "0xF2417C", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xF243A8", Offset = "0xF243A8", VA = "0xF243A8")]
		[Preserve]
		public static void OnSliceStateChanged(Changed<NetworkBlade> changed)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xF24590", Offset = "0xF24590", VA = "0xF24590")]
		private void OnBladeReleased(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xF241A0", Offset = "0xF241A0", VA = "0xF241A0")]
		private void UpdateSounds(float sliceSpeed)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xF23934", Offset = "0xF23934", VA = "0xF23934")]
		private void UpdateSliceState(Vector3 tipPosLocal, Vector3 basePosLocal)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xF2459C", Offset = "0xF2459C", VA = "0xF2459C")]
		private bool HasFlag(Blade.SliceDirection direction)
		{
			return default(bool);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xF23BB4", Offset = "0xF23BB4", VA = "0xF23BB4")]
		private void FixedUpdateCollision(Vector3 tipPosLocal, Vector3 basePosLocal)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xF245AC", Offset = "0xF245AC", VA = "0xF245AC")]
		private void GetBB(out Vector3 center, out Vector3 extents, out Quaternion rotation)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xF248B8", Offset = "0xF248B8", VA = "0xF248B8")]
		private void FixedUpdateNetworkSlice(SliceableObjectBase.SliceInfo sliceInfo)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xF24B08", Offset = "0xF24B08", VA = "0xF24B08")]
		public NetworkBlade()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xF24BF8", Offset = "0xF24BF8", VA = "0xF24BF8", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xF24C40", Offset = "0xF24C40", VA = "0xF24C40", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5D1BC", Offset = "0xB5D1BC")]
	public class NetworkBow : NetworkGrabbable
	{
		[Serializable]
		[StructLayout(2)]
		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xB5D1D0", Offset = "0xB5D1D0")]
		public struct NetworkBowConfig : INetworkStruct
		{
			[Token(Token = "0x400199C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_arrowSpeed;

			[Token(Token = "0x400199D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m_shortPullingRangePercentage;

			[Token(Token = "0x400199E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float m_mediumPullingRangePercentage;

			[Token(Token = "0x400199F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float m_longPullingRangePercentage;
		}

		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D1E4", Offset = "0xB5D1E4")]
		private sealed class <>c__DisplayClass81_0
		{
			[Token(Token = "0x40019A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkBow bow;

			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xFB1A30", Offset = "0xFB1A30", VA = "0xFB1A30")]
			public <>c__DisplayClass81_0()
			{
			}

			[Token(Token = "0x60016EE")]
			[Address(RVA = "0xFB1A38", Offset = "0xFB1A38", VA = "0xFB1A38")]
			internal void <OnIsPullingChanged>b__0(float value)
			{
			}

			[Token(Token = "0x60016EF")]
			[Address(RVA = "0xFB1A6C", Offset = "0xFB1A6C", VA = "0xFB1A6C")]
			internal void <OnIsPullingChanged>b__1()
			{
			}
		}

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB6D684", Offset = "0xB6D684")]
		[SerializeField]
		private Projectile m_projectilePrefab;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D6BC", Offset = "0xB6D6BC")]
		private float _PullValue;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D710", Offset = "0xB6D710")]
		private NetworkBool _IsPulling;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D764", Offset = "0xB6D764")]
		private NetworkHand _StringHand;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D7B8", Offset = "0xB6D7B8")]
		private TickTimer _PullTimer;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6D80C", Offset = "0xB6D80C")]
		private NetworkBool _ArrowVisible;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public NetworkBowConfig m_config;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D860", Offset = "0xB6D860")]
		public HandPose m_stringHandRelaxedPose;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public HandPose m_stringHandClenchedPose;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D898", Offset = "0xB6D898")]
		public Transform m_start;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public Transform m_end;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public GameObject m_arrowVisual;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D8D0", Offset = "0xB6D8D0")]
		public UnityEngine.Gradient m_lineGradient;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float m_lineStartAlpha;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public float m_lineEndAlpha;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D908", Offset = "0xB6D908")]
		public SkinnedMeshRenderer m_string;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public Transform m_stringHandTransform;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public UnityEngine.Gradient m_stringGradient;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public AnimationCurve m_pullCurve;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public float m_stringReleaseAnimTime;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public float m_grabThreshold;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D940", Offset = "0xB6D940")]
		public float m_minPullStrength;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6D978", Offset = "0xB6D978")]
		public int m_minPullTickTime;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float m_fastMinPullStrength;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D9B0", Offset = "0xB6D9B0")]
		public ISound m_stringStretchSound;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public SingleAudioSource m_stringAudioSource;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public RangedFloat m_stretchPitchRange;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public RangedFloat m_stretchVolumeRange;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public float m_stringSoundCooldown;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		public float m_stringSoundResetPullThreshold;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6D9E8", Offset = "0xB6D9E8")]
		public float m_arrowPullVibrateIncrement;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public float m_nonAutoReleaseVibrateClamp;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public ControllerInputBase.VibrationSettingsCurve m_pullStringVibration;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public ControllerInputBase.VibrationSettingsCurve m_fireArrowVibration;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public ControllerInputBase.VibrationSettingsCurve m_snapStringVibration;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public ControllerInputBase.VibrationSettingsCurve m_releaseStringVibration;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private Animation m_animation;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private TrajectoryPredictor m_trajectoryPredictor;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private NetworkBowConfig m_initialConfig;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private bool m_autoReleaseEnabled;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Tweener m_stringTweener;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private float m_pullDistance;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private float m_currentPullDistance;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float m_currentPullingRangePercentage;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private bool m_handInsideGrabThreshold;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private float m_previousFeedbackPullValue;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Interpolator<float> m_pullValueInterpolator;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private SoundPlaybackContext m_stringSoundPlaybackContext;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private float m_currentStringLoopCooldown;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private AnimationState m_animState;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private bool m_showTrajectoryLine;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		private Grabbable.State m_previousState;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private MaterialPropertyBlock m_stringPropertyBlock;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int s_emissionColor;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		private Vector3 m_tipRelativePos;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ProfilerMarker s_fixedUpdateFeedback;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly ProfilerMarker s_render;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Changed<NetworkBow> $IL2CPP_CHANGED;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static ChangedDelegate<NetworkBow> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static NetworkBehaviourCallbacks<NetworkBow> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700032F")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A23C", Offset = "0xB8A23C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A23C", Offset = "0xB8A23C")]
		public float PullValue
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xF24C88", Offset = "0xF24C88", VA = "0xF24C88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xF24CFC", Offset = "0xF24CFC", VA = "0xF24CFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000330")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A27C", Offset = "0xB8A27C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A27C", Offset = "0xB8A27C")]
		public NetworkBool IsPulling
		{
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xF24DA8", Offset = "0xF24DA8", VA = "0xF24DA8")]
			get
			{
				return default(NetworkBool);
			}
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xF24E0C", Offset = "0xF24E0C", VA = "0xF24E0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000331")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A2DC", Offset = "0xB8A2DC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A2DC", Offset = "0xB8A2DC")]
		public NetworkHand StringHand
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0xF24E70", Offset = "0xF24E70", VA = "0xF24E70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xF24F80", Offset = "0xF24F80", VA = "0xF24F80")]
			set
			{
			}
		}

		[Token(Token = "0x17000332")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A31C", Offset = "0xB8A31C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A31C", Offset = "0xB8A31C")]
		public TickTimer PullTimer
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xF2503C", Offset = "0xF2503C", VA = "0xF2503C")]
			get
			{
				return default(TickTimer);
			}
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xF250A0", Offset = "0xF250A0", VA = "0xF250A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000333")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A35C", Offset = "0xB8A35C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A35C", Offset = "0xB8A35C")]
		public NetworkBool ArrowVisible
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xF25104", Offset = "0xF25104", VA = "0xF25104")]
			get
			{
				return default(NetworkBool);
			}
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xF25168", Offset = "0xF25168", VA = "0xF25168")]
			set
			{
			}
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xF251CC", Offset = "0xF251CC", VA = "0xF251CC")]
		public bool HandInPullDistance(NetworkHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xF252DC", Offset = "0xF252DC", VA = "0xF252DC", Slot = "34")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xF255B0", Offset = "0xF255B0", VA = "0xF255B0")]
		private void OnOtherHandCallback(NetworkHand hand, ref bool interactionEnabled, ref HandPose relaxedPose, ref HandPose clenchedPose, ref bool overrideBlendFactor, ref float blendFactor)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xF2566C", Offset = "0xF2566C", VA = "0xF2566C", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xF25860", Offset = "0xF25860", VA = "0xF25860", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xF25988", Offset = "0xF25988", VA = "0xF25988", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xF26128", Offset = "0xF26128", VA = "0xF26128", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xF269D4", Offset = "0xF269D4", VA = "0xF269D4", Slot = "39")]
		protected override void OnHandChanged(NetworkHand last, NetworkHand current)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xF26CFC", Offset = "0xF26CFC", VA = "0xF26CFC")]
		[Preserve]
		public static void OnIsPullingChanged(Changed<NetworkBow> changed)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xF26790", Offset = "0xF26790", VA = "0xF26790")]
		private void FixedUpdateFeedback(NetworkHand stringHand, float pullValue)
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xF27000", Offset = "0xF27000", VA = "0xF27000")]
		private float GetPull(Vector3 stringHandPos)
		{
			return default(float);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xF25E40", Offset = "0xF25E40", VA = "0xF25E40")]
		private void UpdatePullVisuals(bool isPulling, float pullValue, Vector3 arrowPosition)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xF271A0", Offset = "0xF271A0", VA = "0xF271A0")]
		private void OnReleased(NetworkGrabbable networkGrabbable)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xF271A8", Offset = "0xF271A8", VA = "0xF271A8")]
		private void OnGrabbed(NetworkGrabbable networkGrabbable, NetworkHand networkHand)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xF2608C", Offset = "0xF2608C", VA = "0xF2608C")]
		private void UpdateBowAnimations(float pullValue)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xF264AC", Offset = "0xF264AC", VA = "0xF264AC")]
		public void FireArrow(bool snappedString, Vector3 arrowPosition, Vector3 launchVelocity, float pullValue, NetworkHand hand, NetworkHand stringHand)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xF26B94", Offset = "0xF26B94", VA = "0xF26B94")]
		private void ApplyPlayerSettings(FNVR2.Networking.Player.PlayerData.PlayerSetting settings)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xF26F34", Offset = "0xF26F34", VA = "0xF26F34")]
		private void PlayStringSound()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xF26FC0", Offset = "0xF26FC0", VA = "0xF26FC0")]
		private void StopStringSound()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xF25ADC", Offset = "0xF25ADC", VA = "0xF25ADC")]
		private void OverwriteHandAndBowRotations(out float pullValue, out Vector3 arrowPosition, NetworkHand hand, NetworkHand stringHand)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xF272A8", Offset = "0xF272A8", VA = "0xF272A8")]
		private void AlignBow(Transform affectedTransform, Vector3 planeNormal, Vector3 up, Vector3 stringHandPos)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xF27344", Offset = "0xF27344", VA = "0xF27344")]
		private Quaternion GetBowAlign(Vector3 planeNormal, Vector3 up, Vector3 stringHandPos)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xF270D8", Offset = "0xF270D8", VA = "0xF270D8")]
		private void SetArrowTrajectoryEnabled(bool enableTrajectory)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xF27448", Offset = "0xF27448", VA = "0xF27448")]
		[Preserve]
		private static void OnArrowVisibleChanged(Changed<NetworkBow> changed)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xF274B4", Offset = "0xF274B4", VA = "0xF274B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB80E38", Offset = "0xB80E38")]
		public static void Log(string message, UnityEngine.Object sender)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xF274B8", Offset = "0xF274B8", VA = "0xF274B8")]
		public NetworkBow()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xF2764C", Offset = "0xF2764C", VA = "0xF2764C", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xF276AC", Offset = "0xF276AC", VA = "0xF276AC", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000408")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5D1F4", Offset = "0xB5D1F4")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5D1F4", Offset = "0xB5D1F4")]
	public class NetworkEnvironmentHit : NetworkBehaviour
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6DA20", Offset = "0xB6DA20")]
		public List<EnvironmentHit.HitType> m_hitTypesServerOnly;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6DA58", Offset = "0xB6DA58")]
		public List<EnvironmentHit.HitType> m_hitTypesInputAuthorityOrServer;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6DA90", Offset = "0xB6DA90")]
		public List<EnvironmentHit.HitType> m_hitTypesProxiesOnly;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6DAC8", Offset = "0xB6DAC8")]
		public List<EnvironmentHit.HitType> m_hitTypesProxieWithInputAuthority;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6DB00", Offset = "0xB6DB00")]
		private NetworkBool _Enabled;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6DB54", Offset = "0xB6DB54")]
		private TickTimer _NextAvailableHitTime;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_minRepeatTime;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkEnvironmentHit> $IL2CPP_CHANGED;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkEnvironmentHit> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkEnvironmentHit> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000334")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A3BC", Offset = "0xB8A3BC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A3BC", Offset = "0xB8A3BC")]
		public NetworkBool Enabled
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xF2B3F0", Offset = "0xF2B3F0", VA = "0xF2B3F0")]
			get
			{
				return default(NetworkBool);
			}
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0xF2B454", Offset = "0xF2B454", VA = "0xF2B454")]
			set
			{
			}
		}

		[Token(Token = "0x17000335")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A3FC", Offset = "0xB8A3FC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A3FC", Offset = "0xB8A3FC")]
		public TickTimer NextAvailableHitTime
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xF2B4B8", Offset = "0xF2B4B8", VA = "0xF2B4B8")]
			get
			{
				return default(TickTimer);
			}
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xF2B51C", Offset = "0xF2B51C", VA = "0xF2B51C")]
			set
			{
			}
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xF2B580", Offset = "0xF2B580", VA = "0xF2B580")]
		public void GetHit(NetworkObject networkObject, Vector3 hitPosition)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xF2BFF8", Offset = "0xF2BFF8", VA = "0xF2BFF8")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB80E70", Offset = "0xB80E70")]
		private void RpcExecuteProxiesEvent([RpcTarget] PlayerRef player, NetworkObject networkObject)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xF2BD48", Offset = "0xF2BD48", VA = "0xF2BD48")]
		private bool ExecuteEventIfConditionMet(NetworkObject networkObject, EnvironmentHit.HitType hitType)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xF2C2D8", Offset = "0xF2C2D8", VA = "0xF2C2D8")]
		public void SetEnabled(bool value)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xF2C308", Offset = "0xF2C308", VA = "0xF2C308")]
		public NetworkEnvironmentHit()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xF2C400", Offset = "0xF2C400", VA = "0xF2C400", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xF2C42C", Offset = "0xF2C42C", VA = "0xF2C42C", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xF2C45C", Offset = "0xF2C45C", VA = "0xF2C45C")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB80EA8", Offset = "0xB80EA8")]
		[Preserve]
		protected unsafe static void RpcExecuteProxiesEvent@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5D23C", Offset = "0xB5D23C")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5D23C", Offset = "0xB5D23C")]
	public class ShootableFruitSpawner : NetworkBehaviour
	{
		[Token(Token = "0x200040A")]
		public enum State
		{
			[Token(Token = "0x40019BE")]
			Waiting,
			[Token(Token = "0x40019BF")]
			ShootingStartSequence,
			[Token(Token = "0x40019C0")]
			Shooting,
			[Token(Token = "0x40019C1")]
			ShootingEndSequence,
			[Token(Token = "0x40019C2")]
			CoolingDown
		}

		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D284", Offset = "0xB5D284")]
		private sealed class <WaitForDelayBeforeChangingCurrentState>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40019C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ShootableFruitSpawner <>4__this;

			[Token(Token = "0x40019C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public State state;

			[Token(Token = "0x17000337")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600170D")]
				[Address(RVA = "0xFE5E04", Offset = "0xFE5E04", VA = "0xFE5E04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000338")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600170F")]
				[Address(RVA = "0xFE5E4C", Offset = "0xFE5E4C", VA = "0xFE5E4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600170A")]
			[Address(RVA = "0xFE5C84", Offset = "0xFE5C84", VA = "0xFE5C84")]
			[DebuggerHidden]
			public <WaitForDelayBeforeChangingCurrentState>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x600170B")]
			[Address(RVA = "0xFE5CB0", Offset = "0xFE5CB0", VA = "0xFE5CB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600170C")]
			[Address(RVA = "0xFE5CB4", Offset = "0xFE5CB4", VA = "0xFE5CB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600170E")]
			[Address(RVA = "0xFE5E0C", Offset = "0xFE5E0C", VA = "0xFE5E0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6DBB8", Offset = "0xB6DBB8")]
		private State _CurrentState;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6DC0C", Offset = "0xB6DC0C")]
		private bool m_overrideSpawnnedLocalPosition;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Vector3 m_overwrittenLocalStartPosition;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SyncedSpawner[] m_syncedSpawners;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6DC78", Offset = "0xB6DC78")]
		private DOTweenAnimation m_doTweenAnimationStartSequence;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string m_startSequenceID;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float m_startSequenceDuration;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6DCE4", Offset = "0xB6DCE4")]
		private float m_shootingSequenceDuration;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6DD30", Offset = "0xB6DD30")]
		private DOTweenAnimation m_doTweenAnimationEndSequence;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private string m_endSequenceID;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float m_endSequenceDuration;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6DD9C", Offset = "0xB6DD9C")]
		private float m_coolingDownDuration;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private NetworkEnvironmentHit m_networkEnvironmentHit;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private int m_maxActiveFruits;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private State m_previousState;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<ShootableFruitSpawner> $IL2CPP_CHANGED;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<ShootableFruitSpawner> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<ShootableFruitSpawner> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000336")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A43C", Offset = "0xB8A43C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A43C", Offset = "0xB8A43C")]
		public State CurrentState
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xF02618", Offset = "0xF02618", VA = "0xF02618")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xF0267C", Offset = "0xF0267C", VA = "0xF0267C")]
			set
			{
			}
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xF026E0", Offset = "0xF026E0", VA = "0xF026E0", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xF027DC", Offset = "0xF027DC", VA = "0xF027DC")]
		public void StartShooting()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xF02AAC", Offset = "0xF02AAC", VA = "0xF02AAC", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xF02D84", Offset = "0xF02D84", VA = "0xF02D84")]
		private void InitiateShootingStartSequence()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xF02DF0", Offset = "0xF02DF0", VA = "0xF02DF0")]
		private void InitiateShooting()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xF02FE4", Offset = "0xF02FE4", VA = "0xF02FE4")]
		private void InitiateShootingEndSequence()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xF03064", Offset = "0xF03064", VA = "0xF03064")]
		private void InitiateCoolingDownSequence()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xF03098", Offset = "0xF03098", VA = "0xF03098")]
		private void InitiateWaiting()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xF0313C", Offset = "0xF0313C", VA = "0xF0313C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB80EEC", Offset = "0xB80EEC")]
		private IEnumerator WaitForDelayBeforeChangingCurrentState(float delay, State state)
		{
			return null;
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xF031D4", Offset = "0xF031D4", VA = "0xF031D4")]
		public ShootableFruitSpawner()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xF031FC", Offset = "0xF031FC", VA = "0xF031FC", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xF03204", Offset = "0xF03204", VA = "0xF03204", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class StuckObjectHolder : MonoBehaviour
	{
		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_stuckObjectParent;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_isShield;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_radius;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<PooledObject> m_stuckObjects;

		[Token(Token = "0x17000339")]
		public bool IsShield
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0x116A11C", Offset = "0x116A11C", VA = "0x116A11C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033A")]
		public float Radius
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0x116A124", Offset = "0x116A124", VA = "0x116A124")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700033B")]
		public Transform StuckObjectParent
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0x116A12C", Offset = "0x116A12C", VA = "0x116A12C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x116A134", Offset = "0x116A134", VA = "0x116A134")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x116A188", Offset = "0x116A188", VA = "0x116A188")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x116A228", Offset = "0x116A228", VA = "0x116A228")]
		public void AddStuckObject(PooledObject pooledObject)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x116A28C", Offset = "0x116A28C", VA = "0x116A28C")]
		public StuckObjectHolder()
		{
		}
	}
}
namespace Networking.Entities.Projectiles
{
	[Token(Token = "0x200040D")]
	public class ArrowTrace : MonoBehaviour
	{
		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6DE38", Offset = "0xB6DE38")]
		[SerializeField]
		private EnvironmentMaterialConfig m_defaultMaterialConfig;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnvironmentMaterialConfig m_plungerMaterialConfig;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_impactEffectSpawn;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_impactEffectDistance;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_impactParticlesVelocityMultiplier;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_recycleDelayAfterHittingMenu;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_tip;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6DED4", Offset = "0xB6DED4")]
		private float m_maxPlungerDegreeRotation;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_plungerRemoveFovPercent;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_minDistanceToCamera;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6DF40", Offset = "0xB6DF40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6DF40", Offset = "0xB6DF40")]
		private Transform m_visuals;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_defaultArrowVisual;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_plungerArrowVisual;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform m_plunger;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TrailRenderer m_trailRenderer;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion m_plungerDefaultLocalRotation;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 m_plungerLocalPosition;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PersonalSpaceInvader m_personalSpaceInvader;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlayerSpaceInvader m_playerSpaceInvader;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PooledObjectRecycleAfterDelay m_pooledObjectRecycleAfterDelay;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6DFF0", Offset = "0xB6DFF0")]
		private PlayerRef <PlayerBelongingTo>k__BackingField;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E000", Offset = "0xB6E000")]
		private PooledObject <PooledObject>k__BackingField;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E010", Offset = "0xB6E010")]
		private KinematicProjectileArrow <KinematicProjectileArrow>k__BackingField;

		[Token(Token = "0x1700033C")]
		public PlayerRef PlayerBelongingTo
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0x144AE30", Offset = "0x144AE30", VA = "0x144AE30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80F9C", Offset = "0xB80F9C")]
			get
			{
				return default(PlayerRef);
			}
			[Token(Token = "0x6001718")]
			[Address(RVA = "0x144AE38", Offset = "0x144AE38", VA = "0x144AE38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80FAC", Offset = "0xB80FAC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public PooledObject PooledObject
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x144AE40", Offset = "0x144AE40", VA = "0x144AE40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80FBC", Offset = "0xB80FBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x144AE48", Offset = "0x144AE48", VA = "0x144AE48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80FCC", Offset = "0xB80FCC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public KinematicProjectileArrow KinematicProjectileArrow
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x144AE50", Offset = "0x144AE50", VA = "0x144AE50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80FDC", Offset = "0xB80FDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x144AE58", Offset = "0x144AE58", VA = "0x144AE58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80FEC", Offset = "0xB80FEC")]
			private set
			{
			}
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x144AE60", Offset = "0x144AE60", VA = "0x144AE60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x144AFF8", Offset = "0x144AFF8", VA = "0x144AFF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x144B08C", Offset = "0x144B08C", VA = "0x144B08C")]
		public void SetUp(ProjectileContext context, RaycastHit hit, KinematicProjectileArrow.CalculatedInfo calculatedInfo, [Optional] StuckObjectHolder stuckObjectHolder)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x144B69C", Offset = "0x144B69C", VA = "0x144B69C")]
		public void SpawnImpactEffect(RaycastHit hit, Vector3 impactVelocity)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x144BDBC", Offset = "0x144BDBC", VA = "0x144BDBC")]
		public ArrowTrace()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public abstract class KinematicProjectile : Projectile
	{
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6E020", Offset = "0xB6E020")]
		[SerializeField]
		private float m_maxDistance;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_maxTime;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6E07C", Offset = "0xB6E07C")]
		[SerializeField]
		private float m_arrowLength;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_impactEffectSpawn;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_impactEffectDistance;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_impactParticlesVelocityMultiplier;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_maxLiveTimeTicks;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected Vector3 m_previousPos;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly List<Collider> m_collidersToIgnore;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ProfilerMarker s_render;

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x10190A8", Offset = "0x10190A8", VA = "0x10190A8", Slot = "5")]
		public override ProjectileData GetFireData(NetworkRunner runner, Vector3 firePosition, Vector3 velocity, Vector3 projectileUpDirectionOnFire)
		{
			return default(ProjectileData);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1019208", Offset = "0x1019208", VA = "0x1019208", Slot = "6")]
		public override void OnFixedUpdate(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x1019278", Offset = "0x1019278", VA = "0x1019278", Slot = "9")]
		protected override void OnActivated(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1019384", Offset = "0x1019384", VA = "0x1019384", Slot = "7")]
		public override void OnRender(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1019B4C", Offset = "0x1019B4C", VA = "0x1019B4C", Slot = "12")]
		public virtual void StickProjectileProxie(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x6001727")]
		protected abstract Vector3 GetRenderPosition(ProjectileContext context, ref ProjectileData data);

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x1019B50", Offset = "0x1019B50", VA = "0x1019B50")]
		protected KinematicProjectile()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class KinematicProjectileArrow : KinematicProjectile
	{
		[Token(Token = "0x2000410")]
		public struct CalculatedInfo
		{
			[Token(Token = "0x40019FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 m_previousPos;

			[Token(Token = "0x4001A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 m_currentPos;

			[Token(Token = "0x4001A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 m_direction;

			[Token(Token = "0x4001A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 m_directionNormalized;

			[Token(Token = "0x4001A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float m_distance;
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D294", Offset = "0xB5D294")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x600173A")]
			[Address(RVA = "0xFD754C", Offset = "0xFD754C", VA = "0xFD754C")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x600173B")]
			[Address(RVA = "0xFD7554", Offset = "0xFD7554", VA = "0xFD7554")]
			internal int <ProcessAnyCollisions>b__0(LagCompensatedHit a, LagCompensatedHit b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D2A4", Offset = "0xB5D2A4")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 currentPos;

			[Token(Token = "0x600173C")]
			[Address(RVA = "0xFD75E4", Offset = "0xFD75E4", VA = "0xFD75E4")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x600173D")]
			[Address(RVA = "0xFD75EC", Offset = "0xFD75EC", VA = "0xFD75EC")]
			internal int <StickProjectileProxie>b__0(RaycastHit a, RaycastHit b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6E0E8", Offset = "0xB6E0E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E0E8", Offset = "0xB6E0E8")]
		private LayerMask m_hitMask;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E158", Offset = "0xB6E158")]
		[SerializeField]
		private LayerMask m_proxieHitMask;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E1A4", Offset = "0xB6E1A4")]
		[SerializeField]
		private int m_tickInThePast;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6E1F0", Offset = "0xB6E1F0")]
		[SerializeField]
		private float m_impactForceVelocityMultiplier;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_penetrationDistance;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform m_tip;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private int m_minTickBeforeLocalPlayerCollision;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6E26C", Offset = "0xB6E26C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E26C", Offset = "0xB6E26C")]
		private Transform m_visuals;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject m_defaultArrowVisual;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject m_plungerArrowVisual;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_spawnedTrace;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 m_correctedPointDebugPos;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RaycastHit[] m_raycastHits;

		[Token(Token = "0x40019FA")]
		private const float MoveClosetPointCloserToColliderCenter = 0.1f;

		[Token(Token = "0x40019FB")]
		private const float ProxieRaycastMaxDistance = 20f;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ProfilerMarker s_lagCompensationRaycast;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ProfilerMarker s_processAnyCollisions;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly ProfilerMarker s_stickArrow;

		[Token(Token = "0x1700033F")]
		public Transform Tip
		{
			[Token(Token = "0x600172A")]
			[Address(RVA = "0x1019CA4", Offset = "0x1019CA4", VA = "0x1019CA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1019CAC", Offset = "0x1019CAC", VA = "0x1019CAC", Slot = "9")]
		protected override void OnActivated(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x1019D8C", Offset = "0x1019D8C", VA = "0x1019D8C", Slot = "6")]
		public override void OnFixedUpdate(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1019DE8", Offset = "0x1019DE8", VA = "0x1019DE8")]
		private void ProcessAnyCollisions(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x101B0F4", Offset = "0x101B0F4", VA = "0x101B0F4")]
		private Collider GetColliderForLagCompensatedHit(LagCompensatedHit hit)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x101BB84", Offset = "0x101BB84", VA = "0x101BB84", Slot = "12")]
		public override void StickProjectileProxie(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x101A9C0", Offset = "0x101A9C0", VA = "0x101A9C0")]
		private void StickArrow(ref CalculatedInfo calculatedInfo, ProjectileContext context, ref ProjectileData data, LagCompensatedHit hit)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x101B3F0", Offset = "0x101B3F0", VA = "0x101B3F0")]
		private RaycastHit ConvertLagCompensatedHitToRayCastHit(ref CalculatedInfo calculatedInfo, Collider physXCollider, LagCompensatedHit hit)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x101BFC0", Offset = "0x101BFC0", VA = "0x101BFC0")]
		private void SpawnTrace(CalculatedInfo calculatedInfo, ProjectileContext context, ref ProjectileData data, RaycastHit hit, [Optional] StuckObjectHolder stuckObjectHolder)
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x101B974", Offset = "0x101B974", VA = "0x101B974")]
		private void ProcessHitBoxCollision(ref CalculatedInfo calculatedInfo, ProjectileContext context, ref ProjectileData data, LagCompensatedHit hit)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x101C3B8", Offset = "0x101C3B8", VA = "0x101C3B8")]
		private void SliceSliceable(ProjectileContext context, ref ProjectileData data, SliceableObjectBase sliceableObject, Plane slicePlane, Vector3 hitPoint)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x101C698", Offset = "0x101C698", VA = "0x101C698", Slot = "13")]
		protected override Vector3 GetRenderPosition(ProjectileContext context, ref ProjectileData data)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x101A900", Offset = "0x101A900", VA = "0x101A900")]
		private Vector3 GetMovePosition(NetworkRunner runner, ref ProjectileData data, float currentTick)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x101C614", Offset = "0x101C614", VA = "0x101C614")]
		private Vector3 GetVelocity(NetworkRunner runner, ref ProjectileData data, float currentTick)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x101C6B8", Offset = "0x101C6B8", VA = "0x101C6B8")]
		public KinematicProjectileArrow()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public abstract class Projectile : MonoBehaviour
	{
		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ISound m_arrowShootSound;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly List<LagCompensatedHit> s_lagCompensatedHits;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly List<NetworkId> m_networkObjectHitIDs;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly HashSet<int> m_stuckProjectiles;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected TrailRenderer[] m_trails;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E2FC", Offset = "0xB6E2FC")]
		private PooledObject <PooledObject>k__BackingField;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E30C", Offset = "0xB6E30C")]
		private byte <PrefabId>k__BackingField;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E31C", Offset = "0xB6E31C")]
		private bool <IsFinished>k__BackingField;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E32C", Offset = "0xB6E32C")]
		private bool <IsDiscarded>k__BackingField;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E33C", Offset = "0xB6E33C")]
		private bool <IsTrace>k__BackingField;

		[Token(Token = "0x17000340")]
		public virtual bool NeedsInterpolationData
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xFF9A7C", Offset = "0xFF9A7C", VA = "0xFF9A7C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		public PooledObject PooledObject
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0xFF9A84", Offset = "0xFF9A84", VA = "0xFF9A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB80FFC", Offset = "0xB80FFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001740")]
			[Address(RVA = "0xFF9A8C", Offset = "0xFF9A8C", VA = "0xFF9A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8100C", Offset = "0xB8100C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public byte PrefabId
		{
			[Token(Token = "0x6001743")]
			[Address(RVA = "0xFF9A94", Offset = "0xFF9A94", VA = "0xFF9A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8101C", Offset = "0xB8101C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001744")]
			[Address(RVA = "0xFF9A9C", Offset = "0xFF9A9C", VA = "0xFF9A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8102C", Offset = "0xB8102C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public bool IsFinished
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0xFF9AA4", Offset = "0xFF9AA4", VA = "0xFF9AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8103C", Offset = "0xB8103C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001746")]
			[Address(RVA = "0xFF9AAC", Offset = "0xFF9AAC", VA = "0xFF9AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8104C", Offset = "0xB8104C")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public bool IsDiscarded
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0xFF9AB8", Offset = "0xFF9AB8", VA = "0xFF9AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8105C", Offset = "0xB8105C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001748")]
			[Address(RVA = "0xFF9AC0", Offset = "0xFF9AC0", VA = "0xFF9AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8106C", Offset = "0xB8106C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public bool IsTrace
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0xFF9ACC", Offset = "0xFF9ACC", VA = "0xFF9ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8107C", Offset = "0xB8107C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600174A")]
			[Address(RVA = "0xFF9AD4", Offset = "0xFF9AD4", VA = "0xFF9AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8108C", Offset = "0xB8108C")]
			set
			{
			}
		}

		[Token(Token = "0x6001741")]
		public abstract ProjectileData GetFireData(NetworkRunner runner, Vector3 firePosition, Vector3 velocity, Vector3 projectileUpDirectionOnFire);

		[Token(Token = "0x6001742")]
		public abstract void OnFixedUpdate(ProjectileContext context, ref ProjectileData data);

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xFF9AE0", Offset = "0xFF9AE0", VA = "0xFF9AE0")]
		public void Activate(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xFF9AFC", Offset = "0xFF9AFC", VA = "0xFF9AFC")]
		public void Deactivate(ProjectileContext context)
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xFF9B10", Offset = "0xFF9B10", VA = "0xFF9B10", Slot = "7")]
		public virtual void OnRender(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xFF9B14", Offset = "0xFF9B14", VA = "0xFF9B14")]
		public void Discard()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xFF9B28", Offset = "0xFF9B28", VA = "0xFF9B28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xFF9B94", Offset = "0xFF9B94", VA = "0xFF9B94", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xFF9C24", Offset = "0xFF9C24", VA = "0xFF9C24", Slot = "9")]
		protected virtual void OnActivated(ProjectileContext context, ref ProjectileData data)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xFF9CD4", Offset = "0xFF9CD4", VA = "0xFF9CD4", Slot = "10")]
		protected virtual void OnDeactivated(ProjectileContext context)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xFF9CD8", Offset = "0xFF9CD8", VA = "0xFF9CD8", Slot = "11")]
		protected virtual void OnDiscarded()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xFF9D00", Offset = "0xFF9D00", VA = "0xFF9D00")]
		protected Projectile()
		{
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xB5D2B4", Offset = "0xB5D2B4")]
	public struct ProjectileData : INetworkStruct
	{
		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte m_state;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte m_prefabId;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_fireTick;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 m_firePosition;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_fireVelocity;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "FixedBufferPropertyAttribute", RVA = "0xB6E34C", Offset = "0xB6E34C")]
		[SerializeField]
		private FixedStorage@3 _ProjectileUpDirectionOnFire;

		[Token(Token = "0x17000346")]
		public bool IsActive
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0xFF9E64", Offset = "0xFF9E64", VA = "0xFF9E64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001757")]
			[Address(RVA = "0xFF9E74", Offset = "0xFF9E74", VA = "0xFF9E74")]
			set
			{
			}
		}

		[Token(Token = "0x17000347")]
		public bool IsFinished
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0xFF9E84", Offset = "0xFF9E84", VA = "0xFF9E84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001759")]
			[Address(RVA = "0xFF9E94", Offset = "0xFF9E94", VA = "0xFF9E94")]
			set
			{
			}
		}

		[Token(Token = "0x17000348")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A47C", Offset = "0xB8A47C")]
		[AttributeAttribute(Name = "AccuracyAttribute", RVA = "0xB8A47C", Offset = "0xB8A47C")]
		public Vector3 ProjectileUpDirectionOnFire
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0xFF9EA4", Offset = "0xFF9EA4", VA = "0xFF9EA4")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600175B")]
			[Address(RVA = "0xFF9F08", Offset = "0xFF9F08", VA = "0xFF9F08")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000415")]
	public struct ProjectileInterpolationData
	{
		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ProjectileData m_from;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ProjectileData m_to;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_alpha;
	}
	[Token(Token = "0x2000416")]
	public class ProjectileContext
	{
		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NetworkRunner m_runner;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerRef m_inputAuthority;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_floatTick;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_interpolate;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ProjectileInterpolationData m_interpolationData;

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xFF9E5C", Offset = "0xFF9E5C", VA = "0xFF9E5C")]
		public ProjectileContext()
		{
		}
	}
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xB5D2C8", Offset = "0xB5D2C8")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5D2C8", Offset = "0xB5D2C8")]
	public class ProjectileManager : NetworkBehaviour
	{
		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_fullProxyPrediction;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Projectile[] m_projectilePrefabs;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6E418", Offset = "0xB6E418")]
		private ProjectileData[] _Projectiles;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB6E46C", Offset = "0xB6E46C")]
		private int _ProjectileCount;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Projectile[] m_visibleProjectiles;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_visibleProjectileCount;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ProjectileContext m_projectileContext;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RawInterpolator m_projectilesInterpolator;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_isProxy;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ProfilerMarker s_fixedUpdate;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ProfilerMarker s_render;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly ProfilerMarker s_addProjectile;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Changed<ProjectileManager> $IL2CPP_CHANGED;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static ChangedDelegate<ProjectileManager> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static NetworkBehaviourCallbacks<ProjectileManager> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000349")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A4BC", Offset = "0xB8A4BC")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A4BC", Offset = "0xB8A4BC")]
		[AttributeAttribute(Name = "CapacityAttribute", RVA = "0xB8A4BC", Offset = "0xB8A4BC")]
		public NetworkArray<ProjectileData> Projectiles
		{
			[Token(Token = "0x600175D")]
			[Address(RVA = "0xFFA010", Offset = "0xFFA010", VA = "0xFFA010")]
			get
			{
				return default(NetworkArray<ProjectileData>);
			}
		}

		[Token(Token = "0x1700034A")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A510", Offset = "0xB8A510")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A510", Offset = "0xB8A510")]
		private int ProjectileCount
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0xFFA154", Offset = "0xFFA154", VA = "0xFFA154")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600175F")]
			[Address(RVA = "0xFFA1B8", Offset = "0xFFA1B8", VA = "0xFFA1B8")]
			set
			{
			}
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xFFA21C", Offset = "0xFFA21C", VA = "0xFFA21C")]
		public void AddProjectile(Projectile projectilePrefab, Vector3 firePosition, Vector3 velocity, Vector3 projectileUpDirectionOnFire)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xFFA69C", Offset = "0xFFA69C", VA = "0xFFA69C")]
		public Projectile GetPrefabFromPrefabId(int prefabId)
		{
			return null;
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xFFA2B0", Offset = "0xFFA2B0", VA = "0xFFA2B0")]
		public void AddProjectile(Projectile projectilePrefab, ProjectileData data)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xFFA6E8", Offset = "0xFFA6E8", VA = "0xFFA6E8", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xFFA7D8", Offset = "0xFFA7D8", VA = "0xFFA7D8", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xFFA920", Offset = "0xFFA920", VA = "0xFFA920", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xFFAAEC", Offset = "0xFFAAEC", VA = "0xFFAAEC", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xFFB430", Offset = "0xFFB430", VA = "0xFFB430")]
		private Projectile CreateProjectile(ProjectileContext context, ref ProjectileData data)
		{
			return null;
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xFFA8D4", Offset = "0xFFA8D4", VA = "0xFFA8D4")]
		private void DestroyProjectile(Projectile projectile)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xFFB7A0", Offset = "0xFFB7A0", VA = "0xFFB7A0")]
		public ProjectileManager()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xFFB8F0", Offset = "0xFFB8F0", VA = "0xFFB8F0", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xFFB9CC", Offset = "0xFFB9CC", VA = "0xFFB9CC", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
}
namespace Missions
{
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D370", Offset = "0xB5D370")]
	public class Mission : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000419")]
		public class MissionReward
		{
			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6E574", Offset = "0xB6E574")]
			public bool m_giveCurrency;

			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CurrencyConfig m_currency;

			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int m_amount;

			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6E5AC", Offset = "0xB6E5AC")]
			public bool m_giveUnlock;

			[Token(Token = "0x4001A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Game.Unlockable m_unlockable;

			[Token(Token = "0x4001A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6E5E4", Offset = "0xB6E5E4")]
			public bool m_activateMission;

			[Token(Token = "0x4001A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Mission[] m_missions;

			[Token(Token = "0x4001A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6E61C", Offset = "0xB6E61C")]
			public bool m_unlockAchievement;

			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AchievementBase m_achievement;

			[Token(Token = "0x600178C")]
			[Address(RVA = "0xFDC190", Offset = "0xFDC190", VA = "0xFDC190")]
			public void GiveReward(bool currency = true, bool unlockables = true, bool missions = true, bool achievements = true)
			{
			}

			[Token(Token = "0x600178D")]
			[Address(RVA = "0xFDC3B0", Offset = "0xFDC3B0", VA = "0xFDC3B0")]
			public MissionReward()
			{
			}
		}

		[Token(Token = "0x200041A")]
		public enum CompletionType
		{
			[Token(Token = "0x4001A4A")]
			Binary,
			[Token(Token = "0x4001A4B")]
			Incremental
		}

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_id;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizedString m_name;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalizedString m_description;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6E4AC", Offset = "0xB6E4AC")]
		public string m_rawDescription;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite m_icon;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color m_mainColor;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color m_secondaryColor;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_isActive;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public CompletionType m_completionType;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MissionReward m_reward;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E564", Offset = "0xB6E564")]
		private MissionsPlayerDataObject <PlayerDataObject>k__BackingField;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_isInitialized;

		[Token(Token = "0x1700034B")]
		public bool IsActive
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x1CC9D14", Offset = "0x1CC9D14", VA = "0x1CC9D14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034C")]
		public MissionsPlayerDataObject PlayerDataObject
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x1CC9D38", Offset = "0x1CC9D38", VA = "0x1CC9D38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8118C", Offset = "0xB8118C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600177D")]
			[Address(RVA = "0x1CC9D40", Offset = "0x1CC9D40", VA = "0x1CC9D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8119C", Offset = "0xB8119C")]
			set
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event Action OnUpdate
		{
			[Token(Token = "0x600176D")]
			[Address(RVA = "0x1CC939C", Offset = "0x1CC939C", VA = "0x1CC939C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB810AC", Offset = "0xB810AC")]
			add
			{
			}
			[Token(Token = "0x600176E")]
			[Address(RVA = "0x1CC943C", Offset = "0x1CC943C", VA = "0x1CC943C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB810BC", Offset = "0xB810BC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event Action OnComplete
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x1CC94DC", Offset = "0x1CC94DC", VA = "0x1CC94DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB810CC", Offset = "0xB810CC")]
			add
			{
			}
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x1CC957C", Offset = "0x1CC957C", VA = "0x1CC957C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB810DC", Offset = "0xB810DC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event Action OnCollect
		{
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x1CC961C", Offset = "0x1CC961C", VA = "0x1CC961C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB810EC", Offset = "0xB810EC")]
			add
			{
			}
			[Token(Token = "0x6001772")]
			[Address(RVA = "0x1CC96BC", Offset = "0x1CC96BC", VA = "0x1CC96BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB810FC", Offset = "0xB810FC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event Action<bool> OnActivated
		{
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x1CC975C", Offset = "0x1CC975C", VA = "0x1CC975C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8110C", Offset = "0xB8110C")]
			add
			{
			}
			[Token(Token = "0x6001774")]
			[Address(RVA = "0x1CC97FC", Offset = "0x1CC97FC", VA = "0x1CC97FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8111C", Offset = "0xB8111C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000060")]
		public static event Action<bool, Mission> OnMissionActivated
		{
			[Token(Token = "0x6001775")]
			[Address(RVA = "0x1CC989C", Offset = "0x1CC989C", VA = "0x1CC989C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8112C", Offset = "0xB8112C")]
			add
			{
			}
			[Token(Token = "0x6001776")]
			[Address(RVA = "0x1CC9958", Offset = "0x1CC9958", VA = "0x1CC9958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8113C", Offset = "0xB8113C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public static event Action<Mission> OnMissionCollected
		{
			[Token(Token = "0x6001777")]
			[Address(RVA = "0x1CC9A14", Offset = "0x1CC9A14", VA = "0x1CC9A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8114C", Offset = "0xB8114C")]
			add
			{
			}
			[Token(Token = "0x6001778")]
			[Address(RVA = "0x1CC9AD4", Offset = "0x1CC9AD4", VA = "0x1CC9AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8115C", Offset = "0xB8115C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public static event Action<Mission> OnMissionCompleted
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x1CC9B94", Offset = "0x1CC9B94", VA = "0x1CC9B94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8116C", Offset = "0xB8116C")]
			add
			{
			}
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x1CC9C54", Offset = "0x1CC9C54", VA = "0x1CC9C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8117C", Offset = "0xB8117C")]
			remove
			{
			}
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1CC9D48", Offset = "0x1CC9D48", VA = "0x1CC9D48", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1CC9DA4", Offset = "0x1CC9DA4", VA = "0x1CC9DA4", Slot = "5")]
		public virtual void Complete()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1CC9F28", Offset = "0x1CC9F28", VA = "0x1CC9F28")]
		public void SetActive(bool toActive)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1CCA054", Offset = "0x1CCA054", VA = "0x1CCA054")]
		public float GetCompletionCurrentValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x1CCA078", Offset = "0x1CCA078", VA = "0x1CCA078")]
		public void SetCompletionCurrentValue(float toValue)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x1CCA09C", Offset = "0x1CCA09C", VA = "0x1CCA09C", Slot = "6")]
		public virtual float GetCompletionMaxValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x1CCA0A4", Offset = "0x1CCA0A4", VA = "0x1CCA0A4")]
		public float GetCompletionPercent()
		{
			return default(float);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x1CC9F04", Offset = "0x1CC9F04", VA = "0x1CC9F04")]
		public bool IsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1CCA0FC", Offset = "0x1CCA0FC", VA = "0x1CCA0FC")]
		public bool IsCollected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x1CCA120", Offset = "0x1CCA120", VA = "0x1CCA120")]
		public bool IsCompleteNotCollected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x1CCA15C", Offset = "0x1CCA15C", VA = "0x1CCA15C")]
		public void CollectReward()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x1CCA264", Offset = "0x1CCA264", VA = "0x1CCA264")]
		public void ReevaluateReward()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x1CCA2B4", Offset = "0x1CCA2B4", VA = "0x1CCA2B4")]
		protected void EmitUpdateEvent()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x1CCA2C8", Offset = "0x1CCA2C8", VA = "0x1CCA2C8")]
		public Mission()
		{
		}
	}
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D3D0", Offset = "0xB5D3D0")]
	public class MissionAreaUnlock : Mission
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public AreaManager.AreaType m_areaType;

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xF1579C", Offset = "0xF1579C", VA = "0xF1579C", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xF15910", Offset = "0xF15910", VA = "0xF15910")]
		private void AreaUnlocked(object dataObject)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xF159C8", Offset = "0xF159C8", VA = "0xF159C8")]
		public MissionAreaUnlock()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class MissionDisplay : MonoBehaviour, ILocalizeCallback
	{
		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mission m_mission;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform m_rectTransform;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_activeHolder;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_completionHolder;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_collectionUI;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject m_completedUI;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject m_rewardsUI;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_lockUI;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TintChildren m_tintChildren;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUICustom m_nameText;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUICustom m_descriptionText;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUICustom m_completionText;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject m_starFruitRewardHolder;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshProUGUICustom m_starFruitRewardText;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject m_unlockRewardHolder;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshProUGUICustom m_unlockRewardText;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public LocalizedString m_trophyRewardName;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEngine.UI.Extensions.Gradient m_backgroundGradient;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Image m_missionIcon;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UISlantedBar m_completionBar;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool m_inverseCompletionBar;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Color m_lockedColor;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Image[] m_displayImages;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TextMeshProUGUICustom[] m_displayTexts;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public UnityEvent m_onCollect;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float m_completionCurrentValue;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float m_completionMaxValue;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_hasSubscribedToEvents;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_visualsActive;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private string m_currentDisplayedLanguage;

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xF159D0", Offset = "0xF159D0", VA = "0xF159D0")]
		public void Initialize(Mission mission)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xF166A4", Offset = "0xF166A4", VA = "0xF166A4")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xF16730", Offset = "0xF16730", VA = "0xF16730")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xF16968", Offset = "0xF16968", VA = "0xF16968")]
		public void CollectReward()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xF165AC", Offset = "0xF165AC", VA = "0xF165AC")]
		public void SetVisualsActive(bool isActive)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xF169AC", Offset = "0xF169AC", VA = "0xF169AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xF161A0", Offset = "0xF161A0", VA = "0xF161A0")]
		private void SetCollectedUI()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xF16034", Offset = "0xF16034", VA = "0xF16034")]
		private void SetCompletedUI()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xF16304", Offset = "0xF16304", VA = "0xF16304")]
		private void SetupRewardUI()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xF15D84", Offset = "0xF15D84", VA = "0xF15D84")]
		private void UpdateTranslatedMissionAndUnlockName()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xF16B4C", Offset = "0xF16B4C", VA = "0xF16B4C", Slot = "4")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xF16B50", Offset = "0xF16B50", VA = "0xF16B50")]
		public MissionDisplay()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class MissionDisplayManager : MonoBehaviour
	{
		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D430", Offset = "0xB5D430")]
		private sealed class <CompleteSetup>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionDisplayManager <>4__this;

			[Token(Token = "0x4001A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private PadStorageController <storageController>5__2;

			[Token(Token = "0x1700034D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017B1")]
				[Address(RVA = "0xFDCA1C", Offset = "0xFDCA1C", VA = "0xFDCA1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017B3")]
				[Address(RVA = "0xFDCA64", Offset = "0xFDCA64", VA = "0xFDCA64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xFDC444", Offset = "0xFDC444", VA = "0xFDC444")]
			[DebuggerHidden]
			public <CompleteSetup>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xFDC470", Offset = "0xFDC470", VA = "0xFDC470", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xFDC474", Offset = "0xFDC474", VA = "0xFDC474", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017B2")]
			[Address(RVA = "0xFDCA24", Offset = "0xFDCA24", VA = "0xFDCA24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D440", Offset = "0xB5D440")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mission mission;

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xFDC3B8", Offset = "0xFDC3B8", VA = "0xFDC3B8")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xFDC3C0", Offset = "0xFDC3C0", VA = "0xFDC3C0")]
			internal bool <ActivateMissionUI>b__0(MissionDisplay x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PadUIController m_padUIController;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionDisplay m_displayPrefab;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_displayParent;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayoutGroup m_displayLayoutGroup;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScrollRect m_displayScrollRect;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform m_scrollTransform;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ScrollRectScroller m_displayScroller;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI m_missionCompletionText;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent m_onMissionCollected;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<MissionDisplay> m_missionDisplays;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<Mission, int> m_missionIndices;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_initialized;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_readyToSort;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_lastPos;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_childMinX;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_childMaxX;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_checkRectMinX;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_checkRectMaxX;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rect m_workingRect;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 m_cachedAnchoredPosition;

		[Token(Token = "0x4001A7F")]
		private const float DistanceToReCalcVisibility = 0.08f;

		[Token(Token = "0x4001A80")]
		private const float DistanceMarginForLoad = 0.8f;

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xF16B8C", Offset = "0xF16B8C", VA = "0xF16B8C")]
		private void Start()
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xF16F6C", Offset = "0xF16F6C", VA = "0xF16F6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xF17134", Offset = "0xF17134", VA = "0xF17134")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xF17378", Offset = "0xF17378", VA = "0xF17378")]
		private void ForceInitialLocalization()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xF17548", Offset = "0xF17548", VA = "0xF17548")]
		private void UpdateContentVisibility(Vector2 pos)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xF16E80", Offset = "0xF16E80", VA = "0xF16E80")]
		private void SetupUI()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xF1788C", Offset = "0xF1788C", VA = "0xF1788C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB811AC", Offset = "0xB811AC")]
		private IEnumerator CompleteSetup()
		{
			return null;
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xF17904", Offset = "0xF17904", VA = "0xF17904")]
		private void ActivateMissionUI(bool active, Mission mission)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xF17A78", Offset = "0xF17A78", VA = "0xF17A78")]
		private void OnMissionCollected(Mission mission)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xF17AAC", Offset = "0xF17AAC", VA = "0xF17AAC")]
		private void OnMissionCompleted(Mission mission)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xF17ADC", Offset = "0xF17ADC", VA = "0xF17ADC")]
		private void UpdateCompletionText()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xF17DD4", Offset = "0xF17DD4", VA = "0xF17DD4")]
		private int GetMissionSortIndex(Mission mission)
		{
			return default(int);
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xF16F88", Offset = "0xF16F88", VA = "0xF16F88")]
		public void SortMissions(bool forceScroll = false)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xF18068", Offset = "0xF18068", VA = "0xF18068")]
		public void ResetMissionListAnchoredPosition()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xF180B0", Offset = "0xF180B0", VA = "0xF180B0")]
		public void ForceUpdateContentVisibility()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xF180D8", Offset = "0xF180D8", VA = "0xF180D8")]
		public MissionDisplayManager()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xF181B0", Offset = "0xF181B0", VA = "0xF181B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8120C", Offset = "0xB8120C")]
		private int <SortMissions>b__34_0(MissionDisplay x, MissionDisplay y)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D450", Offset = "0xB5D450")]
	public class MissionEvent : Mission
	{
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool m_incrementOnEvent;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int m_neededCompletionAmount;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<GameRules> m_gameRules;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameEventMultiPropertyCondition m_gameEventConditions;

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xF18214", Offset = "0xF18214", VA = "0xF18214", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xF182C8", Offset = "0xF182C8", VA = "0xF182C8", Slot = "5")]
		public override void Complete()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xF1837C", Offset = "0xF1837C", VA = "0xF1837C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xF18424", Offset = "0xF18424", VA = "0xF18424")]
		private void GameEventTriggered(GameEvent eventObject)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xF185DC", Offset = "0xF185DC", VA = "0xF185DC", Slot = "6")]
		public override float GetCompletionMaxValue()
		{
			return default(float);
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xF185F8", Offset = "0xF185F8", VA = "0xF185F8")]
		public MissionEvent()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class MissionManager : MonoBehaviour
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Mission> m_missions;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_resetMissionsOnStart;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E654", Offset = "0xB6E654")]
		public bool m_reevaluateRewardsOnStart;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E68C", Offset = "0xB6E68C")]
		private bool <CompletedInitialization>k__BackingField;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E69C", Offset = "0xB6E69C")]
		private static MissionManager <Instance>k__BackingField;

		[Token(Token = "0x1700034F")]
		public bool CompletedInitialization
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xF1867C", Offset = "0xF1867C", VA = "0xF1867C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8126C", Offset = "0xB8126C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0xF18684", Offset = "0xF18684", VA = "0xF18684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8127C", Offset = "0xB8127C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public int TotalMissionCount
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0xF17D88", Offset = "0xF17D88", VA = "0xF17D88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000351")]
		public int CompletedMissionCount
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0xF17C60", Offset = "0xF17C60", VA = "0xF17C60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000352")]
		public int ReadyToCollectMissionCount
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0xF17F40", Offset = "0xF17F40", VA = "0xF17F40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000353")]
		public static MissionManager Instance
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0xF18690", Offset = "0xF18690", VA = "0xF18690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8128C", Offset = "0xB8128C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xF186DC", Offset = "0xF186DC", VA = "0xF186DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8129C", Offset = "0xB8129C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000063")]
		public static event Action OnMissionsInitialized
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xF16EAC", Offset = "0xF16EAC", VA = "0xF16EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB812AC", Offset = "0xB812AC")]
			add
			{
			}
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xF172B8", Offset = "0xF172B8", VA = "0xF172B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB812BC", Offset = "0xB812BC")]
			remove
			{
			}
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xF18730", Offset = "0xF18730", VA = "0xF18730")]
		private void Start()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xF18A54", Offset = "0xF18A54", VA = "0xF18A54")]
		private void ReevaluateRewards()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xF18874", Offset = "0xF18874", VA = "0xF18874")]
		private void InitializeMissions()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xF18B6C", Offset = "0xF18B6C", VA = "0xF18B6C")]
		public MissionManager()
		{
		}
	}
	[Token(Token = "0x2000422")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D4B0", Offset = "0xB5D4B0")]
	public class MissionSetlists : Mission
	{
		[Token(Token = "0x2000423")]
		public enum CompletionRequirement
		{
			[Token(Token = "0x4001A96")]
			AllAttempted,
			[Token(Token = "0x4001A97")]
			AllPassed,
			[Token(Token = "0x4001A98")]
			AllMinimumGrade
		}

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<LevelSetlist> m_setlists;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public CompletionRequirement m_requirement;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public int m_minimumGradeIndex;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int m_levelCount;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_currentReqValue;

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xF18B74", Offset = "0xF18B74", VA = "0xF18B74", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xF1955C", Offset = "0xF1955C", VA = "0xF1955C", Slot = "5")]
		public override void Complete()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xF19624", Offset = "0xF19624", VA = "0xF19624", Slot = "6")]
		public override float GetCompletionMaxValue()
		{
			return default(float);
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xF19630", Offset = "0xF19630", VA = "0xF19630")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xF196EC", Offset = "0xF196EC", VA = "0xF196EC")]
		private void SetlistUpdated(object data)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xF1953C", Offset = "0xF1953C", VA = "0xF1953C")]
		private void CompleteIfConditionsMet()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xF18D94", Offset = "0xF18D94", VA = "0xF18D94")]
		private bool SetTrackedValue()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xF19498", Offset = "0xF19498", VA = "0xF19498")]
		private void SetCompletionValue(float value)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xF1982C", Offset = "0xF1982C", VA = "0xF1982C")]
		public MissionSetlists()
		{
		}
	}
	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D510", Offset = "0xB5D510")]
	public class MissionStat : Mission
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public StatConfig m_statConfig;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public RangedFloat m_statRanges;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Stat m_stat;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_previousValue;

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xF198B0", Offset = "0xF198B0", VA = "0xF198B0", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xF19A60", Offset = "0xF19A60", VA = "0xF19A60", Slot = "5")]
		public override void Complete()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xF19B14", Offset = "0xF19B14", VA = "0xF19B14", Slot = "6")]
		public override float GetCompletionMaxValue()
		{
			return default(float);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xF19B3C", Offset = "0xF19B3C", VA = "0xF19B3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xF19980", Offset = "0xF19980", VA = "0xF19980")]
		private void OnStatChanged(Stat stat)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xF19BDC", Offset = "0xF19BDC", VA = "0xF19BDC")]
		public MissionStat()
		{
		}
	}
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D570", Offset = "0xB5D570")]
	public class MissionUnlockables : Mission
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Game.Unlockable> m_unlockables;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool m_requireUnlockableSeen;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int m_unlockableCount;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int m_unlockedAmount;

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xF19BE4", Offset = "0xF19BE4", VA = "0xF19BE4", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xF19FD8", Offset = "0xF19FD8", VA = "0xF19FD8", Slot = "5")]
		public override void Complete()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xF1A1AC", Offset = "0xF1A1AC", VA = "0xF1A1AC", Slot = "6")]
		public override float GetCompletionMaxValue()
		{
			return default(float);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xF1A1B8", Offset = "0xF1A1B8", VA = "0xF1A1B8")]
		private void OnUnlockableUnlock()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xF19DF0", Offset = "0xF19DF0", VA = "0xF19DF0")]
		private void UpdateUnlockAmount()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xF19FBC", Offset = "0xF19FBC", VA = "0xF19FBC")]
		private void CompleteIfConditionsMet()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xF1A1FC", Offset = "0xF1A1FC", VA = "0xF1A1FC")]
		public MissionUnlockables()
		{
		}
	}
}
namespace DefaultNamespace
{
	[Token(Token = "0x2000426")]
	public class LogoSwapper : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000427")]
		public struct OverrideSprite
		{
			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Sprite m_sprite;

			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0xB6E6CC", Offset = "0xB6E6CC")]
			public string m_sku;
		}

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected OverrideSprite[] m_overrides;

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1CBEC90", Offset = "0x1CBEC90", VA = "0x1CBEC90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1CBEDD0", Offset = "0x1CBEDD0", VA = "0x1CBEDD0")]
		public LogoSwapper()
		{
		}
	}
}
namespace Locomotion
{
	[Token(Token = "0x2000428")]
	public class LocomotionController : MonoBehaviour
	{
		[Token(Token = "0x2000429")]
		public enum LocomotionMode
		{
			[Token(Token = "0x4001AAD")]
			Blink,
			[Token(Token = "0x4001AAE")]
			Dash,
			[Token(Token = "0x4001AAF")]
			Continuous
		}

		[Token(Token = "0x200042A")]
		public enum RotationMode
		{
			[Token(Token = "0x4001AB1")]
			Snap,
			[Token(Token = "0x4001AB2")]
			Smooth
		}

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LocomotionMode m_locomotionMode;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Player m_player;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerMovementControllerBase m_playerController;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocomotionTeleport m_locomotionTeleport;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TeleportTransitionBlink m_teleportTransitionBlink;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TeleportTransitionDash m_teleportTransitionDash;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TeleportInputHandlerThumbstick m_teleportInputHandlerThumbstick;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E704", Offset = "0xB6E704")]
		private CapsuleCollider <Collider>k__BackingField;

		[Token(Token = "0x17000354")]
		public LocomotionMode CurrentLocomotionMode
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x1CB9EC8", Offset = "0x1CB9EC8", VA = "0x1CB9EC8")]
			get
			{
				return default(LocomotionMode);
			}
		}

		[Token(Token = "0x17000355")]
		public CapsuleCollider Collider
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x1CB9ED0", Offset = "0x1CB9ED0", VA = "0x1CB9ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB812CC", Offset = "0xB812CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x1CB9ED8", Offset = "0x1CB9ED8", VA = "0x1CB9ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB812DC", Offset = "0xB812DC")]
			set
			{
			}
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1CB9EE0", Offset = "0x1CB9EE0", VA = "0x1CB9EE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1CBA004", Offset = "0x1CBA004", VA = "0x1CBA004")]
		public void SetLocomotionMode(LocomotionMode mode)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x1CBA2E8", Offset = "0x1CBA2E8", VA = "0x1CBA2E8")]
		public void SetHandBasedMovement(bool isActive)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1CBA37C", Offset = "0x1CBA37C", VA = "0x1CBA37C")]
		public void SetRotationMode(RotationMode mode)
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x1CBA414", Offset = "0x1CBA414", VA = "0x1CBA414")]
		public void SetRotationSpeed(int rotationSpeed)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x1CBA4A4", Offset = "0x1CBA4A4", VA = "0x1CBA4A4")]
		public void SetMovementSpeed(float movementSpeed)
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1CBA534", Offset = "0x1CBA534", VA = "0x1CBA534")]
		public void SetFlipMovement(bool flipMovement)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x1CBA60C", Offset = "0x1CBA60C", VA = "0x1CBA60C")]
		public void SetThumbstickButtonTeleportActive(bool isActive)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x1CBA62C", Offset = "0x1CBA62C", VA = "0x1CBA62C")]
		public LocomotionController()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class LocomotionTeleport : MonoBehaviour
	{
		[Token(Token = "0x200042C")]
		public class AimData
		{
			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RaycastHit m_targetHitInfo;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool m_targetValid;

			[Token(Token = "0x4001ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 m_destination;

			[Token(Token = "0x4001ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float m_radius;

			[Token(Token = "0x4001ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool m_dropDownOnLastPoint;

			[Token(Token = "0x4001ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
			public bool m_isCustomParabola;

			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6EB44", Offset = "0xB6EB44")]
			private readonly List<Vector3> <Points>k__BackingField;

			[Token(Token = "0x17000360")]
			public List<Vector3> Points
			{
				[Token(Token = "0x6001833")]
				[Address(RVA = "0xFDBA50", Offset = "0xFDBA50", VA = "0xFDBA50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81804", Offset = "0xB81804")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001832")]
			[Address(RVA = "0xFDB9CC", Offset = "0xFDB9CC", VA = "0xFDB9CC")]
			public AimData()
			{
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0xFDBA58", Offset = "0xFDBA58", VA = "0xFDBA58")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0xFDBAB8", Offset = "0xFDBAB8", VA = "0xFDBAB8", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x200042D")]
		public enum States
		{
			[Token(Token = "0x4001AE0")]
			Ready,
			[Token(Token = "0x4001AE1")]
			Aim,
			[Token(Token = "0x4001AE2")]
			CancelAim,
			[Token(Token = "0x4001AE3")]
			PreTeleport,
			[Token(Token = "0x4001AE4")]
			CancelTeleport,
			[Token(Token = "0x4001AE5")]
			Teleporting,
			[Token(Token = "0x4001AE6")]
			PostTeleport
		}

		[Token(Token = "0x200042E")]
		public enum AimCollisionTypes
		{
			[Token(Token = "0x4001AE8")]
			Point,
			[Token(Token = "0x4001AE9")]
			Sphere,
			[Token(Token = "0x4001AEA")]
			Capsule
		}

		[Token(Token = "0x200042F")]
		public enum TeleportIntentions
		{
			[Token(Token = "0x4001AEC")]
			None,
			[Token(Token = "0x4001AED")]
			Aim,
			[Token(Token = "0x4001AEE")]
			PreTeleport,
			[Token(Token = "0x4001AEF")]
			Teleport
		}

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D5D0", Offset = "0xB5D5D0")]
		private sealed class <ReadyStateCoroutine>d__90 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocomotionTeleport <>4__this;

			[Token(Token = "0x17000361")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001839")]
				[Address(RVA = "0xFDB818", Offset = "0xFDB818", VA = "0xFDB818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000362")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600183B")]
				[Address(RVA = "0xFDB860", Offset = "0xFDB860", VA = "0xFDB860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001836")]
			[Address(RVA = "0xFDB6DC", Offset = "0xFDB6DC", VA = "0xFDB6DC")]
			[DebuggerHidden]
			public <ReadyStateCoroutine>d__90(int <>1__state)
			{
			}

			[Token(Token = "0x6001837")]
			[Address(RVA = "0xFDB708", Offset = "0xFDB708", VA = "0xFDB708", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001838")]
			[Address(RVA = "0xFDB70C", Offset = "0xFDB70C", VA = "0xFDB70C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600183A")]
			[Address(RVA = "0xFDB820", Offset = "0xFDB820", VA = "0xFDB820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D5E0", Offset = "0xB5D5E0")]
		private sealed class <AimStateCoroutine>d__95 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocomotionTeleport <>4__this;

			[Token(Token = "0x17000363")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600183F")]
				[Address(RVA = "0xFDB148", Offset = "0xFDB148", VA = "0xFDB148", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000364")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001841")]
				[Address(RVA = "0xFDB190", Offset = "0xFDB190", VA = "0xFDB190", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600183C")]
			[Address(RVA = "0xFDAFC0", Offset = "0xFDAFC0", VA = "0xFDAFC0")]
			[DebuggerHidden]
			public <AimStateCoroutine>d__95(int <>1__state)
			{
			}

			[Token(Token = "0x600183D")]
			[Address(RVA = "0xFDAFEC", Offset = "0xFDAFEC", VA = "0xFDAFEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600183E")]
			[Address(RVA = "0xFDAFF0", Offset = "0xFDAFF0", VA = "0xFDAFF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001840")]
			[Address(RVA = "0xFDB150", Offset = "0xFDB150", VA = "0xFDB150", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D5F0", Offset = "0xB5D5F0")]
		private sealed class <CancelAimStateCoroutine>d__99 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocomotionTeleport <>4__this;

			[Token(Token = "0x17000365")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001845")]
				[Address(RVA = "0xFDB274", Offset = "0xFDB274", VA = "0xFDB274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000366")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001847")]
				[Address(RVA = "0xFDB2BC", Offset = "0xFDB2BC", VA = "0xFDB2BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001842")]
			[Address(RVA = "0xFDB198", Offset = "0xFDB198", VA = "0xFDB198")]
			[DebuggerHidden]
			public <CancelAimStateCoroutine>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x6001843")]
			[Address(RVA = "0xFDB1C4", Offset = "0xFDB1C4", VA = "0xFDB1C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001844")]
			[Address(RVA = "0xFDB1C8", Offset = "0xFDB1C8", VA = "0xFDB1C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001846")]
			[Address(RVA = "0xFDB27C", Offset = "0xFDB27C", VA = "0xFDB27C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D600", Offset = "0xB5D600")]
		private sealed class <PreTeleportStateCoroutine>d__103 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocomotionTeleport <>4__this;

			[Token(Token = "0x17000367")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600184B")]
				[Address(RVA = "0xFDB68C", Offset = "0xFDB68C", VA = "0xFDB68C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000368")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600184D")]
				[Address(RVA = "0xFDB6D4", Offset = "0xFDB6D4", VA = "0xFDB6D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001848")]
			[Address(RVA = "0xFDB570", Offset = "0xFDB570", VA = "0xFDB570")]
			[DebuggerHidden]
			public <PreTeleportStateCoroutine>d__103(int <>1__state)
			{
			}

			[Token(Token = "0x6001849")]
			[Address(RVA = "0xFDB59C", Offset = "0xFDB59C", VA = "0xFDB59C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600184A")]
			[Address(RVA = "0xFDB5A0", Offset = "0xFDB5A0", VA = "0xFDB5A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600184C")]
			[Address(RVA = "0xFDB694", Offset = "0xFDB694", VA = "0xFDB694", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D610", Offset = "0xB5D610")]
		private sealed class <CancelTeleportStateCoroutine>d__107 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocomotionTeleport <>4__this;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001851")]
				[Address(RVA = "0xFDB3A0", Offset = "0xFDB3A0", VA = "0xFDB3A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001853")]
				[Address(RVA = "0xFDB3E8", Offset = "0xFDB3E8", VA = "0xFDB3E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600184E")]
			[Address(RVA = "0xFDB2C4", Offset = "0xFDB2C4", VA = "0xFDB2C4")]
			[DebuggerHidden]
			public <CancelTeleportStateCoroutine>d__107(int <>1__state)
			{
			}

			[Token(Token = "0x600184F")]
			[Address(RVA = "0xFDB2F0", Offset = "0xFDB2F0", VA = "0xFDB2F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001850")]
			[Address(RVA = "0xFDB2F4", Offset = "0xFDB2F4", VA = "0xFDB2F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001852")]
			[Address(RVA = "0xFDB3A8", Offset = "0xFDB3A8", VA = "0xFDB3A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D620", Offset = "0xB5D620")]
		private sealed class <TeleportingStateCoroutine>d__108 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocomotionTeleport <>4__this;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001857")]
				[Address(RVA = "0xFDB97C", Offset = "0xFDB97C", VA = "0xFDB97C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001859")]
				[Address(RVA = "0xFDB9C4", Offset = "0xFDB9C4", VA = "0xFDB9C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001854")]
			[Address(RVA = "0xFDB868", Offset = "0xFDB868", VA = "0xFDB868")]
			[DebuggerHidden]
			public <TeleportingStateCoroutine>d__108(int <>1__state)
			{
			}

			[Token(Token = "0x6001855")]
			[Address(RVA = "0xFDB894", Offset = "0xFDB894", VA = "0xFDB894", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001856")]
			[Address(RVA = "0xFDB898", Offset = "0xFDB898", VA = "0xFDB898", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001858")]
			[Address(RVA = "0xFDB984", Offset = "0xFDB984", VA = "0xFDB984", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D630", Offset = "0xB5D630")]
		private sealed class <PostTeleportStateCoroutine>d__109 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocomotionTeleport <>4__this;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600185D")]
				[Address(RVA = "0xFDB520", Offset = "0xFDB520", VA = "0xFDB520", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600185F")]
				[Address(RVA = "0xFDB568", Offset = "0xFDB568", VA = "0xFDB568", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0xFDB3F0", Offset = "0xFDB3F0", VA = "0xFDB3F0")]
			[DebuggerHidden]
			public <PostTeleportStateCoroutine>d__109(int <>1__state)
			{
			}

			[Token(Token = "0x600185B")]
			[Address(RVA = "0xFDB41C", Offset = "0xFDB41C", VA = "0xFDB41C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600185C")]
			[Address(RVA = "0xFDB420", Offset = "0xFDB420", VA = "0xFDB420", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185E")]
			[Address(RVA = "0xFDB528", Offset = "0xFDB528", VA = "0xFDB528", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E714", Offset = "0xB6E714")]
		public bool m_enableMovementDuringReady;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E74C", Offset = "0xB6E74C")]
		public bool m_enableMovementDuringAim;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E784", Offset = "0xB6E784")]
		public bool m_enableMovementDuringPreTeleport;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E7BC", Offset = "0xB6E7BC")]
		public bool m_enableMovementDuringPostTeleport;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E7F4", Offset = "0xB6E7F4")]
		public bool m_enableRotationDuringReady;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E82C", Offset = "0xB6E82C")]
		public bool m_enableRotationDuringAim;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E864", Offset = "0xB6E864")]
		public bool m_enableRotationDuringPreTeleport;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E89C", Offset = "0xB6E89C")]
		public bool m_enableRotationDuringPostTeleport;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E8D4", Offset = "0xB6E8D4")]
		private States <CurrentState>k__BackingField;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E8E4", Offset = "0xB6E8E4")]
		private TeleportAimHandler <AimHandler>k__BackingField;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E8F4", Offset = "0xB6E8F4")]
		private TeleportTargetHandler <TargetHandler>k__BackingField;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E904", Offset = "0xB6E904")]
		public TeleportDestination m_teleportDestinationPrefab;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E93C", Offset = "0xB6E93C")]
		public int m_teleportDestinationLayer;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E974", Offset = "0xB6E974")]
		private TeleportIntentions <CurrentIntention>k__BackingField;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E994", Offset = "0xB6E994")]
		private TeleportInputHandler <InputHandler>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isPreTeleportRequested;

		[NonSerialized]
		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool m_isTransitioning;

		[NonSerialized]
		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_isPostTeleportRequested;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TeleportDestination m_teleportDestination;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6E9A4", Offset = "0xB6E9A4")]
		private LocomotionController <LocomotionController>k__BackingField;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E9B4", Offset = "0xB6E9B4")]
		public AimCollisionTypes m_aimCollisionType;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6E9EC", Offset = "0xB6E9EC")]
		public bool m_useCharacterCollisionData;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EA24", Offset = "0xB6EA24")]
		public float m_aimCollisionRadius;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EA5C", Offset = "0xB6EA5C")]
		public float m_aimCollisionHeight;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ISound m_teleportSound;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6EA94", Offset = "0xB6EA94")]
		private TeleportTransition <TeleportTransition>k__BackingField;

		[Token(Token = "0x17000356")]
		public States CurrentState
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x1CBCD10", Offset = "0x1CBCD10", VA = "0x1CBCD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB812EC", Offset = "0xB812EC")]
			get
			{
				return default(States);
			}
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x1CBCD18", Offset = "0x1CBCD18", VA = "0x1CBCD18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB812FC", Offset = "0xB812FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public bool IsAnyTeleportState
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x1CBCD20", Offset = "0x1CBCD20", VA = "0x1CBCD20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000358")]
		public TeleportAimHandler AimHandler
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x1CBCD4C", Offset = "0x1CBCD4C", VA = "0x1CBCD4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8130C", Offset = "0xB8130C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x1CBCD54", Offset = "0x1CBCD54", VA = "0x1CBCD54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8131C", Offset = "0xB8131C")]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public TeleportTargetHandler TargetHandler
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x1CBCD5C", Offset = "0x1CBCD5C", VA = "0x1CBCD5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8132C", Offset = "0xB8132C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x1CBCD64", Offset = "0x1CBCD64", VA = "0x1CBCD64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8133C", Offset = "0xB8133C")]
			set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public TeleportIntentions CurrentIntention
		{
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0x1CBCD6C", Offset = "0x1CBCD6C", VA = "0x1CBCD6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8134C", Offset = "0xB8134C")]
			get
			{
				return default(TeleportIntentions);
			}
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x1CBCD74", Offset = "0x1CBCD74", VA = "0x1CBCD74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8135C", Offset = "0xB8135C")]
			set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public TeleportInputHandler InputHandler
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x1CBCF98", Offset = "0x1CBCF98", VA = "0x1CBCF98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8138C", Offset = "0xB8138C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x1CBCFA0", Offset = "0x1CBCFA0", VA = "0x1CBCFA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8139C", Offset = "0xB8139C")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public Quaternion DestinationRotation
		{
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x1CBCFA8", Offset = "0x1CBCFA8", VA = "0x1CBCFA8")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700035D")]
		public Vector3 DestinationPosition
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x1CBCFD0", Offset = "0x1CBCFD0", VA = "0x1CBCFD0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700035E")]
		public LocomotionController LocomotionController
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x1CBCFF8", Offset = "0x1CBCFF8", VA = "0x1CBCFF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB813AC", Offset = "0xB813AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x1CBD000", Offset = "0x1CBD000", VA = "0x1CBD000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB813BC", Offset = "0xB813BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public TeleportTransition TeleportTransition
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0x1CBD008", Offset = "0x1CBD008", VA = "0x1CBD008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB813CC", Offset = "0xB813CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x1CBD010", Offset = "0x1CBD010", VA = "0x1CBD010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB813DC", Offset = "0xB813DC")]
			set
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x1CBCD7C", Offset = "0x1CBCD7C", VA = "0x1CBCD7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8136C", Offset = "0xB8136C")]
			add
			{
			}
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x1CBCE1C", Offset = "0x1CBCE1C", VA = "0x1CBCE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8137C", Offset = "0xB8137C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event Action EnterStateReady
		{
			[Token(Token = "0x6001803")]
			[Address(RVA = "0x1CBD018", Offset = "0x1CBD018", VA = "0x1CBD018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB813EC", Offset = "0xB813EC")]
			add
			{
			}
			[Token(Token = "0x6001804")]
			[Address(RVA = "0x1CBD0B8", Offset = "0x1CBD0B8", VA = "0x1CBD0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB813FC", Offset = "0xB813FC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event Action EnterStateAim
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0x1CBD158", Offset = "0x1CBD158", VA = "0x1CBD158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8140C", Offset = "0xB8140C")]
			add
			{
			}
			[Token(Token = "0x6001806")]
			[Address(RVA = "0x1CBD1F8", Offset = "0x1CBD1F8", VA = "0x1CBD1F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8141C", Offset = "0xB8141C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event Action<AimData> UpdateAimData
		{
			[Token(Token = "0x6001807")]
			[Address(RVA = "0x1CBD298", Offset = "0x1CBD298", VA = "0x1CBD298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8142C", Offset = "0xB8142C")]
			add
			{
			}
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x1CBD338", Offset = "0x1CBD338", VA = "0x1CBD338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8143C", Offset = "0xB8143C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public event Action EnterStateTeleporting
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x1CBD3D8", Offset = "0x1CBD3D8", VA = "0x1CBD3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8144C", Offset = "0xB8144C")]
			add
			{
			}
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x1CBD478", Offset = "0x1CBD478", VA = "0x1CBD478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8145C", Offset = "0xB8145C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event Action EnterStatePostTeleport
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x1CBD518", Offset = "0x1CBD518", VA = "0x1CBD518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8146C", Offset = "0xB8146C")]
			add
			{
			}
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x1CBD5B8", Offset = "0x1CBD5B8", VA = "0x1CBD5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8147C", Offset = "0xB8147C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event Action<Transform, Vector3, Quaternion> Teleported
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x1CBD658", Offset = "0x1CBD658", VA = "0x1CBD658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8148C", Offset = "0xB8148C")]
			add
			{
			}
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x1CBD6F8", Offset = "0x1CBD6F8", VA = "0x1CBD6F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8149C", Offset = "0xB8149C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event Action ExitStateAim
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0x1CBDD7C", Offset = "0x1CBDD7C", VA = "0x1CBDD7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81544", Offset = "0xB81544")]
			add
			{
			}
			[Token(Token = "0x600181B")]
			[Address(RVA = "0x1CBDE1C", Offset = "0x1CBDE1C", VA = "0x1CBDE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81554", Offset = "0xB81554")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event Action EnterStateCancelAim
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0x1CBDF34", Offset = "0x1CBDF34", VA = "0x1CBDF34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB815C4", Offset = "0xB815C4")]
			add
			{
			}
			[Token(Token = "0x600181E")]
			[Address(RVA = "0x1CBDFD4", Offset = "0x1CBDFD4", VA = "0x1CBDFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB815D4", Offset = "0xB815D4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event Action EnterStatePreTeleport
		{
			[Token(Token = "0x6001820")]
			[Address(RVA = "0x1CBE0EC", Offset = "0x1CBE0EC", VA = "0x1CBE0EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81644", Offset = "0xB81644")]
			add
			{
			}
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x1CBE18C", Offset = "0x1CBE18C", VA = "0x1CBE18C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81654", Offset = "0xB81654")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006E")]
		public event Action EnterStateCancelTeleport
		{
			[Token(Token = "0x6001823")]
			[Address(RVA = "0x1CBE2A4", Offset = "0x1CBE2A4", VA = "0x1CBE2A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB816C4", Offset = "0xB816C4")]
			add
			{
			}
			[Token(Token = "0x6001824")]
			[Address(RVA = "0x1CBE344", Offset = "0x1CBE344", VA = "0x1CBE344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB816D4", Offset = "0xB816D4")]
			remove
			{
			}
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x1CBCCC8", Offset = "0x1CBCCC8", VA = "0x1CBCCC8")]
		public void EnableMovement(bool ready, bool aim, bool pre, bool post)
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x1CBCCEC", Offset = "0x1CBCCEC", VA = "0x1CBCCEC")]
		public void EnableRotation(bool ready, bool aim, bool pre, bool post)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x1CBCEBC", Offset = "0x1CBCEBC", VA = "0x1CBCEBC")]
		public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1CBD798", Offset = "0x1CBD798", VA = "0x1CBD798")]
		public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1CBD9E4", Offset = "0x1CBD9E4", VA = "0x1CBD9E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB814AC", Offset = "0xB814AC")]
		private void LogState(string msg)
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1CBD9E8", Offset = "0x1CBD9E8", VA = "0x1CBD9E8")]
		private void CreateNewTeleportDestination()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1CBDAE8", Offset = "0x1CBDAE8", VA = "0x1CBDAE8")]
		private void DeactivateDestination()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1CBDB04", Offset = "0x1CBDB04", VA = "0x1CBDB04")]
		public void RecycleTeleportDestination(TeleportDestination oldDestination)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1CBDB34", Offset = "0x1CBDB34", VA = "0x1CBDB34")]
		private void EnableMotion(bool enableLinear, bool enableRotation)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1CBDB60", Offset = "0x1CBDB60", VA = "0x1CBDB60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1CBDBC4", Offset = "0x1CBDBC4", VA = "0x1CBDBC4", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1CBDC70", Offset = "0x1CBDC70", VA = "0x1CBDC70", Slot = "5")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1CBDBF8", Offset = "0x1CBDBF8", VA = "0x1CBDBF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB814E4", Offset = "0xB814E4")]
		private IEnumerator ReadyStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1CBDD0C", Offset = "0x1CBDD0C", VA = "0x1CBDD0C")]
		public void OnUpdateAimData(AimData aimData)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1CBDEBC", Offset = "0x1CBDEBC", VA = "0x1CBDEBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB81564", Offset = "0xB81564")]
		private IEnumerator AimStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1CBE074", Offset = "0x1CBE074", VA = "0x1CBE074")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB815E4", Offset = "0xB815E4")]
		private IEnumerator CancelAimStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1CBE22C", Offset = "0x1CBE22C", VA = "0x1CBE22C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB81664", Offset = "0xB81664")]
		private IEnumerator PreTeleportStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1CBE3E4", Offset = "0x1CBE3E4", VA = "0x1CBE3E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB816E4", Offset = "0xB816E4")]
		private IEnumerator CancelTeleportStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1CBE45C", Offset = "0x1CBE45C", VA = "0x1CBE45C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB81744", Offset = "0xB81744")]
		private IEnumerator TeleportingStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1CBE4D4", Offset = "0x1CBE4D4", VA = "0x1CBE4D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB817A4", Offset = "0xB817A4")]
		private IEnumerator PostTeleportStateCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1CBE54C", Offset = "0x1CBE54C", VA = "0x1CBE54C")]
		public void Teleport(Vector3 destPosition, Quaternion destRotation)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1CBE6F4", Offset = "0x1CBE6F4", VA = "0x1CBE6F4")]
		public void Teleport(Vector3 destPosition)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1CBE8CC", Offset = "0x1CBE8CC", VA = "0x1CBE8CC")]
		public void DoTeleport()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x1CBE92C", Offset = "0x1CBE92C", VA = "0x1CBE92C")]
		public void DoWarp(Vector3 startPos, Vector3 offset, float positionPercent)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x1CBEAE4", Offset = "0x1CBEAE4", VA = "0x1CBEAE4")]
		public Vector3 GetCharacterPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x1CBEB18", Offset = "0x1CBEB18", VA = "0x1CBEB18")]
		public Vector3 GetCharacterFeetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x1CBE904", Offset = "0x1CBE904", VA = "0x1CBE904")]
		private Vector3 GetTeleportDestination()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1CBEB54", Offset = "0x1CBEB54", VA = "0x1CBEB54")]
		public Quaternion GetHeadRotationY()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1CBA27C", Offset = "0x1CBA27C", VA = "0x1CBA27C")]
		public void CancelAllTeleporting()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x1CBEC1C", Offset = "0x1CBEC1C", VA = "0x1CBEC1C")]
		public LocomotionTeleport()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class OnTeleport : MonoBehaviour
	{
		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6EB54", Offset = "0xB6EB54")]
		[SerializeField]
		private UnityEvent m_onTeleportStarted;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_playEventOnEnable;

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x184B0C0", Offset = "0x184B0C0", VA = "0x184B0C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x184B1B0", Offset = "0x184B1B0", VA = "0x184B1B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x184B288", Offset = "0x184B288", VA = "0x184B288")]
		public OnTeleport()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public class PlayerMovementController : PlayerMovementControllerBase
	{
		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform m_cameraRig;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6EBB0", Offset = "0xB6EBB0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6EBB0", Offset = "0xB6EBB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EBB0", Offset = "0xB6EBB0")]
		public float m_continuousMovementDeadZone;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6EC34", Offset = "0xB6EC34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EC34", Offset = "0xB6EC34")]
		public float m_continuousMovementMinSpeed;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6EC88", Offset = "0xB6EC88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EC88", Offset = "0xB6EC88")]
		public float m_continuousMovementRaycastDistance;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6ECE8", Offset = "0xB6ECE8")]
		public float m_continuousMovementRaycastRadius;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6ED20", Offset = "0xB6ED20")]
		public LayerMask m_continuousMovementRaycastMask;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6ED58", Offset = "0xB6ED58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6ED58", Offset = "0xB6ED58")]
		public float m_minDistanceForContinuousMove;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6EDB8", Offset = "0xB6EDB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EDB8", Offset = "0xB6EDB8")]
		public float m_continuousMovementSmoothing;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_rotationAngle;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EE18", Offset = "0xB6EE18")]
		public float m_rotationSpeed;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6EE50", Offset = "0xB6EE50")]
		public float m_snapTurnJoystickUpperThreshold;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6EE68", Offset = "0xB6EE68")]
		public float m_snapTurnJoystickLowerThreshold;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool m_allowSnapTurnWhileAiming;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float m_smoothTurnDeadZone;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6EE80", Offset = "0xB6EE80")]
		public float m_smoothTurnMinSpeed;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool m_useJoystickForRotationSpeed;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FNVR2.Input.UI.VRInputModule m_vrInputModule;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LocomotionTeleport m_locomotionTeleport;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_stepBackDistance;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_stepBackHeightDistance;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float m_stepBackNavMeshSearchRadius;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ISound m_cannotStepBackSound;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NavMeshAgent m_activeNavMeshAgent;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected ControllerInputBase m_controllerInputRight;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected ControllerInputBase m_controllerInputLeft;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_rightHandSnapTurnReady;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool m_leftHandSnapTurnReady;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		private bool m_leftHandStepBackReady;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		private bool m_rightHandStepBackReady;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool m_leftHandSmoothRotating;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		private bool m_rightHandSmoothRotating;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RaycastHit m_raycastHit;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private NavMeshHit m_navMeshHit;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_movementJoystickMagnitude;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool m_canMoveInWantedDirection;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 m_wantedMovementDirection;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 m_wantedMovementPosition;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		protected IHand m_leftHand;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected IHand m_rightHand;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		protected IHand m_selectedHand;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool m_isTeleporting;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		private bool m_isTeleportMoving;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
		protected bool m_canContinuousMove;

		[Token(Token = "0x4001B32")]
		private const float Margin = 0.1f;

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xF60D4C", Offset = "0xF60D4C", VA = "0xF60D4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xF611F8", Offset = "0xF611F8", VA = "0xF611F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xF616F0", Offset = "0xF616F0", VA = "0xF616F0", Slot = "10")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xF62228", Offset = "0xF62228", VA = "0xF62228", Slot = "4")]
		public override void UpdateLocomotionMode(LocomotionController.LocomotionMode mode)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xF622CC", Offset = "0xF622CC", VA = "0xF622CC", Slot = "5")]
		public override void SetContinuousMotionActive(bool isActive)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xF622D8", Offset = "0xF622D8", VA = "0xF622D8")]
		private void TeleportMoveStarted()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xF62368", Offset = "0xF62368", VA = "0xF62368")]
		private void TeleportMoveCompleted()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xF6250C", Offset = "0xF6250C", VA = "0xF6250C")]
		private void TeleportMoveCanceled()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xF62628", Offset = "0xF62628", VA = "0xF62628")]
		private void TeleportStarted()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xF62688", Offset = "0xF62688", VA = "0xF62688")]
		private void TeleportCompleted()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xF61984", Offset = "0xF61984", VA = "0xF61984")]
		private void RotatePlayerToHMD()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xF61B40", Offset = "0xF61B40", VA = "0xF61B40")]
		private void StickMovement()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xF62D04", Offset = "0xF62D04", VA = "0xF62D04", Slot = "11")]
		protected virtual Vector2 GetPrimaryAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xF62754", Offset = "0xF62754", VA = "0xF62754")]
		private bool SetWantedMovementPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xF62940", Offset = "0xF62940", VA = "0xF62940")]
		private void MovePlayerOnNavMesh()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xF62D64", Offset = "0xF62D64", VA = "0xF62D64")]
		private void MoveActiveNavMeshAgent(Vector3 direction)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xF62E24", Offset = "0xF62E24", VA = "0xF62E24")]
		private void SetActiveNavMeshAgentDestination(Vector3 destination)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xF61AE8", Offset = "0xF61AE8", VA = "0xF61AE8")]
		private void SmoothTurn()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xF62EA0", Offset = "0xF62EA0", VA = "0xF62EA0")]
		private void DoSmoothTurnInput(ControllerInputBase.HandSide handSide)
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xF62F98", Offset = "0xF62F98", VA = "0xF62F98")]
		private void SmoothTurnWithControllerInput(ControllerInputBase controllerInputBase, ref bool smoothRotating)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xF61B14", Offset = "0xF61B14", VA = "0xF61B14")]
		private void SnapTurn()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xF63110", Offset = "0xF63110", VA = "0xF63110")]
		private void DoSnapTurnInput(ControllerInputBase.HandSide handSide)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xF6323C", Offset = "0xF6323C", VA = "0xF6323C")]
		private void SnapTurnWithControllerInput(ControllerInputBase controllerInputBase, ref bool snapTurnReady, bool stepBackReady)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xF633C0", Offset = "0xF633C0", VA = "0xF633C0")]
		private void StepBackInput(ControllerInputBase controllerInputBase, ref bool stepBackReady, bool snapTurnReady)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xF637F0", Offset = "0xF637F0", VA = "0xF637F0")]
		private bool FindStepBackwardPosition(Vector3 start, Vector3 end, out Vector3 stepBackPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xF638C4", Offset = "0xF638C4", VA = "0xF638C4", Slot = "9")]
		public override void Move(Vector3 position)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xF63A08", Offset = "0xF63A08", VA = "0xF63A08")]
		private void OnHmdReset()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xF63A8C", Offset = "0xF63A8C", VA = "0xF63A8C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xF63D20", Offset = "0xF63D20", VA = "0xF63D20")]
		public PlayerMovementController()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class PlayerMovementControllerBase : MonoBehaviour
	{
		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_enableContinuousMovement;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_useHandDirectionForMovement;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_enableRotation;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool m_smoothRotation;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_rotationSpeedMultiplier;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_movementSpeed;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_hmdRotatesPlayer;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavMeshAgent m_continuousNavMeshAgent;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TeleportInputHandlerThumbstick.ControllerSide m_whichControllerToUse;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6EE98", Offset = "0xB6EE98")]
		private bool <ForceDisableRotation>k__BackingField;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6EEA8", Offset = "0xB6EEA8")]
		private bool <IsMovingOrTurning>k__BackingField;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6EEB8", Offset = "0xB6EEB8")]
		private float <DesiredYRotation>k__BackingField;

		[Token(Token = "0x1700036F")]
		public bool ForceDisableRotation
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0xFF1338", Offset = "0xFF1338", VA = "0xFF1338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81A44", Offset = "0xB81A44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001881")]
			[Address(RVA = "0xFF1340", Offset = "0xFF1340", VA = "0xFF1340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81A54", Offset = "0xB81A54")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public bool IsMovingOrTurning
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0xFF134C", Offset = "0xFF134C", VA = "0xFF134C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81A64", Offset = "0xB81A64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001883")]
			[Address(RVA = "0xFF1354", Offset = "0xFF1354", VA = "0xFF1354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81A74", Offset = "0xB81A74")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public float DesiredYRotation
		{
			[Token(Token = "0x6001884")]
			[Address(RVA = "0xFF1360", Offset = "0xFF1360", VA = "0xFF1360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81A84", Offset = "0xB81A84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001885")]
			[Address(RVA = "0xFF1368", Offset = "0xFF1368", VA = "0xFF1368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81A94", Offset = "0xB81A94")]
			set
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public event Action<float, float> OnSnapTurn
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0xFF1370", Offset = "0xFF1370", VA = "0xFF1370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AA4", Offset = "0xB81AA4")]
			add
			{
			}
			[Token(Token = "0x6001887")]
			[Address(RVA = "0xFF1410", Offset = "0xFF1410", VA = "0xFF1410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AB4", Offset = "0xB81AB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public event Action OnStepBack
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0xFF14B0", Offset = "0xFF14B0", VA = "0xFF14B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AC4", Offset = "0xB81AC4")]
			add
			{
			}
			[Token(Token = "0x6001889")]
			[Address(RVA = "0xFF1550", Offset = "0xFF1550", VA = "0xFF1550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AD4", Offset = "0xB81AD4")]
			remove
			{
			}
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xFF15F0", Offset = "0xFF15F0", VA = "0xFF15F0", Slot = "4")]
		public virtual void UpdateLocomotionMode(LocomotionController.LocomotionMode mode)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xFF15F4", Offset = "0xFF15F4", VA = "0xFF15F4", Slot = "5")]
		public virtual void SetContinuousMotionActive(bool isActive)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xFF15F8", Offset = "0xFF15F8", VA = "0xFF15F8")]
		protected void CallOnSnapTurn(float delta, float angle)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xFF1670", Offset = "0xFF1670", VA = "0xFF1670")]
		protected void CallOnStepBack()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xFF1684", Offset = "0xFF1684", VA = "0xFF1684", Slot = "6")]
		public virtual void MoveDelta(float yRotationDelta)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xFF16F8", Offset = "0xFF16F8", VA = "0xFF16F8", Slot = "7")]
		public virtual void Move(float yRotation)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xFF1820", Offset = "0xFF1820", VA = "0xFF1820", Slot = "8")]
		public virtual void Move(Vector3 position, float yRotation)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xFF1880", Offset = "0xFF1880", VA = "0xFF1880", Slot = "9")]
		public virtual void Move(Vector3 position)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xFF1970", Offset = "0xFF1970", VA = "0xFF1970")]
		public void SetDesiredYRotationToCameraView()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xFF1A08", Offset = "0xFF1A08", VA = "0xFF1A08")]
		public PlayerMovementControllerBase()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class PlayerMovementControllerFPS : PlayerMovementController
	{
		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public Vector2 m_rotationSpeedVector;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public float m_fpsMovementSpeed;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public float m_lookSpeed;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float m_rotationX;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool m_enableMouseCapture;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector3 m_defaultHeadPosition;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 m_crouchedHeadPosition;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6EEE8", Offset = "0xB6EEE8")]
		private static bool <MouseRotationEnabled>k__BackingField;

		[Token(Token = "0x17000372")]
		public static bool MouseRotationEnabled
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0xFF1A30", Offset = "0xFF1A30", VA = "0xFF1A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AE4", Offset = "0xB81AE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001895")]
			[Address(RVA = "0xFF1A94", Offset = "0xFF1A94", VA = "0xFF1A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81AF4", Offset = "0xB81AF4")]
			set
			{
			}
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xFF1B00", Offset = "0xFF1B00", VA = "0xFF1B00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xFF1B18", Offset = "0xFF1B18", VA = "0xFF1B18", Slot = "10")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xFF2170", Offset = "0xFF2170", VA = "0xFF2170", Slot = "11")]
		protected override Vector2 GetPrimaryAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xFF1B0C", Offset = "0xFF1B0C", VA = "0xFF1B0C")]
		private void LockCursor(bool locked)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xFF211C", Offset = "0xFF211C", VA = "0xFF211C")]
		private void Crouch(bool isCrouched)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xFF220C", Offset = "0xFF220C", VA = "0xFF220C")]
		public PlayerMovementControllerFPS()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public abstract class TeleportAimHandler : TeleportSupport
	{
		[Token(Token = "0x600189D")]
		[Address(RVA = "0x117763C", Offset = "0x117763C", VA = "0x117763C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x1177674", Offset = "0x1177674", VA = "0x1177674", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600189F")]
		public abstract void GetPoints(List<Vector3> points);

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x1177710", Offset = "0x1177710", VA = "0x1177710")]
		protected TeleportAimHandler()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class TeleportAimHandlerParabolic : TeleportAimHandler
	{
		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EEF8", Offset = "0xB6EEF8")]
		public float m_range;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EF30", Offset = "0xB6EF30")]
		public float m_minimumElevation;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EF68", Offset = "0xB6EF68")]
		public float m_gravity;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EFA0", Offset = "0xB6EFA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6EFA0", Offset = "0xB6EFA0")]
		public float m_aimVelocity;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6EFFC", Offset = "0xB6EFFC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6EFFC", Offset = "0xB6EFFC")]
		public float m_aimStep;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F054", Offset = "0xB6F054")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6F054", Offset = "0xB6F054")]
		public float m_maximumPitchAngle;

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x11779C8", Offset = "0x11779C8", VA = "0x11779C8", Slot = "8")]
		public override void GetPoints(List<Vector3> points)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x1177E64", Offset = "0x1177E64", VA = "0x1177E64")]
		public TeleportAimHandlerParabolic()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class TeleportAimVisualLaser : TeleportSupport
	{
		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F0AC", Offset = "0xB6F0AC")]
		public LineRenderer m_laserPrefab;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F0E4", Offset = "0xB6F0E4")]
		public GameObject m_teleportDropDownIndicatorPrefab;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Action m_enterAimStateAction;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Action m_exitAimStateAction;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly Action<LocomotionTeleport.AimData> m_updateAimDataAction;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer m_lineRenderer;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3[] m_linePoints;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject m_teleportDropDownIndicator;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_isAiming;

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x11782B4", Offset = "0x11782B4", VA = "0x11782B4")]
		public TeleportAimVisualLaser()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x11783F0", Offset = "0x11783F0", VA = "0x11783F0")]
		private void EnterAimState()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x117842C", Offset = "0x117842C", VA = "0x117842C")]
		private void ExitAimState()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1178564", Offset = "0x1178564", VA = "0x1178564")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1178658", Offset = "0x1178658", VA = "0x1178658", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x1178680", Offset = "0x1178680", VA = "0x1178680", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x11786E0", Offset = "0x11786E0", VA = "0x11786E0", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x1178744", Offset = "0x1178744", VA = "0x1178744")]
		private void UpdateAimData(LocomotionTeleport.AimData aimData)
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class TeleportDestination : MonoBehaviour
	{
		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F11C", Offset = "0xB6F11C")]
		private bool <IsValidDestination>k__BackingField;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F12C", Offset = "0xB6F12C")]
		public Transform m_positionIndicator;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F164", Offset = "0xB6F164")]
		public Transform m_orientationIndicator;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F19C", Offset = "0xB6F19C")]
		public Quaternion m_landingRotation;

		[NonSerialized]
		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocomotionTeleport m_locomotionTeleport;

		[NonSerialized]
		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocomotionTeleport.States m_teleportState;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> m_updateTeleportDestinationAction;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_eventsActive;

		[Token(Token = "0x17000373")]
		public bool IsValidDestination
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x1178E78", Offset = "0x1178E78", VA = "0x1178E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81B04", Offset = "0xB81B04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x1178E80", Offset = "0x1178E80", VA = "0x1178E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81B14", Offset = "0xB81B14")]
			private set
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event Action<TeleportDestination> Deactivated
		{
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x117903C", Offset = "0x117903C", VA = "0x117903C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81B24", Offset = "0xB81B24")]
			add
			{
			}
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x11790DC", Offset = "0x11790DC", VA = "0x11790DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81B34", Offset = "0xB81B34")]
			remove
			{
			}
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1178E8C", Offset = "0x1178E8C", VA = "0x1178E8C")]
		private TeleportDestination()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1178F24", Offset = "0x1178F24", VA = "0x1178F24")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1178FF8", Offset = "0x1178FF8", VA = "0x1178FF8")]
		private void TryDisableEventHandlers()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1179038", Offset = "0x1179038", VA = "0x1179038")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x117917C", Offset = "0x117917C", VA = "0x117917C")]
		public void OnDeactivated()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x11791E0", Offset = "0x11791E0", VA = "0x11791E0")]
		private void Recycle()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1179200", Offset = "0x1179200", VA = "0x1179200", Slot = "4")]
		protected virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
		{
		}
	}
	[Token(Token = "0x200043F")]
	public abstract class TeleportInputHandler : TeleportSupport
	{
		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D640", Offset = "0xB5D640")]
		private sealed class <TeleportReadyCoroutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportInputHandler <>4__this;

			[Token(Token = "0x17000376")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C4")]
				[Address(RVA = "0xFEE408", Offset = "0xFEE408", VA = "0xFEE408", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000377")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C6")]
				[Address(RVA = "0xFEE450", Offset = "0xFEE450", VA = "0xFEE450", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xFEE34C", Offset = "0xFEE34C", VA = "0xFEE34C")]
			[DebuggerHidden]
			public <TeleportReadyCoroutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xFEE378", Offset = "0xFEE378", VA = "0xFEE378", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xFEE37C", Offset = "0xFEE37C", VA = "0xFEE37C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C5")]
			[Address(RVA = "0xFEE410", Offset = "0xFEE410", VA = "0xFEE410", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D650", Offset = "0xB5D650")]
		private sealed class <TeleportAimCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportInputHandler <>4__this;

			[Token(Token = "0x17000378")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018CA")]
				[Address(RVA = "0xFEE2FC", Offset = "0xFEE2FC", VA = "0xFEE2FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000379")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018CC")]
				[Address(RVA = "0xFEE344", Offset = "0xFEE344", VA = "0xFEE344", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C7")]
			[Address(RVA = "0xFEE230", Offset = "0xFEE230", VA = "0xFEE230")]
			[DebuggerHidden]
			public <TeleportAimCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xFEE25C", Offset = "0xFEE25C", VA = "0xFEE25C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C9")]
			[Address(RVA = "0xFEE260", Offset = "0xFEE260", VA = "0xFEE260", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xFEE304", Offset = "0xFEE304", VA = "0xFEE304", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action m_startReadyAction;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action m_startAimAction;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ControllerInputBase m_controllerInputRight;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ControllerInputBase m_controllerInputLeft;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected ControllerInputBase.HandSide m_initiatingController;

		[Token(Token = "0x17000374")]
		public ControllerInputBase ActiveInputBaseDevice
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0x1179750", Offset = "0x1179750", VA = "0x1179750")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		public ControllerInputBase.HandSide ActiveInputDeviceSide
		{
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x117976C", Offset = "0x117976C", VA = "0x117976C")]
			get
			{
				return default(ControllerInputBase.HandSide);
			}
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1179774", Offset = "0x1179774", VA = "0x1179774")]
		protected TeleportInputHandler()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1179848", Offset = "0x1179848", VA = "0x1179848", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x11798AC", Offset = "0x11798AC", VA = "0x11798AC", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x11798FC", Offset = "0x11798FC", VA = "0x11798FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB81B44", Offset = "0xB81B44")]
		private IEnumerator TeleportReadyCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1179974", Offset = "0x1179974", VA = "0x1179974")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB81BA4", Offset = "0xB81BA4")]
		private IEnumerator TeleportAimCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60018BD")]
		protected abstract LocomotionTeleport.TeleportIntentions GetIntention();

		[Token(Token = "0x60018BE")]
		public abstract void GetAimData(out Ray aimRay);

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x11799EC", Offset = "0x11799EC", VA = "0x11799EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81C04", Offset = "0xB81C04")]
		private void <.ctor>b__9_0()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1179A18", Offset = "0x1179A18", VA = "0x1179A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81C14", Offset = "0xB81C14")]
		private void <.ctor>b__9_1()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class TeleportInputHandlerHmd : TeleportInputHandler
	{
		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F1E4", Offset = "0xB6F1E4")]
		public ControllerInputBase.Button m_aimButton;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F21C", Offset = "0xB6F21C")]
		public ControllerInputBase.Button m_teleportButton;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F254", Offset = "0xB6F254")]
		public bool m_fastTeleport;

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x15CCFB4", Offset = "0x15CCFB4", VA = "0x15CCFB4", Slot = "8")]
		protected override LocomotionTeleport.TeleportIntentions GetIntention()
		{
			return default(LocomotionTeleport.TeleportIntentions);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x15CD0A4", Offset = "0x15CD0A4", VA = "0x15CD0A4", Slot = "9")]
		public override void GetAimData(out Ray aimRay)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x15CD168", Offset = "0x15CD168", VA = "0x15CD168")]
		public TeleportInputHandlerHmd()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class TeleportInputHandlerThumbstick : TeleportInputHandlerHmd
	{
		[Token(Token = "0x2000444")]
		public enum InputModes
		{
			[Token(Token = "0x4001B77")]
			CapacitiveButtonForAimAndTeleport,
			[Token(Token = "0x4001B78")]
			SeparateButtonsForAimAndTeleport,
			[Token(Token = "0x4001B79")]
			ThumbstickTeleport,
			[Token(Token = "0x4001B7A")]
			ThumbstickTeleportForwardBackOnly,
			[Token(Token = "0x4001B7B")]
			ThumbstickTeleportForwardOnly,
			[Token(Token = "0x4001B7C")]
			ThumbstickButtonTeleport
		}

		[Token(Token = "0x2000445")]
		public enum ControllerSide
		{
			[Token(Token = "0x4001B7E")]
			Left,
			[Token(Token = "0x4001B7F")]
			Right,
			[Token(Token = "0x4001B80")]
			Both
		}

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F28C", Offset = "0xB6F28C")]
		public InputModes m_inputMode;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public ControllerSide m_whichControllerToUse;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F2C4", Offset = "0xB6F2C4")]
		public ControllerInputBase.Button m_capacitiveAimAndTeleportButton;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F2FC", Offset = "0xB6F2FC")]
		public float m_thumbstickTeleportThreshold;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform m_leftHand;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform m_rightHand;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FNVR2.Input.UI.VRInputModule m_vrInputModule;

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x15CD170", Offset = "0x15CD170", VA = "0x15CD170", Slot = "8")]
		protected override LocomotionTeleport.TeleportIntentions GetIntention()
		{
			return default(LocomotionTeleport.TeleportIntentions);
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x15CD6C4", Offset = "0x15CD6C4", VA = "0x15CD6C4")]
		private bool IsJoystickAboveThreshold(float leftMag, float rightMag)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x15CD60C", Offset = "0x15CD60C", VA = "0x15CD60C")]
		private float GetBestMagnitudeAndController(float leftMag, float rightMag, out ControllerInputBase.HandSide bestController)
		{
			return default(float);
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x15CD700", Offset = "0x15CD700", VA = "0x15CD700")]
		private bool GetCorrectThumbstickButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x15CD51C", Offset = "0x15CD51C", VA = "0x15CD51C")]
		private bool GetCorrectThumbstickButtonHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x15CD594", Offset = "0x15CD594", VA = "0x15CD594")]
		private bool GetCorrectThumbstickButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x15CD778", Offset = "0x15CD778", VA = "0x15CD778", Slot = "9")]
		public override void GetAimData(out Ray aimRay)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x15CD82C", Offset = "0x15CD82C", VA = "0x15CD82C")]
		public TeleportInputHandlerThumbstick()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class TeleportLocation : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000447")]
		public struct Data
		{
			[Token(Token = "0x4001B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AreaManager.AreaType m_location;

			[Token(Token = "0x4001B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform m_locationTransform;
		}

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AreaManager.AreaType m_location;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<AreaManager.AreaType, Data> s_teleportLocationsDictionary;

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x15CDDD0", Offset = "0x15CDDD0", VA = "0x15CDDD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x15CDF10", Offset = "0x15CDF10", VA = "0x15CDF10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x15CE058", Offset = "0x15CE058", VA = "0x15CE058")]
		public static Data? FindTeleportLocation(AreaManager.AreaType location)
		{
			return null;
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x15CDE70", Offset = "0x15CDE70", VA = "0x15CDE70")]
		public static void AddTeleportLocation(Data location)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x15CDF74", Offset = "0x15CDF74", VA = "0x15CDF74")]
		public static void RemoveTeleportlocation(AreaManager.AreaType location)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x15CE140", Offset = "0x15CE140", VA = "0x15CE140")]
		public TeleportLocation()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public abstract class TeleportOrientationHandler : TeleportSupport
	{
		[Token(Token = "0x2000449")]
		public enum OrientationModes
		{
			[Token(Token = "0x4001B89")]
			HeadRelative,
			[Token(Token = "0x4001B8A")]
			ForwardFacing
		}

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected LocomotionTeleport.AimData m_aimData;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action m_enterStateAimAction;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Action<LocomotionTeleport.AimData> m_updateAimDataAction;

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x15CE4E0", Offset = "0x15CE4E0", VA = "0x15CE4E0")]
		protected TeleportOrientationHandler()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x15CE5E0", Offset = "0x15CE5E0", VA = "0x15CE5E0")]
		private void UpdateAimData(LocomotionTeleport.AimData aimData)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x15CE648", Offset = "0x15CE648", VA = "0x15CE648", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x15CE6A0", Offset = "0x15CE6A0", VA = "0x15CE6A0", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x60018E3")]
		protected abstract void InitializeTeleportDestination();

		[Token(Token = "0x60018E4")]
		protected abstract void UpdateTeleportDestination();

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x15CE6F0", Offset = "0x15CE6F0", VA = "0x15CE6F0")]
		protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x200044A")]
	public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
	{
		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F334", Offset = "0xB6F334")]
		public OrientationModes m_orientationMode;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F36C", Offset = "0xB6F36C")]
		public float m_rotateStickThreshold;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion m_currentRotation;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 m_lastValidDirection;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector2 m_initialThumbstickDirection;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TeleportInputHandlerThumbstick m_teleportInputHandlerThumbstick;

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x15CF010", Offset = "0x15CF010", VA = "0x15CF010", Slot = "8")]
		protected override void InitializeTeleportDestination()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x15CF070", Offset = "0x15CF070", VA = "0x15CF070")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x15CF0CC", Offset = "0x15CF0CC", VA = "0x15CF0CC", Slot = "9")]
		protected override void UpdateTeleportDestination()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x15CF3D4", Offset = "0x15CF3D4", VA = "0x15CF3D4")]
		public TeleportOrientationHandlerThumbstick()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public abstract class TeleportSupport : MonoBehaviour
	{
		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F3A4", Offset = "0xB6F3A4")]
		private LocomotionTeleport <LocomotionTeleport>k__BackingField;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_eventsActive;

		[Token(Token = "0x1700037A")]
		protected LocomotionTeleport LocomotionTeleport
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x15D02E0", Offset = "0x15D02E0", VA = "0x15D02E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81CC4", Offset = "0xB81CC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x15D02E8", Offset = "0x15D02E8", VA = "0x15D02E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81CD4", Offset = "0xB81CD4")]
			private set
			{
			}
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x15D02F0", Offset = "0x15D02F0", VA = "0x15D02F0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x15D035C", Offset = "0x15D035C", VA = "0x15D035C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x15D0390", Offset = "0x15D0390", VA = "0x15D0390")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB81CE4", Offset = "0xB81CE4")]
		private void LogEventHandler(string msg)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x15CE694", Offset = "0x15CE694", VA = "0x15CE694", Slot = "6")]
		protected virtual void AddEventHandlers()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x15CE6E8", Offset = "0x15CE6E8", VA = "0x15CE6E8", Slot = "7")]
		protected virtual void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x15CE5D8", Offset = "0x15CE5D8", VA = "0x15CE5D8")]
		protected TeleportSupport()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public abstract class TeleportTargetHandler : TeleportSupport
	{
		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D660", Offset = "0xB5D660")]
		private sealed class <TargetAimCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportTargetHandler <>4__this;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001900")]
				[Address(RVA = "0xFEF0E0", Offset = "0xFEF0E0", VA = "0xFEF0E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001902")]
				[Address(RVA = "0xFEF128", Offset = "0xFEF128", VA = "0xFEF128", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018FD")]
			[Address(RVA = "0xFEEA64", Offset = "0xFEEA64", VA = "0xFEEA64")]
			[DebuggerHidden]
			public <TargetAimCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60018FE")]
			[Address(RVA = "0xFEEA90", Offset = "0xFEEA90", VA = "0xFEEA90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xFEEA94", Offset = "0xFEEA94", VA = "0xFEEA94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001901")]
			[Address(RVA = "0xFEF0E8", Offset = "0xFEF0E8", VA = "0xFEF0E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D670", Offset = "0xB5D670")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4001BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 arcBeginning;

			[Token(Token = "0x6001903")]
			[Address(RVA = "0xFEEA50", Offset = "0xFEEA50", VA = "0xFEEA50")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001904")]
			[Address(RVA = "0xFEEA58", Offset = "0xFEEA58", VA = "0xFEEA58")]
			internal float <CreateNewTeleportationArc>b__0(Vector3 point)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F3B4", Offset = "0xB6F3B4")]
		public LayerMask m_aimCollisionLayerMask;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_gravity;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int m_arcResolution;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6F3EC", Offset = "0xB6F3EC")]
		public float m_onLimitReachedDownwardRaycastLength;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F404", Offset = "0xB6F404")]
		public float m_capsuleCheckAboveGround;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected readonly LocomotionTeleport.AimData m_aimData;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Action m_startAimAction;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<Vector3> m_aimPoints;

		[Token(Token = "0x4001B9B")]
		private const float ErrorMargin = 0.1f;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_endPosition;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected int m_amountOfHeavyCalculation;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected bool m_performanceCostTooHigh;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected Vector3? m_alternativeValidDestination;

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x15D06D8", Offset = "0x15D06D8", VA = "0x15D06D8")]
		protected TeleportTargetHandler()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x15D0804", Offset = "0x15D0804", VA = "0x15D0804", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x15D0850", Offset = "0x15D0850", VA = "0x15D0850", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x15D08F8", Offset = "0x15D08F8", VA = "0x15D08F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB81D1C", Offset = "0xB81D1C")]
		private IEnumerator TargetAimCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x15D0970", Offset = "0x15D0970", VA = "0x15D0970")]
		private bool AssignDestinationIfValidTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x15D0A18", Offset = "0x15D0A18", VA = "0x15D0A18")]
		private bool FindTeleportationNode()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x15D0CA4", Offset = "0x15D0CA4", VA = "0x15D0CA4")]
		private void CreateNewTeleportationArc()
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x15D1050", Offset = "0x15D1050", VA = "0x15D1050", Slot = "8")]
		protected virtual void ResetAimData()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x15D106C", Offset = "0x15D106C", VA = "0x15D106C", Slot = "9")]
		protected virtual bool ConsiderTeleport(Vector3 start, ref Vector3 end)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x15D10E4", Offset = "0x15D10E4", VA = "0x15D10E4", Slot = "10")]
		public virtual bool IsValidDestination(Vector3 destination)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x15D11D0", Offset = "0x15D11D0", VA = "0x15D11D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81D7C", Offset = "0xB81D7C")]
		private void <.ctor>b__13_0()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int m_navMeshAreaMask;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float m_navMeshSearchRadius;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_destinationNavMeshSearchRadius;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int m_maxAmountOfPathCalculation;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float m_heightTolerance;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NavMeshPath m_path;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NavMeshHit m_navMeshHit;

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x15D1460", Offset = "0x15D1460", VA = "0x15D1460")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x15D14C4", Offset = "0x15D14C4", VA = "0x15D14C4", Slot = "10")]
		public override bool IsValidDestination(Vector3 destination)
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x15D1778", Offset = "0x15D1778", VA = "0x15D1778")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB81DDC", Offset = "0xB81DDC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x15D188C", Offset = "0x15D188C", VA = "0x15D188C")]
		public TeleportTargetHandlerNavMesh()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class TeleportTargetHandlerPhysical : TeleportTargetHandler
	{
		[Token(Token = "0x6001909")]
		[Address(RVA = "0x15D1BC8", Offset = "0x15D1BC8", VA = "0x15D1BC8")]
		public TeleportTargetHandlerPhysical()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public abstract class TeleportTransition : TeleportSupport
	{
		[Token(Token = "0x1700037D")]
		public virtual bool AllowsThumbstickRotation
		{
			[Token(Token = "0x600190A")]
			[Address(RVA = "0x15D1CF8", Offset = "0x15D1CF8", VA = "0x15D1CF8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x15D1D00", Offset = "0x15D1D00", VA = "0x15D1D00", Slot = "6")]
		protected override void AddEventHandlers()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x15D1DA8", Offset = "0x15D1DA8", VA = "0x15D1DA8", Slot = "7")]
		protected override void RemoveEventHandlers()
		{
		}

		[Token(Token = "0x600190D")]
		protected abstract void LocomotionTeleportOnEnterStateTeleporting();

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x15D1E98", Offset = "0x15D1E98", VA = "0x15D1E98")]
		protected TeleportTransition()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class TeleportTransitionBlink : TeleportTransition
	{
		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F43C", Offset = "0xB6F43C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6F43C", Offset = "0xB6F43C")]
		public float m_transitionDuration;

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x15D20F0", Offset = "0x15D20F0", VA = "0x15D20F0", Slot = "9")]
		protected override void LocomotionTeleportOnEnterStateTeleporting()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x15D2278", Offset = "0x15D2278", VA = "0x15D2278")]
		public TeleportTransitionBlink()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x15D2288", Offset = "0x15D2288", VA = "0x15D2288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81E14", Offset = "0xB81E14")]
		private void <LocomotionTeleportOnEnterStateTeleporting>b__1_0()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class TeleportTransitionDash : TeleportTransition
	{
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D680", Offset = "0xB5D680")]
		private sealed class <DashCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleportTransitionDash <>4__this;

			[Token(Token = "0x4001BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <startPos>5__2;

			[Token(Token = "0x4001BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <destinationOffset>5__3;

			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <duration>5__4;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <time>5__5;

			[Token(Token = "0x1700037F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001919")]
				[Address(RVA = "0xFEF550", Offset = "0xFEF550", VA = "0xFEF550", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600191B")]
				[Address(RVA = "0xFEF598", Offset = "0xFEF598", VA = "0xFEF598", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001916")]
			[Address(RVA = "0xFEF2B8", Offset = "0xFEF2B8", VA = "0xFEF2B8")]
			[DebuggerHidden]
			public <DashCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001917")]
			[Address(RVA = "0xFEF2E4", Offset = "0xFEF2E4", VA = "0xFEF2E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001918")]
			[Address(RVA = "0xFEF2E8", Offset = "0xFEF2E8", VA = "0xFEF2E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600191A")]
			[Address(RVA = "0xFEF558", Offset = "0xFEF558", VA = "0xFEF558", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F490", Offset = "0xB6F490")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6F490", Offset = "0xB6F490")]
		public float m_dashSpeed;

		[Token(Token = "0x1700037E")]
		public override bool AllowsThumbstickRotation
		{
			[Token(Token = "0x6001912")]
			[Address(RVA = "0x15D230C", Offset = "0x15D230C", VA = "0x15D230C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x15D2314", Offset = "0x15D2314", VA = "0x15D2314", Slot = "9")]
		protected override void LocomotionTeleportOnEnterStateTeleporting()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x15D2340", Offset = "0x15D2340", VA = "0x15D2340")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB81E24", Offset = "0xB81E24")]
		private IEnumerator DashCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x15D23B8", Offset = "0x15D23B8", VA = "0x15D23B8")]
		public TeleportTransitionDash()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class TeleportationNode : MonoBehaviour
	{
		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_detectionRadius;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly HashSet<TeleportationNode> s_teleportationNodes;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F4E8", Offset = "0xB6F4E8")]
		private float <DetectionRadiusSqr>k__BackingField;

		[Token(Token = "0x17000381")]
		public static HashSet<TeleportationNode> TeleportationNodes
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0x15D24E4", Offset = "0x15D24E4", VA = "0x15D24E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		public float DetectionRadiusSqr
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0x15D2548", Offset = "0x15D2548", VA = "0x15D2548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81ED4", Offset = "0xB81ED4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x15D2550", Offset = "0x15D2550", VA = "0x15D2550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81EE4", Offset = "0xB81EE4")]
			private set
			{
			}
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x15D2558", Offset = "0x15D2558", VA = "0x15D2558")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x15D2568", Offset = "0x15D2568", VA = "0x15D2568")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x15D25F8", Offset = "0x15D25F8", VA = "0x15D25F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x15D256C", Offset = "0x15D256C", VA = "0x15D256C")]
		public void ActivateNode()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x15D25FC", Offset = "0x15D25FC", VA = "0x15D25FC")]
		public void DeactivateNode()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x15D2688", Offset = "0x15D2688", VA = "0x15D2688")]
		public TeleportationNode()
		{
		}
	}
}
namespace Interfaces
{
	[Token(Token = "0x2000456")]
	public interface IReferenceId
	{
		[Token(Token = "0x6001926")]
		string GetReferenceId();
	}
	[Token(Token = "0x2000457")]
	public interface IUnlockable
	{
		[Token(Token = "0x6001927")]
		bool Unlock();

		[Token(Token = "0x6001928")]
		bool IsUnlocked();
	}
}
namespace Hands
{
	[Token(Token = "0x2000458")]
	public class Hand : MonoBehaviour, IHand
	{
		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerInputBase m_controller;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandSkeleton m_skeleton;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform m_grabRayTransform;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform m_padFollowTransform;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UIToucher m_uiToucher;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject m_bracelet;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_grabRayStartRadius;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_grabRayEndRadius;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_grabMaxDistance;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected ObjectStash m_currentStash;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected GameObject m_externalObjectControllingHand;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected Grabbable m_lastPulledObject;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Grabbable m_lastSelectedObject;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected ObjectStash m_previousStash;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RaycastHit m_raycastHit;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F4F8", Offset = "0xB6F4F8")]
		private Grabbable <CurrentGrabbedObject>k__BackingField;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F508", Offset = "0xB6F508")]
		private bool <SwappingObjectHandEnabled>k__BackingField;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		protected bool m_handHoldDown;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		private bool m_pullingAndGrabbingEnabled;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Predicate<RaycastHit> m_isGrabbableHit;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F518", Offset = "0xB6F518")]
		private IHand <OtherHand>k__BackingField;

		[Token(Token = "0x17000383")]
		public GameObject Bracelet
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0x1C4DFB0", Offset = "0x1C4DFB0", VA = "0x1C4DFB0", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		public float GrabMaxDistance
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x1C4DFB8", Offset = "0x1C4DFB8", VA = "0x1C4DFB8", Slot = "12")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600192B")]
			[Address(RVA = "0x1C4DFC0", Offset = "0x1C4DFC0", VA = "0x1C4DFC0", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000385")]
		public ControllerInputBase Controller
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x1C4DFC8", Offset = "0x1C4DFC8", VA = "0x1C4DFC8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		public HandSkeleton Skeleton
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x1C4DFD0", Offset = "0x1C4DFD0", VA = "0x1C4DFD0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000387")]
		public UIToucher UIToucher
		{
			[Token(Token = "0x600192E")]
			[Address(RVA = "0x1C4DFD8", Offset = "0x1C4DFD8", VA = "0x1C4DFD8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		public Transform Transform
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0x1C4DFE0", Offset = "0x1C4DFE0", VA = "0x1C4DFE0", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000389")]
		public Transform PadFollowTransform
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x1C4DFE8", Offset = "0x1C4DFE8", VA = "0x1C4DFE8", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038A")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x1C4DFF0", Offset = "0x1C4DFF0", VA = "0x1C4DFF0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038B")]
		public ControllerInputBase.HandSide Side
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x1C49CF4", Offset = "0x1C49CF4", VA = "0x1C49CF4", Slot = "14")]
			get
			{
				return default(ControllerInputBase.HandSide);
			}
		}

		[Token(Token = "0x1700038C")]
		public bool InteractOrHoldDown
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x1C4DFF8", Offset = "0x1C4DFF8", VA = "0x1C4DFF8", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038D")]
		public bool InteractOrHold
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0x1C4E058", Offset = "0x1C4E058", VA = "0x1C4E058")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038E")]
		public bool InteractOrHoldReleased
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0x1C4E0B8", Offset = "0x1C4E0B8", VA = "0x1C4E0B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700038F")]
		public bool ThumbstickDown
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0x1C4E118", Offset = "0x1C4E118", VA = "0x1C4E118", Slot = "19")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000390")]
		public bool ThumbstickUp
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0x1C4E13C", Offset = "0x1C4E13C", VA = "0x1C4E13C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000391")]
		public bool IsFree
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x1C4E160", Offset = "0x1C4E160", VA = "0x1C4E160", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000392")]
		public bool IsSelectingOrPulling
		{
			[Token(Token = "0x6001939")]
			[Address(RVA = "0x1C4E218", Offset = "0x1C4E218", VA = "0x1C4E218")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000393")]
		public Grabbable CurrentGrabbedObject
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x1C4E2D0", Offset = "0x1C4E2D0", VA = "0x1C4E2D0", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81EF4", Offset = "0xB81EF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193B")]
			[Address(RVA = "0x1C4E2D8", Offset = "0x1C4E2D8", VA = "0x1C4E2D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F04", Offset = "0xB81F04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public bool PullingAndGrabbingEnabled
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x1C4E2E0", Offset = "0x1C4E2E0", VA = "0x1C4E2E0", Slot = "15")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x1C4E2E8", Offset = "0x1C4E2E8", VA = "0x1C4E2E8", Slot = "16")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public bool SwappingObjectHandEnabled
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x1C4E328", Offset = "0x1C4E328", VA = "0x1C4E328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F14", Offset = "0xB81F14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600193F")]
			[Address(RVA = "0x1C4E330", Offset = "0x1C4E330", VA = "0x1C4E330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F24", Offset = "0xB81F24")]
			set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public IHand OtherHand
		{
			[Token(Token = "0x6001940")]
			[Address(RVA = "0x1C4E33C", Offset = "0x1C4E33C", VA = "0x1C4E33C", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F34", Offset = "0xB81F34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001941")]
			[Address(RVA = "0x1C4E344", Offset = "0x1C4E344", VA = "0x1C4E344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F44", Offset = "0xB81F44")]
			private set
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event Action<Collision> OnOtherCollisionEnter
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0x1C4E34C", Offset = "0x1C4E34C", VA = "0x1C4E34C", Slot = "26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F54", Offset = "0xB81F54")]
			add
			{
			}
			[Token(Token = "0x6001943")]
			[Address(RVA = "0x1C4E3EC", Offset = "0x1C4E3EC", VA = "0x1C4E3EC", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F64", Offset = "0xB81F64")]
			remove
			{
			}
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x1C4E48C", Offset = "0x1C4E48C", VA = "0x1C4E48C", Slot = "28")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x1C4E688", Offset = "0x1C4E688", VA = "0x1C4E688", Slot = "29")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x1C4EA84", Offset = "0x1C4EA84", VA = "0x1C4EA84")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x1C4EF94", Offset = "0x1C4EF94", VA = "0x1C4EF94", Slot = "30")]
		public virtual Grabbable GetGrabbableFromHit(RaycastHit hit)
		{
			return null;
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x1C4F060", Offset = "0x1C4F060", VA = "0x1C4F060")]
		private bool IsGrabbableHit(RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x1C4F1EC", Offset = "0x1C4F1EC", VA = "0x1C4F1EC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x1C4EF68", Offset = "0x1C4EF68", VA = "0x1C4EF68")]
		public void ConfineCastRadius(out float start, out float end)
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x1C4F258", Offset = "0x1C4F258", VA = "0x1C4F258")]
		public static void ConfineCastRadius(out float start, out float end, float maxDistance = 5f, float startRadius = 0.5f, float endRadius = 2.5f)
		{
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0x1C4F27C", Offset = "0x1C4F27C", VA = "0x1C4F27C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x1C4F2F8", Offset = "0x1C4F2F8", VA = "0x1C4F2F8")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x1C4F368", Offset = "0x1C4F368", VA = "0x1C4F368")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x1C4F3C0", Offset = "0x1C4F3C0", VA = "0x1C4F3C0", Slot = "31")]
		protected virtual void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x1C4F5A0", Offset = "0x1C4F5A0", VA = "0x1C4F5A0", Slot = "32")]
		protected virtual void SetStashIfPossible(GameObject stashGO, bool isFree, bool active = true)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1C4F44C", Offset = "0x1C4F44C", VA = "0x1C4F44C")]
		private void SwapHandIfPossible(Collider otherCollider, bool isFree)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1C4F810", Offset = "0x1C4F810", VA = "0x1C4F810", Slot = "33")]
		protected virtual void GrabIfPossible(Collider objectCollider, bool isFree)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1C4F9CC", Offset = "0x1C4F9CC", VA = "0x1C4F9CC", Slot = "22")]
		public bool TakeExternalControl(GameObject controllingObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1C4FA24", Offset = "0x1C4FA24", VA = "0x1C4FA24", Slot = "23")]
		public void ReleaseExternalControl(GameObject controllingObject)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x1C4FAC0", Offset = "0x1C4FAC0", VA = "0x1C4FAC0", Slot = "34")]
		protected virtual void KillObjectPullIfAny()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1C4FB4C", Offset = "0x1C4FB4C", VA = "0x1C4FB4C", Slot = "21")]
		public void ForceGrab(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1C4F6D4", Offset = "0x1C4F6D4", VA = "0x1C4F6D4")]
		private void GrabObjectFromOtherHand(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1C4FC08", Offset = "0x1C4FC08", VA = "0x1C4FC08", Slot = "35")]
		public virtual void GrabObject(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x1C4FCA4", Offset = "0x1C4FCA4", VA = "0x1C4FCA4", Slot = "36")]
		public virtual void GrabObject(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x1C4FE68", Offset = "0x1C4FE68", VA = "0x1C4FE68", Slot = "37")]
		public virtual bool ReleaseCurrentlyGrabbedObject(bool forceRelease = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x1C4FFA8", Offset = "0x1C4FFA8", VA = "0x1C4FFA8", Slot = "38")]
		protected virtual void RemoveSelectedObject()
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x1C5005C", Offset = "0x1C5005C", VA = "0x1C5005C", Slot = "39")]
		public virtual void RemoveCurrentlyGrabbedObject()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x1C50130", Offset = "0x1C50130", VA = "0x1C50130")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000459")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D690", Offset = "0xB5D690")]
	public class HandPose : ScriptableObject
	{
		[Token(Token = "0x200045A")]
		public enum BoneType
		{
			[Token(Token = "0x4001BD1")]
			Wrist,
			[Token(Token = "0x4001BD2")]
			Thumb,
			[Token(Token = "0x4001BD3")]
			Index,
			[Token(Token = "0x4001BD4")]
			Middle,
			[Token(Token = "0x4001BD5")]
			Ring,
			[Token(Token = "0x4001BD6")]
			Pinky,
			[Token(Token = "0x4001BD7")]
			Unknown
		}

		[Serializable]
		[Token(Token = "0x200045B")]
		public struct BoneTransform
		{
			[Token(Token = "0x4001BD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BoneType m_type;

			[Token(Token = "0x4001BD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6F548", Offset = "0xB6F548")]
			public Vector3 m_position;

			[Token(Token = "0x4001BDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6F580", Offset = "0xB6F580")]
			public Quaternion m_rotation;
		}

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_id;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoneTransform[] m_boneTransforms;

		[Token(Token = "0x17000397")]
		public string Id
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x1C55FC8", Offset = "0x1C55FC8", VA = "0x1C55FC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x1C55FD0", Offset = "0x1C55FD0", VA = "0x1C55FD0")]
		public static BoneType GetBoneType(Transform boneTransform)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1C56138", Offset = "0x1C56138", VA = "0x1C56138")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200045C")]
	[ExecuteAlways]
	public class HandSkeleton : MonoBehaviour
	{
		[Token(Token = "0x200045D")]
		public enum BlendMode
		{
			[Token(Token = "0x4001BEC")]
			StaticClenched,
			[Token(Token = "0x4001BED")]
			StaticRelaxed,
			[Token(Token = "0x4001BEE")]
			Auto,
			[Token(Token = "0x4001BEF")]
			Manual
		}

		[Token(Token = "0x200045E")]
		public struct TransformReference
		{
			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F618", Offset = "0xB6F618")]
			private HandPose.BoneType <Type>k__BackingField;

			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F628", Offset = "0xB6F628")]
			private Transform <Transform>k__BackingField;

			[Token(Token = "0x1700039B")]
			public HandPose.BoneType Type
			{
				[Token(Token = "0x6001973")]
				[Address(RVA = "0xFD3680", Offset = "0xFD3680", VA = "0xFD3680")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81FD4", Offset = "0xB81FD4")]
				readonly get
				{
					return default(HandPose.BoneType);
				}
				[Token(Token = "0x6001974")]
				[Address(RVA = "0xFD3688", Offset = "0xFD3688", VA = "0xFD3688")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8200C", Offset = "0xB8200C")]
				set
				{
				}
			}

			[Token(Token = "0x1700039C")]
			public Transform Transform
			{
				[Token(Token = "0x6001975")]
				[Address(RVA = "0xFD3690", Offset = "0xFD3690", VA = "0xFD3690")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8201C", Offset = "0xB8201C")]
				readonly get
				{
					return null;
				}
				[Token(Token = "0x6001976")]
				[Address(RVA = "0xFD3698", Offset = "0xFD3698", VA = "0xFD3698")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82054", Offset = "0xB82054")]
				set
				{
				}
			}
		}

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerInputBase m_controller;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandPose m_defaultClenchedPose;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandPose m_defaultRelaxedPose;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlendMode m_thumbBlend;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BlendMode m_indexBlend;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BlendMode m_middleBlend;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BlendMode m_ringBlend;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BlendMode m_pinkyBlend;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6F5B8", Offset = "0xB6F5B8")]
		public float m_wristBlendFactor;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6F5D0", Offset = "0xB6F5D0")]
		public float m_manualBlendFactor;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform m_rootBone;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<TransformReference> m_boneTransforms;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F5E8", Offset = "0xB6F5E8")]
		private bool <OverrideBlendFactor>k__BackingField;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected readonly float[] m_handBlendFactors;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F5F8", Offset = "0xB6F5F8")]
		private HandPose <ClenchedPose>k__BackingField;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F608", Offset = "0xB6F608")]
		private HandPose <RelaxedPose>k__BackingField;

		[Token(Token = "0x17000398")]
		public bool OverrideBlendFactor
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0x1C56828", Offset = "0x1C56828", VA = "0x1C56828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F74", Offset = "0xB81F74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001962")]
			[Address(RVA = "0x1C56830", Offset = "0x1C56830", VA = "0x1C56830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F84", Offset = "0xB81F84")]
			set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public HandPose ClenchedPose
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0x1C5683C", Offset = "0x1C5683C", VA = "0x1C5683C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81F94", Offset = "0xB81F94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001964")]
			[Address(RVA = "0x1C56844", Offset = "0x1C56844", VA = "0x1C56844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81FA4", Offset = "0xB81FA4")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public HandPose RelaxedPose
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0x1C5684C", Offset = "0x1C5684C", VA = "0x1C5684C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81FB4", Offset = "0xB81FB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001966")]
			[Address(RVA = "0x1C56854", Offset = "0x1C56854", VA = "0x1C56854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB81FC4", Offset = "0xB81FC4")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x1C5685C", Offset = "0x1C5685C", VA = "0x1C5685C", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x1C56948", Offset = "0x1C56948", VA = "0x1C56948", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x1C57014", Offset = "0x1C57014", VA = "0x1C57014")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x1C57018", Offset = "0x1C57018", VA = "0x1C57018", Slot = "6")]
		protected virtual bool GetFingerCurls(out ControllerInputBase.FingerCurls fingerCurls)
		{
			return default(bool);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x1C56BAC", Offset = "0x1C56BAC", VA = "0x1C56BAC")]
		protected void BlendPoses(bool clenchedPoseNull, bool relaxedPoseNull)
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x1C56898", Offset = "0x1C56898", VA = "0x1C56898")]
		private void GenerateTransforms()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x1C57038", Offset = "0x1C57038", VA = "0x1C57038")]
		private void AssignBones(Transform bone)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1C57140", Offset = "0x1C57140", VA = "0x1C57140")]
		public bool ApplyPose(HandPose handPose)
		{
			return default(bool);
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x1C572C0", Offset = "0x1C572C0", VA = "0x1C572C0", Slot = "7")]
		public virtual void SetPoses(HandPose relaxedPose, HandPose clenchedPose)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x1C572F4", Offset = "0x1C572F4", VA = "0x1C572F4", Slot = "8")]
		public virtual void ResetPoses()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x1C57174", Offset = "0x1C57174", VA = "0x1C57174")]
		private bool ApplyPose(Transform bone, HandPose handPose, ref int currentIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x1C5732C", Offset = "0x1C5732C", VA = "0x1C5732C")]
		public HandSkeleton()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public interface IHand
	{
		[Token(Token = "0x1700039D")]
		ControllerInputBase Controller
		{
			[Token(Token = "0x6001977")]
			get;
		}

		[Token(Token = "0x1700039E")]
		HandSkeleton Skeleton
		{
			[Token(Token = "0x6001978")]
			get;
		}

		[Token(Token = "0x1700039F")]
		UIToucher UIToucher
		{
			[Token(Token = "0x6001979")]
			get;
		}

		[Token(Token = "0x170003A0")]
		Transform Transform
		{
			[Token(Token = "0x600197A")]
			get;
		}

		[Token(Token = "0x170003A1")]
		Rigidbody Rigidbody
		{
			[Token(Token = "0x600197B")]
			get;
		}

		[Token(Token = "0x170003A2")]
		Transform PadFollowTransform
		{
			[Token(Token = "0x600197C")]
			get;
		}

		[Token(Token = "0x170003A3")]
		bool InteractOrHoldDown
		{
			[Token(Token = "0x600197D")]
			get;
		}

		[Token(Token = "0x170003A4")]
		GameObject Bracelet
		{
			[Token(Token = "0x600197E")]
			get;
		}

		[Token(Token = "0x170003A5")]
		float GrabMaxDistance
		{
			[Token(Token = "0x600197F")]
			get;
			[Token(Token = "0x6001980")]
			set;
		}

		[Token(Token = "0x170003A6")]
		ControllerInputBase.HandSide Side
		{
			[Token(Token = "0x6001981")]
			get;
		}

		[Token(Token = "0x170003A7")]
		bool PullingAndGrabbingEnabled
		{
			[Token(Token = "0x6001982")]
			get;
			[Token(Token = "0x6001983")]
			set;
		}

		[Token(Token = "0x170003A8")]
		bool IsFree
		{
			[Token(Token = "0x6001984")]
			get;
		}

		[Token(Token = "0x170003A9")]
		Grabbable CurrentGrabbedObject
		{
			[Token(Token = "0x6001985")]
			get;
		}

		[Token(Token = "0x170003AA")]
		bool ThumbstickDown
		{
			[Token(Token = "0x6001986")]
			get;
		}

		[Token(Token = "0x170003AB")]
		IHand OtherHand
		{
			[Token(Token = "0x600198C")]
			get;
		}

		[Token(Token = "0x14000073")]
		event Action<Collision> OnOtherCollisionEnter;

		[Token(Token = "0x6001987")]
		bool ReleaseCurrentlyGrabbedObject(bool forceRelease = false);

		[Token(Token = "0x6001988")]
		void ForceGrab(Grabbable grabbable);

		[Token(Token = "0x6001989")]
		bool TakeExternalControl(GameObject controllingObject);

		[Token(Token = "0x600198A")]
		void ReleaseExternalControl(GameObject controllingObject);

		[Token(Token = "0x600198B")]
		void GrabObject(IGrabbable grabbable);
	}
}
namespace GameEvents
{
	[Token(Token = "0x2000460")]
	public class GameEventArrowDead : GameEvent
	{
		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_fruitHit;

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1258734", Offset = "0x1258734", VA = "0x1258734")]
		public GameEventArrowDead()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class GameEventArrowShot : GameEvent
	{
		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F638", Offset = "0xB6F638")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_arrowId;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_pausedWhenShot;

		[Token(Token = "0x170003AC")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x1258794", Offset = "0x1258794", VA = "0x1258794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82084", Offset = "0xB82084")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x12587A0", Offset = "0x12587A0", VA = "0x12587A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82094", Offset = "0xB82094")]
			set
			{
			}
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x12587AC", Offset = "0x12587AC", VA = "0x12587AC")]
		public GameEventArrowShot()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public abstract class GameEvent
	{
		[Token(Token = "0x2000463")]
		public delegate void EventTriggered(GameEvent evt);

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F648", Offset = "0xB6F648")]
		private GameRules <GameRules>k__BackingField;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F658", Offset = "0xB6F658")]
		private readonly Type <CachedType>k__BackingField;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<string, Type> s_eventTypes;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Dictionary<Type, List<EventTriggered>> s_eventTypeTriggeredEvents;

		[Token(Token = "0x170003AD")]
		public GameRules GameRules
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x12578DC", Offset = "0x12578DC", VA = "0x12578DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB820A4", Offset = "0xB820A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x12578E4", Offset = "0x12578E4", VA = "0x12578E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB820B4", Offset = "0xB820B4")]
			set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public Type CachedType
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x12578EC", Offset = "0x12578EC", VA = "0x12578EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB820C4", Offset = "0xB820C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		public string Name
		{
			[Token(Token = "0x6001996")]
			[Address(RVA = "0x12578F4", Offset = "0x12578F4", VA = "0x12578F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000074")]
		public static event EventTriggered OnEventTriggered
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x1257914", Offset = "0x1257914", VA = "0x1257914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB820D4", Offset = "0xB820D4")]
			add
			{
			}
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x1257A08", Offset = "0x1257A08", VA = "0x1257A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB820E4", Offset = "0xB820E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x1257AFC", Offset = "0x1257AFC", VA = "0x1257AFC")]
		public GameEvent()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x1257B38", Offset = "0x1257B38", VA = "0x1257B38")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB820F4", Offset = "0xB820F4")]
		public static void Initialise()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x1257D20", Offset = "0x1257D20", VA = "0x1257D20")]
		public static Type GetEventType(string eventName)
		{
			return null;
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x1257DC4", Offset = "0x1257DC4", VA = "0x1257DC4")]
		public void Trigger()
		{
		}

		[Token(Token = "0x600199D")]
		public static void AddEventTypeCallback<T>(EventTriggered evt)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x1257F94", Offset = "0x1257F94", VA = "0x1257F94")]
		public static void AddEventTypeCallback(Type eventType, EventTriggered evt)
		{
		}

		[Token(Token = "0x600199F")]
		public static void RemoveEventTypeCallback<T>(EventTriggered evt)
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x1258150", Offset = "0x1258150", VA = "0x1258150")]
		public static void RemoveEventTypeCallback(Type eventType, EventTriggered evt)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000464")]
	public class GameEventAndProperty
	{
		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_gameEvent;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_property;

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x1258674", Offset = "0x1258674", VA = "0x1258674")]
		public bool IsCorrectGameEvent(GameEvent eventObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x12586B8", Offset = "0x12586B8", VA = "0x12586B8")]
		public GameEventAndProperty()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000465")]
	public class GameEventAndNumericalProperty : GameEventAndProperty
	{
		[NonSerialized]
		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FieldInfo m_fieldInfo;

		[NonSerialized]
		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_fieldInfoChecked;

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x1258344", Offset = "0x1258344", VA = "0x1258344")]
		protected void CacheFieldInfoIfNecessary(GameEvent eventObject)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x125839C", Offset = "0x125839C", VA = "0x125839C")]
		public bool GetNumericalValue(GameEvent eventObject, out float value)
		{
			return default(bool);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x12586B4", Offset = "0x12586B4", VA = "0x12586B4")]
		public GameEventAndNumericalProperty()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class GameEventListener : MonoBehaviour
	{
		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[GameEvent]
		public string m_event;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent m_eventResponse;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Type m_eventType;

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x1258F9C", Offset = "0x1258F9C", VA = "0x1258F9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x1259010", Offset = "0x1259010", VA = "0x1259010")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x12590C4", Offset = "0x12590C4", VA = "0x12590C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x1259178", Offset = "0x1259178", VA = "0x1259178")]
		private void OnEventTriggered(GameEvent evt)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x125918C", Offset = "0x125918C", VA = "0x125918C")]
		public GameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000467")]
	public class GameEventMultiPropertyCondition
	{
		[Serializable]
		[Token(Token = "0x2000468")]
		public class PropertyCondition
		{
			[Token(Token = "0x4001C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_fieldName;

			[Token(Token = "0x4001C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Utils.Operator m_operator;

			[Token(Token = "0x4001C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string m_compareValue;

			[NonSerialized]
			[Token(Token = "0x4001C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FieldInfo m_fieldInfo;

			[NonSerialized]
			[Token(Token = "0x4001C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool m_fieldInfoChecked;

			[NonSerialized]
			[Token(Token = "0x4001C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public object m_comparableValue;

			[Token(Token = "0x60019B4")]
			[Address(RVA = "0xFCC1B0", Offset = "0xFCC1B0", VA = "0xFCC1B0")]
			public void CacheFieldInfoIfNecessary(GameEvent eventObject)
			{
			}

			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xFCC254", Offset = "0xFCC254", VA = "0xFCC254")]
			private object GetComparable(Type type)
			{
				return null;
			}

			[Token(Token = "0x60019B6")]
			[Address(RVA = "0xFCC630", Offset = "0xFCC630", VA = "0xFCC630")]
			public PropertyCondition()
			{
			}
		}

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_eventTypeName;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PropertyCondition> m_propertyConditions;

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1259194", Offset = "0x1259194", VA = "0x1259194")]
		public bool IsCorrectGameEvent(GameEvent eventObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x12591D4", Offset = "0x12591D4", VA = "0x12591D4")]
		private void CacheFieldInfoIfNecessary(GameEvent eventObject)
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x12592FC", Offset = "0x12592FC", VA = "0x12592FC")]
		public bool IsConditionMet(GameEvent eventObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x12598B0", Offset = "0x12598B0", VA = "0x12598B0")]
		public GameEventMultiPropertyCondition()
		{
		}
	}
}
namespace GameEvents.EventTypes
{
	[Token(Token = "0x2000469")]
	public class GameEventCombo : GameEvent
	{
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F688", Offset = "0xB6F688")]
		private readonly List<SliceableObjectBase.SliceInfo> <FruitSliced>k__BackingField;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_fruitsSliced;

		[Token(Token = "0x170003B0")]
		public List<SliceableObjectBase.SliceInfo> FruitSliced
		{
			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x1258814", Offset = "0x1258814", VA = "0x1258814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82108", Offset = "0xB82108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x125881C", Offset = "0x125881C", VA = "0x125881C")]
		public GameEventCombo(List<SliceableObjectBase.SliceInfo> sliceInfos, GameRules gameRules)
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class GameEventFruitBonusAchieved : GameEvent
	{
		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F698", Offset = "0xB6F698")]
		private InGameBonus <Bonus>k__BackingField;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_bonusName;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_bonusScore;

		[Token(Token = "0x170003B1")]
		public InGameBonus Bonus
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x1258944", Offset = "0x1258944", VA = "0x1258944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82118", Offset = "0xB82118")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x125894C", Offset = "0x125894C", VA = "0x125894C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82128", Offset = "0xB82128")]
			set
			{
			}
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x1258954", Offset = "0x1258954", VA = "0x1258954")]
		public GameEventFruitBonusAchieved(InGameBonus bonus, int points)
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class GameEventFruitSliced : GameEvent
	{
		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F6A8", Offset = "0xB6F6A8")]
		private Fruit.FruitSlicedEvent <Level>k__BackingField;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F6B8", Offset = "0xB6F6B8")]
		private FruitConfig <FruitConfig>k__BackingField;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F6C8", Offset = "0xB6F6C8")]
		private Vector3 <SlicedPosition>k__BackingField;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_waveId;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_fruitId;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_slicingEntityId;

		[Token(Token = "0x170003B2")]
		public Fruit.FruitSlicedEvent Level
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x1258A04", Offset = "0x1258A04", VA = "0x1258A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82138", Offset = "0xB82138")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x1258A0C", Offset = "0x1258A0C", VA = "0x1258A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82148", Offset = "0xB82148")]
			set
			{
			}
		}

		[Token(Token = "0x170003B3")]
		public FruitConfig FruitConfig
		{
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x1258A14", Offset = "0x1258A14", VA = "0x1258A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82158", Offset = "0xB82158")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x1258A1C", Offset = "0x1258A1C", VA = "0x1258A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82168", Offset = "0xB82168")]
			set
			{
			}
		}

		[Token(Token = "0x170003B4")]
		public Vector3 SlicedPosition
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x1258A24", Offset = "0x1258A24", VA = "0x1258A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82178", Offset = "0xB82178")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x1258A30", Offset = "0x1258A30", VA = "0x1258A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82188", Offset = "0xB82188")]
			set
			{
			}
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x1258A3C", Offset = "0x1258A3C", VA = "0x1258A3C")]
		public GameEventFruitSliced()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class GameEventGameCountdownStarted : GameEvent
	{
		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F6D8", Offset = "0xB6F6D8")]
		private GameManager <GameManager>k__BackingField;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F6E8", Offset = "0xB6F6E8")]
		private Level <Level>k__BackingField;

		[Token(Token = "0x170003B5")]
		public GameManager GameManager
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x1258A9C", Offset = "0x1258A9C", VA = "0x1258A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82198", Offset = "0xB82198")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x1258AA4", Offset = "0x1258AA4", VA = "0x1258AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB821A8", Offset = "0xB821A8")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public Level Level
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x1258AAC", Offset = "0x1258AAC", VA = "0x1258AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB821B8", Offset = "0xB821B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x1258AB4", Offset = "0x1258AB4", VA = "0x1258AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB821C8", Offset = "0xB821C8")]
			set
			{
			}
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x1258ABC", Offset = "0x1258ABC", VA = "0x1258ABC")]
		public GameEventGameCountdownStarted()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class GameEventGameModeUpdated : GameEvent
	{
		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_isFullyPassed;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_isFullyAttempted;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_highestGradeIndex;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_lowestGradeIndex;

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x1258B1C", Offset = "0x1258B1C", VA = "0x1258B1C")]
		public GameEventGameModeUpdated()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class GameEventGameOver : GameEvent
	{
		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F6F8", Offset = "0xB6F6F8")]
		private Level <Level>k__BackingField;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_score;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int m_fruitsSpawned;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_fruitSliced;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_fruitsSkewered;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_bombsSliced;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_time;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_grade;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int m_gradeIndex;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool m_win;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool m_abortedGame;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool m_newPersonalBest;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameManager.GameOverReason m_gameOverReason;

		[Token(Token = "0x170003B7")]
		public Level Level
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0x1258B7C", Offset = "0x1258B7C", VA = "0x1258B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB821D8", Offset = "0xB821D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0x1258B84", Offset = "0x1258B84", VA = "0x1258B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB821E8", Offset = "0xB821E8")]
			set
			{
			}
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x1258B8C", Offset = "0x1258B8C", VA = "0x1258B8C")]
		public GameEventGameOver()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class GameEventGamePaused : GameEvent
	{
		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_isPaused;

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x1258BEC", Offset = "0x1258BEC", VA = "0x1258BEC")]
		public GameEventGamePaused()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class GameEventGameSequenceStarted : GameEvent
	{
		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F708", Offset = "0xB6F708")]
		private GameManager <GameManager>k__BackingField;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F718", Offset = "0xB6F718")]
		private Level <Level>k__BackingField;

		[Token(Token = "0x170003B8")]
		public GameManager GameManager
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x1258C4C", Offset = "0x1258C4C", VA = "0x1258C4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB821F8", Offset = "0xB821F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0x1258C54", Offset = "0x1258C54", VA = "0x1258C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82208", Offset = "0xB82208")]
			set
			{
			}
		}

		[Token(Token = "0x170003B9")]
		public Level Level
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0x1258C5C", Offset = "0x1258C5C", VA = "0x1258C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82218", Offset = "0xB82218")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x1258C64", Offset = "0x1258C64", VA = "0x1258C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82228", Offset = "0xB82228")]
			set
			{
			}
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x1258C6C", Offset = "0x1258C6C", VA = "0x1258C6C")]
		public GameEventGameSequenceStarted()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class GameEventGameStart : GameEvent
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F728", Offset = "0xB6F728")]
		private GameManager <GameManager>k__BackingField;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F738", Offset = "0xB6F738")]
		private Level <Level>k__BackingField;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F748", Offset = "0xB6F748")]
		private WaveManager <WaveManager>k__BackingField;

		[Token(Token = "0x170003BA")]
		public GameManager GameManager
		{
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0x1258CCC", Offset = "0x1258CCC", VA = "0x1258CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82238", Offset = "0xB82238")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x1258CD4", Offset = "0x1258CD4", VA = "0x1258CD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82248", Offset = "0xB82248")]
			set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public Level Level
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x1258CDC", Offset = "0x1258CDC", VA = "0x1258CDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82258", Offset = "0xB82258")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x1258CE4", Offset = "0x1258CE4", VA = "0x1258CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82268", Offset = "0xB82268")]
			set
			{
			}
		}

		[Token(Token = "0x170003BC")]
		public WaveManager WaveManager
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x1258CEC", Offset = "0x1258CEC", VA = "0x1258CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82278", Offset = "0xB82278")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x1258CF4", Offset = "0x1258CF4", VA = "0x1258CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82288", Offset = "0xB82288")]
			set
			{
			}
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x1258CFC", Offset = "0x1258CFC", VA = "0x1258CFC")]
		public GameEventGameStart()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class GameEventHitObject : GameEvent
	{
		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_objectID;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_hitContext;

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x1258D5C", Offset = "0x1258D5C", VA = "0x1258D5C")]
		public GameEventHitObject()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class GameEventItemEquipped : GameEvent
	{
		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F758", Offset = "0xB6F758")]
		private Game.Unlockable <Unlockable>k__BackingField;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F768", Offset = "0xB6F768")]
		private InventoryPlayerDataObject.ItemType <Type>k__BackingField;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F778", Offset = "0xB6F778")]
		private InventoryPlayerDataObject.InventorySlot <Slot>k__BackingField;

		[Token(Token = "0x170003BD")]
		public Game.Unlockable Unlockable
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x1258DBC", Offset = "0x1258DBC", VA = "0x1258DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82298", Offset = "0xB82298")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x1258DC4", Offset = "0x1258DC4", VA = "0x1258DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB822A8", Offset = "0xB822A8")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public InventoryPlayerDataObject.ItemType Type
		{
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x1258DCC", Offset = "0x1258DCC", VA = "0x1258DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB822B8", Offset = "0xB822B8")]
			get
			{
				return default(InventoryPlayerDataObject.ItemType);
			}
			[Token(Token = "0x60019DD")]
			[Address(RVA = "0x1258DD4", Offset = "0x1258DD4", VA = "0x1258DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB822C8", Offset = "0xB822C8")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public InventoryPlayerDataObject.InventorySlot Slot
		{
			[Token(Token = "0x60019DE")]
			[Address(RVA = "0x1258DDC", Offset = "0x1258DDC", VA = "0x1258DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB822D8", Offset = "0xB822D8")]
			get
			{
				return default(InventoryPlayerDataObject.InventorySlot);
			}
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0x1258DE4", Offset = "0x1258DE4", VA = "0x1258DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB822E8", Offset = "0xB822E8")]
			set
			{
			}
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x1258DEC", Offset = "0x1258DEC", VA = "0x1258DEC")]
		public GameEventItemEquipped()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class GameEventItemPurchased : GameEvent
	{
		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F788", Offset = "0xB6F788")]
		private Purchasable <PurchasedItem>k__BackingField;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CurrencyConfig m_currency;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_cost;

		[Token(Token = "0x170003C0")]
		public Purchasable PurchasedItem
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x1258E4C", Offset = "0x1258E4C", VA = "0x1258E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB822F8", Offset = "0xB822F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x1258E54", Offset = "0x1258E54", VA = "0x1258E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82308", Offset = "0xB82308")]
			set
			{
			}
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x1258E5C", Offset = "0x1258E5C", VA = "0x1258E5C")]
		public GameEventItemPurchased()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class GameEventLeaderboardScoreSubmitted : GameEvent
	{
		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_levelId;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_score;

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x1258EBC", Offset = "0x1258EBC", VA = "0x1258EBC")]
		public GameEventLeaderboardScoreSubmitted()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class GameEventLevelSelected : GameEvent
	{
		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F798", Offset = "0xB6F798")]
		private Level <SelectedLevel>k__BackingField;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F7A8", Offset = "0xB6F7A8")]
		private Game.GameMode <GameMode>k__BackingField;

		[Token(Token = "0x170003C1")]
		public Level SelectedLevel
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x1258F1C", Offset = "0x1258F1C", VA = "0x1258F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82318", Offset = "0xB82318")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x1258F24", Offset = "0x1258F24", VA = "0x1258F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82328", Offset = "0xB82328")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public Game.GameMode GameMode
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x1258F2C", Offset = "0x1258F2C", VA = "0x1258F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82338", Offset = "0xB82338")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x1258F34", Offset = "0x1258F34", VA = "0x1258F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82348", Offset = "0xB82348")]
			set
			{
			}
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x1258F3C", Offset = "0x1258F3C", VA = "0x1258F3C")]
		public GameEventLevelSelected()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class GameEventOnAreaEntered : GameEvent
	{
		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AreaManager.AreaType m_areaEntered;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AreaManager.AreaType m_areaLeft;

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x1259934", Offset = "0x1259934", VA = "0x1259934")]
		public GameEventOnAreaEntered()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class GameEventPlayerInSettings : GameEvent
	{
		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_inSettings;

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x1259994", Offset = "0x1259994", VA = "0x1259994")]
		public GameEventPlayerInSettings()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class GameEventResumeCountdownStarted : GameEvent
	{
		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x12599F4", Offset = "0x12599F4", VA = "0x12599F4")]
		public GameEventResumeCountdownStarted()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class GameEventSetlistUpdated : GameEvent
	{
		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F7B8", Offset = "0xB6F7B8")]
		private LevelSetlist <Setlist>k__BackingField;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_isFullyPassed;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_isFullyAttempted;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int m_highestGradeIndex;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_lowestGradeIndex;

		[Token(Token = "0x170003C3")]
		public LevelSetlist Setlist
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x1259A54", Offset = "0x1259A54", VA = "0x1259A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82358", Offset = "0xB82358")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x1259A5C", Offset = "0x1259A5C", VA = "0x1259A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82368", Offset = "0xB82368")]
			set
			{
			}
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x1259A64", Offset = "0x1259A64", VA = "0x1259A64")]
		public GameEventSetlistUpdated()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class GameEventSlicedEnvironmentalObject : GameEvent
	{
		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_objectID;

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x1259AC4", Offset = "0x1259AC4", VA = "0x1259AC4")]
		public GameEventSlicedEnvironmentalObject()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class GameEventWorldInteractionComplete : GameEvent
	{
		[Token(Token = "0x200047D")]
		public enum InteractionState
		{
			[Token(Token = "0x4001C48")]
			Completed,
			[Token(Token = "0x4001C49")]
			Failed,
			[Token(Token = "0x4001C4A")]
			Aborted
		}

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_interactionID;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_score;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_time;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionState m_completionState;

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x1259B24", Offset = "0x1259B24", VA = "0x1259B24")]
		public GameEventWorldInteractionComplete()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class GameEventWorldInteractionProgressed : GameEvent
	{
		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_interactionID;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_interactionElement;

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x1259B84", Offset = "0x1259B84", VA = "0x1259B84")]
		public GameEventWorldInteractionProgressed()
		{
		}
	}
}
namespace Game
{
	[Token(Token = "0x200047F")]
	public abstract class EndGameBonus : ScriptableObject
	{
		[Token(Token = "0x2000480")]
		public struct BonusData
		{
			[Token(Token = "0x4001C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_scoreBonus;

			[Token(Token = "0x4001C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_bonusText;
		}

		[Token(Token = "0x60019F3")]
		public abstract BonusData GetBonusData(GameManager game);

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x10F6AEC", Offset = "0x10F6AEC", VA = "0x10F6AEC")]
		protected EndGameBonus()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class EndGameBonusAccuracy : EndGameBonus
	{
		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_maxBonus;

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x10F6AF4", Offset = "0x10F6AF4", VA = "0x10F6AF4", Slot = "4")]
		public override BonusData GetBonusData(GameManager game)
		{
			return default(BonusData);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x10F6B34", Offset = "0x10F6B34", VA = "0x10F6B34")]
		public EndGameBonusAccuracy()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class GameManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000483")]
		private struct DisableBasedOnSku
		{
			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "VariationAttribute", RVA = "0xB6F8D4", Offset = "0xB6F8D4")]
			public string m_sku;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] m_disableDuringGameplay;
		}

		[Token(Token = "0x2000484")]
		public class BonusCalculationInfo
		{
			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_timeBonus;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_timePercentBonus;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float m_accuracyBonus;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float m_accuracyPercentBonus;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<ScoreBonus.BonusData> m_bonusesData;

			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xFCD5B4", Offset = "0xFCD5B4", VA = "0xFCD5B4")]
			public BonusCalculationInfo()
			{
			}
		}

		[Token(Token = "0x2000485")]
		public struct GameOverInfo
		{
			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Level m_level;

			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_score;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int m_fruitSliced;

			[Token(Token = "0x4001C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_fruitSpawned;

			[Token(Token = "0x4001C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_time;

			[Token(Token = "0x4001C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_grade;

			[Token(Token = "0x4001C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int m_gradeIndex;

			[Token(Token = "0x4001C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool m_win;

			[Token(Token = "0x4001C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool m_abortedGame;

			[Token(Token = "0x4001C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool m_isFirstPlay;

			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			public bool m_isFirstPass;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_newPersonalBest;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public BonusCalculationInfo m_bonusCalculationInfo;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LevelRewardConfig.CurrencyRewardInfo m_rewardInfo;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public GameOverReason m_gameOverReason;
		}

		[Token(Token = "0x2000486")]
		public enum GameState
		{
			[Token(Token = "0x4001C96")]
			NotStarted,
			[Token(Token = "0x4001C97")]
			CountingDown,
			[Token(Token = "0x4001C98")]
			Playing,
			[Token(Token = "0x4001C99")]
			EndSequence,
			[Token(Token = "0x4001C9A")]
			GameOver
		}

		[Token(Token = "0x2000487")]
		public enum GameOverReason
		{
			[Token(Token = "0x4001C9C")]
			Finished,
			[Token(Token = "0x4001C9D")]
			Quit,
			[Token(Token = "0x4001C9E")]
			Fail,
			[Token(Token = "0x4001C9F")]
			TimeOut,
			[Token(Token = "0x4001CA0")]
			Restart
		}

		[Token(Token = "0x2000488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D700", Offset = "0xB5D700")]
		private sealed class <InitiateEndSequence>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManager <>4__this;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameEventGameOver gameEventGameOver;

			[Token(Token = "0x4001CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public BonusCalculationInfo bonusCalculationInfo;

			[Token(Token = "0x4001CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool wasLevelComplete;

			[Token(Token = "0x4001CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private GameOverInfo <gameOverInfo>5__2;

			[Token(Token = "0x170003CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A38")]
				[Address(RVA = "0xFCD564", Offset = "0xFCD564", VA = "0xFCD564", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A3A")]
				[Address(RVA = "0xFCD5AC", Offset = "0xFCD5AC", VA = "0xFCD5AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xFCCB3C", Offset = "0xFCCB3C", VA = "0xFCCB3C")]
			[DebuggerHidden]
			public <InitiateEndSequence>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xFCCB68", Offset = "0xFCCB68", VA = "0xFCCB68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xFCCB6C", Offset = "0xFCCB6C", VA = "0xFCCB6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xFCD56C", Offset = "0xFCD56C", VA = "0xFCD56C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D710", Offset = "0xB5D710")]
		private sealed class <>c__DisplayClass106_0
		{
			[Token(Token = "0x4001CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameManager <>4__this;

			[Token(Token = "0x4001CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Level level;

			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xFCC648", Offset = "0xFCC648", VA = "0xFCC648")]
			public <>c__DisplayClass106_0()
			{
			}

			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0xFCC650", Offset = "0xFCC650", VA = "0xFCC650")]
			internal void <StartGame>b__0()
			{
			}

			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xFCCA44", Offset = "0xFCCA44", VA = "0xFCCA44")]
			internal void <StartGame>b__1()
			{
			}
		}

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6F7C8", Offset = "0xB6F7C8")]
		public Animator m_boardAnimator;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator m_playTargetAnimator;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UICanvas m_levelSelectCanvas;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LODCanvas m_levelSelectLODCanvas;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UICanvas m_endGameCanvas;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UICanvas m_pauseCanvas;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UIPauseMenu m_pauseMenuUI;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UIEndGameSequence m_endGameSequenceUI;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6F800", Offset = "0xB6F800")]
		public UIGameDisplay m_uiGameDisplay;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameMode[] m_availableModes;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F838", Offset = "0xB6F838")]
		[SerializeField]
		private DisableBasedOnSku[] m_disableBasedOnSkus;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject[] m_disableDuringGameplay;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject[] m_enableDuringGameplay;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_delayBeforeResettingObjects;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB6F884", Offset = "0xB6F884")]
		public Transform m_playerTransform;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform m_waveManagerOrigin;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float m_newGameBlinkTime;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameHeightAdjuster m_gameHeightAdjuster;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<LevelSetlist> m_setlistsToForceCheck;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected GameState m_currentGameState;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected int m_currentScore;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected int m_rawEndGameScore;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		protected float m_gameTimeRemaining;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_gameTimeElapsed;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected bool m_isPaused;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected GameMode m_currentGameMode;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Level m_currentLevel;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected WaveManager m_currentWaveManager;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly Dictionary<int, List<Fruit.FruitSlicedEvent>> m_fruitSlicedPerWave;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<Fruit.FruitSlicedEvent> m_fruitSlicedEvents;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int m_fruitSpawned;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int m_bombsSliced;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int m_fruitSliced;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int m_fruitSkewered;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private UICanvas m_currentCanvas;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float m_timeCurrentCanvasDisplayed;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private GameObject[] m_skuDisableDuringGameplay;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private GameEventCombo m_cachedComboEvent;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<SliceableObjectBase.SliceInfo> m_cachedComboSliceInfo;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<ScoringSystem.AchievedCombo> m_cachedAchievedCombos;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ComboEffect m_cachedComboEffect;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private ComboEffect m_bombSliceTextEffect;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private WaitForSeconds m_delayBeforeResettingObjectsWfs;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F894", Offset = "0xB6F894")]
		private static GameManager <CurrentGame>k__BackingField;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6F8A4", Offset = "0xB6F8A4")]
		private static bool <GameRulesAllowSkewering>k__BackingField;

		[Token(Token = "0x170003C4")]
		public bool IsPaused
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x125A414", Offset = "0x125A414", VA = "0x125A414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C5")]
		public float GameTime
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x125A41C", Offset = "0x125A41C", VA = "0x125A41C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C6")]
		public Level CurrentlySelectedLevel
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x125A424", Offset = "0x125A424", VA = "0x125A424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C7")]
		public GameState CurrentState
		{
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x125A42C", Offset = "0x125A42C", VA = "0x125A42C")]
			get
			{
				return default(GameState);
			}
		}

		[Token(Token = "0x170003C8")]
		public GameMode CurrentGameMode
		{
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x125A434", Offset = "0x125A434", VA = "0x125A434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C9")]
		public int CurrentScore
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x125A43C", Offset = "0x125A43C", VA = "0x125A43C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CA")]
		public int RawEndGameScore
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x125A444", Offset = "0x125A444", VA = "0x125A444")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CB")]
		public int BombsSliced
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0x125A44C", Offset = "0x125A44C", VA = "0x125A44C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CC")]
		public static GameManager CurrentGame
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0x125A454", Offset = "0x125A454", VA = "0x125A454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82378", Offset = "0xB82378")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A00")]
			[Address(RVA = "0x125A4B8", Offset = "0x125A4B8", VA = "0x125A4B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82388", Offset = "0xB82388")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CD")]
		public static bool GameRulesAllowSkewering
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0x125A524", Offset = "0x125A524", VA = "0x125A524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82398", Offset = "0xB82398")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0x125A588", Offset = "0x125A588", VA = "0x125A588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB823A8", Offset = "0xB823A8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000075")]
		public static event Action<Fruit.FruitSlicedEvent, int> OnFruitSlicedPoints
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0x125A5F4", Offset = "0x125A5F4", VA = "0x125A5F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB823B8", Offset = "0xB823B8")]
			add
			{
			}
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0x125A6EC", Offset = "0x125A6EC", VA = "0x125A6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB823C8", Offset = "0xB823C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public static event Action<bool> OnGamePaused
		{
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0x125A7E4", Offset = "0x125A7E4", VA = "0x125A7E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB823D8", Offset = "0xB823D8")]
			add
			{
			}
			[Token(Token = "0x6001A06")]
			[Address(RVA = "0x125A8DC", Offset = "0x125A8DC", VA = "0x125A8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB823E8", Offset = "0xB823E8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x125A9D4", Offset = "0x125A9D4", VA = "0x125A9D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x125AD88", Offset = "0x125AD88", VA = "0x125AD88", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x125AEF0", Offset = "0x125AEF0", VA = "0x125AEF0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x125B3AC", Offset = "0x125B3AC", VA = "0x125B3AC", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x125BCE0", Offset = "0x125BCE0", VA = "0x125BCE0", Slot = "7")]
		protected virtual void UpdateGameTimeRemaining()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x125BD44", Offset = "0x125BD44", VA = "0x125BD44", Slot = "8")]
		protected virtual void StartGameInternal()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x125C518", Offset = "0x125C518", VA = "0x125C518")]
		protected void GetSetlistStats(out int setlistNum, out int levelNum)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x125C8A8", Offset = "0x125C8A8", VA = "0x125C8A8", Slot = "9")]
		protected virtual void OnFruitSkewered(Fruit fruit)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x125C8B8", Offset = "0x125C8B8", VA = "0x125C8B8", Slot = "10")]
		protected virtual void OnFruitSliced(Fruit fruit, FruitHalf leftHalf, FruitHalf rightHalf, Fruit.FruitSlicedEvent slicedEvent)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x125CD18", Offset = "0x125CD18", VA = "0x125CD18", Slot = "11")]
		protected virtual void OnFruitLaunched(Fruit fruit)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x125CD4C", Offset = "0x125CD4C", VA = "0x125CD4C")]
		private void OnBombExploded(Bomb bomb, Bomb.ExplosionReason reason)
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x125CE08", Offset = "0x125CE08", VA = "0x125CE08")]
		private void OnCombo(GameEvent evt)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x125D334", Offset = "0x125D334", VA = "0x125D334", Slot = "12")]
		protected virtual void GameOver(GameOverReason reason)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x125DAC0", Offset = "0x125DAC0", VA = "0x125DAC0", Slot = "13")]
		protected virtual void GameOverSequenceDone(bool completed)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x125DACC", Offset = "0x125DACC", VA = "0x125DACC", Slot = "14")]
		protected virtual BonusCalculationInfo ModifyScoreBasedOnBonuses()
		{
			return null;
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x125DDC0", Offset = "0x125DDC0", VA = "0x125DDC0", Slot = "15")]
		protected virtual void SetEnabledDisabledObjectToInitialValues()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x125DFA8", Offset = "0x125DFA8", VA = "0x125DFA8", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB823F8", Offset = "0xB823F8")]
		protected virtual IEnumerator InitiateEndSequence(GameEventGameOver gameEventGameOver, bool wasLevelComplete, BonusCalculationInfo bonusCalculationInfo)
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x125E064", Offset = "0x125E064", VA = "0x125E064", Slot = "17")]
		protected virtual LevelEnd CreateLevelEndEvent(GameLevelsPlayerDataObject.LevelData levelData, GameOverInfo gameOverInfo)
		{
			return null;
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x125E138", Offset = "0x125E138", VA = "0x125E138")]
		private void FillLevelEndEvent(LevelEnd evt, GameLevelsPlayerDataObject.LevelData levelData, GameOverInfo gameOverInfo)
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x125E324", Offset = "0x125E324", VA = "0x125E324", Slot = "18")]
		protected virtual void OnScoreSubmitted(bool failed, LeaderboardBase leaderboard)
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x125E3C4", Offset = "0x125E3C4", VA = "0x125E3C4", Slot = "19")]
		public virtual void QuitGame()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x125E6C4", Offset = "0x125E6C4", VA = "0x125E6C4", Slot = "20")]
		public virtual void RestartGame()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x125E848", Offset = "0x125E848", VA = "0x125E848", Slot = "21")]
		public virtual void ReplayGame(Level level)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x125E9F0", Offset = "0x125E9F0", VA = "0x125E9F0", Slot = "22")]
		protected virtual void ModifyScore(int delta)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x125EA24", Offset = "0x125EA24", VA = "0x125EA24", Slot = "23")]
		protected virtual void UpdateScore()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x125BC70", Offset = "0x125BC70", VA = "0x125BC70")]
		private void UpdateGameTimer()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x125EA48", Offset = "0x125EA48", VA = "0x125EA48")]
		private void OnApplicationStateChanged(bool isPaused)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x125B51C", Offset = "0x125B51C", VA = "0x125B51C")]
		public void SetPaused(bool paused)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x125EB68", Offset = "0x125EB68", VA = "0x125EB68", Slot = "24")]
		public virtual void StartGame(Level level)
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x125F234", Offset = "0x125F234", VA = "0x125F234", Slot = "25")]
		protected virtual void SetupWaveManager()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x125F3DC", Offset = "0x125F3DC", VA = "0x125F3DC", Slot = "26")]
		public virtual void DisplayLevelSelectMenu()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x125F530", Offset = "0x125F530", VA = "0x125F530")]
		public void SelectNextLevel()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x125ACD0", Offset = "0x125ACD0", VA = "0x125ACD0")]
		public void SetSelectedLevel(Level level)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x125F6D4", Offset = "0x125F6D4", VA = "0x125F6D4")]
		public bool PlayGame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x125F5F4", Offset = "0x125F5F4", VA = "0x125F5F4")]
		private Level GetNextLevel()
		{
			return null;
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x125C62C", Offset = "0x125C62C", VA = "0x125C62C")]
		private GameModeSetlists GetGameModeSetlists()
		{
			return null;
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x125AC54", Offset = "0x125AC54", VA = "0x125AC54")]
		protected void SetUIInteractionActive(bool active)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x125FA78", Offset = "0x125FA78", VA = "0x125FA78")]
		public List<Fruit.FruitSlicedEvent> GetFruitSlicedInWave(int waveId)
		{
			return null;
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x125FAEC", Offset = "0x125FAEC", VA = "0x125FAEC")]
		private void SetActiveUiCanvas(UICanvas canvas, UICanvas requestedCanvas)
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x125B1B0", Offset = "0x125B1B0", VA = "0x125B1B0")]
		private void SetActiveUiCanvas(UICanvas uiCanvas)
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x125FC10", Offset = "0x125FC10", VA = "0x125FC10")]
		private GameOverInfo CreateGameOverInfoFromEvent(GameEventGameOver gameEventGameOver)
		{
			return default(GameOverInfo);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x125FCD8", Offset = "0x125FCD8", VA = "0x125FCD8")]
		public void CheckForAllLevelCompletion()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x125FD80", Offset = "0x125FD80", VA = "0x125FD80")]
		public void AddScore(int amount)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x125FD90", Offset = "0x125FD90", VA = "0x125FD90")]
		public GameManager()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class GameManagerClassic : GameManagerVR1
	{
		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6F90C", Offset = "0xB6F90C")]
		public ClassicCross[] m_crosses;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public ClassicCross[] m_crossesCountdownOrder;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public ISound m_lifeLostSound;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public ISound m_lifeGainedSound;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public PooledObject m_gankEffectPrefab;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6F944", Offset = "0xB6F944")]
		public ISound m_gameLostSound;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6F97C", Offset = "0xB6F97C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F97C", Offset = "0xB6F97C")]
		public int m_achievementMinScoreWithoutMistakes;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public AchievementBase m_achievementScoreWithoutMistakes;

		[Token(Token = "0x4001CB2")]
		private const int LifeCount = 3;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int m_lives;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private bool m_hasLostALife;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int m_livesLost;

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x1261D68", Offset = "0x1261D68", VA = "0x1261D68", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x1261EA8", Offset = "0x1261EA8", VA = "0x1261EA8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x1261FE8", Offset = "0x1261FE8", VA = "0x1261FE8", Slot = "24")]
		public override void StartGame(Level level)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x12621B0", Offset = "0x12621B0", VA = "0x12621B0", Slot = "26")]
		public override void DisplayLevelSelectMenu()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x12621B8", Offset = "0x12621B8", VA = "0x12621B8")]
		private void OnFruitDropped(Fruit fruit)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x1262360", Offset = "0x1262360", VA = "0x1262360", Slot = "22")]
		protected override void ModifyScore(int delta)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x12624EC", Offset = "0x12624EC", VA = "0x12624EC")]
		private void ValidateAchievements()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x1262020", Offset = "0x1262020", VA = "0x1262020")]
		private void UpdateLives(int lives, bool animateCrosses)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x1262598", Offset = "0x1262598", VA = "0x1262598", Slot = "12")]
		protected override void GameOver(GameOverReason reason)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x1262614", Offset = "0x1262614", VA = "0x1262614", Slot = "17")]
		protected override LevelEnd CreateLevelEndEvent(GameLevelsPlayerDataObject.LevelData levelData, GameOverInfo gameOverInfo)
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x1262704", Offset = "0x1262704", VA = "0x1262704")]
		private void OnCountDown(int countdown)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x1262774", Offset = "0x1262774", VA = "0x1262774")]
		public GameManagerClassic()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public abstract class GameMode : Unlockable
	{
		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LevelRewardConfig m_rewardConfig;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool m_isSingleLevel;

		[Token(Token = "0x6001A4A")]
		public abstract Level GetLevelById(string levelId);

		[Token(Token = "0x6001A4B")]
		public abstract Level GetDefaultLevel();

		[Token(Token = "0x6001A4C")]
		public abstract bool HasCompletedAllLevels();

		[Token(Token = "0x6001A4D")]
		public abstract int GetNumCompletedLevels();

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x1262C8C", Offset = "0x1262C8C", VA = "0x1262C8C")]
		protected GameMode()
		{
		}
	}
	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D720", Offset = "0xB5D720")]
	public class GameModeSetlists : GameMode
	{
		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D780", Offset = "0xB5D780")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int completedLevels;

			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xFCD95C", Offset = "0xFCD95C", VA = "0xFCD95C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xFCD964", Offset = "0xFCD964", VA = "0xFCD964")]
			internal void <GetNumCompletedLevels>b__0(LevelSetlist setlist)
			{
			}
		}

		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D790", Offset = "0xB5D790")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int totalLevels;

			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xFCD9A0", Offset = "0xFCD9A0", VA = "0xFCD9A0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xFCD9A8", Offset = "0xFCD9A8", VA = "0xFCD9A8")]
			internal void <GetTotalLevels>b__0(LevelSetlist setlist)
			{
			}
		}

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D7A0", Offset = "0xB5D7A0")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string levelId;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Predicate<Level> <>9__0;

			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xFCDA10", Offset = "0xFCDA10", VA = "0xFCDA10")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001A62")]
			[Address(RVA = "0xFCDA18", Offset = "0xFCDA18", VA = "0xFCDA18")]
			internal bool <GetLevelById>b__0(Level lvl)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D7B0", Offset = "0xB5D7B0")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Level level;

			[Token(Token = "0x6001A63")]
			[Address(RVA = "0xFCDA3C", Offset = "0xFCDA3C", VA = "0xFCDA3C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xFCDA44", Offset = "0xFCDA44", VA = "0xFCDA44")]
			internal bool <GetSetlistByLevel>b__0(LevelSetlist setlist)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D7C0", Offset = "0xB5D7C0")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LevelSetlist setlist;

			[Token(Token = "0x6001A65")]
			[Address(RVA = "0xFCDAAC", Offset = "0xFCDAAC", VA = "0xFCDAAC")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001A66")]
			[Address(RVA = "0xFCDAB4", Offset = "0xFCDAB4", VA = "0xFCDAB4")]
			internal bool <GetSetlistNumber>b__0(LevelSetlist sl)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LevelSetlist> m_setlists;

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x125F7EC", Offset = "0x125F7EC", VA = "0x125F7EC")]
		public Level GetNextLevel(Level levelReference)
		{
			return null;
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x1262C94", Offset = "0x1262C94", VA = "0x1262C94", Slot = "14")]
		public override bool HasCompletedAllLevels()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x1262DC8", Offset = "0x1262DC8", VA = "0x1262DC8", Slot = "15")]
		public override int GetNumCompletedLevels()
		{
			return default(int);
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x1262CD4", Offset = "0x1262CD4", VA = "0x1262CD4")]
		public int GetTotalLevels()
		{
			return default(int);
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x1262EBC", Offset = "0x1262EBC", VA = "0x1262EBC", Slot = "12")]
		public override Level GetLevelById(string levelId)
		{
			return null;
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x1263150", Offset = "0x1263150", VA = "0x1263150", Slot = "13")]
		public override Level GetDefaultLevel()
		{
			return null;
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x125C6AC", Offset = "0x125C6AC", VA = "0x125C6AC")]
		public LevelSetlist GetSetlistByLevel(Level level)
		{
			return null;
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x125C7A8", Offset = "0x125C7A8", VA = "0x125C7A8")]
		public int GetSetlistNumber(LevelSetlist setlist)
		{
			return default(int);
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x12631E0", Offset = "0x12631E0", VA = "0x12631E0")]
		public void OnLevelCompleted(GameRules gameRules)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x1263294", Offset = "0x1263294", VA = "0x1263294")]
		public bool HasAttemptedAllLevels()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x1263340", Offset = "0x1263340", VA = "0x1263340")]
		public bool HasPassedAllLevels()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x126349C", Offset = "0x126349C", VA = "0x126349C")]
		public int GetLowestGradeAchievedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x12633EC", Offset = "0x12633EC", VA = "0x12633EC")]
		public int GetHighestGradeAchievedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x1263558", Offset = "0x1263558", VA = "0x1263558")]
		public GameModeSetlists()
		{
		}
	}
	[Token(Token = "0x2000492")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D7D0", Offset = "0xB5D7D0")]
	public class GameModeSingleLevel : GameMode
	{
		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Level m_level;

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x12635DC", Offset = "0x12635DC", VA = "0x12635DC", Slot = "9")]
		public override bool Unlock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x1263628", Offset = "0x1263628", VA = "0x1263628", Slot = "12")]
		public override Level GetLevelById(string levelId)
		{
			return null;
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x126366C", Offset = "0x126366C", VA = "0x126366C", Slot = "13")]
		public override Level GetDefaultLevel()
		{
			return null;
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x1263674", Offset = "0x1263674", VA = "0x1263674", Slot = "14")]
		public override bool HasCompletedAllLevels()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x1263690", Offset = "0x1263690", VA = "0x1263690", Slot = "15")]
		public override int GetNumCompletedLevels()
		{
			return default(int);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x12636B8", Offset = "0x12636B8", VA = "0x12636B8")]
		public GameModeSingleLevel()
		{
		}
	}
	[Token(Token = "0x2000493")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D830", Offset = "0xB5D830")]
	public class GameRules : ScriptableObject
	{
		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6F9DC", Offset = "0xB6F9DC")]
		public int m_timer;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScoringSystem m_scoringSystem;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ComboEffect m_bombSliceTextEffect;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_overrideDefaultGameMusic;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_canSkewer;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool m_trackStats;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public OffScreenIndicators.IndicatorMode m_indicatorMode;

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x12636C0", Offset = "0x12636C0", VA = "0x12636C0")]
		public GameRules()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class GameStarter : MonoBehaviour
	{
		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D890", Offset = "0xB5D890")]
		private sealed class <OnFailStartGame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameStarter <>4__this;

			[Token(Token = "0x170003D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A74")]
				[Address(RVA = "0xFCDCE0", Offset = "0xFCDCE0", VA = "0xFCDCE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A76")]
				[Address(RVA = "0xFCDD28", Offset = "0xFCDD28", VA = "0xFCDD28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A71")]
			[Address(RVA = "0xFCDB2C", Offset = "0xFCDB2C", VA = "0xFCDB2C")]
			[DebuggerHidden]
			public <OnFailStartGame>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001A72")]
			[Address(RVA = "0xFCDB58", Offset = "0xFCDB58", VA = "0xFCDB58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xFCDB5C", Offset = "0xFCDB5C", VA = "0xFCDB5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xFCDCE8", Offset = "0xFCDCE8", VA = "0xFCDCE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6FA14", Offset = "0xB6FA14")]
		private float m_onFailStartGameDelay;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_onFailStartCheckPlayerIsAround;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_playerAroundDistance;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onFailStartGame;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x12636D8", Offset = "0x12636D8", VA = "0x12636D8")]
		public void StartGame(string context = "")
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x1263968", Offset = "0x1263968", VA = "0x1263968")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB824A8", Offset = "0xB824A8")]
		private IEnumerator OnFailStartGame()
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x12639E0", Offset = "0x12639E0", VA = "0x12639E0")]
		public GameStarter()
		{
		}
	}
	[Token(Token = "0x2000496")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D8A0", Offset = "0xB5D8A0")]
	public class GradingConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000497")]
		public struct GradeBand
		{
			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_minimumScorePercentage;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_grade;

			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ISound m_gradeSound;
		}

		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5D900", Offset = "0xB5D900")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GradeBand grade;

			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xFD35CC", Offset = "0xFD35CC", VA = "0xFD35CC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xFD35D4", Offset = "0xFD35D4", VA = "0xFD35D4")]
			internal bool <GetGradeIndex>b__0(GradeBand x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FA90", Offset = "0xB6FA90")]
		public GradeBand[] m_gradeBands;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GradeBand m_failGrade;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x1C4D5EC", Offset = "0x1C4D5EC", VA = "0x1C4D5EC")]
		public GradeBand GetGrade(int score, int referenceScore)
		{
			return default(GradeBand);
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x1C4D6D8", Offset = "0x1C4D6D8", VA = "0x1C4D6D8")]
		public bool IsPassingScore(int score, int referenceScore)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x1C4D734", Offset = "0x1C4D734", VA = "0x1C4D734")]
		public int GetGradeIndex(int score, int referenceScore)
		{
			return default(int);
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x1C4D884", Offset = "0x1C4D884", VA = "0x1C4D884")]
		public GradingConfig()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public abstract class InGameBonus : ScriptableObject
	{
		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_scoreBonus;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComboEffect m_effectPrefab;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ComboEffect m_cachedEffect;

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x1C5B554", Offset = "0x1C5B554", VA = "0x1C5B554")]
		public int GetScoreBonus(GameManager game, WaveManager waveManager, Fruit.FruitSlicedEvent fruitSlicedEvent)
		{
			return default(int);
		}

		[Token(Token = "0x6001A7E")]
		protected abstract bool IsBonusAchieved(GameManager game, WaveManager waveManager, Fruit.FruitSlicedEvent fruitSlicedEvent);

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x1C5B644", Offset = "0x1C5B644", VA = "0x1C5B644", Slot = "5")]
		public virtual ComboEffect SpawnEffectPrefab(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x1C5B73C", Offset = "0x1C5B73C", VA = "0x1C5B73C")]
		protected InGameBonus()
		{
		}
	}
	[Token(Token = "0x200049A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D910", Offset = "0xB5D910")]
	public class InGameBonusBullsEye : InGameBonus
	{
		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_accuracyRequired;

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x1C5B744", Offset = "0x1C5B744", VA = "0x1C5B744", Slot = "4")]
		protected override bool IsBonusAchieved(GameManager game, WaveManager waveManager, Fruit.FruitSlicedEvent fruitSlicedEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x1C5B80C", Offset = "0x1C5B80C", VA = "0x1C5B80C")]
		public InGameBonusBullsEye()
		{
		}
	}
	[Token(Token = "0x200049B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D970", Offset = "0xB5D970")]
	public class InGameBonusCloseCall : InGameBonus
	{
		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6FAC8", Offset = "0xB6FAC8")]
		public float m_minDownwardVelocity;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB6FAE0", Offset = "0xB6FAE0")]
		public float m_distanceToGround;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RaycastHit m_hitInfo;

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x1C5B820", Offset = "0x1C5B820", VA = "0x1C5B820", Slot = "4")]
		protected override bool IsBonusAchieved(GameManager game, WaveManager waveManager, Fruit.FruitSlicedEvent fruitSlicedEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x1C5B94C", Offset = "0x1C5B94C", VA = "0x1C5B94C")]
		public InGameBonusCloseCall()
		{
		}
	}
	[Token(Token = "0x200049C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5D9D0", Offset = "0xB5D9D0")]
	public class InGameBonusCritical : InGameBonus
	{
		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_cuttingPlaneClosenessToFruitCenter;

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x1C5B95C", Offset = "0x1C5B95C", VA = "0x1C5B95C", Slot = "4")]
		protected override bool IsBonusAchieved(GameManager game, WaveManager waveManager, Fruit.FruitSlicedEvent fruitSlicedEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x1C5BA08", Offset = "0x1C5BA08", VA = "0x1C5BA08")]
		public InGameBonusCritical()
		{
		}
	}
	[Token(Token = "0x200049D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DA30", Offset = "0xB5DA30")]
	public class InGameBonusWaveComplete : InGameBonus
	{
		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<LocalizedString> m_bonusTextOptions;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_bonusTextIndex;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Fruit.FruitSlicedEvent> m_slicedInWave;

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x1C5BA1C", Offset = "0x1C5BA1C", VA = "0x1C5BA1C", Slot = "4")]
		protected override bool IsBonusAchieved(GameManager game, WaveManager waveManager, Fruit.FruitSlicedEvent fruitSlicedEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x1C5BBFC", Offset = "0x1C5BBFC", VA = "0x1C5BBFC", Slot = "5")]
		public override ComboEffect SpawnEffectPrefab(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x1C5BDA4", Offset = "0x1C5BDA4", VA = "0x1C5BDA4")]
		public InGameBonusWaveComplete()
		{
		}
	}
	[Token(Token = "0x200049E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DA90", Offset = "0xB5DA90")]
	public class Level : Unlockable
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LocalizedString m_displayName;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WaveManager m_wavelistPrefab;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameRules m_gameRules;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int m_aPlusScore;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GradingConfig m_gradingConfig;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GrabbableAssignmentConfigBase m_grabbableAssignmentConfig;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FB08", Offset = "0xB6FB08")]
		public LevelRewardConfig m_rewardConfig;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeReference]
		public List<ScoreBonus> m_endGameBonuses;

		[Token(Token = "0x170003D2")]
		public bool IsTimed
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x10BDFB4", Offset = "0x10BDFB4", VA = "0x10BDFB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x10BE048", Offset = "0x10BE048", VA = "0x10BE048")]
		public bool IsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x10BE0DC", Offset = "0x10BE0DC", VA = "0x10BE0DC")]
		public GradingConfig.GradeBand GetGrade(int score)
		{
			return default(GradingConfig.GradeBand);
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x10BE130", Offset = "0x10BE130", VA = "0x10BE130")]
		public int GetGradeIndex(int score)
		{
			return default(int);
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x10BE154", Offset = "0x10BE154", VA = "0x10BE154")]
		public bool DidPass(int score)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x10BE178", Offset = "0x10BE178", VA = "0x10BE178")]
		public int GetGradeAchieved()
		{
			return default(int);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x10BE220", Offset = "0x10BE220", VA = "0x10BE220")]
		public bool IsAttempted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x10BE2C8", Offset = "0x10BE2C8", VA = "0x10BE2C8", Slot = "9")]
		public override bool Unlock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x10BE360", Offset = "0x10BE360", VA = "0x10BE360")]
		public Level()
		{
		}
	}
	[Token(Token = "0x200049F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DAF0", Offset = "0xB5DAF0")]
	public class LevelSetlist : Unlockable
	{
		[Serializable]
		[Token(Token = "0x20004A0")]
		public struct UnlockCondition
		{
			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FB50", Offset = "0xB6FB50")]
			public GameModeSetlists m_gameMode;

			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FB88", Offset = "0xB6FB88")]
			public LevelSetlist m_setlist;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_levelsComplete;

			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0xFD9634", Offset = "0xFD9634", VA = "0xFD9634")]
			public bool IsMet()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DB50", Offset = "0xB5DB50")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int totalComplete;

			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0xFD956C", Offset = "0xFD956C", VA = "0xFD956C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xFD9574", Offset = "0xFD9574", VA = "0xFD9574")]
			internal void <GetNumCompletedLevels>b__0(Level level)
			{
			}
		}

		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DB60", Offset = "0xB5DB60")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Level level;

			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0xFD95B4", Offset = "0xFD95B4", VA = "0xFD95B4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xFD95BC", Offset = "0xFD95BC", VA = "0xFD95BC")]
			internal bool <GetLevelNumber>b__0(Level l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LocalizedString m_displayName;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Level> m_levels;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnlockCondition m_unlockCondition;

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x10C5B14", Offset = "0x10C5B14", VA = "0x10C5B14", Slot = "4")]
		protected override void OnBegin()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x10C5CE0", Offset = "0x10C5CE0", VA = "0x10C5CE0")]
		private void OnGameOver(GameEvent evt)
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x10C5BF8", Offset = "0x10C5BF8", VA = "0x10C5BF8")]
		private void UnlockIfConditionMet()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x10C5CE4", Offset = "0x10C5CE4", VA = "0x10C5CE4", Slot = "9")]
		public override bool Unlock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x10C5E1C", Offset = "0x10C5E1C", VA = "0x10C5E1C")]
		public int GetNumCompletedLevels()
		{
			return default(int);
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x10C5F10", Offset = "0x10C5F10", VA = "0x10C5F10")]
		public int GetLevelNumber(Level level)
		{
			return default(int);
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x10C6010", Offset = "0x10C6010", VA = "0x10C6010")]
		public void OnLevelCompleted(GameRules gameRules)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x10C60DC", Offset = "0x10C60DC", VA = "0x10C60DC")]
		public bool HasAttemptedAllLevels()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x10C6210", Offset = "0x10C6210", VA = "0x10C6210")]
		public bool HasPassedAllLevels()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x10C650C", Offset = "0x10C650C", VA = "0x10C650C")]
		public int GetLowestGradeAchievedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x10C6344", Offset = "0x10C6344", VA = "0x10C6344")]
		public int GetHighestGradeAchievedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x10C66E0", Offset = "0x10C66E0", VA = "0x10C66E0")]
		public LevelSetlist()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A3")]
	public abstract class ScoreBonus
	{
		[Token(Token = "0x20004A4")]
		public class BonusData
		{
			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type m_bonusType;

			[Token(Token = "0x4001CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m_scoreBonus;

			[Token(Token = "0x4001CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int m_maxBonus;

			[Token(Token = "0x4001CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float m_percentBonus;

			[Token(Token = "0x4001CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString m_bonusTextString;

			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public object[] m_bonusTextParams;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Sprite m_icon;

			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0xFE2114", Offset = "0xFE2114", VA = "0xFE2114")]
			public string GetLabel()
			{
				return null;
			}

			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xFE2154", Offset = "0xFE2154", VA = "0xFE2154")]
			public BonusData()
			{
			}
		}

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[ReadOnlyField]
		[SerializeField]
		private string m_type;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_maxBonus;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizedString m_bonusText;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite m_icon;

		[Token(Token = "0x6001AA4")]
		public abstract void StartTracking();

		[Token(Token = "0x6001AA5")]
		public abstract void EndTracking();

		[Token(Token = "0x6001AA6")]
		public abstract BonusData GetScoreBonus(GameManager game);

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x13CE9CC", Offset = "0x13CE9CC", VA = "0x13CE9CC")]
		protected ScoreBonus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A5")]
	public class ScoreBonusTime : ScoreBonus
	{
		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RangedFloat m_timeRange;

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x13CF47C", Offset = "0x13CF47C", VA = "0x13CF47C", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x13CF480", Offset = "0x13CF480", VA = "0x13CF480", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x13CF484", Offset = "0x13CF484", VA = "0x13CF484", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x13CF658", Offset = "0x13CF658", VA = "0x13CF658")]
		public ScoreBonusTime()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A6")]
	public class ScoreBonusAccuracy : ScoreBonus
	{
		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, int> m_arrowHitCounts;

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x13CE9D4", Offset = "0x13CE9D4", VA = "0x13CE9D4", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x13CEB6C", Offset = "0x13CEB6C", VA = "0x13CEB6C", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x13CECB8", Offset = "0x13CECB8", VA = "0x13CECB8", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x13CEFC4", Offset = "0x13CEFC4", VA = "0x13CEFC4")]
		private void OnArrowShot(GameEvent evt)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x13CF090", Offset = "0x13CF090", VA = "0x13CF090")]
		private void OnFruitSliced(Fruit fruit, FruitHalf leftHalf, FruitHalf rightHalf, Fruit.FruitSlicedEvent slicedEvent)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x13CF138", Offset = "0x13CF138", VA = "0x13CF138")]
		public ScoreBonusAccuracy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A7")]
	public class ScoreBonusPar : ScoreBonus
	{
		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FC08", Offset = "0xB6FC08")]
		public RangedInt m_par;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_shotsTaken;

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x13CF140", Offset = "0x13CF140", VA = "0x13CF140", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x13CF200", Offset = "0x13CF200", VA = "0x13CF200", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x13CF2BC", Offset = "0x13CF2BC", VA = "0x13CF2BC", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x13CF464", Offset = "0x13CF464", VA = "0x13CF464")]
		private void OnArrowShot(GameEvent evt)
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x13CF474", Offset = "0x13CF474", VA = "0x13CF474")]
		public ScoreBonusPar()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DB70", Offset = "0xB5DB70")]
	public class ScoringSystem : ScriptableObject
	{
		[Token(Token = "0x20004A9")]
		public struct AchievedCombo
		{
			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Combo m_combo;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_score;
		}

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_scorePerFruitSliced;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_bombPenalty;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_bombEndsGame;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6FC40", Offset = "0xB6FC40")]
		public List<Combo> m_combos;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<InGameBonus> m_inGameBonuses;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<AchievedCombo> m_achievedCombos;

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x13CF660", Offset = "0x13CF660", VA = "0x13CF660", Slot = "4")]
		public virtual bool EvaluateEndGame(Fruit.FruitSlicedEvent fruitSlicedEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x13CF69C", Offset = "0x13CF69C", VA = "0x13CF69C", Slot = "5")]
		public virtual bool EvaluateEndGame(Bomb bomb)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x13CF6A4", Offset = "0x13CF6A4", VA = "0x13CF6A4", Slot = "6")]
		public virtual int EvaluateFruitSlicedPoints(Fruit.FruitSlicedEvent fruitSlicedEvent)
		{
			return default(int);
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x13CF6DC", Offset = "0x13CF6DC", VA = "0x13CF6DC")]
		public List<AchievedCombo> GetAchievedCombos(List<SliceableObjectBase.SliceInfo> sliceInfos)
		{
			return null;
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x13CF8A0", Offset = "0x13CF8A0", VA = "0x13CF8A0")]
		public ScoringSystem()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DBD0", Offset = "0xB5DBD0")]
	public class ScoringSystemRhythm : ScoringSystem
	{
		[Serializable]
		[Token(Token = "0x20004AB")]
		public struct SliceDistance
		{
			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_points;

			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m_maxDistance;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6FCE8", Offset = "0xB6FCE8")]
			public GameObject m_textEffectPrefab;
		}

		[Serializable]
		[Token(Token = "0x20004AC")]
		public struct SliceDirection
		{
			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_points;

			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m_minPercentage;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_text;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6FD20", Offset = "0xB6FD20")]
			public Color m_colour;
		}

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_directionalSliceThreshold;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PooledObject m_wrongDirectionalSliceEffectPrefab;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FC78", Offset = "0xB6FC78")]
		public List<SliceDistance> m_sliceDistanceTiers;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FCB0", Offset = "0xB6FCB0")]
		public List<SliceDirection> m_sliceDirectionTiers;

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x13CF92C", Offset = "0x13CF92C", VA = "0x13CF92C", Slot = "6")]
		public override int EvaluateFruitSlicedPoints(Fruit.FruitSlicedEvent fruitSlicedEvent)
		{
			return default(int);
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x13CFD78", Offset = "0x13CFD78", VA = "0x13CFD78")]
		public ScoringSystemRhythm()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DC30", Offset = "0xB5DC30")]
	public class WorldInteractionEffects : ScriptableObject
	{
		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ISound m_completeSound;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ISound m_failSound;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ISound m_progressSound;

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xF87D0C", Offset = "0xF87D0C", VA = "0xF87D0C")]
		public WorldInteractionEffects()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DC90", Offset = "0xB5DC90")]
	public class Unlockable : ManagedScriptableObject, IReferenceId, IUnlockable
	{
		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_id;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FD58", Offset = "0xB6FD58")]
		public bool m_analyticsEnabled;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool m_unlockedByDefault;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizedString m_name;

		[Token(Token = "0x170003D3")]
		public LocalizedString Name
		{
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0x1228218", Offset = "0x1228218", VA = "0x1228218")]
			get
			{
				return default(LocalizedString);
			}
		}

		[Token(Token = "0x14000077")]
		public event Action OnUnlock
		{
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x1227F90", Offset = "0x1227F90", VA = "0x1227F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82558", Offset = "0xB82558")]
			add
			{
			}
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x1228030", Offset = "0x1228030", VA = "0x1228030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82568", Offset = "0xB82568")]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public event Action OnUnlockSeen
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x12280D0", Offset = "0x12280D0", VA = "0x12280D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82578", Offset = "0xB82578")]
			add
			{
			}
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x1228170", Offset = "0x1228170", VA = "0x1228170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82588", Offset = "0xB82588")]
			remove
			{
			}
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x1228210", Offset = "0x1228210", VA = "0x1228210", Slot = "6")]
		public string GetReferenceId()
		{
			return null;
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x122822C", Offset = "0x122822C", VA = "0x122822C", Slot = "9")]
		public virtual bool Unlock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x122849C", Offset = "0x122849C", VA = "0x122849C")]
		public void PerformUnlock()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x1227820", Offset = "0x1227820", VA = "0x1227820")]
		public bool HasUnlockBeenSeen(UnlocksPlayerDataObject.SeenType seenType = UnlocksPlayerDataObject.SeenType.Seen)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x1227DB4", Offset = "0x1227DB4", VA = "0x1227DB4")]
		public bool SetUnlockSeen(UnlocksPlayerDataObject.SeenType seenType = UnlocksPlayerDataObject.SeenType.Seen)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x122869C", Offset = "0x122869C", VA = "0x122869C")]
		public UnlocksPlayerDataObject.UnlockData GetUnlockData()
		{
			return null;
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x12287A8", Offset = "0x12287A8", VA = "0x12287A8", Slot = "10")]
		public virtual bool IsUnlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x122889C", Offset = "0x122889C", VA = "0x122889C", Slot = "11")]
		public virtual bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x12288A4", Offset = "0x12288A4", VA = "0x12288A4")]
		public Unlockable()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DCF0", Offset = "0xB5DCF0")]
	public class UnlockableList : Unlockable
	{
		[Token(Token = "0x20004B0")]
		public enum SelectionType
		{
			[Token(Token = "0x4001D1C")]
			Default,
			[Token(Token = "0x4001D1D")]
			Selected,
			[Token(Token = "0x4001D1E")]
			Random,
			[Token(Token = "0x4001D1F")]
			Newest
		}

		[Serializable]
		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DD50", Offset = "0xB5DD50")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Unlockable> <>9__4_0;

			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0x1B8FC58", Offset = "0x1B8FC58", VA = "0x1B8FC58")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0x1B8FC60", Offset = "0x1B8FC60", VA = "0x1B8FC60")]
			internal bool <GetAllUnlocked>b__4_0(Unlockable unlockable)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Unlockable> m_unlockables;

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x12288B4", Offset = "0x12288B4", VA = "0x12288B4", Slot = "9")]
		public override bool Unlock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x1228A00", Offset = "0x1228A00", VA = "0x1228A00", Slot = "10")]
		public override bool IsUnlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x1228B28", Offset = "0x1228B28", VA = "0x1228B28")]
		public List<Unlockable> GetAllUnlocked()
		{
			return null;
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x1228C78", Offset = "0x1228C78", VA = "0x1228C78")]
		public Unlockable GetUnlocked(SelectionType selectionType = SelectionType.Random, InventoryPlayerDataObject.ItemType itemType = InventoryPlayerDataObject.ItemType.Unassigned, InventoryPlayerDataObject.InventorySlot inventorySlot = InventoryPlayerDataObject.InventorySlot.Unassigned)
		{
			return null;
		}

		[Token(Token = "0x6001AD3")]
		public T GetUnlocked<T>(SelectionType selectionType = SelectionType.Random, InventoryPlayerDataObject.ItemType itemType = InventoryPlayerDataObject.ItemType.Unassigned, InventoryPlayerDataObject.InventorySlot inventorySlot = InventoryPlayerDataObject.InventorySlot.Unassigned) where T : Unlockable
		{
			return null;
		}

		[Token(Token = "0x6001AD4")]
		public T Get<T>(string id) where T : Unlockable
		{
			return null;
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x1228EE4", Offset = "0x1228EE4", VA = "0x1228EE4")]
		public void SubscribeToAllUnlocks(Action callback)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x1229044", Offset = "0x1229044", VA = "0x1229044")]
		public UnlockableList()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DD60", Offset = "0xB5DD60")]
	public class UnlockablePrefab : Unlockable
	{
		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_prefab;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_networkPrefab;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InventoryPlayerDataObject.ItemType m_itemType;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InventoryPlayerDataObject.InventorySlot[] m_inventorySlots;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Sprite m_itemSprite;

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x1229260", Offset = "0x1229260", VA = "0x1229260")]
		public UnlockablePrefab()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class UnlockableSpawner : PooledObjectSpawner
	{
		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6FDC0", Offset = "0xB6FDC0")]
		public UnlockableList m_unlockableList;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnlockableList.SelectionType m_selectionType;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public InventoryPlayerDataObject.ItemType m_itemType;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InventoryPlayerDataObject.InventorySlot m_inventorySlot;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool m_showDefaultWhenUnassigned;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Unlockable m_spawnedUnlockable;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameEvent.EventTriggered m_onItemEquipped;

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x1229278", Offset = "0x1229278", VA = "0x1229278")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x12292F8", Offset = "0x12292F8", VA = "0x12292F8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x12293A0", Offset = "0x12293A0", VA = "0x12293A0")]
		private void ValidateCurrentSelected()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x12294E0", Offset = "0x12294E0", VA = "0x12294E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x1229574", Offset = "0x1229574", VA = "0x1229574")]
		private void OnItemEquipped(GameEvent evt)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x1229654", Offset = "0x1229654", VA = "0x1229654", Slot = "6")]
		public override PooledObject SpawnObject(bool force = false, bool showEffect = true)
		{
			return null;
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x1229824", Offset = "0x1229824", VA = "0x1229824", Slot = "12")]
		protected override void UnbindCurrent()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x1229854", Offset = "0x1229854", VA = "0x1229854")]
		public UnlockableSpawner()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DDC0", Offset = "0xB5DDC0")]
	public class UnlockableWorldSectionConfig : Unlockable
	{
		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FDF8", Offset = "0xB6FDF8")]
		public GameEventMultiPropertyCondition m_unlockCondition;

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x1229A84", Offset = "0x1229A84", VA = "0x1229A84")]
		public UnlockableWorldSectionConfig()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public class RackSpawner : MonoBehaviour
	{
		[Token(Token = "0x20004B6")]
		private class Data
		{
			[Token(Token = "0x4001D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GrabbableDesiredLocation m_spawnAnchor;

			[Token(Token = "0x4001D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnlockablePrefab m_unlockable;

			[Token(Token = "0x4001D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool m_isUnlocked;

			[Token(Token = "0x4001D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Grabbable m_grabbable;

			[Token(Token = "0x4001D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InventoryPlayerDataObject.InventorySlot m_slot;

			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xFC71E0", Offset = "0xFC71E0", VA = "0xFC71E0")]
			public Data()
			{
			}
		}

		[Token(Token = "0x20004B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DE20", Offset = "0xB5DE20")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Grabbable grabbedObj;

			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0xFC6F2C", Offset = "0xFC6F2C", VA = "0xFC6F2C")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xFC6F34", Offset = "0xFC6F34", VA = "0xFC6F34")]
			internal bool <OnGrabbed>b__0(Data data)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DE30", Offset = "0xB5DE30")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InventoryPlayerDataObject.InventorySlot desiredSlot;

			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0xFC6FB8", Offset = "0xFC6FB8", VA = "0xFC6FB8")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xFC6FC0", Offset = "0xFC6FC0", VA = "0xFC6FC0")]
			internal bool <Activate>b__0(InventoryPlayerDataObject.InventorySlot inventorySlot)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DE40", Offset = "0xB5DE40")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RackSpawner <>4__this;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnlockablePrefab[] equippedSlots;

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int i;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Predicate<Data> <>9__0;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Predicate<Data> <>9__2;

			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0xFC6FD0", Offset = "0xFC6FD0", VA = "0xFC6FD0")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xFC6FD8", Offset = "0xFC6FD8", VA = "0xFC6FD8")]
			internal bool <UpdateEquippedState>b__0(Data data)
			{
				return default(bool);
			}

			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0xFC7030", Offset = "0xFC7030", VA = "0xFC7030")]
			internal bool <UpdateEquippedState>b__2(Data data)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DE50", Offset = "0xB5DE50")]
		private sealed class <>c__DisplayClass28_1
		{
			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Data lastGrabbed;

			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass28_0 CS$<>8__locals1;

			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0xFC70FC", Offset = "0xFC70FC", VA = "0xFC70FC")]
			public <>c__DisplayClass28_1()
			{
			}

			[Token(Token = "0x6001AFC")]
			[Address(RVA = "0xFC7104", Offset = "0xFC7104", VA = "0xFC7104")]
			internal bool <UpdateEquippedState>b__1(Data data)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6FE30", Offset = "0xB6FE30")]
		public UnlockableList m_unlockableList;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InventoryPlayerDataObject.ItemType m_inventoryType;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InventoryPlayerDataObject.InventorySlot[] m_inventorySlots;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6FE68", Offset = "0xB6FE68")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB6FE68", Offset = "0xB6FE68")]
		public GrabbableDesiredLocation[] m_spawnAnchors;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_selected;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6FEC8", Offset = "0xB6FEC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FEC8", Offset = "0xB6FEC8")]
		public int m_instanceCount;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool m_equipSeparateHands;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FF28", Offset = "0xB6FF28")]
		public float m_respawnRadius;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FF60", Offset = "0xB6FF60")]
		public Material m_lockedMaterial;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB6FF98", Offset = "0xB6FF98")]
		public Transform m_selectedEffectTransform;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject m_selectedEffectPrefab;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Data> m_data;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<GameObject> m_tags;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<InventoryPlayerDataObject.InventorySlot, Data> m_lastGrabbed;

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x10025C8", Offset = "0x10025C8", VA = "0x10025C8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x10032F4", Offset = "0x10032F4", VA = "0x10032F4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x1003558", Offset = "0x1003558", VA = "0x1003558")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x1003614", Offset = "0x1003614", VA = "0x1003614")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x10036D0", Offset = "0x10036D0", VA = "0x10036D0")]
		private void OnItemEquipped(GameEvent evt)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x10026E4", Offset = "0x10026E4", VA = "0x10026E4")]
		private void InitSpawn()
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x10029EC", Offset = "0x10029EC", VA = "0x10029EC")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x1003780", Offset = "0x1003780", VA = "0x1003780")]
		private void Spawn(Data data)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x1003BAC", Offset = "0x1003BAC", VA = "0x1003BAC")]
		private void OnGrabbed(IGrabbable grabbable, IHand hand)
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x100401C", Offset = "0x100401C", VA = "0x100401C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x1004284", Offset = "0x1004284", VA = "0x1004284")]
		private void Unlink(Data data)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x10032F8", Offset = "0x10032F8", VA = "0x10032F8")]
		private void Clear()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x1003DE0", Offset = "0x1003DE0", VA = "0x1003DE0")]
		private void Activate(Data data, IHand hand)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x1002AF8", Offset = "0x1002AF8", VA = "0x1002AF8")]
		private void UpdateEquippedState()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x1004384", Offset = "0x1004384", VA = "0x1004384")]
		public RackSpawner()
		{
		}
	}
}
namespace Game.Unlockables
{
	[Token(Token = "0x20004BB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DE60", Offset = "0xB5DE60")]
	public class UnlockablePlaytestReward : UnlockablePrefab
	{
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x12290D0", Offset = "0x12290D0", VA = "0x12290D0", Slot = "11")]
		public override bool IsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x1229178", Offset = "0x1229178", VA = "0x1229178", Slot = "9")]
		public override bool Unlock()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x1229248", Offset = "0x1229248", VA = "0x1229248")]
		public UnlockablePlaytestReward()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public abstract class UnlockableWorldSectionBase : MonoBehaviour
	{
		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB6FFD0", Offset = "0xB6FFD0")]
		public UnityEvent m_onUnlocked;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70008", Offset = "0xB70008")]
		public UnityEvent m_onLocked;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70040", Offset = "0xB70040")]
		public UnityEvent m_onDisplayOpenStateImmediately;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70078", Offset = "0xB70078")]
		public UnityEvent m_onShowOpenSequence;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB700B0", Offset = "0xB700B0")]
		public UnityEvent m_onShowCloseSequence;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB700E8", Offset = "0xB700E8")]
		[SerializeField]
		protected Unlockable m_unlockable;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70134", Offset = "0xB70134")]
		public bool m_playerNeedsToSeeOpenSequence;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7016C", Offset = "0xB7016C")]
		public bool m_alwaysDoOpenSequence;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool m_ableToStartOpeningSequence;

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x1229878", Offset = "0x1229878", VA = "0x1229878", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x122987C", Offset = "0x122987C", VA = "0x122987C", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x1229900", Offset = "0x1229900", VA = "0x1229900", Slot = "6")]
		protected virtual void OnUnlocked()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x1229974", Offset = "0x1229974", VA = "0x1229974")]
		public void StartOpenSequenceIfPossible()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x1229A3C", Offset = "0x1229A3C", VA = "0x1229A3C")]
		public void StartExitSequenceIfPossible()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x12299CC", Offset = "0x12299CC", VA = "0x12299CC")]
		protected bool NeedToSeeASequence()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x1229A7C", Offset = "0x1229A7C", VA = "0x1229A7C")]
		protected UnlockableWorldSectionBase()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class UnlockableWorldSectionUnlockable : UnlockableWorldSectionBase
	{
		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Unlockable m_unlockableBeingTracked;

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x1229A94", Offset = "0x1229A94", VA = "0x1229A94", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x1229BBC", Offset = "0x1229BBC", VA = "0x1229BBC", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x1229C40", Offset = "0x1229C40", VA = "0x1229C40", Slot = "6")]
		protected override void OnUnlocked()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x1229CCC", Offset = "0x1229CCC", VA = "0x1229CCC")]
		public UnlockableWorldSectionUnlockable()
		{
		}
	}
}
namespace Game.Structure
{
	[Token(Token = "0x20004BE")]
	public class FreezeEffect : MonoBehaviour
	{
		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_activeGameObjects;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem[] m_particleSystems;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public MaterialLerp m_materialLerp;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isActive;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_velocity;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_current;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_target;

		[Token(Token = "0x170003D4")]
		public bool Active
		{
			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0x10FD498", Offset = "0x10FD498", VA = "0x10FD498")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x10FD4A0", Offset = "0x10FD4A0", VA = "0x10FD4A0")]
			set
			{
			}
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x10FD53C", Offset = "0x10FD53C", VA = "0x10FD53C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x10FD558", Offset = "0x10FD558", VA = "0x10FD558")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x10FD55C", Offset = "0x10FD55C", VA = "0x10FD55C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x10FD578", Offset = "0x10FD578", VA = "0x10FD578")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x10FD594", Offset = "0x10FD594", VA = "0x10FD594")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x10FD6B0", Offset = "0x10FD6B0", VA = "0x10FD6B0")]
		public FreezeEffect()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class GameManagerArcade : GameManagerVR1
	{
		[Token(Token = "0x20004C0")]
		private struct FruitInfo
		{
			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_sliced;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int m_spawned;
		}

		[Serializable]
		[Token(Token = "0x20004C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DEC0", Offset = "0xB5DEC0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<ScoreBonus.BonusData> <>9__46_0;

			[Token(Token = "0x6001B27")]
			[Address(RVA = "0xFCD620", Offset = "0xFCD620", VA = "0xFCD620")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0xFCD628", Offset = "0xFCD628", VA = "0xFCD628")]
			internal int <ModifyScoreBasedOnBonuses>b__46_0(ScoreBonus.BonusData left, ScoreBonus.BonusData right)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB701C4", Offset = "0xB701C4")]
		public FruitConfig m_configTimePeach;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public FruitConfig m_configFrenzy;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public FruitConfig m_configFreeze;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public FruitConfig m_configDouble;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB701FC", Offset = "0xB701FC")]
		public float m_powerBananaEffectLength;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public SoundTrigger m_powerBananaTickSound;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public SoundTrigger m_powerBananaTockSound;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70234", Offset = "0xB70234")]
		public Animator m_doubleBananaUI;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ISound m_doubleSoundEnd;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public TextMeshProUGUI m_doubleBananaScoreText;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public GameObject m_doubleBananaUIParticles;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7026C", Offset = "0xB7026C")]
		public FreezeEffect m_freezeEffect;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public ISound m_freezeSoundEnd;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public ISound m_freezeSoundLoop;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private SoundPlaybackContext m_freezeSoundLoopContext;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB702A4", Offset = "0xB702A4")]
		public ISound m_frenzySoundEnd;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB702DC", Offset = "0xB702DC")]
		public ClassicCross m_doubleDisplay;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public ClassicCross m_freezeDisplay;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public ClassicCross m_frenzyDisplay;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float m_currentPowerBananaTimer;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private int m_currentPowerBananaTickTimer;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool m_isFreezeBananaActive;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
		private bool m_isFrenzyBananaActive;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FA")]
		private bool m_isDoubleBananaActive;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private int m_doubleScoreValue;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private int m_doubleTriggerHash;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private bool m_waitingToFinish;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private GameEventCombo m_cachedComboEvent;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private List<SliceableObjectBase.SliceInfo> m_cachedComboSliceInfo;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private WaveManagerArcade m_waveManagerArcade;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Dictionary<FruitConfig, FruitInfo> m_fruitStatistics;

		[Token(Token = "0x170003D5")]
		public WaveManagerArcade WaveManagerArcade
		{
			[Token(Token = "0x6001B13")]
			[Address(RVA = "0x125FFCC", Offset = "0x125FFCC", VA = "0x125FFCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x125FFD4", Offset = "0x125FFD4", VA = "0x125FFD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x1260074", Offset = "0x1260074", VA = "0x1260074", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x12601D0", Offset = "0x12601D0", VA = "0x12601D0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x126032C", Offset = "0x126032C", VA = "0x126032C", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x1260830", Offset = "0x1260830", VA = "0x1260830", Slot = "7")]
		protected override void UpdateGameTimeRemaining()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x1260A24", Offset = "0x1260A24", VA = "0x1260A24", Slot = "25")]
		protected override void SetupWaveManager()
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x1260B34", Offset = "0x1260B34", VA = "0x1260B34", Slot = "12")]
		protected override void GameOver(GameOverReason reason)
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x1260C0C", Offset = "0x1260C0C", VA = "0x1260C0C")]
		private void OnPowerBananaSliced(FruitConfig config)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x1260EA0", Offset = "0x1260EA0", VA = "0x1260EA0", Slot = "11")]
		protected override void OnFruitLaunched(Fruit fruit)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x1260F54", Offset = "0x1260F54", VA = "0x1260F54", Slot = "10")]
		protected override void OnFruitSliced(Fruit fruit, FruitHalf leftHalf, FruitHalf rightHalf, Fruit.FruitSlicedEvent slicedEvent)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x126111C", Offset = "0x126111C", VA = "0x126111C")]
		private void OnCombo(GameEvent evt)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x126150C", Offset = "0x126150C", VA = "0x126150C", Slot = "22")]
		protected override void ModifyScore(int delta)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x12615A4", Offset = "0x12615A4", VA = "0x12615A4", Slot = "14")]
		protected override BonusCalculationInfo ModifyScoreBasedOnBonuses()
		{
			return null;
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x1261A2C", Offset = "0x1261A2C", VA = "0x1261A2C", Slot = "17")]
		protected override LevelEnd CreateLevelEndEvent(GameLevelsPlayerDataObject.LevelData levelData, GameOverInfo gameOverInfo)
		{
			return null;
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x1260414", Offset = "0x1260414", VA = "0x1260414")]
		private void ResetPowerBananas(bool fromGameOver = false)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x12609FC", Offset = "0x12609FC", VA = "0x12609FC")]
		private bool CanStopWaves()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x1261B90", Offset = "0x1261B90", VA = "0x1261B90", Slot = "24")]
		public override void StartGame(Level level)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x1261C78", Offset = "0x1261C78", VA = "0x1261C78")]
		public GameManagerArcade()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class GameManagerVR1 : GameManager
	{
		[Token(Token = "0x20004C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DED0", Offset = "0xB5DED0")]
		private sealed class <RespawnFruit>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManagerVR1 <>4__this;

			[Token(Token = "0x170003D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B36")]
				[Address(RVA = "0xFCD90C", Offset = "0xFCD90C", VA = "0xFCD90C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B38")]
				[Address(RVA = "0xFCD954", Offset = "0xFCD954", VA = "0xFCD954", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xFCD7D0", Offset = "0xFCD7D0", VA = "0xFCD7D0")]
			[DebuggerHidden]
			public <RespawnFruit>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xFCD7FC", Offset = "0xFCD7FC", VA = "0xFCD7FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B35")]
			[Address(RVA = "0xFCD800", Offset = "0xFCD800", VA = "0xFCD800", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B37")]
			[Address(RVA = "0xFCD914", Offset = "0xFCD914", VA = "0xFCD914", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5DEE0", Offset = "0xB5DEE0")]
		private sealed class <InitiateEndSequence>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameManagerVR1 <>4__this;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameEventGameOver gameEventGameOver;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool wasLevelComplete;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public BonusCalculationInfo bonusCalculationInfo;

			[Token(Token = "0x170003D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B3C")]
				[Address(RVA = "0xFCD780", Offset = "0xFCD780", VA = "0xFCD780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B3E")]
				[Address(RVA = "0xFCD7C8", Offset = "0xFCD7C8", VA = "0xFCD7C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xFCD650", Offset = "0xFCD650", VA = "0xFCD650")]
			[DebuggerHidden]
			public <InitiateEndSequence>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0xFCD67C", Offset = "0xFCD67C", VA = "0xFCD67C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0xFCD680", Offset = "0xFCD680", VA = "0xFCD680", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0xFCD788", Offset = "0xFCD788", VA = "0xFCD788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70314", Offset = "0xB70314")]
		public SimpleSpawner m_startFruitSpawner;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float m_endGameDelaySpawnStartFruit;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		protected bool m_isRestarting;

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x1260138", Offset = "0x1260138", VA = "0x1260138", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x1260294", Offset = "0x1260294", VA = "0x1260294", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x1261C70", Offset = "0x1261C70", VA = "0x1261C70", Slot = "24")]
		public override void StartGame(Level level)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x1262788", Offset = "0x1262788", VA = "0x1262788", Slot = "19")]
		public override void QuitGame()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x12627F4", Offset = "0x12627F4", VA = "0x12627F4", Slot = "20")]
		public override void RestartGame()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x1262800", Offset = "0x1262800", VA = "0x1262800", Slot = "27")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82598", Offset = "0xB82598")]
		protected virtual IEnumerator RespawnFruit()
		{
			return null;
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x1262878", Offset = "0x1262878", VA = "0x1262878", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB825F8", Offset = "0xB825F8")]
		protected override IEnumerator InitiateEndSequence(GameEventGameOver gameEventGameOver, bool wasLevelComplete, BonusCalculationInfo bonusCalculationInfo)
		{
			return null;
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x1262934", Offset = "0x1262934", VA = "0x1262934", Slot = "13")]
		protected override void GameOverSequenceDone(bool completed)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x1261D00", Offset = "0x1261D00", VA = "0x1261D00")]
		public GameManagerVR1()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1262A24", Offset = "0x1262A24", VA = "0x1262A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82658", Offset = "0xB82658")]
		[DebuggerHidden]
		private IEnumerator <>n__0(GameEventGameOver gameEventGameOver, bool wasLevelComplete, BonusCalculationInfo bonusCalculationInfo)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C5")]
	public class GameManagerZen : GameManagerVR1
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public FruitConfig m_configTimePeach;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool m_waitingToFinish;

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x1262A2C", Offset = "0x1262A2C", VA = "0x1262A2C", Slot = "10")]
		protected override void OnFruitSliced(Fruit fruit, FruitHalf leftHalf, FruitHalf rightHalf, Fruit.FruitSlicedEvent slicedEvent)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x1262AE0", Offset = "0x1262AE0", VA = "0x1262AE0", Slot = "7")]
		protected override void UpdateGameTimeRemaining()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x1262C88", Offset = "0x1262C88", VA = "0x1262C88")]
		public GameManagerZen()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public sealed class LevelGrabbableSetUp : MonoBehaviour
	{
		[Token(Token = "0x20004C7")]
		private class GrabbableHandAssignment
		{
			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Grabbable m_grabbable;

			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GrabbableAssignmentConfigBase.HandAssignment m_handAssignment;

			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xFD8988", Offset = "0xFD8988", VA = "0xFD8988")]
			public GrabbableHandAssignment()
			{
			}
		}

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7034C", Offset = "0xB7034C")]
		[SerializeField]
		private float m_startGameAssigningDelay;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_resumeGameAssigningDelay;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_gameOverRemovingDelay;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_gamePausedRemovingDelay;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_alwaysKeepGrabbableOnGameOver;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<GrabbableHandAssignment> m_grabbableHandAssignments;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IHand m_handFulfillingLeftAssignment;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IHand m_handFulfillingRightAssignment;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_waitingForDelay;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action<Level, bool> m_onDelayComplete;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_waitDelayTime;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Level m_levelAssignment;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_setDueToPause;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GrabbableHandAssignment m_rightHandPaused;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GrabbableHandAssignment m_leftHandPaused;

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x10BE680", Offset = "0x10BE680", VA = "0x10BE680")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x10BE834", Offset = "0x10BE834", VA = "0x10BE834")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x10BE9F0", Offset = "0x10BE9F0", VA = "0x10BE9F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x10BEA84", Offset = "0x10BEA84", VA = "0x10BEA84")]
		private void OnGameCountDownStarted(GameEvent gameEvent)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x10BEBF8", Offset = "0x10BEBF8", VA = "0x10BEBF8")]
		private void OnGameOver(GameEvent gameEvent)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x10BF904", Offset = "0x10BF904", VA = "0x10BF904")]
		private void OnGamePaused(GameEvent gameEvent)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x10BFA9C", Offset = "0x10BFA9C", VA = "0x10BFA9C")]
		private void OnGameResuming(GameEvent gameEvent)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x10BFBDC", Offset = "0x10BFBDC", VA = "0x10BFBDC")]
		private void AssignGrabbables(Level level, bool dueToPausing)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x10C12B4", Offset = "0x10C12B4", VA = "0x10C12B4")]
		private void EvaluateIfHandFulfillAnyHandAssignment(IHand hand, GrabbableAssignmentConfigBase.HandAssignment leftHandAssignment, GrabbableAssignmentConfigBase.HandAssignment rightHandAssignment)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x10BEED4", Offset = "0x10BEED4", VA = "0x10BEED4")]
		private void RemoveGrabbables(Level level, bool duToPausing)
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x10C03E4", Offset = "0x10C03E4", VA = "0x10C03E4")]
		private void SetCorrectGrabbableToHand(GrabbableAssignmentConfigBase.HandAssignment handAssignment, IHand hand, bool duToPausing)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x10C170C", Offset = "0x10C170C", VA = "0x10C170C")]
		private void RemoveGrabbable(GrabbableHandAssignment grabbableHandAssignment, bool dueToPausing)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x10BEBA0", Offset = "0x10BEBA0", VA = "0x10BEBA0")]
		private void StartWaitingForDelay(float delay, Action<Level, bool> onDelayComplete, Level levelArgument, bool dueToPause)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x10C1A04", Offset = "0x10C1A04", VA = "0x10C1A04")]
		private void SpawnParticleIfNotNull(GrabbableAssignmentConfigBase.HandAssignment handAssignment, Transform grabbableTransform)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x10BEE34", Offset = "0x10BEE34", VA = "0x10BEE34")]
		private void RecycleOrDestroyGrabbable(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x10C1B70", Offset = "0x10C1B70", VA = "0x10C1B70")]
		public LevelGrabbableSetUp()
		{
		}
	}
}
namespace Game.Structure.Arcade
{
	[Serializable]
	[Token(Token = "0x20004C8")]
	public class ArcadeScoreBonusDefault : ScoreBonus
	{
		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xFA8F48", Offset = "0xFA8F48", VA = "0xFA8F48", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xFA8F4C", Offset = "0xFA8F4C", VA = "0xFA8F4C", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xFA8E34", Offset = "0xFA8E34", VA = "0xFA8E34", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xFA8F40", Offset = "0xFA8F40", VA = "0xFA8F40")]
		public ArcadeScoreBonusDefault()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C9")]
	public class ArcadeScoreBonusNoFruitDropped : ScoreBonus
	{
		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_success;

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xFA9EF4", Offset = "0xFA9EF4", VA = "0xFA9EF4", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xFA9FB8", Offset = "0xFA9FB8", VA = "0xFA9FB8", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xFAA074", Offset = "0xFAA074", VA = "0xFAA074", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xFAA190", Offset = "0xFAA190", VA = "0xFAA190")]
		private void OnFruitGrounded(Fruit fruit)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xFAA254", Offset = "0xFAA254", VA = "0xFAA254")]
		public ArcadeScoreBonusNoFruitDropped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CA")]
	public class ArcadeScoreBonusOneTypeFruit : ScoreBonus
	{
		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FruitConfig m_fruitConfig;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_success;

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xFAA264", Offset = "0xFAA264", VA = "0xFAA264", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xFAA324", Offset = "0xFAA324", VA = "0xFAA324", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xFAA3E0", Offset = "0xFAA3E0", VA = "0xFAA3E0", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xFAA4FC", Offset = "0xFAA4FC", VA = "0xFAA4FC")]
		private void OnFruitSliced(Fruit fruit, FruitHalf leftHalf, FruitHalf rightHalf, Fruit.FruitSlicedEvent slicedEvent)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xFAA61C", Offset = "0xFAA61C", VA = "0xFAA61C")]
		public ArcadeScoreBonusOneTypeFruit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CB")]
	public class ArcadeScoreBonusFirstAndLast : ScoreBonus
	{
		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FruitConfig m_firstConfig;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FruitConfig m_lastConfig;

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xFA912C", Offset = "0xFA912C", VA = "0xFA912C", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xFA9208", Offset = "0xFA9208", VA = "0xFA9208", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xFA92C4", Offset = "0xFA92C4", VA = "0xFA92C4", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xFA9518", Offset = "0xFA9518", VA = "0xFA9518")]
		private void OnFruitSliced(Fruit fruit, FruitHalf leftHalf, FruitHalf rightHalf, Fruit.FruitSlicedEvent slicedEvent)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xFA95BC", Offset = "0xFA95BC", VA = "0xFA95BC")]
		public ArcadeScoreBonusFirstAndLast()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CC")]
	public class ArcadeScoreBonusFinalScore : ArcadeScoreBonusDefault
	{
		[Serializable]
		[Token(Token = "0x20004CD")]
		public class Rule
		{
			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_bonus;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizedString m_bonusText;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70410", Offset = "0xB70410")]
			public Sprite m_icon;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70448", Offset = "0xB70448")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70448", Offset = "0xB70448")]
			public int m_minScore;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB704A8", Offset = "0xB704A8")]
			public int m_modulo;

			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xF8BE0C", Offset = "0xF8BE0C", VA = "0xF8BE0C")]
			public Rule()
			{
			}
		}

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB703D8", Offset = "0xB703D8")]
		public Rule[] m_rules;

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xFA8F50", Offset = "0xFA8F50", VA = "0xFA8F50", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xFA8F54", Offset = "0xFA8F54", VA = "0xFA8F54", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xFA8F58", Offset = "0xFA8F58", VA = "0xFA8F58", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xFA9124", Offset = "0xFA9124", VA = "0xFA9124")]
		public ArcadeScoreBonusFinalScore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CE")]
	public class ArcadeScoreBonusComboBonus : ArcadeScoreBonusDefault
	{
		[Serializable]
		[Token(Token = "0x20004CF")]
		public class Rule
		{
			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_bonus;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizedString m_bonusText;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70518", Offset = "0xB70518")]
			public Sprite m_icon;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70550", Offset = "0xB70550")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70550", Offset = "0xB70550")]
			public Utils.Operator m_operator;

			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int m_value;

			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xF8BE04", Offset = "0xF8BE04", VA = "0xF8BE04")]
			public Rule()
			{
			}
		}

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB704E0", Offset = "0xB704E0")]
		public Rule[] m_rules;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_numCombos;

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xFA8A7C", Offset = "0xFA8A7C", VA = "0xFA8A7C", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xFA8B34", Offset = "0xFA8B34", VA = "0xFA8B34", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xFA8BE8", Offset = "0xFA8BE8", VA = "0xFA8BE8", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xFA8F28", Offset = "0xFA8F28", VA = "0xFA8F28", Slot = "7")]
		protected virtual void OnCombo(GameEvent evt)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xFA8F38", Offset = "0xFA8F38", VA = "0xFA8F38")]
		public ArcadeScoreBonusComboBonus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D0")]
	public class ArcadeScoreBonusBombsHit : ScoreBonus
	{
		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB705B0", Offset = "0xB705B0")]
		public Utils.Operator m_operator;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int m_value;

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xFA88B8", Offset = "0xFA88B8", VA = "0xFA88B8", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xFA88BC", Offset = "0xFA88BC", VA = "0xFA88BC", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xFA88C0", Offset = "0xFA88C0", VA = "0xFA88C0", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xFA8A74", Offset = "0xFA8A74", VA = "0xFA8A74")]
		public ArcadeScoreBonusBombsHit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D1")]
	public class ArcadeScoreBonusHighestCombo : ArcadeScoreBonusDefault
	{
		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB705E8", Offset = "0xB705E8")]
		public ArcadeScoreBonusComboBonus.Rule[] m_rules;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_highestCombo;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xFA9A30", Offset = "0xFA9A30", VA = "0xFA9A30", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xFA9AE8", Offset = "0xFA9AE8", VA = "0xFA9AE8", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xFA9B9C", Offset = "0xFA9B9C", VA = "0xFA9B9C", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xFA9E4C", Offset = "0xFA9E4C", VA = "0xFA9E4C", Slot = "7")]
		protected virtual void OnCombo(GameEvent evt)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xFA9EEC", Offset = "0xFA9EEC", VA = "0xFA9EEC")]
		public ArcadeScoreBonusHighestCombo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D2")]
	public class ArcadeScoreBonusFruitSliced : ArcadeScoreBonusDefault
	{
		[Serializable]
		[Token(Token = "0x20004D3")]
		public class RuleCondition
		{
			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FruitConfig m_config;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Utils.Operator m_operator;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int m_value;

			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0xF8BFC0", Offset = "0xF8BFC0", VA = "0xF8BFC0")]
			public RuleCondition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D4")]
		public class Rule
		{
			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_bonus;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizedString m_bonusText;

			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70658", Offset = "0xB70658")]
			public Sprite m_icon;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public RuleCondition[] m_conditions;

			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xF8BE1C", Offset = "0xF8BE1C", VA = "0xF8BE1C")]
			public bool Evaluate(Dictionary<FruitConfig, int> sliced)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B81")]
			[Address(RVA = "0xF8BFB8", Offset = "0xF8BFB8", VA = "0xF8BFB8")]
			public Rule()
			{
			}
		}

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70620", Offset = "0xB70620")]
		public Rule[] m_rules;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<FruitConfig, int> m_sliced;

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xFA95C4", Offset = "0xFA95C4", VA = "0xFA95C4", Slot = "4")]
		public override void StartTracking()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xFA96CC", Offset = "0xFA96CC", VA = "0xFA96CC", Slot = "5")]
		public override void EndTracking()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xFA9788", Offset = "0xFA9788", VA = "0xFA9788", Slot = "6")]
		public override BonusData GetScoreBonus(GameManager game)
		{
			return null;
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xFA9944", Offset = "0xFA9944", VA = "0xFA9944")]
		private void OnFruitSliced(Fruit fruit, FruitHalf left, FruitHalf right, Fruit.FruitSlicedEvent evt)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xFA9A28", Offset = "0xFA9A28", VA = "0xFA9A28")]
		public ArcadeScoreBonusFruitSliced()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class ComboBlitzManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D6")]
		public struct BlitzTier
		{
			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ComboBlitzTier m_comboBlitzTierConfig;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UnityEvent m_onTierAchieved;
		}

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_comboTotalRequiredToBlitz;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_comboBlitzTimeWindow;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_comboEffectOffset;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<BlitzTier> m_comboBlitzTiers;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent m_onComboBlitzEnd;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_currentBlitzTier;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_blitzTimeWindowTimer;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_timeWindowActive;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_currentComboCount;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PooledObject m_tierEffect;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_playerHeadTransform;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameManagerArcade m_gameManagerArcade;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_hasAssignedBlades;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IHand m_leftHand;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IHand m_rightHand;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Blade m_leftBlade;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Blade m_rightBlade;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB70690", Offset = "0xB70690")]
		private static ComboBlitzManager <Instance>k__BackingField;

		[Token(Token = "0x170003DA")]
		public bool ComboBlitzActive
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0x11A77DC", Offset = "0x11A77DC", VA = "0x11A77DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DB")]
		private BlitzTier CurrentTier
		{
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x11A77EC", Offset = "0x11A77EC", VA = "0x11A77EC")]
			get
			{
				return default(BlitzTier);
			}
		}

		[Token(Token = "0x170003DC")]
		public static ComboBlitzManager Instance
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x11A7858", Offset = "0x11A7858", VA = "0x11A7858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82730", Offset = "0xB82730")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x11A78BC", Offset = "0x11A78BC", VA = "0x11A78BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82740", Offset = "0xB82740")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x11A7928", Offset = "0x11A7928", VA = "0x11A7928")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x11A7E2C", Offset = "0x11A7E2C", VA = "0x11A7E2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x11A7F74", Offset = "0x11A7F74", VA = "0x11A7F74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x11A8074", Offset = "0x11A8074", VA = "0x11A8074")]
		private void UpgradeBlitz()
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x11A7F78", Offset = "0x11A7F78", VA = "0x11A7F78")]
		private void UpdateTimeWindow()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x11A8320", Offset = "0x11A8320", VA = "0x11A8320")]
		private void RestartTimeWindow()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x11A7B48", Offset = "0x11A7B48", VA = "0x11A7B48")]
		private void AttemptToAssignBlades()
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x11A7ED8", Offset = "0x11A7ED8", VA = "0x11A7ED8")]
		public void ResetBlitz()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x11A8334", Offset = "0x11A8334", VA = "0x11A8334")]
		public void OnCombo(int comboSize)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x11A83C0", Offset = "0x11A83C0", VA = "0x11A83C0")]
		public ComboBlitzManager()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DEF0", Offset = "0xB5DEF0")]
	public class ComboBlitzTier : ScriptableObject
	{
		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString m_tierName;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_tierScoreReward;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PooledObject m_tierEffect;

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x11A8548", Offset = "0x11A8548", VA = "0x11A8548")]
		public ComboBlitzTier()
		{
		}
	}
}
namespace FNVR2
{
	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DF50", Offset = "0xB5DF50")]
	public class DitherValues : SingletonScriptableObject<DitherValues>
	{
		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB706A0", Offset = "0xB706A0")]
		[SerializeField]
		private float m_invaderDitherMinDistance;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_invaderDitherFallOff;

		[Token(Token = "0x170003DD")]
		public float InvaderDitherMinDistance
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0x10F1DF8", Offset = "0x10F1DF8", VA = "0x10F1DF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DE")]
		public float InvaderDitherFallOff
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x10F1E00", Offset = "0x10F1E00", VA = "0x10F1E00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x10F1E08", Offset = "0x10F1E08", VA = "0x10F1E08")]
		public DitherValues()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5DFB0", Offset = "0xB5DFB0")]
	public class Faction : ScriptableObject
	{
		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_name;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color m_mainColor;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color m_secondaryColor;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite m_emblem;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 m_emblemOffset;

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x10F899C", Offset = "0x10F899C", VA = "0x10F899C")]
		public Faction()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public abstract class AssetsHolder<T> : MonoBehaviour where T : class
	{
		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB706FC", Offset = "0xB706FC")]
		private static AssetsHolder<T> <Instance>k__BackingField;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7070C", Offset = "0xB7070C")]
		private Dictionary<T, int> <Map>k__BackingField;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T[] m_assets;

		[Token(Token = "0x170003DF")]
		public static AssetsHolder<T> Instance
		{
			[Token(Token = "0x6001B96")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82750", Offset = "0xB82750")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B97")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82760", Offset = "0xB82760")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E0")]
		public T[] Assets
		{
			[Token(Token = "0x6001B98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		public Dictionary<T, int> Map
		{
			[Token(Token = "0x6001B99")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82770", Offset = "0xB82770")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B9A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82780", Offset = "0xB82780")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B9B")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B9D")]
		private void Initialise()
		{
		}

		[Token(Token = "0x6001B9E")]
		public int IndexOf(T asset)
		{
			return default(int);
		}

		[Token(Token = "0x6001B9F")]
		public bool TryGet(int index, out T asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA0")]
		public T Get(int index)
		{
			return null;
		}

		[Token(Token = "0x6001BA1")]
		public T Random()
		{
			return null;
		}

		[Token(Token = "0x6001BA2")]
		public bool TryGetRandom(out T asset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA3")]
		public bool TryGetRandomIndex(out int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA4")]
		protected AssetsHolder()
		{
		}
	}
}
namespace FNVR2.UI
{
	[Token(Token = "0x20004DB")]
	public class CustomRectMask2D : RectMask2D
	{
		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Canvas m_assignedCanvas;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_foundCanvas;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool m_performClippingEnabled;

		[Token(Token = "0x170003E2")]
		public bool PerformClippingEnabled
		{
			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0x108BCBC", Offset = "0x108BCBC", VA = "0x108BCBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0x108BCC4", Offset = "0x108BCC4", VA = "0x108BCC4")]
			set
			{
			}
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x108BCD0", Offset = "0x108BCD0", VA = "0x108BCD0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x108BDB0", Offset = "0x108BDB0", VA = "0x108BDB0", Slot = "20")]
		public override void PerformClipping()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x108BE08", Offset = "0x108BE08", VA = "0x108BE08")]
		public void SetNewCanvas(Canvas newCanvas)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x108BEA0", Offset = "0x108BEA0", VA = "0x108BEA0")]
		public CustomRectMask2D()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class InvertedToggleEvent : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004DD")]
		public class UnityEventBool : UnityEvent<bool>
		{
			[Token(Token = "0x6001BB0")]
			[Address(RVA = "0xFD526C", Offset = "0xFD526C", VA = "0xFD526C")]
			public UnityEventBool()
			{
			}
		}

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEventBool m_onValueChangedInverse;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle m_toggle;

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x100EA00", Offset = "0x100EA00", VA = "0x100EA00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x100EA50", Offset = "0x100EA50", VA = "0x100EA50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x100ED68", Offset = "0x100ED68", VA = "0x100ED68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x100EE80", Offset = "0x100EE80", VA = "0x100EE80")]
		private void OnValueChange(bool value)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x100EEE8", Offset = "0x100EEE8", VA = "0x100EEE8")]
		public InvertedToggleEvent()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class LeaderboardEntryDisplay : MonoBehaviour
	{
		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7073C", Offset = "0xB7073C")]
		[SerializeField]
		private Image m_backingImage;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_nameText;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_rankText;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI m_scoreText;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RawImage m_avatarImage;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AutoRotate m_loadingSpinner;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Texture2D m_defaultAvatar;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB707E8", Offset = "0xB707E8")]
		[SerializeField]
		private Color m_standardBackingColor;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_alternatingBackingColor;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string m_userId;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, Texture2D> s_cachedAvatarImages;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Queue<string> s_cachedImagesKeys;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Texture2D s_activeUserAvatarTexture;

		[Token(Token = "0x4001DF0")]
		private const int MaxAvatarTexturesCached = 50;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PooledObject m_pooledObject;

		[Token(Token = "0x170003E3")]
		public PooledObject PooledObject
		{
			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0x10BD1D8", Offset = "0x10BD1D8", VA = "0x10BD1D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x10BD1E0", Offset = "0x10BD1E0", VA = "0x10BD1E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x10BD230", Offset = "0x10BD230", VA = "0x10BD230")]
		public void SetUp(LeaderboardBase.LeaderboardEntry leaderboardEntry, int index)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x10BD33C", Offset = "0x10BD33C", VA = "0x10BD33C")]
		public void SetDummyActiveUser(int index)
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x10BD50C", Offset = "0x10BD50C", VA = "0x10BD50C")]
		public void LoadAvatarImage()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x10BD734", Offset = "0x10BD734", VA = "0x10BD734")]
		private static Texture2D TryGetAvatarTexture(string userId)
		{
			return null;
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x10BD890", Offset = "0x10BD890", VA = "0x10BD890")]
		private static void CacheAvatarTexture(string userId, Texture2D texture)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x10BDB34", Offset = "0x10BDB34", VA = "0x10BDB34")]
		private void GotAvatarImage(Texture2D texture2D)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x10BDC24", Offset = "0x10BDC24", VA = "0x10BDC24")]
		public LeaderboardEntryDisplay()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class LevelSelectLeaderboardDisplay : MonoBehaviour
	{
		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E010", Offset = "0xB5E010")]
		private sealed class <LoadAllAvatarImages>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelSelectLeaderboardDisplay <>4__this;

			[Token(Token = "0x170003E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD1")]
				[Address(RVA = "0xFD951C", Offset = "0xFD951C", VA = "0xFD951C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD3")]
				[Address(RVA = "0xFD9564", Offset = "0xFD9564", VA = "0xFD9564", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xFD9424", Offset = "0xFD9424", VA = "0xFD9424")]
			[DebuggerHidden]
			public <LoadAllAvatarImages>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xFD9450", Offset = "0xFD9450", VA = "0xFD9450", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0xFD9454", Offset = "0xFD9454", VA = "0xFD9454", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0xFD9524", Offset = "0xFD9524", VA = "0xFD9524", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70844", Offset = "0xB70844")]
		[SerializeField]
		private Transform m_topScoresParent;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VerticalLayoutGroup m_topScoreLayout;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB708A0", Offset = "0xB708A0")]
		[SerializeField]
		private Transform m_scoresAroundUserParent;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VerticalLayoutGroup m_aroundUserLayout;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB708FC", Offset = "0xB708FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB708FC", Offset = "0xB708FC")]
		private string m_leaderboardID;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameManager m_gameManager;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70968", Offset = "0xB70968")]
		[SerializeField]
		private LeaderboardEntryDisplay m_leaderboardEntryDisplayPrefab;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LeaderboardEntryDisplay m_leaderboardEntryDisplayActivePlayerPrefab;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PooledObject m_lineSeparator;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB709D4", Offset = "0xB709D4")]
		[SerializeField]
		private GameObject m_loadingPage;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle m_aroundUserToggle;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_failedText;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70A40", Offset = "0xB70A40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70A40", Offset = "0xB70A40")]
		private RangedInt m_globalLeaderboardRange;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70AB0", Offset = "0xB70AB0")]
		[SerializeField]
		private RangedInt m_aroundActiveUserRange;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70AFC", Offset = "0xB70AFC")]
		[SerializeField]
		private int m_entriesAmount;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70B48", Offset = "0xB70B48")]
		[SerializeField]
		private int m_entriesToGrabAboveCurrentUser;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB70B94", Offset = "0xB70B94")]
		[SerializeField]
		private int m_entriesToGrabBelowCurrentUser;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool m_updateOnLeaderboardsSubmitted;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LeaderboardBase m_globalLeaderboard;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private LeaderboardBase m_globalAroundUserLeaderboard;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_globalLeaderboardFailed;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_globalAroundUserLeaderboardFailed;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		private bool m_retrievingLeaderboards;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string m_levelId;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_downloadingAttempts;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly Queue<LeaderboardEntryDisplay> m_leaderboardEntryDisplays;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine m_loadAvatarImageCoroutine;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_loadAvatarsOnEnable;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private LODCanvas m_lodCanvas;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly Stack<PooledObject> m_objectsToRecycle;

		[Token(Token = "0x4001E10")]
		private const int MaxDownloadAttempts = 5;

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x10C33E8", Offset = "0x10C33E8", VA = "0x10C33E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x10C34DC", Offset = "0x10C34DC", VA = "0x10C34DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x10C36FC", Offset = "0x10C36FC", VA = "0x10C36FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x10C37FC", Offset = "0x10C37FC", VA = "0x10C37FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x10C3968", Offset = "0x10C3968", VA = "0x10C3968")]
		private void OnPingResultReceived(bool isConnected)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x10C39FC", Offset = "0x10C39FC", VA = "0x10C39FC")]
		private void OnLODCanvasStateChanged(bool active)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x10C3D80", Offset = "0x10C3D80", VA = "0x10C3D80")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x10C3E04", Offset = "0x10C3E04", VA = "0x10C3E04")]
		private void OnLevelSelected(GameEvent evt)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x10C3F9C", Offset = "0x10C3F9C", VA = "0x10C3F9C")]
		private void OnLeaderboardsScoreSubmitted(GameEvent evt)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x10C36F4", Offset = "0x10C36F4", VA = "0x10C36F4")]
		private void UpdateLeaderboards(string levelId)
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x10C4064", Offset = "0x10C4064", VA = "0x10C4064")]
		private void DownloadLeaderboards(string levelId)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x10C44F4", Offset = "0x10C44F4", VA = "0x10C44F4")]
		private void OnGlobalLeaderboardDownloaded(bool failed, LeaderboardBase leaderboard)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x10C4AC0", Offset = "0x10C4AC0", VA = "0x10C4AC0")]
		private void OnGlobalAroundUserLeaderboardDownloaded(bool failed, LeaderboardBase leaderboard)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x10C4578", Offset = "0x10C4578", VA = "0x10C4578")]
		private void DisplayLeaderboards()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x10C4B44", Offset = "0x10C4B44", VA = "0x10C4B44")]
		private void DisplayLeaderboard(bool needToShowLineSeparator, bool createEmptyPlayer, Transform parent, List<LeaderboardBase.LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x10C3D08", Offset = "0x10C3D08", VA = "0x10C3D08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82790", Offset = "0xB82790")]
		private IEnumerator LoadAllAvatarImages()
		{
			return null;
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x10C59C4", Offset = "0x10C59C4", VA = "0x10C59C4")]
		private void ResetTransformMatrix(Transform _transform)
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x10C578C", Offset = "0x10C578C", VA = "0x10C578C")]
		private void SetEntriesLayout()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x10C5A30", Offset = "0x10C5A30", VA = "0x10C5A30")]
		public LevelSelectLeaderboardDisplay()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public class ScrollRectScroller : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E020", Offset = "0xB5E020")]
		private sealed class <StartScroll>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScrollRectScroller <>4__this;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int childIndex;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private RectTransform <child>5__2;

			[Token(Token = "0x170003E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE1")]
				[Address(RVA = "0xFE2678", Offset = "0xFE2678", VA = "0xFE2678", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE3")]
				[Address(RVA = "0xFE26C0", Offset = "0xFE26C0", VA = "0xFE26C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xFE2450", Offset = "0xFE2450", VA = "0xFE2450")]
			[DebuggerHidden]
			public <StartScroll>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xFE247C", Offset = "0xFE247C", VA = "0xFE247C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xFE2480", Offset = "0xFE2480", VA = "0xFE2480", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0xFE2680", Offset = "0xFE2680", VA = "0xFE2680", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E030", Offset = "0xB5E030")]
		private sealed class <StartScroll>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScrollRectScroller <>4__this;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RectTransform child;

			[Token(Token = "0x170003E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE7")]
				[Address(RVA = "0xFE2844", Offset = "0xFE2844", VA = "0xFE2844", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE9")]
				[Address(RVA = "0xFE288C", Offset = "0xFE288C", VA = "0xFE288C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xFE26C8", Offset = "0xFE26C8", VA = "0xFE26C8")]
			[DebuggerHidden]
			public <StartScroll>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xFE26F4", Offset = "0xFE26F4", VA = "0xFE26F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xFE26F8", Offset = "0xFE26F8", VA = "0xFE26F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0xFE284C", Offset = "0xFE284C", VA = "0xFE284C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScrollRect m_scrollRect;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform m_contentRoot;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_scrollSpeed;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Ease m_tweenEase;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_scrollDelay;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_queueScrollIfDisabled;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool m_useSimpleMethod;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween m_scrollTween;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isScrollQueued;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_queuedScrollIndex;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RectTransform m_queuedScrollChild;

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x13D070C", Offset = "0x13D070C", VA = "0x13D070C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x13D0884", Offset = "0x13D0884", VA = "0x13D0884")]
		public void StopScroll()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x13D0820", Offset = "0x13D0820", VA = "0x13D0820")]
		public void ScrollToChild(int childIndex)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x13D07A8", Offset = "0x13D07A8", VA = "0x13D07A8")]
		public void ScrollToChild(RectTransform child)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x13D089C", Offset = "0x13D089C", VA = "0x13D089C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82840", Offset = "0xB82840")]
		private IEnumerator StartScroll(int childIndex)
		{
			return null;
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x13D0924", Offset = "0x13D0924", VA = "0x13D0924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB828A0", Offset = "0xB828A0")]
		private IEnumerator StartScroll(RectTransform child)
		{
			return null;
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x13D09B8", Offset = "0x13D09B8", VA = "0x13D09B8")]
		private void DoScroll(RectTransform targetElement)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x13D0C60", Offset = "0x13D0C60", VA = "0x13D0C60")]
		private void StartTween(float targetNormalisedPos)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x13D0CFC", Offset = "0x13D0CFC", VA = "0x13D0CFC", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x13D0D14", Offset = "0x13D0D14", VA = "0x13D0D14")]
		public ScrollRectScroller()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class ShootableUI : MonoBehaviour
	{
		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Button m_button;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle m_toggle;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnalyticsUIInteraction m_analyticsUIInteraction;

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xF03228", Offset = "0xF03228", VA = "0xF03228")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xF03544", Offset = "0xF03544", VA = "0xF03544")]
		public void ShootUI()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xF03674", Offset = "0xF03674", VA = "0xF03674")]
		public ShootableUI()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public static class TextMeshProCustomExtensions
	{
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x15D555C", Offset = "0x15D555C", VA = "0x15D555C")]
		public static void CallAwakeOnAllTMPCustomChildren(this UnityEngine.Behaviour behaviour)
		{
		}
	}
	[Token(Token = "0x20004E6")]
	public class TouchableUI : MonoBehaviour
	{
		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_name;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerInputBase.VibrationSettingsCurve m_touchVibration;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Button m_button;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Toggle m_toggle;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool m_doneTouch;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		protected bool m_doingTouch;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string m_screenName;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool m_interactOnTouch;

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x15D7D38", Offset = "0x15D7D38", VA = "0x15D7D38", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x15D7E28", Offset = "0x15D7E28", VA = "0x15D7E28", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x15D815C", Offset = "0x15D815C", VA = "0x15D815C", Slot = "6")]
		public virtual void TouchUI(IHand handTouched, bool forceInteracted = false)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x15D8178", Offset = "0x15D8178", VA = "0x15D8178", Slot = "7")]
		public virtual void StayInUI(IHand handIn)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x15D81B8", Offset = "0x15D81B8", VA = "0x15D81B8", Slot = "8")]
		public virtual void ReleaseUI(IHand handReleased)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x15D81C0", Offset = "0x15D81C0", VA = "0x15D81C0", Slot = "9")]
		protected virtual void InteractWithUI(IHand handTouched, bool forceInteracted = false)
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x15D84C0", Offset = "0x15D84C0", VA = "0x15D84C0")]
		public TouchableUI()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5E050", Offset = "0xB5E050")]
	public class UICanvas : MonoBehaviour
	{
		[Token(Token = "0x20004E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E0B0", Offset = "0xB5E0B0")]
		private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UICanvas <>4__this;

			[Token(Token = "0x170003EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BFA")]
				[Address(RVA = "0x1B8B958", Offset = "0x1B8B958", VA = "0x1B8B958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BFC")]
				[Address(RVA = "0x1B8B9A0", Offset = "0x1B8B9A0", VA = "0x1B8B9A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x1B8B72C", Offset = "0x1B8B72C", VA = "0x1B8B72C")]
			[DebuggerHidden]
			public <Start>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0x1B8B758", Offset = "0x1B8B758", VA = "0x1B8B758", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0x1B8B75C", Offset = "0x1B8B75C", VA = "0x1B8B75C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x1B8B960", Offset = "0x1B8B960", VA = "0x1B8B960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x115DF7C", Offset = "0x115DF7C", VA = "0x115DF7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB829B0", Offset = "0xB829B0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x115DFF4", Offset = "0x115DFF4", VA = "0x115DFF4")]
		public UICanvas()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class UIEndGameSequence : MonoBehaviour, ILocalizeCallback
	{
		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E0C0", Offset = "0xB5E0C0")]
		private sealed class <DoSequence>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIEndGameSequence <>4__this;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager.GameOverInfo gameOverInfo;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Action<bool> onComplete;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private GradingConfig.GradeBand <grade>5__2;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Vector3 <position>5__3;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<UIScoreBonus>.Enumerator <>7__wrap3;

			[Token(Token = "0x170003EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C0A")]
				[Address(RVA = "0x1B8C6D8", Offset = "0x1B8C6D8", VA = "0x1B8C6D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C0C")]
				[Address(RVA = "0x1B8C720", Offset = "0x1B8C720", VA = "0x1B8C720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C06")]
			[Address(RVA = "0x1B8B9A8", Offset = "0x1B8B9A8", VA = "0x1B8B9A8")]
			[DebuggerHidden]
			public <DoSequence>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001C07")]
			[Address(RVA = "0x1B8B9D4", Offset = "0x1B8B9D4", VA = "0x1B8B9D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C08")]
			[Address(RVA = "0x1B8BA54", Offset = "0x1B8BA54", VA = "0x1B8BA54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C09")]
			[Address(RVA = "0x1B8BA00", Offset = "0x1B8BA00", VA = "0x1B8BA00")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0x1B8C6E0", Offset = "0x1B8C6E0", VA = "0x1B8C6E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelRewardUIManager m_rewardUIManager;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScoreBonus m_scoreBonusPrefab;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_bonusParent;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_finalScore;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI m_finalScoreText;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] m_enablePostSequence;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI m_gradeText;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LocalizedString m_slicedFruitString;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI m_fruitSlicedText;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ISound m_scoreBonusSound;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70BF0", Offset = "0xB70BF0")]
		public float m_waitTimeAfterBarFill;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float m_gradeRevealWaitTime;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_animDelay;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int m_cachedBonusesAmount;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Level m_level;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected readonly Stack<UIScoreBonus> m_cachedBonuses;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected readonly List<UIScoreBonus> m_activeBonuses;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Action<bool> m_onComplete;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected GameManager.GameOverInfo m_gameOverInfo;

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x115DFFC", Offset = "0x115DFFC", VA = "0x115DFFC", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x115E060", Offset = "0x115E060", VA = "0x115E060", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x115E170", Offset = "0x115E170", VA = "0x115E170", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82A60", Offset = "0xB82A60")]
		public virtual IEnumerator DoSequence(GameManager.GameOverInfo gameOverInfo, Action<bool> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x115E228", Offset = "0x115E228", VA = "0x115E228")]
		public void BackToMenu()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x115E2D8", Offset = "0x115E2D8", VA = "0x115E2D8")]
		public void Replay()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x115E398", Offset = "0x115E398", VA = "0x115E398")]
		public void NextLevel()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x115E494", Offset = "0x115E494", VA = "0x115E494")]
		protected void ResetBonuses()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x115E664", Offset = "0x115E664", VA = "0x115E664", Slot = "4")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x115E784", Offset = "0x115E784", VA = "0x115E784")]
		public UIEndGameSequence()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class UIEndGameSequenceArcade : UIEndGameSequence
	{
		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E0D0", Offset = "0xB5E0D0")]
		private sealed class <DoSequence>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIEndGameSequenceArcade <>4__this;

			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool> onComplete;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameManager.GameOverInfo info;

			[Token(Token = "0x170003EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C14")]
				[Address(RVA = "0x1B8D994", Offset = "0x1B8D994", VA = "0x1B8D994", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C16")]
				[Address(RVA = "0x1B8D9DC", Offset = "0x1B8D9DC", VA = "0x1B8D9DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C11")]
			[Address(RVA = "0x1B8D474", Offset = "0x1B8D474", VA = "0x1B8D474")]
			[DebuggerHidden]
			public <DoSequence>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001C12")]
			[Address(RVA = "0x1B8D4A0", Offset = "0x1B8D4A0", VA = "0x1B8D4A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0x1B8D4A4", Offset = "0x1B8D4A4", VA = "0x1B8D4A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C15")]
			[Address(RVA = "0x1B8D99C", Offset = "0x1B8D99C", VA = "0x1B8D99C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E0E0", Offset = "0xB5E0E0")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int currentScore;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SoundPlaybackContext soundPlaybackContext;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIEndGameSequenceArcade <>4__this;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DOGetter<int> <>9__0;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DOSetter<int> <>9__1;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TweenCallback <>9__2;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TweenCallback <>9__3;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public TweenCallback <>9__4;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public TweenCallback <>9__5;

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0x1B8C728", Offset = "0x1B8C728", VA = "0x1B8C728")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001C18")]
			[Address(RVA = "0x1B8C730", Offset = "0x1B8C730", VA = "0x1B8C730")]
			internal int <BonusSequence>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6001C19")]
			[Address(RVA = "0x1B8C738", Offset = "0x1B8C738", VA = "0x1B8C738")]
			internal void <BonusSequence>b__1(int value)
			{
			}

			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0x1B8C740", Offset = "0x1B8C740", VA = "0x1B8C740")]
			internal void <BonusSequence>b__2()
			{
			}

			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0x1B8C80C", Offset = "0x1B8C80C", VA = "0x1B8C80C")]
			internal void <BonusSequence>b__3()
			{
			}

			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0x1B8C858", Offset = "0x1B8C858", VA = "0x1B8C858")]
			internal void <BonusSequence>b__4()
			{
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x1B8C86C", Offset = "0x1B8C86C", VA = "0x1B8C86C")]
			internal void <BonusSequence>b__5()
			{
			}
		}

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E0F0", Offset = "0xB5E0F0")]
		private sealed class <BonusSequence>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIEndGameSequenceArcade <>4__this;

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameManager.GameOverInfo info;

			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private <>c__DisplayClass15_0 <>8__1;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<UIScoreBonus>.Enumerator <>7__wrap1;

			[Token(Token = "0x170003F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C22")]
				[Address(RVA = "0x1B8D424", Offset = "0x1B8D424", VA = "0x1B8D424", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C24")]
				[Address(RVA = "0x1B8D46C", Offset = "0x1B8D46C", VA = "0x1B8D46C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x1B8C880", Offset = "0x1B8C880", VA = "0x1B8C880")]
			[DebuggerHidden]
			public <BonusSequence>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x1B8C8AC", Offset = "0x1B8C8AC", VA = "0x1B8C8AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x1B8C91C", Offset = "0x1B8C91C", VA = "0x1B8C91C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x1B8C8C8", Offset = "0x1B8C8C8", VA = "0x1B8C8C8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x1B8D42C", Offset = "0x1B8D42C", VA = "0x1B8D42C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70C28", Offset = "0xB70C28")]
		public TextMeshProUGUI[] m_highScoreTexts;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public TextMeshProUGUI[] m_scoreTexts;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Color[] m_bonusColors;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70C60", Offset = "0xB70C60")]
		public UIEndGameSequenceClassic.SequenceItem m_start;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public UIEndGameSequenceClassic.SequenceItem m_timeUp;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public UIEndGameSequenceClassic.SequenceItem m_bonusBoardSequence;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public UIEndGameSequenceClassic.SequenceItem m_branchAScore;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public UIEndGameSequenceClassic.SequenceItem m_branchBBestScore;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public UIEndGameSequenceClassic.SequenceItem m_branchBLeaderboard;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public UIEndGameSequenceClassic.SequenceItem m_end;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70C98", Offset = "0xB70C98")]
		public TextMeshProUGUI m_totalBonusText;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public ISound m_scoreTickSound;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool m_isNewBest;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private TweenerCore<int, int, NoOptions> m_tween;

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x115E86C", Offset = "0x115E86C", VA = "0x115E86C", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82B10", Offset = "0xB82B10")]
		public override IEnumerator DoSequence(GameManager.GameOverInfo info, Action<bool> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x115E924", Offset = "0x115E924", VA = "0x115E924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82B70", Offset = "0xB82B70")]
		private IEnumerator BonusSequence(GameManager.GameOverInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x115E9C8", Offset = "0x115E9C8", VA = "0x115E9C8")]
		private void SetupScore(GameManager.GameOverInfo info)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x115EC2C", Offset = "0x115EC2C", VA = "0x115EC2C")]
		public UIEndGameSequenceArcade()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class UIEndGameSequenceClassic : UIEndGameSequence
	{
		[Serializable]
		[Token(Token = "0x20004F0")]
		public struct SpawnPooledObject
		{
			[Token(Token = "0x20004F1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E100", Offset = "0xB5E100")]
			private sealed class <Execute>d__3 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001E7F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001E80")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001E81")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public SpawnPooledObject <>4__this;

				[Token(Token = "0x170003F2")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001C2D")]
					[Address(RVA = "0x1B96910", Offset = "0x1B96910", VA = "0x1B96910", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003F3")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001C2F")]
					[Address(RVA = "0x1B96958", Offset = "0x1B96958", VA = "0x1B96958", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001C2A")]
				[Address(RVA = "0x1B8DED4", Offset = "0x1B8DED4", VA = "0x1B8DED4")]
				[DebuggerHidden]
				public <Execute>d__3(int <>1__state)
				{
				}

				[Token(Token = "0x6001C2B")]
				[Address(RVA = "0x1B9674C", Offset = "0x1B9674C", VA = "0x1B9674C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001C2C")]
				[Address(RVA = "0x1B96750", Offset = "0x1B96750", VA = "0x1B96750", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001C2E")]
				[Address(RVA = "0x1B96918", Offset = "0x1B96918", VA = "0x1B96918", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float m_waitTimeBefore;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PooledObject m_prefab;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform m_parent;

			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x1B8DE38", Offset = "0x1B8DE38", VA = "0x1B8DE38")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82CD0", Offset = "0xB82CD0")]
			public IEnumerator Execute()
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x20004F2")]
		public class SequenceItem
		{
			[Token(Token = "0x20004F3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E110", Offset = "0xB5E110")]
			private sealed class <Enable>d__3 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001E85")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001E86")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001E87")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public SequenceItem <>4__this;

				[Token(Token = "0x170003F4")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001C37")]
					[Address(RVA = "0x1B966FC", Offset = "0x1B966FC", VA = "0x1B966FC", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003F5")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001C39")]
					[Address(RVA = "0x1B96744", Offset = "0x1B96744", VA = "0x1B96744", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001C34")]
				[Address(RVA = "0x1B8DD44", Offset = "0x1B8DD44", VA = "0x1B8DD44")]
				[DebuggerHidden]
				public <Enable>d__3(int <>1__state)
				{
				}

				[Token(Token = "0x6001C35")]
				[Address(RVA = "0x1B965E0", Offset = "0x1B965E0", VA = "0x1B965E0", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001C36")]
				[Address(RVA = "0x1B965E4", Offset = "0x1B965E4", VA = "0x1B965E4", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001C38")]
				[Address(RVA = "0x1B96704", Offset = "0x1B96704", VA = "0x1B96704", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x20004F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E120", Offset = "0xB5E120")]
			private sealed class <Disable>d__4 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x4001E88")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x4001E89")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4001E8A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public SequenceItem <>4__this;

				[Token(Token = "0x170003F6")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6001C3D")]
					[Address(RVA = "0x1B96590", Offset = "0x1B96590", VA = "0x1B96590", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170003F7")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6001C3F")]
					[Address(RVA = "0x1B965D8", Offset = "0x1B965D8", VA = "0x1B965D8", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6001C3A")]
				[Address(RVA = "0x1B8DD70", Offset = "0x1B8DD70", VA = "0x1B8DD70")]
				[DebuggerHidden]
				public <Disable>d__4(int <>1__state)
				{
				}

				[Token(Token = "0x6001C3B")]
				[Address(RVA = "0x1B96474", Offset = "0x1B96474", VA = "0x1B96474", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6001C3C")]
				[Address(RVA = "0x1B96478", Offset = "0x1B96478", VA = "0x1B96478", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6001C3E")]
				[Address(RVA = "0x1B96598", Offset = "0x1B96598", VA = "0x1B96598", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float m_waitTimeBefore;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject m_gameObject;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float m_waitTimeAfter;

			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x1B8D8A4", Offset = "0x1B8D8A4", VA = "0x1B8D8A4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82D80", Offset = "0xB82D80")]
			public IEnumerator Enable()
			{
				return null;
			}

			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x1B8D91C", Offset = "0x1B8D91C", VA = "0x1B8D91C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82DE0", Offset = "0xB82DE0")]
			public IEnumerator Disable()
			{
				return null;
			}

			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x1B8DD9C", Offset = "0x1B8DD9C", VA = "0x1B8DD9C")]
			public void DisableImmediate()
			{
			}

			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x1B8DE30", Offset = "0x1B8DE30", VA = "0x1B8DE30")]
			public SequenceItem()
			{
			}
		}

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E130", Offset = "0xB5E130")]
		private sealed class <DoSequence>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIEndGameSequenceClassic <>4__this;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<bool> onComplete;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameManager.GameOverInfo info;

			[Token(Token = "0x170003F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C43")]
				[Address(RVA = "0x1B8DCF4", Offset = "0x1B8DCF4", VA = "0x1B8DCF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C45")]
				[Address(RVA = "0x1B8DD3C", Offset = "0x1B8DD3C", VA = "0x1B8DD3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C40")]
			[Address(RVA = "0x1B8D9E4", Offset = "0x1B8D9E4", VA = "0x1B8D9E4")]
			[DebuggerHidden]
			public <DoSequence>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001C41")]
			[Address(RVA = "0x1B8DA10", Offset = "0x1B8DA10", VA = "0x1B8DA10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C42")]
			[Address(RVA = "0x1B8DA14", Offset = "0x1B8DA14", VA = "0x1B8DA14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C44")]
			[Address(RVA = "0x1B8DCFC", Offset = "0x1B8DCFC", VA = "0x1B8DCFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70CD0", Offset = "0xB70CD0")]
		public TextMeshProUGUI[] m_highScoreTexts;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public TextMeshProUGUI[] m_scoreTexts;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70D08", Offset = "0xB70D08")]
		public SequenceItem m_start;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SequenceItem m_branchAGameOver;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public SequenceItem m_branchBBestScore;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public SequenceItem m_branchBLeaderboard;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public SequenceItem m_end;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool m_isNewBest;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		private bool m_inSequence;

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x115ED70", Offset = "0x115ED70", VA = "0x115ED70", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82C70", Offset = "0xB82C70")]
		public override IEnumerator DoSequence(GameManager.GameOverInfo info, Action<bool> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x115EE28", Offset = "0x115EE28", VA = "0x115EE28")]
		private void SetupScore(GameManager.GameOverInfo info)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x115EFD0", Offset = "0x115EFD0", VA = "0x115EFD0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x115F050", Offset = "0x115F050", VA = "0x115F050")]
		public UIEndGameSequenceClassic()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public class UIGameDisplay : MonoBehaviour
	{
		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E140", Offset = "0xB5E140")]
		private sealed class <DoCountDown>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIGameDisplay <>4__this;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCountDownOver;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <countdown>5__2;

			[Token(Token = "0x170003FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C57")]
				[Address(RVA = "0x1B8E468", Offset = "0x1B8E468", VA = "0x1B8E468", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C59")]
				[Address(RVA = "0x1B8E4B0", Offset = "0x1B8E4B0", VA = "0x1B8E4B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x1B8DF00", Offset = "0x1B8DF00", VA = "0x1B8DF00")]
			[DebuggerHidden]
			public <DoCountDown>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001C55")]
			[Address(RVA = "0x1B8DF2C", Offset = "0x1B8DF2C", VA = "0x1B8DF2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C56")]
			[Address(RVA = "0x1B8DF30", Offset = "0x1B8DF30", VA = "0x1B8DF30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C58")]
			[Address(RVA = "0x1B8E470", Offset = "0x1B8E470", VA = "0x1B8E470", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameRules m_gameRules;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70D40", Offset = "0xB70D40")]
		public TMP_Text m_scoreText;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text m_gameTimerText;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text m_gameTimerLabel;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TMP_Text m_startCountdownText;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image m_gameProgressBar;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject m_inGameDisplay;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_preGameDisplay;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIPauseMenu m_pauseDisplay;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB70D78", Offset = "0xB70D78")]
		public LocalizedString m_remainingTime;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LocalizedString m_elapsedTime;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB70D88", Offset = "0xB70D88")]
		public Animator m_animator;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float m_countDownDelay;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70D98", Offset = "0xB70D98")]
		public ISound m_countDownSound;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ISound m_startSound;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70DD0", Offset = "0xB70DD0")]
		public int m_countDown;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float m_countDownInterval;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB70E08", Offset = "0xB70E08")]
		public float m_progressLerpSpeed;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int m_totalFruit;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int m_fruitLaunched;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int m_lastGameTimerSeconds;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_currentlyDisplayedProgress;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_currentProgress;

		[Token(Token = "0x14000079")]
		public event Action<int> OnCountDown
		{
			[Token(Token = "0x6001C46")]
			[Address(RVA = "0x115F054", Offset = "0x115F054", VA = "0x115F054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82F30", Offset = "0xB82F30")]
			add
			{
			}
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0x115F0F4", Offset = "0x115F0F4", VA = "0x115F0F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB82F40", Offset = "0xB82F40")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x115F194", Offset = "0x115F194", VA = "0x115F194")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x115F388", Offset = "0x115F388", VA = "0x115F388")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x115F5EC", Offset = "0x115F5EC", VA = "0x115F5EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x115F6B8", Offset = "0x115F6B8", VA = "0x115F6B8")]
		private void OnFruitLaunched(Fruit obj)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x115F6F4", Offset = "0x115F6F4", VA = "0x115F6F4")]
		private void OnGameStart(GameEvent evt)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x115FA80", Offset = "0x115FA80", VA = "0x115FA80")]
		private void OnGameOver(GameEvent evt)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x115FCC8", Offset = "0x115FCC8", VA = "0x115FCC8")]
		private void OnGamePaused(GameEvent evt)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x115F6DC", Offset = "0x115F6DC", VA = "0x115F6DC")]
		private void UpdateGameProgress()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x115FEBC", Offset = "0x115FEBC", VA = "0x115FEBC")]
		public void UpdateScore(int score)
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x115F988", Offset = "0x115F988", VA = "0x115F988")]
		public void UpdateGameTimer(int seconds)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x115FF08", Offset = "0x115FF08", VA = "0x115FF08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB82F50", Offset = "0xB82F50")]
		public IEnumerator DoCountDown(Action onCountDownOver)
		{
			return null;
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x115FF9C", Offset = "0x115FF9C", VA = "0x115FF9C")]
		public UIGameDisplay()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class UILeaderboardsScore : MonoBehaviour
	{
		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_textHolders;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI[] m_texts;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_onlyShowAboveZeroScore;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string m_levelId;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_score;

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x11607C0", Offset = "0x11607C0", VA = "0x11607C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x116087C", Offset = "0x116087C", VA = "0x116087C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x1160938", Offset = "0x1160938", VA = "0x1160938")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x116097C", Offset = "0x116097C", VA = "0x116097C")]
		private void OnLeaderboardsSubmitted(GameEvent evt)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x116093C", Offset = "0x116093C", VA = "0x116093C")]
		private void UpdateLeaderboard()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x1160B4C", Offset = "0x1160B4C", VA = "0x1160B4C")]
		private void UpdateLeaderboard(string id)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x1160A54", Offset = "0x1160A54", VA = "0x1160A54")]
		private void UpdateScore(int score)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x1160C08", Offset = "0x1160C08", VA = "0x1160C08")]
		public UILeaderboardsScore()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class UILevel : MonoBehaviour
	{
		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI m_levelText;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_gradeText;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image m_backingImage;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_levelCompleteObject;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color m_standardBackingColor;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color m_alternatingBackingColor;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color m_selectedBackingColor;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70E28", Offset = "0xB70E28")]
		public Image[] m_imagesToOptimize;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Level m_level;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color m_backingColor;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_previousVisibility;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_doneFirstVisibilityChange;

		[Token(Token = "0x170003FC")]
		public Level Level
		{
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0x1160C18", Offset = "0x1160C18", VA = "0x1160C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x1160C20", Offset = "0x1160C20", VA = "0x1160C20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x1160E0C", Offset = "0x1160E0C", VA = "0x1160E0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x1160FD4", Offset = "0x1160FD4", VA = "0x1160FD4")]
		public void Init(Level level, int index)
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x11613D8", Offset = "0x11613D8", VA = "0x11613D8")]
		public void SelectLevel()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x1161490", Offset = "0x1161490", VA = "0x1161490")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x116153C", Offset = "0x116153C", VA = "0x116153C")]
		private void OnLevelsDataChanged(object dataObj)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x116165C", Offset = "0x116165C", VA = "0x116165C")]
		private void RefreshLanguage()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x116171C", Offset = "0x116171C", VA = "0x116171C")]
		private void OnLevelSelected(GameEvent evt)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x1161304", Offset = "0x1161304", VA = "0x1161304")]
		private void UpdateSelectedLevel(Level selectedLevel)
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x11617D0", Offset = "0x11617D0", VA = "0x11617D0")]
		public UILevel()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class UILevelSelect : MonoBehaviour, ILocalizeCallback
	{
		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E150", Offset = "0xB5E150")]
		private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UILevelSelect <>4__this;

			[Token(Token = "0x170003FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C7C")]
				[Address(RVA = "0x1B8E784", Offset = "0x1B8E784", VA = "0x1B8E784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C7E")]
				[Address(RVA = "0x1B8E7CC", Offset = "0x1B8E7CC", VA = "0x1B8E7CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x1B8E6E4", Offset = "0x1B8E6E4", VA = "0x1B8E6E4")]
			[DebuggerHidden]
			public <Start>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x1B8E710", Offset = "0x1B8E710", VA = "0x1B8E710", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x1B8E714", Offset = "0x1B8E714", VA = "0x1B8E714", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x1B8E78C", Offset = "0x1B8E78C", VA = "0x1B8E78C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E160", Offset = "0xB5E160")]
		private sealed class <>c
		{
			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ScoreBonus> <>9__26_0;

			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x1B8E660", Offset = "0x1B8E660", VA = "0x1B8E660")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x1B8E668", Offset = "0x1B8E668", VA = "0x1B8E668")]
			internal bool <UpdateUI>b__26_0(ScoreBonus bonus)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Game.GameMode m_levelGameMode;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70E60", Offset = "0xB70E60")]
		public TextMeshProUGUI m_bestScoreText;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_bestTimeText;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UILayoutEnabler m_playerDetailLayoutEnabler;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB70E98", Offset = "0xB70E98")]
		public TextMeshProUGUI m_waveCountText;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI m_referenceTimeText;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI m_levelTitleText;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ScrollRectScroller m_levelSelectScroller;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_timeBonusObject;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UISetlistGroup m_setlistGroup;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LocalizedString m_notAvailableString;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Animator m_physicsPlayButtonAnimator;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject m_refreshAnimation;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70EA8", Offset = "0xB70EA8")]
		public UIGradeReward m_gradeRewardPrefab;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject m_gradeContainer;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UILayoutEnabler m_gradeLayoutEnabler;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Level m_selectedLevel;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Level m_previousSelectedLevel;

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x11617D8", Offset = "0x11617D8", VA = "0x11617D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x1161894", Offset = "0x1161894", VA = "0x1161894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83000", Offset = "0xB83000")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x116190C", Offset = "0x116190C", VA = "0x116190C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x11619C8", Offset = "0x11619C8", VA = "0x11619C8")]
		private void OnLevelSelected(GameEvent evt)
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x1162150", Offset = "0x1162150", VA = "0x1162150")]
		public void PlayGame()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x11621F8", Offset = "0x11621F8", VA = "0x11621F8")]
		public void ScrollToSelected()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x1161B58", Offset = "0x1161B58", VA = "0x1161B58")]
		private void SetSelectedLevel(Level level, Game.GameMode gameMode)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x1162434", Offset = "0x1162434", VA = "0x1162434")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x1162438", Offset = "0x1162438", VA = "0x1162438")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x116292C", Offset = "0x116292C", VA = "0x116292C")]
		private void UpdateLevelText()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x1162994", Offset = "0x1162994", VA = "0x1162994", Slot = "4")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x1162A18", Offset = "0x1162A18", VA = "0x1162A18")]
		public UILevelSelect()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class UIMapArea : MonoBehaviour
	{
		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIMapDisplay m_mapDisplay;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AreaManager.AreaType m_mapArea;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AreaManager.AreaType[] m_subAreas;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_unlockEffects;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_playerIcon;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button m_button;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_updateUnlockStateOnNextEnable;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_unlocked;

		[Token(Token = "0x170003FF")]
		public bool Unlocked
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x1162A20", Offset = "0x1162A20", VA = "0x1162A20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x1162B14", Offset = "0x1162B14", VA = "0x1162B14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x1162F8C", Offset = "0x1162F8C", VA = "0x1162F8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x116325C", Offset = "0x116325C", VA = "0x116325C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x1162DD0", Offset = "0x1162DD0", VA = "0x1162DD0")]
		private void OnAreaUpdate(AreaManager.AreaType currentArea)
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x1162C74", Offset = "0x1162C74", VA = "0x1162C74")]
		public void UpdateUnlockStatus(AreaUnlocksPlayerDataObject areaUnlocksPlayerDataObject)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x11632EC", Offset = "0x11632EC", VA = "0x11632EC")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x11633D8", Offset = "0x11633D8", VA = "0x11633D8")]
		private void OnMapButtonSelected()
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x11634C8", Offset = "0x11634C8", VA = "0x11634C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x116355C", Offset = "0x116355C", VA = "0x116355C")]
		public UIMapArea()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class UIMapDisplay : MonoBehaviour
	{
		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E170", Offset = "0xB5E170")]
		private sealed class <MapButtonUnlockCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIMapDisplay <>4__this;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <unlocks>5__2;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000400")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C9F")]
				[Address(RVA = "0x1B8E934", Offset = "0x1B8E934", VA = "0x1B8E934", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000401")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA1")]
				[Address(RVA = "0x1B8E97C", Offset = "0x1B8E97C", VA = "0x1B8E97C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x1B8E7D4", Offset = "0x1B8E7D4", VA = "0x1B8E7D4")]
			[DebuggerHidden]
			public <MapButtonUnlockCoroutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x1B8E800", Offset = "0x1B8E800", VA = "0x1B8E800", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x1B8E804", Offset = "0x1B8E804", VA = "0x1B8E804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x1B8E93C", Offset = "0x1B8E93C", VA = "0x1B8E93C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_mapObject;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_mapNotificationObject;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform m_teleportPopup;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<UIMapArea> m_mapButtons;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_unlockEffectsInterval;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Queue<UIMapArea> m_unlockedMapButtonsQueue;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AreaManager.AreaType m_currentSelectedArea;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UIMapArea m_currentMapArea;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AreaUnlocksPlayerDataObject m_playerAreaData;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_unlockOnNextEnable;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_doneUnlocksAtAll;

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x1163564", Offset = "0x1163564", VA = "0x1163564")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x116394C", Offset = "0x116394C", VA = "0x116394C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x1163984", Offset = "0x1163984", VA = "0x1163984")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1163AF4", Offset = "0x1163AF4", VA = "0x1163AF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1163AFC", Offset = "0x1163AFC", VA = "0x1163AFC")]
		private void OnAreaEntered(AreaManager.AreaType obj)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1163B04", Offset = "0x1163B04", VA = "0x1163B04")]
		public void SetMapActive(bool isActive)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x116348C", Offset = "0x116348C", VA = "0x116348C")]
		public void ToggleTeleportPopup(bool isOn)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1163440", Offset = "0x1163440", VA = "0x1163440")]
		public void MoveTeleportPopup()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x1163420", Offset = "0x1163420", VA = "0x1163420")]
		public void SetTeleportLocation(UIMapArea mapArea)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x1163C78", Offset = "0x1163C78", VA = "0x1163C78")]
		public void TeleportToLocation(bool fromSettings)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x1163B58", Offset = "0x1163B58", VA = "0x1163B58")]
		private void PerformAnyAreaUnlocks()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x11637CC", Offset = "0x11637CC", VA = "0x11637CC")]
		private void ApplyAreaUnlocks()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x1163DBC", Offset = "0x1163DBC", VA = "0x1163DBC")]
		private void RegisterNewAreaUnlocks(object dataObject)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x1163BCC", Offset = "0x1163BCC", VA = "0x1163BCC")]
		private void UpdateMapNotification()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1163D44", Offset = "0x1163D44", VA = "0x1163D44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB830B0", Offset = "0xB830B0")]
		private IEnumerator MapButtonUnlockCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x1163F8C", Offset = "0x1163F8C", VA = "0x1163F8C")]
		public UIMapDisplay()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class UIPauseMenu : MonoBehaviour
	{
		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E180", Offset = "0xB5E180")]
		private sealed class <DoCountDown>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIPauseMenu <>4__this;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCountDownOver;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <countdown>5__2;

			[Token(Token = "0x17000402")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CAD")]
				[Address(RVA = "0x1B8ECAC", Offset = "0x1B8ECAC", VA = "0x1B8ECAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000403")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAF")]
				[Address(RVA = "0x1B8ECF4", Offset = "0x1B8ECF4", VA = "0x1B8ECF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x1B8E984", Offset = "0x1B8E984", VA = "0x1B8E984")]
			[DebuggerHidden]
			public <DoCountDown>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x1B8E9B0", Offset = "0x1B8E9B0", VA = "0x1B8E9B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x1B8E9B4", Offset = "0x1B8E9B4", VA = "0x1B8E9B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x1B8ECB4", Offset = "0x1B8ECB4", VA = "0x1B8ECB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_pausePanel;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_resumePanel;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro m_countDownText;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_countDownTextScale;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int m_countDownSteps;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_countDownInterval;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_textAnimationSpeed;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ISound m_countDownSound;

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x116406C", Offset = "0x116406C", VA = "0x116406C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x115FE68", Offset = "0x115FE68", VA = "0x115FE68")]
		public void Pause(bool pause)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x116408C", Offset = "0x116408C", VA = "0x116408C")]
		private void UnpauseNow()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x11641B4", Offset = "0x11641B4", VA = "0x11641B4")]
		public void UnpauseAfterCountDown()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x1164338", Offset = "0x1164338", VA = "0x1164338")]
		public void ExitToMenu()
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x11643E8", Offset = "0x11643E8", VA = "0x11643E8")]
		public void Restart()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x11642A4", Offset = "0x11642A4", VA = "0x11642A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83160", Offset = "0xB83160")]
		private IEnumerator DoCountDown(Action onCountDownOver)
		{
			return null;
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x1164498", Offset = "0x1164498", VA = "0x1164498")]
		public UIPauseMenu()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class UIProgressBar : MonoBehaviour
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_progress;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image m_bar;

		[Token(Token = "0x17000404")]
		public float Progress
		{
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x11644BC", Offset = "0x11644BC", VA = "0x11644BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0x11644C4", Offset = "0x11644C4", VA = "0x11644C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x11644F0", Offset = "0x11644F0", VA = "0x11644F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x11644CC", Offset = "0x11644CC", VA = "0x11644CC")]
		private void UpdateUI()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x11644F4", Offset = "0x11644F4", VA = "0x11644F4")]
		public UIProgressBar()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class UIScoreBonus : MonoBehaviour
	{
		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E190", Offset = "0xB5E190")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIScoreBonus <>4__this;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SoundPlaybackContext soundPlaybackContext;

			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x1B8ECFC", Offset = "0x1B8ECFC", VA = "0x1B8ECFC")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x1B8ED04", Offset = "0x1B8ED04", VA = "0x1B8ED04")]
			internal void <DoBarFill>b__0()
			{
			}
		}

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E1A0", Offset = "0xB5E1A0")]
		private sealed class <WaitForBarFill>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIScoreBonus <>4__this;

			[Token(Token = "0x17000408")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC6")]
				[Address(RVA = "0x1B8EE08", Offset = "0x1B8EE08", VA = "0x1B8EE08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000409")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC8")]
				[Address(RVA = "0x1B8EE50", Offset = "0x1B8EE50", VA = "0x1B8EE50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x1B8ED74", Offset = "0x1B8ED74", VA = "0x1B8ED74")]
			[DebuggerHidden]
			public <WaitForBarFill>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x1B8EDA0", Offset = "0x1B8EDA0", VA = "0x1B8EDA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0x1B8EDA4", Offset = "0x1B8EDA4", VA = "0x1B8EDA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0x1B8EE10", Offset = "0x1B8EE10", VA = "0x1B8EE10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E1B0", Offset = "0xB5E1B0")]
		private sealed class <WaitForBarFillStart>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIScoreBonus <>4__this;

			[Token(Token = "0x1700040A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CCC")]
				[Address(RVA = "0x1B8EEEC", Offset = "0x1B8EEEC", VA = "0x1B8EEEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CCE")]
				[Address(RVA = "0x1B8EF34", Offset = "0x1B8EF34", VA = "0x1B8EF34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0x1B8EE58", Offset = "0x1B8EE58", VA = "0x1B8EE58")]
			[DebuggerHidden]
			public <WaitForBarFillStart>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0x1B8EE84", Offset = "0x1B8EE84", VA = "0x1B8EE84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0x1B8EE88", Offset = "0x1B8EE88", VA = "0x1B8EE88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0x1B8EEF4", Offset = "0x1B8EEF4", VA = "0x1B8EEF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI m_scoreLabel;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_scoreText;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image m_icon;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_contentGameObject;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject m_effectsGameObject;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image m_barFill;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RangedFloat m_barFillDurationRange;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Ease m_barFillEase;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_maxBonusThing;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ISound m_bonusBarFillSound;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_minAudibleFillAmount;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ScoreBonus.BonusData m_bonusData;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_fillAmount;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Animator m_animator;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_isMaxBonus;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_hasDoneFill;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool m_hasStartedFill;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private DOTweenAnimation m_tweenAnimation;

		[Token(Token = "0x17000405")]
		public float FillAmount
		{
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x11644FC", Offset = "0x11644FC", VA = "0x11644FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000406")]
		public bool HasDoneFill
		{
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x1164504", Offset = "0x1164504", VA = "0x1164504")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000407")]
		public ScoreBonus.BonusData BonusData
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x116450C", Offset = "0x116450C", VA = "0x116450C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x1164514", Offset = "0x1164514", VA = "0x1164514")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x1164748", Offset = "0x1164748", VA = "0x1164748")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x11647F0", Offset = "0x11647F0", VA = "0x11647F0")]
		public void Init(ScoreBonus.BonusData bonusData)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x1164A8C", Offset = "0x1164A8C", VA = "0x1164A8C")]
		public void DoBarFill()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x1164C88", Offset = "0x1164C88", VA = "0x1164C88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83210", Offset = "0xB83210")]
		public IEnumerator WaitForBarFill()
		{
			return null;
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x1164D00", Offset = "0x1164D00", VA = "0x1164D00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83270", Offset = "0xB83270")]
		public IEnumerator WaitForBarFillStart()
		{
			return null;
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x1164610", Offset = "0x1164610", VA = "0x1164610")]
		public void SetEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x1164A40", Offset = "0x1164A40", VA = "0x1164A40")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x1164D78", Offset = "0x1164D78", VA = "0x1164D78")]
		public UIScoreBonus()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class UISetlist : MonoBehaviour
	{
		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E1C0", Offset = "0xB5E1C0")]
		private sealed class <DisableContentSizeFilterNextFrame>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UISetlist <>4__this;

			[Token(Token = "0x1700040C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDF")]
				[Address(RVA = "0x1B8F2C4", Offset = "0x1B8F2C4", VA = "0x1B8F2C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE1")]
				[Address(RVA = "0x1B8F30C", Offset = "0x1B8F30C", VA = "0x1B8F30C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x1B8F218", Offset = "0x1B8F218", VA = "0x1B8F218")]
			[DebuggerHidden]
			public <DisableContentSizeFilterNextFrame>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0x1B8F244", Offset = "0x1B8F244", VA = "0x1B8F244", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0x1B8F248", Offset = "0x1B8F248", VA = "0x1B8F248", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x1B8F2CC", Offset = "0x1B8F2CC", VA = "0x1B8F2CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E1D0", Offset = "0xB5E1D0")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Level level;

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0x1B8F18C", Offset = "0x1B8F18C", VA = "0x1B8F18C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0x1B8F194", Offset = "0x1B8F194", VA = "0x1B8F194")]
			internal bool <GetUiLevel>b__0(UILevel uiLevel)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] m_lockedItems;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_setlistTitleText;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UILevel m_levelPrefab;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform m_levelsContainer;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalizedString m_setListLockedStringGameMode;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LocalizedString m_setListLockedStringSetList;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI m_lockedSetlistText;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ContentSizeFitter m_contentSizeFitter;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CustomRectMask2D m_lockedRectMask;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RectTransform m_setlistRectTransform;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_previousVisibility;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_doneFirstVisibilityChange;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LevelSetlist m_setlist;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_index;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<UILevel> m_uiLevels;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string m_lastLanguage;

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x116528C", Offset = "0x116528C", VA = "0x116528C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x11653C4", Offset = "0x11653C4", VA = "0x11653C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x116555C", Offset = "0x116555C", VA = "0x116555C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x11656FC", Offset = "0x11656FC", VA = "0x11656FC")]
		public void Init(LevelSetlist setlist, int index)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x1165EA0", Offset = "0x1165EA0", VA = "0x1165EA0")]
		public bool SetSetlistVisible(bool isVisible)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x1165E28", Offset = "0x1165E28", VA = "0x1165E28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83370", Offset = "0xB83370")]
		private IEnumerator DisableContentSizeFilterNextFrame()
		{
			return null;
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x1165FF4", Offset = "0x1165FF4", VA = "0x1165FF4")]
		private void OnSetlistUnlock()
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x1165B48", Offset = "0x1165B48", VA = "0x1165B48")]
		private void UpdateLockedUI()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x1165450", Offset = "0x1165450", VA = "0x1165450")]
		private void RefreshLanguage()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x1166120", Offset = "0x1166120", VA = "0x1166120")]
		public UILevel GetUiLevel(Level level)
		{
			return null;
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x116621C", Offset = "0x116621C", VA = "0x116621C")]
		private void OnGameOver(GameEvent evt)
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x1165BE0", Offset = "0x1165BE0", VA = "0x1165BE0")]
		private void UpdateLockedString()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x1166220", Offset = "0x1166220", VA = "0x1166220")]
		public UISetlist()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class UISetlistGroup : MonoBehaviour
	{
		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E1E0", Offset = "0xB5E1E0")]
		private sealed class <Start>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UISetlistGroup <>4__this;

			[Token(Token = "0x1700040E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CED")]
				[Address(RVA = "0x1B8F664", Offset = "0x1B8F664", VA = "0x1B8F664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CEF")]
				[Address(RVA = "0x1B8F6AC", Offset = "0x1B8F6AC", VA = "0x1B8F6AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0x1B8F314", Offset = "0x1B8F314", VA = "0x1B8F314")]
			[DebuggerHidden]
			public <Start>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x1B8F340", Offset = "0x1B8F340", VA = "0x1B8F340", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0x1B8F344", Offset = "0x1B8F344", VA = "0x1B8F344", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x1B8F66C", Offset = "0x1B8F66C", VA = "0x1B8F66C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UISetlist m_setlistPrefab;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform m_setlistLayoutParent;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VerticalLayoutGroup m_setListLayout;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ContentSizeFitter m_setListSizeFitter;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameModeSetlists m_gameMode;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70F70", Offset = "0xB70F70")]
		public Canvas m_canvas;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool m_doScrollRectOptimization;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RectMask2D m_rectMask2D;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ScrollRect m_setlistScrollRect;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RectTransform m_setlistScrollTransform;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float m_distanceMarginToLoad;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_lastPos;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_childMin;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_childMax;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_checkRectMin;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_checkRectMax;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<UISetlist> m_uiSetlists;

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x1223BE8", Offset = "0x1223BE8", VA = "0x1223BE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x1223E34", Offset = "0x1223E34", VA = "0x1223E34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83420", Offset = "0xB83420")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x1223EAC", Offset = "0x1223EAC", VA = "0x1223EAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x1223F70", Offset = "0x1223F70", VA = "0x1223F70")]
		private void UpdateSetListVisibility(Vector2 pos)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x1224278", Offset = "0x1224278", VA = "0x1224278")]
		public UILevel GetUiLevel(Level level)
		{
			return null;
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x122440C", Offset = "0x122440C", VA = "0x122440C")]
		public UISetlistGroup()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class UITips : MonoBehaviour, ILocalizeCallback
	{
		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NonRepeatingRandomLocalizedString m_strings;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_tipText;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_currentRandomTip;

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x1224F34", Offset = "0x1224F34", VA = "0x1224F34")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x1224FD8", Offset = "0x1224FD8", VA = "0x1224FD8", Slot = "4")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x1224F38", Offset = "0x1224F38", VA = "0x1224F38")]
		private void UpdateRandomTip()
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x1224FDC", Offset = "0x1224FDC", VA = "0x1224FDC")]
		public UITips()
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class UnlockWithCompletedLevels : MonoBehaviour, ILocalizeCallback
	{
		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E1F0", Offset = "0xB5E1F0")]
		private sealed class <DelayBeforeStartingAnimation>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnlockWithCompletedLevels <>4__this;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int animationTrigger;

			[Token(Token = "0x17000411")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D07")]
				[Address(RVA = "0x1B8FBA4", Offset = "0x1B8FBA4", VA = "0x1B8FBA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000412")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D09")]
				[Address(RVA = "0x1B8FBEC", Offset = "0x1B8FBEC", VA = "0x1B8FBEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D04")]
			[Address(RVA = "0x1B8F9DC", Offset = "0x1B8F9DC", VA = "0x1B8F9DC")]
			[DebuggerHidden]
			public <DelayBeforeStartingAnimation>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6001D05")]
			[Address(RVA = "0x1B8FA08", Offset = "0x1B8FA08", VA = "0x1B8FA08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D06")]
			[Address(RVA = "0x1B8FA0C", Offset = "0x1B8FA0C", VA = "0x1B8FA0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D08")]
			[Address(RVA = "0x1B8FBAC", Offset = "0x1B8FBAC", VA = "0x1B8FBAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB70FA8", Offset = "0xB70FA8")]
		[SerializeField]
		private Game.Unlockable m_unlockableConfig;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Game.GameMode m_gameModeBeingTracked;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_progressPanel;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB71014", Offset = "0xB71014")]
		[SerializeField]
		private GameObject m_completedPanel;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB71060", Offset = "0xB71060")]
		[SerializeField]
		private GameObject m_unlockedPanel;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI m_levelsUnlockedProgress;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizedString m_levelsUnlockedText;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UIProgressBar m_progressBar;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB710CC", Offset = "0xB710CC")]
		[SerializeField]
		private Animator m_boardAnimator;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71118", Offset = "0xB71118")]
		[SerializeField]
		private float m_playerOutOfRange;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private int m_amountOfLevelNeededToUnlock;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float m_firstUnlockMinAnimationDelay;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_levelPassedMinAnimationDelay;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB71194", Offset = "0xB71194")]
		[SerializeField]
		private bool m_unlockOnCompletion;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[SerializeField]
		private bool m_disableWhenUnlocked;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private AreaManager.AreaType m_disableOnAreaEnter;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_previousAmountLevelUnlocked;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Animator m_unlockAnimator;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_playerOutOfRangeSqr;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private LODCanvas m_lodCanvas;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_active;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool m_checkedUnlockStateDuringEnableCycle;

		[Token(Token = "0x17000410")]
		private bool IsCompleted
		{
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x122705C", Offset = "0x122705C", VA = "0x122705C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x12270A0", Offset = "0x12270A0", VA = "0x12270A0")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x12270C0", Offset = "0x12270C0", VA = "0x12270C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x1227400", Offset = "0x1227400", VA = "0x1227400")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x1227518", Offset = "0x1227518", VA = "0x1227518")]
		private void OnLODCanvasStateChanged(bool active)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x1227558", Offset = "0x1227558", VA = "0x1227558")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x1227D34", Offset = "0x1227D34", VA = "0x1227D34")]
		private void UnlockIfConditionMet(object dataObject)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x12278C0", Offset = "0x12278C0", VA = "0x12278C0")]
		private void SetVisualsToUnlocked()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x12279A0", Offset = "0x12279A0", VA = "0x12279A0")]
		private void ShowFirstTimeUnlockVisuals()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x1227A48", Offset = "0x1227A48", VA = "0x1227A48")]
		private void SetVisualsToCompleted()
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1227A58", Offset = "0x1227A58", VA = "0x1227A58")]
		private void SetVisualsToInProgress()
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x1227B28", Offset = "0x1227B28", VA = "0x1227B28")]
		public void UpdateProgressText()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x1227ED4", Offset = "0x1227ED4", VA = "0x1227ED4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB834D0", Offset = "0xB834D0")]
		private IEnumerator DelayBeforeStartingAnimation(int animationTrigger, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x12272C0", Offset = "0x12272C0", VA = "0x12272C0")]
		private void SetVisuals(bool progress, bool completed, bool unlocked)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x1227F6C", Offset = "0x1227F6C", VA = "0x1227F6C", Slot = "4")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x1227F70", Offset = "0x1227F70", VA = "0x1227F70")]
		public UnlockWithCompletedLevels()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class VRTMPDropdown : TMP_Dropdown
	{
		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x1234EAC", Offset = "0x1234EAC", VA = "0x1234EAC", Slot = "45")]
		protected override GameObject CreateBlocker(Canvas rootCanvas)
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1234F84", Offset = "0x1234F84", VA = "0x1234F84")]
		public VRTMPDropdown()
		{
		}
	}
}
namespace FNVR2.Systems
{
	[Token(Token = "0x2000510")]
	public class ShaderPreloadingFirstTimeSetUp : MonoBehaviour
	{
		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E200", Offset = "0xB5E200")]
		private sealed class <PerformFirstTimeSetUp>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPreloadingFirstTimeSetUp <>4__this;

			[Token(Token = "0x17000413")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D15")]
				[Address(RVA = "0xFE5C34", Offset = "0xFE5C34", VA = "0xFE5C34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000414")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D17")]
				[Address(RVA = "0xFE5C7C", Offset = "0xFE5C7C", VA = "0xFE5C7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xFE5B04", Offset = "0xFE5B04", VA = "0xFE5B04")]
			[DebuggerHidden]
			public <PerformFirstTimeSetUp>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xFE5B30", Offset = "0xFE5B30", VA = "0xFE5B30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xFE5B34", Offset = "0xFE5B34", VA = "0xFE5B34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D16")]
			[Address(RVA = "0xFE5C3C", Offset = "0xFE5C3C", VA = "0xFE5C3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E210", Offset = "0xB5E210")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ObjectPool> <>9__12_0;

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xFE4DE0", Offset = "0xFE4DE0", VA = "0xFE4DE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0xFE4DE8", Offset = "0xFE4DE8", VA = "0xFE4DE8")]
			internal bool <InitializePooledObject>b__12_0(ObjectPool s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E220", Offset = "0xB5E220")]
		private sealed class <InitializePooledObject>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPreloadingFirstTimeSetUp <>4__this;

			[Token(Token = "0x17000415")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D1E")]
				[Address(RVA = "0xFE548C", Offset = "0xFE548C", VA = "0xFE548C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000416")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D20")]
				[Address(RVA = "0xFE54D4", Offset = "0xFE54D4", VA = "0xFE54D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0xFE5004", Offset = "0xFE5004", VA = "0xFE5004")]
			[DebuggerHidden]
			public <InitializePooledObject>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0xFE5030", Offset = "0xFE5030", VA = "0xFE5030", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0xFE5034", Offset = "0xFE5034", VA = "0xFE5034", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xFE5494", Offset = "0xFE5494", VA = "0xFE5494", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E230", Offset = "0xB5E230")]
		private sealed class <InitializeBLitzEffect>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPreloadingFirstTimeSetUp <>4__this;

			[Token(Token = "0x17000417")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D24")]
				[Address(RVA = "0xFE4FB4", Offset = "0xFE4FB4", VA = "0xFE4FB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000418")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D26")]
				[Address(RVA = "0xFE4FFC", Offset = "0xFE4FFC", VA = "0xFE4FFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xFE4E08", Offset = "0xFE4E08", VA = "0xFE4E08")]
			[DebuggerHidden]
			public <InitializeBLitzEffect>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xFE4E34", Offset = "0xFE4E34", VA = "0xFE4E34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xFE4E38", Offset = "0xFE4E38", VA = "0xFE4E38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D25")]
			[Address(RVA = "0xFE4FBC", Offset = "0xFE4FBC", VA = "0xFE4FBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E240", Offset = "0xB5E240")]
		private sealed class <InitializeShieldEffect>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPreloadingFirstTimeSetUp <>4__this;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <ditherFallOff>5__2;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <ditherDistance>5__3;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <ditherEnabled>5__4;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Faction[] <>7__wrap4;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <>7__wrap5;

			[Token(Token = "0x17000419")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D2A")]
				[Address(RVA = "0xFE5AB4", Offset = "0xFE5AB4", VA = "0xFE5AB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D2C")]
				[Address(RVA = "0xFE5AFC", Offset = "0xFE5AFC", VA = "0xFE5AFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xFE54DC", Offset = "0xFE54DC", VA = "0xFE54DC")]
			[DebuggerHidden]
			public <InitializeShieldEffect>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xFE5508", Offset = "0xFE5508", VA = "0xFE5508", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xFE550C", Offset = "0xFE550C", VA = "0xFE550C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xFE5ABC", Offset = "0xFE5ABC", VA = "0xFE5ABC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB71200", Offset = "0xB71200")]
		public Renderer m_blade;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB71238", Offset = "0xB71238")]
		public Renderer[] m_shieldRenderers;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Faction[] m_factions;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] m_shieldParent;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_blitzInitializationTime;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_poolObjectInitializationTime;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB71270", Offset = "0xB71270")]
		public Camera m_avatarCamera;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_shieldInitializationDone;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_bladeInitializationDone;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool m_poolObjectInitializationDone;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material;

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xF02250", Offset = "0xF02250", VA = "0xF02250")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83580", Offset = "0xB83580")]
		public IEnumerator PerformFirstTimeSetUp()
		{
			return null;
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xF022C8", Offset = "0xF022C8", VA = "0xF022C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB835E0", Offset = "0xB835E0")]
		public IEnumerator InitializePooledObject()
		{
			return null;
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xF02340", Offset = "0xF02340", VA = "0xF02340")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83640", Offset = "0xB83640")]
		public IEnumerator InitializeBLitzEffect()
		{
			return null;
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xF023B8", Offset = "0xF023B8", VA = "0xF023B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB836A0", Offset = "0xB836A0")]
		public IEnumerator InitializeShieldEffect()
		{
			return null;
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xF02430", Offset = "0xF02430", VA = "0xF02430")]
		private void ActivateGameObjectAndChildren(GameObject gameObjectToClean)
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xF02608", Offset = "0xF02608", VA = "0xF02608")]
		public ShaderPreloadingFirstTimeSetUp()
		{
		}
	}
}
namespace FNVR2.Stats
{
	[Token(Token = "0x2000516")]
	public abstract class Stat
	{
		[Token(Token = "0x2000517")]
		public delegate void StatValueChanged(Stat stat);

		[Token(Token = "0x2000518")]
		public enum ValueType
		{
			[Token(Token = "0x4001F81")]
			Current,
			[Token(Token = "0x4001F82")]
			Min,
			[Token(Token = "0x4001F83")]
			Max
		}

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_value;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_minValue;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_maxValue;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_isValueInitialised;

		[Token(Token = "0x1700041B")]
		public float Value
		{
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x1B06E70", Offset = "0x1B06E70", VA = "0x1B06E70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x1B06E78", Offset = "0x1B06E78", VA = "0x1B06E78")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public float MinValue
		{
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x1B06EEC", Offset = "0x1B06EEC", VA = "0x1B06EEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700041D")]
		public float MaxValue
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x1B06EF4", Offset = "0x1B06EF4", VA = "0x1B06EF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700041E")]
		public string Name
		{
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x1B06EFC", Offset = "0x1B06EFC", VA = "0x1B06EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400007A")]
		public static event StatValueChanged OnStatValueChanged
		{
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0x1B06BB8", Offset = "0x1B06BB8", VA = "0x1B06BB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83840", Offset = "0xB83840")]
			add
			{
			}
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0x1B06C74", Offset = "0x1B06C74", VA = "0x1B06C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83850", Offset = "0xB83850")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public event StatValueChanged OnValueChanged
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x1B06D30", Offset = "0x1B06D30", VA = "0x1B06D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83860", Offset = "0xB83860")]
			add
			{
			}
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x1B06DD0", Offset = "0x1B06DD0", VA = "0x1B06DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83870", Offset = "0xB83870")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D36")]
		public abstract StatConfig GetConfig();

		[Token(Token = "0x6001D37")]
		public abstract void OnEventReceived(GameEvent eventObject);

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x1B06FB0", Offset = "0x1B06FB0", VA = "0x1B06FB0")]
		public float GetValue(ValueType valueType = ValueType.Current)
		{
			return default(float);
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x1B06FDC", Offset = "0x1B06FDC", VA = "0x1B06FDC")]
		public string GetFormattedValue(ValueType valueType = ValueType.Current)
		{
			return null;
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x1B07100", Offset = "0x1B07100", VA = "0x1B07100")]
		private void TriggerValueChangedEvents()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x1B0717C", Offset = "0x1B0717C", VA = "0x1B0717C")]
		public void LoadFromData(StatsPlayerDataObject.StatsData data)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x1B071A8", Offset = "0x1B071A8", VA = "0x1B071A8")]
		public void ResetStatValue()
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x1B071B4", Offset = "0x1B071B4", VA = "0x1B071B4")]
		public void OverrideStatValue(float toValue)
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x1B06E80", Offset = "0x1B06E80", VA = "0x1B06E80")]
		private void SetStatValue(float value, bool forceSet = false)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x1B071BC", Offset = "0x1B071BC", VA = "0x1B071BC")]
		protected Stat()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class StatBasic : Stat
	{
		[Token(Token = "0x200051A")]
		private class ConditionState
		{
			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private GameEventMultiPropertyCondition m_condition;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB712A0", Offset = "0xB712A0")]
			private bool <IsSatisfied>k__BackingField;

			[Token(Token = "0x1700041F")]
			public bool IsSatisfied
			{
				[Token(Token = "0x6001D47")]
				[Address(RVA = "0xFED778", Offset = "0xFED778", VA = "0xFED778")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83880", Offset = "0xB83880")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001D48")]
				[Address(RVA = "0xFED780", Offset = "0xFED780", VA = "0xFED780")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83890", Offset = "0xB83890")]
				set
				{
				}
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xFED5D4", Offset = "0xFED5D4", VA = "0xFED5D4")]
			public ConditionState(GameEventMultiPropertyCondition cond)
			{
			}

			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xFED648", Offset = "0xFED648", VA = "0xFED648")]
			public bool ProcessEvent(GameEvent eventObject)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200051B")]
		private class ActionTracker
		{
			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StatBasic m_parent;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private StatBasicConfig.Action m_action;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private ConditionState m_conditionState;

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xFED518", Offset = "0xFED518", VA = "0xFED518")]
			public ActionTracker(StatBasic parent, StatBasicConfig.Action action)
			{
			}

			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0xFED608", Offset = "0xFED608", VA = "0xFED608")]
			public void ProcessEvent(GameEvent eventObject)
			{
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xFED6BC", Offset = "0xFED6BC", VA = "0xFED6BC")]
			private void PerformAction()
			{
			}
		}

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatBasicConfig m_config;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ActionTracker[] m_actionTrackers;

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x1B071D0", Offset = "0x1B071D0", VA = "0x1B071D0")]
		public StatBasic(StatBasicConfig config)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x1B07384", Offset = "0x1B07384", VA = "0x1B07384", Slot = "5")]
		public override void OnEventReceived(GameEvent eventObject)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x1B07400", Offset = "0x1B07400", VA = "0x1B07400", Slot = "4")]
		public override StatConfig GetConfig()
		{
			return null;
		}
	}
	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5E250", Offset = "0xB5E250")]
	public class StatBasicConfig : StatConfig
	{
		[Token(Token = "0x200051D")]
		public enum ActionOperation
		{
			[Token(Token = "0x4001F8D")]
			Increment,
			[Token(Token = "0x4001F8E")]
			Set,
			[Token(Token = "0x4001F8F")]
			ResetTracking,
			[Token(Token = "0x4001F90")]
			Save
		}

		[Serializable]
		[Token(Token = "0x200051E")]
		public class Action
		{
			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ActionOperation m_action;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float m_adjustValue;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameEventMultiPropertyCondition m_conditions;

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xFED78C", Offset = "0xFED78C", VA = "0xFED78C")]
			public Action()
			{
			}
		}

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Action> m_actions;

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x1B07408", Offset = "0x1B07408", VA = "0x1B07408")]
		public StatBasicConfig()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class StatCompound : Stat
	{
		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatCompoundConfig m_config;

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x1B07530", Offset = "0x1B07530", VA = "0x1B07530")]
		public StatCompound(StatCompoundConfig config)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x1B07570", Offset = "0x1B07570", VA = "0x1B07570")]
		public void InitCallbacks()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x1B07C58", Offset = "0x1B07C58", VA = "0x1B07C58")]
		private void OnChildStatValueChanged(Stat stat)
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1B07E18", Offset = "0x1B07E18", VA = "0x1B07E18", Slot = "4")]
		public override StatConfig GetConfig()
		{
			return null;
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x1B07E20", Offset = "0x1B07E20", VA = "0x1B07E20", Slot = "5")]
		public override void OnEventReceived(GameEvent eventObject)
		{
		}
	}
	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5E294", Offset = "0xB5E294")]
	public class StatCompoundConfig : StatConfig
	{
		[Token(Token = "0x2000521")]
		public enum Operator
		{
			[Token(Token = "0x4001F97")]
			Add,
			[Token(Token = "0x4001F98")]
			Subtract,
			[Token(Token = "0x4001F99")]
			Multiply,
			[Token(Token = "0x4001F9A")]
			Divide,
			[Token(Token = "0x4001F9B")]
			Min,
			[Token(Token = "0x4001F9C")]
			Max
		}

		[Serializable]
		[Token(Token = "0x2000522")]
		public struct Operation
		{
			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Operator m_operator;

			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float m_numberOperand;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public StatConfig m_statOperand;

			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Stat m_cachedStatOperand;

			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xFED794", Offset = "0xFED794", VA = "0xFED794")]
			public float PerformOperation(float input)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Operation> m_operations;

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x1B07E24", Offset = "0x1B07E24", VA = "0x1B07E24")]
		public StatCompoundConfig()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public abstract class StatConfig : ScriptableObject
	{
		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_id;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizedString m_displayName;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_valueFormat;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool m_showInProfile;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Stat.ValueType m_profileValueType;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<GameRules> m_gameRules;

		[Token(Token = "0x17000420")]
		public string ID
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0x1B07EA4", Offset = "0x1B07EA4", VA = "0x1B07EA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x1B07488", Offset = "0x1B07488", VA = "0x1B07488")]
		protected StatConfig()
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class StatValueTracker : Stat
	{
		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly StatValueTrackerConfig m_config;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_cachedField;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FieldInfo m_field;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Type m_fieldType;

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x1B0874C", Offset = "0x1B0874C", VA = "0x1B0874C")]
		public StatValueTracker(StatValueTrackerConfig config)
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x1B0878C", Offset = "0x1B0878C", VA = "0x1B0878C", Slot = "4")]
		public override StatConfig GetConfig()
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x1B08794", Offset = "0x1B08794", VA = "0x1B08794", Slot = "5")]
		public override void OnEventReceived(GameEvent eventObject)
		{
		}
	}
	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5E2D8", Offset = "0xB5E2D8")]
	public class StatValueTrackerConfig : StatConfig
	{
		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameEventAndProperty m_statEvent;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[GameEvent]
		public string m_saveEvent;

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x1B089F4", Offset = "0x1B089F4", VA = "0x1B089F4")]
		public StatValueTrackerConfig()
		{
		}
	}
	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5E31C", Offset = "0xB5E31C")]
	public class StatsConfig : ScriptableObject
	{
		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<StatConfig> m_playerStatConfigs;

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x1B08D00", Offset = "0x1B08D00", VA = "0x1B08D00")]
		public StatsConfig()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class StatsManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000528")]
		public class StatCondition
		{
			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatConfig m_stat;

			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stat.ValueType m_inspectedStatValue;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Utils.Operator m_operation;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float m_targetValue;

			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xFED98C", Offset = "0xFED98C", VA = "0xFED98C")]
			public bool IsConditionMet()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xFEDA78", Offset = "0xFEDA78", VA = "0xFEDA78")]
			public StatCondition()
			{
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E360", Offset = "0xB5E360")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StatConfig config;

			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0xFED8EC", Offset = "0xFED8EC", VA = "0xFED8EC")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0xFED8F4", Offset = "0xFED8F4", VA = "0xFED8F4")]
			internal bool <GetStat>b__0(StatCompound compound)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB712D0", Offset = "0xB712D0")]
		public StatsConfig m_config;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<string, HashSet<Stat>> m_eventStatMapping;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, HashSet<Stat>> m_saveEventMapping;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<StatCompound> m_compoundStats;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isInitialised;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StatsManager s_instance;

		[Token(Token = "0x17000421")]
		public bool IsInitialised
		{
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x1B08D84", Offset = "0x1B08D84", VA = "0x1B08D84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000422")]
		public static StatsManager Instance
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x1B07748", Offset = "0x1B07748", VA = "0x1B07748")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400007C")]
		public static event Action OnInitialized
		{
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0x1B08334", Offset = "0x1B08334", VA = "0x1B08334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB838A0", Offset = "0xB838A0")]
			add
			{
			}
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x1B08578", Offset = "0x1B08578", VA = "0x1B08578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB838B0", Offset = "0xB838B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x1B08D8C", Offset = "0x1B08D8C", VA = "0x1B08D8C")]
		private void Initialise()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x1B09844", Offset = "0x1B09844", VA = "0x1B09844")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x1B09848", Offset = "0x1B09848", VA = "0x1B09848")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x1B08F40", Offset = "0x1B08F40", VA = "0x1B08F40")]
		private void AddStats(List<StatConfig> statConfigs)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x1B07834", Offset = "0x1B07834", VA = "0x1B07834")]
		public Stat GetStat(StatConfig config)
		{
			return null;
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x1B09980", Offset = "0x1B09980", VA = "0x1B09980")]
		public float GetStatValue(StatConfig config, Stat.ValueType statValue = Stat.ValueType.Current)
		{
			return default(float);
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x1B099D4", Offset = "0x1B099D4", VA = "0x1B099D4")]
		private void OnEventTriggered(GameEvent eventObject)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x1B09F14", Offset = "0x1B09F14", VA = "0x1B09F14")]
		private void OnStatsPlayerDataChanged(object dataObject)
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x1B0A2F8", Offset = "0x1B0A2F8", VA = "0x1B0A2F8")]
		public void ResetAllStats()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x1B0A5BC", Offset = "0x1B0A5BC", VA = "0x1B0A5BC")]
		public StatsManager()
		{
		}
	}
}
namespace FNVR2.Networking
{
	[Token(Token = "0x200052A")]
	public class CustomFusionVoiceClient : FusionVoiceClient
	{
		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x108AD7C", Offset = "0x108AD7C", VA = "0x108AD7C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB838C0", Offset = "0xB838C0")]
		private static void Log(string message, object sender)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x108AFA0", Offset = "0x108AFA0", VA = "0x108AFA0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x108B60C", Offset = "0x108B60C", VA = "0x108B60C", Slot = "30")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x108B7AC", Offset = "0x108B7AC", VA = "0x108B7AC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x108B874", Offset = "0x108B874", VA = "0x108B874")]
		private void OnPaused(bool isPaused)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x108BA0C", Offset = "0x108BA0C", VA = "0x108BA0C")]
		public CustomFusionVoiceClient()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x108BA70", Offset = "0x108BA70", VA = "0x108BA70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB838F8", Offset = "0xB838F8")]
		private void <Start>b__2_0(bool isAvailable)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x108BA90", Offset = "0x108BA90", VA = "0x108BA90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83908", Offset = "0xB83908")]
		private void <OnPaused>b__4_0(bool isAvailable)
		{
		}
	}
	[Token(Token = "0x200052B")]
	public class MultiplayerCustomizationManager : MonoBehaviour
	{
		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CustomizationConfigColourPalette> m_defaultColourList;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MultiplayerCustomizationManager Instance;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<int> m_availableColourIndexes;

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xF1F918", Offset = "0xF1F918", VA = "0xF1F918")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xF1F9D4", Offset = "0xF1F9D4", VA = "0xF1F9D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xF1FA24", Offset = "0xF1FA24", VA = "0xF1FA24")]
		public int GetRandomColourPaletteIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xF1FAAC", Offset = "0xF1FAAC", VA = "0xF1FAAC")]
		public void ReturnColourPaletteToPool(int paletteIndex)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xF1FB10", Offset = "0xF1FB10", VA = "0xF1FB10")]
		public CustomizationConfigColourPalette GetColourPaletteConfig(int index)
		{
			return null;
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xF1FB84", Offset = "0xF1FB84", VA = "0xF1FB84")]
		public MultiplayerCustomizationManager()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class MultiplayerHelper : MonoBehaviour
	{
		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xF1FC7C", Offset = "0xF1FC7C", VA = "0xF1FC7C")]
		public void Login()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xF1FD24", Offset = "0xF1FD24", VA = "0xF1FD24", Slot = "4")]
		public virtual void AutoConnect()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xF1FDCC", Offset = "0xF1FDCC", VA = "0xF1FDCC", Slot = "5")]
		public virtual void ConnectToRoom(SessionInfo sessionInfo)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xF1FE4C", Offset = "0xF1FE4C", VA = "0xF1FE4C", Slot = "6")]
		public virtual void ConnectToRoom(string roomName)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xF1FEC8", Offset = "0xF1FEC8", VA = "0xF1FEC8", Slot = "7")]
		public virtual void AutoConnectLocalNetwork()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xF20000", Offset = "0xF20000", VA = "0xF20000", Slot = "8")]
		public virtual void HostPrivate()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xF20114", Offset = "0xF20114", VA = "0xF20114", Slot = "9")]
		public virtual void Disconnect()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xF201AC", Offset = "0xF201AC", VA = "0xF201AC")]
		public MultiplayerHelper()
		{
		}
	}
	[Token(Token = "0x200052D")]
	public class MultiplayerManager : MonoBehaviour
	{
		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E370", Offset = "0xB5E370")]
		private sealed class <OnServerUnresponsiveCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isUnresponsive;

			[Token(Token = "0x17000426")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DAA")]
				[Address(RVA = "0xFB1208", Offset = "0xFB1208", VA = "0xFB1208", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000427")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DAC")]
				[Address(RVA = "0xFB1250", Offset = "0xFB1250", VA = "0xFB1250", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0xFB105C", Offset = "0xFB105C", VA = "0xFB105C")]
			[DebuggerHidden]
			public <OnServerUnresponsiveCoroutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0xFB1088", Offset = "0xFB1088", VA = "0xFB1088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0xFB108C", Offset = "0xFB108C", VA = "0xFB108C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0xFB1210", Offset = "0xFB1210", VA = "0xFB1210", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E380", Offset = "0xB5E380")]
		private sealed class <ConnectCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AreaManager.AreaType area;

			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string roomName;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isPublic;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string region;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Quaternion <relativeRotation>5__2;

			[Token(Token = "0x17000428")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB0")]
				[Address(RVA = "0xFDDA3C", Offset = "0xFDDA3C", VA = "0xFDDA3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000429")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB2")]
				[Address(RVA = "0xFDDA84", Offset = "0xFDDA84", VA = "0xFDDA84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0xFDD150", Offset = "0xFDD150", VA = "0xFDD150")]
			[DebuggerHidden]
			public <ConnectCoroutine>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0xFDD17C", Offset = "0xFDD17C", VA = "0xFDD17C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0xFDD180", Offset = "0xFDD180", VA = "0xFDD180", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0xFDDA44", Offset = "0xFDDA44", VA = "0xFDDA44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E390", Offset = "0xB5E390")]
		private sealed class <DisconnectCoroutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AreaManager.AreaType area;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB6")]
				[Address(RVA = "0xFDDF8C", Offset = "0xFDDF8C", VA = "0xFDDF8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB8")]
				[Address(RVA = "0xFDDFD4", Offset = "0xFDDFD4", VA = "0xFDDFD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0xFDDA8C", Offset = "0xFDDA8C", VA = "0xFDDA8C")]
			[DebuggerHidden]
			public <DisconnectCoroutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xFDDAB8", Offset = "0xFDDAB8", VA = "0xFDDAB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0xFDDABC", Offset = "0xFDDABC", VA = "0xFDDABC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0xFDDF94", Offset = "0xFDDF94", VA = "0xFDDF94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E3A0", Offset = "0xB5E3A0")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool accepted;

			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0xFDD134", Offset = "0xFDD134", VA = "0xFDD134")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0xFDD13C", Offset = "0xFDD13C", VA = "0xFDD13C")]
			internal void <DisconnectCoroutine>b__0()
			{
			}

			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0xFDD148", Offset = "0xFDD148", VA = "0xFDD148")]
			internal bool <DisconnectCoroutine>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E3B0", Offset = "0xB5E3B0")]
		private sealed class <DisconnectCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AreaManager.AreaType area;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass30_0 <>8__1;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string messageTerm;

			[Token(Token = "0x1700042C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DBF")]
				[Address(RVA = "0xFDE848", Offset = "0xFDE848", VA = "0xFDE848", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC1")]
				[Address(RVA = "0xFDE890", Offset = "0xFDE890", VA = "0xFDE890", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0xFDDFDC", Offset = "0xFDDFDC", VA = "0xFDDFDC")]
			[DebuggerHidden]
			public <DisconnectCoroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0xFDE008", Offset = "0xFDE008", VA = "0xFDE008", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0xFDE00C", Offset = "0xFDE00C", VA = "0xFDE00C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0xFDE850", Offset = "0xFDE850", VA = "0xFDE850", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E3C0", Offset = "0xB5E3C0")]
		private sealed class <Leave>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x1700042E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC5")]
				[Address(RVA = "0xFB0CEC", Offset = "0xFB0CEC", VA = "0xFB0CEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC7")]
				[Address(RVA = "0xFB0D34", Offset = "0xFB0D34", VA = "0xFB0D34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0xFB0B64", Offset = "0xFB0B64", VA = "0xFB0B64")]
			[DebuggerHidden]
			public <Leave>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xFB0B90", Offset = "0xFB0B90", VA = "0xFB0B90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xFB0B94", Offset = "0xFB0B94", VA = "0xFB0B94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0xFB0CF4", Offset = "0xFB0CF4", VA = "0xFB0CF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E3D0", Offset = "0xB5E3D0")]
		private sealed class <LoadSceneWithDialog>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AreaManager.AreaType area;

			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool keepDialogOpen;

			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SceneConfig <config>5__2;

			[Token(Token = "0x17000430")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DCB")]
				[Address(RVA = "0xFB100C", Offset = "0xFB100C", VA = "0xFB100C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000431")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DCD")]
				[Address(RVA = "0xFB1054", Offset = "0xFB1054", VA = "0xFB1054", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0xFB0D3C", Offset = "0xFB0D3C", VA = "0xFB0D3C")]
			[DebuggerHidden]
			public <LoadSceneWithDialog>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0xFB0D68", Offset = "0xFB0D68", VA = "0xFB0D68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xFB0D6C", Offset = "0xFB0D6C", VA = "0xFB0D6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xFB1014", Offset = "0xFB1014", VA = "0xFB1014", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E3E0", Offset = "0xB5E3E0")]
		private sealed class <FadeIn>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000432")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD1")]
				[Address(RVA = "0xFDEA2C", Offset = "0xFDEA2C", VA = "0xFDEA2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000433")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD3")]
				[Address(RVA = "0xFDEA74", Offset = "0xFDEA74", VA = "0xFDEA74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0xFDE898", Offset = "0xFDE898", VA = "0xFDE898")]
			[DebuggerHidden]
			public <FadeIn>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0xFDE8C4", Offset = "0xFDE8C4", VA = "0xFDE8C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0xFDE8C8", Offset = "0xFDE8C8", VA = "0xFDE8C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xFDEA34", Offset = "0xFDEA34", VA = "0xFDEA34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E3F0", Offset = "0xB5E3F0")]
		private sealed class <FadeOut>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000434")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD7")]
				[Address(RVA = "0xFDEC3C", Offset = "0xFDEC3C", VA = "0xFDEC3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000435")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD9")]
				[Address(RVA = "0xFDEC84", Offset = "0xFDEC84", VA = "0xFDEC84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0xFDEA7C", Offset = "0xFDEA7C", VA = "0xFDEA7C")]
			[DebuggerHidden]
			public <FadeOut>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0xFDEAA8", Offset = "0xFDEAA8", VA = "0xFDEAA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0xFDEAAC", Offset = "0xFDEAAC", VA = "0xFDEAAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0xFDEC44", Offset = "0xFDEC44", VA = "0xFDEC44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E400", Offset = "0xB5E400")]
		private sealed class <WaitForDestroyedPlayer>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DDD")]
				[Address(RVA = "0xFB17E4", Offset = "0xFB17E4", VA = "0xFB17E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DDF")]
				[Address(RVA = "0xFB182C", Offset = "0xFB182C", VA = "0xFB182C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0xFB15F4", Offset = "0xFB15F4", VA = "0xFB15F4")]
			[DebuggerHidden]
			public <WaitForDestroyedPlayer>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0xFB1620", Offset = "0xFB1620", VA = "0xFB1620", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0xFB1624", Offset = "0xFB1624", VA = "0xFB1624", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0xFB17EC", Offset = "0xFB17EC", VA = "0xFB17EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E410", Offset = "0xB5E410")]
		private sealed class <WaitForCreatedMultiPlayer>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DE3")]
				[Address(RVA = "0xFB1450", Offset = "0xFB1450", VA = "0xFB1450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE5")]
				[Address(RVA = "0xFB1498", Offset = "0xFB1498", VA = "0xFB1498", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0xFB1258", Offset = "0xFB1258", VA = "0xFB1258")]
			[DebuggerHidden]
			public <WaitForCreatedMultiPlayer>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0xFB1284", Offset = "0xFB1284", VA = "0xFB1284", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0xFB1288", Offset = "0xFB1288", VA = "0xFB1288", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0xFB1458", Offset = "0xFB1458", VA = "0xFB1458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E420", Offset = "0xB5E420")]
		private sealed class <WaitForCreatedSinglePlayer>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerManager <>4__this;

			[Token(Token = "0x1700043A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DE9")]
				[Address(RVA = "0xFB15A4", Offset = "0xFB15A4", VA = "0xFB15A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DEB")]
				[Address(RVA = "0xFB15EC", Offset = "0xFB15EC", VA = "0xFB15EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0xFB14A0", Offset = "0xFB14A0", VA = "0xFB14A0")]
			[DebuggerHidden]
			public <WaitForCreatedSinglePlayer>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0xFB14CC", Offset = "0xFB14CC", VA = "0xFB14CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0xFB14D0", Offset = "0xFB14D0", VA = "0xFB14D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0xFB15AC", Offset = "0xFB15AC", VA = "0xFB15AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71300", Offset = "0xB71300")]
		private static MultiplayerManager <Instance>k__BackingField;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71310", Offset = "0xB71310")]
		private AreaManager.AreaType <CurrentArea>k__BackingField;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioListener m_audioListener;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator m_unresponsiveCoroutine;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71320", Offset = "0xB71320")]
		private bool <IsConnectingOrDisconnecting>k__BackingField;

		[Token(Token = "0x17000423")]
		public static MultiplayerManager Instance
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xF20208", Offset = "0xF20208", VA = "0xF20208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83928", Offset = "0xB83928")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xF201B4", Offset = "0xF201B4", VA = "0xF201B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83918", Offset = "0xB83918")]
			private set
			{
			}
		}

		[Token(Token = "0x17000424")]
		public AreaManager.AreaType CurrentArea
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xF2025C", Offset = "0xF2025C", VA = "0xF2025C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83948", Offset = "0xB83948")]
			get
			{
				return default(AreaManager.AreaType);
			}
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xF20254", Offset = "0xF20254", VA = "0xF20254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83938", Offset = "0xB83938")]
			private set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public bool IsConnectingOrDisconnecting
		{
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0xF20264", Offset = "0xF20264", VA = "0xF20264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83958", Offset = "0xB83958")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0xF2026C", Offset = "0xF2026C", VA = "0xF2026C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83968", Offset = "0xB83968")]
			set
			{
			}
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xF20278", Offset = "0xF20278", VA = "0xF20278")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xF202CC", Offset = "0xF202CC", VA = "0xF202CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xF2043C", Offset = "0xF2043C", VA = "0xF2043C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xF205E8", Offset = "0xF205E8", VA = "0xF205E8")]
		private void OnSessionEnded(ShutdownReason reason)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xF20A40", Offset = "0xF20A40", VA = "0xF20A40")]
		private void OnServerTimeout()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xF20D04", Offset = "0xF20D04", VA = "0xF20D04")]
		private void OnServerUnresponsive(bool isUnresponsive)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xF20D70", Offset = "0xF20D70", VA = "0xF20D70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83978", Offset = "0xB83978")]
		private IEnumerator OnServerUnresponsiveCoroutine(bool isUnresponsive)
		{
			return null;
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xF1FF1C", Offset = "0xF1FF1C", VA = "0xF1FF1C")]
		public void ConnectLocalNetwork()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xF20DFC", Offset = "0xF20DFC", VA = "0xF20DFC")]
		public void ConnectPrivateMachineName()
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xF20E44", Offset = "0xF20E44", VA = "0xF20E44")]
		public void Connect(AreaManager.AreaType area, [Optional] string region)
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xF1FD9C", Offset = "0xF1FD9C", VA = "0xF1FD9C")]
		public void Connect([Optional] string roomName, bool isPublic = true, [Optional] string region, AreaManager.AreaType area = AreaManager.AreaType.SocialHubInterior)
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xF20060", Offset = "0xF20060", VA = "0xF20060")]
		public string HostPrivate([Optional] string roomName, [Optional] string region, AreaManager.AreaType area = AreaManager.AreaType.SocialHubInterior)
		{
			return null;
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xF20F44", Offset = "0xF20F44", VA = "0xF20F44")]
		public void JoinPrivate(string roomName, [Optional] string region, AreaManager.AreaType area = AreaManager.AreaType.SocialHubInterior)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xF20E80", Offset = "0xF20E80", VA = "0xF20E80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB839D8", Offset = "0xB839D8")]
		private IEnumerator ConnectCoroutine([Optional] string roomName, bool isPublic = true, [Optional] string region, AreaManager.AreaType area = AreaManager.AreaType.SocialHubInterior)
		{
			return null;
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xF20180", Offset = "0xF20180", VA = "0xF20180")]
		public void Disconnect(AreaManager.AreaType area = AreaManager.AreaType.SocialHubExteriorExit)
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xF20F7C", Offset = "0xF20F7C", VA = "0xF20F7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83A38", Offset = "0xB83A38")]
		private IEnumerator DisconnectCoroutine(AreaManager.AreaType area = AreaManager.AreaType.SocialHubExteriorExit)
		{
			return null;
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xF209A4", Offset = "0xF209A4", VA = "0xF209A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83A98", Offset = "0xB83A98")]
		private IEnumerator DisconnectCoroutine(string messageTerm, AreaManager.AreaType area = AreaManager.AreaType.SocialHubExteriorExit)
		{
			return null;
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xF21004", Offset = "0xF21004", VA = "0xF21004")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83AF8", Offset = "0xB83AF8")]
		private IEnumerator Leave()
		{
			return null;
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xF2107C", Offset = "0xF2107C", VA = "0xF2107C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83B58", Offset = "0xB83B58")]
		private IEnumerator LoadSceneWithDialog(AreaManager.AreaType area, bool keepDialogOpen = false)
		{
			return null;
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xF210FC", Offset = "0xF210FC", VA = "0xF210FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83BB8", Offset = "0xB83BB8")]
		private IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xF21158", Offset = "0xF21158", VA = "0xF21158")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83C18", Offset = "0xB83C18")]
		private IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xF211B4", Offset = "0xF211B4", VA = "0xF211B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83C78", Offset = "0xB83C78")]
		private IEnumerator WaitForDestroyedPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xF2122C", Offset = "0xF2122C", VA = "0xF2122C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83CD8", Offset = "0xB83CD8")]
		private IEnumerator WaitForCreatedMultiPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xF212A4", Offset = "0xF212A4", VA = "0xF212A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB83D38", Offset = "0xB83D38")]
		private IEnumerator WaitForCreatedSinglePlayer()
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xF2131C", Offset = "0xF2131C", VA = "0xF2131C")]
		private void DestroyPlayer()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xF21408", Offset = "0xF21408", VA = "0xF21408")]
		public MultiplayerManager()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xF21410", Offset = "0xF21410", VA = "0xF21410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB83D98", Offset = "0xB83D98")]
		private void <OnServerUnresponsiveCoroutine>b__20_0()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class ServerManager : MonoBehaviour, INetworkRunnerCallbacks
	{
		[StructLayout(3)]
		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E430", Offset = "0xB5E430")]
		private struct <LoginSync>d__98 : IAsyncStateMachine
		{
			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerManager <>4__this;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xFE390C", Offset = "0xFE390C", VA = "0xFE390C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xFE3AE0", Offset = "0xFE3AE0", VA = "0xFE3AE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E440", Offset = "0xB5E440")]
		private struct <Login>d__99 : IAsyncStateMachine
		{
			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ServerManager <>4__this;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<Fusion.Photon.Realtime.AuthenticationValues> <>u__1;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<StartGameResult> <>u__2;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__3;

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xFE3290", Offset = "0xFE3290", VA = "0xFE3290", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xFE38B0", Offset = "0xFE38B0", VA = "0xFE38B0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E450", Offset = "0xB5E450")]
		private struct <Logout>d__100 : IAsyncStateMachine
		{
			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ServerManager <>4__this;

			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xFE3AEC", Offset = "0xFE3AEC", VA = "0xFE3AEC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xFE3CEC", Offset = "0xFE3CEC", VA = "0xFE3CEC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E460", Offset = "0xB5E460")]
		private struct <HostOrJoinAny>d__102 : IAsyncStateMachine
		{
			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<ShutdownReason> <>t__builder;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ServerManager <>4__this;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string roomName;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isPublic;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string region;

			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<ShutdownReason> <>u__1;

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xFE2B68", Offset = "0xFE2B68", VA = "0xFE2B68", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xFE2DE0", Offset = "0xFE2DE0", VA = "0xFE2DE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E470", Offset = "0xB5E470")]
		private struct <Join>d__103 : IAsyncStateMachine
		{
			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<ShutdownReason> <>t__builder;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ServerManager <>4__this;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string roomName;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isPublic;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string region;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<ShutdownReason> <>u__1;

			[Token(Token = "0x6001E47")]
			[Address(RVA = "0xFE2E3C", Offset = "0xFE2E3C", VA = "0xFE2E3C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xFE3090", Offset = "0xFE3090", VA = "0xFE3090", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E480", Offset = "0xB5E480")]
		private struct <Host>d__104 : IAsyncStateMachine
		{
			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ServerManager <>4__this;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string roomName;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isPublic;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string region;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<ShutdownReason> <>u__1;

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xFE2894", Offset = "0xFE2894", VA = "0xFE2894", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xFE2B0C", Offset = "0xFE2B0C", VA = "0xFE2B0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E490", Offset = "0xB5E490")]
		private struct <StartGame>d__105 : IAsyncStateMachine
		{
			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<ShutdownReason> <>t__builder;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ServerManager <>4__this;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string region;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Fusion.GameMode gameMode;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string roomName;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isPublic;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <startConnectionTime>5__2;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<Fusion.Photon.Realtime.AuthenticationValues> <>u__1;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<StartGameResult> <>u__2;

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xFE3CF8", Offset = "0xFE3CF8", VA = "0xFE3CF8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xFE48F4", Offset = "0xFE48F4", VA = "0xFE48F4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E4A0", Offset = "0xB5E4A0")]
		private struct <Leave>d__107 : IAsyncStateMachine
		{
			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ServerManager <>4__this;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xFE30EC", Offset = "0xFE30EC", VA = "0xFE30EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0xFE3284", Offset = "0xFE3284", VA = "0xFE3284", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71330", Offset = "0xB71330")]
		private static ServerManager <Instance>k__BackingField;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetworkRunner m_runnerPrefab;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkPrefabRef m_playerPrefab;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NetworkSession m_sessionPrefab;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int m_playerCount;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int m_serverUnresponsiveMinTicks;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_serverTimeoutMinTicks;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB713D0", Offset = "0xB713D0")]
		private readonly Dictionary<PlayerRef, NetworkPlayer> <NetworkPlayers>k__BackingField;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB713E0", Offset = "0xB713E0")]
		private bool <LoggedIn>k__BackingField;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB713F0", Offset = "0xB713F0")]
		private string <RoomName>k__BackingField;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71400", Offset = "0xB71400")]
		private bool <InGame>k__BackingField;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71410", Offset = "0xB71410")]
		private bool <IsPublic>k__BackingField;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71420", Offset = "0xB71420")]
		private bool <Initialized>k__BackingField;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71430", Offset = "0xB71430")]
		private Fusion.Photon.Realtime.AppSettings <AppSettings>k__BackingField;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71440", Offset = "0xB71440")]
		private NetworkRunner <Runner>k__BackingField;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71450", Offset = "0xB71450")]
		private List<SessionInfo> <SessionList>k__BackingField;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71460", Offset = "0xB71460")]
		private NetworkSession <Session>k__BackingField;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71470", Offset = "0xB71470")]
		private Recorder <Recorder>k__BackingField;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string s_sessionLobbyName;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_sessionStartTime;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_sessionMaxPlayers;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_isStateAuthority;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool m_serverUnresponsive;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool m_serverTimeout;

		[Token(Token = "0x1700043C")]
		public static ServerManager Instance
		{
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xEFBAF4", Offset = "0xEFBAF4", VA = "0xEFBAF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84128", Offset = "0xB84128")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0xEFBA88", Offset = "0xEFBA88", VA = "0xEFBA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84118", Offset = "0xB84118")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public Dictionary<PlayerRef, NetworkPlayer> NetworkPlayers
		{
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xEFCCC8", Offset = "0xEFCCC8", VA = "0xEFCCC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84258", Offset = "0xB84258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043E")]
		public bool LoggedIn
		{
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xEFCCDC", Offset = "0xEFCCDC", VA = "0xEFCCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84278", Offset = "0xB84278")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xEFCCD0", Offset = "0xEFCCD0", VA = "0xEFCCD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84268", Offset = "0xB84268")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public string RoomName
		{
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0xEFCCEC", Offset = "0xEFCCEC", VA = "0xEFCCEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84298", Offset = "0xB84298")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xEFCCE4", Offset = "0xEFCCE4", VA = "0xEFCCE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84288", Offset = "0xB84288")]
			private set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public bool InGame
		{
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xEFCD00", Offset = "0xEFCD00", VA = "0xEFCD00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB842B8", Offset = "0xB842B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xEFCCF4", Offset = "0xEFCCF4", VA = "0xEFCCF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB842A8", Offset = "0xB842A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public bool IsPublic
		{
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xEFCD14", Offset = "0xEFCD14", VA = "0xEFCD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB842D8", Offset = "0xB842D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xEFCD08", Offset = "0xEFCD08", VA = "0xEFCD08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB842C8", Offset = "0xB842C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public bool IsFull
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xEFCD1C", Offset = "0xEFCD1C", VA = "0xEFCD1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000443")]
		public int PlayerCount
		{
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xEFCD4C", Offset = "0xEFCD4C", VA = "0xEFCD4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000444")]
		public bool Initialized
		{
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xEFCD80", Offset = "0xEFCD80", VA = "0xEFCD80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB842F8", Offset = "0xB842F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xEFCD74", Offset = "0xEFCD74", VA = "0xEFCD74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB842E8", Offset = "0xB842E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000445")]
		public Fusion.Photon.Realtime.AppSettings AppSettings
		{
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xEFCD90", Offset = "0xEFCD90", VA = "0xEFCD90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84318", Offset = "0xB84318")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xEFCD88", Offset = "0xEFCD88", VA = "0xEFCD88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84308", Offset = "0xB84308")]
			private set
			{
			}
		}

		[Token(Token = "0x17000446")]
		public NetworkRunner Runner
		{
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0xEFCDA0", Offset = "0xEFCDA0", VA = "0xEFCDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84338", Offset = "0xB84338")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xEFCD98", Offset = "0xEFCD98", VA = "0xEFCD98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84328", Offset = "0xB84328")]
			private set
			{
			}
		}

		[Token(Token = "0x17000447")]
		public List<SessionInfo> SessionList
		{
			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xEFCDB0", Offset = "0xEFCDB0", VA = "0xEFCDB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84358", Offset = "0xB84358")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xEFCDA8", Offset = "0xEFCDA8", VA = "0xEFCDA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84348", Offset = "0xB84348")]
			private set
			{
			}
		}

		[Token(Token = "0x17000448")]
		public NetworkSession Session
		{
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0xEFCDC0", Offset = "0xEFCDC0", VA = "0xEFCDC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84378", Offset = "0xB84378")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xEFCDB8", Offset = "0xEFCDB8", VA = "0xEFCDB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84368", Offset = "0xB84368")]
			private set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public IEnumerable<PlayerRef> Players
		{
			[Token(Token = "0x6001E15")]
			[Address(RVA = "0xEFCDC8", Offset = "0xEFCDC8", VA = "0xEFCDC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		public int NumSpawnedPlayers
		{
			[Token(Token = "0x6001E16")]
			[Address(RVA = "0xEFCE5C", Offset = "0xEFCE5C", VA = "0xEFCE5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700044B")]
		public bool IsStateAuthority
		{
			[Token(Token = "0x6001E17")]
			[Address(RVA = "0xEFCEB0", Offset = "0xEFCEB0", VA = "0xEFCEB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700044C")]
		public Recorder Recorder
		{
			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xEFCEB8", Offset = "0xEFCEB8", VA = "0xEFCEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84388", Offset = "0xB84388")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xEFCEC0", Offset = "0xEFCEC0", VA = "0xEFCEC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84398", Offset = "0xB84398")]
			private set
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public static event Action<NetworkRunner, NetworkInput> OnInputCollect
		{
			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0xEFBB58", Offset = "0xEFBB58", VA = "0xEFBB58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84138", Offset = "0xB84138")]
			add
			{
			}
			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xEFBC50", Offset = "0xEFBC50", VA = "0xEFBC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84148", Offset = "0xB84148")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public static event Action<NetworkRunner, PlayerRef> OnPlayerConnected
		{
			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xEFBD48", Offset = "0xEFBD48", VA = "0xEFBD48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84158", Offset = "0xB84158")]
			add
			{
			}
			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xEFBE40", Offset = "0xEFBE40", VA = "0xEFBE40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84168", Offset = "0xB84168")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public static event Action<NetworkRunner, PlayerRef> OnPlayerDisconnected
		{
			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0xEFBF38", Offset = "0xEFBF38", VA = "0xEFBF38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84178", Offset = "0xB84178")]
			add
			{
			}
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xEFC030", Offset = "0xEFC030", VA = "0xEFC030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84188", Offset = "0xB84188")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public static event Action<List<SessionInfo>> OnSessionsUpdated
		{
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xEFC128", Offset = "0xEFC128", VA = "0xEFC128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84198", Offset = "0xB84198")]
			add
			{
			}
			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xEFC220", Offset = "0xEFC220", VA = "0xEFC220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB841A8", Offset = "0xB841A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public static event Action<bool> OnStartGame
		{
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0xEFC318", Offset = "0xEFC318", VA = "0xEFC318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB841B8", Offset = "0xB841B8")]
			add
			{
			}
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xEFC410", Offset = "0xEFC410", VA = "0xEFC410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB841C8", Offset = "0xB841C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public static event Action<ShutdownReason> OnSessionEnded
		{
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xEFC508", Offset = "0xEFC508", VA = "0xEFC508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB841D8", Offset = "0xB841D8")]
			add
			{
			}
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xEFC600", Offset = "0xEFC600", VA = "0xEFC600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB841E8", Offset = "0xB841E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public static event Action<NetworkRunner, PlayerRef> OnBeforePlayerSpawned
		{
			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0xEFC6F8", Offset = "0xEFC6F8", VA = "0xEFC6F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB841F8", Offset = "0xB841F8")]
			add
			{
			}
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xEFC7F0", Offset = "0xEFC7F0", VA = "0xEFC7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84208", Offset = "0xB84208")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public static event Action<bool> OnServerUnresponsive
		{
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xEFC8E8", Offset = "0xEFC8E8", VA = "0xEFC8E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84218", Offset = "0xB84218")]
			add
			{
			}
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xEFC9E0", Offset = "0xEFC9E0", VA = "0xEFC9E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84228", Offset = "0xB84228")]
			remove
			{
			}
		}

		[Token(Token = "0x14000085")]
		public static event Action OnServerTimeout
		{
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0xEFCAD8", Offset = "0xEFCAD8", VA = "0xEFCAD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84238", Offset = "0xB84238")]
			add
			{
			}
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xEFCBD0", Offset = "0xEFCBD0", VA = "0xEFCBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84248", Offset = "0xB84248")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xEFCEC8", Offset = "0xEFCEC8", VA = "0xEFCEC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xEFD0B8", Offset = "0xEFD0B8", VA = "0xEFD0B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xEFD288", Offset = "0xEFD288", VA = "0xEFD288")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB843A8", Offset = "0xB843A8")]
		public void LoginSync()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xEFD368", Offset = "0xEFD368", VA = "0xEFD368")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB84408", Offset = "0xB84408")]
		public Task<bool> Login()
		{
			return null;
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xEFD4B4", Offset = "0xEFD4B4", VA = "0xEFD4B4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB84468", Offset = "0xB84468")]
		private Task Logout()
		{
			return null;
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xEFD5D0", Offset = "0xEFD5D0", VA = "0xEFD5D0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xEFD674", Offset = "0xEFD674", VA = "0xEFD674")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB844C8", Offset = "0xB844C8")]
		public Task<ShutdownReason> HostOrJoinAny([Optional] string roomName, bool isPublic = true, [Optional] string region)
		{
			return null;
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xEFD7F4", Offset = "0xEFD7F4", VA = "0xEFD7F4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB84528", Offset = "0xB84528")]
		public Task<ShutdownReason> Join(string roomName, bool isPublic = true, [Optional] string region)
		{
			return null;
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xEFD974", Offset = "0xEFD974", VA = "0xEFD974")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB84588", Offset = "0xB84588")]
		public Task<string> Host([Optional] string roomName, bool isPublic = true, [Optional] string region)
		{
			return null;
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xEFDAF4", Offset = "0xEFDAF4", VA = "0xEFDAF4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB845E8", Offset = "0xB845E8")]
		private Task<ShutdownReason> StartGame(Fusion.GameMode gameMode, string roomName, bool isPublic = true, [Optional] string region)
		{
			return null;
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xEFDC84", Offset = "0xEFDC84", VA = "0xEFDC84")]
		public static string GenerateInviteCode()
		{
			return null;
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xEFD16C", Offset = "0xEFD16C", VA = "0xEFD16C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB84648", Offset = "0xB84648")]
		public Task Leave()
		{
			return null;
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xEFDD44", Offset = "0xEFDD44", VA = "0xEFDD44", Slot = "4")]
		public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xEFE0FC", Offset = "0xEFE0FC", VA = "0xEFE0FC", Slot = "5")]
		public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xEFE32C", Offset = "0xEFE32C", VA = "0xEFE32C")]
		public void NetworkPlayerSpawned(PlayerRef player, NetworkPlayer networkPlayer)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xEFE3D8", Offset = "0xEFE3D8", VA = "0xEFE3D8")]
		public void NetworkPlayerDespawned(PlayerRef player)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xEFE43C", Offset = "0xEFE43C", VA = "0xEFE43C", Slot = "6")]
		public void OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xEFE4EC", Offset = "0xEFE4EC", VA = "0xEFE4EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xEFE720", Offset = "0xEFE720", VA = "0xEFE720", Slot = "7")]
		public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xEFE724", Offset = "0xEFE724", VA = "0xEFE724", Slot = "8")]
		public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xEFE96C", Offset = "0xEFE96C", VA = "0xEFE96C", Slot = "9")]
		public void OnConnectedToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xEFE9A4", Offset = "0xEFE9A4", VA = "0xEFE9A4", Slot = "10")]
		public void OnDisconnectedFromServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xEFE9DC", Offset = "0xEFE9DC", VA = "0xEFE9DC", Slot = "11")]
		public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xEFEA74", Offset = "0xEFEA74", VA = "0xEFEA74", Slot = "12")]
		public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xEFEB3C", Offset = "0xEFEB3C", VA = "0xEFEB3C", Slot = "13")]
		public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xEFEBC0", Offset = "0xEFEBC0", VA = "0xEFEBC0", Slot = "14")]
		public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xEFECCC", Offset = "0xEFECCC", VA = "0xEFECCC", Slot = "15")]
		public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xEFEE5C", Offset = "0xEFEE5C", VA = "0xEFEE5C", Slot = "16")]
		public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xEFEEAC", Offset = "0xEFEEAC", VA = "0xEFEEAC", Slot = "17")]
		public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xEFEEE4", Offset = "0xEFEEE4", VA = "0xEFEEE4", Slot = "18")]
		public void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xEFEF1C", Offset = "0xEFEF1C", VA = "0xEFEF1C", Slot = "19")]
		public void OnSceneLoadStart(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xEFDF80", Offset = "0xEFDF80", VA = "0xEFDF80")]
		private void SpawnPlayer(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xEFE208", Offset = "0xEFE208", VA = "0xEFE208")]
		private void DespawnPlayer(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xEFEF90", Offset = "0xEFEF90", VA = "0xEFEF90")]
		private void InitRunner()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xEFDF7C", Offset = "0xEFDF7C", VA = "0xEFDF7C")]
		private void Log(string message)
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xEFF140", Offset = "0xEFF140", VA = "0xEFF140")]
		public ServerManager()
		{
		}
	}
	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB5E4B0", Offset = "0xB5E4B0")]
	public class StateMachine
	{
		[Token(Token = "0x2000544")]
		public class StateHooks
		{
			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<int> m_onEnter;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<int> m_onExit;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action m_onUpdate;

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xFED8E4", Offset = "0xFED8E4", VA = "0xFED8E4")]
			public StateHooks()
			{
			}
		}

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<int, StateHooks> m_states;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xB71480", Offset = "0xB71480")]
		private (int, int) m_previousFrame;

		[Token(Token = "0x1700044D")]
		public StateHooks Item
		{
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x1B089F8", Offset = "0x1B089F8", VA = "0x1B089F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x1B08AC8", Offset = "0x1B08AC8", VA = "0x1B08AC8")]
		public void Update(int currentState, int previousState)
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x1B08C3C", Offset = "0x1B08C3C", VA = "0x1B08C3C")]
		public StateMachine()
		{
		}
	}
}
namespace FNVR2.Networking.Spawner
{
	[Token(Token = "0x2000545")]
	public class LocationTriggerEventNetworkPlayer : LocationTriggerEvent
	{
		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent<PlayerRef> m_playerEntered;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent<PlayerRef> m_playerExited;

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x1CB97FC", Offset = "0x1CB97FC", VA = "0x1CB97FC", Slot = "4")]
		protected override void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x1CB9914", Offset = "0x1CB9914", VA = "0x1CB9914", Slot = "5")]
		protected override void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x1CB9A78", Offset = "0x1CB9A78", VA = "0x1CB9A78")]
		public LocationTriggerEventNetworkPlayer()
		{
		}
	}
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5E4E8", Offset = "0xB5E4E8")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E4E8", Offset = "0xB5E4E8")]
	public class NetworkRackSpawner : NetworkBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000547")]
		public class SelectionData
		{
			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject m_tag;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InventoryPlayerDataObject.InventorySlot m_slot;

			[NonSerialized]
			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnlockablePrefab m_unlockable;

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xFB3544", Offset = "0xFB3544", VA = "0xFB3544")]
			public SelectionData()
			{
			}
		}

		[Token(Token = "0x2000548")]
		public class Data
		{
			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform m_spawnAnchor;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnlockablePrefab m_unlockable;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IGrabbable m_grabbable;

			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0xFB353C", Offset = "0xFB353C", VA = "0xFB353C")]
			public Data()
			{
			}
		}

		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E530", Offset = "0xB5E530")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnlockablePrefab selected;

			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xFB34B0", Offset = "0xFB34B0", VA = "0xFB34B0")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0xFB34B8", Offset = "0xFB34B8", VA = "0xFB34B8")]
			internal bool <UpdateEquippedState>b__0(Data data)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7151C", Offset = "0xB7151C")]
		public float m_respawnCheckFrequency;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnlockableList m_unlockableList;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InventoryPlayerDataObject.ItemType m_inventoryType;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] m_spawnAnchors;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public SelectionData[] m_selectionTags;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool m_equipEnabled;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool m_equipPerHand;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71554", Offset = "0xB71554")]
		public GameObject m_selectedEffectPrefab;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject m_spawnEffectPrefab;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Renderer m_spawnEffectVisibleRenderer;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_waitTime;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Data> m_data;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_spawnEnabled;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkRackSpawner> $IL2CPP_CHANGED;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkRackSpawner> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkRackSpawner> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x10E371C", Offset = "0x10E371C", VA = "0x10E371C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x10E3DD4", Offset = "0x10E3DD4", VA = "0x10E3DD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x10E3E90", Offset = "0x10E3E90", VA = "0x10E3E90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x10E3F4C", Offset = "0x10E3F4C", VA = "0x10E3F4C")]
		private void OnItemEquipped(GameEvent evt)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x10E4000", Offset = "0x10E4000", VA = "0x10E4000")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x10E41A0", Offset = "0x10E41A0", VA = "0x10E41A0", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x10E4274", Offset = "0x10E4274", VA = "0x10E4274", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x10E4068", Offset = "0x10E4068", VA = "0x10E4068")]
		private void Spawn(bool effects = true)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x10E3744", Offset = "0x10E3744", VA = "0x10E3744")]
		private void InitSpawn()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x10E427C", Offset = "0x10E427C", VA = "0x10E427C")]
		private void Spawn(Data data, bool effects = true)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x10E49EC", Offset = "0x10E49EC", VA = "0x10E49EC", Slot = "19")]
		protected virtual PooledObject GetObject(PooledObject prefab, Vector3 position, Quaternion rotation, [Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x10E4D40", Offset = "0x10E4D40", VA = "0x10E4D40")]
		private void OnGrabbed(NetworkGrabbable grabbable, NetworkHand hand)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x10E39EC", Offset = "0x10E39EC", VA = "0x10E39EC")]
		private void UpdateEquippedState(bool effects = true)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x10E4EE0", Offset = "0x10E4EE0", VA = "0x10E4EE0")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84728", Offset = "0xB84728")]
		public void RpcActivate([RpcTarget] PlayerRef player, int index, NetworkHand hand)
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x10E51A0", Offset = "0x10E51A0", VA = "0x10E51A0")]
		private void Activate(Data data, IHand hand)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x10E4670", Offset = "0x10E4670", VA = "0x10E4670")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84760", Offset = "0xB84760")]
		public void RpcSpawnEffect(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x10E52D8", Offset = "0x10E52D8", VA = "0x10E52D8")]
		private void SpawnEffect(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x10E5474", Offset = "0x10E5474", VA = "0x10E5474")]
		public NetworkRackSpawner()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x10E548C", Offset = "0x10E548C", VA = "0x10E548C")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB8479C", Offset = "0xB8479C")]
		[Preserve]
		protected unsafe static void RpcActivate@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x10E55D0", Offset = "0x10E55D0", VA = "0x10E55D0")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB847E0", Offset = "0xB847E0")]
		[Preserve]
		protected unsafe static void RpcSpawnEffect@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5E540", Offset = "0xB5E540")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E540", Offset = "0xB5E540")]
	public class NetworkSpawner : NetworkBehaviour
	{
		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected SyncedSpawner m_syncedSpawner;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkSpawner> $IL2CPP_CHANGED;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkSpawner> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkSpawner> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x10E8450", Offset = "0x10E8450", VA = "0x10E8450", Slot = "19")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x10E84A0", Offset = "0x10E84A0", VA = "0x10E84A0", Slot = "20")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84824", Offset = "0xB84824")]
		public virtual void RpcShootAnimation()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x10E8664", Offset = "0x10E8664", VA = "0x10E8664", Slot = "21")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84860", Offset = "0xB84860")]
		public virtual void RpcSpawn()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x10E8800", Offset = "0x10E8800", VA = "0x10E8800")]
		public NetworkSpawner()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x10E8808", Offset = "0x10E8808", VA = "0x10E8808")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB84898", Offset = "0xB84898")]
		[Preserve]
		protected unsafe static void RpcShootAnimation@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x10E8894", Offset = "0x10E8894", VA = "0x10E8894")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB848DC", Offset = "0xB848DC")]
		[Preserve]
		protected unsafe static void RpcSpawn@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5E588", Offset = "0xB5E588")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E588", Offset = "0xB5E588")]
	public class NetworkSpawnerFruit : NetworkSpawner
	{
		[Token(Token = "0x200054C")]
		public enum RespawnType
		{
			[Token(Token = "0x4002076")]
			AllFruitsDespawned,
			[Token(Token = "0x4002077")]
			DelayOnly,
			[Token(Token = "0x4002078")]
			FruitDespawned,
			[Token(Token = "0x4002079")]
			Manual
		}

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB7158C", Offset = "0xB7158C")]
		private TickTimer _SpawnTimer;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool m_spawnEnabled;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float m_spawnDelay;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float m_addedSpawnDelay;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int m_maxActiveFruits;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB715CC", Offset = "0xB715CC")]
		public bool m_spawnerFruitCoundOverride;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RespawnType m_respawnType;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool m_spawningGrabbableFruits;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		[SerializeField]
		private bool m_usingLocationTrigger;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		[SerializeField]
		private bool m_grabbableAttachedToSpawner;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
		[SerializeField]
		private bool m_grabbableSetRestingTime;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_grabbableRestingTime;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_activeFruits;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_isSpawning;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool m_enabled;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly List<PlayerRef> m_playersInLocationTrigger;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkSpawnerFruit> $IL2CPP_CHANGED;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkSpawnerFruit> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkSpawnerFruit> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x1700044E")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A550", Offset = "0xB8A550")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A550", Offset = "0xB8A550")]
		private TickTimer SpawnTimer
		{
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x10E8920", Offset = "0x10E8920", VA = "0x10E8920")]
			get
			{
				return default(TickTimer);
			}
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0x10E8984", Offset = "0x10E8984", VA = "0x10E8984")]
			set
			{
			}
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x10E89E8", Offset = "0x10E89E8", VA = "0x10E89E8", Slot = "22")]
		public virtual void SpawnEnabled(bool value)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x10E8AAC", Offset = "0x10E8AAC", VA = "0x10E8AAC", Slot = "23")]
		public virtual void PlayerEnteredLocationTrigger(PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x10E8B9C", Offset = "0x10E8B9C", VA = "0x10E8B9C", Slot = "24")]
		public virtual void PlayerExitLocationTrigger(PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x10E8C8C", Offset = "0x10E8C8C", VA = "0x10E8C8C", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x10E8EAC", Offset = "0x10E8EAC", VA = "0x10E8EAC", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x10E90D8", Offset = "0x10E90D8", VA = "0x10E90D8")]
		private void OnFruitSpawned(SyncedSpawner spawner, SyncedFruit fruit)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x10E94B0", Offset = "0x10E94B0", VA = "0x10E94B0")]
		private void OnFruitDespawned(NetworkFruit fruit)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x10E9638", Offset = "0x10E9638", VA = "0x10E9638", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x10E977C", Offset = "0x10E977C", VA = "0x10E977C")]
		private void OnPlayerDisconnected(NetworkRunner runner, PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x10E97E0", Offset = "0x10E97E0", VA = "0x10E97E0")]
		private void OnSpawnerFinished()
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x10E95E8", Offset = "0x10E95E8", VA = "0x10E95E8")]
		private void RestartTimer()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x10E97E8", Offset = "0x10E97E8", VA = "0x10E97E8")]
		public NetworkSpawnerFruit()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x10E9880", Offset = "0x10E9880", VA = "0x10E9880", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x10E98B0", Offset = "0x10E98B0", VA = "0x10E98B0", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x200054D")]
	public class SyncedGrabbableSpawner : GrabbableSpawner
	{
		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_grabbableAttachedToSpawner;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_grabbableCheckRange;

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x116E024", Offset = "0x116E024", VA = "0x116E024", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x116E190", Offset = "0x116E190", VA = "0x116E190", Slot = "5")]
		public override void RespawnAll()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x116E260", Offset = "0x116E260", VA = "0x116E260", Slot = "6")]
		public override void SpawnIfNoValidObjectInVolume()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x116E864", Offset = "0x116E864", VA = "0x116E864")]
		public SyncedGrabbableSpawner()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class SyncedPooledObjectSpawner : PooledObjectSpawner
	{
		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected NetworkObject m_spawnedNetworkObject;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ObjectPool m_objectPool;

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x116FF28", Offset = "0x116FF28", VA = "0x116FF28")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x116FF30", Offset = "0x116FF30", VA = "0x116FF30", Slot = "9")]
		protected override void SpawnEffect()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x1170158", Offset = "0x1170158", VA = "0x1170158", Slot = "8")]
		protected override PooledObject GetObject(PooledObject prefab, Vector3 position, Quaternion rotation, [Optional] Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x117055C", Offset = "0x117055C", VA = "0x117055C")]
		public SyncedPooledObjectSpawner()
		{
		}
	}
	[Token(Token = "0x200054F")]
	public class SyncedSpawner : Spawning.Spawner
	{
		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E5D0", Offset = "0xB5E5D0")]
		private sealed class <WaitForSecondsScaled>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <timer>5__2;

			[Token(Token = "0x1700044F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9A")]
				[Address(RVA = "0xFEDFAC", Offset = "0xFEDFAC", VA = "0xFEDFAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000450")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9C")]
				[Address(RVA = "0xFEDFF4", Offset = "0xFEDFF4", VA = "0xFEDFF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0xFEDEEC", Offset = "0xFEDEEC", VA = "0xFEDEEC")]
			[DebuggerHidden]
			public <WaitForSecondsScaled>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xFEDF18", Offset = "0xFEDF18", VA = "0xFEDF18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E99")]
			[Address(RVA = "0xFEDF1C", Offset = "0xFEDF1C", VA = "0xFEDF1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xFEDFB4", Offset = "0xFEDFB4", VA = "0xFEDFB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E5E0", Offset = "0xB5E5E0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SyncedSpawner <>4__this;

			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Fruit fruit;

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xFEDEC0", Offset = "0xFEDEC0", VA = "0xFEDEC0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xFEDEC8", Offset = "0xFEDEC8", VA = "0xFEDEC8")]
			internal void <SpawnNextFruit>b__0()
			{
			}
		}

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private NetworkSpawner m_networkSpawner;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private SoundCue m_shootingSound;

		[Token(Token = "0x14000086")]
		public event Action<SyncedSpawner, SyncedFruit> OnSyncedSpawn
		{
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0x11713CC", Offset = "0x11713CC", VA = "0x11713CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84920", Offset = "0xB84920")]
			add
			{
			}
			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0x1171470", Offset = "0x1171470", VA = "0x1171470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84930", Offset = "0xB84930")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x1171514", Offset = "0x1171514", VA = "0x1171514", Slot = "21")]
		public override void ResetState()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x11715D0", Offset = "0x11715D0", VA = "0x11715D0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x117162C", Offset = "0x117162C", VA = "0x117162C", Slot = "17")]
		public override void Spawn(int waveId = 0)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x1171704", Offset = "0x1171704", VA = "0x1171704", Slot = "16")]
		public override int StartSpawning(int waveId)
		{
			return default(int);
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x11717E0", Offset = "0x11717E0", VA = "0x11717E0", Slot = "18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB84940", Offset = "0xB84940")]
		protected override IEnumerator WaitForSecondsScaled(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x1171854", Offset = "0x1171854", VA = "0x1171854", Slot = "20")]
		protected override void Deactivate()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x1171968", Offset = "0x1171968", VA = "0x1171968", Slot = "15")]
		protected override bool SpawnNextFruit(int waveId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x1172294", Offset = "0x1172294", VA = "0x1172294", Slot = "19")]
		public override IEnumerator PlayShootAnimation()
		{
			return null;
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x117241C", Offset = "0x117241C", VA = "0x117241C")]
		public SyncedSpawner()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class SyncedSpawnerBasket : SyncedSpawner
	{
		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public Transform[] m_spawnPoints;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		protected HashSet<Transform> m_usedTransforms;

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x1172424", Offset = "0x1172424", VA = "0x1172424", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x11724BC", Offset = "0x11724BC", VA = "0x11724BC", Slot = "5")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x1172558", Offset = "0x1172558", VA = "0x1172558", Slot = "9")]
		protected override Vector3 GetNextFruitPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x1172698", Offset = "0x1172698", VA = "0x1172698")]
		private void OnSpawn(SyncedSpawner spawner, SyncedFruit fruit)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x11727BC", Offset = "0x11727BC", VA = "0x11727BC")]
		private void OnGrab(IGrabbable grabbable, IHand hand)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x1172958", Offset = "0x1172958", VA = "0x1172958")]
		public SyncedSpawnerBasket()
		{
		}
	}
}
namespace FNVR2.Networking.Session
{
	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5E5F0", Offset = "0xB5E5F0")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E5F0", Offset = "0xB5E5F0")]
	public class NetworkSession : NetworkBehaviour
	{
		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject m_bladeSpawnEffect;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SessionData m_sessionData;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkSession> $IL2CPP_CHANGED;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkSession> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkSession> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x10E6BB8", Offset = "0x10E6BB8", VA = "0x10E6BB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x10E6C30", Offset = "0x10E6C30", VA = "0x10E6C30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x10E6C44", Offset = "0x10E6C44", VA = "0x10E6C44")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB849F0", Offset = "0xB849F0")]
		public void RpcSpawnBladeEffect(Vector3 position, Quaternion rotation, Bounds checkBoundsInView)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x10E6FEC", Offset = "0x10E6FEC", VA = "0x10E6FEC")]
		private void SpawnEffect(GameObject prefab, Vector3 position, Quaternion rotation, Bounds checkBoundsInView)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x10E7170", Offset = "0x10E7170", VA = "0x10E7170")]
		public NetworkSession()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x10E7178", Offset = "0x10E7178", VA = "0x10E7178")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB84A2C", Offset = "0xB84A2C")]
		[Preserve]
		protected unsafe static void RpcSpawnBladeEffect@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class SessionData
	{
		[Token(Token = "0x2000555")]
		public delegate void DictionaryPlayerRefBool(Dictionary<PlayerRef, bool> value);

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71694", Offset = "0xB71694")]
		private static SessionData <Instance>k__BackingField;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<PlayerRef, bool> m_playersMuted;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DictionaryPlayerRefBool m_playersMutedDelegate;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<PlayerRef, bool> m_playersIgnored;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DictionaryPlayerRefBool m_playersIgnoredDelegate;

		[Token(Token = "0x17000451")]
		public static SessionData Instance
		{
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0xEFF234", Offset = "0xEFF234", VA = "0xEFF234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84A70", Offset = "0xB84A70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xEFF280", Offset = "0xEFF280", VA = "0xEFF280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84A80", Offset = "0xB84A80")]
			private set
			{
			}
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xEFF2D4", Offset = "0xEFF2D4", VA = "0xEFF2D4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xEFF3C8", Offset = "0xEFF3C8", VA = "0xEFF3C8")]
		public void Uninitialize()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xEFF4BC", Offset = "0xEFF4BC", VA = "0xEFF4BC")]
		private void OnPlayerJoined(NetworkRunner runner, PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xEFF528", Offset = "0xEFF528", VA = "0xEFF528")]
		public void CallAndSubscribePlayerIgnored(DictionaryPlayerRefBool action)
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xEFF610", Offset = "0xEFF610", VA = "0xEFF610")]
		public void UnSubscribePlayerIgnored(DictionaryPlayerRefBool action)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xEFF500", Offset = "0xEFF500", VA = "0xEFF500")]
		public void SetIgnored(PlayerRef playerRef, bool value)
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xEFF774", Offset = "0xEFF774", VA = "0xEFF774")]
		public void CallAndSubscribePlayerMuted(DictionaryPlayerRefBool action)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xEFF7A0", Offset = "0xEFF7A0", VA = "0xEFF7A0")]
		public void UnSubscribePlayerMuted(DictionaryPlayerRefBool action)
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xEFF514", Offset = "0xEFF514", VA = "0xEFF514")]
		public void SetMuted(PlayerRef playerRef, bool value)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xEFF554", Offset = "0xEFF554", VA = "0xEFF554")]
		private void CallAndSubscribe(ref DictionaryPlayerRefBool dictionaryPlayerRefBool, ref DictionaryPlayerRefBool action, ref Dictionary<PlayerRef, bool> value)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xEFF69C", Offset = "0xEFF69C", VA = "0xEFF69C")]
		private void Set(PlayerRef playerRef, bool value, ref Dictionary<PlayerRef, bool> data, ref DictionaryPlayerRefBool delegateUsed)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xEFF82C", Offset = "0xEFF82C", VA = "0xEFF82C")]
		public SessionData()
		{
		}
	}
}
namespace FNVR2.Networking.Photon
{
	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5E638", Offset = "0xB5E638")]
	public class PhotonAppSettingsOverrides : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000557")]
		public struct Override
		{
			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_appIdFusion;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_appIdVoice;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string m_fixedRegion;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string m_server;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int m_port;

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0xFBBAF8", Offset = "0xFBBAF8", VA = "0xFBBAF8")]
			public void Apply(Fusion.Photon.Realtime.AppSettings appSettings)
			{
			}

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0xFBBB68", Offset = "0xFBBB68", VA = "0xFBBB68")]
			public void Apply(global::Photon.Realtime.AppSettings appSettings)
			{
			}
		}

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Override m_override;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Override m_overrideVoice;

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xF50DD8", Offset = "0xF50DD8", VA = "0xF50DD8")]
		public PhotonAppSettingsOverrides()
		{
		}
	}
}
namespace FNVR2.Networking.ObjectPooling
{
	[Token(Token = "0x2000558")]
	public class NetworkObjectPool : ObjectPool
	{
		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x10DF0E4", Offset = "0x10DF0E4", VA = "0x10DF0E4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x10DF0F0", Offset = "0x10DF0F0", VA = "0x10DF0F0", Slot = "4")]
		protected override bool PopulateEmptyPool()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x10DF450", Offset = "0x10DF450", VA = "0x10DF450")]
		public NetworkObjectPool()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class NetworkObjectPoolManager : Fusion.Behaviour, INetworkObjectPool
	{
		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ObjectPool.Purpose m_onEnablePurpose;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ObjectPool.Purpose m_onDisablePurpose;

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x10DF4B4", Offset = "0x10DF4B4", VA = "0x10DF4B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x10DF5CC", Offset = "0x10DF5CC", VA = "0x10DF5CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x10DF754", Offset = "0x10DF754", VA = "0x10DF754", Slot = "4")]
		public NetworkObject AcquireInstance(NetworkRunner runner, NetworkPrefabInfo info)
		{
			return null;
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x10DFCEC", Offset = "0x10DFCEC", VA = "0x10DFCEC", Slot = "5")]
		public void ReleaseInstance(NetworkRunner runner, NetworkObject instance, bool isSceneObject)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x10DFDE4", Offset = "0x10DFDE4", VA = "0x10DFDE4")]
		public NetworkObjectPoolManager()
		{
		}
	}
}
namespace FNVR2.Networking.Game
{
	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5E698", Offset = "0xB5E698")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E698", Offset = "0xB5E698")]
	public class AppleHeadGameMode : NetworkedGameMode
	{
		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E6E0", Offset = "0xB5E6E0")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SliceableObjectBase.SliceInfo info;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int newPlayer;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public AppleHeadGameMode <>4__this;

			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xF8B8A8", Offset = "0xF8B8A8", VA = "0xF8B8A8")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xF8B8B0", Offset = "0xF8B8B0", VA = "0xF8B8B0")]
			internal void <OnFruitSliced>b__0(int index, PlayerNetworkStruct data)
			{
			}
		}

		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E6F0", Offset = "0xB5E6F0")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkPlayer networkPlayer;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AppleHeadGameMode <>4__this;

			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xF8B984", Offset = "0xF8B984", VA = "0xF8B984")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xF8B98C", Offset = "0xF8B98C", VA = "0xF8B98C")]
			internal void <OnModalDialogStateChanged>b__0(int index, PlayerNetworkStruct data, NetworkPlayer player)
			{
			}
		}

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB716A4", Offset = "0xB716A4")]
		private int _ActivePlayerIndex;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB716F8", Offset = "0xB716F8")]
		private TickTimer _PodiumTimer;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7174C", Offset = "0xB7174C")]
		public FruitConfig m_fruitConfig;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public NetworkGrabbable m_shieldPrefab;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public UnlockableList m_unlockableListBows;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public NetworkBow.NetworkBowConfig m_bowConfig;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71784", Offset = "0xB71784")]
		public float m_minScoreToWin;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float m_scoreSpeed;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject m_playerTextHolder;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TMP_Text m_playerTextName;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB717BC", Offset = "0xB717BC")]
		public float m_waitTimeBeforeStartSequence;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float m_waitTimePodiumMovement;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float m_waitTimeStartGame;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float m_waitTimeGameOver;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float m_waitTimeGameOverScore;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float m_waitTimeReturnToLobby;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB717F4", Offset = "0xB717F4")]
		public GameObject m_gameOverEffect;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7182C", Offset = "0xB7182C")]
		public ISound m_countDownSound;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public ISound m_countDownReturnToLobbySound;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ISound m_appleGetSound;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ISound m_appleLoseSound;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public ISound m_appleShotSound;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private int m_lastCountdown;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private SyncedFruit m_currentApple;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private readonly Dictionary<int, NetworkGrabbable> m_playersLastUsedGrabbable;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Dictionary<PlayerRef, int> m_analyticsApplesShot;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<AppleHeadGameMode> $IL2CPP_CHANGED;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<AppleHeadGameMode> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<AppleHeadGameMode> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000452")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A590", Offset = "0xB8A590")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A590", Offset = "0xB8A590")]
		public int ActivePlayerIndex
		{
			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xFA1CE0", Offset = "0xFA1CE0", VA = "0xFA1CE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0xFA1D44", Offset = "0xFA1D44", VA = "0xFA1D44")]
			set
			{
			}
		}

		[Token(Token = "0x17000453")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A5D0", Offset = "0xB8A5D0")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A5D0", Offset = "0xB8A5D0")]
		public TickTimer PodiumTimer
		{
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0xFA1DA8", Offset = "0xFA1DA8", VA = "0xFA1DA8")]
			get
			{
				return default(TickTimer);
			}
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0xFA1E0C", Offset = "0xFA1E0C", VA = "0xFA1E0C")]
			set
			{
			}
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xFA1E70", Offset = "0xFA1E70", VA = "0xFA1E70", Slot = "20")]
		public override void StartGame(PlayerRef[] players)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xFA1F58", Offset = "0xFA1F58", VA = "0xFA1F58", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xFA262C", Offset = "0xFA262C", VA = "0xFA262C", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xFA2690", Offset = "0xFA2690", VA = "0xFA2690")]
		private void FixedUpdateNetworkCountdown(ISound sound)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xFA27A0", Offset = "0xFA27A0", VA = "0xFA27A0", Slot = "21")]
		public override void EndGame()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xFA28A0", Offset = "0xFA28A0", VA = "0xFA28A0", Slot = "25")]
		protected override MultiplayerGameEnd CreateGameEndEvent()
		{
			return null;
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xFA2B0C", Offset = "0xFA2B0C", VA = "0xFA2B0C")]
		private void AssignGrabbables()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xFA2BA0", Offset = "0xFA2BA0", VA = "0xFA2BA0")]
		private void OnFruitDespawned(NetworkFruit fruit)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xFA280C", Offset = "0xFA280C", VA = "0xFA280C")]
		private void DespawnAll()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xFA2D1C", Offset = "0xFA2D1C", VA = "0xFA2D1C")]
		private void DespawnAll(NetworkPlayer player)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xFA2DCC", Offset = "0xFA2DCC", VA = "0xFA2DCC")]
		private void OnFruitSliced(SliceableObjectBase.SliceInfo info)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xFA3580", Offset = "0xFA3580", VA = "0xFA3580")]
		private void SetEffects(bool active, [Optional] int? playerIndex)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xFA375C", Offset = "0xFA375C", VA = "0xFA375C")]
		private void SetPlayersBoundaries()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xFA25B4", Offset = "0xFA25B4", VA = "0xFA25B4")]
		private void DisablePlayerBoundaries()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xFA37F0", Offset = "0xFA37F0", VA = "0xFA37F0", Slot = "27")]
		protected override int AssignPlayers(PlayerRef[] players)
		{
			return default(int);
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xFA3B14", Offset = "0xFA3B14", VA = "0xFA3B14", Slot = "32")]
		protected override void OnModalDialogStateChanged(NetworkPlayer networkPlayer, bool modalActive)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xFA3C1C", Offset = "0xFA3C1C", VA = "0xFA3C1C", Slot = "31")]
		protected override void OnPlayerDisconnected(NetworkRunner runner, PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xFA42AC", Offset = "0xFA42AC", VA = "0xFA42AC", Slot = "22")]
		public override SyncedScoreboard.State GetScoreboardState()
		{
			return default(SyncedScoreboard.State);
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xFA42E8", Offset = "0xFA42E8", VA = "0xFA42E8", Slot = "23")]
		public override float GetScoreboardProgress(ref PlayerNetworkStruct player)
		{
			return default(float);
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xFA42FC", Offset = "0xFA42FC", VA = "0xFA42FC", Slot = "24")]
		public override bool TryGetBowConfig(NetworkBow bow, out NetworkBow.NetworkBowConfig config)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xFA430C", Offset = "0xFA430C", VA = "0xFA430C")]
		public void SliceCurrentApple()
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xFA3040", Offset = "0xFA3040", VA = "0xFA3040")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84A90", Offset = "0xB84A90")]
		public void RpcAppleShot(PlayerRef carrier, PlayerRef shooter)
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xFA45A8", Offset = "0xFA45A8", VA = "0xFA45A8")]
		public AppleHeadGameMode()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xFA46A4", Offset = "0xFA46A4", VA = "0xFA46A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84AC8", Offset = "0xB84AC8")]
		private void <Spawned>b__33_0(int prev)
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xFA46A8", Offset = "0xFA46A8", VA = "0xFA46A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84AD8", Offset = "0xB84AD8")]
		private void <Spawned>b__33_1()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xFA4864", Offset = "0xFA4864", VA = "0xFA4864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84AE8", Offset = "0xB84AE8")]
		private void <Spawned>b__33_2(int prev)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xFA48B8", Offset = "0xFA48B8", VA = "0xFA48B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84AF8", Offset = "0xB84AF8")]
		private void <Spawned>b__33_3()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xFA4904", Offset = "0xFA4904", VA = "0xFA4904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B08", Offset = "0xB84B08")]
		private void <Spawned>b__33_4()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xFA4B30", Offset = "0xFA4B30", VA = "0xFA4B30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B18", Offset = "0xB84B18")]
		private void <Spawned>b__33_5(int state)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xFA4B34", Offset = "0xFA4B34", VA = "0xFA4B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B28", Offset = "0xB84B28")]
		private void <Spawned>b__33_6()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xFA4BA0", Offset = "0xFA4BA0", VA = "0xFA4BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B38", Offset = "0xB84B38")]
		private void <Spawned>b__33_7()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xFA4C0C", Offset = "0xFA4C0C", VA = "0xFA4C0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B48", Offset = "0xB84B48")]
		private void <Spawned>b__33_8()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xFA4C58", Offset = "0xFA4C58", VA = "0xFA4C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B58", Offset = "0xB84B58")]
		private void <Spawned>b__33_9()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xFA4CA4", Offset = "0xFA4CA4", VA = "0xFA4CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B68", Offset = "0xB84B68")]
		private void <Spawned>b__33_10(int prev)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xFA4CB4", Offset = "0xFA4CB4", VA = "0xFA4CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B78", Offset = "0xB84B78")]
		private void <Spawned>b__33_11(int state)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xFA4D78", Offset = "0xFA4D78", VA = "0xFA4D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B88", Offset = "0xB84B88")]
		private void <Spawned>b__33_12(int prev)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xFA4E28", Offset = "0xFA4E28", VA = "0xFA4E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84B98", Offset = "0xB84B98")]
		private void <Spawned>b__33_13(int prev)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xFA4E34", Offset = "0xFA4E34", VA = "0xFA4E34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84BA8", Offset = "0xB84BA8")]
		private void <AssignGrabbables>b__38_0(int index, PlayerNetworkStruct data, NetworkPlayer player)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xFA5280", Offset = "0xFA5280", VA = "0xFA5280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84BB8", Offset = "0xB84BB8")]
		private void <DespawnAll>b__40_0(int index, PlayerNetworkStruct data, NetworkPlayer player)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xFA5288", Offset = "0xFA5288", VA = "0xFA5288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84BC8", Offset = "0xB84BC8")]
		private void <SetPlayersBoundaries>b__44_0(int index, PlayerNetworkStruct data, NetworkPlayer player)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xFA52FC", Offset = "0xFA52FC", VA = "0xFA52FC", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xFA5338", Offset = "0xFA5338", VA = "0xFA5338", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xFA5374", Offset = "0xFA5374", VA = "0xFA5374")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB84BD8", Offset = "0xB84BD8")]
		[Preserve]
		protected unsafe static void RpcAppleShot@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5E700", Offset = "0xB5E700")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E700", Offset = "0xB5E700")]
	public class AppleHeadMusicController : NetworkBehaviour
	{
		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AppleHeadGameMode m_gameMode;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioFader m_attackerMusic;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioFader m_defenderMusic;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB71864", Offset = "0xB71864")]
		public float m_finalFadeOutDuration;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private NetworkedGameMode.GameState m_currentState;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NetworkedGameMode.GameState m_prevState;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_currentActivePlayer;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_prevActivePlayer;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private PlayerRef m_activePlayerRef;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_localPlayerInGame;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool m_isAttacker;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ProfilerMarker s_fixedUpdateNetwork;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Changed<AppleHeadMusicController> $IL2CPP_CHANGED;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static ChangedDelegate<AppleHeadMusicController> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static NetworkBehaviourCallbacks<AppleHeadMusicController> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xFA5414", Offset = "0xFA5414", VA = "0xFA5414", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xFA579C", Offset = "0xFA579C", VA = "0xFA579C")]
		public void InitializeMusic(bool isAttacker)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xFA5814", Offset = "0xFA5814", VA = "0xFA5814")]
		public void ToggleMusicTrack(bool isAttacker)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xFA5900", Offset = "0xFA5900", VA = "0xFA5900")]
		public void StopAllMusic(bool fadeOut = false)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xFA5494", Offset = "0xFA5494", VA = "0xFA5494")]
		private void CheckOnStateChange()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xFA5658", Offset = "0xFA5658", VA = "0xFA5658")]
		private void ActivePlayerChanged()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xFA5974", Offset = "0xFA5974", VA = "0xFA5974")]
		public AppleHeadMusicController()
		{
		}
	}
	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E748", Offset = "0xB5E748")]
	public class AppleHeadPodium : Podium
	{
		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AppleHeadGameMode m_gameMode;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Vector3 m_startPositionOffset;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Vector3 m_endPositionOffset;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Vector3 m_playerOffset;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 m_playerStartPosition;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 m_playerEndPosition;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 m_podiumStartPosition;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NetworkedGameMode.GameState m_previousSate;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 m_previousPos;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NetworkPlayer m_previousNetworkPlayer;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<AppleHeadPodium> $IL2CPP_CHANGED;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<AppleHeadPodium> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<AppleHeadPodium> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xFA5A04", Offset = "0xFA5A04", VA = "0xFA5A04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xFA5AF8", Offset = "0xFA5AF8", VA = "0xFA5AF8", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xFA5CA4", Offset = "0xFA5CA4", VA = "0xFA5CA4", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xFA5E90", Offset = "0xFA5E90", VA = "0xFA5E90")]
		public AppleHeadPodium()
		{
		}
	}
	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5E75C", Offset = "0xB5E75C")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E75C", Offset = "0xB5E75C")]
	public abstract class NetworkedGameMode : NetworkBehaviour
	{
		[Token(Token = "0x2000560")]
		public enum PlayerState
		{
			[Token(Token = "0x40020EF")]
			Invalid,
			[Token(Token = "0x40020F0")]
			Ready
		}

		[Token(Token = "0x2000561")]
		public enum GameState
		{
			[Token(Token = "0x40020F2")]
			Inactive,
			[Token(Token = "0x40020F3")]
			WaitingForPlayers,
			[Token(Token = "0x40020F4")]
			StartGameSequence,
			[Token(Token = "0x40020F5")]
			Playing,
			[Token(Token = "0x40020F6")]
			PlayingScored,
			[Token(Token = "0x40020F7")]
			GameOver,
			[Token(Token = "0x40020F8")]
			GameOverScore,
			[Token(Token = "0x40020F9")]
			PlayerDisconnected,
			[Token(Token = "0x40020FA")]
			ReturnToLobby,
			[Token(Token = "0x40020FB")]
			EndGame
		}

		[Serializable]
		[Token(Token = "0x2000562")]
		public class PlayerData
		{
			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Faction m_faction;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform m_transform;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Podium m_podium;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject[] m_effects;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayerBoundary m_playerBoundary;

			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0xFB5714", Offset = "0xFB5714", VA = "0xFB5714")]
			public PlayerData()
			{
			}
		}

		[Serializable]
		[StructLayout(2)]
		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xB5E7A4", Offset = "0xB5E7A4")]
		public struct PlayerNetworkStruct : INetworkStruct
		{
			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlayerRef m_playerRef;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public PlayerState m_state;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float m_score;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool m_isActive;
		}

		[Token(Token = "0x2000564")]
		public class FinalScore
		{
			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_index;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerData m_playerData;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerNetworkStruct m_player;

			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xFB570C", Offset = "0xFB570C", VA = "0xFB570C")]
			public FinalScore()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000565")]
		public class SpectatorData
		{
			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform m_transform;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71B74", Offset = "0xB71B74")]
			private PlayerRef <Player>k__BackingField;

			[Token(Token = "0x1700045F")]
			public PlayerRef Player
			{
				[Token(Token = "0x6001F40")]
				[Address(RVA = "0xFB571C", Offset = "0xFB571C", VA = "0xFB571C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84E9C", Offset = "0xB84E9C")]
				get
				{
					return default(PlayerRef);
				}
				[Token(Token = "0x6001F41")]
				[Address(RVA = "0xFB5724", Offset = "0xFB5724", VA = "0xFB5724")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84EAC", Offset = "0xB84EAC")]
				internal set
				{
				}
			}

			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xFB572C", Offset = "0xFB572C", VA = "0xFB572C")]
			public SpectatorData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E7B8", Offset = "0xB5E7B8")]
		private sealed class <>c
		{
			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<FinalScore> <>9__65_0;

			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<int, PlayerNetworkStruct, NetworkPlayer> <>9__67_0;

			[Token(Token = "0x6001F44")]
			[Address(RVA = "0xFB5410", Offset = "0xFB5410", VA = "0xFB5410")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F45")]
			[Address(RVA = "0xFB5418", Offset = "0xFB5418", VA = "0xFB5418")]
			internal int <GetFinalScore>b__65_0(FinalScore first, FinalScore second)
			{
				return default(int);
			}

			[Token(Token = "0x6001F46")]
			[Address(RVA = "0xFB5440", Offset = "0xFB5440", VA = "0xFB5440")]
			internal void <UnassignPlayers>b__67_0(int index, PlayerNetworkStruct data, NetworkPlayer player)
			{
			}
		}

		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E7C8", Offset = "0xB5E7C8")]
		private sealed class <>c__DisplayClass70_0
		{
			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerRef playerRef;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NetworkedGameMode <>4__this;

			[Token(Token = "0x6001F47")]
			[Address(RVA = "0xFB5480", Offset = "0xFB5480", VA = "0xFB5480")]
			public <>c__DisplayClass70_0()
			{
			}

			[Token(Token = "0x6001F48")]
			[Address(RVA = "0xFB5488", Offset = "0xFB5488", VA = "0xFB5488")]
			internal void <OnPlayerDisconnected>b__0(int index, PlayerNetworkStruct data, NetworkPlayer player)
			{
			}
		}

		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E7D8", Offset = "0xB5E7D8")]
		private sealed class <>c__DisplayClass74_0
		{
			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerRef player;

			[Token(Token = "0x6001F49")]
			[Address(RVA = "0xFB569C", Offset = "0xFB569C", VA = "0xFB569C")]
			public <>c__DisplayClass74_0()
			{
			}

			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0xFB56A4", Offset = "0xFB56A4", VA = "0xFB56A4")]
			internal void <RpcTeleport>b__0(int index, PlayerNetworkStruct data, NetworkPlayer networkPlayer)
			{
			}
		}

		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5E7E8", Offset = "0xB5E7E8")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerRef player;

			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0xFB56D4", Offset = "0xFB56D4", VA = "0xFB56D4")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0xFB56DC", Offset = "0xFB56DC", VA = "0xFB56DC")]
			internal void <RpcTeleportPlayer>b__0(int index, PlayerNetworkStruct data, NetworkPlayer networkPlayer)
			{
			}
		}

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB718BC", Offset = "0xB718BC")]
		private static NetworkedGameMode <Current>k__BackingField;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<NetworkedGameMode> OnStartGame;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<NetworkedGameMode> OnEndGame;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly StateMachine m_stateMachine;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB718CC", Offset = "0xB718CC")]
		private GameState _PreviousState;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB71920", Offset = "0xB71920")]
		private GameState _CurrentState;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB71974", Offset = "0xB71974")]
		private TickTimer _Timer;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB719C8", Offset = "0xB719C8")]
		private TickTimer _Delay;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB71A1C", Offset = "0xB71A1C")]
		private GameState _DelayedState;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB71A70", Offset = "0xB71A70")]
		private PlayerNetworkStruct[] _ActivePlayers;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71AC4", Offset = "0xB71AC4")]
		public bool m_endGameOnPlayerDisconnect;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71AFC", Offset = "0xB71AFC")]
		public float m_waitTimePlayerDisconnected;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB71B34", Offset = "0xB71B34")]
		public PlayerData[] m_players;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public SpectatorData[] m_spectators;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71B44", Offset = "0xB71B44")]
		private string <GameName>k__BackingField;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71B54", Offset = "0xB71B54")]
		private float <GameStartTime>k__BackingField;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB71B64", Offset = "0xB71B64")]
		private readonly List<SyncedScoreboard> <Scoreboards>k__BackingField;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Changed<NetworkedGameMode> $IL2CPP_CHANGED;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static ChangedDelegate<NetworkedGameMode> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static NetworkBehaviourCallbacks<NetworkedGameMode> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000454")]
		public static NetworkedGameMode Current
		{
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0x10E9D1C", Offset = "0x10E9D1C", VA = "0x10E9D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84C1C", Offset = "0xB84C1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F08")]
			[Address(RVA = "0x10E9D68", Offset = "0x10E9D68", VA = "0x10E9D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84C2C", Offset = "0xB84C2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000455")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A610", Offset = "0xB8A610")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A610", Offset = "0xB8A610")]
		public GameState PreviousState
		{
			[Token(Token = "0x6001F09")]
			[Address(RVA = "0x10E9DBC", Offset = "0x10E9DBC", VA = "0x10E9DBC")]
			get
			{
				return default(GameState);
			}
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0x10E9E20", Offset = "0x10E9E20", VA = "0x10E9E20")]
			set
			{
			}
		}

		[Token(Token = "0x17000456")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A650", Offset = "0xB8A650")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A650", Offset = "0xB8A650")]
		public GameState CurrentState
		{
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0x10E9E84", Offset = "0x10E9E84", VA = "0x10E9E84")]
			get
			{
				return default(GameState);
			}
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x10E9EE8", Offset = "0x10E9EE8", VA = "0x10E9EE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000457")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A690", Offset = "0xB8A690")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A690", Offset = "0xB8A690")]
		public TickTimer Timer
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x10E9F4C", Offset = "0x10E9F4C", VA = "0x10E9F4C")]
			get
			{
				return default(TickTimer);
			}
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x10E9FB0", Offset = "0x10E9FB0", VA = "0x10E9FB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000458")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A6D0", Offset = "0xB8A6D0")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A6D0", Offset = "0xB8A6D0")]
		public TickTimer Delay
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x10EA014", Offset = "0x10EA014", VA = "0x10EA014")]
			get
			{
				return default(TickTimer);
			}
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x10EA078", Offset = "0x10EA078", VA = "0x10EA078")]
			set
			{
			}
		}

		[Token(Token = "0x17000459")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A710", Offset = "0xB8A710")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A710", Offset = "0xB8A710")]
		public GameState DelayedState
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x10EA0DC", Offset = "0x10EA0DC", VA = "0x10EA0DC")]
			get
			{
				return default(GameState);
			}
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x10EA140", Offset = "0x10EA140", VA = "0x10EA140")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A750", Offset = "0xB8A750")]
		[AttributeAttribute(Name = "CapacityAttribute", RVA = "0xB8A750", Offset = "0xB8A750")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A750", Offset = "0xB8A750")]
		public NetworkArray<PlayerNetworkStruct> ActivePlayers
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x10EA1A4", Offset = "0x10EA1A4", VA = "0x10EA1A4")]
			get
			{
				return default(NetworkArray<PlayerNetworkStruct>);
			}
		}

		[Token(Token = "0x1700045B")]
		public int Countdown
		{
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x10EA268", Offset = "0x10EA268", VA = "0x10EA268")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700045C")]
		public string GameName
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x10EA2D4", Offset = "0x10EA2D4", VA = "0x10EA2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84C3C", Offset = "0xB84C3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x10EA2DC", Offset = "0x10EA2DC", VA = "0x10EA2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84C4C", Offset = "0xB84C4C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700045D")]
		public float GameStartTime
		{
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x10EA2E4", Offset = "0x10EA2E4", VA = "0x10EA2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84C5C", Offset = "0xB84C5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x10EA2EC", Offset = "0x10EA2EC", VA = "0x10EA2EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84C6C", Offset = "0xB84C6C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700045E")]
		public List<SyncedScoreboard> Scoreboards
		{
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x10EA2F4", Offset = "0x10EA2F4", VA = "0x10EA2F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84C7C", Offset = "0xB84C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x10EA2FC", Offset = "0x10EA2FC", VA = "0x10EA2FC", Slot = "19")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x10EA340", Offset = "0x10EA340", VA = "0x10EA340", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x10EA4EC", Offset = "0x10EA4EC", VA = "0x10EA4EC", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x10EA5A0", Offset = "0x10EA5A0", VA = "0x10EA5A0", Slot = "20")]
		public virtual void StartGame(PlayerRef[] players)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x10EA480", Offset = "0x10EA480", VA = "0x10EA480")]
		public void ServerSetState(GameState gameState)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x10EA7D4", Offset = "0x10EA7D4", VA = "0x10EA7D4")]
		public void ServerDelaySetState(GameState newState, float delay)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x10EA814", Offset = "0x10EA814", VA = "0x10EA814", Slot = "21")]
		public virtual void EndGame()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x10EAAF0", Offset = "0x10EAAF0", VA = "0x10EAAF0", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x10EACC0", Offset = "0x10EACC0", VA = "0x10EACC0")]
		protected void EmitEndGameEvent()
		{
		}

		[Token(Token = "0x6001F23")]
		public abstract SyncedScoreboard.State GetScoreboardState();

		[Token(Token = "0x6001F24")]
		public abstract float GetScoreboardProgress(ref PlayerNetworkStruct player);

		[Token(Token = "0x6001F25")]
		public abstract bool TryGetBowConfig(NetworkBow bow, out NetworkBow.NetworkBowConfig config);

		[Token(Token = "0x6001F26")]
		protected abstract MultiplayerGameEnd CreateGameEndEvent();

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x10EAD40", Offset = "0x10EAD40", VA = "0x10EAD40", Slot = "26")]
		public virtual FinalScore[] GetFinalScore()
		{
			return null;
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x10EAFB8", Offset = "0x10EAFB8", VA = "0x10EAFB8", Slot = "27")]
		protected virtual int AssignPlayers(PlayerRef[] players)
		{
			return default(int);
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x10EB2CC", Offset = "0x10EB2CC", VA = "0x10EB2CC", Slot = "28")]
		protected virtual void UnassignPlayers()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x10EB5E8", Offset = "0x10EB5E8", VA = "0x10EB5E8", Slot = "29")]
		protected virtual void TeleportPlayersToArena()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x10EB678", Offset = "0x10EB678", VA = "0x10EB678", Slot = "30")]
		protected virtual void TeleportPlayersExit()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x10EBB44", Offset = "0x10EBB44", VA = "0x10EBB44", Slot = "31")]
		protected virtual void OnPlayerDisconnected(NetworkRunner runner, PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x10EB3DC", Offset = "0x10EB3DC", VA = "0x10EB3DC")]
		protected void IterateActivePlayers(Action<int, PlayerNetworkStruct, NetworkPlayer> action)
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x10EBC24", Offset = "0x10EBC24", VA = "0x10EBC24")]
		protected void IterateActivePlayers(Action<int, PlayerNetworkStruct> action)
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x10EBD80", Offset = "0x10EBD80", VA = "0x10EBD80", Slot = "32")]
		protected virtual void OnModalDialogStateChanged(NetworkPlayer networkPlayer, bool modalActive)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x10EB78C", Offset = "0x10EB78C", VA = "0x10EB78C")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84C8C", Offset = "0xB84C8C")]
		public void RpcTeleport([RpcTarget] PlayerRef player, AreaManager.AreaType area)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x10EBD84", Offset = "0x10EBD84", VA = "0x10EBD84")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84CC4", Offset = "0xB84CC4")]
		public void RpcTeleportPlayer([RpcTarget] PlayerRef player, AreaManager.AreaType area, int teamId)
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x10EC1DC", Offset = "0x10EC1DC", VA = "0x10EC1DC")]
		public void TeleportCompleted()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x10EC584", Offset = "0x10EC584", VA = "0x10EC584")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84CFC", Offset = "0xB84CFC")]
		public void RpcTeleportSpectator([RpcTarget] PlayerRef player, AreaManager.AreaType area, int spectatorId)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x10EC27C", Offset = "0x10EC27C", VA = "0x10EC27C")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84D34", Offset = "0xB84D34")]
		public void RpcSetPlayerState(PlayerRef player, PlayerState state)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x10EC858", Offset = "0x10EC858", VA = "0x10EC858")]
		protected NetworkedGameMode()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x10EC91C", Offset = "0x10EC91C", VA = "0x10EC91C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84D6C", Offset = "0xB84D6C")]
		private void <TeleportPlayersToArena>b__68_0(int index, PlayerNetworkStruct data, NetworkPlayer player)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x10EC988", Offset = "0x10EC988", VA = "0x10EC988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84D7C", Offset = "0xB84D7C")]
		private void <TeleportPlayersExit>b__69_0(int index, PlayerNetworkStruct data, NetworkPlayer player)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x10EC9EC", Offset = "0x10EC9EC", VA = "0x10EC9EC", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x10ECAF8", Offset = "0x10ECAF8", VA = "0x10ECAF8", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x10ECBEC", Offset = "0x10ECBEC", VA = "0x10ECBEC")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB84D8C", Offset = "0xB84D8C")]
		[Preserve]
		protected unsafe static void RpcTeleport@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x10ECC94", Offset = "0x10ECC94", VA = "0x10ECC94")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB84DD0", Offset = "0xB84DD0")]
		[Preserve]
		protected unsafe static void RpcTeleportPlayer@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x10ECD3C", Offset = "0x10ECD3C", VA = "0x10ECD3C")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB84E14", Offset = "0xB84E14")]
		[Preserve]
		protected unsafe static void RpcTeleportSpectator@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x10ECDE4", Offset = "0x10ECDE4", VA = "0x10ECDE4")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB84E58", Offset = "0xB84E58")]
		[Preserve]
		protected unsafe static void RpcSetPlayerState@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E7F8", Offset = "0xB5E7F8")]
	public class NetworkedGameModeQueue : NetworkBehaviour
	{
		[Token(Token = "0x200056B")]
		private enum QueueState
		{
			[Token(Token = "0x4002129")]
			Queueing,
			[Token(Token = "0x400212A")]
			Countdown,
			[Token(Token = "0x400212B")]
			GameActive
		}

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71B84", Offset = "0xB71B84")]
		public NetworkedGameMode m_networkedGameMode;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int m_playersRequiredToStart;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioSource m_countdownTickAudio;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float m_countdownTime;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71BBC", Offset = "0xB71BBC")]
		public GameObject m_playerListHolder;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject m_countdownHolder;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject m_gameNotStartedHolder;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject m_gameInProgressHolder;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private UILayoutEnabler m_uiLayoutEnabler;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject m_joinButtonHolder;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject m_leaveButtonHolder;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<TextMeshPro> m_countdownText;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xB71C04", Offset = "0xB71C04")]
		public SoundCue m_countdownSound;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<PlayerQueueItem> m_queueItemVisuals;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB71C14", Offset = "0xB71C14")]
		private PlayerRef[] _PlayersInQueue;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB71C54", Offset = "0xB71C54")]
		private TickTimer _CountdownTimer;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB71C94", Offset = "0xB71C94")]
		private QueueState _CurrentQueueState;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB71CD4", Offset = "0xB71CD4")]
		private int _CountdownTick;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int m_playerCount;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private QueueState m_localQueueState;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkedGameModeQueue> $IL2CPP_CHANGED;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkedGameModeQueue> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkedGameModeQueue> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000460")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A7A4", Offset = "0xB8A7A4")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A7A4", Offset = "0xB8A7A4")]
		[AttributeAttribute(Name = "CapacityAttribute", RVA = "0xB8A7A4", Offset = "0xB8A7A4")]
		private NetworkArray<PlayerRef> PlayersInQueue
		{
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x1BC4A4C", Offset = "0x1BC4A4C", VA = "0x1BC4A4C")]
			get
			{
				return default(NetworkArray<PlayerRef>);
			}
		}

		[Token(Token = "0x17000461")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A818", Offset = "0xB8A818")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A818", Offset = "0xB8A818")]
		private TickTimer CountdownTimer
		{
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x1BC4B10", Offset = "0x1BC4B10", VA = "0x1BC4B10")]
			get
			{
				return default(TickTimer);
			}
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x1BC4B74", Offset = "0x1BC4B74", VA = "0x1BC4B74")]
			set
			{
			}
		}

		[Token(Token = "0x17000462")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A858", Offset = "0xB8A858")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A858", Offset = "0xB8A858")]
		private QueueState CurrentQueueState
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x1BC4BD8", Offset = "0x1BC4BD8", VA = "0x1BC4BD8")]
			get
			{
				return default(QueueState);
			}
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x1BC4C3C", Offset = "0x1BC4C3C", VA = "0x1BC4C3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000463")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A8B8", Offset = "0xB8A8B8")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A8B8", Offset = "0xB8A8B8")]
		private int CountdownTick
		{
			[Token(Token = "0x6001F52")]
			[Address(RVA = "0x1BC4CA0", Offset = "0x1BC4CA0", VA = "0x1BC4CA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x1BC4D04", Offset = "0x1BC4D04", VA = "0x1BC4D04")]
			set
			{
			}
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x1BC4D68", Offset = "0x1BC4D68", VA = "0x1BC4D68", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x1BC4F74", Offset = "0x1BC4F74", VA = "0x1BC4F74", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x1BC5180", Offset = "0x1BC5180", VA = "0x1BC5180", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x1BC5D5C", Offset = "0x1BC5D5C", VA = "0x1BC5D5C")]
		[Preserve]
		private static void OnPlayerArrayChanged(Changed<NetworkedGameModeQueue> changed)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x1BC5FAC", Offset = "0x1BC5FAC", VA = "0x1BC5FAC")]
		[Preserve]
		private static void OnCountdownTickChanged(Changed<NetworkedGameModeQueue> changed)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x1BC612C", Offset = "0x1BC612C", VA = "0x1BC612C")]
		[Preserve]
		private static void OnQueueStateChange(Changed<NetworkedGameModeQueue> changed)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x1BC63A8", Offset = "0x1BC63A8", VA = "0x1BC63A8")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84EEC", Offset = "0xB84EEC")]
		private void RPCAddPlayer(PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1BC6554", Offset = "0x1BC6554", VA = "0x1BC6554")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB84F24", Offset = "0xB84F24")]
		private void RPCRemovePlayer(PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x1BC564C", Offset = "0x1BC564C", VA = "0x1BC564C")]
		private void RemoveAllPlayersInQueue()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x1BC6700", Offset = "0x1BC6700", VA = "0x1BC6700")]
		private void StartCountdown()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x1BC6740", Offset = "0x1BC6740", VA = "0x1BC6740")]
		private void OnGameEnded(NetworkedGameMode gameMode)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x1BC6784", Offset = "0x1BC6784", VA = "0x1BC6784")]
		private void OnPlayerDisconnected(NetworkRunner runner, PlayerRef pRef)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x1BC5758", Offset = "0x1BC5758", VA = "0x1BC5758")]
		private void ModifyPlayerInQueue(PlayerRef playerRef, bool addToQueue)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x1BC6790", Offset = "0x1BC6790", VA = "0x1BC6790")]
		private void PrintPlayerList()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x1BC6944", Offset = "0x1BC6944", VA = "0x1BC6944")]
		public void AddLocalPlayerToQueue()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x1BC697C", Offset = "0x1BC697C", VA = "0x1BC697C")]
		public void RemoveLocalPlayerFromQueue()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x1BC69B4", Offset = "0x1BC69B4", VA = "0x1BC69B4")]
		public NetworkedGameModeQueue()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x1BC6A94", Offset = "0x1BC6A94", VA = "0x1BC6A94", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x1BC6B88", Offset = "0x1BC6B88", VA = "0x1BC6B88", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x1BC6C64", Offset = "0x1BC6C64", VA = "0x1BC6C64")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB84F5C", Offset = "0xB84F5C")]
		[Preserve]
		protected unsafe static void RPCAddPlayer@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x1BC6D04", Offset = "0x1BC6D04", VA = "0x1BC6D04")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB84FA0", Offset = "0xB84FA0")]
		[Preserve]
		protected unsafe static void RPCRemovePlayer@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200056C")]
	public class PlayerQueueItem : MonoBehaviour
	{
		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI m_nameText;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RawImage m_userIcon;

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xFF29FC", Offset = "0xFF29FC", VA = "0xFF29FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xFF2BC0", Offset = "0xFF2BC0", VA = "0xFF2BC0")]
		public void SetPlayerInfo(PlayerRef playerRef)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xFF2D28", Offset = "0xFF2D28", VA = "0xFF2D28")]
		private void GotAvatarImage(Texture2D texture2D)
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xFF2DC8", Offset = "0xFF2DC8", VA = "0xFF2DC8")]
		public PlayerQueueItem()
		{
		}
	}
	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E80C", Offset = "0xB5E80C")]
	public class Podium : NetworkBehaviour
	{
		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool m_initialized;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB71D34", Offset = "0xB71D34")]
		private NetworkPlayer _MyPlayer;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<Podium> $IL2CPP_CHANGED;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<Podium> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<Podium> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000464")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A918", Offset = "0xB8A918")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A918", Offset = "0xB8A918")]
		public NetworkPlayer MyPlayer
		{
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xFF5930", Offset = "0xFF5930", VA = "0xFF5930")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0xFF5A3C", Offset = "0xFF5A3C", VA = "0xFF5A3C")]
			set
			{
			}
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xFF5AF4", Offset = "0xFF5AF4", VA = "0xFF5AF4")]
		public Podium()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xFF5AFC", Offset = "0xFF5AFC", VA = "0xFF5AFC", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xFF5B04", Offset = "0xFF5B04", VA = "0xFF5B04", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class SyncedScoreboard : MonoBehaviour
	{
		[Token(Token = "0x200056F")]
		public enum State
		{
			[Token(Token = "0x4002146")]
			None,
			[Token(Token = "0x4002147")]
			WaitingForPlayers,
			[Token(Token = "0x4002148")]
			Countdown,
			[Token(Token = "0x4002149")]
			Score,
			[Token(Token = "0x400214A")]
			PlayerDisconnected,
			[Token(Token = "0x400214B")]
			GameOver,
			[Token(Token = "0x400214C")]
			GameOverScore,
			[Token(Token = "0x400214D")]
			ReturnToLobby
		}

		[Serializable]
		[Token(Token = "0x2000570")]
		public class PlayerScore
		{
			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer m_faction;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_Text m_title;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text m_score;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Image m_progressBar;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject m_activePlayer;

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xFEDEB8", Offset = "0xFEDEB8", VA = "0xFEDEB8")]
			public PlayerScore()
			{
			}
		}

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetworkedGameMode m_gameMode;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB71D88", Offset = "0xB71D88")]
		public Faction m_factionFilter;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71DC0", Offset = "0xB71DC0")]
		public GameObject m_waitingHolder;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71DF8", Offset = "0xB71DF8")]
		public GameObject m_countdownHolder;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TMP_Text m_countdownText;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71E30", Offset = "0xB71E30")]
		public GameObject m_scoreHolder;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PlayerScore[] m_scores;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71E68", Offset = "0xB71E68")]
		public GameObject m_playerDisconnected;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text m_playerDisconnectedCountdown;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71EA0", Offset = "0xB71EA0")]
		public GameObject m_gameOverHolder;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject m_gameOverScoreHolder;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PlayerScore[] m_gameOverScores;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71ED8", Offset = "0xB71ED8")]
		public GameObject m_returnLobbyHolder;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TMP_Text m_returnLobbyCountdownText;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71F10", Offset = "0xB71F10")]
		public DOTweenAnimation[] m_animations;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string m_openAnimationId;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string m_closeAnimationId;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private State m_lastState;

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x1170564", Offset = "0x1170564", VA = "0x1170564")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x11705C4", Offset = "0x11705C4", VA = "0x11705C4")]
		public void UpdateState(State currentState)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x117076C", Offset = "0x117076C", VA = "0x117076C")]
		private void SetState(State state)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x1170D60", Offset = "0x1170D60", VA = "0x1170D60")]
		private void ApplyScores(PlayerScore[] scores, NetworkedGameMode.FinalScore[] finalScores)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x1170B1C", Offset = "0x1170B1C", VA = "0x1170B1C")]
		private void ApplyScores(PlayerScore[] scores, bool setup = true)
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x1170E38", Offset = "0x1170E38", VA = "0x1170E38")]
		private void SetupScore(PlayerScore score, NetworkedGameMode.PlayerData playerData, NetworkedGameMode.PlayerNetworkStruct playerNetworkData)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x11711D8", Offset = "0x11711D8", VA = "0x11711D8")]
		private void ApplyScore(PlayerScore score, NetworkedGameMode.PlayerData playerData, NetworkedGameMode.PlayerNetworkStruct playerNetworkData)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x117134C", Offset = "0x117134C", VA = "0x117134C")]
		public SyncedScoreboard()
		{
		}
	}
}
namespace FNVR2.Networking.Entities
{
	[Token(Token = "0x2000571")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E820", Offset = "0xB5E820")]
	public class NetworkShield : NetworkBehaviour
	{
		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71F48", Offset = "0xB71F48")]
		[SerializeField]
		private int m_maxHealth;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB71F94", Offset = "0xB71F94")]
		[SerializeField]
		private GameObject m_visual;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject[] m_damageVisuals;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Renderer[] m_emblemVisuals;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private BrokenShield m_brokenShieldPrefab;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72010", Offset = "0xB72010")]
		private int _CurrentHealth;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72064", Offset = "0xB72064")]
		private int _CurrentFactionId;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private UnityEvent m_onDamageReceived;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private UnityEvent m_onSpawned;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB720D8", Offset = "0xB720D8")]
		private NetworkGrabbable <NetworkGrabbable>k__BackingField;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_previousShieldHealth;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material m_material;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_broken;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int m_teamColor02;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int m_teamColor01;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int m_emblemOffset;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private BrokenShield m_brokenShield;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_serverCorrectionTickMin;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkShield> $IL2CPP_CHANGED;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkShield> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkShield> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000465")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A958", Offset = "0xB8A958")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A958", Offset = "0xB8A958")]
		public int CurrentHealth
		{
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x10E72A8", Offset = "0x10E72A8", VA = "0x10E72A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x10E730C", Offset = "0x10E730C", VA = "0x10E730C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000466")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A998", Offset = "0xB8A998")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A998", Offset = "0xB8A998")]
		public int CurrentFactionId
		{
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x10E7370", Offset = "0x10E7370", VA = "0x10E7370")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x10E73D4", Offset = "0x10E73D4", VA = "0x10E73D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000467")]
		public NetworkGrabbable NetworkGrabbable
		{
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x10E7438", Offset = "0x10E7438", VA = "0x10E7438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84FE4", Offset = "0xB84FE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x10E7440", Offset = "0x10E7440", VA = "0x10E7440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB84FF4", Offset = "0xB84FF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x10E7448", Offset = "0x10E7448", VA = "0x10E7448")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x10E7648", Offset = "0x10E7648", VA = "0x10E7648")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x10E76EC", Offset = "0x10E76EC", VA = "0x10E76EC", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x10E7B78", Offset = "0x10E7B78", VA = "0x10E7B78", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x10E7D98", Offset = "0x10E7D98", VA = "0x10E7D98", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x10E7F64", Offset = "0x10E7F64", VA = "0x10E7F64")]
		public void ChangeShieldHealth(int change)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x10E79E8", Offset = "0x10E79E8", VA = "0x10E79E8")]
		private void SetShieldVisual()
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x10E7F50", Offset = "0x10E7F50", VA = "0x10E7F50")]
		private void ApplyShieldDamage()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x10E7BC0", Offset = "0x10E7BC0", VA = "0x10E7BC0")]
		private void BreakShield()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x10E7FAC", Offset = "0x10E7FAC", VA = "0x10E7FAC")]
		private void OnGrabbed(IGrabbable grabbable, IHand hand)
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x10E7A74", Offset = "0x10E7A74", VA = "0x10E7A74")]
		private void SetEmblemFlipped(bool flipped)
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x10E7AEC", Offset = "0x10E7AEC", VA = "0x10E7AEC")]
		public void SetFaction(Faction faction)
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x10E8144", Offset = "0x10E8144", VA = "0x10E8144")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85004", Offset = "0xB85004")]
		public static void Log(string message, UnityEngine.Object sender)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x10E8148", Offset = "0x10E8148", VA = "0x10E8148")]
		public NetworkShield()
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x10E8164", Offset = "0x10E8164", VA = "0x10E8164", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x10E8190", Offset = "0x10E8190", VA = "0x10E8190", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
}
namespace FNVR2.Networking.Player
{
	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xB5E834", Offset = "0xB5E834")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E834", Offset = "0xB5E834")]
	public class NetworkGrabbable : NetworkBehaviour, IGrabbable
	{
		[Token(Token = "0x2000573")]
		public enum GrabAuthority
		{
			[Token(Token = "0x400219F")]
			Anyone,
			[Token(Token = "0x40021A0")]
			InputAuthorityOnly
		}

		[Token(Token = "0x2000574")]
		public delegate void HandDelegate(NetworkHand hand, ref bool interactionEnabled, ref HandPose relaxedPose, ref HandPose clenchedPose, ref bool overrideBlendFactor, ref float blendFactor);

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB720E8", Offset = "0xB720E8")]
		private Grabbable.State _CurrentState;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB7213C", Offset = "0xB7213C")]
		private NetworkBool _AttachedToSpawner;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72190", Offset = "0xB72190")]
		private NetworkHand _Hand;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NetworkHand m_lastHand;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB721E4", Offset = "0xB721E4")]
		private Rigidbody <Rigidbody>k__BackingField;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB721F4", Offset = "0xB721F4")]
		private bool <HasRigidbody>k__BackingField;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72204", Offset = "0xB72204")]
		public HandPose m_grabbedHandPose;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 m_relativePosition;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector3 m_relativeRotation;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool m_customRightPosAndRot;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 m_relativePositionRight;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3 m_relativeRotationRight;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public GrabAuthority m_grabAuthority;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7223C", Offset = "0xB7223C")]
		public global::Game.Unlockable m_unlockable;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Color m_unlockColor;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Color m_lockedColor;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform m_spawnPivot;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB72274", Offset = "0xB72274")]
		public bool m_forceGrabEnabled;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB722AC", Offset = "0xB722AC")]
		[SerializeField]
		private float m_releaseVelocityModifier;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Vector3 m_releaseAngularVelocityScale;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72308", Offset = "0xB72308")]
		public MeshRenderer m_highlightObject;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72340", Offset = "0xB72340")]
		public float m_travelSpeed;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float m_velocityPercentWhenNoGrab;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Ease m_travelEaseType;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public RangedFloat m_travelTimeBounds;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB72378", Offset = "0xB72378")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72378", Offset = "0xB72378")]
		public float m_defaultRestingTimeBeforeRecycle;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool m_onlyStartCountdownAfterCollision;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB723D8", Offset = "0xB723D8")]
		public ISound m_onPullSound;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public ISound m_onGrabSound;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public ISound m_onReleaseSound;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72410", Offset = "0xB72410")]
		private HandDelegate <OnHandUpdate>k__BackingField;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72420", Offset = "0xB72420")]
		private HandDelegate <OnOtherHandUpdate>k__BackingField;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private NetworkTransform m_networkTransform;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private PooledObject m_pooledObject;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float m_restingTime;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private bool m_defaultIsKinematic;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Grabbable.State m_lastState;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private bool m_recyclingCollisionHappened;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB724D0", Offset = "0xB724D0")]
		private NetworkHand <CachedNetworkHand>k__BackingField;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB724E0", Offset = "0xB724E0")]
		private bool <IsDespawning>k__BackingField;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB724F0", Offset = "0xB724F0")]
		private float <RestingTimeBeforeRecycle>k__BackingField;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Changed<NetworkGrabbable> $IL2CPP_CHANGED;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static ChangedDelegate<NetworkGrabbable> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static NetworkBehaviourCallbacks<NetworkGrabbable> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000468")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8A9D8", Offset = "0xB8A9D8")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8A9D8", Offset = "0xB8A9D8")]
		public Grabbable.State CurrentState
		{
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x10D76C4", Offset = "0x10D76C4", VA = "0x10D76C4", Slot = "27")]
			get
			{
				return default(Grabbable.State);
			}
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x10D7728", Offset = "0x10D7728", VA = "0x10D7728")]
			set
			{
			}
		}

		[Token(Token = "0x17000469")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AA18", Offset = "0xB8AA18")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AA18", Offset = "0xB8AA18")]
		public NetworkBool AttachedToSpawner
		{
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x10D778C", Offset = "0x10D778C", VA = "0x10D778C")]
			get
			{
				return default(NetworkBool);
			}
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x10D77F0", Offset = "0x10D77F0", VA = "0x10D77F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700046A")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AA58", Offset = "0xB8AA58")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AA58", Offset = "0xB8AA58")]
		public NetworkHand Hand
		{
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x10D7854", Offset = "0x10D7854", VA = "0x10D7854")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x10D7964", Offset = "0x10D7964", VA = "0x10D7964")]
			set
			{
			}
		}

		[Token(Token = "0x1700046B")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x10D7A20", Offset = "0x10D7A20", VA = "0x10D7A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8503C", Offset = "0xB8503C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x10D7A28", Offset = "0x10D7A28", VA = "0x10D7A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8504C", Offset = "0xB8504C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public bool HasRigidbody
		{
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x10D7A30", Offset = "0x10D7A30", VA = "0x10D7A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8505C", Offset = "0xB8505C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x10D7A38", Offset = "0x10D7A38", VA = "0x10D7A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8506C", Offset = "0xB8506C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700046D")]
		public float ReleaseVelocityModifier
		{
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x10D7A44", Offset = "0x10D7A44", VA = "0x10D7A44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700046E")]
		public Vector3 ReleaseAngularVelocityScale
		{
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x10D7A4C", Offset = "0x10D7A4C", VA = "0x10D7A4C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700046F")]
		public HandDelegate OnHandUpdate
		{
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0x10D7A5C", Offset = "0x10D7A5C", VA = "0x10D7A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8507C", Offset = "0xB8507C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x10D7A64", Offset = "0x10D7A64", VA = "0x10D7A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8508C", Offset = "0xB8508C")]
			set
			{
			}
		}

		[Token(Token = "0x17000470")]
		public HandDelegate OnOtherHandUpdate
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x10D7A74", Offset = "0x10D7A74", VA = "0x10D7A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8509C", Offset = "0xB8509C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x10D7A7C", Offset = "0x10D7A7C", VA = "0x10D7A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB850AC", Offset = "0xB850AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000471")]
		public Transform Transform
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x10D80F4", Offset = "0x10D80F4", VA = "0x10D80F4", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		public Vector3 InstantVelocity
		{
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x10D80FC", Offset = "0x10D80FC", VA = "0x10D80FC", Slot = "30")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000473")]
		public Vector3 AverageVelocity
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x10D8118", Offset = "0x10D8118", VA = "0x10D8118", Slot = "31")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000474")]
		public IHand CurrentHand
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x10D8134", Offset = "0x10D8134", VA = "0x10D8134", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000475")]
		public NetworkHand CachedNetworkHand
		{
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x10D8808", Offset = "0x10D8808", VA = "0x10D8808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB851FC", Offset = "0xB851FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x10D8810", Offset = "0x10D8810", VA = "0x10D8810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8520C", Offset = "0xB8520C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000476")]
		public bool IsDespawning
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x10D8820", Offset = "0x10D8820", VA = "0x10D8820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8521C", Offset = "0xB8521C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x10D8828", Offset = "0x10D8828", VA = "0x10D8828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8522C", Offset = "0xB8522C")]
			set
			{
			}
		}

		[Token(Token = "0x17000477")]
		public float RestingTimeBeforeRecycle
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x10D8834", Offset = "0x10D8834", VA = "0x10D8834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8523C", Offset = "0xB8523C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x10D883C", Offset = "0x10D883C", VA = "0x10D883C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8524C", Offset = "0xB8524C")]
			set
			{
			}
		}

		[Token(Token = "0x14000087")]
		public event Action<IGrabbable, IHand> OnGrab
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x10D7A8C", Offset = "0x10D7A8C", VA = "0x10D7A8C", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB850BC", Offset = "0xB850BC")]
			add
			{
			}
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0x10D7B30", Offset = "0x10D7B30", VA = "0x10D7B30", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB850CC", Offset = "0xB850CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public event Action<IGrabbable, IHand> OnPull
		{
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x10D7BD4", Offset = "0x10D7BD4", VA = "0x10D7BD4", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB850DC", Offset = "0xB850DC")]
			add
			{
			}
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x10D7C78", Offset = "0x10D7C78", VA = "0x10D7C78", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB850EC", Offset = "0xB850EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public event Action<IGrabbable, IHand> OnSwappedHand
		{
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x10D7D1C", Offset = "0x10D7D1C", VA = "0x10D7D1C", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB850FC", Offset = "0xB850FC")]
			add
			{
			}
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x10D7DC0", Offset = "0x10D7DC0", VA = "0x10D7DC0", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8510C", Offset = "0xB8510C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public event Action<IGrabbable> OnRelease
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x10D7E64", Offset = "0x10D7E64", VA = "0x10D7E64", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8511C", Offset = "0xB8511C")]
			add
			{
			}
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x10D7F08", Offset = "0x10D7F08", VA = "0x10D7F08", Slot = "26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8512C", Offset = "0xB8512C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public event Action<NetworkGrabbable> OnDespawned
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0x10D7FAC", Offset = "0x10D7FAC", VA = "0x10D7FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8513C", Offset = "0xB8513C")]
			add
			{
			}
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x10D8050", Offset = "0x10D8050", VA = "0x10D8050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8514C", Offset = "0xB8514C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public event Action<NetworkGrabbable, NetworkHand> OnFUNGrab
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x10D8138", Offset = "0x10D8138", VA = "0x10D8138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8515C", Offset = "0xB8515C")]
			add
			{
			}
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x10D81DC", Offset = "0x10D81DC", VA = "0x10D81DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8516C", Offset = "0xB8516C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public event Action<NetworkGrabbable, NetworkHand> OnFUNPull
		{
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x10D8280", Offset = "0x10D8280", VA = "0x10D8280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8517C", Offset = "0xB8517C")]
			add
			{
			}
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x10D8324", Offset = "0x10D8324", VA = "0x10D8324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8518C", Offset = "0xB8518C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008E")]
		public event Action<NetworkGrabbable> OnFUNRelease
		{
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x10D83C8", Offset = "0x10D83C8", VA = "0x10D83C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8519C", Offset = "0xB8519C")]
			add
			{
			}
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x10D846C", Offset = "0x10D846C", VA = "0x10D846C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB851AC", Offset = "0xB851AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public static event Action<NetworkGrabbable, NetworkHand> OnFUNGrabAny
		{
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x10D8510", Offset = "0x10D8510", VA = "0x10D8510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB851BC", Offset = "0xB851BC")]
			add
			{
			}
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x10D85CC", Offset = "0x10D85CC", VA = "0x10D85CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB851CC", Offset = "0xB851CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public static event Action<NetworkGrabbable> OnFUNReleaseAny
		{
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x10D8688", Offset = "0x10D8688", VA = "0x10D8688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB851DC", Offset = "0xB851DC")]
			add
			{
			}
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x10D8748", Offset = "0x10D8748", VA = "0x10D8748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB851EC", Offset = "0xB851EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x10D8844", Offset = "0x10D8844", VA = "0x10D8844", Slot = "34")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x10D8AB0", Offset = "0x10D8AB0", VA = "0x10D8AB0", Slot = "35")]
		protected virtual void OnHandUpdateCallback(NetworkHand hand, ref bool interactionEnabled, ref HandPose relaxedPose, ref HandPose clenchedPose, ref bool overrideBlendFactor, ref float blendFactor)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x10D8B18", Offset = "0x10D8B18", VA = "0x10D8B18", Slot = "36")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x10D8B1C", Offset = "0x10D8B1C", VA = "0x10D8B1C", Slot = "37")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x10D8BF4", Offset = "0x10D8BF4", VA = "0x10D8BF4", Slot = "38")]
		protected virtual void OnRecycle()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x10D8C54", Offset = "0x10D8C54", VA = "0x10D8C54", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x10D8C98", Offset = "0x10D8C98", VA = "0x10D8C98", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0x10D8D04", Offset = "0x10D8D04", VA = "0x10D8D04", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x10D9464", Offset = "0x10D9464", VA = "0x10D9464")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x10D94FC", Offset = "0x10D94FC", VA = "0x10D94FC", Slot = "39")]
		protected virtual void OnHandChanged(NetworkHand old, NetworkHand current)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x10D9080", Offset = "0x10D9080", VA = "0x10D9080")]
		private void FixedUpdateNetworkRelease(NetworkHand hand)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x10D9300", Offset = "0x10D9300", VA = "0x10D9300")]
		private void FixedUpdateNetworkGrab(NetworkHand hand)
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0x10D91D8", Offset = "0x10D91D8", VA = "0x10D91D8")]
		private void FixedUpdateNetworkPull(NetworkHand hand)
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x10D98D0", Offset = "0x10D98D0", VA = "0x10D98D0")]
		public void GetLocalPositionRotation(NetworkHand hand, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x10D99A4", Offset = "0x10D99A4", VA = "0x10D99A4")]
		public void Highlight(bool highlight, bool isUnlocked = true)
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x10D9AB0", Offset = "0x10D9AB0", VA = "0x10D9AB0")]
		public bool CanBeGrabbed(NetworkHand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x10D9B40", Offset = "0x10D9B40", VA = "0x10D9B40", Slot = "32")]
		public Vector3 GetSpawnPosition(Transform spawnTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x10D9C74", Offset = "0x10D9C74", VA = "0x10D9C74", Slot = "33")]
		public void Freeze(bool freezing = true)
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x10D9C78", Offset = "0x10D9C78", VA = "0x10D9C78")]
		public NetworkGrabbable()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x10D9D0C", Offset = "0x10D9D0C", VA = "0x10D9D0C", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x10D9D44", Offset = "0x10D9D44", VA = "0x10D9D44", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public class PlayerInputHandler : MonoBehaviour
	{
		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputData m_inputData;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NetworkPlayer m_networkPlayer;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private LocalPlayer m_localPlayer;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_isSnapTurning;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool m_isTeleporting;

		[Token(Token = "0x17000478")]
		public InputData InputData
		{
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xF6079C", Offset = "0xF6079C", VA = "0xF6079C")]
			get
			{
				return default(InputData);
			}
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0xF607AC", Offset = "0xF607AC", VA = "0xF607AC")]
		public void Initialise(NetworkPlayer networkPlayer, LocalPlayer localPlayer)
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0xF609E4", Offset = "0xF609E4", VA = "0xF609E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xF60BE8", Offset = "0xF60BE8", VA = "0xF60BE8")]
		private void OnSnapTurn(float delta, float angle)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xF60BF4", Offset = "0xF60BF4", VA = "0xF60BF4")]
		private void OnTeleportStart()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xF60C00", Offset = "0xF60C00", VA = "0xF60C00")]
		private void OnTeleportEnd()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xF60C08", Offset = "0xF60C08", VA = "0xF60C08")]
		private void OnInput(NetworkRunner runner, NetworkInput inputContainer)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xF60D44", Offset = "0xF60D44", VA = "0xF60D44")]
		public PlayerInputHandler()
		{
		}
	}
	[Token(Token = "0x2000576")]
	public class SyncedHandSkeleton : HandSkeleton
	{
		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ControllerInputBase.FingerCurls m_fingerCurls;

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x116E9E8", Offset = "0x116E9E8", VA = "0x116E9E8", Slot = "6")]
		protected override bool GetFingerCurls(out ControllerInputBase.FingerCurls fingerCurls)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x116EA24", Offset = "0x116EA24", VA = "0x116EA24")]
		public void UpdateFingerCurls(FingerCurls fingerCurls)
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x116EA88", Offset = "0x116EA88", VA = "0x116EA88")]
		public SyncedHandSkeleton()
		{
		}
	}
	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5E8DC", Offset = "0xB5E8DC")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xB5E8DC", Offset = "0xB5E8DC")]
	public class Body : MonoBehaviour
	{
		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_neckPivot;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB72520", Offset = "0xB72520")]
		private Vector3 m_positionOffsetFromHead;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetworkHead m_networkHead;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_networkHeadTransform;

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x1459130", Offset = "0x1459130", VA = "0x1459130")]
		public void Initialize(NetworkHead networkHead)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x1459270", Offset = "0x1459270", VA = "0x1459270")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x14593C8", Offset = "0x14593C8", VA = "0x14593C8")]
		public void SetLocal(bool isLocalPlayer)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x1459408", Offset = "0x1459408", VA = "0x1459408")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x1459528", Offset = "0x1459528", VA = "0x1459528")]
		public Body()
		{
		}
	}
	[Token(Token = "0x2000578")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5E98C", Offset = "0xB5E98C")]
	public class LocalPlayer : global::Player
	{
		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NetworkHand m_leftNetworkHand;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private NetworkHand m_rightNetworkHand;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private PlayerInputHandler m_playerInputHandler;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7256C", Offset = "0xB7256C")]
		private static LocalPlayer <LocalPlayerInstance>k__BackingField;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7257C", Offset = "0xB7257C")]
		private NetworkPlayer <NetworkPlayer>k__BackingField;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7258C", Offset = "0xB7258C")]
		private NetworkHead <NetworkHead>k__BackingField;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7259C", Offset = "0xB7259C")]
		private Body <Body>k__BackingField;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB725AC", Offset = "0xB725AC")]
		private PersonalSpaceProtector <SpaceProtector>k__BackingField;

		[Token(Token = "0x17000479")]
		public override IHand LeftHand
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x10C7444", Offset = "0x10C7444", VA = "0x10C7444", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047A")]
		public override IHand RightHand
		{
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x10C744C", Offset = "0x10C744C", VA = "0x10C744C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047B")]
		public static LocalPlayer LocalPlayerInstance
		{
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x10C7454", Offset = "0x10C7454", VA = "0x10C7454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8525C", Offset = "0xB8525C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0x10C74A0", Offset = "0x10C74A0", VA = "0x10C74A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8526C", Offset = "0xB8526C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700047C")]
		public NetworkPlayer NetworkPlayer
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x10C74F4", Offset = "0x10C74F4", VA = "0x10C74F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8527C", Offset = "0xB8527C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x10C74FC", Offset = "0x10C74FC", VA = "0x10C74FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8528C", Offset = "0xB8528C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700047D")]
		public NetworkHead NetworkHead
		{
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x10C750C", Offset = "0x10C750C", VA = "0x10C750C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8529C", Offset = "0xB8529C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x10C7514", Offset = "0x10C7514", VA = "0x10C7514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852AC", Offset = "0xB852AC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700047E")]
		public new Body Body
		{
			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x10C7524", Offset = "0x10C7524", VA = "0x10C7524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852BC", Offset = "0xB852BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0x10C752C", Offset = "0x10C752C", VA = "0x10C752C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852CC", Offset = "0xB852CC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public PlayerInputHandler PlayerInputHandler
		{
			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x10C753C", Offset = "0x10C753C", VA = "0x10C753C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000480")]
		public override bool IsMovingOrTurning
		{
			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x10C7544", Offset = "0x10C7544", VA = "0x10C7544", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000481")]
		public PersonalSpaceProtector SpaceProtector
		{
			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x10C75DC", Offset = "0x10C75DC", VA = "0x10C75DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852DC", Offset = "0xB852DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x10C75E4", Offset = "0x10C75E4", VA = "0x10C75E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852EC", Offset = "0xB852EC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000091")]
		public static event Action s_onLocalPlayerSpawned
		{
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x10C75F4", Offset = "0x10C75F4", VA = "0x10C75F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB852FC", Offset = "0xB852FC")]
			add
			{
			}
			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0x10C76B4", Offset = "0x10C76B4", VA = "0x10C76B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8530C", Offset = "0xB8530C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x10C7774", Offset = "0x10C7774", VA = "0x10C7774", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x10C78C4", Offset = "0x10C78C4", VA = "0x10C78C4", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x10C79BC", Offset = "0x10C79BC", VA = "0x10C79BC")]
		public void Initialise(NetworkPlayer networkPlayer)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x10C7D1C", Offset = "0x10C7D1C", VA = "0x10C7D1C")]
		public void SetFusionStats(bool active)
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x10C7CB0", Offset = "0x10C7CB0", VA = "0x10C7CB0")]
		private void InitHand(NetworkHand hand)
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x10C7D20", Offset = "0x10C7D20", VA = "0x10C7D20")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xB5E9EC", Offset = "0xB5E9EC")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5E9EC", Offset = "0xB5E9EC")]
	public class NetworkHand : NetworkBehaviour, IHand
	{
		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB725CC", Offset = "0xB725CC")]
		private NetworkButtons _ButtonsPrevious;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB7260C", Offset = "0xB7260C")]
		private NetworkGrabbable _CurrentGrabbable;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72660", Offset = "0xB72660")]
		private int _RelaxedPose;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB726B4", Offset = "0xB726B4")]
		private int _ClenchedPose;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72708", Offset = "0xB72708")]
		private FingerCurls _FingerCurls;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72748", Offset = "0xB72748")]
		private Vector3 _PullStartPosition;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB7279C", Offset = "0xB7279C")]
		private Quaternion _PullStartRotation;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB727F0", Offset = "0xB727F0")]
		private TickTimer _PullTimer;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72844", Offset = "0xB72844")]
		private NetworkGrabbable _SelectedGrabbable;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72884", Offset = "0xB72884")]
		private NetworkBool _SelectedOverlap;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB728C4", Offset = "0xB728C4")]
		private bool _InteractionEnabled;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72904", Offset = "0xB72904")]
		public LayerMask m_layerMask;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Transform m_grabRayTransform;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float m_grabRayStartRadius;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float m_grabRayEndRadius;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float m_grabMaxDistance;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7293C", Offset = "0xB7293C")]
		public Renderer m_rendererHand;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Renderer m_rendererBracelet;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72974", Offset = "0xB72974")]
		public Transform m_grabOverlapTransform;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float m_grabRadius;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB729AC", Offset = "0xB729AC")]
		[SerializeField]
		private int m_velocityAveragingFrameCount;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB729F8", Offset = "0xB729F8")]
		public UIToucher m_uiToucher;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Transform m_padFollowTransform;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A30", Offset = "0xB72A30")]
		private ControllerInputBase <Controller>k__BackingField;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A40", Offset = "0xB72A40")]
		private bool <InteractOrHoldDown>k__BackingField;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A50", Offset = "0xB72A50")]
		private bool <NetworkInteractOrHoldDown>k__BackingField;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A60", Offset = "0xB72A60")]
		private bool <NetworkInteract>k__BackingField;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A70", Offset = "0xB72A70")]
		private bool <NetworkInteractDown>k__BackingField;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A80", Offset = "0xB72A80")]
		private bool <NetworkInteractUp>k__BackingField;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72A90", Offset = "0xB72A90")]
		private bool <NetworkInteractOrHold>k__BackingField;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AA0", Offset = "0xB72AA0")]
		private bool <NetworkInteractOrHoldUp>k__BackingField;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AB0", Offset = "0xB72AB0")]
		private bool <NetworkSettingsUp>k__BackingField;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AC0", Offset = "0xB72AC0")]
		private bool <NetworkIsInteractingWithUI>k__BackingField;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AD0", Offset = "0xB72AD0")]
		private readonly GameObject <Bracelet>k__BackingField;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AE0", Offset = "0xB72AE0")]
		private readonly bool <ThumbstickDown>k__BackingField;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72AF0", Offset = "0xB72AF0")]
		private IHand <OtherHand>k__BackingField;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B00", Offset = "0xB72B00")]
		private NetworkHand <OtherNetworkHand>k__BackingField;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B20", Offset = "0xB72B20")]
		private NetworkPlayer <NetworkPlayer>k__BackingField;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private NetworkTransform m_networkTransform;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SyncedHandSkeleton m_syncedHandSkeleton;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool m_inputHold;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool m_inputInteract;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		private bool m_inputSettings;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private NetworkGrabbable m_selectedVisual;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Transform m_transform;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float m_pullDuration;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 m_lastPullStartPosition;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Quaternion m_lastPullStartRotation;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Grabbable.Vector3History m_velocityHistory;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Grabbable.Vector3History m_angularVelocityHistory;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Vector3 m_lastPosition;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Quaternion m_lastRotation;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private bool m_isProxy;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		private bool m_hasInputAuthority;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private PhysicsScene m_physicsScene;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Collider[] s_colliderHits;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ProfilerMarker s_fixedUpdateNetwork;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly ProfilerMarker s_render;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Changed<NetworkHand> $IL2CPP_CHANGED;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static ChangedDelegate<NetworkHand> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static NetworkBehaviourCallbacks<NetworkHand> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x17000482")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AA98", Offset = "0xB8AA98")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AA98", Offset = "0xB8AA98")]
		private NetworkButtons ButtonsPrevious
		{
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x10DA258", Offset = "0x10DA258", VA = "0x10DA258")]
			get
			{
				return default(NetworkButtons);
			}
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x10DA2BC", Offset = "0x10DA2BC", VA = "0x10DA2BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000483")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AAD8", Offset = "0xB8AAD8")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AAD8", Offset = "0xB8AAD8")]
		public NetworkGrabbable CurrentGrabbable
		{
			[Token(Token = "0x6002000")]
			[Address(RVA = "0x10DA320", Offset = "0x10DA320", VA = "0x10DA320")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002001")]
			[Address(RVA = "0x10DA430", Offset = "0x10DA430", VA = "0x10DA430")]
			private set
			{
			}
		}

		[Token(Token = "0x17000484")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AB18", Offset = "0xB8AB18")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AB18", Offset = "0xB8AB18")]
		public int RelaxedPose
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0x10DA4EC", Offset = "0x10DA4EC", VA = "0x10DA4EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002003")]
			[Address(RVA = "0x10DA550", Offset = "0x10DA550", VA = "0x10DA550")]
			private set
			{
			}
		}

		[Token(Token = "0x17000485")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AB80", Offset = "0xB8AB80")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AB80", Offset = "0xB8AB80")]
		public int ClenchedPose
		{
			[Token(Token = "0x6002004")]
			[Address(RVA = "0x10DA5B4", Offset = "0x10DA5B4", VA = "0x10DA5B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002005")]
			[Address(RVA = "0x10DA618", Offset = "0x10DA618", VA = "0x10DA618")]
			private set
			{
			}
		}

		[Token(Token = "0x17000486")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8ABE8", Offset = "0xB8ABE8")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8ABE8", Offset = "0xB8ABE8")]
		private FingerCurls FingerCurls
		{
			[Token(Token = "0x6002006")]
			[Address(RVA = "0x10DA67C", Offset = "0x10DA67C", VA = "0x10DA67C")]
			get
			{
				return default(FingerCurls);
			}
			[Token(Token = "0x6002007")]
			[Address(RVA = "0x10DA6EC", Offset = "0x10DA6EC", VA = "0x10DA6EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000487")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AC50", Offset = "0xB8AC50")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AC50", Offset = "0xB8AC50")]
		public Vector3 PullStartPosition
		{
			[Token(Token = "0x6002008")]
			[Address(RVA = "0x10DA75C", Offset = "0x10DA75C", VA = "0x10DA75C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002009")]
			[Address(RVA = "0x10DA7E4", Offset = "0x10DA7E4", VA = "0x10DA7E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000488")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AC90", Offset = "0xB8AC90")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AC90", Offset = "0xB8AC90")]
		public Quaternion PullStartRotation
		{
			[Token(Token = "0x600200A")]
			[Address(RVA = "0x10DA8F4", Offset = "0x10DA8F4", VA = "0x10DA8F4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600200B")]
			[Address(RVA = "0x10DA984", Offset = "0x10DA984", VA = "0x10DA984")]
			private set
			{
			}
		}

		[Token(Token = "0x17000489")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8ACD0", Offset = "0xB8ACD0")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8ACD0", Offset = "0xB8ACD0")]
		public TickTimer PullTimer
		{
			[Token(Token = "0x600200C")]
			[Address(RVA = "0x10DAAC4", Offset = "0x10DAAC4", VA = "0x10DAAC4")]
			get
			{
				return default(TickTimer);
			}
			[Token(Token = "0x600200D")]
			[Address(RVA = "0x10DAB28", Offset = "0x10DAB28", VA = "0x10DAB28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700048A")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AD10", Offset = "0xB8AD10")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AD10", Offset = "0xB8AD10")]
		private NetworkGrabbable SelectedGrabbable
		{
			[Token(Token = "0x600200E")]
			[Address(RVA = "0x10DAB8C", Offset = "0x10DAB8C", VA = "0x10DAB8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x10DAC9C", Offset = "0x10DAC9C", VA = "0x10DAC9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700048B")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AD50", Offset = "0xB8AD50")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AD50", Offset = "0xB8AD50")]
		private NetworkBool SelectedOverlap
		{
			[Token(Token = "0x6002010")]
			[Address(RVA = "0x10DAD58", Offset = "0x10DAD58", VA = "0x10DAD58")]
			get
			{
				return default(NetworkBool);
			}
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x10DADBC", Offset = "0x10DADBC", VA = "0x10DADBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700048C")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AD90", Offset = "0xB8AD90")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AD90", Offset = "0xB8AD90")]
		private bool InteractionEnabled
		{
			[Token(Token = "0x6002012")]
			[Address(RVA = "0x10DAE20", Offset = "0x10DAE20", VA = "0x10DAE20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002013")]
			[Address(RVA = "0x10DAE8C", Offset = "0x10DAE8C", VA = "0x10DAE8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700048D")]
		public ControllerInputBase Controller
		{
			[Token(Token = "0x6002014")]
			[Address(RVA = "0x10DAEF4", Offset = "0x10DAEF4", VA = "0x10DAEF4", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8531C", Offset = "0xB8531C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x10DAEFC", Offset = "0x10DAEFC", VA = "0x10DAEFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8532C", Offset = "0xB8532C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700048E")]
		public HandSkeleton Skeleton
		{
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x10DAF0C", Offset = "0x10DAF0C", VA = "0x10DAF0C", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		public UIToucher UIToucher
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x10DAF14", Offset = "0x10DAF14", VA = "0x10DAF14", Slot = "21")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		public Transform Transform
		{
			[Token(Token = "0x6002018")]
			[Address(RVA = "0x10DAF1C", Offset = "0x10DAF1C", VA = "0x10DAF1C", Slot = "22")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000491")]
		public Transform PadFollowTransform
		{
			[Token(Token = "0x6002019")]
			[Address(RVA = "0x10DAF24", Offset = "0x10DAF24", VA = "0x10DAF24", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000492")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x600201A")]
			[Address(RVA = "0x10DAF2C", Offset = "0x10DAF2C", VA = "0x10DAF2C", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000493")]
		public bool InteractOrHoldDown
		{
			[Token(Token = "0x600201B")]
			[Address(RVA = "0x10DAF34", Offset = "0x10DAF34", VA = "0x10DAF34", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8533C", Offset = "0xB8533C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600201C")]
			[Address(RVA = "0x10DAF3C", Offset = "0x10DAF3C", VA = "0x10DAF3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8534C", Offset = "0xB8534C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000494")]
		public bool NetworkInteractOrHoldDown
		{
			[Token(Token = "0x600201D")]
			[Address(RVA = "0x10DAF48", Offset = "0x10DAF48", VA = "0x10DAF48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8535C", Offset = "0xB8535C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600201E")]
			[Address(RVA = "0x10DAF50", Offset = "0x10DAF50", VA = "0x10DAF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8536C", Offset = "0xB8536C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000495")]
		public bool NetworkInteract
		{
			[Token(Token = "0x600201F")]
			[Address(RVA = "0x10DAF5C", Offset = "0x10DAF5C", VA = "0x10DAF5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8537C", Offset = "0xB8537C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002020")]
			[Address(RVA = "0x10DAF64", Offset = "0x10DAF64", VA = "0x10DAF64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8538C", Offset = "0xB8538C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000496")]
		public bool NetworkInteractDown
		{
			[Token(Token = "0x6002021")]
			[Address(RVA = "0x10DAF70", Offset = "0x10DAF70", VA = "0x10DAF70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8539C", Offset = "0xB8539C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002022")]
			[Address(RVA = "0x10DAF78", Offset = "0x10DAF78", VA = "0x10DAF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB853AC", Offset = "0xB853AC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000497")]
		public bool NetworkInteractUp
		{
			[Token(Token = "0x6002023")]
			[Address(RVA = "0x10DAF84", Offset = "0x10DAF84", VA = "0x10DAF84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB853BC", Offset = "0xB853BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002024")]
			[Address(RVA = "0x10DAF8C", Offset = "0x10DAF8C", VA = "0x10DAF8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB853CC", Offset = "0xB853CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000498")]
		public bool NetworkInteractOrHold
		{
			[Token(Token = "0x6002025")]
			[Address(RVA = "0x10DAF98", Offset = "0x10DAF98", VA = "0x10DAF98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB853DC", Offset = "0xB853DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002026")]
			[Address(RVA = "0x10DAFA0", Offset = "0x10DAFA0", VA = "0x10DAFA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB853EC", Offset = "0xB853EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000499")]
		public bool NetworkInteractOrHoldUp
		{
			[Token(Token = "0x6002027")]
			[Address(RVA = "0x10DAFAC", Offset = "0x10DAFAC", VA = "0x10DAFAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB853FC", Offset = "0xB853FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002028")]
			[Address(RVA = "0x10DAFB4", Offset = "0x10DAFB4", VA = "0x10DAFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8540C", Offset = "0xB8540C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700049A")]
		public bool NetworkSettingsUp
		{
			[Token(Token = "0x6002029")]
			[Address(RVA = "0x10DAFC0", Offset = "0x10DAFC0", VA = "0x10DAFC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8541C", Offset = "0xB8541C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600202A")]
			[Address(RVA = "0x10DAFC8", Offset = "0x10DAFC8", VA = "0x10DAFC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8542C", Offset = "0xB8542C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700049B")]
		public bool NetworkIsInteractingWithUI
		{
			[Token(Token = "0x600202B")]
			[Address(RVA = "0x10DAFD4", Offset = "0x10DAFD4", VA = "0x10DAFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8543C", Offset = "0xB8543C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600202C")]
			[Address(RVA = "0x10DAFDC", Offset = "0x10DAFDC", VA = "0x10DAFDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8544C", Offset = "0xB8544C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700049C")]
		public GameObject Bracelet
		{
			[Token(Token = "0x600202D")]
			[Address(RVA = "0x10DAFE8", Offset = "0x10DAFE8", VA = "0x10DAFE8", Slot = "26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8545C", Offset = "0xB8545C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049D")]
		public bool ThumbstickDown
		{
			[Token(Token = "0x600202E")]
			[Address(RVA = "0x10DAFF0", Offset = "0x10DAFF0", VA = "0x10DAFF0", Slot = "34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8546C", Offset = "0xB8546C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700049E")]
		public float GrabMaxDistance
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0x10DAFF8", Offset = "0x10DAFF8", VA = "0x10DAFF8", Slot = "27")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002030")]
			[Address(RVA = "0x10DB000", Offset = "0x10DB000", VA = "0x10DB000", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x1700049F")]
		public ControllerInputBase.HandSide Side
		{
			[Token(Token = "0x6002031")]
			[Address(RVA = "0x10D9988", Offset = "0x10D9988", VA = "0x10D9988", Slot = "29")]
			get
			{
				return default(ControllerInputBase.HandSide);
			}
		}

		[Token(Token = "0x170004A0")]
		public bool PullingAndGrabbingEnabled
		{
			[Token(Token = "0x6002032")]
			[Address(RVA = "0x10DB008", Offset = "0x10DB008", VA = "0x10DB008", Slot = "30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002033")]
			[Address(RVA = "0x10DB0B8", Offset = "0x10DB0B8", VA = "0x10DB0B8", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x170004A1")]
		public bool IsFree
		{
			[Token(Token = "0x6002034")]
			[Address(RVA = "0x10DB0BC", Offset = "0x10DB0BC", VA = "0x10DB0BC", Slot = "32")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A2")]
		public Grabbable CurrentGrabbedObject
		{
			[Token(Token = "0x6002035")]
			[Address(RVA = "0x10DB150", Offset = "0x10DB150", VA = "0x10DB150", Slot = "33")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A3")]
		public IHand OtherHand
		{
			[Token(Token = "0x6002036")]
			[Address(RVA = "0x10DB158", Offset = "0x10DB158", VA = "0x10DB158", Slot = "40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8547C", Offset = "0xB8547C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002037")]
			[Address(RVA = "0x10DB160", Offset = "0x10DB160", VA = "0x10DB160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8548C", Offset = "0xB8548C")]
			private set
			{
			}
		}

		[Token(Token = "0x170004A4")]
		public NetworkHand OtherNetworkHand
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0x10DB170", Offset = "0x10DB170", VA = "0x10DB170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8549C", Offset = "0xB8549C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002039")]
			[Address(RVA = "0x10DB178", Offset = "0x10DB178", VA = "0x10DB178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854AC", Offset = "0xB854AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170004A5")]
		public NetworkPlayer NetworkPlayer
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0x10DB2D0", Offset = "0x10DB2D0", VA = "0x10DB2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854DC", Offset = "0xB854DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600203D")]
			[Address(RVA = "0x10DB2D8", Offset = "0x10DB2D8", VA = "0x10DB2D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854EC", Offset = "0xB854EC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000092")]
		public event Action<Collision> OnOtherCollisionEnter
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0x10DB188", Offset = "0x10DB188", VA = "0x10DB188", Slot = "41")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854BC", Offset = "0xB854BC")]
			add
			{
			}
			[Token(Token = "0x600203B")]
			[Address(RVA = "0x10DB22C", Offset = "0x10DB22C", VA = "0x10DB22C", Slot = "42")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB854CC", Offset = "0xB854CC")]
			remove
			{
			}
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x10DB2E8", Offset = "0x10DB2E8", VA = "0x10DB2E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x10DB590", Offset = "0x10DB590", VA = "0x10DB590")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x10DB62C", Offset = "0x10DB62C", VA = "0x10DB62C")]
		public void SetLocal(bool isLocal)
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x10DB698", Offset = "0x10DB698", VA = "0x10DB698", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x10DB72C", Offset = "0x10DB72C", VA = "0x10DB72C", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x10DB86C", Offset = "0x10DB86C", VA = "0x10DB86C")]
		private void OnSettingsShortPress()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x10DB878", Offset = "0x10DB878", VA = "0x10DB878")]
		private void Update()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x10DB8F4", Offset = "0x10DB8F4", VA = "0x10DB8F4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x10DBB1C", Offset = "0x10DBB1C", VA = "0x10DBB1C")]
		public void OnInput(ref HandInputData handInputData)
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x10DBD10", Offset = "0x10DBD10", VA = "0x10DBD10")]
		private void QueryGrabbableNetworkBehaviourId(out NetworkBehaviourId id, out bool overlap)
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x10DC3D4", Offset = "0x10DC3D4", VA = "0x10DC3D4", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x10DC6D4", Offset = "0x10DC6D4", VA = "0x10DC6D4")]
		public void ApplyInput(InputData input, HandInputData handInput)
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x10DCC78", Offset = "0x10DCC78", VA = "0x10DCC78", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x10DC978", Offset = "0x10DC978", VA = "0x10DC978")]
		private void UpdatePosition(InputData inputData, HandInputData handInputData)
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x10DC4CC", Offset = "0x10DC4CC", VA = "0x10DC4CC")]
		public void UpdateGrabbable(NetworkGrabbable grabbable)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x10DD0F8", Offset = "0x10DD0F8", VA = "0x10DD0F8")]
		public void GetPositionRotation(NetworkGrabbable grabbable, out Vector3 targetPos, out Quaternion targetRot)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x10DD2A0", Offset = "0x10DD2A0", VA = "0x10DD2A0")]
		private void UpdateHand(NetworkGrabbable grabbable, NetworkGrabbable otherGrabbable)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x10DD420", Offset = "0x10DD420", VA = "0x10DD420")]
		public void SetGrabbable(NetworkGrabbable grabbable)
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x10DD544", Offset = "0x10DD544", VA = "0x10DD544")]
		public void UnsetGrabbable()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x10DD56C", Offset = "0x10DD56C", VA = "0x10DD56C")]
		public void UnsetGrabbable(NetworkGrabbable grabbable)
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x10DD65C", Offset = "0x10DD65C", VA = "0x10DD65C")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB854FC", Offset = "0xB854FC")]
		public void RpcUnsetGrabbable()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x10D976C", Offset = "0x10D976C", VA = "0x10D976C")]
		public void ApplyVelocity(NetworkGrabbable grabbable)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x10DBE4C", Offset = "0x10DBE4C", VA = "0x10DBE4C")]
		private void QueryGrabbablePointed(out NetworkGrabbable result, out bool overlap)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x10DCAAC", Offset = "0x10DCAAC", VA = "0x10DCAAC")]
		private void UpdateSelected(HandInputData handInputData)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x10DD808", Offset = "0x10DD808", VA = "0x10DD808")]
		[Preserve]
		private static void OnPosesChanged(Changed<NetworkHand> changed)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x10DD948", Offset = "0x10DD948", VA = "0x10DD948")]
		[Preserve]
		private static void OnFingerCurlsChanged(Changed<NetworkHand> changed)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0x10DD9C8", Offset = "0x10DD9C8", VA = "0x10DD9C8", Slot = "36")]
		public void ForceGrab(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x10DDA1C", Offset = "0x10DDA1C", VA = "0x10DDA1C", Slot = "37")]
		public bool TakeExternalControl(GameObject controllingObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x10DDA70", Offset = "0x10DDA70", VA = "0x10DDA70", Slot = "38")]
		public void ReleaseExternalControl(GameObject controllingObject)
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x10DDAC4", Offset = "0x10DDAC4", VA = "0x10DDAC4", Slot = "39")]
		public void GrabObject(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x10DDB18", Offset = "0x10DDB18", VA = "0x10DDB18", Slot = "35")]
		public bool ReleaseCurrentlyGrabbedObject(bool forceRelease = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x10DCFA0", Offset = "0x10DCFA0", VA = "0x10DCFA0")]
		private bool IsGrabbableUnlocked(global::Game.Unlockable unlockable)
		{
			return default(bool);
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x10DDB6C", Offset = "0x10DDB6C", VA = "0x10DDB6C")]
		public NetworkHand()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x10DDC80", Offset = "0x10DDC80", VA = "0x10DDC80", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x10DDD38", Offset = "0x10DDD38", VA = "0x10DDD38", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x10DDE10", Offset = "0x10DDE10", VA = "0x10DDE10")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB85554", Offset = "0xB85554")]
		[Preserve]
		protected unsafe static void RpcUnsetGrabbable@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200057A")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5EA94", Offset = "0xB5EA94")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xB5EA94", Offset = "0xB5EA94")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5EA94", Offset = "0xB5EA94")]
	public class NetworkHead : NetworkBehaviour
	{
		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_headVisual;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Body m_body;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioSource m_voiceAudioSource;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72B60", Offset = "0xB72B60")]
		private NetworkTransform <NetworkTransform>k__BackingField;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_hasInputAuthority;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkHead> $IL2CPP_CHANGED;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkHead> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkHead> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170004A6")]
		public NetworkTransform NetworkTransform
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0x10DDE9C", Offset = "0x10DDE9C", VA = "0x10DDE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85598", Offset = "0xB85598")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x10DDEA4", Offset = "0x10DDEA4", VA = "0x10DDEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855A8", Offset = "0xB855A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170004A7")]
		public AudioSource VoiceAudioSource
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x10DDEAC", Offset = "0x10DDEAC", VA = "0x10DDEAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000093")]
		public event Action OnRender
		{
			[Token(Token = "0x6002066")]
			[Address(RVA = "0x10DDEB4", Offset = "0x10DDEB4", VA = "0x10DDEB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855B8", Offset = "0xB855B8")]
			add
			{
			}
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x10DDF54", Offset = "0x10DDF54", VA = "0x10DDF54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855C8", Offset = "0xB855C8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000094")]
		public event Action OnFUNForward
		{
			[Token(Token = "0x6002068")]
			[Address(RVA = "0x10DDFF4", Offset = "0x10DDFF4", VA = "0x10DDFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855D8", Offset = "0xB855D8")]
			add
			{
			}
			[Token(Token = "0x6002069")]
			[Address(RVA = "0x10DE094", Offset = "0x10DE094", VA = "0x10DE094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855E8", Offset = "0xB855E8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000095")]
		public event Action OnProxieRender
		{
			[Token(Token = "0x600206A")]
			[Address(RVA = "0x10DE134", Offset = "0x10DE134", VA = "0x10DE134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB855F8", Offset = "0xB855F8")]
			add
			{
			}
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x10DE1D4", Offset = "0x10DE1D4", VA = "0x10DE1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85608", Offset = "0xB85608")]
			remove
			{
			}
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x10DE274", Offset = "0x10DE274", VA = "0x10DE274")]
		private void Awake()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x10DE2D0", Offset = "0x10DE2D0", VA = "0x10DE2D0", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x10DE344", Offset = "0x10DE344", VA = "0x10DE344")]
		public void SetLocal(bool isLocalPlayer)
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x10DE368", Offset = "0x10DE368", VA = "0x10DE368")]
		public void ApplyInput(InputData inputData)
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x10DE4B0", Offset = "0x10DE4B0", VA = "0x10DE4B0")]
		public void OnInput(ref InputData inputData)
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x10DE544", Offset = "0x10DE544", VA = "0x10DE544", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x10DE640", Offset = "0x10DE640", VA = "0x10DE640")]
		public NetworkHead()
		{
		}
	}
	[Token(Token = "0x200057B")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xB5EB58", Offset = "0xB5EB58")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5EB58", Offset = "0xB5EB58")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5EB58", Offset = "0xB5EB58")]
	public class NetworkPad : NetworkBehaviour
	{
		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72BA0", Offset = "0xB72BA0")]
		private bool _IsOpened;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72BF4", Offset = "0xB72BF4")]
		public SyncedPadControllerBase m_localPrefab;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SyncedPadControllerBase m_remotePrefab;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72C2C", Offset = "0xB72C2C")]
		public HandPose m_pointerHandPose;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject m_padAnchor;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public NetworkPlayer m_networkPlayer;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72C64", Offset = "0xB72C64")]
		public MeshRenderer[] m_braceletRenderers;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject[] m_braceletsEffects;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB72C9C", Offset = "0xB72C9C")]
		public ISound m_holsterSound;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ISound m_unholsterSound;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NetworkGrabbable m_grabbable;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private NetworkTransform m_networkTransform;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_isOpen;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_isClosing;

		[Token(Token = "0x400220D")]
		protected const float m_closeTime = 0.6f;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float m_closeRemainingTime;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_flyStartPosition;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion m_flyStartRotation;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private NetworkHand m_currentHand;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_hasInputAuthority;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_isProxy;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72CD4", Offset = "0xB72CD4")]
		private SyncedPadControllerBase <Controller>k__BackingField;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkPad> $IL2CPP_CHANGED;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkPad> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkPad> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170004A8")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8ADD0", Offset = "0xB8ADD0")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8ADD0", Offset = "0xB8ADD0")]
		public bool IsOpened
		{
			[Token(Token = "0x6002073")]
			[Address(RVA = "0x10DFDF8", Offset = "0x10DFDF8", VA = "0x10DFDF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002074")]
			[Address(RVA = "0x10DFE64", Offset = "0x10DFE64", VA = "0x10DFE64")]
			set
			{
			}
		}

		[Token(Token = "0x170004A9")]
		public NetworkGrabbable NetworkGrabbable
		{
			[Token(Token = "0x6002075")]
			[Address(RVA = "0x10DFECC", Offset = "0x10DFECC", VA = "0x10DFECC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		public SyncedPadControllerBase Controller
		{
			[Token(Token = "0x6002076")]
			[Address(RVA = "0x10DFED4", Offset = "0x10DFED4", VA = "0x10DFED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85618", Offset = "0xB85618")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002077")]
			[Address(RVA = "0x10DFEDC", Offset = "0x10DFEDC", VA = "0x10DFEDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85628", Offset = "0xB85628")]
			private set
			{
			}
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x10DFEEC", Offset = "0x10DFEEC", VA = "0x10DFEEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x10DFFC8", Offset = "0x10DFFC8", VA = "0x10DFFC8")]
		private void OnOtherHandCallback(NetworkHand hand, ref bool interactionEnabled, ref HandPose relaxedPose, ref HandPose clenchedPose, ref bool overrideBlendFactor, ref float blendFactor)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x10E0024", Offset = "0x10E0024", VA = "0x10E0024", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x10E022C", Offset = "0x10E022C", VA = "0x10E022C", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x10E0384", Offset = "0x10E0384", VA = "0x10E0384", Slot = "19")]
		public virtual void OnFixedUpdateNetworkGrab(IGrabbable grabbable, IHand hand)
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x10E0508", Offset = "0x10E0508", VA = "0x10E0508", Slot = "20")]
		public virtual void OnFixedUpdateNetworkRelease(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x10E0598", Offset = "0x10E0598", VA = "0x10E0598", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x10E0600", Offset = "0x10E0600", VA = "0x10E0600", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x10E0920", Offset = "0x10E0920", VA = "0x10E0920")]
		public NetworkPad()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x10E0930", Offset = "0x10E0930", VA = "0x10E0930", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x10E0938", Offset = "0x10E0938", VA = "0x10E0938", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5EC28", Offset = "0xB5EC28")]
	public class NetworkPlayer : NetworkBehaviour
	{
		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EC3C", Offset = "0xB5EC3C")]
		private sealed class <>c__DisplayClass99_0
		{
			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkHand hand;

			[Token(Token = "0x60020C5")]
			[Address(RVA = "0xFB333C", Offset = "0xFB333C", VA = "0xFB333C")]
			public <>c__DisplayClass99_0()
			{
			}

			[Token(Token = "0x60020C6")]
			[Address(RVA = "0xFB3344", Offset = "0xFB3344", VA = "0xFB3344")]
			internal void <SpawnInHand>b__0(NetworkRunner runner, NetworkObject o)
			{
			}
		}

		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EC4C", Offset = "0xB5EC4C")]
		private sealed class <>c__DisplayClass101_0
		{
			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkHand hand;

			[Token(Token = "0x60020C7")]
			[Address(RVA = "0xFB31C8", Offset = "0xFB31C8", VA = "0xFB31C8")]
			public <>c__DisplayClass101_0()
			{
			}

			[Token(Token = "0x60020C8")]
			[Address(RVA = "0xFB31D0", Offset = "0xFB31D0", VA = "0xFB31D0")]
			internal void <SpawnInHand>b__0(NetworkRunner runner, NetworkObject o)
			{
			}
		}

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RemotePlayer m_remotePlayerPrefab;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private NetworkHand m_leftNetworkHand;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NetworkHand m_rightNetworkHand;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NetworkHead m_networkHead;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Body m_body;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private PlayerAvatar m_avatar;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private NetworkedPlayerAvatar m_networkedPlayerAvatar;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private NetworkPad m_networkPad;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private PadHologram m_padHologram;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Transform m_hitBoxRootTransform;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Speaker m_speaker;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72D84", Offset = "0xB72D84")]
		private NetworkString<_32> _PlayerName;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72DD8", Offset = "0xB72DD8")]
		private string _PlayerId;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB72E2C", Offset = "0xB72E2C")]
		private string <AnalyticsId>k__BackingField;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72E3C", Offset = "0xB72E3C")]
		private NetworkedGameMode _CurrentGameMode;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72E90", Offset = "0xB72E90")]
		private int _FactionId;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72EE4", Offset = "0xB72EE4")]
		private bool _LocomotionBlock;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72F38", Offset = "0xB72F38")]
		private bool _GrabBlock;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72F8C", Offset = "0xB72F8C")]
		private bool _SettingsBlock;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB72FE0", Offset = "0xB72FE0")]
		private Vector3 _FeetPosition;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Interpolator<Vector3> m_netVector3Interpolator;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73034", Offset = "0xB73034")]
		public NetworkSocket m_socketHead;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7306C", Offset = "0xB7306C")]
		private LocalPlayer <LocalPlayer>k__BackingField;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private RemotePlayer m_remotePlayer;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7307C", Offset = "0xB7307C")]
		private PlayerSpaceInvader <PlayerSpaceInvader>k__BackingField;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7309C", Offset = "0xB7309C")]
		private PlayerData <PlayerData>k__BackingField;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB730AC", Offset = "0xB730AC")]
		private ProjectileManager <ProjectileManager>k__BackingField;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkPlayer> $IL2CPP_CHANGED;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkPlayer> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkPlayer> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private string cache_PlayerId;

		[Token(Token = "0x170004AB")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AE10", Offset = "0xB8AE10")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AE10", Offset = "0xB8AE10")]
		public NetworkString<_32> PlayerName
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x10E0960", Offset = "0x10E0960", VA = "0x10E0960")]
			get
			{
				return default(NetworkString<_32>);
			}
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x10E09C8", Offset = "0x10E09C8", VA = "0x10E09C8")]
			set
			{
			}
		}

		[Token(Token = "0x170004AC")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AE70", Offset = "0xB8AE70")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AE70", Offset = "0xB8AE70")]
		public string PlayerId
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x10E0A38", Offset = "0x10E0A38", VA = "0x10E0A38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002086")]
			[Address(RVA = "0x10E0ABC", Offset = "0x10E0ABC", VA = "0x10E0ABC")]
			set
			{
			}
		}

		[Token(Token = "0x170004AD")]
		public string AnalyticsId
		{
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x10E0B30", Offset = "0x10E0B30", VA = "0x10E0B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85638", Offset = "0xB85638")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x10E0B38", Offset = "0x10E0B38", VA = "0x10E0B38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85648", Offset = "0xB85648")]
			set
			{
			}
		}

		[Token(Token = "0x170004AE")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AEB0", Offset = "0xB8AEB0")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AEB0", Offset = "0xB8AEB0")]
		public NetworkedGameMode CurrentGameMode
		{
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x10DD190", Offset = "0x10DD190", VA = "0x10DD190")]
			get
			{
				return null;
			}
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x10E0B48", Offset = "0x10E0B48", VA = "0x10E0B48")]
			set
			{
			}
		}

		[Token(Token = "0x170004AF")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AEF0", Offset = "0xB8AEF0")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AEF0", Offset = "0xB8AEF0")]
		public int FactionId
		{
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x10E0C04", Offset = "0x10E0C04", VA = "0x10E0C04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600208C")]
			[Address(RVA = "0x10E0C68", Offset = "0x10E0C68", VA = "0x10E0C68")]
			set
			{
			}
		}

		[Token(Token = "0x170004B0")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AF30", Offset = "0xB8AF30")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AF30", Offset = "0xB8AF30")]
		public bool LocomotionBlock
		{
			[Token(Token = "0x600208D")]
			[Address(RVA = "0x10E0CCC", Offset = "0x10E0CCC", VA = "0x10E0CCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600208E")]
			[Address(RVA = "0x10E0D38", Offset = "0x10E0D38", VA = "0x10E0D38")]
			set
			{
			}
		}

		[Token(Token = "0x170004B1")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8AF98", Offset = "0xB8AF98")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8AF98", Offset = "0xB8AF98")]
		public bool GrabBlock
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0x10DB04C", Offset = "0x10DB04C", VA = "0x10DB04C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002090")]
			[Address(RVA = "0x10E0DA0", Offset = "0x10E0DA0", VA = "0x10E0DA0")]
			set
			{
			}
		}

		[Token(Token = "0x170004B2")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8B000", Offset = "0xB8B000")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8B000", Offset = "0xB8B000")]
		public bool SettingsBlock
		{
			[Token(Token = "0x6002091")]
			[Address(RVA = "0x10E0E08", Offset = "0x10E0E08", VA = "0x10E0E08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002092")]
			[Address(RVA = "0x10E0E74", Offset = "0x10E0E74", VA = "0x10E0E74")]
			set
			{
			}
		}

		[Token(Token = "0x170004B3")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8B068", Offset = "0xB8B068")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8B068", Offset = "0xB8B068")]
		public Vector3 FeetPosition
		{
			[Token(Token = "0x6002093")]
			[Address(RVA = "0x10E0EDC", Offset = "0x10E0EDC", VA = "0x10E0EDC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002094")]
			[Address(RVA = "0x10E0F64", Offset = "0x10E0F64", VA = "0x10E0F64")]
			set
			{
			}
		}

		[Token(Token = "0x170004B4")]
		public LocalPlayer LocalPlayer
		{
			[Token(Token = "0x6002095")]
			[Address(RVA = "0x10E1074", Offset = "0x10E1074", VA = "0x10E1074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85658", Offset = "0xB85658")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x10E107C", Offset = "0x10E107C", VA = "0x10E107C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85668", Offset = "0xB85668")]
			private set
			{
			}
		}

		[Token(Token = "0x170004B5")]
		public PlayerSpaceInvader PlayerSpaceInvader
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x10E108C", Offset = "0x10E108C", VA = "0x10E108C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85678", Offset = "0xB85678")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x10E1094", Offset = "0x10E1094", VA = "0x10E1094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85688", Offset = "0xB85688")]
			private set
			{
			}
		}

		[Token(Token = "0x170004B6")]
		public NetworkHand LeftNetworkHand
		{
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x10E10A4", Offset = "0x10E10A4", VA = "0x10E10A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B7")]
		public NetworkHand RightNetworkHand
		{
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x10E10AC", Offset = "0x10E10AC", VA = "0x10E10AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B8")]
		public NetworkHead NetworkHead
		{
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x10E10B4", Offset = "0x10E10B4", VA = "0x10E10B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B9")]
		public Body Body
		{
			[Token(Token = "0x600209C")]
			[Address(RVA = "0x10E10BC", Offset = "0x10E10BC", VA = "0x10E10BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		public NetworkPad Pad
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x10E10C4", Offset = "0x10E10C4", VA = "0x10E10C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BB")]
		public PadHologram PadHologram
		{
			[Token(Token = "0x600209E")]
			[Address(RVA = "0x10E10CC", Offset = "0x10E10CC", VA = "0x10E10CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BC")]
		public NetworkHand DominantHand
		{
			[Token(Token = "0x600209F")]
			[Address(RVA = "0x10E10D4", Offset = "0x10E10D4", VA = "0x10E10D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BD")]
		public NetworkHand UndominantHand
		{
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x10E1130", Offset = "0x10E1130", VA = "0x10E1130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BE")]
		public Faction Faction
		{
			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x10E138C", Offset = "0x10E138C", VA = "0x10E138C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x10E12D4", Offset = "0x10E12D4", VA = "0x10E12D4")]
			set
			{
			}
		}

		[Token(Token = "0x170004BF")]
		public PlayerAvatar Avatar
		{
			[Token(Token = "0x60020A5")]
			[Address(RVA = "0x10E1438", Offset = "0x10E1438", VA = "0x10E1438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C0")]
		public NetworkedPlayerAvatar NetworkedPlayerAvatar
		{
			[Token(Token = "0x60020A6")]
			[Address(RVA = "0x10E1440", Offset = "0x10E1440", VA = "0x10E1440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C1")]
		public PlayerData PlayerData
		{
			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x10E1448", Offset = "0x10E1448", VA = "0x10E1448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB856B8", Offset = "0xB856B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x10E1450", Offset = "0x10E1450", VA = "0x10E1450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB856C8", Offset = "0xB856C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170004C2")]
		public ProjectileManager ProjectileManager
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x10E1460", Offset = "0x10E1460", VA = "0x10E1460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB856D8", Offset = "0xB856D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x10E1468", Offset = "0x10E1468", VA = "0x10E1468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB856E8", Offset = "0xB856E8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000096")]
		public event Action<NetworkPlayer, bool> m_onModalDialogStateChanged
		{
			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x10E118C", Offset = "0x10E118C", VA = "0x10E118C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85698", Offset = "0xB85698")]
			add
			{
			}
			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x10E1230", Offset = "0x10E1230", VA = "0x10E1230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB856A8", Offset = "0xB856A8")]
			remove
			{
			}
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x10E1478", Offset = "0x10E1478", VA = "0x10E1478")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x10E1534", Offset = "0x10E1534", VA = "0x10E1534", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x10E1CEC", Offset = "0x10E1CEC", VA = "0x10E1CEC", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x10E1E1C", Offset = "0x10E1E1C", VA = "0x10E1E1C", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x10E2050", Offset = "0x10E2050", VA = "0x10E2050")]
		public void TogglePad()
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x10E1A2C", Offset = "0x10E1A2C", VA = "0x10E1A2C")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB856F8", Offset = "0xB856F8")]
		public void RpcSetUpPlayer(string playerName, string playerId, string analyticsId)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x10E2104", Offset = "0x10E2104", VA = "0x10E2104")]
		[Preserve]
		private static void OnNameChanged(Changed<NetworkPlayer> changed)
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x10E2230", Offset = "0x10E2230", VA = "0x10E2230")]
		public NetworkGrabbable SpawnInHand(NetworkHand hand, UnlockableList list, string id)
		{
			return null;
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x10E231C", Offset = "0x10E231C", VA = "0x10E231C")]
		public NetworkGrabbable SpawnInHand(NetworkHand hand, UnlockableList list, string id, NetworkRunner.OnBeforeSpawned onBeforeSpawned)
		{
			return null;
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x10E2690", Offset = "0x10E2690", VA = "0x10E2690")]
		public NetworkGrabbable SpawnInHand(NetworkHand hand, NetworkGrabbable prefab)
		{
			return null;
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x10E24A0", Offset = "0x10E24A0", VA = "0x10E24A0")]
		public NetworkGrabbable SpawnInHand(NetworkHand hand, NetworkGrabbable prefab, NetworkRunner.OnBeforeSpawned onBeforeSpawned)
		{
			return null;
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x10E2764", Offset = "0x10E2764", VA = "0x10E2764")]
		public SyncedFruit Spawn(NetworkSocket socket, FruitConfig config)
		{
			return null;
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x10E29F0", Offset = "0x10E29F0", VA = "0x10E29F0")]
		public void Despawn(NetworkHand hand)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x10E2B04", Offset = "0x10E2B04", VA = "0x10E2B04")]
		public void Despawn(NetworkSocket socket)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x10E2C5C", Offset = "0x10E2C5C", VA = "0x10E2C5C")]
		public void SetVoiceChatMode(bool inGame)
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x10E2C90", Offset = "0x10E2C90", VA = "0x10E2C90")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB85740", Offset = "0xB85740")]
		public void RpcDespawn(NetworkHand hand)
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x10E2E6C", Offset = "0x10E2E6C", VA = "0x10E2E6C")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB85778", Offset = "0xB85778")]
		public void RpcModalDialogChangedState(bool active, [Optional] RpcInfo info)
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x10E304C", Offset = "0x10E304C", VA = "0x10E304C")]
		[Preserve]
		private static void OnLocomotionBlockChanged(Changed<NetworkPlayer> changed)
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x10E30BC", Offset = "0x10E30BC", VA = "0x10E30BC")]
		[Preserve]
		private static void OnGrabBlockChanged(Changed<NetworkPlayer> changed)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x10E312C", Offset = "0x10E312C", VA = "0x10E312C")]
		[Preserve]
		private static void OnSettingsBlockChanged(Changed<NetworkPlayer> changed)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x10E32D8", Offset = "0x10E32D8", VA = "0x10E32D8")]
		public NetworkPlayer()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x10E32E8", Offset = "0x10E32E8", VA = "0x10E32E8", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x10E3380", Offset = "0x10E3380", VA = "0x10E3380", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x10E343C", Offset = "0x10E343C", VA = "0x10E343C")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB857E0", Offset = "0xB857E0")]
		[Preserve]
		protected unsafe static void RpcSetUpPlayer@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x10E3538", Offset = "0x10E3538", VA = "0x10E3538")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB85824", Offset = "0xB85824")]
		[Preserve]
		protected unsafe static void RpcDespawn@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x10E3664", Offset = "0x10E3664", VA = "0x10E3664")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB85868", Offset = "0xB85868")]
		[Preserve]
		protected unsafe static void RpcModalDialogChangedState@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "OrderAfterAttribute", RVA = "0xB5EC5C", Offset = "0xB5EC5C")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5EC5C", Offset = "0xB5EC5C")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5EC5C", Offset = "0xB5EC5C")]
	public class NetworkSocket : NetworkBehaviour
	{
		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB730BC", Offset = "0xB730BC")]
		private NetworkObject _CurrentObject;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkSocket> $IL2CPP_CHANGED;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkSocket> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkSocket> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170004C3")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8B0A8", Offset = "0xB8B0A8")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8B0A8", Offset = "0xB8B0A8")]
		public NetworkObject CurrentObject
		{
			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x10E2BD4", Offset = "0x10E2BD4", VA = "0x10E2BD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x10E2978", Offset = "0x10E2978", VA = "0x10E2978")]
			set
			{
			}
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x10E81C0", Offset = "0x10E81C0", VA = "0x10E81C0", Slot = "8")]
		public override void FixedUpdateNetwork()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x10E82D0", Offset = "0x10E82D0", VA = "0x10E82D0", Slot = "9")]
		public override void Render()
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x10E81C4", Offset = "0x10E81C4", VA = "0x10E81C4")]
		public void UpdatePosition()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x10E8314", Offset = "0x10E8314", VA = "0x10E8314")]
		[Preserve]
		public static void OnCurrentObjectChanged(Changed<NetworkSocket> changed)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x10E8414", Offset = "0x10E8414", VA = "0x10E8414")]
		public NetworkSocket()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x10E841C", Offset = "0x10E841C", VA = "0x10E841C", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x10E8424", Offset = "0x10E8424", VA = "0x10E8424", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x2000580")]
	public class PadSettingsMenuSynced : PadSettingsMenu
	{
		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Toggle m_personalSpaceToggle;

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x13DD1C0", Offset = "0x13DD1C0", VA = "0x13DD1C0", Slot = "4")]
		protected override void LoadSavedValues()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x13DD1FC", Offset = "0x13DD1FC", VA = "0x13DD1FC")]
		public void OnDisableSpaceInvadersValueChanged(bool value)
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x13DD21C", Offset = "0x13DD21C", VA = "0x13DD21C")]
		public PadSettingsMenuSynced()
		{
		}
	}
	[Token(Token = "0x2000581")]
	public class PersonalSpaceInvader : MonoBehaviour
	{
		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5ED20", Offset = "0xB5ED20")]
		private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PersonalSpaceInvader <>4__this;

			[Token(Token = "0x170004C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020E6")]
				[Address(RVA = "0xFBBAA8", Offset = "0xFBBAA8", VA = "0xFBBAA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E8")]
				[Address(RVA = "0xFBBAF0", Offset = "0xFBBAF0", VA = "0xFBBAF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020E3")]
			[Address(RVA = "0xFBB944", Offset = "0xFBB944", VA = "0xFBB944")]
			[DebuggerHidden]
			public <Start>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60020E4")]
			[Address(RVA = "0xFBB970", Offset = "0xFBB970", VA = "0xFBB970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020E5")]
			[Address(RVA = "0xFBB974", Offset = "0xFBB974", VA = "0xFBB974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E7")]
			[Address(RVA = "0xFBBAB0", Offset = "0xFBBAB0", VA = "0xFBBAB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73120", Offset = "0xB73120")]
		private List<Renderer> m_renderers;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem[] m_particles;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private XWeaponTrail[] m_trails;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlayerAvatar m_playerAvatar;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock m_propertyBlock;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int s_ditherFalloff;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int s_ditherDistance;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int s_ditherEnabled;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB7319C", Offset = "0xB7319C")]
		private NetworkObject <NetworkObject>k__BackingField;

		[Token(Token = "0x170004C4")]
		public NetworkObject NetworkObject
		{
			[Token(Token = "0x60020D5")]
			[Address(RVA = "0xF4FA48", Offset = "0xF4FA48", VA = "0xF4FA48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB858BC", Offset = "0xB858BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0xF4FA50", Offset = "0xF4FA50", VA = "0xF4FA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB858CC", Offset = "0xB858CC")]
			private set
			{
			}
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xF4FA58", Offset = "0xF4FA58", VA = "0xF4FA58")]
		public void Awake()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xF4FC84", Offset = "0xF4FC84", VA = "0xF4FC84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB858DC", Offset = "0xB858DC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xF4FCFC", Offset = "0xF4FCFC", VA = "0xF4FCFC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xF4FDB8", Offset = "0xF4FDB8", VA = "0xF4FDB8")]
		public void AddRenderer(Renderer renderer)
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xF4FE1C", Offset = "0xF4FE1C", VA = "0xF4FE1C")]
		private void OnSettingChanged(object obj)
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xF4FEB0", Offset = "0xF4FEB0", VA = "0xF4FEB0")]
		private void OnSettingChanged(bool value)
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xF50094", Offset = "0xF50094", VA = "0xF50094")]
		public void SetVisibility(bool value)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xF4FFC8", Offset = "0xF4FFC8", VA = "0xF4FFC8")]
		public void ChangeDither(bool IsInvader)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xF501E0", Offset = "0xF501E0", VA = "0xF501E0")]
		private void SetDither(float minDistance, float ditherFallOff)
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xF5038C", Offset = "0xF5038C", VA = "0xF5038C")]
		public void ResetDither()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xF505DC", Offset = "0xF505DC", VA = "0xF505DC")]
		public PersonalSpaceInvader()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class PersonalSpaceProtector : MonoBehaviour
	{
		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xF506A8", Offset = "0xF506A8", VA = "0xF506A8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xF50784", Offset = "0xF50784", VA = "0xF50784")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xF50928", Offset = "0xF50928", VA = "0xF50928")]
		private void OnSettingChanged(object obj)
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xF50B04", Offset = "0xF50B04", VA = "0xF50B04")]
		private void OnFixedUpdateNetworkGrab(IGrabbable grabbable, IHand hand)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xF50BC0", Offset = "0xF50BC0", VA = "0xF50BC0")]
		private void SetDitherValuesOnInvader(PersonalSpaceInvader invader)
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xF50D10", Offset = "0xF50D10", VA = "0xF50D10")]
		private void OnFixedUpdateNetworkRelease(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xF50DD0", Offset = "0xF50DD0", VA = "0xF50DD0")]
		public PersonalSpaceProtector()
		{
		}
	}
	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5ED30", Offset = "0xB5ED30")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5ED30", Offset = "0xB5ED30")]
	public class PlayerData : NetworkBehaviour
	{
		[StructLayout(2)]
		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xB5ED78", Offset = "0xB5ED78")]
		public struct CustomizationData : INetworkStruct
		{
			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CustomizationManager.CustomizationArea m_customizationArea;

			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public CustomizationManager.CustomizationType m_customizationType;

			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public NetworkString<_32> m_customizationName;
		}

		[StructLayout(2)]
		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xB5ED8C", Offset = "0xB5ED8C")]
		public struct PlayerInventoryAssignment : INetworkStruct
		{
			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public NetworkString<_32> m_leftHand;

			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public NetworkString<_32> m_rightHand;

			[Token(Token = "0x600210D")]
			[Address(RVA = "0xFC2E78", Offset = "0xFC2E78", VA = "0xFC2E78")]
			public static PlayerInventoryAssignment Create(InventoryPlayerDataObject data, InventoryPlayerDataObject.ItemType type)
			{
				return default(PlayerInventoryAssignment);
			}
		}

		[StructLayout(2)]
		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xB5EDA0", Offset = "0xB5EDA0")]
		public struct PlayerInventory : INetworkStruct
		{
			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlayerInventoryAssignment m_bowAssignment;

			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			public PlayerInventoryAssignment m_bladeAssignment;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			public PlayerInventoryAssignment m_saiAssignment;
		}

		[StructLayout(2)]
		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xB5EDB4", Offset = "0xB5EDB4")]
		public struct PlayerSetting : INetworkStruct
		{
			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Locomotion.LocomotionController.LocomotionMode m_locomotionMode;

			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Bow.PullingRange m_bowPullingRange;

			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public NetworkBool m_bowAutoRelease;

			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public NetworkBool m_bowTrajectoryLine;

			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkBool m_flipMovementHands;

			[Token(Token = "0x400226B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Locomotion.LocomotionController.RotationMode m_rotationMode;

			[Token(Token = "0x400226C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int m_rotationSpeed;

			[Token(Token = "0x400226D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float m_movementSpeed;

			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkBool m_useUseHandBasedMovement;
		}

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EDC8", Offset = "0xB5EDC8")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomizationPlayerDataObject customizationPlayerDataObject;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerData <>4__this;

			[Token(Token = "0x600210E")]
			[Address(RVA = "0xFC2B50", Offset = "0xFC2B50", VA = "0xFC2B50")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600210F")]
			[Address(RVA = "0xFC2B58", Offset = "0xFC2B58", VA = "0xFC2B58")]
			internal void <OnCustomizationChanged>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EDD8", Offset = "0xB5EDD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__43_0;

			[Token(Token = "0x6002111")]
			[Address(RVA = "0xFC2B24", Offset = "0xFC2B24", VA = "0xFC2B24")]
			public <>c()
			{
			}

			[Token(Token = "0x6002112")]
			[Address(RVA = "0xFC2B2C", Offset = "0xFC2B2C", VA = "0xFC2B2C")]
			internal bool <OnWeaponsUnlockDataReceived>b__43_0(string s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EDE8", Offset = "0xB5EDE8")]
		private sealed class <WaitDelayBeforeUpdatingServer>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x170004CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002116")]
				[Address(RVA = "0xFC2E28", Offset = "0xFC2E28", VA = "0xFC2E28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002118")]
				[Address(RVA = "0xFC2E70", Offset = "0xFC2E70", VA = "0xFC2E70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002113")]
			[Address(RVA = "0xFC2D34", Offset = "0xFC2D34", VA = "0xFC2D34")]
			[DebuggerHidden]
			public <WaitDelayBeforeUpdatingServer>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6002114")]
			[Address(RVA = "0xFC2D60", Offset = "0xFC2D60", VA = "0xFC2D60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002115")]
			[Address(RVA = "0xFC2D64", Offset = "0xFC2D64", VA = "0xFC2D64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002117")]
			[Address(RVA = "0xFC2E30", Offset = "0xFC2E30", VA = "0xFC2E30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB731AC", Offset = "0xB731AC")]
		private SerializableDictionary<NetworkString<_32>, NetworkBool> _Unlocks;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB73200", Offset = "0xB73200")]
		private PlayerSetting _PlayerSettings;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB73254", Offset = "0xB73254")]
		private PlayerInventory _Inventory;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[SerializeField]
		private float m_avatarDelayBeforeUpdatingServer;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[SerializeField]
		private UnlockableList[] m_unlockablesToSync;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private bool m_receivingIncomingData;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		private int m_byteToReceive;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private int m_packetReceived;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private readonly List<byte> m_currentData;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private NetworkPlayer m_networkPlayer;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private SettingsPlayerDataObject m_settingsPlayerDataObject;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private InventoryPlayerDataObject m_inventoryPlayerDataObject;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private bool m_avatarInfoInitialized;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x401")]
		private bool m_settingInfoInitialized;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private Coroutine m_avatarDelayCoroutine;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<PlayerData> $IL2CPP_CHANGED;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<PlayerData> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<PlayerData> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170004C7")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8B108", Offset = "0xB8B108")]
		[AttributeAttribute(Name = "CapacityAttribute", RVA = "0xB8B108", Offset = "0xB8B108")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8B108", Offset = "0xB8B108")]
		public NetworkDictionary<NetworkString<_32>, NetworkBool> Unlocks
		{
			[Token(Token = "0x60020F0")]
			[Address(RVA = "0xF5A8E8", Offset = "0xF5A8E8", VA = "0xF5A8E8")]
			get
			{
				return default(NetworkDictionary<NetworkString<_32>, NetworkBool>);
			}
		}

		[Token(Token = "0x170004C8")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8B15C", Offset = "0xB8B15C")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8B15C", Offset = "0xB8B15C")]
		public PlayerSetting PlayerSettings
		{
			[Token(Token = "0x60020F1")]
			[Address(RVA = "0xF5A9C4", Offset = "0xF5A9C4", VA = "0xF5A9C4")]
			get
			{
				return default(PlayerSetting);
			}
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0xF5AA40", Offset = "0xF5AA40", VA = "0xF5AA40")]
			set
			{
			}
		}

		[Token(Token = "0x170004C9")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8B1BC", Offset = "0xB8B1BC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8B1BC", Offset = "0xB8B1BC")]
		public PlayerInventory Inventory
		{
			[Token(Token = "0x60020F3")]
			[Address(RVA = "0xF5AABC", Offset = "0xF5AABC", VA = "0xF5AABC")]
			get
			{
				return default(PlayerInventory);
			}
			[Token(Token = "0x60020F4")]
			[Address(RVA = "0xF5AB2C", Offset = "0xF5AB2C", VA = "0xF5AB2C")]
			set
			{
			}
		}

		[Token(Token = "0x14000097")]
		public event Action<PlayerSetting> OnChanged
		{
			[Token(Token = "0x60020F5")]
			[Address(RVA = "0xF5ABA4", Offset = "0xF5ABA4", VA = "0xF5ABA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8598C", Offset = "0xB8598C")]
			add
			{
			}
			[Token(Token = "0x60020F6")]
			[Address(RVA = "0xF5AC48", Offset = "0xF5AC48", VA = "0xF5AC48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8599C", Offset = "0xB8599C")]
			remove
			{
			}
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xF5ACEC", Offset = "0xF5ACEC", VA = "0xF5ACEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xF5ADD4", Offset = "0xF5ADD4", VA = "0xF5ADD4", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xF5B5B4", Offset = "0xF5B5B4", VA = "0xF5B5B4", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xF5B6C8", Offset = "0xF5B6C8", VA = "0xF5B6C8")]
		private void OnInventoryChanged(object data)
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xF5B6CC", Offset = "0xF5B6CC", VA = "0xF5B6CC")]
		public void UpdateInventory()
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xF5AF48", Offset = "0xF5AF48", VA = "0xF5AF48")]
		public void UpdatePlayerSettingOnServer()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xF5BB50", Offset = "0xF5BB50", VA = "0xF5BB50")]
		private void OnCustomizationChanged(object obj)
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xF5B22C", Offset = "0xF5B22C", VA = "0xF5B22C")]
		private void UpdateUnlockedWeapons()
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xF5BD74", Offset = "0xF5BD74", VA = "0xF5BD74")]
		private void SendUnlockWeaponsToServer(List<string> unlockedItems)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xF5C21C", Offset = "0xF5C21C", VA = "0xF5C21C")]
		private void SetHostUnlockedWeapons(List<string> unlockedItems)
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xF5C68C", Offset = "0xF5C68C", VA = "0xF5C68C")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB859AC", Offset = "0xB859AC")]
		private void RpcUpdatePlayerAvatarInfo(CustomizationData customizationData)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xF5B980", Offset = "0xF5B980", VA = "0xF5B980")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB859E4", Offset = "0xB859E4")]
		private void RpcUpdatePlayerSetting(PlayerSetting playerSetting)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xF5B7B4", Offset = "0xF5B7B4", VA = "0xF5B7B4")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB85A1C", Offset = "0xB85A1C")]
		private void RpcUpdateInventory(PlayerInventory inventory)
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xF5C87C", Offset = "0xF5C87C", VA = "0xF5C87C")]
		[Preserve]
		private static void OnPlayerSettingsChanged(Changed<PlayerData> changed)
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xF5C914", Offset = "0xF5C914", VA = "0xF5C914")]
		public void OnWeaponsUnlockDataReceived(ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xF5BCEC", Offset = "0xF5BCEC", VA = "0xF5BCEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85A64", Offset = "0xB85A64")]
		private IEnumerator WaitDelayBeforeUpdatingServer(float delay, Action action)
		{
			return null;
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xF5CE60", Offset = "0xF5CE60", VA = "0xF5CE60")]
		public PlayerData()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xF5CEEC", Offset = "0xF5CEEC", VA = "0xF5CEEC", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xF5D004", Offset = "0xF5D004", VA = "0xF5D004", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xF5D104", Offset = "0xF5D104", VA = "0xF5D104")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB85AC4", Offset = "0xB85AC4")]
		[Preserve]
		protected unsafe static void RpcUpdatePlayerAvatarInfo@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xF5D1EC", Offset = "0xF5D1EC", VA = "0xF5D1EC")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB85B08", Offset = "0xB85B08")]
		[Preserve]
		protected unsafe static void RpcUpdatePlayerSetting@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xF5D2D4", Offset = "0xF5D2D4", VA = "0xF5D2D4")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB85B4C", Offset = "0xB85B4C")]
		[Preserve]
		protected unsafe static void RpcUpdateInventory@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class PlayerDataReceiver : MonoBehaviour, INetworkRunnerCallbacks
	{
		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkRunner m_networkRunner;

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xF602F0", Offset = "0xF602F0", VA = "0xF602F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xF603DC", Offset = "0xF603DC", VA = "0xF603DC", Slot = "17")]
		public void OnReliableDataReceived(NetworkRunner runner, PlayerRef player, ArraySegment<byte> data)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xF60758", Offset = "0xF60758", VA = "0xF60758", Slot = "4")]
		public void OnPlayerJoined(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xF6075C", Offset = "0xF6075C", VA = "0xF6075C", Slot = "5")]
		public void OnPlayerLeft(NetworkRunner runner, PlayerRef player)
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xF60760", Offset = "0xF60760", VA = "0xF60760", Slot = "6")]
		public void OnInput(NetworkRunner runner, NetworkInput input)
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xF60764", Offset = "0xF60764", VA = "0xF60764", Slot = "7")]
		public void OnInputMissing(NetworkRunner runner, PlayerRef player, NetworkInput input)
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xF60768", Offset = "0xF60768", VA = "0xF60768", Slot = "8")]
		public void OnShutdown(NetworkRunner runner, ShutdownReason shutdownReason)
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xF6076C", Offset = "0xF6076C", VA = "0xF6076C", Slot = "9")]
		public void OnConnectedToServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xF60770", Offset = "0xF60770", VA = "0xF60770", Slot = "10")]
		public void OnDisconnectedFromServer(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xF60774", Offset = "0xF60774", VA = "0xF60774", Slot = "11")]
		public void OnConnectRequest(NetworkRunner runner, NetworkRunnerCallbackArgs.ConnectRequest request, byte[] token)
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xF60778", Offset = "0xF60778", VA = "0xF60778", Slot = "12")]
		public void OnConnectFailed(NetworkRunner runner, NetAddress remoteAddress, NetConnectFailedReason reason)
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xF6077C", Offset = "0xF6077C", VA = "0xF6077C", Slot = "13")]
		public void OnUserSimulationMessage(NetworkRunner runner, SimulationMessagePtr message)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xF60780", Offset = "0xF60780", VA = "0xF60780", Slot = "14")]
		public void OnSessionListUpdated(NetworkRunner runner, List<SessionInfo> sessionList)
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xF60784", Offset = "0xF60784", VA = "0xF60784", Slot = "15")]
		public void OnCustomAuthenticationResponse(NetworkRunner runner, Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xF60788", Offset = "0xF60788", VA = "0xF60788", Slot = "16")]
		public void OnHostMigration(NetworkRunner runner, HostMigrationToken hostMigrationToken)
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xF6078C", Offset = "0xF6078C", VA = "0xF6078C", Slot = "18")]
		public void OnSceneLoadDone(NetworkRunner runner)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xF60790", Offset = "0xF60790", VA = "0xF60790", Slot = "19")]
		public void OnSceneLoadStart(NetworkRunner runner)
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xF60794", Offset = "0xF60794", VA = "0xF60794")]
		public PlayerDataReceiver()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class PlayerPadNetworkHelper : MonoBehaviour
	{
		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AreaManager.AreaType m_disconnectAreaDestination;

		[Token(Token = "0x600212B")]
		[Address(RVA = "0xFF229C", Offset = "0xFF229C", VA = "0xFF229C")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xFF22FC", Offset = "0xFF22FC", VA = "0xFF22FC")]
		public PlayerPadNetworkHelper()
		{
		}
	}
	[Token(Token = "0x200058E")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5EDF8", Offset = "0xB5EDF8")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5EDF8", Offset = "0xB5EDF8")]
	public class PlayerSpaceInvader : NetworkBehaviour
	{
		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PersonalSpaceInvader m_playerInvader;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NetworkPlayer m_networkPlayer;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NetworkHand m_networkHandRight;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NetworkHand m_networkHandLeft;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_ignoreStateBeforeGame;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly List<PersonalSpaceInvader> m_invadersHidden;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly List<PersonalSpaceInvader> m_invadersToHide;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB732E8", Offset = "0xB732E8")]
		private bool <IsIgnored>k__BackingField;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<PlayerSpaceInvader> $IL2CPP_CHANGED;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<PlayerSpaceInvader> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<PlayerSpaceInvader> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x170004CC")]
		public bool IsIgnored
		{
			[Token(Token = "0x600212D")]
			[Address(RVA = "0xFF4448", Offset = "0xFF4448", VA = "0xFF4448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85BE0", Offset = "0xB85BE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600212E")]
			[Address(RVA = "0xFF4450", Offset = "0xFF4450", VA = "0xFF4450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85BF0", Offset = "0xB85BF0")]
			private set
			{
			}
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xFF445C", Offset = "0xFF445C", VA = "0xFF445C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xFF44E4", Offset = "0xFF44E4", VA = "0xFF44E4", Slot = "16")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0xFF46F0", Offset = "0xFF46F0", VA = "0xFF46F0", Slot = "17")]
		public override void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xFF48FC", Offset = "0xFF48FC", VA = "0xFF48FC")]
		private void OnGameStart(NetworkedGameMode gameMode)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xFF4AF4", Offset = "0xFF4AF4", VA = "0xFF4AF4")]
		private void OnGameEnd(NetworkedGameMode gameMode)
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xFF492C", Offset = "0xFF492C", VA = "0xFF492C")]
		[AttributeAttribute(Name = "RpcAttribute", RVA = "0xB85C00", Offset = "0xB85C00")]
		private void RpcSetGameIgnore(NetworkBool goingInGame)
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xFF4B24", Offset = "0xFF4B24", VA = "0xFF4B24")]
		public void SetIgnore(bool isIgnored)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xFF527C", Offset = "0xFF527C", VA = "0xFF527C")]
		public void AddSpaceInvader(PersonalSpaceInvader personalSpaceInvader)
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0xFF5320", Offset = "0xFF5320", VA = "0xFF5320")]
		public void RemoveSpaceInvader(PersonalSpaceInvader personalSpaceInvader)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xFF53AC", Offset = "0xFF53AC", VA = "0xFF53AC")]
		private void OnFixedUpdateNetworkGrab(IGrabbable grabbable, IHand hand)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xFF54D4", Offset = "0xFF54D4", VA = "0xFF54D4")]
		private void OnFixedUpdateNetworkRelease(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xFF55C8", Offset = "0xFF55C8", VA = "0xFF55C8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xFF56BC", Offset = "0xFF56BC", VA = "0xFF56BC")]
		public PlayerSpaceInvader()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xFF576C", Offset = "0xFF576C", VA = "0xFF576C")]
		[AttributeAttribute(Name = "NetworkRpcWeavedInvokerAttribute", RVA = "0xB85C38", Offset = "0xB85C38")]
		[Preserve]
		protected unsafe static void RpcSetGameIgnore@Invoker(NetworkBehaviour behaviour, SimulationMessage* message)
		{
		}
	}
	[Token(Token = "0x200058F")]
	public class RemotePlayer : MonoBehaviour
	{
		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshPro m_playerNameText;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB73308", Offset = "0xB73308")]
		private Vector3 m_positionOffsetFromHead;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color m_developerColour;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_headTransform;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73364", Offset = "0xB73364")]
		private NetworkHand <LeftNetworkHand>k__BackingField;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73374", Offset = "0xB73374")]
		private NetworkHand <RightNetworkHand>k__BackingField;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73384", Offset = "0xB73384")]
		private NetworkPlayer <NetworkPlayer>k__BackingField;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73394", Offset = "0xB73394")]
		private NetworkHead <NetworkHead>k__BackingField;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB733A4", Offset = "0xB733A4")]
		private Body <NetworkBody>k__BackingField;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB733B4", Offset = "0xB733B4")]
		private PooledObject <PooledObject>k__BackingField;

		[Token(Token = "0x170004CD")]
		public NetworkHand LeftNetworkHand
		{
			[Token(Token = "0x600213D")]
			[Address(RVA = "0x13BD574", Offset = "0x13BD574", VA = "0x13BD574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C7C", Offset = "0xB85C7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600213E")]
			[Address(RVA = "0x13BD57C", Offset = "0x13BD57C", VA = "0x13BD57C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C8C", Offset = "0xB85C8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170004CE")]
		public NetworkHand RightNetworkHand
		{
			[Token(Token = "0x600213F")]
			[Address(RVA = "0x13BD584", Offset = "0x13BD584", VA = "0x13BD584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85C9C", Offset = "0xB85C9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002140")]
			[Address(RVA = "0x13BD58C", Offset = "0x13BD58C", VA = "0x13BD58C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85CAC", Offset = "0xB85CAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170004CF")]
		public NetworkPlayer NetworkPlayer
		{
			[Token(Token = "0x6002141")]
			[Address(RVA = "0x13BD594", Offset = "0x13BD594", VA = "0x13BD594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85CBC", Offset = "0xB85CBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002142")]
			[Address(RVA = "0x13BD59C", Offset = "0x13BD59C", VA = "0x13BD59C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85CCC", Offset = "0xB85CCC")]
			private set
			{
			}
		}

		[Token(Token = "0x170004D0")]
		public NetworkHead NetworkHead
		{
			[Token(Token = "0x6002143")]
			[Address(RVA = "0x13BD5A4", Offset = "0x13BD5A4", VA = "0x13BD5A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85CDC", Offset = "0xB85CDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002144")]
			[Address(RVA = "0x13BD5AC", Offset = "0x13BD5AC", VA = "0x13BD5AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85CEC", Offset = "0xB85CEC")]
			private set
			{
			}
		}

		[Token(Token = "0x170004D1")]
		public Body NetworkBody
		{
			[Token(Token = "0x6002145")]
			[Address(RVA = "0x13BD5B4", Offset = "0x13BD5B4", VA = "0x13BD5B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85CFC", Offset = "0xB85CFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002146")]
			[Address(RVA = "0x13BD5BC", Offset = "0x13BD5BC", VA = "0x13BD5BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85D0C", Offset = "0xB85D0C")]
			private set
			{
			}
		}

		[Token(Token = "0x170004D2")]
		public PooledObject PooledObject
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0x13BD5C4", Offset = "0x13BD5C4", VA = "0x13BD5C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85D1C", Offset = "0xB85D1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002148")]
			[Address(RVA = "0x13BD5CC", Offset = "0x13BD5CC", VA = "0x13BD5CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85D2C", Offset = "0xB85D2C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x13BD5D4", Offset = "0x13BD5D4", VA = "0x13BD5D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x13BD698", Offset = "0x13BD698", VA = "0x13BD698")]
		public void Initialise(NetworkPlayer networkPlayer)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x13BD924", Offset = "0x13BD924", VA = "0x13BD924")]
		private void OnRecycle()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x13BDA10", Offset = "0x13BDA10", VA = "0x13BDA10")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x13BD928", Offset = "0x13BD928", VA = "0x13BD928")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x13BDAAC", Offset = "0x13BDAAC", VA = "0x13BDAAC")]
		private void OnRender()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x13BDC3C", Offset = "0x13BDC3C", VA = "0x13BDC3C")]
		public void SetName(string newName, string newID)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x13BDD70", Offset = "0x13BDD70", VA = "0x13BDD70")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x2000590")]
	public class SyncedPadControllerBase : MonoBehaviour
	{
		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetworkPad m_networkPad;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_model;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator m_animator;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected NetworkHand m_grabbedHand;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected NetworkHand m_interactionHand;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly int s_open;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static readonly int s_close;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly int s_leftHand;

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x116EAF8", Offset = "0x116EAF8", VA = "0x116EAF8", Slot = "4")]
		public virtual void Spawned()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x116EB08", Offset = "0x116EB08", VA = "0x116EB08", Slot = "5")]
		public virtual void Despawned(NetworkRunner runner, bool hasState)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x116EB0C", Offset = "0x116EB0C", VA = "0x116EB0C", Slot = "6")]
		public virtual void Render()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x116EB10", Offset = "0x116EB10", VA = "0x116EB10", Slot = "7")]
		public virtual void Open(NetworkHand hand)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x116EC6C", Offset = "0x116EC6C", VA = "0x116EC6C", Slot = "8")]
		public virtual void Close()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x116ECE8", Offset = "0x116ECE8", VA = "0x116ECE8", Slot = "9")]
		public virtual void CloseImmediately(bool init = false)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x116ED74", Offset = "0x116ED74", VA = "0x116ED74", Slot = "10")]
		public virtual void SetPadVisuals(bool value)
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x116ED78", Offset = "0x116ED78", VA = "0x116ED78")]
		public SyncedPadControllerBase()
		{
		}
	}
	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5EE40", Offset = "0xB5EE40")]
	public class SyncedPadControllerLocal : SyncedPadControllerBase, IPadController
	{
		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EEA0", Offset = "0xB5EEA0")]
		private sealed class <OpenClosePadToInitialize>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SyncedPadControllerLocal <>4__this;

			[Token(Token = "0x170004DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002170")]
				[Address(RVA = "0xFEDE68", Offset = "0xFEDE68", VA = "0xFEDE68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002172")]
				[Address(RVA = "0xFEDEB0", Offset = "0xFEDEB0", VA = "0xFEDEB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600216D")]
			[Address(RVA = "0xFEDCD8", Offset = "0xFEDCD8", VA = "0xFEDCD8")]
			[DebuggerHidden]
			public <OpenClosePadToInitialize>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x600216E")]
			[Address(RVA = "0xFEDD04", Offset = "0xFEDD04", VA = "0xFEDD04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600216F")]
			[Address(RVA = "0xFEDD08", Offset = "0xFEDD08", VA = "0xFEDD08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002171")]
			[Address(RVA = "0xFEDE70", Offset = "0xFEDE70", VA = "0xFEDE70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject m_canvas;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject m_hologram;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Armory m_padArmory;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PadInputDetectionTrigger m_detectionTrigger;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public HandPose m_pointerHandPose;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform m_padCanvasTransform;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 m_canvasLocalHandRotationLeft;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 m_canvasLocalHandPositionLeft;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 m_canvasLocalHandRotationRight;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 m_canvasLocalHandPositionRight;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEvent m_onGrabbed;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent m_onReleaseStarted;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent m_onReleaseCompleted;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB733C4", Offset = "0xB733C4")]
		public TextMeshProUGUI m_buildInfoText;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private PadInput m_padInput;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private PadUIController m_padUIController;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_previousOpened;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_timeOpen;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_handLocalPos;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion m_handLocalRot;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Transform m_currentFollowTransform;

		[Token(Token = "0x170004D3")]
		public Transform Transform
		{
			[Token(Token = "0x600215A")]
			[Address(RVA = "0x116EE44", Offset = "0x116EE44", VA = "0x116EE44", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D4")]
		public bool InDetectionTrigger
		{
			[Token(Token = "0x600215B")]
			[Address(RVA = "0x116EE4C", Offset = "0x116EE4C", VA = "0x116EE4C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D5")]
		public IHand InteractionHand
		{
			[Token(Token = "0x600215C")]
			[Address(RVA = "0x116EE68", Offset = "0x116EE68", VA = "0x116EE68", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D6")]
		public PadInput Input
		{
			[Token(Token = "0x600215D")]
			[Address(RVA = "0x116EE70", Offset = "0x116EE70", VA = "0x116EE70", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D7")]
		public UnityEvent OnGrabbed
		{
			[Token(Token = "0x600215E")]
			[Address(RVA = "0x116EE78", Offset = "0x116EE78", VA = "0x116EE78", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D8")]
		public UnityEvent OnReleased
		{
			[Token(Token = "0x600215F")]
			[Address(RVA = "0x116EE80", Offset = "0x116EE80", VA = "0x116EE80", Slot = "16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D9")]
		public IGrabbable Grabbable
		{
			[Token(Token = "0x6002160")]
			[Address(RVA = "0x116EE88", Offset = "0x116EE88", VA = "0x116EE88", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x116EEA4", Offset = "0x116EEA4", VA = "0x116EEA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x116EF2C", Offset = "0x116EF2C", VA = "0x116EF2C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x116F244", Offset = "0x116F244", VA = "0x116F244")]
		private void Update()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x116F2D0", Offset = "0x116F2D0", VA = "0x116F2D0", Slot = "6")]
		public override void Render()
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x116F394", Offset = "0x116F394", VA = "0x116F394", Slot = "4")]
		public override void Spawned()
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x116F44C", Offset = "0x116F44C", VA = "0x116F44C", Slot = "7")]
		public override void Open(NetworkHand hand)
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x116F5E8", Offset = "0x116F5E8", VA = "0x116F5E8", Slot = "8")]
		public override void Close()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x116F794", Offset = "0x116F794", VA = "0x116F794", Slot = "9")]
		public override void CloseImmediately(bool init = false)
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x116F3D4", Offset = "0x116F3D4", VA = "0x116F3D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85D3C", Offset = "0xB85D3C")]
		private IEnumerator OpenClosePadToInitialize()
		{
			return null;
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x116F83C", Offset = "0x116F83C", VA = "0x116F83C", Slot = "10")]
		public override void SetPadVisuals(bool value)
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x116F888", Offset = "0x116F888", VA = "0x116F888")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x116F94C", Offset = "0x116F94C", VA = "0x116F94C")]
		public SyncedPadControllerLocal()
		{
		}
	}
	[Token(Token = "0x2000593")]
	public class SyncedPadControllerRemote : SyncedPadControllerBase
	{
		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject m_puffEffect;

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x116F9B0", Offset = "0x116F9B0", VA = "0x116F9B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x116FA28", Offset = "0x116FA28", VA = "0x116FA28", Slot = "8")]
		public override void Close()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x116FA5C", Offset = "0x116FA5C", VA = "0x116FA5C", Slot = "9")]
		public override void CloseImmediately(bool init = false)
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x116FAA8", Offset = "0x116FAA8", VA = "0x116FAA8")]
		public SyncedPadControllerRemote()
		{
		}
	}
	[Token(Token = "0x2000594")]
	public class SyncedPadHologram : PadHologram
	{
		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PlayerData m_playerData;

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x116FB0C", Offset = "0x116FB0C", VA = "0x116FB0C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x116FBEC", Offset = "0x116FBEC", VA = "0x116FBEC", Slot = "5")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x116FCA0", Offset = "0x116FCA0", VA = "0x116FCA0")]
		private void OnPlayerSettingsChanged(PlayerData.PlayerSetting settings)
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x116FCD8", Offset = "0x116FCD8", VA = "0x116FCD8")]
		public SyncedPadHologram()
		{
		}
	}
}
namespace FNVR2.Networking.Debugging
{
	[Token(Token = "0x2000595")]
	public class CSVDebug
	{
		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_name;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StreamWriter m_writer;

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x11A2870", Offset = "0x11A2870", VA = "0x11A2870")]
		public CSVDebug(string name)
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x11A28A4", Offset = "0x11A28A4", VA = "0x11A28A4", Slot = "1")]
		~CSVDebug()
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x11A291C", Offset = "0x11A291C", VA = "0x11A291C")]
		public void Append(NetworkRunner runner, string label, params object[] data)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x11A2FEC", Offset = "0x11A2FEC", VA = "0x11A2FEC")]
		public void EmptyLine(NetworkRunner runner)
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x11A2A80", Offset = "0x11A2A80", VA = "0x11A2A80")]
		private void Init(NetworkRunner runner)
		{
		}
	}
	[Token(Token = "0x2000596")]
	public class FruitSliceDebug : MonoBehaviour
	{
		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_impactPoint;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro m_impactPointText;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_hitBoxBounds;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_arrow;

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x14C1EB8", Offset = "0x14C1EB8", VA = "0x14C1EB8")]
		public void Initialise(FruitConfig config, Vector3 impactPoint, bool slicedByArrow, Vector3 slicerPos, Quaternion slicerRot)
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x14C20A4", Offset = "0x14C20A4", VA = "0x14C20A4")]
		public FruitSliceDebug()
		{
		}
	}
	[Token(Token = "0x2000597")]
	public class NetworkDebug : MonoBehaviour
	{
		[Token(Token = "0x6002182")]
		[Address(RVA = "0xF27FD4", Offset = "0xF27FD4", VA = "0xF27FD4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85DEC", Offset = "0xB85DEC")]
		public static void ShowInTable(PlayerRef player, string group, string text, float width = 100f)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xF27FD8", Offset = "0xF27FD8", VA = "0xF27FD8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85E24", Offset = "0xB85E24")]
		public static void Log(string message, UnityEngine.Object sender, [Optional] UnityEngine.Object context, [Optional] Color? color)
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0xF28428", Offset = "0xF28428", VA = "0xF28428")]
		public NetworkDebug()
		{
		}
	}
}
namespace FNVR2.Input.UI
{
	[Token(Token = "0x2000598")]
	public class HandPointer : VRCursor
	{
		[Token(Token = "0x2000599")]
		public enum LaserBeamBehavior
		{
			[Token(Token = "0x40022C3")]
			On,
			[Token(Token = "0x40022C4")]
			Off,
			[Token(Token = "0x40022C5")]
			OnWhenHitTarget
		}

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LineRenderer m_lineRendererValidTarget;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LineRenderer m_lineRendererNoValidTarget;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject m_cursorVisual;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_maxLength;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private LaserBeamBehavior m_currentLaserBeamBehavior;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_startPoint;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_forward;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_endPoint;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_hitTarget;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LineRenderer m_lineRenderer;

		[Token(Token = "0x170004DC")]
		public LaserBeamBehavior CurrentLaserBeamBehavior
		{
			[Token(Token = "0x6002185")]
			[Address(RVA = "0x1C55594", Offset = "0x1C55594", VA = "0x1C55594")]
			get
			{
				return default(LaserBeamBehavior);
			}
			[Token(Token = "0x6002186")]
			[Address(RVA = "0x1C5559C", Offset = "0x1C5559C", VA = "0x1C5559C")]
			set
			{
			}
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x1C556F4", Offset = "0x1C556F4", VA = "0x1C556F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x1C55800", Offset = "0x1C55800", VA = "0x1C55800")]
		private void Start()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x1C55950", Offset = "0x1C55950", VA = "0x1C55950", Slot = "5")]
		public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x1C5596C", Offset = "0x1C5596C", VA = "0x1C5596C", Slot = "4")]
		public override void SetCursorRay(Transform ray)
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x1C559C0", Offset = "0x1C559C0", VA = "0x1C559C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x1C55B7C", Offset = "0x1C55B7C", VA = "0x1C55B7C")]
		private void UpdateLaserBeam(Vector3 start, Vector3 end)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x1C55CBC", Offset = "0x1C55CBC", VA = "0x1C55CBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x1C55D4C", Offset = "0x1C55D4C", VA = "0x1C55D4C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x1C55E18", Offset = "0x1C55E18", VA = "0x1C55E18")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x1C55ECC", Offset = "0x1C55ECC", VA = "0x1C55ECC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x1C55FB8", Offset = "0x1C55FB8", VA = "0x1C55FB8")]
		public HandPointer()
		{
		}
	}
	[Token(Token = "0x200059A")]
	public abstract class VRCursor : MonoBehaviour
	{
		[Token(Token = "0x6002192")]
		public abstract void SetCursorRay(Transform ray);

		[Token(Token = "0x6002193")]
		public abstract void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal);

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x122FEA0", Offset = "0x122FEA0", VA = "0x122FEA0")]
		protected VRCursor()
		{
		}
	}
	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5EEB0", Offset = "0xB5EEB0")]
	public class VRGraphicRaycaster : GraphicRaycaster, IPointerEnterHandler, IEventSystemHandler
	{
		[Token(Token = "0x200059C")]
		private struct RaycastHit
		{
			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Graphic m_graphic;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 m_worldPos;
		}

		[Serializable]
		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EF10", Offset = "0xB5EF10")]
		private sealed class <>c
		{
			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastResult> <>9__11_0;

			[Token(Token = "0x60021A2")]
			[Address(RVA = "0x1B902E0", Offset = "0x1B902E0", VA = "0x1B902E0")]
			public <>c()
			{
			}

			[Token(Token = "0x60021A3")]
			[Address(RVA = "0x1B902E8", Offset = "0x1B902E8", VA = "0x1B902E8")]
			internal int <Raycast>b__11_0(RaycastResult a, RaycastResult b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7344C", Offset = "0xB7344C")]
		public GameObject m_pointer;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int m_sortOrder;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_canvas;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] s_corners;

		[Token(Token = "0x170004DD")]
		private Canvas Canvas
		{
			[Token(Token = "0x6002195")]
			[Address(RVA = "0x122FEA8", Offset = "0x122FEA8", VA = "0x122FEA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DE")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6002196")]
			[Address(RVA = "0x122FF5C", Offset = "0x122FF5C", VA = "0x122FF5C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DF")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6002197")]
			[Address(RVA = "0x1230314", Offset = "0x1230314", VA = "0x1230314", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x123031C", Offset = "0x123031C", VA = "0x123031C")]
		private void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList, Ray ray, bool checkForBlocking)
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x1230EC4", Offset = "0x1230EC4", VA = "0x1230EC4", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x1231094", Offset = "0x1231094", VA = "0x1231094")]
		public void RaycastPointer(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x1231250", Offset = "0x1231250", VA = "0x1231250")]
		public Vector2 GetScreenPosition(RaycastResult raycastResult)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x1230B84", Offset = "0x1230B84", VA = "0x1230B84")]
		private static bool RayIntersectsRectTransform(RectTransform rectTransform, Ray ray, out Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x1231294", Offset = "0x1231294", VA = "0x1231294")]
		public bool IsFocussed()
		{
			return default(bool);
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x12313D4", Offset = "0x12313D4", VA = "0x12313D4", Slot = "22")]
		public void OnPointerEnter(PointerEventData e)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x12315D8", Offset = "0x12315D8", VA = "0x12315D8")]
		public VRGraphicRaycaster()
		{
		}
	}
	[Token(Token = "0x200059E")]
	public class VRInputModule : PointerInputModule
	{
		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB73484", Offset = "0xB73484")]
		public Transform m_rayTransform;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public VRCursor m_cursor;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public ControllerInputBase m_controllerInput;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB734CC", Offset = "0xB734CC")]
		public ControllerInputBase.Button m_uiInteractionButton;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float m_maxDistanceFromUIToInteract;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB73504", Offset = "0xB73504")]
		public KeyCode m_gazeClickKey;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7353C", Offset = "0xB7353C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7353C", Offset = "0xB7353C")]
		public bool m_performSphereCastForGazePointer;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7359C", Offset = "0xB7359C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7359C", Offset = "0xB7359C")]
		public bool m_useRightStickScroll;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB735FC", Offset = "0xB735FC")]
		public float m_rightStickDeadZone;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73634", Offset = "0xB73634")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB73634", Offset = "0xB73634")]
		public bool m_useSwipeScroll;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB73694", Offset = "0xB73694")]
		public float m_swipeDragThreshold;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB736CC", Offset = "0xB736CC")]
		public float m_swipeDragScale;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB73704", Offset = "0xB73704")]
		public bool m_invertSwipeXAxis;

		[NonSerialized]
		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public VRGraphicRaycaster m_activeGraphicRaycaster;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB7373C", Offset = "0xB7373C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7373C", Offset = "0xB7373C")]
		public float m_angleDragThreshold;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB737AC", Offset = "0xB737AC")]
		private LayerMask <UiInteractionLayers>k__BackingField;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB737BC", Offset = "0xB737BC")]
		private bool <IsInteractingWithUI>k__BackingField;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool m_canInteractWithUI;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_nextAction;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector2 m_lastMousePosition;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector2 m_mousePosition;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB737CC", Offset = "0xB737CC")]
		[SerializeField]
		private string m_horizontalAxis;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private string m_verticalAxis;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string m_submitButton;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private string m_cancelButton;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float m_inputActionsPerSecond;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool m_allowActivationOnMobileDevice;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Dictionary<int, VRPointerEventData> m_VRRayPointerData;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly MouseState m_mouseState;

		[Token(Token = "0x170004E0")]
		public LayerMask UiInteractionLayers
		{
			[Token(Token = "0x60021A4")]
			[Address(RVA = "0x12316B0", Offset = "0x12316B0", VA = "0x12316B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85E5C", Offset = "0xB85E5C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60021A5")]
			[Address(RVA = "0x12316B8", Offset = "0x12316B8", VA = "0x12316B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85E6C", Offset = "0xB85E6C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E1")]
		public bool IsInteractingWithUI
		{
			[Token(Token = "0x60021A6")]
			[Address(RVA = "0x12316C0", Offset = "0x12316C0", VA = "0x12316C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85E7C", Offset = "0xB85E7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021A7")]
			[Address(RVA = "0x12316C8", Offset = "0x12316C8", VA = "0x12316C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85E8C", Offset = "0xB85E8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170004E2")]
		public bool CanInteractWithUI
		{
			[Token(Token = "0x60021A8")]
			[Address(RVA = "0x12316D4", Offset = "0x12316D4", VA = "0x12316D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021A9")]
			[Address(RVA = "0x12316DC", Offset = "0x12316DC", VA = "0x12316DC")]
			set
			{
			}
		}

		[Token(Token = "0x170004E3")]
		public bool AllowActivationOnMobileDevice
		{
			[Token(Token = "0x60021AA")]
			[Address(RVA = "0x12317B8", Offset = "0x12317B8", VA = "0x12317B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x12317C0", Offset = "0x12317C0", VA = "0x12317C0")]
			set
			{
			}
		}

		[Token(Token = "0x170004E4")]
		public float InputActionsPerSecond
		{
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x12317CC", Offset = "0x12317CC", VA = "0x12317CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x12317D4", Offset = "0x12317D4", VA = "0x12317D4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E5")]
		public string HorizontalAxis
		{
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x12317DC", Offset = "0x12317DC", VA = "0x12317DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x12317E4", Offset = "0x12317E4", VA = "0x12317E4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E6")]
		public string VerticalAxis
		{
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x12317EC", Offset = "0x12317EC", VA = "0x12317EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x12317F4", Offset = "0x12317F4", VA = "0x12317F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E7")]
		public string SubmitButton
		{
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x12317FC", Offset = "0x12317FC", VA = "0x12317FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x1231804", Offset = "0x1231804", VA = "0x1231804")]
			set
			{
			}
		}

		[Token(Token = "0x170004E8")]
		public string CancelButton
		{
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x123180C", Offset = "0x123180C", VA = "0x123180C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x1231814", Offset = "0x1231814", VA = "0x1231814")]
			set
			{
			}
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x123181C", Offset = "0x123181C", VA = "0x123181C", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x123184C", Offset = "0x123184C", VA = "0x123184C", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1231864", Offset = "0x1231864", VA = "0x1231864", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x123195C", Offset = "0x123195C", VA = "0x123195C", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1231A3C", Offset = "0x1231A3C", VA = "0x1231A3C", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1231D3C", Offset = "0x1231D3C", VA = "0x1231D3C")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1231F64", Offset = "0x1231F64", VA = "0x1231F64")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x1231FC4", Offset = "0x1231FC4", VA = "0x1231FC4")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x1232058", Offset = "0x1232058", VA = "0x1232058")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x1232214", Offset = "0x1232214", VA = "0x1232214")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x1232378", Offset = "0x1232378", VA = "0x1232378")]
		private void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x1232AB0", Offset = "0x1232AB0", VA = "0x1232AB0")]
		private void ProcessMouseEvent(MouseState mouseData)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x1232D78", Offset = "0x1232D78", VA = "0x1232D78", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x1232D28", Offset = "0x1232D28", VA = "0x1232D28")]
		private static bool UseMouse(bool pressed, bool released, PointerEventData pointerData)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1232E40", Offset = "0x1232E40", VA = "0x1232E40", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x1232E68", Offset = "0x1232E68", VA = "0x1232E68")]
		protected void CopyFromTo(VRPointerEventData from, VRPointerEventData to)
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x1232EFC", Offset = "0x1232EFC", VA = "0x1232EFC")]
		protected bool GetPointerData(int id, out VRPointerEventData data, bool create)
		{
			return default(bool);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x1231A64", Offset = "0x1231A64", VA = "0x1231A64")]
		protected new void ClearSelection()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x1233008", Offset = "0x1233008", VA = "0x1233008")]
		private static Vector3 GetRectTransformNormal(RectTransform rectTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x1233128", Offset = "0x1233128", VA = "0x1233128", Slot = "30")]
		protected virtual MouseState GetGazePointerData()
		{
			return null;
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x1233C84", Offset = "0x1233C84", VA = "0x1233C84")]
		private bool ShouldStartDrag(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x1232DFC", Offset = "0x1232DFC", VA = "0x1232DFC")]
		private static bool IsPointerMoving(PointerEventData pointerEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x1233E30", Offset = "0x1233E30", VA = "0x1233E30")]
		protected Vector2 SwipeAdjustedPosition(Vector2 originalPosition, VRPointerEventData vrPointerEvent)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x1233EB4", Offset = "0x1233EB4", VA = "0x1233EB4", Slot = "29")]
		protected override void ProcessDrag(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x123421C", Offset = "0x123421C", VA = "0x123421C", Slot = "31")]
		protected virtual PointerEventData.FramePressState GetGazeButtonState()
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x12337DC", Offset = "0x12337DC", VA = "0x12337DC")]
		protected Vector2 GetExtraScrollDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x12342FC", Offset = "0x12342FC", VA = "0x12342FC")]
		public VRInputModule()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class VRPhysicsRaycaster : BaseRaycaster
	{
		[Serializable]
		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EF20", Offset = "0xB5EF20")]
		private sealed class <>c
		{
			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__15_0;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RaycastHit> <>9__16_0;

			[Token(Token = "0x60021DC")]
			[Address(RVA = "0x1B90360", Offset = "0x1B90360", VA = "0x1B90360")]
			public <>c()
			{
			}

			[Token(Token = "0x60021DD")]
			[Address(RVA = "0x1B90368", Offset = "0x1B90368", VA = "0x1B90368")]
			internal int <Raycast>b__15_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}

			[Token(Token = "0x60021DE")]
			[Address(RVA = "0x1B903AC", Offset = "0x1B903AC", VA = "0x1B903AC")]
			internal int <Spherecast>b__16_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int m_sortOrder;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected LayerMask m_eventMask;

		[Token(Token = "0x40022EE")]
		protected const int NoEventMaskSet = -1;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaycastHit[] m_raycastHits;

		[Token(Token = "0x170004E9")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x1234498", Offset = "0x1234498", VA = "0x1234498", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004EA")]
		public override Camera eventCamera
		{
			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x12344A0", Offset = "0x12344A0", VA = "0x12344A0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EB")]
		public int FinalEventMask
		{
			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x12344F8", Offset = "0x12344F8", VA = "0x12344F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004EC")]
		public virtual int Depth
		{
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x12345C8", Offset = "0x12345C8", VA = "0x12345C8", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004ED")]
		public LayerMask EventMask
		{
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0x123469C", Offset = "0x123469C", VA = "0x123469C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0x12346A4", Offset = "0x12346A4", VA = "0x12346A4")]
			set
			{
			}
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x12346AC", Offset = "0x12346AC", VA = "0x12346AC", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x1233850", Offset = "0x1233850", VA = "0x1233850")]
		public void Spherecast(PointerEventData eventData, List<RaycastResult> resultAppendList, float radius)
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x1233C30", Offset = "0x1233C30", VA = "0x1233C30")]
		public Vector2 GetScreenPos(Vector3 worldPosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x1234A84", Offset = "0x1234A84", VA = "0x1234A84")]
		public VRPhysicsRaycaster()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class VRPointerEventData : PointerEventData
	{
		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Ray m_worldSpaceRay;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Vector2 m_swipeStart;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public LayerMask m_layerMask;

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x1233000", Offset = "0x1233000", VA = "0x1233000")]
		public VRPointerEventData(EventSystem eventSystem)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x1234AFC", Offset = "0x1234AFC", VA = "0x1234AFC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x1231044", Offset = "0x1231044", VA = "0x1231044")]
		public bool CanHit(GameObject go)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005A2")]
	public static class VRPointerEventDataExtensions
	{
		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x123155C", Offset = "0x123155C", VA = "0x123155C")]
		public static bool IsVRPointer(this PointerEventData pointerEventData)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x1230F64", Offset = "0x1230F64", VA = "0x1230F64")]
		public static bool TryGetVRPointerEventData(this PointerEventData pointerEventData, out VRPointerEventData vrPointerEventData)
		{
			return default(bool);
		}
	}
}
namespace FNVR2.Holders
{
	[Token(Token = "0x20005A3")]
	public class FactionsHolder : AssetsHolder<Faction>
	{
		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x10F89A4", Offset = "0x10F89A4", VA = "0x10F89A4")]
		public FactionsHolder()
		{
		}
	}
}
namespace Dialogs
{
	[Token(Token = "0x20005A4")]
	public class ModalDialogLoading : ModalDialog
	{
		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EF40", Offset = "0xB5EF40")]
		private sealed class <SetRandomTitlesCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ModalDialogLoading <>4__this;

			[Token(Token = "0x4002303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString[] terms;

			[Token(Token = "0x4002304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeToNextTitle;

			[Token(Token = "0x170004EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60021F7")]
				[Address(RVA = "0xFDCB58", Offset = "0xFDCB58", VA = "0xFDCB58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60021F9")]
				[Address(RVA = "0xFDCBA0", Offset = "0xFDCBA0", VA = "0xFDCBA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60021F4")]
			[Address(RVA = "0xFDCA74", Offset = "0xFDCA74", VA = "0xFDCA74")]
			[DebuggerHidden]
			public <SetRandomTitlesCoroutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60021F5")]
			[Address(RVA = "0xFDCAA0", Offset = "0xFDCAA0", VA = "0xFDCAA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60021F6")]
			[Address(RVA = "0xFDCAA4", Offset = "0xFDCAA4", VA = "0xFDCAA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60021F8")]
			[Address(RVA = "0xFDCB60", Offset = "0xFDCB60", VA = "0xFDCB60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73888", Offset = "0xB73888")]
		private static ModalDialogLoading <Instance>k__BackingField;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_logo;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text m_title;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TMP_Text m_percentage;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73898", Offset = "0xB73898")]
		public LocalizedString[] m_termsLoading;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LocalizedString[] m_termsMatchmaking;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LocalizedString[] m_termsSetupScene;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LocalizedString[] m_termsInitVoice;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IEnumerator m_randomTitlesCoroutine;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected int m_lastPercentage;

		[Token(Token = "0x170004EE")]
		public static ModalDialogLoading Instance
		{
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0xF1B860", Offset = "0xF1B860", VA = "0xF1B860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85ECC", Offset = "0xB85ECC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021E5")]
			[Address(RVA = "0xF1B80C", Offset = "0xF1B80C", VA = "0xF1B80C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85EBC", Offset = "0xB85EBC")]
			private set
			{
			}
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xF1B8AC", Offset = "0xF1B8AC", VA = "0xF1B8AC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0xF1B904", Offset = "0xF1B904", VA = "0xF1B904")]
		public void Show(bool showPercent = true, bool showLogo = true)
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xF1BA0C", Offset = "0xF1BA0C", VA = "0xF1BA0C")]
		public void Show(LocalizedString mTerm, bool showPercent = true, bool showLogo = true)
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xF1BAA0", Offset = "0xF1BAA0", VA = "0xF1BAA0")]
		public void Show(LocalizedString[] terms, float timeToNextTitle, bool showPercent = true, bool showLogo = true)
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xF1BAFC", Offset = "0xF1BAFC", VA = "0xF1BAFC")]
		public void Show(LocalizedString[] terms, bool showPercent = true, bool showLogo = true)
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xF1BBAC", Offset = "0xF1BBAC", VA = "0xF1BBAC", Slot = "6")]
		protected override void SetActive(bool active)
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xF1BA5C", Offset = "0xF1BA5C", VA = "0xF1BA5C")]
		public void SetTitle(LocalizedString mTerm)
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xF1BBF4", Offset = "0xF1BBF4", VA = "0xF1BBF4")]
		public void SetTitle(string mTerm)
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xF1BB30", Offset = "0xF1BB30", VA = "0xF1BB30")]
		public void SetTitle(LocalizedString[] terms)
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xF1BCA0", Offset = "0xF1BCA0", VA = "0xF1BCA0")]
		public void SetProgress(float progress)
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xF1B980", Offset = "0xF1B980", VA = "0xF1B980")]
		public void SetRandomTitles(bool active, [Optional] LocalizedString[] terms, float timeToNextTitle = 3f)
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xF1BD84", Offset = "0xF1BD84", VA = "0xF1BD84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB85EDC", Offset = "0xB85EDC")]
		private IEnumerator SetRandomTitlesCoroutine(LocalizedString[] terms, float timeToNextTitle = 3f)
		{
			return null;
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xF1BE28", Offset = "0xF1BE28", VA = "0xF1BE28")]
		public ModalDialogLoading()
		{
		}
	}
}
namespace Debugging
{
	[Token(Token = "0x20005A6")]
	public class DebugMenu : MonoBehaviour
	{
		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB738D0", Offset = "0xB738D0")]
		private static DebugMenu <Instance>k__BackingField;

		[Token(Token = "0x170004F1")]
		public static DebugMenu Instance
		{
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x109E57C", Offset = "0x109E57C", VA = "0x109E57C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85F8C", Offset = "0xB85F8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x109E5E0", Offset = "0x109E5E0", VA = "0x109E5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB85F9C", Offset = "0xB85F9C")]
			private set
			{
			}
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x109E64C", Offset = "0x109E64C", VA = "0x109E64C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85FAC", Offset = "0xB85FAC")]
		public void LogConsoleMessage(string message)
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x109E650", Offset = "0x109E650", VA = "0x109E650")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB85FE4", Offset = "0xB85FE4")]
		public void LogPoolMessage(string message)
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x109E654", Offset = "0x109E654", VA = "0x109E654")]
		public DebugMenu()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public class DebugMenuApplicationStatus : MonoBehaviour
	{
		[Token(Token = "0x6002200")]
		[Address(RVA = "0x109E660", Offset = "0x109E660", VA = "0x109E660")]
		public DebugMenuApplicationStatus()
		{
		}
	}
	[Token(Token = "0x20005A8")]
	public class DebugMenuDisplay : MonoBehaviour
	{
		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5EF50", Offset = "0xB5EF50")]
		private sealed class <MakeMessageDisappear>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400230C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400230D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DebugMenuDisplay <>4__this;

			[Token(Token = "0x170004F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002209")]
				[Address(RVA = "0xF95440", Offset = "0xF95440", VA = "0xF95440", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600220B")]
				[Address(RVA = "0xF95488", Offset = "0xF95488", VA = "0xF95488", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002206")]
			[Address(RVA = "0xF95318", Offset = "0xF95318", VA = "0xF95318")]
			[DebuggerHidden]
			public <MakeMessageDisappear>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002207")]
			[Address(RVA = "0xF95344", Offset = "0xF95344", VA = "0xF95344", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002208")]
			[Address(RVA = "0xF95348", Offset = "0xF95348", VA = "0xF95348", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600220A")]
			[Address(RVA = "0xF95448", Offset = "0xF95448", VA = "0xF95448", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_distanceFromPlayer;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_heightOffSet;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_debugMessage;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_timeBeforeMessageDisappear;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_makeMessageDisappearCoroutine;

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x109E668", Offset = "0x109E668", VA = "0x109E668")]
		public void ToggleDebugMenu()
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x109E6C8", Offset = "0x109E6C8", VA = "0x109E6C8")]
		private void TurnOnDebugMenu()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x109E86C", Offset = "0x109E86C", VA = "0x109E86C")]
		public void ShowDebugMessage(string message)
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x109E8E0", Offset = "0x109E8E0", VA = "0x109E8E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8601C", Offset = "0xB8601C")]
		private IEnumerator MakeMessageDisappear()
		{
			return null;
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x109E958", Offset = "0x109E958", VA = "0x109E958")]
		public DebugMenuDisplay()
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class DebugMenuLoader : MonoBehaviour
	{
		[Token(Token = "0x600220C")]
		[Address(RVA = "0x109E970", Offset = "0x109E970", VA = "0x109E970")]
		public DebugMenuLoader()
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class DebugRecorder : MonoBehaviour
	{
		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_logRecordLength;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<string> m_logs;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isTrackingLogs;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_dateTimeNow;

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x10A076C", Offset = "0x10A076C", VA = "0x10A076C")]
		private void Start()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x10A0844", Offset = "0x10A0844", VA = "0x10A0844")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x10A08C0", Offset = "0x10A08C0", VA = "0x10A08C0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x10A093C", Offset = "0x10A093C", VA = "0x10A093C")]
		public void ToggleRecording(bool isOn)
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x10A0940", Offset = "0x10A0940", VA = "0x10A0940")]
		public void ToggleLogRecording(bool isOn)
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x10A0A24", Offset = "0x10A0A24", VA = "0x10A0A24")]
		public void SaveRecording()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x10A0A28", Offset = "0x10A0A28", VA = "0x10A0A28")]
		public void SaveLogs()
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x10A101C", Offset = "0x10A101C", VA = "0x10A101C")]
		private void HandleLog(string log, string stackTrace, UnityEngine.LogType type)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x10A1290", Offset = "0x10A1290", VA = "0x10A1290")]
		public DebugRecorder()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class FusionStatHelper : MonoBehaviour
	{
		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FusionStats m_fusionStats;

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x14C997C", Offset = "0x14C997C", VA = "0x14C997C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x14C9B50", Offset = "0x14C9B50", VA = "0x14C9B50")]
		public FusionStatHelper()
		{
		}
	}
}
namespace Customization
{
	[Token(Token = "0x20005AD")]
	public class CustomizationConfigBase : ScriptableObject
	{
		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73920", Offset = "0xB73920")]
		public string m_id;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomizationManager.CustomizationArea m_area;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CustomizationManager.CustomizationType m_type;

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x108C670", Offset = "0x108C670", VA = "0x108C670")]
		public CustomizationConfigBase()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5EF60", Offset = "0xB5EF60")]
	public class CustomizationConfigColourPalette : CustomizationConfigBase
	{
		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73958", Offset = "0xB73958")]
		public Color m_primaryColor;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color m_secondaryColor;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color m_tertiaryColor;

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x108C678", Offset = "0x108C678", VA = "0x108C678")]
		public CustomizationConfigColourPalette()
		{
		}
	}
	[Token(Token = "0x20005AF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5EFC0", Offset = "0xB5EFC0")]
	public class CustomizationConfigMesh : CustomizationConfigBase
	{
		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh m_mesh;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite m_sprite;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 m_aspectRatio;

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x108C680", Offset = "0x108C680", VA = "0x108C680")]
		public CustomizationConfigMesh()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F020", Offset = "0xB5F020")]
	public class CustomizationConfigOffset : CustomizationConfigBase
	{
		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 m_offset;

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x108C688", Offset = "0x108C688", VA = "0x108C688")]
		public CustomizationConfigOffset()
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public class CustomizationManager : MonoBehaviour
	{
		[Token(Token = "0x20005B2")]
		public enum CustomizationArea
		{
			[Token(Token = "0x4002323")]
			Outfit,
			[Token(Token = "0x4002324")]
			Eye,
			[Token(Token = "0x4002325")]
			Hair,
			[Token(Token = "0x4002326")]
			Skin,
			[Token(Token = "0x4002327")]
			Eyebrow
		}

		[Token(Token = "0x20005B3")]
		public enum CustomizationType
		{
			[Token(Token = "0x4002329")]
			Colour,
			[Token(Token = "0x400232A")]
			Alteration
		}

		[Serializable]
		[Token(Token = "0x20005B4")]
		public struct CustomizationOption
		{
			[Token(Token = "0x400232B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CustomizationArea m_area;

			[Token(Token = "0x400232C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public CustomizationType m_type;

			[Token(Token = "0x400232D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CustomizationConfigBase m_defaultCustomization;

			[Token(Token = "0x400232E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<CustomizationConfigBase> m_configs;
		}

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F080", Offset = "0xB5F080")]
		private sealed class <>c__DisplayClass17_0<T>
		{
			[Token(Token = "0x400232F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CustomizationArea area;

			[Token(Token = "0x4002330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CustomizationType customizationType;

			[Token(Token = "0x6002229")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x600222A")]
			internal bool <GetCustomizationConfigs>b__0(CustomizationOption x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F090", Offset = "0xB5F090")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomizationArea area;

			[Token(Token = "0x4002332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public CustomizationType customizationType;

			[Token(Token = "0x600222B")]
			[Address(RVA = "0xF8FE50", Offset = "0xF8FE50", VA = "0xF8FE50")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x600222C")]
			[Address(RVA = "0xF8FE58", Offset = "0xF8FE58", VA = "0xF8FE58")]
			internal bool <GetCustomizationConfigs>b__0(CustomizationOption x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F0A0", Offset = "0xB5F0A0")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomizationArea area;

			[Token(Token = "0x4002334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public CustomizationType customizationType;

			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string configID;

			[Token(Token = "0x600222D")]
			[Address(RVA = "0xF8FE84", Offset = "0xF8FE84", VA = "0xF8FE84")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600222E")]
			[Address(RVA = "0xF8FE8C", Offset = "0xF8FE8C", VA = "0xF8FE8C")]
			internal bool <GetCustomizationConfig>b__0(CustomizationOption x)
			{
				return default(bool);
			}

			[Token(Token = "0x600222F")]
			[Address(RVA = "0xF8FEB8", Offset = "0xF8FEB8", VA = "0xF8FEB8")]
			internal bool <GetCustomizationConfig>b__1(CustomizationConfigBase x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CustomizationOption> m_customizationOptions;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73990", Offset = "0xB73990")]
		private bool <InitializationComplete>k__BackingField;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CustomizationPlayerDataObject m_customizationDataObject;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CustomizationManager m_instance;

		[Token(Token = "0x170004F4")]
		public bool InitializationComplete
		{
			[Token(Token = "0x600221C")]
			[Address(RVA = "0x108C690", Offset = "0x108C690", VA = "0x108C690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB860CC", Offset = "0xB860CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600221D")]
			[Address(RVA = "0x108C698", Offset = "0x108C698", VA = "0x108C698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB860DC", Offset = "0xB860DC")]
			private set
			{
			}
		}

		[Token(Token = "0x170004F5")]
		public static CustomizationManager Instance
		{
			[Token(Token = "0x600221E")]
			[Address(RVA = "0x108C6A4", Offset = "0x108C6A4", VA = "0x108C6A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000098")]
		public static event Action OnInitializationComplete
		{
			[Token(Token = "0x600221F")]
			[Address(RVA = "0x108C790", Offset = "0x108C790", VA = "0x108C790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB860EC", Offset = "0xB860EC")]
			add
			{
			}
			[Token(Token = "0x6002220")]
			[Address(RVA = "0x108C850", Offset = "0x108C850", VA = "0x108C850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB860FC", Offset = "0xB860FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x108C910", Offset = "0x108C910", VA = "0x108C910")]
		private void Start()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x108CA00", Offset = "0x108CA00", VA = "0x108CA00")]
		private void SetupDefaultCustomizations()
		{
		}

		[Token(Token = "0x6002223")]
		public List<T> GetCustomizationConfigs<T>(CustomizationArea area, CustomizationType customizationType)
		{
			return null;
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x108CF6C", Offset = "0x108CF6C", VA = "0x108CF6C")]
		public List<CustomizationConfigBase> GetCustomizationConfigs(CustomizationArea area, CustomizationType customizationType)
		{
			return null;
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x108D074", Offset = "0x108D074", VA = "0x108D074")]
		public CustomizationConfigBase GetCustomizationConfig(CustomizationArea area, CustomizationType customizationType, string configID)
		{
			return null;
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x108D218", Offset = "0x108D218", VA = "0x108D218")]
		public void SaveNewCustomizationConfig(CustomizationConfigBase config)
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x108D230", Offset = "0x108D230", VA = "0x108D230")]
		public bool IsCustomizationOptionSaved(CustomizationConfigBase configBase)
		{
			return default(bool);
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x108D294", Offset = "0x108D294", VA = "0x108D294")]
		public CustomizationManager()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public abstract class CustomizationUI : MonoBehaviour
	{
		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image m_outBorder;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image m_inBorder;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color m_selectedColourOutBorder;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color m_selectedColourInBorder;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button m_paletteButton;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Color m_defaultColourOutBorder;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Color m_defaultColourInBorder;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected CustomizationConfigBase m_customizationConfigBase;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected PadUIScrollRect m_padUIScrollRect;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected UIScrollRectColliderEnabler m_uiScrollRectColliderEnabler;

		[Token(Token = "0x14000099")]
		private static event Action<CustomizationUI> OnUISelected
		{
			[Token(Token = "0x6002230")]
			[Address(RVA = "0x108D354", Offset = "0x108D354", VA = "0x108D354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8610C", Offset = "0xB8610C")]
			add
			{
			}
			[Token(Token = "0x6002231")]
			[Address(RVA = "0x108D410", Offset = "0x108D410", VA = "0x108D410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8611C", Offset = "0xB8611C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x108D4CC", Offset = "0x108D4CC", VA = "0x108D4CC", Slot = "4")]
		public virtual void Initialize(CustomizationConfigBase config, PadUIScrollRect padUIScrollRect)
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x108D6C4", Offset = "0x108D6C4", VA = "0x108D6C4", Slot = "5")]
		public virtual void Uninitialize()
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x108D748", Offset = "0x108D748", VA = "0x108D748", Slot = "6")]
		public virtual void ApplyCustomization()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x108D77C", Offset = "0x108D77C", VA = "0x108D77C")]
		public void SelectThisCustomization()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x108D7F8", Offset = "0x108D7F8", VA = "0x108D7F8", Slot = "7")]
		public virtual void SetSelected(bool isSelected)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x108D8C0", Offset = "0x108D8C0", VA = "0x108D8C0", Slot = "8")]
		protected virtual void UISelected(CustomizationUI uiSelected)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x108D9A8", Offset = "0x108D9A8", VA = "0x108D9A8")]
		protected CustomizationUI()
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public class CustomizationUIColour : CustomizationUI
	{
		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CustomizationConfigColourPalette m_customizationConfigColourPalette;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Image m_colourImg;

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x108D9B0", Offset = "0x108D9B0", VA = "0x108D9B0", Slot = "4")]
		public override void Initialize(CustomizationConfigBase config, PadUIScrollRect padUIScrollRect)
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x108DA8C", Offset = "0x108DA8C", VA = "0x108DA8C")]
		public CustomizationUIColour()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class CustomizationUIColourPalette : CustomizationUI
	{
		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CustomizationConfigColourPalette m_customizationConfigColourPalette;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject m_lockedOverlay;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Image m_primaryColourImg;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Image m_secondaryColourImg;

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x108DA94", Offset = "0x108DA94", VA = "0x108DA94", Slot = "4")]
		public override void Initialize(CustomizationConfigBase config, PadUIScrollRect padUIScrollRect)
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0x108DBDC", Offset = "0x108DBDC", VA = "0x108DBDC")]
		public void SetLockState(bool isLocked)
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x108DC28", Offset = "0x108DC28", VA = "0x108DC28")]
		public CustomizationUIColourPalette()
		{
		}
	}
	[Token(Token = "0x20005BB")]
	public class CustomizationUIHandler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005BC")]
		public struct CustomizationType
		{
			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CustomizationManager.CustomizationArea m_area;

			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public CustomizationManager.CustomizationType m_type;

			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform m_contentHolder;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CustomizationUI m_customizationUIPrefab;

			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PadUIScrollRect m_padUIScrollRect;
		}

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizationType[] m_customizations;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<CustomizationUI> m_customizationUIs;

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x108DC30", Offset = "0x108DC30", VA = "0x108DC30")]
		private void Start()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x108E00C", Offset = "0x108E00C", VA = "0x108E00C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x108DD18", Offset = "0x108DD18", VA = "0x108DD18")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x108E174", Offset = "0x108E174", VA = "0x108E174")]
		public void TransitionCameraToNewPosition(int value)
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x108E1D4", Offset = "0x108E1D4", VA = "0x108E1D4")]
		public CustomizationUIHandler()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public class CustomizationUIMesh : CustomizationUI
	{
		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CustomizationConfigMesh m_customizationConfigMesh;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Image m_image;

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x108E258", Offset = "0x108E258", VA = "0x108E258", Slot = "4")]
		public override void Initialize(CustomizationConfigBase config, PadUIScrollRect padUIScrollRect)
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x108E368", Offset = "0x108E368", VA = "0x108E368")]
		public CustomizationUIMesh()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class DummyAvatarHandler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005BF")]
		public struct CameraPositions
		{
			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CustomizationManager.CustomizationArea m_area;

			[Token(Token = "0x4002357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform m_camerasPositionTransform;

			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Ease m_ease;
		}

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_transitionDuration;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerAvatar m_avatar;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera m_camera;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CameraPositions[] m_cameraPositions;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_currentCameraTransformPosition;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DummyAvatarHandler s_instance;

		[Token(Token = "0x170004F6")]
		public static DummyAvatarHandler Instance
		{
			[Token(Token = "0x6002245")]
			[Address(RVA = "0x10F2844", Offset = "0x10F2844", VA = "0x10F2844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x10F2890", Offset = "0x10F2890", VA = "0x10F2890")]
		private void Start()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x10F2A80", Offset = "0x10F2A80", VA = "0x10F2A80")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x10F2AD8", Offset = "0x10F2AD8", VA = "0x10F2AD8")]
		public void SetCameraActive(bool isActive)
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x10F2AF8", Offset = "0x10F2AF8", VA = "0x10F2AF8")]
		public void TransitionCameraToNewPosition(CustomizationManager.CustomizationArea area)
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x10F2C7C", Offset = "0x10F2C7C", VA = "0x10F2C7C")]
		public DummyAvatarHandler()
		{
		}
	}
	[Token(Token = "0x20005C0")]
	[AttributeAttribute(Name = "SimulationBehaviourAttribute", RVA = "0xB5F0B0", Offset = "0xB5F0B0")]
	[AttributeAttribute(Name = "NetworkBehaviourWeavedAttribute", RVA = "0xB5F0B0", Offset = "0xB5F0B0")]
	public class NetworkedPlayerAvatar : NetworkBehaviour
	{
		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F0F8", Offset = "0xB5F0F8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400235E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FNVR2.Networking.Player.PlayerData.CustomizationData customizationData;

			[Token(Token = "0x6002252")]
			[Address(RVA = "0xFB5734", Offset = "0xFB5734", VA = "0xFB5734")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002253")]
			[Address(RVA = "0xFB573C", Offset = "0xFB573C", VA = "0xFB573C")]
			internal bool <UpdateCustomizationDataList>b__0(FNVR2.Networking.Player.PlayerData.CustomizationData c)
			{
				return default(bool);
			}

			[Token(Token = "0x6002254")]
			[Address(RVA = "0xFB5768", Offset = "0xFB5768", VA = "0xFB5768")]
			internal bool <UpdateCustomizationDataList>b__1(FNVR2.Networking.Player.PlayerData.CustomizationData c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerAvatar m_playerAvatar;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Changed<NetworkedPlayerAvatar> $IL2CPP_CHANGED;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ChangedDelegate<NetworkedPlayerAvatar> $IL2CPP_CHANGED_DELEGATE;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static NetworkBehaviourCallbacks<NetworkedPlayerAvatar> $IL2CPP_NETWORK_BEHAVIOUR_CALLBACKS;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "DefaultForPropertyAttribute", RVA = "0xB739C0", Offset = "0xB739C0")]
		private FNVR2.Networking.Player.PlayerData.CustomizationData[] _PlayerCustomizationData;

		[Token(Token = "0x170004F7")]
		[AttributeAttribute(Name = "NetworkedAttribute", RVA = "0xB8B1FC", Offset = "0xB8B1FC")]
		[AttributeAttribute(Name = "CapacityAttribute", RVA = "0xB8B1FC", Offset = "0xB8B1FC")]
		[AttributeAttribute(Name = "NetworkedWeavedAttribute", RVA = "0xB8B1FC", Offset = "0xB8B1FC")]
		public NetworkLinkedList<FNVR2.Networking.Player.PlayerData.CustomizationData> PlayerCustomizationData
		{
			[Token(Token = "0x600224C")]
			[Address(RVA = "0x1BC6DF4", Offset = "0x1BC6DF4", VA = "0x1BC6DF4")]
			get
			{
				return default(NetworkLinkedList<FNVR2.Networking.Player.PlayerData.CustomizationData>);
			}
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x1BC6DA4", Offset = "0x1BC6DA4", VA = "0x1BC6DA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x1BC6EB8", Offset = "0x1BC6EB8", VA = "0x1BC6EB8")]
		public void UpdateCustomizationDataList(FNVR2.Networking.Player.PlayerData.CustomizationData customizationData)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x1BC7408", Offset = "0x1BC7408", VA = "0x1BC7408")]
		[Preserve]
		private static void OnPlayerCustomizationDataChanged(Changed<NetworkedPlayerAvatar> changed)
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x1BC7650", Offset = "0x1BC7650", VA = "0x1BC7650")]
		public NetworkedPlayerAvatar()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x1BC7658", Offset = "0x1BC7658", VA = "0x1BC7658", Slot = "13")]
		public override void CopyBackingFieldsToState(bool P_0)
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x1BC7728", Offset = "0x1BC7728", VA = "0x1BC7728", Slot = "14")]
		public override void CopyStateToBackingFields()
		{
		}
	}
	[Token(Token = "0x20005C2")]
	public class PlayerAvatar : MonoBehaviour
	{
		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer m_eyeRenderer;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshFilter m_eyeMeshFilter;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter m_eyebrowMeshFilter;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshRenderer[] m_bodyRenderers;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SkinnedMeshRenderer[] m_handRenderers;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_activeBodyMaterial;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Material m_activeHandMaterial;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly int s_skinColourID;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int s_eyeColourID;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int s_hairColourID;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int s_outfitPrimaryColourID;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int s_outfitSecondaryColourID;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected static readonly int s_outfitTertiaryColourID;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int s_ditherFalloff;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int s_ditherDistance;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string s_canDither;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool m_setupComplete;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected CustomizationPlayerDataObject m_customizationDataObject;

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xF55CC4", Offset = "0xF55CC4", VA = "0xF55CC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xF55CDC", Offset = "0xF55CDC", VA = "0xF55CDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xF55D90", Offset = "0xF55D90", VA = "0xF55D90", Slot = "4")]
		public virtual void ApplyColourPalette(CustomizationConfigColourPalette palette)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xF561CC", Offset = "0xF561CC", VA = "0xF561CC", Slot = "5")]
		public virtual void ApplyMeshConfig(CustomizationConfigMesh customizationConfigMesh)
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xF564B0", Offset = "0xF564B0", VA = "0xF564B0", Slot = "6")]
		protected virtual void Setup()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xF56734", Offset = "0xF56734", VA = "0xF56734", Slot = "7")]
		protected virtual void OnCustomizationChanged(object dataObject)
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xF56740", Offset = "0xF56740", VA = "0xF56740", Slot = "8")]
		public virtual void ApplyAllSavedCustomizations()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0xF5689C", Offset = "0xF5689C", VA = "0xF5689C", Slot = "9")]
		public virtual void ApplyCustomization(CustomizationConfigBase config)
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xF56BA8", Offset = "0xF56BA8", VA = "0xF56BA8")]
		public void DisableDitherOnAvatar()
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xF50474", Offset = "0xF50474", VA = "0xF50474")]
		public void SetDitherOnAvatar(float minDistance, float ditherFallOff)
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xF56C88", Offset = "0xF56C88", VA = "0xF56C88")]
		public PlayerAvatar()
		{
		}
	}
	[Token(Token = "0x20005C3")]
	public class PlayerAvatarSinglePlayer : PlayerAvatar
	{
		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F108", Offset = "0xB5F108")]
		private sealed class <WaitForCustomizationManagerBeforeSettingUp>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerAvatarSinglePlayer <>4__this;

			[Token(Token = "0x170004F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600226A")]
				[Address(RVA = "0xFC2820", Offset = "0xFC2820", VA = "0xFC2820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600226C")]
				[Address(RVA = "0xFC2868", Offset = "0xFC2868", VA = "0xFC2868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002267")]
			[Address(RVA = "0xFC2530", Offset = "0xFC2530", VA = "0xFC2530")]
			[DebuggerHidden]
			public <WaitForCustomizationManagerBeforeSettingUp>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002268")]
			[Address(RVA = "0xFC255C", Offset = "0xFC255C", VA = "0xFC255C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002269")]
			[Address(RVA = "0xFC2560", Offset = "0xFC2560", VA = "0xFC2560", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0xFC2828", Offset = "0xFC2828", VA = "0xFC2828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xF56E50", Offset = "0xF56E50", VA = "0xF56E50", Slot = "6")]
		protected override void Setup()
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xF56E7C", Offset = "0xF56E7C", VA = "0xF56E7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8613C", Offset = "0xB8613C")]
		private IEnumerator WaitForCustomizationManagerBeforeSettingUp()
		{
			return null;
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xF56EF4", Offset = "0xF56EF4", VA = "0xF56EF4", Slot = "9")]
		public override void ApplyCustomization(CustomizationConfigBase config)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xF56F1C", Offset = "0xF56F1C", VA = "0xF56F1C", Slot = "4")]
		public override void ApplyColourPalette(CustomizationConfigColourPalette palette)
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xF57010", Offset = "0xF57010", VA = "0xF57010", Slot = "5")]
		public override void ApplyMeshConfig(CustomizationConfigMesh customizationConfigMesh)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xF57064", Offset = "0xF57064", VA = "0xF57064")]
		public PlayerAvatarSinglePlayer()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public class SyncedPlayerAvatar : PlayerAvatar
	{
		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NetworkPlayer m_networkPlayer;

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x116FCE0", Offset = "0x116FCE0", VA = "0x116FCE0", Slot = "6")]
		protected override void Setup()
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x116FD48", Offset = "0x116FD48", VA = "0x116FD48", Slot = "7")]
		protected override void OnCustomizationChanged(object dataObject)
		{
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x116FEC4", Offset = "0x116FEC4", VA = "0x116FEC4")]
		public SyncedPlayerAvatar()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class UIScrollRectColliderEnabler : MonoBehaviour
	{
		[Token(Token = "0x20005C7")]
		[Flags]
		public enum ScrollDirection
		{
			[Token(Token = "0x400237B")]
			Horizontal = 1,
			[Token(Token = "0x400237C")]
			Vertical = 2
		}

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F128", Offset = "0xB5F128")]
		private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIScrollRectColliderEnabler <>4__this;

			[Token(Token = "0x170004FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600227A")]
				[Address(RVA = "0x1B8F13C", Offset = "0x1B8F13C", VA = "0x1B8F13C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600227C")]
				[Address(RVA = "0x1B8F184", Offset = "0x1B8F184", VA = "0x1B8F184", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002277")]
			[Address(RVA = "0x1B8EF3C", Offset = "0x1B8EF3C", VA = "0x1B8EF3C")]
			[DebuggerHidden]
			public <Start>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002278")]
			[Address(RVA = "0x1B8EF68", Offset = "0x1B8EF68", VA = "0x1B8EF68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002279")]
			[Address(RVA = "0x1B8EF6C", Offset = "0x1B8EF6C", VA = "0x1B8EF6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600227B")]
			[Address(RVA = "0x1B8F144", Offset = "0x1B8F144", VA = "0x1B8F144", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScrollRect m_scrollRect;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_distanceMarginForLoad;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ScrollDirection m_scrollDirection;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider m_collider;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x1164DD4", Offset = "0x1164DD4", VA = "0x1164DD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB861EC", Offset = "0xB861EC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x1164E4C", Offset = "0x1164E4C", VA = "0x1164E4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x1164F60", Offset = "0x1164F60", VA = "0x1164F60")]
		private void OnScrollValueChanged(Vector2 value)
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x1164F64", Offset = "0x1164F64", VA = "0x1164F64")]
		private void SetColliderState()
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x1165124", Offset = "0x1165124", VA = "0x1165124")]
		public bool IsVerticallyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x1164FCC", Offset = "0x1164FCC", VA = "0x1164FCC")]
		public bool IsHorizontallyVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x116527C", Offset = "0x116527C", VA = "0x116527C")]
		public UIScrollRectColliderEnabler()
		{
		}
	}
}
namespace CurrencySystem
{
	[Token(Token = "0x20005C9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F138", Offset = "0xB5F138")]
	public class CurrencyConfig : ScriptableObject
	{
		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_currencyID;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite m_icon;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LocalizedString m_currencyName;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizedString m_currencyNamePlural;

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x108A2DC", Offset = "0x108A2DC", VA = "0x108A2DC")]
		public bool ModifyBalance(int amount)
		{
			return default(bool);
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x108A380", Offset = "0x108A380", VA = "0x108A380")]
		public int GetBalance()
		{
			return default(int);
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x108A414", Offset = "0x108A414", VA = "0x108A414")]
		public CurrencyConfig()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public class CurrencyUIDisplay : MonoBehaviour
	{
		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurrencyConfig m_currency;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI m_currencyText;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image m_currencyIcon;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_tickDuration;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_currentAmount;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_wantedAmount;

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x108A41C", Offset = "0x108A41C", VA = "0x108A41C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x108A50C", Offset = "0x108A50C", VA = "0x108A50C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x108A59C", Offset = "0x108A59C", VA = "0x108A59C")]
		private void UpdateUI(CurrencyConfig currencyConfig, int newTotal)
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x108A7A8", Offset = "0x108A7A8", VA = "0x108A7A8")]
		public CurrencyUIDisplay()
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x108A7B8", Offset = "0x108A7B8", VA = "0x108A7B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8629C", Offset = "0xB8629C")]
		private int <UpdateUI>b__8_0()
		{
			return default(int);
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x108A7C0", Offset = "0x108A7C0", VA = "0x108A7C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB862AC", Offset = "0xB862AC")]
		private void <UpdateUI>b__8_1(int x)
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x108A7C8", Offset = "0x108A7C8", VA = "0x108A7C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB862BC", Offset = "0xB862BC")]
		private void <UpdateUI>b__8_2()
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public class LevelBonusRewardUI : MonoBehaviour
	{
		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F198", Offset = "0xB5F198")]
		private sealed class <DoSequence>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelBonusRewardUI <>4__this;

			[Token(Token = "0x170004FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600228D")]
				[Address(RVA = "0xFD8938", Offset = "0xFD8938", VA = "0xFD8938", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600228F")]
				[Address(RVA = "0xFD8980", Offset = "0xFD8980", VA = "0xFD8980", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600228A")]
			[Address(RVA = "0xFD8688", Offset = "0xFD8688", VA = "0xFD8688")]
			[DebuggerHidden]
			public <DoSequence>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600228B")]
			[Address(RVA = "0xFD86B4", Offset = "0xFD86B4", VA = "0xFD86B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600228C")]
			[Address(RVA = "0xFD86B8", Offset = "0xFD86B8", VA = "0xFD86B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600228E")]
			[Address(RVA = "0xFD8940", Offset = "0xFD8940", VA = "0xFD8940", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIScoreBonus m_scoreBonusUI;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_visualsHolder;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_rewardText;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RangedFloat m_minMaxPositions;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DOTweenAnimation m_completeAnimation;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DOTweenAnimation m_completeTextAnimation;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_rewardAmount;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_fillPercent;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_animatedPosition;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action m_onComplete;

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x10BE3EC", Offset = "0x10BE3EC", VA = "0x10BE3EC")]
		public void Init(UIScoreBonus scoreBonusUI, int rewardAmount, Action onComplete)
		{
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x10BE448", Offset = "0x10BE448", VA = "0x10BE448")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB862CC", Offset = "0xB862CC")]
		private IEnumerator DoSequence()
		{
			return null;
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x10BE4C0", Offset = "0x10BE4C0", VA = "0x10BE4C0")]
		public LevelBonusRewardUI()
		{
		}
	}
	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F1A8", Offset = "0xB5F1A8")]
	public class LevelRewardConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20005CE")]
		public struct RewardGrade
		{
			[Token(Token = "0x400239D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_grade;

			[Token(Token = "0x400239E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_rewardAmount;

			[Token(Token = "0x400239F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool m_show;
		}

		[Serializable]
		[Token(Token = "0x20005CF")]
		public struct CurrencyRewardInfo
		{
			[Token(Token = "0x40023A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int m_accuracyReward;

			[Token(Token = "0x40023A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int m_timeReward;

			[Token(Token = "0x40023A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int m_firstPlayReward;

			[Token(Token = "0x40023A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int m_firstPassReward;

			[Token(Token = "0x40023A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_gradeReward;

			[Token(Token = "0x40023A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73A14", Offset = "0xB73A14")]
			private readonly LevelRewardConfig <Config>k__BackingField;

			[Token(Token = "0x170004FE")]
			public int TotalReward
			{
				[Token(Token = "0x6002294")]
				[Address(RVA = "0xFD8990", Offset = "0xFD8990", VA = "0xFD8990")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170004FF")]
			public readonly LevelRewardConfig Config
			{
				[Token(Token = "0x6002295")]
				[Address(RVA = "0xFD89A8", Offset = "0xFD89A8", VA = "0xFD89A8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8637C", Offset = "0xB8637C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0xFD89B0", Offset = "0xFD89B0", VA = "0xFD89B0")]
			public CurrencyRewardInfo([Optional] LevelRewardConfig config)
			{
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0xFD89C0", Offset = "0xFD89C0", VA = "0xFD89C0", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurrencyConfig m_rewardCurrency;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RewardGrade[] m_rewardGrades;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_rewardTime;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int m_rewardAccuracy;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_rewardFirstPlay;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_rewardFirstPass;

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x10C1C0C", Offset = "0x10C1C0C", VA = "0x10C1C0C")]
		public CurrencyRewardInfo RewardCurrency(string grade, float timePercent, float accuracyPercent, bool isFirstPlay, bool isFirstPass)
		{
			return default(CurrencyRewardInfo);
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x10C1C78", Offset = "0x10C1C78", VA = "0x10C1C78")]
		public void RewardCurrency(CurrencyRewardInfo info)
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x10C1D2C", Offset = "0x10C1D2C", VA = "0x10C1D2C", Slot = "4")]
		public virtual CurrencyRewardInfo Calculate(string grade, float timePercent, float accuracyPercent, bool isFirstPlay, bool isFirstPass)
		{
			return default(CurrencyRewardInfo);
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x10C1EB4", Offset = "0x10C1EB4", VA = "0x10C1EB4")]
		public LevelRewardConfig()
		{
		}
	}
	[Token(Token = "0x20005D0")]
	public class LevelRewardUIManager : MonoBehaviour
	{
		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F208", Offset = "0xB5F208")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x40023C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LevelRewardUIManager <>4__this;

			[Token(Token = "0x40023CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int reward;

			[Token(Token = "0x60022AA")]
			[Address(RVA = "0xFD8BF4", Offset = "0xFD8BF4", VA = "0xFD8BF4")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xFD8BFC", Offset = "0xFD8BFC", VA = "0xFD8BFC")]
			internal void <StartBonusRewardSequence>b__0()
			{
			}
		}

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F218", Offset = "0xB5F218")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x40023CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int workingTotal;

			[Token(Token = "0x40023CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LevelRewardUIManager <>4__this;

			[Token(Token = "0x40023CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundPlaybackContext soundPlaybackContext;

			[Token(Token = "0x40023CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float timer;

			[Token(Token = "0x60022AC")]
			[Address(RVA = "0xFD8C24", Offset = "0xFD8C24", VA = "0xFD8C24")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x60022AD")]
			[Address(RVA = "0xFD8C2C", Offset = "0xFD8C2C", VA = "0xFD8C2C")]
			internal int <StartFinalRewardUISequence>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x60022AE")]
			[Address(RVA = "0xFD8C34", Offset = "0xFD8C34", VA = "0xFD8C34")]
			internal void <StartFinalRewardUISequence>b__1(int x)
			{
			}

			[Token(Token = "0x60022AF")]
			[Address(RVA = "0xFD8C3C", Offset = "0xFD8C3C", VA = "0xFD8C3C")]
			internal void <StartFinalRewardUISequence>b__2()
			{
			}

			[Token(Token = "0x60022B0")]
			[Address(RVA = "0xFD8D58", Offset = "0xFD8D58", VA = "0xFD8D58")]
			internal void <StartFinalRewardUISequence>b__3()
			{
			}

			[Token(Token = "0x60022B1")]
			[Address(RVA = "0xFD8DF0", Offset = "0xFD8DF0", VA = "0xFD8DF0")]
			internal void <StartFinalRewardUISequence>b__4()
			{
			}
		}

		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F228", Offset = "0xB5F228")]
		private sealed class <ActivateFirstPassPlayAfterDelay>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelRewardUIManager <>4__this;

			[Token(Token = "0x40023D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x40023D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool usePass;

			[Token(Token = "0x40023D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
			public bool usePlay;

			[Token(Token = "0x40023D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x17000502")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B5")]
				[Address(RVA = "0xFD928C", Offset = "0xFD928C", VA = "0xFD928C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000503")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B7")]
				[Address(RVA = "0xFD92D4", Offset = "0xFD92D4", VA = "0xFD92D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022B2")]
			[Address(RVA = "0xFD8E40", Offset = "0xFD8E40", VA = "0xFD8E40")]
			[DebuggerHidden]
			public <ActivateFirstPassPlayAfterDelay>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x60022B3")]
			[Address(RVA = "0xFD8E6C", Offset = "0xFD8E6C", VA = "0xFD8E6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022B4")]
			[Address(RVA = "0xFD8E70", Offset = "0xFD8E70", VA = "0xFD8E70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022B6")]
			[Address(RVA = "0xFD9294", Offset = "0xFD9294", VA = "0xFD9294", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F238", Offset = "0xB5F238")]
		private sealed class <DoGradeBonusSequence>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelRewardUIManager <>4__this;

			[Token(Token = "0x17000504")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022BB")]
				[Address(RVA = "0xFD93D4", Offset = "0xFD93D4", VA = "0xFD93D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000505")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022BD")]
				[Address(RVA = "0xFD941C", Offset = "0xFD941C", VA = "0xFD941C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022B8")]
			[Address(RVA = "0xFD92DC", Offset = "0xFD92DC", VA = "0xFD92DC")]
			[DebuggerHidden]
			public <DoGradeBonusSequence>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x60022B9")]
			[Address(RVA = "0xFD9308", Offset = "0xFD9308", VA = "0xFD9308", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022BA")]
			[Address(RVA = "0xFD930C", Offset = "0xFD930C", VA = "0xFD930C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022BC")]
			[Address(RVA = "0xFD93DC", Offset = "0xFD93DC", VA = "0xFD93DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73A24", Offset = "0xB73A24")]
		public LevelBonusRewardUI m_bonuseRewardPrefab;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73A5C", Offset = "0xB73A5C")]
		public TextMeshProUGUI m_totalCurrencyText;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI m_totalRewardText;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73A94", Offset = "0xB73A94")]
		public RectTransform m_firstPassPlayHolder;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LayoutElement m_firstPassPlayElement;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73ACC", Offset = "0xB73ACC")]
		public GameObject m_firstPlayObject;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI m_firstPlayRewardText;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73B04", Offset = "0xB73B04")]
		public GameObject m_firstPassObject;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI m_firstPassRewardText;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73B3C", Offset = "0xB73B3C")]
		public UIGradeReward m_gradeRewardPrefab;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject m_gradeContainer;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73B74", Offset = "0xB73B74")]
		public DOTweenAnimation m_totalCurrencyAnimation;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public DOTweenAnimation m_totalCurrencyTextAnimation;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public DOTweenAnimation m_totalRewardAnimation;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public DOTweenAnimation m_totalRewardTextAnimation;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ParticleSystem m_rewardToBankParticles;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73BAC", Offset = "0xB73BAC")]
		public float m_totalRewardTickSpeed;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float m_rewardToTotalDelay;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_rewardToTotalDuration;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_scoreBonusRewardDelay;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_gradeRewardDelay;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_firstPassPlayRewardDelay;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float m_firstPassPlayRewardDuration;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Ease m_firstPassPlayRewardEase;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73BE4", Offset = "0xB73BE4")]
		public ISound m_totalRewardIncreaseSound;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ISound m_totalCurrencyTickSound;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public ISound m_firstPlayPassSound;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private LevelRewardConfig.CurrencyRewardInfo m_rewardInfo;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly List<LevelBonusRewardUI> m_instantiatedBonuses;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int m_totalRewardAmount;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int m_workingRewardAmount;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int m_initialCurrencyAmount;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int m_finalCurrencyAmount;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool m_usePassReward;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool m_usePlayReward;

		[Token(Token = "0x17000500")]
		public bool UsePassPlayRewards
		{
			[Token(Token = "0x6002298")]
			[Address(RVA = "0x10C2038", Offset = "0x10C2038", VA = "0x10C2038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000501")]
		public float PassPlayDuration
		{
			[Token(Token = "0x6002299")]
			[Address(RVA = "0x10C2058", Offset = "0x10C2058", VA = "0x10C2058")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x10C2060", Offset = "0x10C2060", VA = "0x10C2060")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x10C22CC", Offset = "0x10C22CC", VA = "0x10C22CC")]
		public void SetupRewardUISequence(LevelRewardConfig.CurrencyRewardInfo rewardInfo)
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x10C2898", Offset = "0x10C2898", VA = "0x10C2898")]
		public void StartBonusRewardSequence(UIScoreBonus scoreBonusUI)
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x10C2B18", Offset = "0x10C2B18", VA = "0x10C2B18")]
		public void StartFinalRewardUISequence()
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x10C2E14", Offset = "0x10C2E14", VA = "0x10C2E14")]
		public void StartFirstPassPlaySequence()
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x10C2F20", Offset = "0x10C2F20", VA = "0x10C2F20")]
		public void StartGradeBonusSequence()
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x10C2FC4", Offset = "0x10C2FC4", VA = "0x10C2FC4")]
		public void UpdateTotalRewardUI(int amount, float delay)
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x10C214C", Offset = "0x10C214C", VA = "0x10C214C")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x10C2E78", Offset = "0x10C2E78", VA = "0x10C2E78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB863B4", Offset = "0xB863B4")]
		private IEnumerator ActivateFirstPassPlayAfterDelay(float delay, bool usePass, bool usePlay)
		{
			return null;
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x10C2F4C", Offset = "0x10C2F4C", VA = "0x10C2F4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86414", Offset = "0xB86414")]
		private IEnumerator DoGradeBonusSequence()
		{
			return null;
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x10C3254", Offset = "0x10C3254", VA = "0x10C3254")]
		public LevelRewardUIManager()
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x10C32E4", Offset = "0x10C32E4", VA = "0x10C32E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86474", Offset = "0xB86474")]
		private int <UpdateTotalRewardUI>b__45_0()
		{
			return default(int);
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x10C32EC", Offset = "0x10C32EC", VA = "0x10C32EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86484", Offset = "0xB86484")]
		private void <UpdateTotalRewardUI>b__45_1(int x)
		{
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x10C32F4", Offset = "0x10C32F4", VA = "0x10C32F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86494", Offset = "0xB86494")]
		private void <UpdateTotalRewardUI>b__45_2()
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x10C33A0", Offset = "0x10C33A0", VA = "0x10C33A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB864A4", Offset = "0xB864A4")]
		private float <ActivateFirstPassPlayAfterDelay>b__47_0()
		{
			return default(float);
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x10C33C4", Offset = "0x10C33C4", VA = "0x10C33C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB864B4", Offset = "0xB864B4")]
		private void <ActivateFirstPassPlayAfterDelay>b__47_1(float x)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005D5")]
	public class PlayerBank : PlayerDataObject
	{
		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "JsonPropertyAttribute", RVA = "0xB73C1C", Offset = "0xB73C1C")]
		private Dictionary<string, int> m_currencyBalances;

		[Token(Token = "0x1400009A")]
		public static event Action<CurrencyConfig, int> OnBalanceModified
		{
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0xF570C8", Offset = "0xF570C8", VA = "0xF570C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86564", Offset = "0xB86564")]
			add
			{
			}
			[Token(Token = "0x60022BF")]
			[Address(RVA = "0xF57184", Offset = "0xF57184", VA = "0xF57184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86574", Offset = "0xB86574")]
			remove
			{
			}
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0xF57240", Offset = "0xF57240", VA = "0xF57240")]
		public bool ModifyBalance(CurrencyConfig currency, int amount)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0xF57438", Offset = "0xF57438", VA = "0xF57438")]
		public int GetBalance(CurrencyConfig currency)
		{
			return default(int);
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0xF574F8", Offset = "0xF574F8", VA = "0xF574F8")]
		public PlayerBank()
		{
		}
	}
	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F248", Offset = "0xB5F248")]
	public class RewardConfig : ScriptableObject
	{
		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurrencyConfig m_rewardCurrency;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_rewardAmount;

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x13BE694", Offset = "0x13BE694", VA = "0x13BE694", Slot = "4")]
		public virtual void RewardCurrency()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x13BE698", Offset = "0x13BE698", VA = "0x13BE698")]
		public RewardConfig()
		{
		}
	}
}
namespace Combos
{
	[Token(Token = "0x20005D7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F2A8", Offset = "0xB5F2A8")]
	public class Combo : ScriptableObject
	{
		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73C3C", Offset = "0xB73C3C")]
		public Utils.Operator m_fruitCountComparison;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_fruitCount;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73C74", Offset = "0xB73C74")]
		public float m_scoreMultiplier;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_scoreBonus;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73CAC", Offset = "0xB73CAC")]
		public ComboEffect m_effectPrefab;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73CE4", Offset = "0xB73CE4")]
		private byte <Id>k__BackingField;

		[Token(Token = "0x17000506")]
		public byte Id
		{
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x11A752C", Offset = "0x11A752C", VA = "0x11A752C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86584", Offset = "0xB86584")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x11A7534", Offset = "0x11A7534", VA = "0x11A7534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86594", Offset = "0xB86594")]
			set
			{
			}
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x11A753C", Offset = "0x11A753C", VA = "0x11A753C")]
		public int GetComboScore(List<SliceableObjectBase.SliceInfo> sliceInfos)
		{
			return default(int);
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x11A77B4", Offset = "0x11A77B4", VA = "0x11A77B4", Slot = "4")]
		protected virtual void BeginFruitSlicedProcessingInternal(List<SliceableObjectBase.SliceInfo> sliceInfos)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x11A77B8", Offset = "0x11A77B8", VA = "0x11A77B8", Slot = "5")]
		protected virtual bool ProcessFruitSliceInternal(SliceableObjectBase.SliceInfo sliceInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x11A77C0", Offset = "0x11A77C0", VA = "0x11A77C0", Slot = "6")]
		protected virtual bool EndFruitSlicedProcessingInternal(List<SliceableObjectBase.SliceInfo> sliceInfos)
		{
			return default(bool);
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x11A77C8", Offset = "0x11A77C8", VA = "0x11A77C8")]
		public Combo()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class ComboEffect : MonoBehaviour, ILocalizeCallback
	{
		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F2EC", Offset = "0xB5F2EC")]
		private sealed class <EffectCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ComboEffect <>4__this;

			[Token(Token = "0x40023EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int soundIndex;

			[Token(Token = "0x17000507")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022D5")]
				[Address(RVA = "0xF8EC44", Offset = "0xF8EC44", VA = "0xF8EC44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000508")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D7")]
				[Address(RVA = "0xF8EC8C", Offset = "0xF8EC8C", VA = "0xF8EC8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022D2")]
			[Address(RVA = "0xF8EA54", Offset = "0xF8EA54", VA = "0xF8EA54")]
			[DebuggerHidden]
			public <EffectCoroutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xF8EA80", Offset = "0xF8EA80", VA = "0xF8EA80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022D4")]
			[Address(RVA = "0xF8EA84", Offset = "0xF8EA84", VA = "0xF8EA84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0xF8EC4C", Offset = "0xF8EC4C", VA = "0xF8EC4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_delay;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro m_comboText;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro m_scoreText;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_particleEffect;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalizedString m_comboTextString;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string m_scoreTextFormat;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<ISound> m_perComboCountSoundEffects;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Animation m_animation;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_cachedFruitInCombo;

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x11A8550", Offset = "0x11A8550", VA = "0x11A8550")]
		public void Init(int fruitInCombo, int comboScore)
		{
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x11A865C", Offset = "0x11A865C", VA = "0x11A865C")]
		private void UpdateComboName()
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x11A8758", Offset = "0x11A8758", VA = "0x11A8758")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB865A4", Offset = "0xB865A4")]
		private IEnumerator EffectCoroutine(int soundIndex)
		{
			return null;
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x11A87E0", Offset = "0x11A87E0", VA = "0x11A87E0")]
		private void SetGameObjectsEnabled(bool value)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x11A8918", Offset = "0x11A8918", VA = "0x11A8918", Slot = "4")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x11A891C", Offset = "0x11A891C", VA = "0x11A891C")]
		public ComboEffect()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F2FC", Offset = "0xB5F2FC")]
	public class PerfectCombo : Combo
	{
		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<int, int> m_fruitSlicedPerWave;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaveManager m_waveManager;

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xF4EF80", Offset = "0xF4EF80", VA = "0xF4EF80", Slot = "4")]
		protected override void BeginFruitSlicedProcessingInternal(List<SliceableObjectBase.SliceInfo> sliceInfos)
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xF4EFD4", Offset = "0xF4EFD4", VA = "0xF4EFD4", Slot = "5")]
		protected override bool ProcessFruitSliceInternal(SliceableObjectBase.SliceInfo sliceInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xF4F078", Offset = "0xF4F078", VA = "0xF4F078", Slot = "6")]
		protected override bool EndFruitSlicedProcessingInternal(List<SliceableObjectBase.SliceInfo> sliceInfos)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xF4F238", Offset = "0xF4F238", VA = "0xF4F238")]
		public PerfectCombo()
		{
		}
	}
	[Token(Token = "0x20005DB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F340", Offset = "0xB5F340")]
	public class ReflexCombo : Combo
	{
		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_maxLifetime;

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x1009528", Offset = "0x1009528", VA = "0x1009528", Slot = "5")]
		protected override bool ProcessFruitSliceInternal(SliceableObjectBase.SliceInfo sliceInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x1009760", Offset = "0x1009760", VA = "0x1009760")]
		public ReflexCombo()
		{
		}
	}
}
namespace Characters
{
	[Token(Token = "0x20005DC")]
	public class Character : MonoBehaviour, ILocalizeCallback
	{
		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73CF4", Offset = "0xB73CF4")]
		public GameObject m_characterObject;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer m_characterRenderer;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material m_characterMaterial;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73D2C", Offset = "0xB73D2C")]
		public Animator m_characterAnimator;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string m_speechAnimationParam;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73D64", Offset = "0xB73D64")]
		public bool m_doIdleBlinks;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public RangedFloat m_blinkDuration;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public RangedFloat m_blinkDelay;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_blinkMaterialProperty;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 m_blinkOpenOffset;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 m_blinkClosedOffset;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73D9C", Offset = "0xB73D9C")]
		public GameObject m_speechBubble;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Ease m_bubbleInEase;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Ease m_bubbleOutEase;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshProUGUI m_tipText;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NonRepeatingRandomLocalizedString m_strings;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73DD4", Offset = "0xB73DD4")]
		public SoundCueTrigger m_speechSound;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73E0C", Offset = "0xB73E0C")]
		public AreaManager.AreaType m_characterArea;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Transform> m_teleportationLocations;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ParticleSystem m_disappearSmoke;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEvent m_onTeleport;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_speechBubbleActive;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_speechParamHash;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform m_previousRandomTeleportLocation;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_eyesClosed;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_blinkDelayTimer;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_blinkDurationTimer;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private MaterialPropertyBlock m_blinkPropertyBlock;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private TweenerCore<Vector3, Vector3, VectorOptions> m_bubbleIn;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private TweenerCore<Vector3, Vector3, VectorOptions> m_bubbleOut;

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x11A4738", Offset = "0x11A4738", VA = "0x11A4738")]
		private void Start()
		{
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x11A4840", Offset = "0x11A4840", VA = "0x11A4840")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x11A48D0", Offset = "0x11A48D0", VA = "0x11A48D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x11A4A28", Offset = "0x11A4A28", VA = "0x11A4A28")]
		private void AreaEntered(AreaManager.AreaType area)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x11A4AEC", Offset = "0x11A4AEC", VA = "0x11A4AEC")]
		public void TeleportCharacterToRandomLocation(bool playDisappearSmoke = false)
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x11A4F5C", Offset = "0x11A4F5C", VA = "0x11A4F5C")]
		private void UpdateRandomTip()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x11A4984", Offset = "0x11A4984", VA = "0x11A4984")]
		private void SetEyes(bool closed)
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x11A4D64", Offset = "0x11A4D64", VA = "0x11A4D64")]
		public void SetSpeechBubbleActive(bool isActive)
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x11A4FFC", Offset = "0x11A4FFC", VA = "0x11A4FFC", Slot = "4")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x11A5000", Offset = "0x11A5000", VA = "0x11A5000")]
		public Character()
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x11A5008", Offset = "0x11A5008", VA = "0x11A5008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86654", Offset = "0xB86654")]
		private void <SetSpeechBubbleActive>b__37_0()
		{
		}
	}
}
namespace Audio
{
	[Token(Token = "0x20005DD")]
	public class ChallengeMusicController : MonoBehaviour
	{
		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F384", Offset = "0xB5F384")]
		private sealed class <PlayPlaylistAfterDelay>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MusicPlaylist playlist;

			[Token(Token = "0x4002427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int trackNumber;

			[Token(Token = "0x17000509")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022F5")]
				[Address(RVA = "0xF8E374", Offset = "0xF8E374", VA = "0xF8E374", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022F7")]
				[Address(RVA = "0xF8E3BC", Offset = "0xF8E3BC", VA = "0xF8E3BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022F2")]
			[Address(RVA = "0xF8E1F8", Offset = "0xF8E1F8", VA = "0xF8E1F8")]
			[DebuggerHidden]
			public <PlayPlaylistAfterDelay>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60022F3")]
			[Address(RVA = "0xF8E224", Offset = "0xF8E224", VA = "0xF8E224", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022F4")]
			[Address(RVA = "0xF8E228", Offset = "0xF8E228", VA = "0xF8E228", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022F6")]
			[Address(RVA = "0xF8E37C", Offset = "0xF8E37C", VA = "0xF8E37C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixerSnapshot m_pauseMixerSnapshot;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerSnapshot m_menuMusicMixerSnapshot;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioMixerSnapshot m_defaultMixerSnapshot;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_mixerTransitionTime;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_fadeTime;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_maxIntensityTimeGap;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_minIntensityCooldownTime;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MusicPlaylist m_playlist;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_inactiveTimeBeforeDisablingMusic;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SoundPlaybackContext m_soundPlaybackContext;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_layerToResume;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_currentLayer;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_maxIntensityCountdown;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_minIntensityCountdown;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_isPaused;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_inGame;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_timeSpentInactive;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_musicEnabled;

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x11A38D8", Offset = "0x11A38D8", VA = "0x11A38D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x11A3A94", Offset = "0x11A3A94", VA = "0x11A3A94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x11A3CC8", Offset = "0x11A3CC8", VA = "0x11A3CC8")]
		private void Update()
		{
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x11A3E94", Offset = "0x11A3E94", VA = "0x11A3E94")]
		private void OnCountDownStarted(GameEvent gameEvent)
		{
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x11A4050", Offset = "0x11A4050", VA = "0x11A4050")]
		private void OnGameStart(GameEvent gameEvent)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x11A4210", Offset = "0x11A4210", VA = "0x11A4210")]
		private void PauseMusic(GameEvent gameEvent)
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x11A4498", Offset = "0x11A4498", VA = "0x11A4498")]
		private void OnGameOver(GameEvent gameEvent)
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x11A4674", Offset = "0x11A4674", VA = "0x11A4674")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86664", Offset = "0xB86664")]
		private IEnumerator PlayPlaylistAfterDelay(float delay, MusicPlaylist playlist, int trackNumber = -1)
		{
			return null;
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x11A470C", Offset = "0x11A470C", VA = "0x11A470C")]
		public ChallengeMusicController()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public class MusicHelper : MonoBehaviour
	{
		[Token(Token = "0x60022F8")]
		[Address(RVA = "0xF21CF0", Offset = "0xF21CF0", VA = "0xF21CF0")]
		public void SetPauseMusicState(bool isPaused)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xF21DE4", Offset = "0xF21DE4", VA = "0xF21DE4")]
		public MusicHelper()
		{
		}
	}
}
namespace AreaManagement
{
	[Token(Token = "0x20005E0")]
	public class AreaEnterExitCallback : MonoBehaviour
	{
		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AreaManager.AreaType m_areaType;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent m_onAreaEntered;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent m_onAreaExit;

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xFAAB18", Offset = "0xFAAB18", VA = "0xFAAB18")]
		private void Start()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xFAAD64", Offset = "0xFAAD64", VA = "0xFAAD64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0xFAAFB0", Offset = "0xFAAFB0", VA = "0xFAAFB0")]
		private void AreaEntered(AreaManager.AreaType area)
		{
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xFAAFD0", Offset = "0xFAAFD0", VA = "0xFAAFD0")]
		private void AreaExited(AreaManager.AreaType area)
		{
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0xFAAFF0", Offset = "0xFAAFF0", VA = "0xFAAFF0")]
		public AreaEnterExitCallback()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E1")]
	public class AreaEvent : UnityEvent<AreaManager.AreaType>
	{
		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xFAAFF8", Offset = "0xFAAFF8", VA = "0xFAAFF8")]
		public AreaEvent()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public class AreaManager : MonoBehaviour
	{
		[Token(Token = "0x20005E3")]
		public enum AreaType
		{
			[Token(Token = "0x4002438")]
			Unknown,
			[Token(Token = "0x4002439")]
			Dojo,
			[Token(Token = "0x400243A")]
			ArcheryPath,
			[Token(Token = "0x400243B")]
			ArcheryArea,
			[Token(Token = "0x400243C")]
			BladesArea,
			[Token(Token = "0x400243D")]
			BladesAreaEntrance,
			[Token(Token = "0x400243E")]
			DojoEntrance,
			[Token(Token = "0x400243F")]
			DojoBladesEntrance,
			[Token(Token = "0x4002440")]
			ZenGarden,
			[Token(Token = "0x4002441")]
			BambooPathway,
			[Token(Token = "0x4002442")]
			DojoInterior,
			[Token(Token = "0x4002443")]
			SocialHubInterior,
			[Token(Token = "0x4002444")]
			SocialHubExterior,
			[Token(Token = "0x4002445")]
			BambooGarden,
			[Token(Token = "0x4002446")]
			DojoArcheryEntrance,
			[Token(Token = "0x4002447")]
			SocialHubArena,
			[Token(Token = "0x4002448")]
			Arcade,
			[Token(Token = "0x4002449")]
			Zen,
			[Token(Token = "0x400244A")]
			SocialHubInteriorArenaExit,
			[Token(Token = "0x400244B")]
			SocialHubExteriorExit
		}

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AreaEvent m_onAreaEnterEvent;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AreaEvent m_onAreaExitEvent;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_debugClearUnlockedAreas;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73E44", Offset = "0xB73E44")]
		private AreaType <CurrentArea>k__BackingField;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73E54", Offset = "0xB73E54")]
		private float <TimeEnteredArea>k__BackingField;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73E64", Offset = "0xB73E64")]
		private static AreaManager <Instance>k__BackingField;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AreaUnlocksPlayerDataObject m_playerAreaData;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly LinkedList<AreaTriggerCollider> m_areaPath;

		[Token(Token = "0x1700050B")]
		public AreaType CurrentArea
		{
			[Token(Token = "0x6002300")]
			[Address(RVA = "0xFAB044", Offset = "0xFAB044", VA = "0xFAB044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86714", Offset = "0xB86714")]
			get
			{
				return default(AreaType);
			}
			[Token(Token = "0x6002301")]
			[Address(RVA = "0xFAB04C", Offset = "0xFAB04C", VA = "0xFAB04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86724", Offset = "0xB86724")]
			private set
			{
			}
		}

		[Token(Token = "0x1700050C")]
		public float TimeEnteredArea
		{
			[Token(Token = "0x6002302")]
			[Address(RVA = "0xFAB054", Offset = "0xFAB054", VA = "0xFAB054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86734", Offset = "0xB86734")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002303")]
			[Address(RVA = "0xFAB05C", Offset = "0xFAB05C", VA = "0xFAB05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86744", Offset = "0xB86744")]
			private set
			{
			}
		}

		[Token(Token = "0x1700050D")]
		public static AreaManager Instance
		{
			[Token(Token = "0x6002304")]
			[Address(RVA = "0xFAB064", Offset = "0xFAB064", VA = "0xFAB064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86754", Offset = "0xB86754")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002305")]
			[Address(RVA = "0xFAB0B0", Offset = "0xFAB0B0", VA = "0xFAB0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86764", Offset = "0xB86764")]
			private set
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public static event Action<AreaType> OnAreaUnlocked
		{
			[Token(Token = "0x6002306")]
			[Address(RVA = "0xFAB104", Offset = "0xFAB104", VA = "0xFAB104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86774", Offset = "0xB86774")]
			add
			{
			}
			[Token(Token = "0x6002307")]
			[Address(RVA = "0xFAB1C4", Offset = "0xFAB1C4", VA = "0xFAB1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86784", Offset = "0xB86784")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009C")]
		public static event Action<AreaType> OnAreaEntered
		{
			[Token(Token = "0x6002308")]
			[Address(RVA = "0xFAABE4", Offset = "0xFAABE4", VA = "0xFAABE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86794", Offset = "0xB86794")]
			add
			{
			}
			[Token(Token = "0x6002309")]
			[Address(RVA = "0xFAAE30", Offset = "0xFAAE30", VA = "0xFAAE30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867A4", Offset = "0xB867A4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009D")]
		public static event Action<AreaType> OnAreaExited
		{
			[Token(Token = "0x600230A")]
			[Address(RVA = "0xFAACA4", Offset = "0xFAACA4", VA = "0xFAACA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867B4", Offset = "0xB867B4")]
			add
			{
			}
			[Token(Token = "0x600230B")]
			[Address(RVA = "0xFAAEF0", Offset = "0xFAAEF0", VA = "0xFAAEF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867C4", Offset = "0xB867C4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009E")]
		public static event Action OnIntitialized
		{
			[Token(Token = "0x600230C")]
			[Address(RVA = "0xFAB284", Offset = "0xFAB284", VA = "0xFAB284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867D4", Offset = "0xB867D4")]
			add
			{
			}
			[Token(Token = "0x600230D")]
			[Address(RVA = "0xFAB344", Offset = "0xFAB344", VA = "0xFAB344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867E4", Offset = "0xB867E4")]
			remove
			{
			}
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0xFAB404", Offset = "0xFAB404", VA = "0xFAB404")]
		private void Start()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xFAB5D0", Offset = "0xFAB5D0", VA = "0xFAB5D0")]
		public void OnAreaEnter(AreaTriggerCollider areaCollider)
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0xFAB664", Offset = "0xFAB664", VA = "0xFAB664")]
		private void EnterArea(AreaType areaEntered)
		{
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xFAB8D0", Offset = "0xFAB8D0", VA = "0xFAB8D0")]
		public void OnAreaExit(AreaTriggerCollider areaExited)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xFAB9D0", Offset = "0xFAB9D0", VA = "0xFAB9D0")]
		public void UnlockArea(AreaType type)
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xFABA84", Offset = "0xFABA84", VA = "0xFABA84")]
		public static bool IsUnlocked(AreaType area)
		{
			return default(bool);
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0xFABB14", Offset = "0xFABB14", VA = "0xFABB14")]
		public AreaManager()
		{
		}
	}
	[Token(Token = "0x20005E4")]
	public class AreaTriggerCollider : MonoBehaviour
	{
		[Token(Token = "0x20005E5")]
		public enum WaitCondition
		{
			[Token(Token = "0x4002450")]
			None,
			[Token(Token = "0x4002451")]
			WaitForUnlockableToBeUnlocked,
			[Token(Token = "0x4002452")]
			WaitForUnlockableToBeSeen
		}

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AreaManager.AreaType m_areaType;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public WaitCondition m_waitCondition;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Game.Unlockable m_unlockableToWaitFor;

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xFABB98", Offset = "0xFABB98", VA = "0xFABB98")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xFABC44", Offset = "0xFABC44", VA = "0xFABC44")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xFABC08", Offset = "0xFABC08", VA = "0xFABC08")]
		private bool ShouldDetectCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xFABCB4", Offset = "0xFABCB4", VA = "0xFABCB4")]
		private bool IsLocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xFABD50", Offset = "0xFABD50", VA = "0xFABD50")]
		private bool HasBeenSeen()
		{
			return default(bool);
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0xFAC08C", Offset = "0xFAC08C", VA = "0xFAC08C")]
		public AreaTriggerCollider()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class EnableInArea : MonoBehaviour
	{
		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AreaManager.AreaType> m_areaList;

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x10F6820", Offset = "0x10F6820", VA = "0x10F6820")]
		private void Awake()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x10F68B0", Offset = "0x10F68B0", VA = "0x10F68B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x10F6940", Offset = "0x10F6940", VA = "0x10F6940")]
		private void AreaEntered(AreaManager.AreaType area)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x10F69CC", Offset = "0x10F69CC", VA = "0x10F69CC")]
		public EnableInArea()
		{
		}
	}
}
namespace Analytics
{
	[Token(Token = "0x20005E7")]
	public class AnalyticsAreaEvents : MonoBehaviour
	{
		[Token(Token = "0x600231F")]
		[Address(RVA = "0xF9B6DC", Offset = "0xF9B6DC", VA = "0xF9B6DC")]
		public void OnAreaEnter(AreaManager.AreaType areaEntered)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0xF9B81C", Offset = "0xF9B81C", VA = "0xF9B81C")]
		public void OnAreaExit(AreaManager.AreaType areaExited)
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xF9B984", Offset = "0xF9B984", VA = "0xF9B984")]
		public AnalyticsAreaEvents()
		{
		}
	}
	[Token(Token = "0x20005E8")]
	public class AnalyticsQueueFlusher : MonoBehaviour
	{
		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB73EB4", Offset = "0xB73EB4")]
		public float m_flushTimeout;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_flushTimer;

		[Token(Token = "0x6002322")]
		[Address(RVA = "0xF9B98C", Offset = "0xF9B98C", VA = "0xF9B98C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xF9BB0C", Offset = "0xF9BB0C", VA = "0xF9BB0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xF9BC40", Offset = "0xF9BC40", VA = "0xF9BC40")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xF9BCAC", Offset = "0xF9BCAC", VA = "0xF9BCAC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xF9BCE0", Offset = "0xF9BCE0", VA = "0xF9BCE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xF9BD40", Offset = "0xF9BD40", VA = "0xF9BD40")]
		private void OnAnalyticEventEmitted()
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0xF9BC78", Offset = "0xF9BC78", VA = "0xF9BC78")]
		private void FlushNow()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xF9BD74", Offset = "0xF9BD74", VA = "0xF9BD74")]
		public AnalyticsQueueFlusher()
		{
		}
	}
	[Token(Token = "0x20005E9")]
	public class AnalyticsSceneInteractable : MonoBehaviour
	{
		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_useCollisionEvents;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask m_collisionMask;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool m_overrideObjectName;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_newObjectName;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_maxInteractInterval;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_interactionTimer;

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xF9BD84", Offset = "0xF9BD84", VA = "0xF9BD84")]
		private void Start()
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xF9BF24", Offset = "0xF9BF24", VA = "0xF9BF24")]
		private void Update()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xF9BF64", Offset = "0xF9BF64", VA = "0xF9BF64")]
		private void OnArrowInteraction()
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xF9BFB0", Offset = "0xF9BFB0", VA = "0xF9BFB0")]
		public void OnInteraction(string objectThatInteracted)
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0xF9C13C", Offset = "0xF9C13C", VA = "0xF9C13C")]
		public void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xF9C200", Offset = "0xF9C200", VA = "0xF9C200")]
		private bool IsInLayerMask(LayerMask layerMask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xF9C258", Offset = "0xF9C258", VA = "0xF9C258")]
		public AnalyticsSceneInteractable()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	public abstract class AnalyticsService
	{
		[Token(Token = "0x20005EB")]
		protected struct PlatformInformation
		{
			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string vrHeadsetMake;

			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string vrHeadsetModel;

			[Token(Token = "0x4002465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string graphicsDeviceName;

			[Token(Token = "0x4002466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string graphicsDeviceVendor;

			[Token(Token = "0x4002467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string graphicsDeviceVersion;

			[Token(Token = "0x4002468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string graphicsDeviceType;

			[Token(Token = "0x4002469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int graphicsMemorySize;

			[Token(Token = "0x400246A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string processorType;

			[Token(Token = "0x400246B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int processorCount;

			[Token(Token = "0x400246C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int processorFrequency;

			[Token(Token = "0x400246D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int memorySize;

			[Token(Token = "0x400246E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string osVersion;

			[Token(Token = "0x6002344")]
			[Address(RVA = "0xF8AEEC", Offset = "0xF8AEEC", VA = "0xF8AEEC", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_hasCachedPlatformInfo;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlatformInformation m_cachedPlatformInfo;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasCachedPlatformUserID;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string m_cachedPlatformUserID;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73EEC", Offset = "0xB73EEC")]
		private string <SessionID>k__BackingField;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AnalyticsService s_instance;

		[Token(Token = "0x1700050E")]
		protected PlatformInformation PlatformInfo
		{
			[Token(Token = "0x6002331")]
			[Address(RVA = "0xF9C268", Offset = "0xF9C268", VA = "0xF9C268")]
			get
			{
				return default(PlatformInformation);
			}
		}

		[Token(Token = "0x1700050F")]
		protected string UserID
		{
			[Token(Token = "0x6002332")]
			[Address(RVA = "0xF9C538", Offset = "0xF9C538", VA = "0xF9C538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000510")]
		protected string PlatformUserID
		{
			[Token(Token = "0x6002333")]
			[Address(RVA = "0xF9C540", Offset = "0xF9C540", VA = "0xF9C540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000511")]
		protected string SessionID
		{
			[Token(Token = "0x6002334")]
			[Address(RVA = "0xF9C940", Offset = "0xF9C940", VA = "0xF9C940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB867F4", Offset = "0xB867F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002335")]
			[Address(RVA = "0xF9C948", Offset = "0xF9C948", VA = "0xF9C948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86804", Offset = "0xB86804")]
			private set
			{
			}
		}

		[Token(Token = "0x17000512")]
		protected string GameVersion
		{
			[Token(Token = "0x6002336")]
			[Address(RVA = "0xF9C950", Offset = "0xF9C950", VA = "0xF9C950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000513")]
		public string PlatformUserIdEncrypted
		{
			[Token(Token = "0x6002337")]
			[Address(RVA = "0xF9C958", Offset = "0xF9C958", VA = "0xF9C958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000514")]
		public static AnalyticsService Instance
		{
			[Token(Token = "0x600233A")]
			[Address(RVA = "0xF9C95C", Offset = "0xF9C95C", VA = "0xF9C95C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400009F")]
		public static event Action OnEventEmitted
		{
			[Token(Token = "0x6002338")]
			[Address(RVA = "0xF9BA50", Offset = "0xF9BA50", VA = "0xF9BA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86814", Offset = "0xB86814")]
			add
			{
			}
			[Token(Token = "0x6002339")]
			[Address(RVA = "0xF9BB84", Offset = "0xF9BB84", VA = "0xF9BB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86824", Offset = "0xB86824")]
			remove
			{
			}
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xF9C960", Offset = "0xF9C960", VA = "0xF9C960")]
		private static AnalyticsService GetInstance()
		{
			return null;
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xF9B7A0", Offset = "0xF9B7A0", VA = "0xF9B7A0")]
		public static void EmitEvent(object evt)
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xF9BD4C", Offset = "0xF9BD4C", VA = "0xF9BD4C")]
		public static void FlushQueue()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0xF9CA94", Offset = "0xF9CA94", VA = "0xF9CA94")]
		public static void GenerateNewSessionID()
		{
		}

		[Token(Token = "0x600233F")]
		protected abstract void EmitEventInternal(object evt);

		[Token(Token = "0x6002340")]
		protected abstract void FlushQueueInternal();

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xF9CABC", Offset = "0xF9CABC", VA = "0xF9CABC", Slot = "6")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xF9CACC", Offset = "0xF9CACC", VA = "0xF9CACC", Slot = "7")]
		protected virtual void GenerateNewSessionIDInternal()
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xF9CB5C", Offset = "0xF9CB5C", VA = "0xF9CB5C")]
		protected AnalyticsService()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public class AnalyticsServiceLocal : AnalyticsService
	{
		[Token(Token = "0x20005ED")]
		private struct EventParameter
		{
			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_parameterName;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string m_parameterValue;
		}

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly BindingFlags s_validBindingFlags;

		[Token(Token = "0x4002470")]
		private const string ServiceName = "Local Analytics Service";

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xF9CBC0", Offset = "0xF9CBC0", VA = "0xF9CBC0", Slot = "6")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0xF9CBD0", Offset = "0xF9CBD0", VA = "0xF9CBD0", Slot = "4")]
		protected override void EmitEventInternal(object evt)
		{
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xF9D150", Offset = "0xF9D150", VA = "0xF9D150", Slot = "5")]
		protected override void FlushQueueInternal()
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xF9CBF8", Offset = "0xF9CBF8", VA = "0xF9CBF8")]
		private List<EventParameter> GetEventParameters(object evt)
		{
			return null;
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xF9D154", Offset = "0xF9D154", VA = "0xF9D154")]
		private void AddGenericParamsToEventParams(List<EventParameter> eventParameters)
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0xF9CE6C", Offset = "0xF9CE6C", VA = "0xF9CE6C")]
		private void LogEventParameters(object evt, IReadOnlyList<EventParameter> eventParameters)
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xF9D400", Offset = "0xF9D400", VA = "0xF9D400")]
		public AnalyticsServiceLocal()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	public class AnalyticsServiceNetworkEffects : AnalyticsService
	{
		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F394", Offset = "0xB5F394")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnalyticsServiceNetworkEffects <>4__this;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Analyticsevent nfxEvent;

			[Token(Token = "0x600235A")]
			[Address(RVA = "0xF8B404", Offset = "0xF8B404", VA = "0xF8B404")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600235B")]
			[Address(RVA = "0xF8B40C", Offset = "0xF8B40C", VA = "0xF8B40C")]
			internal void <EmitEventInternal>b__0()
			{
			}
		}

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NetworkEffects.Analytics.AnalyticsService m_nfxAnalyticsService;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<EventParamElement> m_storedGenericParams;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ICollection<EventParamElement> m_runtimeCollection;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ProfilerMarker s_addEvent;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ProfilerMarker s_emitEventInternal;

		[Token(Token = "0x17000515")]
		private string FirebaseAppId
		{
			[Token(Token = "0x600234D")]
			[Address(RVA = "0xF9D454", Offset = "0xF9D454", VA = "0xF9D454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xF9D498", Offset = "0xF9D498", VA = "0xF9D498", Slot = "6")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xF9D5E0", Offset = "0xF9D5E0", VA = "0xF9D5E0")]
		private void InitializeGenericParams()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0xF9D8A4", Offset = "0xF9D8A4", VA = "0xF9D8A4")]
		private static void AddParamString(string key, string value, ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xF9D9EC", Offset = "0xF9D9EC", VA = "0xF9D9EC")]
		private static void AddParamInt(string key, int value, ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0xF9DB2C", Offset = "0xF9DB2C", VA = "0xF9DB2C")]
		private static void AddParamBool(string key, bool value, ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xF9DCAC", Offset = "0xF9DCAC", VA = "0xF9DCAC")]
		private static void ReflectEventParams(object evt, ICollection<EventParamElement> eventParams)
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xF9E620", Offset = "0xF9E620", VA = "0xF9E620")]
		private void AddGenericParamsToEventParams(ICollection<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xF9EB00", Offset = "0xF9EB00", VA = "0xF9EB00")]
		private void AddStoredGenericEvents(List<EventParamElement> eventParameters)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0xF9EB64", Offset = "0xF9EB64", VA = "0xF9EB64", Slot = "4")]
		protected override void EmitEventInternal(object evt)
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xF9EFB0", Offset = "0xF9EFB0", VA = "0xF9EFB0", Slot = "5")]
		protected override void FlushQueueInternal()
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0xF9CA14", Offset = "0xF9CA14", VA = "0xF9CA14")]
		public AnalyticsServiceNetworkEffects()
		{
		}
	}
	[Token(Token = "0x20005F0")]
	public class AnalyticsUIInteraction : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_name;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_screenName;

		[Token(Token = "0x600235C")]
		[Address(RVA = "0xF9F084", Offset = "0xF9F084", VA = "0xF9F084")]
		private void Start()
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xF9F174", Offset = "0xF9F174", VA = "0xF9F174", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0xF9F178", Offset = "0xF9F178", VA = "0xF9F178")]
		public void FireUIInteraction()
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xF9F204", Offset = "0xF9F204", VA = "0xF9F204")]
		public AnalyticsUIInteraction()
		{
		}
	}
}
namespace Analytics.Events
{
	[Token(Token = "0x20005F1")]
	public struct ApplicationStart
	{
	}
	[Token(Token = "0x20005F2")]
	public struct ApplicationQuit
	{
	}
	[Token(Token = "0x20005F3")]
	public struct ApplicationPause
	{
	}
	[Token(Token = "0x20005F4")]
	public struct ApplicationResume
	{
	}
	[Token(Token = "0x20005F5")]
	public struct AreaEnter
	{
		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string areaEntered;
	}
	[Token(Token = "0x20005F6")]
	public struct AreaExit
	{
		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string areaExited;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float timeSpentInArea;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool wasHoldingObject;
	}
	[Token(Token = "0x20005F7")]
	public struct QuitMenuOpened
	{
	}
	[Token(Token = "0x20005F8")]
	public struct QuitMenuClosed
	{
	}
	[Token(Token = "0x20005F9")]
	public struct SettingsOpened
	{
	}
	[Token(Token = "0x20005FA")]
	public struct SettingsClosed
	{
	}
	[Token(Token = "0x20005FB")]
	public struct SettingsChanged
	{
		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float musicVolume;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float sfxVolume;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string travelMode;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string armLength;
	}
	[Token(Token = "0x20005FC")]
	public struct SettingsChangedMusic
	{
		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float musicVolume;
	}
	[Token(Token = "0x20005FD")]
	public struct SettingsChangedSFX
	{
		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sfxVolume;
	}
	[Token(Token = "0x20005FE")]
	public struct SettingsChangedLocomotion
	{
		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string travelMode;
	}
	[Token(Token = "0x20005FF")]
	public struct SettingsChangedHandBasedMovement
	{
		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool useHandBasedMovement;
	}
	[Token(Token = "0x2000600")]
	public struct SettingsChangedRotation
	{
		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string rotationMode;
	}
	[Token(Token = "0x2000601")]
	public struct SettingsChangedPullRange
	{
		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string pullLength;
	}
	[Token(Token = "0x2000602")]
	public struct SettingsChangedAutoFire
	{
		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool autoFire;
	}
	[Token(Token = "0x2000603")]
	public struct SettingsChangedTrajectoryLine
	{
		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool trajectoryLine;
	}
	[Token(Token = "0x2000604")]
	public struct SettingsChangedFlipMovementHands
	{
		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool flipMovementHands;
	}
	[Token(Token = "0x2000605")]
	public struct SettingsChangedLanguage
	{
		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string previousLanguage;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string newLanguage;
	}
	[Token(Token = "0x2000606")]
	public struct SceneInteraction
	{
		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string areaName;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string objectInteracted;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string interactionSource;
	}
	[Token(Token = "0x2000607")]
	public struct UIInteraction
	{
		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string screen;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string component;
	}
	[Token(Token = "0x2000608")]
	public struct UIScreenDisplayed
	{
		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string screen;
	}
	[Token(Token = "0x2000609")]
	public struct UIScreenClosed
	{
		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string screen;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float timeSpentOnScreen;
	}
	[Token(Token = "0x200060A")]
	public struct ObjectGrabbed
	{
		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string areaName;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string objectName;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string hand;
	}
	[Token(Token = "0x200060B")]
	public struct ObjectReleased
	{
		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string areaName;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string objectName;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string hand;
	}
	[Token(Token = "0x200060C")]
	public struct WorldInteractionFound
	{
		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string interactionID;
	}
	[Token(Token = "0x200060D")]
	public struct WorldInteractionStarted
	{
		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string interactionID;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int attemptAmount;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int bestScore;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float bestTime;
	}
	[Token(Token = "0x200060E")]
	public struct WorldInteractionEnded
	{
		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string interactionID;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string completionState;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int attemptAmount;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int score;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int bestScore;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float bestTime;
	}
	[Token(Token = "0x200060F")]
	public struct StartGame
	{
		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string context;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string gameModeID;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string levelID;
	}
	[Token(Token = "0x2000610")]
	public class LevelEvent
	{
		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string gameModeID;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string levelID;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int setlistNum;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int levelNum;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int attemptAmount;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string bestGrade;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int bestScore;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float bestTime;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string leftBladeID;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string rightBladeID;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string bowID;

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x10BE4CC", Offset = "0x10BE4CC", VA = "0x10BE4CC")]
		public LevelEvent(string gameModeID, string levelID, int setlistNum, int levelNum, GameLevelsPlayerDataObject.LevelData levelData, InventoryPlayerDataObject invData)
		{
		}
	}
	[Token(Token = "0x2000611")]
	public class LevelStart : LevelEvent
	{
		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool holdingBow;

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x10C6764", Offset = "0x10C6764", VA = "0x10C6764")]
		public LevelStart(string gameModeID, string levelID, int setlistNum, int levelNum, GameLevelsPlayerDataObject.LevelData levelData, InventoryPlayerDataObject invData)
		{
		}
	}
	[Token(Token = "0x2000612")]
	public class LevelEnd : LevelEvent
	{
		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int endScore;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string endGrade;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float endTime;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float endTimeBonus;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float endAccuracyBonus;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int bombsHit;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int fruitSliced;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int fruitSkewered;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int maxFruitToSlice;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool newPersonalBest;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int streakCount;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int highestStreakTier;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string gameOverReason;

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x10BE4C8", Offset = "0x10BE4C8", VA = "0x10BE4C8")]
		public LevelEnd(string gameModeID, string levelID, int setlistNum, int levelNum, GameLevelsPlayerDataObject.LevelData levelData, InventoryPlayerDataObject invData)
		{
		}
	}
	[Token(Token = "0x2000613")]
	public class LevelEndClassic : LevelEnd
	{
		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int livesLost;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int livesLeft;

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x10BE67C", Offset = "0x10BE67C", VA = "0x10BE67C")]
		public LevelEndClassic(string gameModeID, string levelID, int setlistNum, int levelNum, GameLevelsPlayerDataObject.LevelData levelData, InventoryPlayerDataObject invData)
		{
		}
	}
	[Token(Token = "0x2000614")]
	public class LevelEndArcade : LevelEnd
	{
		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int bananaFrenzySpawned;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int bananaFrenzySliced;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int bananaFreezeSpawned;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int bananaFreezeSliced;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int bananaDoubleSpawned;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int bananaDoubleSliced;

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x10BE678", Offset = "0x10BE678", VA = "0x10BE678")]
		public LevelEndArcade(string gameModeID, string levelID, int setlistNum, int levelNum, GameLevelsPlayerDataObject.LevelData levelData, InventoryPlayerDataObject invData)
		{
		}
	}
	[Token(Token = "0x2000615")]
	public class LevelQuit : LevelEvent
	{
		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float quitTime;

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x10C1C00", Offset = "0x10C1C00", VA = "0x10C1C00")]
		public LevelQuit(string gameModeID, string levelID, int setlistNum, int levelNum, GameLevelsPlayerDataObject.LevelData levelData, InventoryPlayerDataObject invData)
		{
		}
	}
	[Token(Token = "0x2000616")]
	public class LevelRestart : LevelEvent
	{
		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float restartTime;

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x10C1C08", Offset = "0x10C1C08", VA = "0x10C1C08")]
		public LevelRestart(string gameModeID, string levelID, int setlistNum, int levelNum, GameLevelsPlayerDataObject.LevelData levelData, InventoryPlayerDataObject invData)
		{
		}
	}
	[Token(Token = "0x2000617")]
	public class LevelReplay : LevelEvent
	{
		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string gradeBeforeReplay;

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x10C1C04", Offset = "0x10C1C04", VA = "0x10C1C04")]
		public LevelReplay(string gameModeID, string levelID, int setlistNum, int levelNum, GameLevelsPlayerDataObject.LevelData levelData, InventoryPlayerDataObject invData)
		{
		}
	}
	[Token(Token = "0x2000618")]
	public struct LevelUnlocked
	{
		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string levelID;
	}
	[Token(Token = "0x2000619")]
	public struct AllLevelsCompleted
	{
		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string gameModeID;
	}
	[Token(Token = "0x200061A")]
	public struct LevelPause
	{
		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string gameModeID;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string levelID;
	}
	[Token(Token = "0x200061B")]
	public struct LevelResume
	{
		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string gameModeID;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string levelID;
	}
	[Token(Token = "0x200061C")]
	public struct TutorialStart
	{
		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tutorialID;
	}
	[Token(Token = "0x200061D")]
	public struct TutorialStepComplete
	{
		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tutorialID;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string stepID;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int stepNumber;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int branchNumber;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string branchID;
	}
	[Token(Token = "0x200061E")]
	public struct TutorialBranchComplete
	{
		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tutorialID;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string branchID;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int branchNumber;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string nextBranchID;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int nextBranchNumber;
	}
	[Token(Token = "0x200061F")]
	public struct TutorialComplete
	{
		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tutorialID;
	}
	[Token(Token = "0x2000620")]
	public struct RhythmStreakBroken
	{
		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string levelID;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float currentBeat;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string reason;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int currentStreakCount;
	}
	[Token(Token = "0x2000621")]
	public struct Unlockable
	{
		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string id;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool seen;
	}
	[Token(Token = "0x2000622")]
	public struct CurrencyUpdated
	{
		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string currencyID;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int updateAmount;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int currentAmount;
	}
	[Token(Token = "0x2000623")]
	public struct ItemEquipped
	{
		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string itemID;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool fromPad;
	}
	[Token(Token = "0x2000624")]
	public struct ItemTransaction
	{
		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string shopID;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string itemID;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int cost;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool success;
	}
	[Token(Token = "0x2000625")]
	public struct InventoryChanged
	{
		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string leftBladeID;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string rightBladeID;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string bowID;
	}
	[Token(Token = "0x2000626")]
	public struct PadOpened
	{
	}
	[Token(Token = "0x2000627")]
	public struct PadClosed
	{
		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float timeSpentInPad;
	}
	[Token(Token = "0x2000628")]
	public struct PadPanelDisplayed
	{
		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string panelType;
	}
	[Token(Token = "0x2000629")]
	public struct PadPanelClosed
	{
		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string panelType;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string toPanelType;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeSpentOnScreen;
	}
	[Token(Token = "0x200062A")]
	public struct MissionCompleted
	{
		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string missionID;
	}
	[Token(Token = "0x200062B")]
	public struct MissionCollected
	{
		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string missionID;
	}
	[Token(Token = "0x200062C")]
	public struct PhysicalUIInteraction
	{
		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string screen;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string component;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string hand;
	}
	[Token(Token = "0x200062D")]
	public struct AchievementUnlocked
	{
		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string id;
	}
	[Token(Token = "0x200062E")]
	public class MultiplayerEvent
	{
		[Token(Token = "0x6002368")]
		[Address(RVA = "0xF1FC54", Offset = "0xF1FC54", VA = "0xF1FC54")]
		public MultiplayerEvent()
		{
		}
	}
	[Token(Token = "0x200062F")]
	public class MultiplayerSessionConnected : MultiplayerEvent
	{
		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool connectionSuccess;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float connectionTime;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool newSession;

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xF21AF4", Offset = "0xF21AF4", VA = "0xF21AF4")]
		public MultiplayerSessionConnected()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class MultiplayerSessionDisconnected : MultiplayerEvent
	{
		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxPlayerCount;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float sessionPlayTime;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string reason;

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xF21AFC", Offset = "0xF21AFC", VA = "0xF21AFC")]
		public MultiplayerSessionDisconnected()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class MultiplayerObjectGrabbed : MultiplayerEvent
	{
		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string objectName;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string hand;

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xF21504", Offset = "0xF21504", VA = "0xF21504")]
		public MultiplayerObjectGrabbed()
		{
		}
	}
	[Token(Token = "0x2000632")]
	public class MultiplayerObjectReleased : MultiplayerEvent
	{
		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string objectName;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string hand;

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xF2150C", Offset = "0xF2150C", VA = "0xF2150C")]
		public MultiplayerObjectReleased()
		{
		}
	}
	[Token(Token = "0x2000633")]
	public class MultiplayerGameStart : MultiplayerEvent
	{
		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xF1FC74", Offset = "0xF1FC74", VA = "0xF1FC74")]
		public MultiplayerGameStart()
		{
		}
	}
	[Token(Token = "0x2000634")]
	public class MultiplayerGamePlayerDisconnected : MultiplayerEvent
	{
		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string player;

		[Token(Token = "0x600236E")]
		[Address(RVA = "0xF1FC6C", Offset = "0xF1FC6C", VA = "0xF1FC6C")]
		public MultiplayerGamePlayerDisconnected()
		{
		}
	}
	[Token(Token = "0x2000635")]
	public class MultiplayerGameEnd : MultiplayerEvent
	{
		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xF1FC5C", Offset = "0xF1FC5C", VA = "0xF1FC5C")]
		public MultiplayerGameEnd()
		{
		}
	}
	[Token(Token = "0x2000636")]
	public class MultiplayerGameEndAppleHead : MultiplayerGameEnd
	{
		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string player01;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float score01;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int applesShot01;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string player02;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float score02;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int applesShot02;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string player03;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float score03;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int applesShot03;

		[Token(Token = "0x6002370")]
		[Address(RVA = "0xF1FC64", Offset = "0xF1FC64", VA = "0xF1FC64")]
		public MultiplayerGameEndAppleHead()
		{
		}
	}
	[Token(Token = "0x2000637")]
	public struct CustomizationChanged
	{
		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string customizationArea;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string customizationType;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string previousCustomization;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string newCustomization;
	}
}
namespace Achievements
{
	[Token(Token = "0x2000638")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F3A4", Offset = "0xB5F3A4")]
	public class AchievementBase : ScriptableObject
	{
		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_id;

		[Token(Token = "0x140000A0")]
		public static event Action OnAchievementUnlocked
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0xF973C8", Offset = "0xF973C8", VA = "0xF973C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86834", Offset = "0xB86834")]
			add
			{
			}
			[Token(Token = "0x6002372")]
			[Address(RVA = "0xF97484", Offset = "0xF97484", VA = "0xF97484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86844", Offset = "0xB86844")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A1")]
		public event Action OnThisAchievementUnlocked
		{
			[Token(Token = "0x6002373")]
			[Address(RVA = "0xF97540", Offset = "0xF97540", VA = "0xF97540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86854", Offset = "0xB86854")]
			add
			{
			}
			[Token(Token = "0x6002374")]
			[Address(RVA = "0xF975E0", Offset = "0xF975E0", VA = "0xF975E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86864", Offset = "0xB86864")]
			remove
			{
			}
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xF97680", Offset = "0xF97680", VA = "0xF97680", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xF97684", Offset = "0xF97684", VA = "0xF97684")]
		public bool IsUnlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xF97740", Offset = "0xF97740", VA = "0xF97740", Slot = "5")]
		public virtual void Unlock()
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xF97858", Offset = "0xF97858", VA = "0xF97858")]
		public AchievementBase()
		{
		}
	}
	[Token(Token = "0x2000639")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F404", Offset = "0xB5F404")]
	public class AchievementEvent : AchievementBase
	{
		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameRules> m_gameRules;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameEventMultiPropertyCondition m_gameEventConditions;

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xF97860", Offset = "0xF97860", VA = "0xF97860", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xF97920", Offset = "0xF97920", VA = "0xF97920", Slot = "5")]
		public override void Unlock()
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xF979D0", Offset = "0xF979D0", VA = "0xF979D0")]
		private void GameEventTriggered(GameEvent eventObject)
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xF97B60", Offset = "0xF97B60", VA = "0xF97B60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xF97C08", Offset = "0xF97C08", VA = "0xF97C08")]
		public AchievementEvent()
		{
		}
	}
	[Token(Token = "0x200063A")]
	public class AchievementHolder : MonoBehaviour
	{
		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AchievementBase[] m_achievements;

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xF97C8C", Offset = "0xF97C8C", VA = "0xF97C8C")]
		private void Start()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xF97C90", Offset = "0xF97C90", VA = "0xF97C90")]
		private void InitializeAllAchievements()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xF97D00", Offset = "0xF97D00", VA = "0xF97D00")]
		public AchievementHolder()
		{
		}
	}
	[Token(Token = "0x200063B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F464", Offset = "0xB5F464")]
	public class AchievementLevels : AchievementBase
	{
		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Level> m_levels;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_requireAllPassed;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_requireAllAttempted;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool m_requireMinimumGrade;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_minimumGradeIndex;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_requirementCount;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_levelCount;

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xF97D08", Offset = "0xF97D08", VA = "0xF97D08", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0xF97DFC", Offset = "0xF97DFC", VA = "0xF97DFC")]
		private void GameOver(object data)
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xF97EF4", Offset = "0xF97EF4", VA = "0xF97EF4")]
		private void SetUnlockValues(GameEventGameOver gameOverEvent)
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0xF98164", Offset = "0xF98164", VA = "0xF98164")]
		private void UnlockIfConditionsMet()
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xF98180", Offset = "0xF98180", VA = "0xF98180")]
		public AchievementLevels()
		{
		}
	}
	[Token(Token = "0x200063C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F4C4", Offset = "0xB5F4C4")]
	public class AchievementSetlists : AchievementBase
	{
		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<LevelSetlist> m_setlists;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_requireAllPassed;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool m_requireAllAttempted;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool m_requireMinimumGrade;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_minimumGradeIndex;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_setlistCount;

		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_passedAmount;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_attemptedAmount;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_lowestGradeIndex;

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xF98188", Offset = "0xF98188", VA = "0xF98188", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xF9827C", Offset = "0xF9827C", VA = "0xF9827C", Slot = "5")]
		public override void Unlock()
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xF98340", Offset = "0xF98340", VA = "0xF98340")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xF983FC", Offset = "0xF983FC", VA = "0xF983FC")]
		private void SetlistUpdated(object data)
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xF984DC", Offset = "0xF984DC", VA = "0xF984DC")]
		private void SetUnlockValues()
		{
		}

		[Token(Token = "0x600238B")]
		[Address(RVA = "0xF98530", Offset = "0xF98530", VA = "0xF98530")]
		private void UnlockIfConditionsMet()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xF98584", Offset = "0xF98584", VA = "0xF98584")]
		private void SetPassedAmount()
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0xF98634", Offset = "0xF98634", VA = "0xF98634")]
		private void SetAttemptedAmount()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xF986E4", Offset = "0xF986E4", VA = "0xF986E4")]
		private void SetLowestGradeIndex()
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xF987B0", Offset = "0xF987B0", VA = "0xF987B0")]
		public AchievementSetlists()
		{
		}
	}
	[Token(Token = "0x200063D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F524", Offset = "0xB5F524")]
	public class AchievementStat : AchievementBase
	{
		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73F2C", Offset = "0xB73F2C")]
		public string m_statID;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StatConfig m_statConfig;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stat m_stat;

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xF98834", Offset = "0xF98834", VA = "0xF98834", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0xF988F0", Offset = "0xF988F0", VA = "0xF988F0")]
		private void OnStatChanged(Stat stat)
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0xF989D8", Offset = "0xF989D8", VA = "0xF989D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xF98A78", Offset = "0xF98A78", VA = "0xF98A78")]
		public AchievementStat()
		{
		}
	}
	[Token(Token = "0x200063E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB5F584", Offset = "0xB5F584")]
	public class AchievementUnlockables : AchievementBase
	{
		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Game.Unlockable> m_unlockables;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_unlockableCount;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_unlockedAmount;

		[Token(Token = "0x6002394")]
		[Address(RVA = "0xF98A80", Offset = "0xF98A80", VA = "0xF98A80", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0xF98C98", Offset = "0xF98C98", VA = "0xF98C98", Slot = "5")]
		public override void Unlock()
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0xF98D90", Offset = "0xF98D90", VA = "0xF98D90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0xF98E80", Offset = "0xF98E80", VA = "0xF98E80")]
		private void OnUnlocked()
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0xF98BC8", Offset = "0xF98BC8", VA = "0xF98BC8")]
		private void SetUnlockedAmount()
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xF98C7C", Offset = "0xF98C7C", VA = "0xF98C7C")]
		private void UnlockIfConditionMet()
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0xF98EC4", Offset = "0xF98EC4", VA = "0xF98EC4")]
		public AchievementUnlockables()
		{
		}
	}
}
namespace Fusion
{
	[Token(Token = "0x200063F")]
	internal static class FusionRuntimeCheck
	{
		[Token(Token = "0x600239B")]
		[Address(RVA = "0x14C8FC8", Offset = "0x14C8FC8", VA = "0x14C8FC8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB86874", Offset = "0xB86874")]
		private static void RuntimeCheck()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000640")]
	public class FusionUnityLogger : ILogger
	{
		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StringBuilder _builder;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseGlobalPrefix;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UseColorTags;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string GlobalPrefixColor;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32 MinRandomColor;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color32 MaxRandomColor;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color ServerColor;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73F64", Offset = "0xB73F64")]
		private Func<object, int> <GetColor>k__BackingField;

		[Token(Token = "0x17000516")]
		public Func<object, int> GetColor
		{
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x1256C50", Offset = "0x1256C50", VA = "0x1256C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86888", Offset = "0xB86888")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x1256C58", Offset = "0x1256C58", VA = "0x1256C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86898", Offset = "0xB86898")]
			set
			{
			}
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x1256C60", Offset = "0x1256C60", VA = "0x1256C60")]
		public FusionUnityLogger()
		{
		}

		[Token(Token = "0x600239F")]
		public void Log<T>(LogType logType, string prefix, ref T context, string message) where T : ILogBuilder
		{
		}

		[Token(Token = "0x60023A0")]
		public void LogException<T>(string prefix, ref T context, Exception ex) where T : ILogBuilder
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x1256EA0", Offset = "0x1256EA0", VA = "0x1256EA0")]
		private int GetRandomColor(int seed)
		{
			return default(int);
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x1256EE8", Offset = "0x1256EE8", VA = "0x1256EE8")]
		private static int GetRandomColor(int seed, Color32 min, Color32 max, Color32 svr)
		{
			return default(int);
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x1256FEC", Offset = "0x1256FEC", VA = "0x1256FEC")]
		private static int Color32ToRGB24(Color32 c)
		{
			return default(int);
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x1256E10", Offset = "0x1256E10", VA = "0x1256E10")]
		private static string Color32ToRGBString(Color32 c)
		{
			return null;
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x1257000", Offset = "0x1257000", VA = "0x1257000")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB868A8", Offset = "0xB868A8")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x12570BC", Offset = "0x12570BC", VA = "0x12570BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB868BC", Offset = "0xB868BC")]
		private int <.ctor>b__12_0(object obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000641")]
	public static class NetworkRunnerExtensions
	{
		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x10E56B8", Offset = "0x10E56B8", VA = "0x10E56B8")]
		public static bool SetActiveScene(this NetworkRunner runner, string sceneNameOrPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x10E571C", Offset = "0x10E571C", VA = "0x10E571C")]
		private static bool TryGetSceneBuildIndex(string nameOrPath, out int buildIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x10E5854", Offset = "0x10E5854", VA = "0x10E5854")]
		private static void GetFileNameWithoutExtensionPosition(string nameOrPath, out int index, out int length)
		{
		}
	}
	[Token(Token = "0x2000642")]
	public abstract class NetworkSceneManagerBase : Behaviour, INetworkSceneManager
	{
		[Token(Token = "0x2000643")]
		protected delegate void FinishedLoadingDelegate(IEnumerable<NetworkObject> sceneObjects);

		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F5F4", Offset = "0xB5F5F4")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finishCalled;

			[Token(Token = "0x4002546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<Guid, NetworkObject> sceneObjects;

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0xFB354C", Offset = "0xFB354C", VA = "0xFB354C")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60023C4")]
			[Address(RVA = "0xFB3554", Offset = "0xFB3554", VA = "0xFB3554")]
			internal void <SwitchSceneWrapper>b__0(IEnumerable<NetworkObject> objects)
			{
			}
		}

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F604", Offset = "0xB5F604")]
		private sealed class <SwitchSceneWrapper>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkSceneManagerBase <>4__this;

			[Token(Token = "0x400254A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneRef prevScene;

			[Token(Token = "0x400254B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public SceneRef newScene;

			[Token(Token = "0x400254C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass26_0 <>8__1;

			[Token(Token = "0x400254D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Exception <error>5__2;

			[Token(Token = "0x400254E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private IEnumerator <coro>5__3;

			[Token(Token = "0x400254F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <next>5__4;

			[Token(Token = "0x17000518")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023C9")]
				[Address(RVA = "0xFB3EFC", Offset = "0xFB3EFC", VA = "0xFB3EFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000519")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023CB")]
				[Address(RVA = "0xFB3F44", Offset = "0xFB3F44", VA = "0xFB3F44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0xFB3870", Offset = "0xFB3870", VA = "0xFB3870")]
			[DebuggerHidden]
			public <SwitchSceneWrapper>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60023C6")]
			[Address(RVA = "0xFB389C", Offset = "0xFB389C", VA = "0xFB389C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0xFB3964", Offset = "0xFB3964", VA = "0xFB3964", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0xFB38B8", Offset = "0xFB38B8", VA = "0xFB38B8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0xFB3F04", Offset = "0xFB3F04", VA = "0xFB3F04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WeakReference<NetworkSceneManagerBase> s_currentlyLoading;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[InlineHelp]
		[ToggleLeft]
		[MultiPropertyDrawersFix]
		public bool ShowHierarchyWindowOverlay;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator _runningCoroutine;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _currentSceneOutdated;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private SceneRef _currentScene;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB73FBC", Offset = "0xB73FBC")]
		private NetworkRunner <Runner>k__BackingField;

		[Token(Token = "0x17000517")]
		public NetworkRunner Runner
		{
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0x10E58C8", Offset = "0x10E58C8", VA = "0x10E58C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB868DC", Offset = "0xB868DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x10E58D0", Offset = "0x10E58D0", VA = "0x10E58D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB868EC", Offset = "0xB868EC")]
			private set
			{
			}
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x10E58D8", Offset = "0x10E58D8", VA = "0x10E58D8", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x10E58DC", Offset = "0x10E58DC", VA = "0x10E58DC", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x10E58E0", Offset = "0x10E58E0", VA = "0x10E58E0", Slot = "9")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x10E5B58", Offset = "0x10E5B58", VA = "0x10E5B58")]
		public static bool IsScenePathOrNameEqual(Scene scene, string nameOrPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x10E5BB8", Offset = "0x10E5BB8", VA = "0x10E5BB8")]
		public static bool TryGetScenePathFromBuildSettings(SceneRef sceneRef, out string path)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x10E5C70", Offset = "0x10E5C70", VA = "0x10E5C70")]
		public bool IsScenePathOrNameEqual(Scene scene, SceneRef sceneRef)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x10E5D20", Offset = "0x10E5D20", VA = "0x10E5D20")]
		public List<NetworkObject> FindNetworkObjects(Scene scene, bool disable = true, bool addVisibilityNodes = false)
		{
			return null;
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x10E617C", Offset = "0x10E617C", VA = "0x10E617C", Slot = "4")]
		private void Fusion.INetworkSceneManager.Initialize(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x10E6188", Offset = "0x10E6188", VA = "0x10E6188", Slot = "5")]
		private void Fusion.INetworkSceneManager.Shutdown(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x10E6194", Offset = "0x10E6194", VA = "0x10E6194", Slot = "6")]
		private bool Fusion.INetworkSceneManager.IsReady(NetworkRunner runner)
		{
			return default(bool);
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x10E61F4", Offset = "0x10E61F4", VA = "0x10E61F4", Slot = "10")]
		protected virtual void Initialize(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x10E61FC", Offset = "0x10E61FC", VA = "0x10E61FC", Slot = "11")]
		protected virtual void Shutdown(NetworkRunner runner)
		{
		}

		[Token(Token = "0x60023B8")]
		protected abstract IEnumerator SwitchScene(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished);

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x10E6508", Offset = "0x10E6508", VA = "0x10E6508")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB868FC", Offset = "0xB868FC")]
		protected void LogTrace(string msg)
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x10E650C", Offset = "0x10E650C", VA = "0x10E650C")]
		protected void LogError(string msg)
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x10E63E4", Offset = "0x10E63E4", VA = "0x10E63E4")]
		protected void LogWarn(string msg)
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x10E5ACC", Offset = "0x10E5ACC", VA = "0x10E5ACC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86934", Offset = "0xB86934")]
		private IEnumerator SwitchSceneWrapper(SceneRef prevScene, SceneRef newScene)
		{
			return null;
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x10E6630", Offset = "0x10E6630", VA = "0x10E6630")]
		protected NetworkSceneManagerBase()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public class NetworkSceneManagerDefault : NetworkSceneManagerBase
	{
		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F614", Offset = "0xB5F614")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string scenePath;

			[Token(Token = "0x4002552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool alreadyHandled;

			[Token(Token = "0x4002553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Scene> loaded;

			[Token(Token = "0x4002554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityAction<Scene, LoadSceneMode> sceneLoadedHandler;

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0xFB42F0", Offset = "0xFB42F0", VA = "0xFB42F0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0xFB42F8", Offset = "0xFB42F8", VA = "0xFB42F8")]
			internal void <LoadSceneAsync>b__0(Scene scene, LoadSceneMode _)
			{
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0xFB43BC", Offset = "0xFB43BC", VA = "0xFB43BC")]
			internal void <LoadSceneAsync>b__1(AsyncOperation _)
			{
			}
		}

		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F624", Offset = "0xB5F624")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002555")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene loadedScene;

			[Token(Token = "0x60023D5")]
			[Address(RVA = "0xFB4424", Offset = "0xFB4424", VA = "0xFB4424")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xFB442C", Offset = "0xFB442C", VA = "0xFB442C")]
			internal void <SwitchSceneMultiplePeer>b__0(Scene scene)
			{
			}
		}

		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F634", Offset = "0xB5F634")]
		private sealed class <SwitchSceneMultiplePeer>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneRef prevScene;

			[Token(Token = "0x4002559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkSceneManagerDefault <>4__this;

			[Token(Token = "0x400255A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneRef newScene;

			[Token(Token = "0x400255B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass4_0 <>8__1;

			[Token(Token = "0x400255C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FinishedLoadingDelegate finished;

			[Token(Token = "0x400255D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private LoadSceneParameters <loadSceneParameters>5__2;

			[Token(Token = "0x400255E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Scene <sceneToUnload>5__3;

			[Token(Token = "0x400255F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private GameObject[] <tempSceneSpawnedPrefabs>5__4;

			[Token(Token = "0x4002560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private List<NetworkObject> <sceneObjects>5__5;

			[Token(Token = "0x1700051A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023DA")]
				[Address(RVA = "0xFB4AE8", Offset = "0xFB4AE8", VA = "0xFB4AE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023DC")]
				[Address(RVA = "0xFB4B30", Offset = "0xFB4B30", VA = "0xFB4B30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D7")]
			[Address(RVA = "0xFB4444", Offset = "0xFB4444", VA = "0xFB4444")]
			[DebuggerHidden]
			public <SwitchSceneMultiplePeer>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60023D8")]
			[Address(RVA = "0xFB4470", Offset = "0xFB4470", VA = "0xFB4470", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0xFB4474", Offset = "0xFB4474", VA = "0xFB4474", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0xFB4AF0", Offset = "0xFB4AF0", VA = "0xFB4AF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F644", Offset = "0xB5F644")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Scene loadedScene;

			[Token(Token = "0x60023DD")]
			[Address(RVA = "0xFB4434", Offset = "0xFB4434", VA = "0xFB4434")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0xFB443C", Offset = "0xFB443C", VA = "0xFB443C")]
			internal void <SwitchSceneSinglePeer>b__0(Scene scene)
			{
			}
		}

		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F654", Offset = "0xB5F654")]
		private sealed class <SwitchSceneSinglePeer>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneRef prevScene;

			[Token(Token = "0x4002565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkSceneManagerDefault <>4__this;

			[Token(Token = "0x4002566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneRef newScene;

			[Token(Token = "0x4002567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x4002568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public FinishedLoadingDelegate finished;

			[Token(Token = "0x4002569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x1700051C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023E2")]
				[Address(RVA = "0xFB4E6C", Offset = "0xFB4E6C", VA = "0xFB4E6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700051D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023E4")]
				[Address(RVA = "0xFB4EB4", Offset = "0xFB4EB4", VA = "0xFB4EB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0xFB4B38", Offset = "0xFB4B38", VA = "0xFB4B38")]
			[DebuggerHidden]
			public <SwitchSceneSinglePeer>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xFB4B64", Offset = "0xFB4B64", VA = "0xFB4B64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xFB4B68", Offset = "0xFB4B68", VA = "0xFB4B68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023E3")]
			[Address(RVA = "0xFB4E74", Offset = "0xFB4E74", VA = "0xFB4E74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB73FCC", Offset = "0xB73FCC")]
		public int PostLoadDelayFrames;

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x10E66D0", Offset = "0x10E66D0", VA = "0x10E66D0", Slot = "13")]
		protected virtual YieldInstruction LoadSceneAsync(SceneRef sceneRef, LoadSceneParameters parameters, Action<Scene> loaded)
		{
			return null;
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x10E693C", Offset = "0x10E693C", VA = "0x10E693C", Slot = "14")]
		protected virtual YieldInstruction UnloadSceneAsync(Scene scene)
		{
			return null;
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x10E69A0", Offset = "0x10E69A0", VA = "0x10E69A0", Slot = "12")]
		protected override IEnumerator SwitchScene(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished)
		{
			return null;
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x10E69F0", Offset = "0x10E69F0", VA = "0x10E69F0", Slot = "15")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB869E4", Offset = "0xB869E4")]
		protected virtual IEnumerator SwitchSceneMultiplePeer(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished)
		{
			return null;
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x10E6A9C", Offset = "0x10E6A9C", VA = "0x10E6A9C", Slot = "16")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86A44", Offset = "0xB86A44")]
		protected virtual IEnumerator SwitchSceneSinglePeer(SceneRef prevScene, SceneRef newScene, FinishedLoadingDelegate finished)
		{
			return null;
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x10E6B48", Offset = "0x10E6B48", VA = "0x10E6B48")]
		public NetworkSceneManagerDefault()
		{
		}
	}
}
namespace Fusion.Editor
{
	[Token(Token = "0x200064C")]
	public static class BoundsTools
	{
		[Token(Token = "0x200064D")]
		public enum BoundsType
		{
			[Token(Token = "0x4002572")]
			Both,
			[Token(Token = "0x4002573")]
			MeshRenderer,
			[Token(Token = "0x4002574")]
			Collider,
			[Token(Token = "0x4002575")]
			Manual
		}

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<MeshFilter> meshFilters;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<Renderer> meshRenderers;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<Collider> colliders;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<Collider> validColliders;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<SpriteRenderer> spriteRenderers;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly List<Collider2D> colliders2D;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly List<Collider2D> validColliders2D;

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x145C05C", Offset = "0x145C05C", VA = "0x145C05C")]
		public static Bounds CollectMyBounds(this GameObject go, BoundsType factorIn, out int numOfBoundsFound, bool includeChildren = true, bool includeInactive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x145D010", Offset = "0x145D010", VA = "0x145D010")]
		public static Bounds CollectMyBounds(GameObject go, BoundsType factorIn, bool includeChildren = true)
		{
			return default(Bounds);
		}
	}
}
namespace Fusion.StatsInternal
{
	[Token(Token = "0x200064E")]
	public interface IFusionStatsView
	{
		[Token(Token = "0x1700051E")]
		bool isActiveAndEnabled
		{
			[Token(Token = "0x60023EB")]
			get;
		}

		[Token(Token = "0x1700051F")]
		Transform transform
		{
			[Token(Token = "0x60023EC")]
			get;
		}

		[Token(Token = "0x60023E8")]
		void Initialize();

		[Token(Token = "0x60023E9")]
		void CalculateLayout();

		[Token(Token = "0x60023EA")]
		void Refresh();
	}
	[Token(Token = "0x200064F")]
	public static class FusionStatsUtilities
	{
		[Token(Token = "0x4002576")]
		public const int PAD = 10;

		[Token(Token = "0x4002577")]
		public const int MARGIN = 6;

		[Token(Token = "0x4002578")]
		public const int FONT_SIZE = 12;

		[Token(Token = "0x4002579")]
		public const int FONT_SIZE_MIN = 4;

		[Token(Token = "0x400257A")]
		public const int FONT_SIZE_MAX = 200;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> _cachedGraphVisualizationNames;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Font _font;

		[Token(Token = "0x400257D")]
		private const int METER_TEXTURE_WIDTH = 512;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Texture2D _meterTexture;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Sprite _meterSprite;

		[Token(Token = "0x4002580")]
		private const int R = 64;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Texture2D _circle32Texture;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Sprite _circle32Sprite;

		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Color DARK_GREEN;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Color DARK_BLUE;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Color DARK_RED;

		[Token(Token = "0x4002586")]
		public const float BTTN_LBL_NORM_HGHT = 0.175f;

		[Token(Token = "0x4002587")]
		private const int BTTN_FONT_SIZE_MAX = 100;

		[Token(Token = "0x4002588")]
		private const float BTTN_ALPHA = 0.925f;

		[Token(Token = "0x4002589")]
		private const float GUIDE_MARGIN = 0.01f;

		[Token(Token = "0x400258A")]
		private const float GUIDE_MARGIN_HALF = 0.005f;

		[Token(Token = "0x17000520")]
		public static List<string> CachedTelemetryNames
		{
			[Token(Token = "0x60023ED")]
			[Address(RVA = "0x1254644", Offset = "0x1254644", VA = "0x1254644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000521")]
		public static Font Font
		{
			[Token(Token = "0x60023EE")]
			[Address(RVA = "0x1254AD0", Offset = "0x1254AD0", VA = "0x1254AD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000522")]
		private static Texture2D MeterTexture
		{
			[Token(Token = "0x60023EF")]
			[Address(RVA = "0x1254C04", Offset = "0x1254C04", VA = "0x1254C04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000523")]
		public static Sprite MeterSprite
		{
			[Token(Token = "0x60023F0")]
			[Address(RVA = "0x1254E00", Offset = "0x1254E00", VA = "0x1254E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000524")]
		private static Texture2D Circle32Texture
		{
			[Token(Token = "0x60023F1")]
			[Address(RVA = "0x1254F4C", Offset = "0x1254F4C", VA = "0x1254F4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000525")]
		public static Sprite CircleSprite
		{
			[Token(Token = "0x60023F2")]
			[Address(RVA = "0x1255210", Offset = "0x1255210", VA = "0x1255210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x12553A8", Offset = "0x12553A8", VA = "0x12553A8")]
		public static bool TryFindActiveRunner(FusionStats fusionStats, out NetworkRunner runner, [Optional] SimulationModes? mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x1253368", Offset = "0x1253368", VA = "0x1253368")]
		public static RectTransform CreateRectTransform(this Transform parent, string name, bool expand = false)
		{
			return null;
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x12555BC", Offset = "0x12555BC", VA = "0x12555BC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB86B64", Offset = "0xB86B64")]
		internal static RectTransform CreateRectTransform(string name, Transform parent, bool expand = false)
		{
			return null;
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x12556EC", Offset = "0x12556EC", VA = "0x12556EC")]
		public static Dropdown CreateDropdown(this RectTransform rt, float padding, Color fontColor)
		{
			return null;
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x1253B74", Offset = "0x1253B74", VA = "0x1253B74")]
		public static Text AddText(this RectTransform rt, string label, TextAnchor anchor, Color FontColor)
		{
			return null;
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x1255D60", Offset = "0x1255D60", VA = "0x1255D60")]
		internal static void MakeButton(this RectTransform parent, ref Button button, string iconText, string labelText, out Text icon, out Text text, UnityAction action)
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x12562F0", Offset = "0x12562F0", VA = "0x12562F0")]
		public static RectTransform AddHorizontalLayoutGroup(this RectTransform rt, float spacing, [Optional] int? rgtPad, [Optional] int? lftPad, [Optional] int? topPad, [Optional] int? botPad)
		{
			return null;
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x12564D0", Offset = "0x12564D0", VA = "0x12564D0")]
		public static RectTransform AddVerticalLayoutGroup(this RectTransform rt, float spacing, [Optional] int? rgtPad, [Optional] int? lftPad, [Optional] int? topPad, [Optional] int? botPad)
		{
			return null;
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x1256578", Offset = "0x1256578", VA = "0x1256578")]
		public static GridLayoutGroup AddGridlLayoutGroup(this RectTransform rt, float spacing, [Optional] int? rgtPad, [Optional] int? lftPad, [Optional] int? topPad, [Optional] int? botPad)
		{
			return null;
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x1256604", Offset = "0x1256604", VA = "0x1256604")]
		public static RectTransform AddImage(this RectTransform rt, Color color)
		{
			return null;
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x1253A20", Offset = "0x1253A20", VA = "0x1253A20")]
		public static RectTransform AddCircleSprite(this RectTransform rt, Color color)
		{
			return null;
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x1253F70", Offset = "0x1253F70", VA = "0x1253F70")]
		public static RectTransform AddCircleSprite(this RectTransform rt, Color color, out Image image)
		{
			return null;
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x12538D0", Offset = "0x12538D0", VA = "0x12538D0")]
		public static RectTransform ExpandAnchor(this RectTransform rt, [Optional] float? padding)
		{
			return null;
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x1253498", Offset = "0x1253498", VA = "0x1253498")]
		public static RectTransform ExpandTopAnchor(this RectTransform rt, [Optional] float? padding)
		{
			return null;
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x12566CC", Offset = "0x12566CC", VA = "0x12566CC")]
		public static RectTransform ExpandMiddleLeft(this RectTransform rt)
		{
			return null;
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x1255D30", Offset = "0x1255D30", VA = "0x1255D30")]
		public static RectTransform SetSizeDelta(this RectTransform rt, float offsetX, float offsetY)
		{
			return null;
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x1253B1C", Offset = "0x1253B1C", VA = "0x1253B1C")]
		public static RectTransform SetOffsets(this RectTransform rt, float minX, float maxX, float minY, float maxY)
		{
			return null;
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x1255D00", Offset = "0x1255D00", VA = "0x1255D00")]
		public static RectTransform SetPivot(this RectTransform rt, float pivotX, float pivotY)
		{
			return null;
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x1253AC4", Offset = "0x1253AC4", VA = "0x1253AC4")]
		public static RectTransform SetAnchors(this RectTransform rt, float minX, float maxX, float minY, float maxY)
		{
			return null;
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x1256738", Offset = "0x1256738", VA = "0x1256738")]
		internal static RectTransform MakeGuides(this RectTransform parent)
		{
			return null;
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000650")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000526")]
		public bool Highlight
		{
			[Token(Token = "0x6002408")]
			[Address(RVA = "0x11A6904", Offset = "0x11A6904", VA = "0x11A6904")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002409")]
			[Address(RVA = "0x11A690C", Offset = "0x11A690C", VA = "0x11A690C")]
			set
			{
			}
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x11A6918", Offset = "0x11A6918", VA = "0x11A6918")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x11A6AE0", Offset = "0x11A6AE0", VA = "0x11A6AE0", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x11A6B08", Offset = "0x11A6B08", VA = "0x11A6B08", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x11A6B30", Offset = "0x11A6B30", VA = "0x11A6B30")]
		private void Awake()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x11A69E0", Offset = "0x11A69E0", VA = "0x11A69E0")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0x11A6E04", Offset = "0x11A6E04", VA = "0x11A6E04")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000651")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000527")]
		public bool InRange
		{
			[Token(Token = "0x6002411")]
			[Address(RVA = "0x10EFAD4", Offset = "0x10EFAD4", VA = "0x10EFAD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002412")]
			[Address(RVA = "0x10EFADC", Offset = "0x10EFADC", VA = "0x10EFADC")]
			set
			{
			}
		}

		[Token(Token = "0x17000528")]
		public bool Targeted
		{
			[Token(Token = "0x6002413")]
			[Address(RVA = "0x10EFC58", Offset = "0x10EFC58", VA = "0x10EFC58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002414")]
			[Address(RVA = "0x10EFC60", Offset = "0x10EFC60", VA = "0x10EFC60")]
			set
			{
			}
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x10EFC6C", Offset = "0x10EFC6C", VA = "0x10EFC6C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x10EFAE8", Offset = "0x10EFAE8", VA = "0x10EFAE8")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x10EFDD8", Offset = "0x10EFDD8", VA = "0x10EFDD8")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000652")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5F684", Offset = "0xB5F684")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000529")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6002418")]
			[Address(RVA = "0x10EFDE0", Offset = "0x10EFDE0", VA = "0x10EFDE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002419")]
			[Address(RVA = "0x10EFDE8", Offset = "0x10EFDE8", VA = "0x10EFDE8")]
			set
			{
			}
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x10EFE04", Offset = "0x10EFE04", VA = "0x10EFE04", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x10F0044", Offset = "0x10F0044", VA = "0x10F0044", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x10F095C", Offset = "0x10F095C", VA = "0x10F095C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x10F0DF0", Offset = "0x10F0DF0", VA = "0x10F0DF0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x10F10B0", Offset = "0x10F10B0", VA = "0x10F10B0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x10F02B8", Offset = "0x10F02B8", VA = "0x10F02B8")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x10F11A0", Offset = "0x10F11A0", VA = "0x10F11A0")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x10F15FC", Offset = "0x10F15FC", VA = "0x10F15FC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x10F1614", Offset = "0x10F1614", VA = "0x10F1614", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x10F161C", Offset = "0x10F161C", VA = "0x10F161C")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000653")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x1C4845C", Offset = "0x1C4845C", VA = "0x1C4845C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1C48514", Offset = "0x1C48514", VA = "0x1C48514")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x1C485CC", Offset = "0x1C485CC", VA = "0x1C485CC")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000654")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000655")]
		public enum CrosshairState
		{
			[Token(Token = "0x40025AD")]
			Disabled,
			[Token(Token = "0x40025AE")]
			Enabled,
			[Token(Token = "0x40025AF")]
			Targeted
		}

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x1C4AE64", Offset = "0x1C4AE64", VA = "0x1C4AE64")]
		private void Start()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x1C4AED0", Offset = "0x1C4AED0", VA = "0x1C4AED0")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x1C4AF6C", Offset = "0x1C4AF6C", VA = "0x1C4AF6C")]
		private void Update()
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x1C4AFB4", Offset = "0x1C4AFB4", VA = "0x1C4AFB4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000656")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600242B")]
		[Address(RVA = "0xF4EBC4", Offset = "0xF4EBC4", VA = "0xF4EBC4")]
		private void Start()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0xF4ECB0", Offset = "0xF4ECB0", VA = "0xF4ECB0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xF4ECBC", Offset = "0xF4ECBC", VA = "0xF4ECBC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xF4ECC8", Offset = "0xF4ECC8", VA = "0xF4ECC8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000657")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x145A9BC", Offset = "0x145A9BC", VA = "0x145A9BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x145AA10", Offset = "0x145AA10", VA = "0x145AA10")]
		private void Update()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x145AD7C", Offset = "0x145AD7C", VA = "0x145AD7C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x145AE80", Offset = "0x145AE80", VA = "0x145AE80")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x145AA14", Offset = "0x145AA14", VA = "0x145AA14")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x145AF84", Offset = "0x145AF84", VA = "0x145AF84")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000658")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000659")]
		public enum ContactTest
		{
			[Token(Token = "0x40025C2")]
			PerpenTest,
			[Token(Token = "0x40025C3")]
			BackwardsPress
		}

		[Token(Token = "0x40025B3")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40025B4")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74134", Offset = "0xB74134")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700052A")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6002435")]
			[Address(RVA = "0x1193A68", Offset = "0x1193A68", VA = "0x1193A68", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700052B")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6002436")]
			[Address(RVA = "0x1193A70", Offset = "0x1193A70", VA = "0x1193A70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700052C")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6002437")]
			[Address(RVA = "0x1193A7C", Offset = "0x1193A7C", VA = "0x1193A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86C84", Offset = "0xB86C84")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6002438")]
			[Address(RVA = "0x1193A84", Offset = "0x1193A84", VA = "0x1193A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86C94", Offset = "0xB86C94")]
			private set
			{
			}
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x1193A8C", Offset = "0x1193A8C", VA = "0x1193A8C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1193BA0", Offset = "0x1193BA0", VA = "0x1193BA0")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x1193DB8", Offset = "0x1193DB8", VA = "0x1193DB8", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x119436C", Offset = "0x119436C", VA = "0x119436C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1194418", Offset = "0x1194418", VA = "0x1194418")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1194284", Offset = "0x1194284", VA = "0x1194284")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1194520", Offset = "0x1194520", VA = "0x1194520")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x11945A4", Offset = "0x11945A4", VA = "0x11945A4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x1194630", Offset = "0x1194630", VA = "0x1194630")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200065A")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74154", Offset = "0xB74154")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74164", Offset = "0xB74164")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700052D")]
		public Collider Collider
		{
			[Token(Token = "0x6002442")]
			[Address(RVA = "0x119487C", Offset = "0x119487C", VA = "0x119487C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86CA4", Offset = "0xB86CA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002443")]
			[Address(RVA = "0x1194884", Offset = "0x1194884", VA = "0x1194884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86CB4", Offset = "0xB86CB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700052E")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6002444")]
			[Address(RVA = "0x119488C", Offset = "0x119488C", VA = "0x119488C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86CC4", Offset = "0xB86CC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002445")]
			[Address(RVA = "0x1194894", Offset = "0x1194894", VA = "0x1194894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86CD4", Offset = "0xB86CD4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700052F")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6002446")]
			[Address(RVA = "0x119489C", Offset = "0x119489C", VA = "0x119489C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x11948EC", Offset = "0x11948EC", VA = "0x11948EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1194980", Offset = "0x1194980", VA = "0x1194980")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200065B")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000530")]
		Collider Collider
		{
			[Token(Token = "0x6002449")]
			get;
		}

		[Token(Token = "0x17000531")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600244A")]
			get;
		}

		[Token(Token = "0x17000532")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600244B")]
			get;
		}
	}
	[Token(Token = "0x200065C")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x1193D00", Offset = "0x1193D00", VA = "0x1193D00")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200065D")]
	public enum InteractionType
	{
		[Token(Token = "0x40025CC")]
		Enter,
		[Token(Token = "0x40025CD")]
		Stay,
		[Token(Token = "0x40025CE")]
		Exit
	}
	[Token(Token = "0x200065E")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200065F")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40025E0")]
			Mesh,
			[Token(Token = "0x40025E1")]
			Skeleton,
			[Token(Token = "0x40025E2")]
			Both
		}

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F6E4", Offset = "0xB5F6E4")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700053E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600246E")]
				[Address(RVA = "0xFD3B00", Offset = "0xFD3B00", VA = "0xFD3B00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002470")]
				[Address(RVA = "0xFD3B48", Offset = "0xFD3B48", VA = "0xFD3B48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600246B")]
			[Address(RVA = "0xFD386C", Offset = "0xFD386C", VA = "0xFD386C")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600246C")]
			[Address(RVA = "0xFD3898", Offset = "0xFD3898", VA = "0xFD3898", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600246D")]
			[Address(RVA = "0xFD389C", Offset = "0xFD389C", VA = "0xFD389C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600246F")]
			[Address(RVA = "0xFD3B08", Offset = "0xFD3B08", VA = "0xFD3B08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025CF")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74194", Offset = "0xB74194")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000533")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600244D")]
			[Address(RVA = "0x1C57910", Offset = "0x1C57910", VA = "0x1C57910")]
			get
			{
				return null;
			}
			[Token(Token = "0x600244E")]
			[Address(RVA = "0x1C57948", Offset = "0x1C57948", VA = "0x1C57948")]
			private set
			{
			}
		}

		[Token(Token = "0x17000534")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600244F")]
			[Address(RVA = "0x1C579B8", Offset = "0x1C579B8", VA = "0x1C579B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002450")]
			[Address(RVA = "0x1C579F0", Offset = "0x1C579F0", VA = "0x1C579F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000535")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6002451")]
			[Address(RVA = "0x1C57A60", Offset = "0x1C57A60", VA = "0x1C57A60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002452")]
			[Address(RVA = "0x1C57A98", Offset = "0x1C57A98", VA = "0x1C57A98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000536")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6002453")]
			[Address(RVA = "0x1C57B08", Offset = "0x1C57B08", VA = "0x1C57B08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002454")]
			[Address(RVA = "0x1C57B40", Offset = "0x1C57B40", VA = "0x1C57B40")]
			private set
			{
			}
		}

		[Token(Token = "0x17000537")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6002455")]
			[Address(RVA = "0x1C57BB0", Offset = "0x1C57BB0", VA = "0x1C57BB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002456")]
			[Address(RVA = "0x1C57BE8", Offset = "0x1C57BE8", VA = "0x1C57BE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000538")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6002457")]
			[Address(RVA = "0x1C57C58", Offset = "0x1C57C58", VA = "0x1C57C58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002458")]
			[Address(RVA = "0x1C57C8C", Offset = "0x1C57C8C", VA = "0x1C57C8C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000539")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6002459")]
			[Address(RVA = "0x1C57CF8", Offset = "0x1C57CF8", VA = "0x1C57CF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600245A")]
			[Address(RVA = "0x1C57D2C", Offset = "0x1C57D2C", VA = "0x1C57D2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700053A")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600245B")]
			[Address(RVA = "0x1C57D98", Offset = "0x1C57D98", VA = "0x1C57D98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600245C")]
			[Address(RVA = "0x1C57DCC", Offset = "0x1C57DCC", VA = "0x1C57DCC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700053B")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600245D")]
			[Address(RVA = "0x1C57E38", Offset = "0x1C57E38", VA = "0x1C57E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600245E")]
			[Address(RVA = "0x1C57E6C", Offset = "0x1C57E6C", VA = "0x1C57E6C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700053C")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600245F")]
			[Address(RVA = "0x1C57ED8", Offset = "0x1C57ED8", VA = "0x1C57ED8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002460")]
			[Address(RVA = "0x1C57F0C", Offset = "0x1C57F0C", VA = "0x1C57F0C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700053D")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6002461")]
			[Address(RVA = "0x1C57F78", Offset = "0x1C57F78", VA = "0x1C57F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86CE4", Offset = "0xB86CE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002462")]
			[Address(RVA = "0x1C57FC4", Offset = "0x1C57FC4", VA = "0x1C57FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86CF4", Offset = "0xB86CF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x1C58018", Offset = "0x1C58018", VA = "0x1C58018")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x1C583EC", Offset = "0x1C583EC", VA = "0x1C583EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x1C58374", Offset = "0x1C58374", VA = "0x1C58374")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86D04", Offset = "0xB86D04")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x1C58474", Offset = "0x1C58474", VA = "0x1C58474")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x1C58558", Offset = "0x1C58558", VA = "0x1C58558")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x1C58738", Offset = "0x1C58738", VA = "0x1C58738")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x1C58974", Offset = "0x1C58974", VA = "0x1C58974")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x1C58B00", Offset = "0x1C58B00", VA = "0x1C58B00")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000661")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000662")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6002482")]
			[Address(RVA = "0xFD3C40", Offset = "0xFD3C40", VA = "0xFD3C40")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000540")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6002471")]
			[Address(RVA = "0x100B06C", Offset = "0x100B06C", VA = "0x100B06C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000541")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6002472")]
			[Address(RVA = "0x100B074", Offset = "0x100B074", VA = "0x100B074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000542")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6002473")]
			[Address(RVA = "0x100B07C", Offset = "0x100B07C", VA = "0x100B07C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000543")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6002474")]
			[Address(RVA = "0x100B084", Offset = "0x100B084", VA = "0x100B084", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x140000A2")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6002475")]
			[Address(RVA = "0x100B08C", Offset = "0x100B08C", VA = "0x100B08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86DB4", Offset = "0xB86DB4")]
			add
			{
			}
			[Token(Token = "0x6002476")]
			[Address(RVA = "0x100B12C", Offset = "0x100B12C", VA = "0x100B12C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86DC4", Offset = "0xB86DC4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A3")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6002478")]
			[Address(RVA = "0x100B23C", Offset = "0x100B23C", VA = "0x100B23C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86DD4", Offset = "0xB86DD4")]
			add
			{
			}
			[Token(Token = "0x6002479")]
			[Address(RVA = "0x100B2DC", Offset = "0x100B2DC", VA = "0x100B2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86DE4", Offset = "0xB86DE4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A4")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x600247B")]
			[Address(RVA = "0x100B3EC", Offset = "0x100B3EC", VA = "0x100B3EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86DF4", Offset = "0xB86DF4")]
			add
			{
			}
			[Token(Token = "0x600247C")]
			[Address(RVA = "0x100B48C", Offset = "0x100B48C", VA = "0x100B48C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86E04", Offset = "0xB86E04")]
			remove
			{
			}
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x100B1CC", Offset = "0x100B1CC", VA = "0x100B1CC", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x100B37C", Offset = "0x100B37C", VA = "0x100B37C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x100B52C", Offset = "0x100B52C", VA = "0x100B52C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600247E")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x100B59C", Offset = "0x100B59C", VA = "0x100B59C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x100B6C8", Offset = "0x100B6C8", VA = "0x100B6C8", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x100B7F4", Offset = "0x100B7F4", VA = "0x100B7F4")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000663")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40025EE")]
		None,
		[Token(Token = "0x40025EF")]
		Proximity,
		[Token(Token = "0x40025F0")]
		Contact,
		[Token(Token = "0x40025F1")]
		Action
	}
	[Token(Token = "0x2000664")]
	public enum InteractableState
	{
		[Token(Token = "0x40025F3")]
		Default,
		[Token(Token = "0x40025F4")]
		ProximityState,
		[Token(Token = "0x40025F5")]
		ContactState,
		[Token(Token = "0x40025F6")]
		ActionState
	}
	[Token(Token = "0x2000665")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x100B94C", Offset = "0x100B94C", VA = "0x100B94C")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000666")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40025FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000544")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6002484")]
			[Address(RVA = "0x100B854", Offset = "0x100B854", VA = "0x100B854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x100B5FC", Offset = "0x100B5FC", VA = "0x100B5FC")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x100B728", Offset = "0x100B728", VA = "0x100B728")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x100B8B8", Offset = "0x100B8B8", VA = "0x100B8B8")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000667")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F6F4", Offset = "0xB5F6F4")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4002607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000545")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002491")]
				[Address(RVA = "0xFD41A4", Offset = "0xFD41A4", VA = "0xFD41A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000546")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002493")]
				[Address(RVA = "0xFD41EC", Offset = "0xFD41EC", VA = "0xFD41EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600248D")]
			[Address(RVA = "0xFD3C8C", Offset = "0xFD3C8C", VA = "0xFD3C8C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600248E")]
			[Address(RVA = "0xFD3CB8", Offset = "0xFD3CB8", VA = "0xFD3CB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600248F")]
			[Address(RVA = "0xFD3D28", Offset = "0xFD3D28", VA = "0xFD3D28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002490")]
			[Address(RVA = "0xFD3CD4", Offset = "0xFD3CD4", VA = "0xFD3CD4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002492")]
			[Address(RVA = "0xFD41AC", Offset = "0xFD41AC", VA = "0xFD41AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x100C6D0", Offset = "0x100C6D0", VA = "0x100C6D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x100C74C", Offset = "0x100C74C", VA = "0x100C74C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86E14", Offset = "0xB86E14")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x100C7EC", Offset = "0x100C7EC", VA = "0x100C7EC")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x100C8D4", Offset = "0x100C8D4", VA = "0x100C8D4")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000669")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4002608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4002609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000547")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6002494")]
			[Address(RVA = "0x100C8DC", Offset = "0x100C8DC", VA = "0x100C8DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x100CA5C", Offset = "0x100CA5C", VA = "0x100CA5C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x100CB04", Offset = "0x100CB04", VA = "0x100CB04")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x100CBAC", Offset = "0x100CBAC", VA = "0x100CBAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x100CE74", Offset = "0x100CE74", VA = "0x100CE74")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x100CEBC", Offset = "0x100CEBC", VA = "0x100CEBC")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x100D16C", Offset = "0x100D16C", VA = "0x100D16C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x100D2B8", Offset = "0x100D2B8", VA = "0x100D2B8")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200066A")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F704", Offset = "0xB5F704")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400261A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400261B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400261C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700054C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024AD")]
				[Address(RVA = "0xF96F58", Offset = "0xF96F58", VA = "0xF96F58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024AF")]
				[Address(RVA = "0xF96FA0", Offset = "0xF96FA0", VA = "0xF96FA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024AA")]
			[Address(RVA = "0xF96B24", Offset = "0xF96B24", VA = "0xF96B24")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60024AB")]
			[Address(RVA = "0xF96B50", Offset = "0xF96B50", VA = "0xF96B50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024AC")]
			[Address(RVA = "0xF96B54", Offset = "0xF96B54", VA = "0xF96B54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024AE")]
			[Address(RVA = "0xF96F60", Offset = "0xF96F60", VA = "0xF96F60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400260F")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000548")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0x10F9044", Offset = "0x10F9044", VA = "0x10F9044", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000549")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600249D")]
			[Address(RVA = "0x10F904C", Offset = "0x10F904C", VA = "0x10F904C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700054A")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600249E")]
			[Address(RVA = "0x10F9054", Offset = "0x10F9054", VA = "0x10F9054", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700054B")]
		public override bool EnableState
		{
			[Token(Token = "0x600249F")]
			[Address(RVA = "0x10F905C", Offset = "0x10F905C", VA = "0x10F905C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x10F9088", Offset = "0x10F9088", VA = "0x10F9088", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x10F90C4", Offset = "0x10F90C4", VA = "0x10F90C4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x10F917C", Offset = "0x10F917C", VA = "0x10F917C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB86EC4", Offset = "0xB86EC4")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x10F91F4", Offset = "0x10F91F4", VA = "0x10F91F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x10F9494", Offset = "0x10F9494", VA = "0x10F9494")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x10F9620", Offset = "0x10F9620", VA = "0x10F9620")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x10F9718", Offset = "0x10F9718", VA = "0x10F9718", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x10F9A10", Offset = "0x10F9A10", VA = "0x10F9A10", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x10F9A14", Offset = "0x10F9A14", VA = "0x10F9A14", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x10F9A18", Offset = "0x10F9A18", VA = "0x10F9A18")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200066C")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74224", Offset = "0xB74224")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74234", Offset = "0xB74234")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74244", Offset = "0xB74244")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700054E")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60024B0")]
			[Address(RVA = "0x10F9A30", Offset = "0x10F9A30", VA = "0x10F9A30", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86F74", Offset = "0xB86F74")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x10F9A38", Offset = "0x10F9A38", VA = "0x10F9A38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86F84", Offset = "0xB86F84")]
			set
			{
			}
		}

		[Token(Token = "0x1700054F")]
		public bool EnableState
		{
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x10F9A40", Offset = "0x10F9A40", VA = "0x10F9A40", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x10F9A5C", Offset = "0x10F9A5C", VA = "0x10F9A5C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000550")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x10F9A7C", Offset = "0x10F9A7C", VA = "0x10F9A7C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86F94", Offset = "0xB86F94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x10F9A84", Offset = "0x10F9A84", VA = "0x10F9A84", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86FA4", Offset = "0xB86FA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000551")]
		public float SphereRadius
		{
			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x10F9A90", Offset = "0x10F9A90", VA = "0x10F9A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86FB4", Offset = "0xB86FB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x10F9A98", Offset = "0x10F9A98", VA = "0x10F9A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86FC4", Offset = "0xB86FC4")]
			private set
			{
			}
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x10F9AA0", Offset = "0x10F9AA0", VA = "0x10F9AA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x10F9AE8", Offset = "0x10F9AE8", VA = "0x10F9AE8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x10F9AEC", Offset = "0x10F9AEC", VA = "0x10F9AEC")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200066D")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4002622")]
		None = 0,
		[Token(Token = "0x4002623")]
		Ray = 1,
		[Token(Token = "0x4002624")]
		Poke = 4,
		[Token(Token = "0x4002625")]
		All = -1
	}
	[Token(Token = "0x200066E")]
	public enum ToolInputState
	{
		[Token(Token = "0x4002627")]
		Inactive,
		[Token(Token = "0x4002628")]
		PrimaryInputDown,
		[Token(Token = "0x4002629")]
		PrimaryInputDownStay,
		[Token(Token = "0x400262A")]
		PrimaryInputUp
	}
	[Token(Token = "0x200066F")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x100B7FC", Offset = "0x100B7FC", VA = "0x100B7FC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000670")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74254", Offset = "0xB74254")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74264", Offset = "0xB74264")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74274", Offset = "0xB74274")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000552")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x100BA10", Offset = "0x100BA10", VA = "0x100BA10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000553")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x100BA18", Offset = "0x100BA18", VA = "0x100BA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86FD4", Offset = "0xB86FD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x100BA20", Offset = "0x100BA20", VA = "0x100BA20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86FE4", Offset = "0xB86FE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000554")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60024BF")]
			get;
		}

		[Token(Token = "0x17000555")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60024C0")]
			get;
		}

		[Token(Token = "0x17000556")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60024C1")]
			get;
		}

		[Token(Token = "0x17000557")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x100BA2C", Offset = "0x100BA2C", VA = "0x100BA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB86FF4", Offset = "0xB86FF4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x100BA38", Offset = "0x100BA38", VA = "0x100BA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87004", Offset = "0xB87004")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000558")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x100BA44", Offset = "0x100BA44", VA = "0x100BA44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87014", Offset = "0xB87014")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x100BA50", Offset = "0x100BA50", VA = "0x100BA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87024", Offset = "0xB87024")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000559")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60024CA")]
			get;
			[Token(Token = "0x60024CB")]
			set;
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0x100BA5C", Offset = "0x100BA5C", VA = "0x100BA5C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60024C7")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60024C8")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60024C9")]
		public abstract void DeFocus();

		[Token(Token = "0x60024CC")]
		public abstract void Initialize();

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x100BA64", Offset = "0x100BA64", VA = "0x100BA64")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x100BAB0", Offset = "0x100BAB0", VA = "0x100BAB0")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x100BB04", Offset = "0x100BB04", VA = "0x100BB04", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x100BDB4", Offset = "0x100BDB4", VA = "0x100BDB4", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x100C540", Offset = "0x100C540", VA = "0x100C540")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000671")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700055A")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60024D2")]
			get;
		}

		[Token(Token = "0x1700055B")]
		bool EnableState
		{
			[Token(Token = "0x60024D4")]
			get;
			[Token(Token = "0x60024D5")]
			set;
		}

		[Token(Token = "0x1700055C")]
		bool ToolActivateState
		{
			[Token(Token = "0x60024D6")]
			get;
			[Token(Token = "0x60024D7")]
			set;
		}

		[Token(Token = "0x60024D3")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000672")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000673")]
		private enum PinchState
		{
			[Token(Token = "0x400263B")]
			None,
			[Token(Token = "0x400263C")]
			PinchDown,
			[Token(Token = "0x400263D")]
			PinchStay,
			[Token(Token = "0x400263E")]
			PinchUp
		}

		[Token(Token = "0x4002637")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700055D")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0xF51F28", Offset = "0xF51F28", VA = "0xF51F28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700055E")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0xF51FB0", Offset = "0xF51FB0", VA = "0xF51FB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700055F")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60024DA")]
			[Address(RVA = "0xF52038", Offset = "0xF52038", VA = "0xF52038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xF520C0", Offset = "0xF520C0", VA = "0xF520C0")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xF520F4", Offset = "0xF520F4", VA = "0xF520F4")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000674")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400263F")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4002640")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4002641")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4002642")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4002643")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74294", Offset = "0xB74294")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000560")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x1005010", Offset = "0x1005010", VA = "0x1005010", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000561")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x1005018", Offset = "0x1005018", VA = "0x1005018", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000562")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x100508C", Offset = "0x100508C", VA = "0x100508C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000563")]
		public override bool EnableState
		{
			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x1005094", Offset = "0x1005094", VA = "0x1005094", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x10050D8", Offset = "0x10050D8", VA = "0x10050D8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x100514C", Offset = "0x100514C", VA = "0x100514C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x10051B4", Offset = "0x10051B4", VA = "0x10051B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x1005258", Offset = "0x1005258", VA = "0x1005258")]
		private void Update()
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x100551C", Offset = "0x100551C", VA = "0x100551C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x10055A4", Offset = "0x10055A4", VA = "0x10055A4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x1005974", Offset = "0x1005974", VA = "0x1005974")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x1005A84", Offset = "0x1005A84", VA = "0x1005A84")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x1005BA8", Offset = "0x1005BA8", VA = "0x1005BA8")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x1005EAC", Offset = "0x1005EAC", VA = "0x1005EAC")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x1006240", Offset = "0x1006240", VA = "0x1006240", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x1006328", Offset = "0x1006328", VA = "0x1006328", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x1006364", Offset = "0x1006364", VA = "0x1006364")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000675")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400264F")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4002650")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityEngine.Gradient _oldColorGradient;

		[Token(Token = "0x4002657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Gradient _highLightColorGradient;

		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74308", Offset = "0xB74308")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000564")]
		public bool EnableState
		{
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x10050BC", Offset = "0x10050BC", VA = "0x10050BC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x10050F4", Offset = "0x10050F4", VA = "0x10050F4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000565")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x100645C", Offset = "0x100645C", VA = "0x100645C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024F1")]
			[Address(RVA = "0x10054E0", Offset = "0x10054E0", VA = "0x10054E0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000566")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60024F3")]
			[Address(RVA = "0x10066BC", Offset = "0x10066BC", VA = "0x10066BC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87034", Offset = "0xB87034")]
			get
			{
				return null;
			}
			[Token(Token = "0x60024F4")]
			[Address(RVA = "0x10066C4", Offset = "0x10066C4", VA = "0x10066C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87044", Offset = "0xB87044")]
			set
			{
			}
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x1006464", Offset = "0x1006464", VA = "0x1006464")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x100627C", Offset = "0x100627C", VA = "0x100627C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x10066CC", Offset = "0x10066CC", VA = "0x10066CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x1006940", Offset = "0x1006940", VA = "0x1006940")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x1006A30", Offset = "0x1006A30", VA = "0x1006A30")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000676")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x400265A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000567")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x10F163C", Offset = "0x10F163C", VA = "0x10F163C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x10F1644", Offset = "0x10F1644", VA = "0x10F1644")]
			set
			{
			}
		}

		[Token(Token = "0x17000568")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x10F16CC", Offset = "0x10F16CC", VA = "0x10F16CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0x10F16D4", Offset = "0x10F16D4", VA = "0x10F16D4")]
			set
			{
			}
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x10F1740", Offset = "0x10F1740", VA = "0x10F1740")]
		private void Start()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x10F1A04", Offset = "0x10F1A04", VA = "0x10F1A04")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x10F1A14", Offset = "0x10F1A14", VA = "0x10F1A14")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x10F1A24", Offset = "0x10F1A24", VA = "0x10F1A24")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000677")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x11A8B80", Offset = "0x11A8B80", VA = "0x11A8B80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x11A8B84", Offset = "0x11A8B84", VA = "0x11A8B84")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x11A8BBC", Offset = "0x11A8BBC", VA = "0x11A8BBC")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x11A8BF4", Offset = "0x11A8BF4", VA = "0x11A8BF4")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x11A8C2C", Offset = "0x11A8C2C", VA = "0x11A8C2C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x11A8C64", Offset = "0x11A8C64", VA = "0x11A8C64")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x11A8C9C", Offset = "0x11A8C9C", VA = "0x11A8C9C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x11A8CD4", Offset = "0x11A8CD4", VA = "0x11A8CD4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x11A8D48", Offset = "0x11A8D48", VA = "0x11A8D48")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x11A8DB8", Offset = "0x11A8DB8", VA = "0x11A8DB8")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000678")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x11AABDC", Offset = "0x11AABDC", VA = "0x11AABDC")]
		private void Start()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x11AABE0", Offset = "0x11AABE0", VA = "0x11AABE0")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x11A8D7C", Offset = "0x11A8D7C", VA = "0x11A8D7C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x11AAC20", Offset = "0x11AAC20", VA = "0x11AAC20")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F724", Offset = "0xB5F724")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400266A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400266B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400266C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x400266D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x400266E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x400266F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000569")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002517")]
				[Address(RVA = "0xFBA8F0", Offset = "0xFBA8F0", VA = "0xFBA8F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002519")]
				[Address(RVA = "0xFBA938", Offset = "0xFBA938", VA = "0xFBA938", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002514")]
			[Address(RVA = "0xFBA704", Offset = "0xFBA704", VA = "0xFBA704")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002515")]
			[Address(RVA = "0xFBA730", Offset = "0xFBA730", VA = "0xFBA730", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002516")]
			[Address(RVA = "0xFBA734", Offset = "0xFBA734", VA = "0xFBA734", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002518")]
			[Address(RVA = "0xFBA8F8", Offset = "0xFBA8F8", VA = "0xFBA8F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002660")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4002661")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x13E41B0", Offset = "0x13E41B0", VA = "0x13E41B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x13E425C", Offset = "0x13E425C", VA = "0x13E425C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x13E44AC", Offset = "0x13E44AC", VA = "0x13E44AC")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x13E4434", Offset = "0x13E4434", VA = "0x13E4434")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87054", Offset = "0xB87054")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x13E44F8", Offset = "0x13E44F8", VA = "0x13E44F8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200067B")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200067C")]
		public enum SelectionState
		{
			[Token(Token = "0x4002677")]
			Off,
			[Token(Token = "0x4002678")]
			Selected,
			[Token(Token = "0x4002679")]
			Highlighted
		}

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700056B")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600251A")]
			[Address(RVA = "0x13D0D2C", Offset = "0x13D0D2C", VA = "0x13D0D2C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600251B")]
			[Address(RVA = "0x13D0D34", Offset = "0x13D0D34", VA = "0x13D0D34")]
			set
			{
			}
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x13D0EB8", Offset = "0x13D0EB8", VA = "0x13D0EB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0x13D10BC", Offset = "0x13D10BC", VA = "0x13D10BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x13D0DBC", Offset = "0x13D0DBC", VA = "0x13D0DBC")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x13D11A8", Offset = "0x13D11A8", VA = "0x13D11A8")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200067D")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200067E")]
		public enum SegmentType
		{
			[Token(Token = "0x4002688")]
			Straight,
			[Token(Token = "0x4002689")]
			LeftTurn,
			[Token(Token = "0x400268A")]
			RightTurn,
			[Token(Token = "0x400268B")]
			Switch
		}

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4002680")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4002681")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4002683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB743E8", Offset = "0xB743E8")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700056C")]
		public float StartDistance
		{
			[Token(Token = "0x6002521")]
			[Address(RVA = "0x15D8B28", Offset = "0x15D8B28", VA = "0x15D8B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87104", Offset = "0xB87104")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002522")]
			[Address(RVA = "0x15D8B30", Offset = "0x15D8B30", VA = "0x15D8B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87114", Offset = "0xB87114")]
			set
			{
			}
		}

		[Token(Token = "0x1700056D")]
		public float GridSize
		{
			[Token(Token = "0x6002523")]
			[Address(RVA = "0x15D8B38", Offset = "0x15D8B38", VA = "0x15D8B38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002524")]
			[Address(RVA = "0x15D8B40", Offset = "0x15D8B40", VA = "0x15D8B40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700056E")]
		public int SubDivCount
		{
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x15D8B48", Offset = "0x15D8B48", VA = "0x15D8B48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002526")]
			[Address(RVA = "0x15D8B50", Offset = "0x15D8B50", VA = "0x15D8B50")]
			set
			{
			}
		}

		[Token(Token = "0x1700056F")]
		public SegmentType Type
		{
			[Token(Token = "0x6002527")]
			[Address(RVA = "0x15D8B58", Offset = "0x15D8B58", VA = "0x15D8B58")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000570")]
		public Pose EndPose
		{
			[Token(Token = "0x6002528")]
			[Address(RVA = "0x15D8B60", Offset = "0x15D8B60", VA = "0x15D8B60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000571")]
		public float Radius
		{
			[Token(Token = "0x6002529")]
			[Address(RVA = "0x15D8EBC", Offset = "0x15D8EBC", VA = "0x15D8EBC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000572")]
		public float SegmentLength
		{
			[Token(Token = "0x600252B")]
			[Address(RVA = "0x15D8BC8", Offset = "0x15D8BC8", VA = "0x15D8BC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x15D8ECC", Offset = "0x15D8ECC", VA = "0x15D8ECC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x15D8EE4", Offset = "0x15D8EE4", VA = "0x15D8EE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x15D8C08", Offset = "0x15D8C08", VA = "0x15D8C08")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x15D8EE8", Offset = "0x15D8EE8", VA = "0x15D8EE8")]
		private void Update()
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x15D8EEC", Offset = "0x15D8EEC", VA = "0x15D8EEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x15D8F54", Offset = "0x15D8F54", VA = "0x15D8F54")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x15D981C", Offset = "0x15D981C", VA = "0x15D981C")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x15D9AC8", Offset = "0x15D9AC8", VA = "0x15D9AC8")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200067F")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F734", Offset = "0xB5F734")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400269D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400269E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400269F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40026A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40026A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000573")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002541")]
				[Address(RVA = "0xFEFB74", Offset = "0xFEFB74", VA = "0xFEFB74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000574")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002543")]
				[Address(RVA = "0xFEFBBC", Offset = "0xFEFBBC", VA = "0xFEFBBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600253E")]
			[Address(RVA = "0xFEF9D0", Offset = "0xFEF9D0", VA = "0xFEF9D0")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600253F")]
			[Address(RVA = "0xFEF9FC", Offset = "0xFEF9FC", VA = "0xFEF9FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002540")]
			[Address(RVA = "0xFEFA00", Offset = "0xFEFA00", VA = "0xFEFA00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002542")]
			[Address(RVA = "0xFEFB7C", Offset = "0xFEFB7C", VA = "0xFEFB7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400268C")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400268D")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4002699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x15D9B98", Offset = "0x15D9B98", VA = "0x15D9B98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x15D9C54", Offset = "0x15D9C54", VA = "0x15D9C54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x15D9D04", Offset = "0x15D9D04", VA = "0x15D9D04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x15D9E7C", Offset = "0x15D9E7C", VA = "0x15D9E7C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x15DA044", Offset = "0x15DA044", VA = "0x15DA044")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x15DA12C", Offset = "0x15DA12C", VA = "0x15DA12C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x15DA340", Offset = "0x15DA340", VA = "0x15DA340")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x15DA240", Offset = "0x15DA240", VA = "0x15DA240")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x15DA254", Offset = "0x15DA254", VA = "0x15DA254")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x15DA398", Offset = "0x15DA398", VA = "0x15DA398")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87124", Offset = "0xB87124")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x15DA410", Offset = "0x15DA410", VA = "0x15DA410")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000681")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000575")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6002544")]
			[Address(RVA = "0x15DA4C0", Offset = "0x15DA4C0", VA = "0x15DA4C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x15DA4D0", Offset = "0x15DA4D0", VA = "0x15DA4D0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x15DA4D8", Offset = "0x15DA4D8", VA = "0x15DA4D8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x15DA81C", Offset = "0x15DA81C", VA = "0x15DA81C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000682")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x40026A5")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x40026A6")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB744E8", Offset = "0xB744E8")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000576")]
		public float Distance
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0x15DA92C", Offset = "0x15DA92C", VA = "0x15DA92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB871D4", Offset = "0xB871D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002549")]
			[Address(RVA = "0x15DA934", Offset = "0x15DA934", VA = "0x15DA934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB871E4", Offset = "0xB871E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000577")]
		public float Scale
		{
			[Token(Token = "0x600254A")]
			[Address(RVA = "0x15DA93C", Offset = "0x15DA93C", VA = "0x15DA93C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600254B")]
			[Address(RVA = "0x15DA944", Offset = "0x15DA944", VA = "0x15DA944")]
			set
			{
			}
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x15DA4D4", Offset = "0x15DA4D4", VA = "0x15DA4D4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x15DA94C", Offset = "0x15DA94C", VA = "0x15DA94C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x15DA520", Offset = "0x15DA520", VA = "0x15DA520")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x15DA744", Offset = "0x15DA744", VA = "0x15DA744")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6002550")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x15DA888", Offset = "0x15DA888", VA = "0x15DA888")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000683")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F744", Offset = "0xB5F744")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40026BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40026BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40026BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40026BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40026C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40026C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40026C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40026C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40026C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000578")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600255F")]
				[Address(RVA = "0xFEFE5C", Offset = "0xFEFE5C", VA = "0xFEFE5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000579")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002561")]
				[Address(RVA = "0xFEFEA4", Offset = "0xFEFEA4", VA = "0xFEFEA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600255C")]
			[Address(RVA = "0xFEFBC4", Offset = "0xFEFBC4", VA = "0xFEFBC4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600255D")]
			[Address(RVA = "0xFEFBF0", Offset = "0xFEFBF0", VA = "0xFEFBF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600255E")]
			[Address(RVA = "0xFEFBF4", Offset = "0xFEFBF4", VA = "0xFEFBF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002560")]
			[Address(RVA = "0xFEFE64", Offset = "0xFEFE64", VA = "0xFEFE64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x15DAAEC", Offset = "0x15DAAEC", VA = "0x15DAAEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x15DAB4C", Offset = "0x15DAB4C", VA = "0x15DAB4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x15DAC54", Offset = "0x15DAC54", VA = "0x15DAC54")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x15DADC4", Offset = "0x15DADC4", VA = "0x15DADC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x15DACB4", Offset = "0x15DACB4", VA = "0x15DACB4")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x15DAEA0", Offset = "0x15DAEA0", VA = "0x15DAEA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB871F4", Offset = "0xB871F4")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x15DAF28", Offset = "0x15DAF28", VA = "0x15DAF28")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x15DAFD4", Offset = "0x15DAFD4", VA = "0x15DAFD4")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x15DB034", Offset = "0x15DB034", VA = "0x15DB034")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000685")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000686")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40026E3")]
			Start,
			[Token(Token = "0x40026E4")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40026E5")]
			Stop
		}

		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F754", Offset = "0xB5F754")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40026E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40026EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40026EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40026EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40026ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40026EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700057A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002574")]
				[Address(RVA = "0xFF0120", Offset = "0xFF0120", VA = "0xFF0120", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002576")]
				[Address(RVA = "0xFF0168", Offset = "0xFF0168", VA = "0xFF0168", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002571")]
			[Address(RVA = "0xFEFEAC", Offset = "0xFEFEAC", VA = "0xFEFEAC")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002572")]
			[Address(RVA = "0xFEFED8", Offset = "0xFEFED8", VA = "0xFEFED8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002573")]
			[Address(RVA = "0xFEFEDC", Offset = "0xFEFEDC", VA = "0xFEFEDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002575")]
			[Address(RVA = "0xFF0128", Offset = "0xFF0128", VA = "0xFF0128", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026C5")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40026C6")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40026C7")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40026C8")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74548", Offset = "0xB74548")]
		protected float _initialSpeed;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40026CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40026CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40026CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40026CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40026D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40026D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40026D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40026D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40026D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40026D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40026D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40026D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40026D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40026D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40026DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40026DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x15DB090", Offset = "0x15DB090", VA = "0x15DB090")]
		private void Start()
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x15DB1FC", Offset = "0x15DB1FC", VA = "0x15DB1FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x15DB208", Offset = "0x15DB208", VA = "0x15DB208", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x15DB358", Offset = "0x15DB358", VA = "0x15DB358")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x15DB170", Offset = "0x15DB170", VA = "0x15DB170")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB872A4", Offset = "0xB872A4")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x15DB3B8", Offset = "0x15DB3B8", VA = "0x15DB3B8")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x15DB2F4", Offset = "0x15DB2F4", VA = "0x15DB2F4")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x15DB5D4", Offset = "0x15DB5D4", VA = "0x15DB5D4")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x15DB710", Offset = "0x15DB710", VA = "0x15DB710")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x15DB640", Offset = "0x15DB640", VA = "0x15DB640")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x15DB77C", Offset = "0x15DB77C", VA = "0x15DB77C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x15DB79C", Offset = "0x15DB79C", VA = "0x15DB79C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x15DB828", Offset = "0x15DB828", VA = "0x15DB828")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x15DB8E0", Offset = "0x15DB8E0", VA = "0x15DB8E0")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x15DB8F0", Offset = "0x15DB8F0", VA = "0x15DB8F0")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000688")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40026F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700057C")]
		public float TrackLength
		{
			[Token(Token = "0x6002577")]
			[Address(RVA = "0x15DB958", Offset = "0x15DB958", VA = "0x15DB958")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002578")]
			[Address(RVA = "0x15DB960", Offset = "0x15DB960", VA = "0x15DB960")]
			private set
			{
			}
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x15DB968", Offset = "0x15DB968", VA = "0x15DB968")]
		private void Awake()
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x15DA9CC", Offset = "0x15DA9CC", VA = "0x15DA9CC")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x15DB96C", Offset = "0x15DB96C", VA = "0x15DB96C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x15DBB80", Offset = "0x15DBB80", VA = "0x15DBB80")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x15DBC7C", Offset = "0x15DBC7C", VA = "0x15DBC7C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000689")]
	public class Pose
	{
		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xFF8C40", Offset = "0xFF8C40", VA = "0xFF8C40")]
		public Pose()
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xFF8C84", Offset = "0xFF8C84", VA = "0xFF8C84")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200068A")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F764", Offset = "0xB5F764")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002706")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4002707")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002708")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700057E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600258C")]
				[Address(RVA = "0x1B9147C", Offset = "0x1B9147C", VA = "0x1B9147C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700057F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600258E")]
				[Address(RVA = "0x1B914C4", Offset = "0x1B914C4", VA = "0x1B914C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002589")]
			[Address(RVA = "0x1B912AC", Offset = "0x1B912AC", VA = "0x1B912AC")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600258A")]
			[Address(RVA = "0x1B912D8", Offset = "0x1B912D8", VA = "0x1B912D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600258B")]
			[Address(RVA = "0x1B912DC", Offset = "0x1B912DC", VA = "0x1B912DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600258D")]
			[Address(RVA = "0x1B91484", Offset = "0x1B91484", VA = "0x1B91484", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F774", Offset = "0xB5F774")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400270A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400270B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400270C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400270D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400270E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000580")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002592")]
				[Address(RVA = "0x1B915D4", Offset = "0x1B915D4", VA = "0x1B915D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000581")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002594")]
				[Address(RVA = "0x1B9161C", Offset = "0x1B9161C", VA = "0x1B9161C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600258F")]
			[Address(RVA = "0x1B914CC", Offset = "0x1B914CC", VA = "0x1B914CC")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002590")]
			[Address(RVA = "0x1B914F8", Offset = "0x1B914F8", VA = "0x1B914F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002591")]
			[Address(RVA = "0x1B914FC", Offset = "0x1B914FC", VA = "0x1B914FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002593")]
			[Address(RVA = "0x1B915DC", Offset = "0x1B915DC", VA = "0x1B915DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026F8")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB74730", Offset = "0xB74730")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40026FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700057D")]
		public bool IsMoving
		{
			[Token(Token = "0x6002580")]
			[Address(RVA = "0xF875B4", Offset = "0xF875B4", VA = "0xF875B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87354", Offset = "0xB87354")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002581")]
			[Address(RVA = "0xF875BC", Offset = "0xF875BC", VA = "0xF875BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87364", Offset = "0xB87364")]
			private set
			{
			}
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xF875C8", Offset = "0xF875C8", VA = "0xF875C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xF87604", Offset = "0xF87604", VA = "0xF87604")]
		private void Update()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xF876E8", Offset = "0xF876E8", VA = "0xF876E8")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xF8775C", Offset = "0xF8775C", VA = "0xF8775C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87374", Offset = "0xB87374")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xF877E4", Offset = "0xF877E4", VA = "0xF877E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB873D4", Offset = "0xB873D4")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xF8789C", Offset = "0xF8789C", VA = "0xF8789C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xF87908", Offset = "0xF87908", VA = "0xF87908")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200068D")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xF87910", Offset = "0xF87910", VA = "0xF87910")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xF87984", Offset = "0xF87984", VA = "0xF87984")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xF87A68", Offset = "0xF87A68", VA = "0xF87A68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xF87BA0", Offset = "0xF87BA0", VA = "0xF87BA0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xF87C20", Offset = "0xF87C20", VA = "0xF87C20")]
		private void Update()
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xF87CFC", Offset = "0xF87CFC", VA = "0xF87CFC")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200068E")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4002715")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4002716")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4002717")]
		EUDT_None,
		[Token(Token = "0x4002718")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200068F")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F784", Offset = "0xB5F784")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000582")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025AE")]
				[Address(RVA = "0xFB5BB4", Offset = "0xFB5BB4", VA = "0xFB5BB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000583")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025B0")]
				[Address(RVA = "0xFB5BFC", Offset = "0xFB5BFC", VA = "0xFB5BFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025AB")]
			[Address(RVA = "0xFB5984", Offset = "0xFB5984", VA = "0xFB5984")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60025AC")]
			[Address(RVA = "0xFB59B0", Offset = "0xFB59B0", VA = "0xFB59B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025AD")]
			[Address(RVA = "0xFB59B4", Offset = "0xFB59B4", VA = "0xFB59B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xFB5BBC", Offset = "0xFB5BBC", VA = "0xFB5BBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400271A")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400271B")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400271C")]
		private const string noneID = "NoneID";

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB74770", Offset = "0xB74770")]
		public GameObject mainCamera;

		[Token(Token = "0x4002720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4002721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4002722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xB747A8", Offset = "0xB747A8")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x400272E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x1BD0860", Offset = "0x1BD0860", VA = "0x1BD0860")]
		private void Start()
		{
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x1BD10BC", Offset = "0x1BD10BC", VA = "0x1BD10BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x1BD1204", Offset = "0x1BD1204", VA = "0x1BD1204")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x1BD1340", Offset = "0x1BD1340", VA = "0x1BD1340")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x1BD147C", Offset = "0x1BD147C", VA = "0x1BD147C")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x1BD11D8", Offset = "0x1BD11D8", VA = "0x1BD11D8")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x1BD155C", Offset = "0x1BD155C", VA = "0x1BD155C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB874D4", Offset = "0xB874D4")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x1BD15D4", Offset = "0x1BD15D4", VA = "0x1BD15D4")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x1BD0CC8", Offset = "0x1BD0CC8", VA = "0x1BD0CC8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x1BD1728", Offset = "0x1BD1728", VA = "0x1BD1728")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x1BD1608", Offset = "0x1BD1608", VA = "0x1BD1608")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x1BD1A40", Offset = "0x1BD1A40", VA = "0x1BD1A40")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x1BD1B30", Offset = "0x1BD1B30", VA = "0x1BD1B30")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x1BD1BC0", Offset = "0x1BD1BC0", VA = "0x1BD1BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87534", Offset = "0xB87534")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x1BD1C18", Offset = "0x1BD1C18", VA = "0x1BD1C18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87544", Offset = "0xB87544")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x1BD1C70", Offset = "0x1BD1C70", VA = "0x1BD1C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87554", Offset = "0xB87554")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000691")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5F794", Offset = "0xB5F794")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F7F4", Offset = "0xB5F7F4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60025BE")]
			[Address(RVA = "0xFD364C", Offset = "0xFD364C", VA = "0xFD364C")]
			public <>c()
			{
			}

			[Token(Token = "0x60025BF")]
			[Address(RVA = "0xFD3654", Offset = "0xFD3654", VA = "0xFD3654")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002734")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4002735")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4002736")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4002737")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4002738")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4002739")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400273A")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400273B")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400273C")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400273D")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400273E")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x1C50158", Offset = "0x1C50158", VA = "0x1C50158")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x1C501B4", Offset = "0x1C501B4", VA = "0x1C501B4")]
		private void Start()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x1C50648", Offset = "0x1C50648", VA = "0x1C50648")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x1C50734", Offset = "0x1C50734", VA = "0x1C50734")]
		private void Update()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x1C50898", Offset = "0x1C50898", VA = "0x1C50898")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x1C50BA0", Offset = "0x1C50BA0", VA = "0x1C50BA0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x1C50C98", Offset = "0x1C50C98", VA = "0x1C50C98")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x1C50DF8", Offset = "0x1C50DF8", VA = "0x1C50DF8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x1C50930", Offset = "0x1C50930", VA = "0x1C50930")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x1C50984", Offset = "0x1C50984", VA = "0x1C50984")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x1C504EC", Offset = "0x1C504EC", VA = "0x1C504EC")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x1C50F34", Offset = "0x1C50F34", VA = "0x1C50F34")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000693")]
	public enum HandPoseId
	{
		[Token(Token = "0x4002753")]
		Default,
		[Token(Token = "0x4002754")]
		Generic,
		[Token(Token = "0x4002755")]
		PingPongBall,
		[Token(Token = "0x4002756")]
		Controller
	}
	[Token(Token = "0x2000694")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000584")]
		public bool AllowPointing
		{
			[Token(Token = "0x60025C0")]
			[Address(RVA = "0x1C56140", Offset = "0x1C56140", VA = "0x1C56140")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000585")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60025C1")]
			[Address(RVA = "0x1C56148", Offset = "0x1C56148", VA = "0x1C56148")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000586")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x1C56150", Offset = "0x1C56150", VA = "0x1C56150")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x1C56158", Offset = "0x1C56158", VA = "0x1C56158")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000695")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x15D79A8", Offset = "0x15D79A8", VA = "0x15D79A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x15D7C90", Offset = "0x15D7C90", VA = "0x15D7C90")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x15D7CEC", Offset = "0x15D7CEC", VA = "0x15D7CEC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x15D7D30", Offset = "0x15D7D30", VA = "0x15D7D30")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000696")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400275D")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x400275E")]
		public const string Tab = "    ";

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x144E7EC", Offset = "0x144E7EC", VA = "0x144E7EC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB875B4", Offset = "0xB875B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB875B4", Offset = "0xB875B4")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x144E87C", Offset = "0x144E87C", VA = "0x144E87C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB87614", Offset = "0xB87614")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB87614", Offset = "0xB87614")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x144E91C", Offset = "0x144E91C", VA = "0x144E91C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB87674", Offset = "0xB87674")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB87674", Offset = "0xB87674")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x144E9AC", Offset = "0x144E9AC", VA = "0x144E9AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB876D4", Offset = "0xB876D4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB876D4", Offset = "0xB876D4")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x144EA3C", Offset = "0x144EA3C", VA = "0x144EA3C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB87734", Offset = "0xB87734")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB87734", Offset = "0xB87734")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000697")]
	public class CAPI
	{
		[Token(Token = "0x2000698")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000699")]
		public enum Result
		{
			[Token(Token = "0x400276A")]
			Success = 0,
			[Token(Token = "0x400276B")]
			Failure = -1000,
			[Token(Token = "0x400276C")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x400276D")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x400276E")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x400276F")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4002770")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4002771")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4002772")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200069A")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4002773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6002661")]
			[Address(RVA = "0xF8DB58", Offset = "0xF8DB58", VA = "0xF8DB58")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x400275F")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4002761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4002762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4002767")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x11949EC", Offset = "0x11949EC", VA = "0x11949EC")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x1194A7C", Offset = "0x1194A7C", VA = "0x1194A7C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x1194CA0", Offset = "0x1194CA0", VA = "0x1194CA0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x1194D8C", Offset = "0x1194D8C", VA = "0x1194D8C")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x1194DFC", Offset = "0x1194DFC", VA = "0x1194DFC")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x1194E70", Offset = "0x1194E70", VA = "0x1194E70")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x1194EF0", Offset = "0x1194EF0", VA = "0x1194EF0")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x1195034", Offset = "0x1195034", VA = "0x1195034")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x11950B4", Offset = "0x11950B4", VA = "0x11950B4")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x11951F8", Offset = "0x11951F8", VA = "0x11951F8")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x1195278", Offset = "0x1195278", VA = "0x1195278")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x11952F8", Offset = "0x11952F8", VA = "0x11952F8")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x1195378", Offset = "0x1195378", VA = "0x1195378")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x11953F8", Offset = "0x11953F8", VA = "0x11953F8")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x1195488", Offset = "0x1195488", VA = "0x1195488")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x1195518", Offset = "0x1195518", VA = "0x1195518")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x11955A8", Offset = "0x11955A8", VA = "0x11955A8")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x1195628", Offset = "0x1195628", VA = "0x1195628")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x11956A8", Offset = "0x11956A8", VA = "0x11956A8")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x1195738", Offset = "0x1195738", VA = "0x1195738")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x11957C8", Offset = "0x11957C8", VA = "0x11957C8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x1195858", Offset = "0x1195858", VA = "0x1195858")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x11958D8", Offset = "0x11958D8", VA = "0x11958D8")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x1195978", Offset = "0x1195978", VA = "0x1195978")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x11959F4", Offset = "0x11959F4", VA = "0x11959F4")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x1195A94", Offset = "0x1195A94", VA = "0x1195A94")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x1195B54", Offset = "0x1195B54", VA = "0x1195B54")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x1195C24", Offset = "0x1195C24", VA = "0x1195C24")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x1195CB4", Offset = "0x1195CB4", VA = "0x1195CB4")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x1195D44", Offset = "0x1195D44", VA = "0x1195D44")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x1195DD4", Offset = "0x1195DD4", VA = "0x1195DD4")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x1195E64", Offset = "0x1195E64", VA = "0x1195E64")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x1195EF4", Offset = "0x1195EF4", VA = "0x1195EF4")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x1195F74", Offset = "0x1195F74", VA = "0x1195F74")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x1196090", Offset = "0x1196090", VA = "0x1196090")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x1196000", Offset = "0x1196000", VA = "0x1196000")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x11962B0", Offset = "0x11962B0", VA = "0x11962B0")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x1196420", Offset = "0x1196420", VA = "0x1196420")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60025F3")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x11964A0", Offset = "0x11964A0", VA = "0x11964A0")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x1196748", Offset = "0x1196748", VA = "0x1196748")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x11967C8", Offset = "0x11967C8", VA = "0x11967C8")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x1196938", Offset = "0x1196938", VA = "0x1196938")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x11969B8", Offset = "0x11969B8", VA = "0x11969B8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x1196B28", Offset = "0x1196B28", VA = "0x1196B28")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x1196BA8", Offset = "0x1196BA8", VA = "0x1196BA8")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x1196D18", Offset = "0x1196D18", VA = "0x1196D18")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x1196D98", Offset = "0x1196D98", VA = "0x1196D98")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x1196F08", Offset = "0x1196F08", VA = "0x1196F08")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x1196F88", Offset = "0x1196F88", VA = "0x1196F88")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x1197008", Offset = "0x1197008", VA = "0x1197008")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6002600")]
		[Address(RVA = "0x11970A0", Offset = "0x11970A0", VA = "0x11970A0")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x1197120", Offset = "0x1197120", VA = "0x1197120")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x11972F8", Offset = "0x11972F8", VA = "0x11972F8")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6002603")]
		[Address(RVA = "0x1197450", Offset = "0x1197450", VA = "0x1197450")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002604")]
		[Address(RVA = "0x1197278", Offset = "0x1197278", VA = "0x1197278")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002605")]
		[Address(RVA = "0x11974D0", Offset = "0x11974D0", VA = "0x11974D0")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002606")]
		[Address(RVA = "0x1197550", Offset = "0x1197550", VA = "0x1197550")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6002607")]
		[Address(RVA = "0x11975E0", Offset = "0x11975E0", VA = "0x11975E0")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002608")]
		[Address(RVA = "0x1197660", Offset = "0x1197660", VA = "0x1197660")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6002609")]
		[Address(RVA = "0x11976F0", Offset = "0x11976F0", VA = "0x11976F0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600260A")]
		[Address(RVA = "0x1197770", Offset = "0x1197770", VA = "0x1197770")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x11977F0", Offset = "0x11977F0", VA = "0x11977F0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600260C")]
		[Address(RVA = "0x1197A7C", Offset = "0x1197A7C", VA = "0x1197A7C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x1197B0C", Offset = "0x1197B0C", VA = "0x1197B0C")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600260E")]
		[Address(RVA = "0x1197D3C", Offset = "0x1197D3C", VA = "0x1197D3C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x1197DD4", Offset = "0x1197DD4", VA = "0x1197DD4")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6002610")]
		[Address(RVA = "0x1197F24", Offset = "0x1197F24", VA = "0x1197F24")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6002611")]
		[Address(RVA = "0x1197FA4", Offset = "0x1197FA4", VA = "0x1197FA4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x1198024", Offset = "0x1198024", VA = "0x1198024")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6002613")]
		[Address(RVA = "0x1198178", Offset = "0x1198178", VA = "0x1198178")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x11981F8", Offset = "0x11981F8", VA = "0x11981F8")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6002615")]
		[Address(RVA = "0x119834C", Offset = "0x119834C", VA = "0x119834C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002616")]
		[Address(RVA = "0x11983CC", Offset = "0x11983CC", VA = "0x11983CC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002617")]
		[Address(RVA = "0x119845C", Offset = "0x119845C", VA = "0x119845C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002618")]
		[Address(RVA = "0x11984EC", Offset = "0x11984EC", VA = "0x11984EC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002619")]
		[Address(RVA = "0x119857C", Offset = "0x119857C", VA = "0x119857C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600261A")]
		[Address(RVA = "0x11985FC", Offset = "0x11985FC", VA = "0x11985FC")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600261B")]
		[Address(RVA = "0x1198684", Offset = "0x1198684", VA = "0x1198684")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600261C")]
		[Address(RVA = "0x119870C", Offset = "0x119870C", VA = "0x119870C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600261D")]
		[Address(RVA = "0x119878C", Offset = "0x119878C", VA = "0x119878C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600261E")]
		[Address(RVA = "0x119880C", Offset = "0x119880C", VA = "0x119880C")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600261F")]
		[Address(RVA = "0x11988C0", Offset = "0x11988C0", VA = "0x11988C0")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002620")]
		[Address(RVA = "0x1198950", Offset = "0x1198950", VA = "0x1198950")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002621")]
		[Address(RVA = "0x11989E0", Offset = "0x11989E0", VA = "0x11989E0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002622")]
		[Address(RVA = "0x1198A60", Offset = "0x1198A60", VA = "0x1198A60")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002623")]
		[Address(RVA = "0x1198AE0", Offset = "0x1198AE0", VA = "0x1198AE0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002624")]
		[Address(RVA = "0x1198B60", Offset = "0x1198B60", VA = "0x1198B60")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6002625")]
		[Address(RVA = "0x1198BF8", Offset = "0x1198BF8", VA = "0x1198BF8")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6002626")]
		[Address(RVA = "0x1198C88", Offset = "0x1198C88", VA = "0x1198C88")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6002627")]
		[Address(RVA = "0x1198D18", Offset = "0x1198D18", VA = "0x1198D18")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6002628")]
		[Address(RVA = "0x1198DA8", Offset = "0x1198DA8", VA = "0x1198DA8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6002629")]
		[Address(RVA = "0x1198E40", Offset = "0x1198E40", VA = "0x1198E40")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600262A")]
		[Address(RVA = "0x1198ED8", Offset = "0x1198ED8", VA = "0x1198ED8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600262B")]
		[Address(RVA = "0x1198F58", Offset = "0x1198F58", VA = "0x1198F58")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x1198FD8", Offset = "0x1198FD8", VA = "0x1198FD8")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600262D")]
		[Address(RVA = "0x119912C", Offset = "0x119912C", VA = "0x119912C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x11991AC", Offset = "0x11991AC", VA = "0x11991AC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600262F")]
		[Address(RVA = "0x1199300", Offset = "0x1199300", VA = "0x1199300")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x1199380", Offset = "0x1199380", VA = "0x1199380")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002631")]
		[Address(RVA = "0x11994BC", Offset = "0x11994BC", VA = "0x11994BC")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x119953C", Offset = "0x119953C", VA = "0x119953C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x1199710", Offset = "0x1199710", VA = "0x1199710")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6002634")]
		[Address(RVA = "0x11999F0", Offset = "0x11999F0", VA = "0x11999F0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6002635")]
		[Address(RVA = "0x1199690", Offset = "0x1199690", VA = "0x1199690")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6002636")]
		[Address(RVA = "0x1199A80", Offset = "0x1199A80", VA = "0x1199A80")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6002637")]
		[Address(RVA = "0x1199B00", Offset = "0x1199B00", VA = "0x1199B00")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6002638")]
		[Address(RVA = "0x1199B90", Offset = "0x1199B90", VA = "0x1199B90")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6002639")]
		[Address(RVA = "0x1199C20", Offset = "0x1199C20", VA = "0x1199C20")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x600263A")]
		[Address(RVA = "0x1199CB0", Offset = "0x1199CB0", VA = "0x1199CB0")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600263B")]
		[Address(RVA = "0x1199D50", Offset = "0x1199D50", VA = "0x1199D50")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600263C")]
		[Address(RVA = "0x1199DF0", Offset = "0x1199DF0", VA = "0x1199DF0")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x600263D")]
		[Address(RVA = "0x1199E90", Offset = "0x1199E90", VA = "0x1199E90")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600263E")]
		[Address(RVA = "0x1199F10", Offset = "0x1199F10", VA = "0x1199F10")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600263F")]
		[Address(RVA = "0x1199F90", Offset = "0x1199F90", VA = "0x1199F90")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002640")]
		[Address(RVA = "0x119A010", Offset = "0x119A010", VA = "0x119A010")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002641")]
		[Address(RVA = "0x119A090", Offset = "0x119A090", VA = "0x119A090")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6002642")]
		[Address(RVA = "0x119A110", Offset = "0x119A110", VA = "0x119A110")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6002643")]
		[Address(RVA = "0x119A238", Offset = "0x119A238", VA = "0x119A238")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6002644")]
		[Address(RVA = "0x119A2D0", Offset = "0x119A2D0", VA = "0x119A2D0")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x119A350", Offset = "0x119A350", VA = "0x119A350")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x119A3B0", Offset = "0x119A3B0", VA = "0x119A3B0")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002647")]
		[Address(RVA = "0x119A4F8", Offset = "0x119A4F8", VA = "0x119A4F8")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x119A588", Offset = "0x119A588", VA = "0x119A588")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002649")]
		[Address(RVA = "0x119A6E0", Offset = "0x119A6E0", VA = "0x119A6E0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x600264A")]
		[Address(RVA = "0x119A770", Offset = "0x119A770", VA = "0x119A770")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x119A810", Offset = "0x119A810", VA = "0x119A810")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600264C")]
		[Address(RVA = "0x119ABE0", Offset = "0x119ABE0", VA = "0x119ABE0")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x600264D")]
		[Address(RVA = "0x119AC60", Offset = "0x119AC60", VA = "0x119AC60")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x119ACF8", Offset = "0x119ACF8", VA = "0x119ACF8")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600264F")]
		[Address(RVA = "0x119B558", Offset = "0x119B558", VA = "0x119B558")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6002650")]
		[Address(RVA = "0x119B5D8", Offset = "0x119B5D8", VA = "0x119B5D8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x1194988", Offset = "0x1194988", VA = "0x1194988")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB87794", Offset = "0xB87794")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002652")]
		[Address(RVA = "0x119B670", Offset = "0x119B670", VA = "0x119B670")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6002653")]
		[Address(RVA = "0x119B6F4", Offset = "0x119B6F4", VA = "0x119B6F4")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6002654")]
		[Address(RVA = "0x119B774", Offset = "0x119B774", VA = "0x119B774")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6002655")]
		[Address(RVA = "0x119B7F4", Offset = "0x119B7F4", VA = "0x119B7F4")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x119B874", Offset = "0x119B874", VA = "0x119B874")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002657")]
		[Address(RVA = "0x119C238", Offset = "0x119C238", VA = "0x119C238")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x119C2B8", Offset = "0x119C2B8", VA = "0x119C2B8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6002659")]
		[Address(RVA = "0x119C6F4", Offset = "0x119C6F4", VA = "0x119C6F4")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x119C65C", Offset = "0x119C65C", VA = "0x119C65C")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x119C768", Offset = "0x119C768", VA = "0x119C768")]
		public CAPI()
		{
		}
	}
}
namespace Dreamteck
{
	[Token(Token = "0x200069B")]
	public static class ArrayUtility
	{
		[Token(Token = "0x6002663")]
		public static void Add<T>(ref T[] array, T item)
		{
		}

		[Token(Token = "0x6002664")]
		public static bool Contains<T>(T[] array, T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002665")]
		public static int IndexOf<T>(T[] array, T value)
		{
			return default(int);
		}

		[Token(Token = "0x6002666")]
		public static void Insert<T>(ref T[] array, int index, T item)
		{
		}

		[Token(Token = "0x6002667")]
		public static void RemoveAt<T>(ref T[] array, int index)
		{
		}
	}
	[Token(Token = "0x200069C")]
	public static class DMath
	{
		[Token(Token = "0x6002668")]
		[Address(RVA = "0x108E370", Offset = "0x108E370", VA = "0x108E370")]
		public static double Sin(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x108E3D8", Offset = "0x108E3D8", VA = "0x108E3D8")]
		public static double Cos(double a)
		{
			return default(double);
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x108E440", Offset = "0x108E440", VA = "0x108E440")]
		public static double Tan(double a)
		{
			return default(double);
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x108E4A8", Offset = "0x108E4A8", VA = "0x108E4A8")]
		public static double Pow(double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x108E51C", Offset = "0x108E51C", VA = "0x108E51C")]
		public static double Log(double a, double newBase)
		{
			return default(double);
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0x108E590", Offset = "0x108E590", VA = "0x108E590")]
		public static double Log10(double a)
		{
			return default(double);
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x108E5F8", Offset = "0x108E5F8", VA = "0x108E5F8")]
		public static double Clamp01(double a)
		{
			return default(double);
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x108E618", Offset = "0x108E618", VA = "0x108E618")]
		public static double Clamp(double a, double min, double max)
		{
			return default(double);
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0x108E634", Offset = "0x108E634", VA = "0x108E634")]
		public static double Lerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x108E658", Offset = "0x108E658", VA = "0x108E658")]
		public static double InverseLerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x108E68C", Offset = "0x108E68C", VA = "0x108E68C")]
		public static Vector3 LerpVector3(Vector3 a, Vector3 b, double t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x108E6EC", Offset = "0x108E6EC", VA = "0x108E6EC")]
		public static double Round(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x108E7C0", Offset = "0x108E7C0", VA = "0x108E7C0")]
		public static int RoundInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x108E8AC", Offset = "0x108E8AC", VA = "0x108E8AC")]
		public static double Ceil(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x108E914", Offset = "0x108E914", VA = "0x108E914")]
		public static int CeilInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x108E994", Offset = "0x108E994", VA = "0x108E994")]
		public static double Floor(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0x108E9FC", Offset = "0x108E9FC", VA = "0x108E9FC")]
		public static int FloorInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0x108EA7C", Offset = "0x108EA7C", VA = "0x108EA7C")]
		public static double Move(double current, double target, double amount)
		{
			return default(double);
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0x108EAAC", Offset = "0x108EAAC", VA = "0x108EAAC")]
		public static double Abs(double a)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200069D")]
	public static class DuplicateUtility
	{
		[Token(Token = "0x600267B")]
		[Address(RVA = "0x10F2C8C", Offset = "0x10F2C8C", VA = "0x10F2C8C")]
		public static AnimationCurve DuplicateCurve(AnimationCurve input)
		{
			return null;
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0x10F2DCC", Offset = "0x10F2DCC", VA = "0x10F2DCC")]
		public static UnityEngine.Gradient DuplicateGradient(UnityEngine.Gradient input)
		{
			return null;
		}
	}
	[Token(Token = "0x200069E")]
	public static class LinearAlgebraUtility
	{
		[Token(Token = "0x600267D")]
		[Address(RVA = "0x10C6ABC", Offset = "0x10C6ABC", VA = "0x10C6ABC")]
		public static Vector3 ProjectOnLine(Vector3 fromPoint, Vector3 toPoint, Vector3 project)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0x10C6BC8", Offset = "0x10C6BC8", VA = "0x10C6BC8")]
		public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
		{
			return default(float);
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x10C6C18", Offset = "0x10C6C18", VA = "0x10C6C18")]
		public static float DistanceOnSphere(Vector3 from, Vector3 to, float radius)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200069F")]
	public class MeshUtility
	{
		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] tan1;

		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] tan2;

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x1CC545C", Offset = "0x1CC545C", VA = "0x1CC545C")]
		public static int[] GeneratePlaneTriangles(int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0)
		{
			return null;
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x1CC5528", Offset = "0x1CC5528", VA = "0x1CC5528")]
		public static int[] GeneratePlaneTriangles(ref int[] triangles, int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0, bool reallocateArray = false)
		{
			return null;
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x1CC4068", Offset = "0x1CC4068", VA = "0x1CC4068")]
		public static void CalculateTangents(TS_Mesh mesh)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x1CC5838", Offset = "0x1CC5838", VA = "0x1CC5838")]
		public static void MakeDoublesided(Mesh input)
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x1CC629C", Offset = "0x1CC629C", VA = "0x1CC629C")]
		public static void MakeDoublesided(TS_Mesh input)
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0x1CC3938", Offset = "0x1CC3938", VA = "0x1CC3938")]
		public static void MakeDoublesidedHalf(TS_Mesh input)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x1CC6BEC", Offset = "0x1CC6BEC", VA = "0x1CC6BEC")]
		public static void InverseTransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x1CC6CDC", Offset = "0x1CC6CDC", VA = "0x1CC6CDC")]
		public static void TransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0x1CC3848", Offset = "0x1CC3848", VA = "0x1CC3848")]
		public static void InverseTransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x1CC6DCC", Offset = "0x1CC6DCC", VA = "0x1CC6DCC")]
		public static void TransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x1CC6EBC", Offset = "0x1CC6EBC", VA = "0x1CC6EBC")]
		public static void InverseTransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x1CC7010", Offset = "0x1CC7010", VA = "0x1CC7010")]
		public static void TransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x1CC71A8", Offset = "0x1CC71A8", VA = "0x1CC71A8")]
		public static void TransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x1CC723C", Offset = "0x1CC723C", VA = "0x1CC723C")]
		public static void InverseTransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x1CC72D0", Offset = "0x1CC72D0", VA = "0x1CC72D0")]
		public static void TransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x1CC7364", Offset = "0x1CC7364", VA = "0x1CC7364")]
		public static void InverseTransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x1CC73F8", Offset = "0x1CC73F8", VA = "0x1CC73F8")]
		public static string ToOBJString(Mesh mesh, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x1CC7DE8", Offset = "0x1CC7DE8", VA = "0x1CC7DE8")]
		public static Mesh Copy(Mesh input)
		{
			return null;
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x1CC8018", Offset = "0x1CC8018", VA = "0x1CC8018")]
		public static void Triangulate(Vector2[] points, ref int[] output)
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x1CC86C8", Offset = "0x1CC86C8", VA = "0x1CC86C8")]
		public static void FlipTriangles(ref int[] triangles)
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x1CC3F04", Offset = "0x1CC3F04", VA = "0x1CC3F04")]
		public static void FlipFaces(TS_Mesh input)
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x1CC8750", Offset = "0x1CC8750", VA = "0x1CC8750")]
		public static void BreakMesh(Mesh input, bool keepNormals = true)
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x1CC8420", Offset = "0x1CC8420", VA = "0x1CC8420")]
		private static float Area(Vector2[] points, int maxCount)
		{
			return default(float);
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x1CC84B8", Offset = "0x1CC84B8", VA = "0x1CC84B8")]
		private static bool Snip(Vector2[] points, int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x1CC9280", Offset = "0x1CC9280", VA = "0x1CC9280")]
		private static bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x1CC92FC", Offset = "0x1CC92FC", VA = "0x1CC92FC")]
		public MeshUtility()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A0")]
	public class TS_Bounds
	{
		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 extents;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 max;

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 min;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 size;

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x1172CD4", Offset = "0x1172CD4", VA = "0x1172CD4")]
		public TS_Bounds()
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x1172D48", Offset = "0x1172D48", VA = "0x1172D48")]
		public TS_Bounds(Bounds bounds)
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x1172E28", Offset = "0x1172E28", VA = "0x1172E28")]
		public TS_Bounds(Vector3 c, Vector3 s)
		{
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x1172F18", Offset = "0x1172F18", VA = "0x1172F18")]
		public TS_Bounds(Vector3 min, Vector3 max, Vector3 center)
		{
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x117300C", Offset = "0x117300C", VA = "0x117300C")]
		public void CreateFromMinMax(Vector3 min, Vector3 max)
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x11730A8", Offset = "0x11730A8", VA = "0x11730A8")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006A1")]
	public class TS_Mesh
	{
		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4[] tangents;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color[] colors;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] uv;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2[] uv2;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2[] uv3;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2[] uv4;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] triangles;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int[]> subMeshes;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TS_Bounds bounds;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IndexFormat indexFormat;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool hasUpdate;

		[Token(Token = "0x17000587")]
		public int vertexCount
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x11730FC", Offset = "0x11730FC", VA = "0x11730FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x1173118", Offset = "0x1173118", VA = "0x1173118")]
			set
			{
			}
		}

		[Token(Token = "0x60026A3")]
		[Address(RVA = "0x117311C", Offset = "0x117311C", VA = "0x117311C")]
		public TS_Mesh()
		{
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x117338C", Offset = "0x117338C", VA = "0x117338C")]
		public TS_Mesh(Mesh mesh)
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x117384C", Offset = "0x117384C", VA = "0x117384C")]
		public void Clear()
		{
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x1173614", Offset = "0x1173614", VA = "0x1173614")]
		public void CreateFromMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x1173AB0", Offset = "0x1173AB0", VA = "0x1173AB0")]
		public void Combine(List<TS_Mesh> newMeshes, bool overwrite = false)
		{
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x1175104", Offset = "0x1175104", VA = "0x1175104")]
		public void Combine(TS_Mesh newMesh)
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x11758CC", Offset = "0x11758CC", VA = "0x11758CC")]
		public static TS_Mesh Copy(TS_Mesh input)
		{
			return null;
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x1175DB8", Offset = "0x1175DB8", VA = "0x1175DB8")]
		public void Absorb(TS_Mesh input)
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x11764E4", Offset = "0x11764E4", VA = "0x11764E4")]
		public void WriteMesh(ref Mesh input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006A2")]
	public class TS_Transform
	{
		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool setPosition;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool setRotation;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool setScale;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool setLocalPosition;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool setLocalRotation;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Transform _transform;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private float posX;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private float posY;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private float posZ;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[HideInInspector]
		private float scaleX;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private float scaleY;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		private float scaleZ;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleX;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleY;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleZ;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		private float rotX;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private float rotY;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[HideInInspector]
		private float rotZ;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private float rotW;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private float lposX;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private float lposY;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[HideInInspector]
		private float lposZ;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private float lrotX;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[HideInInspector]
		private float lrotY;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float lrotZ;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float lrotW;

		[Token(Token = "0x17000588")]
		public Vector3 position
		{
			[Token(Token = "0x60026AC")]
			[Address(RVA = "0x11767DC", Offset = "0x11767DC", VA = "0x11767DC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0x117682C", Offset = "0x117682C", VA = "0x117682C")]
			set
			{
			}
		}

		[Token(Token = "0x17000589")]
		public Quaternion rotation
		{
			[Token(Token = "0x60026AE")]
			[Address(RVA = "0x1176888", Offset = "0x1176888", VA = "0x1176888")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x1176904", Offset = "0x1176904", VA = "0x1176904")]
			set
			{
			}
		}

		[Token(Token = "0x1700058A")]
		public Vector3 scale
		{
			[Token(Token = "0x60026B0")]
			[Address(RVA = "0x117696C", Offset = "0x117696C", VA = "0x117696C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60026B1")]
			[Address(RVA = "0x11769BC", Offset = "0x11769BC", VA = "0x11769BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700058B")]
		public Vector3 lossyScale
		{
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x1176A14", Offset = "0x1176A14", VA = "0x1176A14")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0x1176A64", Offset = "0x1176A64", VA = "0x1176A64")]
			set
			{
			}
		}

		[Token(Token = "0x1700058C")]
		public Vector3 localPosition
		{
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0x1176ABC", Offset = "0x1176ABC", VA = "0x1176ABC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x1176B0C", Offset = "0x1176B0C", VA = "0x1176B0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700058D")]
		public Quaternion localRotation
		{
			[Token(Token = "0x60026B6")]
			[Address(RVA = "0x1176B68", Offset = "0x1176B68", VA = "0x1176B68")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60026B7")]
			[Address(RVA = "0x1176BE4", Offset = "0x1176BE4", VA = "0x1176BE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700058E")]
		public Transform transform
		{
			[Token(Token = "0x60026B8")]
			[Address(RVA = "0x1176C4C", Offset = "0x1176C4C", VA = "0x1176C4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x1176C54", Offset = "0x1176C54", VA = "0x1176C54")]
		public TS_Transform(Transform input)
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x1176D08", Offset = "0x1176D08", VA = "0x1176D08")]
		public void Update()
		{
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x1176CD8", Offset = "0x1176CD8", VA = "0x1176CD8")]
		public void SetTransform(Transform input)
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x1176EE0", Offset = "0x1176EE0", VA = "0x1176EE0")]
		public bool HasChange()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x1176F24", Offset = "0x1176F24", VA = "0x1176F24")]
		public bool HasPositionChange()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x1176FB4", Offset = "0x1176FB4", VA = "0x1176FB4")]
		public bool HasRotationChange()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x1177064", Offset = "0x1177064", VA = "0x1177064")]
		public bool HasScaleChange()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x11770F4", Offset = "0x11770F4", VA = "0x11770F4")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x1177194", Offset = "0x1177194", VA = "0x1177194")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026C2")]
		[Address(RVA = "0x11771E4", Offset = "0x11771E4", VA = "0x11771E4")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x1177230", Offset = "0x1177230", VA = "0x1177230")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026C4")]
		public T GetComponent<T>()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20006A3")]
	public static class TransformUtility
	{
		[Token(Token = "0x60026C5")]
		[Address(RVA = "0x114E6AC", Offset = "0x114E6AC", VA = "0x114E6AC")]
		public static Vector3 GetPosition(Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x114E6CC", Offset = "0x114E6CC", VA = "0x114E6CC")]
		public static Quaternion GetRotation(Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x114E74C", Offset = "0x114E74C", VA = "0x114E74C")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x114E7F4", Offset = "0x114E7F4", VA = "0x114E7F4")]
		public static void SetPosition(ref Matrix4x4 m, ref Vector3 p)
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x114E84C", Offset = "0x114E84C", VA = "0x114E84C")]
		public static void GetChildCount(Transform parent, ref int count)
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x114EAE8", Offset = "0x114EAE8", VA = "0x114EAE8")]
		public static bool IsParent(Transform child, Transform parent)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006A4")]
	public static class Utilities
	{
		[Token(Token = "0x60026CB")]
		public static T SerializableClone<T>(this T obj)
		{
			return (T)null;
		}

		[Token(Token = "0x60026CC")]
		public static void Shuffle<T>(this IList<T> list)
		{
		}

		[Token(Token = "0x60026CD")]
		public static void RemoveAtUnsorted<T>(this List<T> list, int i)
		{
		}

		[Token(Token = "0x60026CE")]
		public static T PopLast<T>(this IList<T> list)
		{
			return (T)null;
		}

		[Token(Token = "0x60026CF")]
		public static void Swap<T>(this IList<T> list, int left, int right)
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x122A470", Offset = "0x122A470", VA = "0x122A470")]
		public static void SafeInvoke(this Delegate del, params object[] parameters)
		{
		}

		[Token(Token = "0x60026D1")]
		public static T PopRandom<T>(this List<T> list)
		{
			return (T)null;
		}
	}
}
namespace Dreamteck.Splines
{
	[Token(Token = "0x20006A5")]
	public class BlankUser : SplineUser
	{
		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x145910C", Offset = "0x145910C", VA = "0x145910C")]
		private void Start()
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x1459110", Offset = "0x1459110", VA = "0x1459110", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x1459118", Offset = "0x1459118", VA = "0x1459118", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x1459120", Offset = "0x1459120", VA = "0x1459120", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x1459128", Offset = "0x1459128", VA = "0x1459128")]
		public BlankUser()
		{
		}
	}
	[Token(Token = "0x20006A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5F814", Offset = "0xB5F814")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5F814", Offset = "0xB5F814")]
	public class EdgeColliderGenerator : SplineUser
	{
		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		protected EdgeCollider2D edgeCollider;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected float lastUpdateTime;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool updateCollider;

		[Token(Token = "0x1700058F")]
		public float offset
		{
			[Token(Token = "0x60026D7")]
			[Address(RVA = "0x10F5D88", Offset = "0x10F5D88", VA = "0x10F5D88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026D8")]
			[Address(RVA = "0x10F5D90", Offset = "0x10F5D90", VA = "0x10F5D90")]
			set
			{
			}
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x10F5DB0", Offset = "0x10F5DB0", VA = "0x10F5DB0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x10F5E18", Offset = "0x10F5E18", VA = "0x10F5E18", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x10F5E20", Offset = "0x10F5E20", VA = "0x10F5E20", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x10F5E28", Offset = "0x10F5E28", VA = "0x10F5E28", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x10F5E30", Offset = "0x10F5E30", VA = "0x10F5E30", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x10F5E38", Offset = "0x10F5E38", VA = "0x10F5E38", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x10F5F08", Offset = "0x10F5F08", VA = "0x10F5F08", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x10F6088", Offset = "0x10F6088", VA = "0x10F6088", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x10F61D0", Offset = "0x10F61D0", VA = "0x10F61D0")]
		public EdgeColliderGenerator()
		{
		}
	}
	[Token(Token = "0x20006A7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5F898", Offset = "0xB5F898")]
	public class LengthCalculator : SplineUser
	{
		[Serializable]
		[Token(Token = "0x20006A8")]
		public class LengthEvent
		{
			[Token(Token = "0x20006A9")]
			public enum Type
			{
				[Token(Token = "0x40027B1")]
				Growing,
				[Token(Token = "0x40027B2")]
				Shrinking,
				[Token(Token = "0x40027B3")]
				Both
			}

			[Token(Token = "0x40027AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x40027AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float targetLength;

			[Token(Token = "0x40027AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent onChange;

			[Token(Token = "0x40027AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Type type;

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0xFD84F4", Offset = "0xFD84F4", VA = "0xFD84F4")]
			public LengthEvent()
			{
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xFD8574", Offset = "0xFD8574", VA = "0xFD8574")]
			public LengthEvent(Type t)
			{
			}

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0xFD8608", Offset = "0xFD8608", VA = "0xFD8608")]
			public void Check(float fromLength, float toLength)
			{
			}
		}

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public LengthEvent[] lengthEvents;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public float idealLength;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float _length;

		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float lastLength;

		[Token(Token = "0x17000590")]
		public float length
		{
			[Token(Token = "0x60026E2")]
			[Address(RVA = "0x10BDD08", Offset = "0x10BDD08", VA = "0x10BDD08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x10BDD10", Offset = "0x10BDD10", VA = "0x10BDD10", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x10BDDB4", Offset = "0x10BDDB4", VA = "0x10BDDB4", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x10BDE58", Offset = "0x10BDE58", VA = "0x10BDE58")]
		private void AddEvent(LengthEvent lengthEvent)
		{
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x10BDF44", Offset = "0x10BDF44", VA = "0x10BDF44")]
		public LengthCalculator()
		{
		}
	}
	[Token(Token = "0x20006AA")]
	public class MeshGenerator : SplineUser
	{
		[Token(Token = "0x20006AB")]
		public enum UVMode
		{
			[Token(Token = "0x40027D2")]
			Clip,
			[Token(Token = "0x40027D3")]
			UniformClip,
			[Token(Token = "0x40027D4")]
			Clamp,
			[Token(Token = "0x40027D5")]
			UniformClamp
		}

		[Token(Token = "0x20006AC")]
		public enum NormalMethod
		{
			[Token(Token = "0x40027D7")]
			Recalculate,
			[Token(Token = "0x40027D8")]
			SplineNormals
		}

		[Token(Token = "0x40027B4")]
		protected const int UNITY_16_VERTEX_LIMIT = 65535;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[SerializeField]
		[HideInInspector]
		private bool _baked;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		[SerializeField]
		[HideInInspector]
		private bool _markDynamic;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private Color _color;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _offset;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private NormalMethod _normalMethod;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private bool _calculateTangents;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		[SerializeField]
		[HideInInspector]
		private bool _useSplineSize;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
		[SerializeField]
		[HideInInspector]
		private bool _useSplineColor;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB74FC8", Offset = "0xB74FC8")]
		[SerializeField]
		private float _rotation;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		private bool _flipFaces;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[SerializeField]
		[HideInInspector]
		private bool _doubleSided;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		[SerializeField]
		[HideInInspector]
		private bool _rebuildCollider;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[HideInInspector]
		private UVMode _uvMode;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvScale;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvOffset;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		private float _uvRotation;

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[HideInInspector]
		private IndexFormat _meshIndexFormat;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		protected MeshCollider meshCollider;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		protected MeshFilter filter;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		protected MeshRenderer meshRenderer;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		protected TS_Mesh tsMesh;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		protected Mesh mesh;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public float colliderUpdateRate;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		protected bool updateCollider;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected float lastUpdateTime;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float vDist;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Vector2 uvs;

		[Token(Token = "0x17000591")]
		public float size
		{
			[Token(Token = "0x60026EA")]
			[Address(RVA = "0x1CC2A94", Offset = "0x1CC2A94", VA = "0x1CC2A94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026EB")]
			[Address(RVA = "0x1CC2A9C", Offset = "0x1CC2A9C", VA = "0x1CC2A9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000592")]
		public Color color
		{
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x1CC2ABC", Offset = "0x1CC2ABC", VA = "0x1CC2ABC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60026ED")]
			[Address(RVA = "0x1CC2AC8", Offset = "0x1CC2AC8", VA = "0x1CC2AC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000593")]
		public Vector3 offset
		{
			[Token(Token = "0x60026EE")]
			[Address(RVA = "0x1CC2B40", Offset = "0x1CC2B40", VA = "0x1CC2B40")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60026EF")]
			[Address(RVA = "0x1CC2B4C", Offset = "0x1CC2B4C", VA = "0x1CC2B4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000594")]
		public NormalMethod normalMethod
		{
			[Token(Token = "0x60026F0")]
			[Address(RVA = "0x1CC2BC0", Offset = "0x1CC2BC0", VA = "0x1CC2BC0")]
			get
			{
				return default(NormalMethod);
			}
			[Token(Token = "0x60026F1")]
			[Address(RVA = "0x1CC2BC8", Offset = "0x1CC2BC8", VA = "0x1CC2BC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000595")]
		public bool useSplineSize
		{
			[Token(Token = "0x60026F2")]
			[Address(RVA = "0x1CC2BE8", Offset = "0x1CC2BE8", VA = "0x1CC2BE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026F3")]
			[Address(RVA = "0x1CC2BF0", Offset = "0x1CC2BF0", VA = "0x1CC2BF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000596")]
		public bool useSplineColor
		{
			[Token(Token = "0x60026F4")]
			[Address(RVA = "0x1CC2C1C", Offset = "0x1CC2C1C", VA = "0x1CC2C1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026F5")]
			[Address(RVA = "0x1CC2C24", Offset = "0x1CC2C24", VA = "0x1CC2C24")]
			set
			{
			}
		}

		[Token(Token = "0x17000597")]
		public bool calculateTangents
		{
			[Token(Token = "0x60026F6")]
			[Address(RVA = "0x1CC2C50", Offset = "0x1CC2C50", VA = "0x1CC2C50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026F7")]
			[Address(RVA = "0x1CC2C58", Offset = "0x1CC2C58", VA = "0x1CC2C58")]
			set
			{
			}
		}

		[Token(Token = "0x17000598")]
		public float rotation
		{
			[Token(Token = "0x60026F8")]
			[Address(RVA = "0x1CC2C84", Offset = "0x1CC2C84", VA = "0x1CC2C84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026F9")]
			[Address(RVA = "0x1CC2C8C", Offset = "0x1CC2C8C", VA = "0x1CC2C8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000599")]
		public bool flipFaces
		{
			[Token(Token = "0x60026FA")]
			[Address(RVA = "0x1CC2CAC", Offset = "0x1CC2CAC", VA = "0x1CC2CAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026FB")]
			[Address(RVA = "0x1CC2CB4", Offset = "0x1CC2CB4", VA = "0x1CC2CB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700059A")]
		public bool doubleSided
		{
			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x1CC2CE0", Offset = "0x1CC2CE0", VA = "0x1CC2CE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026FD")]
			[Address(RVA = "0x1CC2CE8", Offset = "0x1CC2CE8", VA = "0x1CC2CE8")]
			set
			{
			}
		}

		[Token(Token = "0x1700059B")]
		public UVMode uvMode
		{
			[Token(Token = "0x60026FE")]
			[Address(RVA = "0x1CC2D14", Offset = "0x1CC2D14", VA = "0x1CC2D14")]
			get
			{
				return default(UVMode);
			}
			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x1CC2D1C", Offset = "0x1CC2D1C", VA = "0x1CC2D1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700059C")]
		public Vector2 uvScale
		{
			[Token(Token = "0x6002700")]
			[Address(RVA = "0x1CC2D3C", Offset = "0x1CC2D3C", VA = "0x1CC2D3C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002701")]
			[Address(RVA = "0x1CC2D44", Offset = "0x1CC2D44", VA = "0x1CC2D44")]
			set
			{
			}
		}

		[Token(Token = "0x1700059D")]
		public Vector2 uvOffset
		{
			[Token(Token = "0x6002702")]
			[Address(RVA = "0x1CC2D80", Offset = "0x1CC2D80", VA = "0x1CC2D80")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002703")]
			[Address(RVA = "0x1CC2D8C", Offset = "0x1CC2D8C", VA = "0x1CC2D8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700059E")]
		public float uvRotation
		{
			[Token(Token = "0x6002704")]
			[Address(RVA = "0x1CC2DD0", Offset = "0x1CC2DD0", VA = "0x1CC2DD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002705")]
			[Address(RVA = "0x1CC2DD8", Offset = "0x1CC2DD8", VA = "0x1CC2DD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700059F")]
		public IndexFormat meshIndexFormat
		{
			[Token(Token = "0x6002706")]
			[Address(RVA = "0x1CC2DF8", Offset = "0x1CC2DF8", VA = "0x1CC2DF8")]
			get
			{
				return default(IndexFormat);
			}
			[Token(Token = "0x6002707")]
			[Address(RVA = "0x1CC2E00", Offset = "0x1CC2E00", VA = "0x1CC2E00")]
			set
			{
			}
		}

		[Token(Token = "0x170005A0")]
		public bool baked
		{
			[Token(Token = "0x6002708")]
			[Address(RVA = "0x1CC2EF0", Offset = "0x1CC2EF0", VA = "0x1CC2EF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A1")]
		public bool markDynamic
		{
			[Token(Token = "0x6002709")]
			[Address(RVA = "0x1CC2EF8", Offset = "0x1CC2EF8", VA = "0x1CC2EF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600270A")]
			[Address(RVA = "0x1CC2F00", Offset = "0x1CC2F00", VA = "0x1CC2F00")]
			set
			{
			}
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x1CC2F4C", Offset = "0x1CC2F4C", VA = "0x1CC2F4C", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x1CC306C", Offset = "0x1CC306C", VA = "0x1CC306C", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x1CC3074", Offset = "0x1CC3074", VA = "0x1CC3074", Slot = "12")]
		public override void Rebuild()
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x1CC3088", Offset = "0x1CC3088", VA = "0x1CC3088", Slot = "13")]
		public override void RebuildImmediate()
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x1CC309C", Offset = "0x1CC309C", VA = "0x1CC309C", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x1CC30A4", Offset = "0x1CC30A4", VA = "0x1CC30A4", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x1CC30AC", Offset = "0x1CC30AC", VA = "0x1CC30AC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x1CC31E0", Offset = "0x1CC31E0", VA = "0x1CC31E0")]
		public void UpdateCollider()
		{
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x1CC32F4", Offset = "0x1CC32F4", VA = "0x1CC32F4", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x1CC33EC", Offset = "0x1CC33EC", VA = "0x1CC33EC", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x1CC3420", Offset = "0x1CC3420", VA = "0x1CC3420", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x1CC3454", Offset = "0x1CC3454", VA = "0x1CC3454", Slot = "22")]
		protected virtual void BuildMesh()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x1CC3458", Offset = "0x1CC3458", VA = "0x1CC3458", Slot = "23")]
		protected virtual void WriteMesh()
		{
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x1CC4740", Offset = "0x1CC4740", VA = "0x1CC4740", Slot = "24")]
		protected virtual void AllocateMesh(int vertexCount, int trisCount)
		{
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x1CC4914", Offset = "0x1CC4914", VA = "0x1CC4914")]
		protected void ResetUVDistance()
		{
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x1CC4974", Offset = "0x1CC4974", VA = "0x1CC4974")]
		protected void AddUVDistance(int sampleIndex)
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x1CC49FC", Offset = "0x1CC49FC", VA = "0x1CC49FC")]
		protected void CalculateUVs(double percent, float u)
		{
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x1CC4B9C", Offset = "0x1CC4B9C", VA = "0x1CC4B9C")]
		protected float GetBaseSize(SplineSample sample)
		{
			return default(float);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x1CC4BC4", Offset = "0x1CC4BC4", VA = "0x1CC4BC4")]
		protected Color GetBaseColor(SplineSample sample)
		{
			return default(Color);
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x1CC4BF8", Offset = "0x1CC4BF8", VA = "0x1CC4BF8", Slot = "25")]
		protected virtual void CreateMesh()
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x1CC2E40", Offset = "0x1CC2E40", VA = "0x1CC2E40")]
		private void RefreshMesh()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x1CC4CB8", Offset = "0x1CC4CB8", VA = "0x1CC4CB8")]
		public MeshGenerator()
		{
		}
	}
	[Token(Token = "0x20006AD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5F8D0", Offset = "0xB5F8D0")]
	public class Node : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006AE")]
		public class Connection
		{
			[Token(Token = "0x40027E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool invertTangents;

			[Token(Token = "0x40027E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private int _pointIndex;

			[Token(Token = "0x40027E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineComputer _computer;

			[Token(Token = "0x40027E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			internal SplinePoint point;

			[Token(Token = "0x170005A5")]
			public SplineComputer spline
			{
				[Token(Token = "0x600273E")]
				[Address(RVA = "0xFB5794", Offset = "0xFB5794", VA = "0xFB5794")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A6")]
			public int pointIndex
			{
				[Token(Token = "0x600273F")]
				[Address(RVA = "0xFB579C", Offset = "0xFB579C", VA = "0xFB579C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170005A7")]
			internal bool isValid
			{
				[Token(Token = "0x6002740")]
				[Address(RVA = "0xFB57A4", Offset = "0xFB57A4", VA = "0xFB57A4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002741")]
			[Address(RVA = "0xFB5840", Offset = "0xFB5840", VA = "0xFB5840")]
			internal Connection(SplineComputer comp, int index, SplinePoint inputPoint)
			{
			}
		}

		[Token(Token = "0x20006AF")]
		public enum Type
		{
			[Token(Token = "0x40027E7")]
			Smooth,
			[Token(Token = "0x40027E8")]
			Free
		}

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Type type;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		protected Connection[] connections;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private bool _transformSize;

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		[HideInInspector]
		private bool _transformNormals;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		[HideInInspector]
		private bool _transformTangents;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastPosition;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastScale;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion lastRotation;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform trs;

		[Token(Token = "0x170005A2")]
		public bool transformNormals
		{
			[Token(Token = "0x6002722")]
			[Address(RVA = "0x1BC94B0", Offset = "0x1BC94B0", VA = "0x1BC94B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002723")]
			[Address(RVA = "0x1BC94B8", Offset = "0x1BC94B8", VA = "0x1BC94B8")]
			set
			{
			}
		}

		[Token(Token = "0x170005A3")]
		public bool transformSize
		{
			[Token(Token = "0x6002724")]
			[Address(RVA = "0x1BC9618", Offset = "0x1BC9618", VA = "0x1BC9618")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002725")]
			[Address(RVA = "0x1BC9620", Offset = "0x1BC9620", VA = "0x1BC9620")]
			set
			{
			}
		}

		[Token(Token = "0x170005A4")]
		public bool transformTangents
		{
			[Token(Token = "0x6002726")]
			[Address(RVA = "0x1BC9644", Offset = "0x1BC9644", VA = "0x1BC9644")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002727")]
			[Address(RVA = "0x1BC964C", Offset = "0x1BC964C", VA = "0x1BC964C")]
			set
			{
			}
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x1BC9670", Offset = "0x1BC9670", VA = "0x1BC9670")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x1BC9710", Offset = "0x1BC9710", VA = "0x1BC9710")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x1BC9754", Offset = "0x1BC9754", VA = "0x1BC9754")]
		private void Update()
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x1BC9758", Offset = "0x1BC9758", VA = "0x1BC9758")]
		private bool TransformChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x1BC96A8", Offset = "0x1BC96A8", VA = "0x1BC96A8")]
		private void SampleTransform()
		{
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x1BC9714", Offset = "0x1BC9714", VA = "0x1BC9714")]
		private void Run()
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x1BC9BF0", Offset = "0x1BC9BF0", VA = "0x1BC9BF0")]
		public SplinePoint GetPoint(int connectionIndex, bool swapTangents)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x1BC9E60", Offset = "0x1BC9E60", VA = "0x1BC9E60")]
		public void SetPoint(int connectionIndex, SplinePoint worldPoint, bool swappedTangents)
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x1BCA344", Offset = "0x1BCA344", VA = "0x1BCA344")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x1BCA348", Offset = "0x1BCA348", VA = "0x1BCA348")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x1BC9854", Offset = "0x1BC9854", VA = "0x1BC9854")]
		public void UpdateConnectedComputers([Optional] SplineComputer excludeComputer)
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x1BCA618", Offset = "0x1BCA618", VA = "0x1BCA618")]
		public void UpdatePoint(SplineComputer computer, int pointIndex, SplinePoint point, bool updatePosition = true)
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x1BC94DC", Offset = "0x1BC94DC", VA = "0x1BC94DC")]
		public void UpdatePoints()
		{
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x1BCA764", Offset = "0x1BCA764", VA = "0x1BCA764")]
		protected void RemoveInvalidConnections()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x1BCA7F8", Offset = "0x1BCA7F8", VA = "0x1BCA7F8", Slot = "4")]
		public virtual void AddConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x1BCA204", Offset = "0x1BCA204", VA = "0x1BCA204")]
		protected SplinePoint PointToLocal(SplinePoint worldPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x1BC9D14", Offset = "0x1BC9D14", VA = "0x1BC9D14")]
		protected SplinePoint PointToWorld(SplinePoint localPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x1BCABE4", Offset = "0x1BCABE4", VA = "0x1BCABE4", Slot = "5")]
		public virtual void RemoveConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x1BCA47C", Offset = "0x1BCA47C", VA = "0x1BCA47C")]
		private void RemoveConnection(int index)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x1BCACE0", Offset = "0x1BCACE0", VA = "0x1BCACE0", Slot = "6")]
		public virtual bool HasConnection(SplineComputer computer, int pointIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x1BCAE34", Offset = "0x1BCAE34", VA = "0x1BCAE34")]
		public Connection[] GetConnections()
		{
			return null;
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x1BCAE3C", Offset = "0x1BCAE3C", VA = "0x1BCAE3C")]
		public Node()
		{
		}
	}
	[Token(Token = "0x20006B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5F91C", Offset = "0xB5F91C")]
	public class ObjectBender : SplineUser
	{
		[Token(Token = "0x20006B1")]
		public enum Axis
		{
			[Token(Token = "0x40027F5")]
			X,
			[Token(Token = "0x40027F6")]
			Y,
			[Token(Token = "0x40027F7")]
			Z
		}

		[Token(Token = "0x20006B2")]
		public enum NormalMode
		{
			[Token(Token = "0x40027F9")]
			Spline,
			[Token(Token = "0x40027FA")]
			Auto,
			[Token(Token = "0x40027FB")]
			Custom
		}

		[Token(Token = "0x20006B3")]
		public enum ForwardMode
		{
			[Token(Token = "0x40027FD")]
			Spline,
			[Token(Token = "0x40027FE")]
			Custom
		}

		[Serializable]
		[Token(Token = "0x20006B4")]
		public class BendProperty
		{
			[Token(Token = "0x40027FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4002800")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TS_Transform transform;

			[Token(Token = "0x4002801")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool applyRotation;

			[Token(Token = "0x4002802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool applyScale;

			[Token(Token = "0x4002803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool generateLightmapUVs;

			[Token(Token = "0x4002804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			[SerializeField]
			[HideInInspector]
			private bool _bendMesh;

			[Token(Token = "0x4002805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private bool _bendSpline;

			[Token(Token = "0x4002806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[SerializeField]
			[HideInInspector]
			private bool _bendCollider;

			[Token(Token = "0x4002807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float colliderUpdateDue;

			[Token(Token = "0x4002808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float colliderUpdateRate;

			[Token(Token = "0x4002809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool updateCollider;

			[Token(Token = "0x400280A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 originalPosition;

			[Token(Token = "0x400280B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 originalScale;

			[Token(Token = "0x400280C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Quaternion originalRotation;

			[Token(Token = "0x400280D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Quaternion parentRotation;

			[Token(Token = "0x400280E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Vector3 positionPercent;

			[Token(Token = "0x400280F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector3[] vertexPercents;

			[Token(Token = "0x4002810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector3[] normals;

			[Token(Token = "0x4002811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Vector3[] colliderVertexPercents;

			[Token(Token = "0x4002812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Vector3[] colliderNormals;

			[Token(Token = "0x4002813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalMesh;

			[Token(Token = "0x4002814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalColliderMesh;

			[Token(Token = "0x4002815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Spline _originalSpline;

			[Token(Token = "0x4002816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationMesh;

			[Token(Token = "0x4002817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationColliderMesh;

			[Token(Token = "0x4002818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Spline destinationSpline;

			[Token(Token = "0x4002819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public TS_Mesh _editMesh;

			[Token(Token = "0x400281A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public TS_Mesh _editColliderMesh;

			[Token(Token = "0x400281B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public MeshFilter filter;

			[Token(Token = "0x400281C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public MeshCollider collider;

			[Token(Token = "0x400281D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public SplineComputer splineComputer;

			[Token(Token = "0x400281E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Vector3[] splinePointPercents;

			[Token(Token = "0x400281F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public Vector3[] primaryTangentPercents;

			[Token(Token = "0x4002820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Vector3[] secondaryTangentPercents;

			[Token(Token = "0x4002821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[SerializeField]
			[HideInInspector]
			private bool parent;

			[Token(Token = "0x170005AE")]
			public bool isValid
			{
				[Token(Token = "0x6002760")]
				[Address(RVA = "0xFB5C04", Offset = "0xFB5C04", VA = "0xFB5C04")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005AF")]
			public bool bendMesh
			{
				[Token(Token = "0x6002761")]
				[Address(RVA = "0xFB5C88", Offset = "0xFB5C88", VA = "0xFB5C88")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002762")]
				[Address(RVA = "0xFB5C90", Offset = "0xFB5C90", VA = "0xFB5C90")]
				set
				{
				}
			}

			[Token(Token = "0x170005B0")]
			public bool bendCollider
			{
				[Token(Token = "0x6002763")]
				[Address(RVA = "0xFB5ECC", Offset = "0xFB5ECC", VA = "0xFB5ECC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002764")]
				[Address(RVA = "0xFB5ED4", Offset = "0xFB5ED4", VA = "0xFB5ED4")]
				set
				{
				}
			}

			[Token(Token = "0x170005B1")]
			public bool bendSpline
			{
				[Token(Token = "0x6002765")]
				[Address(RVA = "0xFB60DC", Offset = "0xFB60DC", VA = "0xFB60DC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002766")]
				[Address(RVA = "0xFB60E4", Offset = "0xFB60E4", VA = "0xFB60E4")]
				set
				{
				}
			}

			[Token(Token = "0x170005B2")]
			public TS_Mesh editMesh
			{
				[Token(Token = "0x6002767")]
				[Address(RVA = "0xFB60F0", Offset = "0xFB60F0", VA = "0xFB60F0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B3")]
			public TS_Mesh editColliderMesh
			{
				[Token(Token = "0x6002768")]
				[Address(RVA = "0xFB620C", Offset = "0xFB620C", VA = "0xFB620C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B4")]
			public Spline originalSpline
			{
				[Token(Token = "0x6002769")]
				[Address(RVA = "0xFB6358", Offset = "0xFB6358", VA = "0xFB6358")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005B5")]
			public bool isParent
			{
				[Token(Token = "0x600276A")]
				[Address(RVA = "0xFB64B8", Offset = "0xFB64B8", VA = "0xFB64B8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600276B")]
			[Address(RVA = "0xFB64C0", Offset = "0xFB64C0", VA = "0xFB64C0")]
			public BendProperty(Transform t, bool parent = false)
			{
			}

			[Token(Token = "0x600276C")]
			[Address(RVA = "0xFB6C24", Offset = "0xFB6C24", VA = "0xFB6C24")]
			public void Revert()
			{
			}

			[Token(Token = "0x600276D")]
			[Address(RVA = "0xFB5E34", Offset = "0xFB5E34", VA = "0xFB5E34")]
			private void RevertMesh()
			{
			}

			[Token(Token = "0x600276E")]
			[Address(RVA = "0xFB6CE8", Offset = "0xFB6CE8", VA = "0xFB6CE8")]
			private void RevertTransform()
			{
			}

			[Token(Token = "0x600276F")]
			[Address(RVA = "0xFB6044", Offset = "0xFB6044", VA = "0xFB6044")]
			private void RevertCollider()
			{
			}

			[Token(Token = "0x6002770")]
			[Address(RVA = "0xFB6D6C", Offset = "0xFB6D6C", VA = "0xFB6D6C")]
			public void Apply(bool applyTransform)
			{
			}

			[Token(Token = "0x6002771")]
			[Address(RVA = "0xFB70C8", Offset = "0xFB70C8", VA = "0xFB70C8")]
			public void Update()
			{
			}

			[Token(Token = "0x6002772")]
			[Address(RVA = "0xFB6EF4", Offset = "0xFB6EF4", VA = "0xFB6EF4")]
			private void ApplyMesh()
			{
			}

			[Token(Token = "0x6002773")]
			[Address(RVA = "0xFB7114", Offset = "0xFB7114", VA = "0xFB7114")]
			private void ApplyCollider()
			{
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0xFB7098", Offset = "0xFB7098", VA = "0xFB7098")]
			private void ApplySpline()
			{
			}
		}

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[SerializeField]
		[HideInInspector]
		private bool _bend;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public BendProperty[] bendProperties;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private bool _parentIsTheSpline;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private TS_Bounds bounds;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private NormalMode _normalMode;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private ForwardMode _forwardMode;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB755B0", Offset = "0xB755B0")]
		private Vector3 _customNormal;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _customForward;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Quaternion bendRotation;

		[Token(Token = "0x170005A8")]
		public bool bend
		{
			[Token(Token = "0x6002742")]
			[Address(RVA = "0x1BD1CC8", Offset = "0x1BD1CC8", VA = "0x1BD1CC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002743")]
			[Address(RVA = "0x1BD1CD0", Offset = "0x1BD1CD0", VA = "0x1BD1CD0")]
			set
			{
			}
		}

		[Token(Token = "0x170005A9")]
		public Axis axis
		{
			[Token(Token = "0x6002744")]
			[Address(RVA = "0x1BD1F58", Offset = "0x1BD1F58", VA = "0x1BD1F58")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6002745")]
			[Address(RVA = "0x1BD1F60", Offset = "0x1BD1F60", VA = "0x1BD1F60")]
			set
			{
			}
		}

		[Token(Token = "0x170005AA")]
		public NormalMode upMode
		{
			[Token(Token = "0x6002746")]
			[Address(RVA = "0x1BD2018", Offset = "0x1BD2018", VA = "0x1BD2018")]
			get
			{
				return default(NormalMode);
			}
			[Token(Token = "0x6002747")]
			[Address(RVA = "0x1BD2020", Offset = "0x1BD2020", VA = "0x1BD2020")]
			set
			{
			}
		}

		[Token(Token = "0x170005AB")]
		public Vector3 customNormal
		{
			[Token(Token = "0x6002748")]
			[Address(RVA = "0x1BD20D0", Offset = "0x1BD20D0", VA = "0x1BD20D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002749")]
			[Address(RVA = "0x1BD20DC", Offset = "0x1BD20DC", VA = "0x1BD20DC")]
			set
			{
			}
		}

		[Token(Token = "0x170005AC")]
		public ForwardMode forwardMode
		{
			[Token(Token = "0x600274A")]
			[Address(RVA = "0x1BD21BC", Offset = "0x1BD21BC", VA = "0x1BD21BC")]
			get
			{
				return default(ForwardMode);
			}
			[Token(Token = "0x600274B")]
			[Address(RVA = "0x1BD21C4", Offset = "0x1BD21C4", VA = "0x1BD21C4")]
			set
			{
			}
		}

		[Token(Token = "0x170005AD")]
		public Vector3 customForward
		{
			[Token(Token = "0x600274C")]
			[Address(RVA = "0x1BD2274", Offset = "0x1BD2274", VA = "0x1BD2274")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600274D")]
			[Address(RVA = "0x1BD2280", Offset = "0x1BD2280", VA = "0x1BD2280")]
			set
			{
			}
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x1BD2360", Offset = "0x1BD2360", VA = "0x1BD2360")]
		private void GetTransformsRecursively(Transform current, ref List<Transform> transformList)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x1BD262C", Offset = "0x1BD262C", VA = "0x1BD262C")]
		private void GetObjects()
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x1BD2B90", Offset = "0x1BD2B90", VA = "0x1BD2B90")]
		public TS_Bounds GetBounds()
		{
			return null;
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x1BD27F8", Offset = "0x1BD27F8", VA = "0x1BD27F8")]
		private void CreateProperty(ref BendProperty property, Transform t)
		{
		}

		[Token(Token = "0x6002752")]
		[Address(RVA = "0x1BD2C54", Offset = "0x1BD2C54", VA = "0x1BD2C54")]
		private void CalculateBounds()
		{
		}

		[Token(Token = "0x6002753")]
		[Address(RVA = "0x1BD2DD8", Offset = "0x1BD2DD8", VA = "0x1BD2DD8")]
		private void CalculatePropertyBounds(ref BendProperty property)
		{
		}

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x1BD33EC", Offset = "0x1BD33EC", VA = "0x1BD33EC")]
		public void CalculatePercents(BendProperty property)
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x1BD1EEC", Offset = "0x1BD1EEC", VA = "0x1BD1EEC")]
		private void Revert()
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x1BD1D3C", Offset = "0x1BD1D3C", VA = "0x1BD1D3C")]
		public void UpdateReferences()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x1BD3A70", Offset = "0x1BD3A70", VA = "0x1BD3A70")]
		private void GetevalResult(Vector3 percentage)
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x1BD394C", Offset = "0x1BD394C", VA = "0x1BD394C")]
		private Vector3 GetPercentage(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x1BD4000", Offset = "0x1BD4000", VA = "0x1BD4000", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x1BD39EC", Offset = "0x1BD39EC", VA = "0x1BD39EC")]
		private void Bend()
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x1BD403C", Offset = "0x1BD403C", VA = "0x1BD403C")]
		public void BendObject(BendProperty p)
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x1BD45B4", Offset = "0x1BD45B4", VA = "0x1BD45B4")]
		private void BendMesh(Vector3[] vertexPercents, Vector3[] originalNormals, TS_Mesh mesh, Matrix4x4 worldToLocalMatrix)
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x1BD47B4", Offset = "0x1BD47B4", VA = "0x1BD47B4", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x1BD48F8", Offset = "0x1BD48F8", VA = "0x1BD48F8", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x1BD496C", Offset = "0x1BD496C", VA = "0x1BD496C")]
		public ObjectBender()
		{
		}
	}
	[Token(Token = "0x20006B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5F954", Offset = "0xB5F954")]
	public class ObjectController : SplineUser
	{
		[Serializable]
		[Token(Token = "0x20006B6")]
		internal class ObjectControl
		{
			[Token(Token = "0x400283D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x400283E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x400283F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x4002840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 scale;

			[Token(Token = "0x4002841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool active;

			[Token(Token = "0x4002842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 baseScale;

			[Token(Token = "0x170005C9")]
			public bool isNull
			{
				[Token(Token = "0x60027A7")]
				[Address(RVA = "0xFB74D8", Offset = "0xFB74D8", VA = "0xFB74D8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005CA")]
			public Transform transform
			{
				[Token(Token = "0x60027A8")]
				[Address(RVA = "0xFB7544", Offset = "0xFB7544", VA = "0xFB7544")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0xFB75D8", Offset = "0xFB75D8", VA = "0xFB75D8")]
			public ObjectControl(GameObject input)
			{
			}

			[Token(Token = "0x60027AA")]
			[Address(RVA = "0xFB7690", Offset = "0xFB7690", VA = "0xFB7690")]
			public void Destroy()
			{
			}

			[Token(Token = "0x60027AB")]
			[Address(RVA = "0xFB7740", Offset = "0xFB7740", VA = "0xFB7740")]
			public void DestroyImmediate()
			{
			}

			[Token(Token = "0x60027AC")]
			[Address(RVA = "0xFB77F0", Offset = "0xFB77F0", VA = "0xFB77F0")]
			public void Apply()
			{
			}
		}

		[Token(Token = "0x20006B7")]
		public enum ObjectMethod
		{
			[Token(Token = "0x4002844")]
			Instantiate,
			[Token(Token = "0x4002845")]
			GetChildren
		}

		[Token(Token = "0x20006B8")]
		public enum Positioning
		{
			[Token(Token = "0x4002847")]
			Stretch,
			[Token(Token = "0x4002848")]
			Clip
		}

		[Token(Token = "0x20006B9")]
		public enum Iteration
		{
			[Token(Token = "0x400284A")]
			Ordered,
			[Token(Token = "0x400284B")]
			Random
		}

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB5F98C", Offset = "0xB5F98C")]
		private sealed class <InstantiateAllWithDelay>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400284C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400284D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400284E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectController <>4__this;

			[Token(Token = "0x400284F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170005CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027B0")]
				[Address(RVA = "0xFB7488", Offset = "0xFB7488", VA = "0xFB7488", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027B2")]
				[Address(RVA = "0xFB74D0", Offset = "0xFB74D0", VA = "0xFB74D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027AD")]
			[Address(RVA = "0xFB730C", Offset = "0xFB730C", VA = "0xFB730C")]
			[DebuggerHidden]
			public <InstantiateAllWithDelay>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x60027AE")]
			[Address(RVA = "0xFB7338", Offset = "0xFB7338", VA = "0xFB7338", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027AF")]
			[Address(RVA = "0xFB733C", Offset = "0xFB733C", VA = "0xFB733C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027B1")]
			[Address(RVA = "0xFB7490", Offset = "0xFB7490", VA = "0xFB7490", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		public GameObject[] objects;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private float _evaluateOffset;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[HideInInspector]
		private int _spawnCount;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private Positioning _objectPositioning;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minOffset;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxOffset;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[HideInInspector]
		private bool _offsetUseWorldCoords;

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minRotation;

		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxRotation;

		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformScaleLerp;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minScaleMultiplier;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxScaleMultiplier;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private bool _shellOffset;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		[SerializeField]
		[HideInInspector]
		private bool _applyRotation;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
		[SerializeField]
		[HideInInspector]
		private bool _rotateByOffset;

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
		[SerializeField]
		[HideInInspector]
		private bool _applyScale;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private ObjectMethod _objectMethod;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		public bool delayedSpawn;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public float spawnDelay;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private int lastChildCount;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private ObjectControl[] spawned;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private System.Random offsetRandomizer;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private System.Random shellRandomizer;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private System.Random rotationRandomizer;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private System.Random scaleRandomizer;

		[Token(Token = "0x170005B6")]
		public ObjectMethod objectMethod
		{
			[Token(Token = "0x6002775")]
			[Address(RVA = "0x1BD4A18", Offset = "0x1BD4A18", VA = "0x1BD4A18")]
			get
			{
				return default(ObjectMethod);
			}
			[Token(Token = "0x6002776")]
			[Address(RVA = "0x1BD4A20", Offset = "0x1BD4A20", VA = "0x1BD4A20")]
			set
			{
			}
		}

		[Token(Token = "0x170005B7")]
		public int spawnCount
		{
			[Token(Token = "0x6002777")]
			[Address(RVA = "0x1BD4AEC", Offset = "0x1BD4AEC", VA = "0x1BD4AEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002778")]
			[Address(RVA = "0x1BD4AF4", Offset = "0x1BD4AF4", VA = "0x1BD4AF4")]
			set
			{
			}
		}

		[Token(Token = "0x170005B8")]
		public Positioning objectPositioning
		{
			[Token(Token = "0x6002779")]
			[Address(RVA = "0x1BD4D94", Offset = "0x1BD4D94", VA = "0x1BD4D94")]
			get
			{
				return default(Positioning);
			}
			[Token(Token = "0x600277A")]
			[Address(RVA = "0x1BD4D9C", Offset = "0x1BD4D9C", VA = "0x1BD4D9C")]
			set
			{
			}
		}

		[Token(Token = "0x170005B9")]
		public Iteration iteration
		{
			[Token(Token = "0x600277B")]
			[Address(RVA = "0x1BD4DBC", Offset = "0x1BD4DBC", VA = "0x1BD4DBC")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x600277C")]
			[Address(RVA = "0x1BD4DC4", Offset = "0x1BD4DC4", VA = "0x1BD4DC4")]
			set
			{
			}
		}

		[Token(Token = "0x170005BA")]
		public int randomSeed
		{
			[Token(Token = "0x600277D")]
			[Address(RVA = "0x1BD4DE4", Offset = "0x1BD4DE4", VA = "0x1BD4DE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600277E")]
			[Address(RVA = "0x1BD4DEC", Offset = "0x1BD4DEC", VA = "0x1BD4DEC")]
			set
			{
			}
		}

		[Token(Token = "0x170005BB")]
		public Vector3 minOffset
		{
			[Token(Token = "0x600277F")]
			[Address(RVA = "0x1BD4E0C", Offset = "0x1BD4E0C", VA = "0x1BD4E0C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002780")]
			[Address(RVA = "0x1BD4E18", Offset = "0x1BD4E18", VA = "0x1BD4E18")]
			set
			{
			}
		}

		[Token(Token = "0x170005BC")]
		public Vector3 maxOffset
		{
			[Token(Token = "0x6002781")]
			[Address(RVA = "0x1BD4E8C", Offset = "0x1BD4E8C", VA = "0x1BD4E8C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002782")]
			[Address(RVA = "0x1BD4E98", Offset = "0x1BD4E98", VA = "0x1BD4E98")]
			set
			{
			}
		}

		[Token(Token = "0x170005BD")]
		public bool offsetUseWorldCoords
		{
			[Token(Token = "0x6002783")]
			[Address(RVA = "0x1BD4F0C", Offset = "0x1BD4F0C", VA = "0x1BD4F0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002784")]
			[Address(RVA = "0x1BD4F14", Offset = "0x1BD4F14", VA = "0x1BD4F14")]
			set
			{
			}
		}

		[Token(Token = "0x170005BE")]
		public Vector3 minRotation
		{
			[Token(Token = "0x6002785")]
			[Address(RVA = "0x1BD4F40", Offset = "0x1BD4F40", VA = "0x1BD4F40")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002786")]
			[Address(RVA = "0x1BD4F50", Offset = "0x1BD4F50", VA = "0x1BD4F50")]
			set
			{
			}
		}

		[Token(Token = "0x170005BF")]
		public Vector3 maxRotation
		{
			[Token(Token = "0x6002787")]
			[Address(RVA = "0x1BD4FCC", Offset = "0x1BD4FCC", VA = "0x1BD4FCC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002788")]
			[Address(RVA = "0x1BD4FDC", Offset = "0x1BD4FDC", VA = "0x1BD4FDC")]
			set
			{
			}
		}

		[Token(Token = "0x170005C0")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x6002789")]
			[Address(RVA = "0x1BD5058", Offset = "0x1BD5058", VA = "0x1BD5058")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600278A")]
			[Address(RVA = "0x1BD508C", Offset = "0x1BD508C", VA = "0x1BD508C")]
			set
			{
			}
		}

		[Token(Token = "0x170005C1")]
		public Vector3 minScaleMultiplier
		{
			[Token(Token = "0x600278B")]
			[Address(RVA = "0x1BD5138", Offset = "0x1BD5138", VA = "0x1BD5138")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600278C")]
			[Address(RVA = "0x1BD5148", Offset = "0x1BD5148", VA = "0x1BD5148")]
			set
			{
			}
		}

		[Token(Token = "0x170005C2")]
		public Vector3 maxScaleMultiplier
		{
			[Token(Token = "0x600278D")]
			[Address(RVA = "0x1BD51C4", Offset = "0x1BD51C4", VA = "0x1BD51C4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600278E")]
			[Address(RVA = "0x1BD51D4", Offset = "0x1BD51D4", VA = "0x1BD51D4")]
			set
			{
			}
		}

		[Token(Token = "0x170005C3")]
		public bool uniformScaleLerp
		{
			[Token(Token = "0x600278F")]
			[Address(RVA = "0x1BD5250", Offset = "0x1BD5250", VA = "0x1BD5250")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002790")]
			[Address(RVA = "0x1BD5258", Offset = "0x1BD5258", VA = "0x1BD5258")]
			set
			{
			}
		}

		[Token(Token = "0x170005C4")]
		public bool shellOffset
		{
			[Token(Token = "0x6002791")]
			[Address(RVA = "0x1BD5284", Offset = "0x1BD5284", VA = "0x1BD5284")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002792")]
			[Address(RVA = "0x1BD528C", Offset = "0x1BD528C", VA = "0x1BD528C")]
			set
			{
			}
		}

		[Token(Token = "0x170005C5")]
		public bool applyRotation
		{
			[Token(Token = "0x6002793")]
			[Address(RVA = "0x1BD52B8", Offset = "0x1BD52B8", VA = "0x1BD52B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002794")]
			[Address(RVA = "0x1BD52C0", Offset = "0x1BD52C0", VA = "0x1BD52C0")]
			set
			{
			}
		}

		[Token(Token = "0x170005C6")]
		public bool rotateByOffset
		{
			[Token(Token = "0x6002795")]
			[Address(RVA = "0x1BD52EC", Offset = "0x1BD52EC", VA = "0x1BD52EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002796")]
			[Address(RVA = "0x1BD52F4", Offset = "0x1BD52F4", VA = "0x1BD52F4")]
			set
			{
			}
		}

		[Token(Token = "0x170005C7")]
		public bool applyScale
		{
			[Token(Token = "0x6002797")]
			[Address(RVA = "0x1BD5320", Offset = "0x1BD5320", VA = "0x1BD5320")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002798")]
			[Address(RVA = "0x1BD5328", Offset = "0x1BD5328", VA = "0x1BD5328")]
			set
			{
			}
		}

		[Token(Token = "0x170005C8")]
		public float evaluateOffset
		{
			[Token(Token = "0x6002799")]
			[Address(RVA = "0x1BD5354", Offset = "0x1BD5354", VA = "0x1BD5354")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600279A")]
			[Address(RVA = "0x1BD535C", Offset = "0x1BD535C", VA = "0x1BD535C")]
			set
			{
			}
		}

		[Token(Token = "0x600279B")]
		[Address(RVA = "0x1BD537C", Offset = "0x1BD537C", VA = "0x1BD537C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600279C")]
		[Address(RVA = "0x1BD5520", Offset = "0x1BD5520", VA = "0x1BD5520")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600279D")]
		[Address(RVA = "0x1BD4B28", Offset = "0x1BD4B28", VA = "0x1BD4B28")]
		private void Remove()
		{
		}

		[Token(Token = "0x600279E")]
		[Address(RVA = "0x1BD5534", Offset = "0x1BD5534", VA = "0x1BD5534")]
		public void GetAll()
		{
		}

		[Token(Token = "0x600279F")]
		[Address(RVA = "0x1BD4A40", Offset = "0x1BD4A40", VA = "0x1BD4A40")]
		public void Spawn()
		{
		}

		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x1BD5C38", Offset = "0x1BD5C38", VA = "0x1BD5C38", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x1BD5B08", Offset = "0x1BD5B08", VA = "0x1BD5B08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB87864", Offset = "0xB87864")]
		private IEnumerator InstantiateAllWithDelay()
		{
			return null;
		}

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x1BD5B80", Offset = "0x1BD5B80", VA = "0x1BD5B80")]
		private void InstantiateAll()
		{
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x1BD5CB4", Offset = "0x1BD5CB4", VA = "0x1BD5CB4")]
		private void InstantiateSingle()
		{
		}

		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x1BD5FDC", Offset = "0x1BD5FDC", VA = "0x1BD5FDC", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x1BD6804", Offset = "0x1BD6804", VA = "0x1BD6804", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x1BD6878", Offset = "0x1BD6878", VA = "0x1BD6878")]
		public ObjectController()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5F99C", Offset = "0xB5F99C")]
	public class ParticleController : SplineUser
	{
		[Token(Token = "0x20006BC")]
		public enum EmitPoint
		{
			[Token(Token = "0x400285E")]
			Beginning,
			[Token(Token = "0x400285F")]
			Ending,
			[Token(Token = "0x4002860")]
			Random,
			[Token(Token = "0x4002861")]
			Ordered
		}

		[Token(Token = "0x20006BD")]
		public enum MotionType
		{
			[Token(Token = "0x4002863")]
			None,
			[Token(Token = "0x4002864")]
			UseParticleSystem,
			[Token(Token = "0x4002865")]
			FollowForward,
			[Token(Token = "0x4002866")]
			FollowBackward,
			[Token(Token = "0x4002867")]
			ByNormal,
			[Token(Token = "0x4002868")]
			ByNormalRandomized
		}

		[Token(Token = "0x20006BE")]
		public enum Wrap
		{
			[Token(Token = "0x400286A")]
			Default,
			[Token(Token = "0x400286B")]
			Loop
		}

		[Token(Token = "0x20006BF")]
		public class Particle
		{
			[Token(Token = "0x400286C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector2 startOffset;

			[Token(Token = "0x400286D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 endOffset;

			[Token(Token = "0x400286E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float cycleSpeed;

			[Token(Token = "0x400286F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float startLifetime;

			[Token(Token = "0x4002870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Color startColor;

			[Token(Token = "0x4002871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float remainingLifetime;

			[Token(Token = "0x4002872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal float lifeTime;

			[Token(Token = "0x4002873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal double startPercent;

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0xFBA940", Offset = "0xFBA940", VA = "0xFBA940")]
			internal double GetSplinePercent(Wrap wrap, ParticleSystem.Particle particle, MotionType motionType)
			{
				return default(double);
			}

			[Token(Token = "0x60027BC")]
			[Address(RVA = "0xFBAA28", Offset = "0xFBAA28", VA = "0xFBAA28")]
			public Particle()
			{
			}
		}

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public ParticleSystem _particleSystem;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public bool volumetric;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[HideInInspector]
		public bool emitFromShell;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public Vector2 scale;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public EmitPoint emitPoint;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public MotionType motionType;

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[HideInInspector]
		public float minCycles;

		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[HideInInspector]
		public float maxCycles;

		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Particle[] controllers;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int particleCount;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int birthIndex;

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x13E462C", Offset = "0x13E462C", VA = "0x13E462C", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x13E4B00", Offset = "0x13E4B00", VA = "0x13E4B00")]
		private void TransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x13E56F0", Offset = "0x13E56F0", VA = "0x13E56F0")]
		private void InverseTransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x13E5BB0", Offset = "0x13E5BB0", VA = "0x13E5BB0", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x13E575C", Offset = "0x13E575C", VA = "0x13E575C")]
		private void HandleParticle(int index)
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x13E5C80", Offset = "0x13E5C80", VA = "0x13E5C80")]
		private void OnParticleDie(int index)
		{
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x13E4B6C", Offset = "0x13E4B6C", VA = "0x13E4B6C")]
		private void OnParticleBorn(int index)
		{
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x13E5C84", Offset = "0x13E5C84", VA = "0x13E5C84")]
		public ParticleController()
		{
		}
	}
	[Token(Token = "0x20006C0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5F9E8", Offset = "0xB5F9E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5F9E8", Offset = "0xB5F9E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5F9E8", Offset = "0xB5F9E8")]
	public class PathGenerator : MeshGenerator
	{
		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private bool _useShapeCurve;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _shape;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _lastShape;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private float _shapeExposure;

		[Token(Token = "0x170005CD")]
		public int slices
		{
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0xF4D5C4", Offset = "0xF4D5C4", VA = "0xF4D5C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60027BE")]
			[Address(RVA = "0xF4D5CC", Offset = "0xF4D5CC", VA = "0xF4D5CC")]
			set
			{
			}
		}

		[Token(Token = "0x170005CE")]
		public bool useShapeCurve
		{
			[Token(Token = "0x60027BF")]
			[Address(RVA = "0xF4D5F4", Offset = "0xF4D5F4", VA = "0xF4D5F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60027C0")]
			[Address(RVA = "0xF4D5FC", Offset = "0xF4D5FC", VA = "0xF4D5FC")]
			set
			{
			}
		}

		[Token(Token = "0x170005CF")]
		public float shapeExposure
		{
			[Token(Token = "0x60027C1")]
			[Address(RVA = "0xF4D754", Offset = "0xF4D754", VA = "0xF4D754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027C2")]
			[Address(RVA = "0xF4D75C", Offset = "0xF4D75C", VA = "0xF4D75C")]
			set
			{
			}
		}

		[Token(Token = "0x170005D0")]
		public AnimationCurve shape
		{
			[Token(Token = "0x60027C3")]
			[Address(RVA = "0xF4D808", Offset = "0xF4D808", VA = "0xF4D808")]
			get
			{
				return null;
			}
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0xF4D810", Offset = "0xF4D810", VA = "0xF4D810")]
			set
			{
			}
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0xF4DB94", Offset = "0xF4DB94", VA = "0xF4DB94", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0xF4DBF8", Offset = "0xF4DBF8", VA = "0xF4DBF8", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0xF4DC00", Offset = "0xF4DC00", VA = "0xF4DC00", Slot = "22")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0xF4DCB0", Offset = "0xF4DCB0", VA = "0xF4DCB0")]
		private void GenerateVertices()
		{
		}

		[Token(Token = "0x60027C9")]
		[Address(RVA = "0xF4E7B0", Offset = "0xF4E7B0", VA = "0xF4E7B0")]
		public PathGenerator()
		{
		}
	}
	[Token(Token = "0x20006C1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FAA0", Offset = "0xB5FAA0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FAA0", Offset = "0xB5FAA0")]
	public class PolygonColliderGenerator : SplineUser
	{
		[Token(Token = "0x20006C2")]
		public enum Type
		{
			[Token(Token = "0x4002882")]
			Path,
			[Token(Token = "0x4002883")]
			Shape
		}

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private Type _type;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		protected PolygonCollider2D polygonCollider;

		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float lastUpdateTime;

		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool updateCollider;

		[Token(Token = "0x170005D1")]
		public Type type
		{
			[Token(Token = "0x60027CA")]
			[Address(RVA = "0xFF5B30", Offset = "0xFF5B30", VA = "0xFF5B30")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x60027CB")]
			[Address(RVA = "0xFF5B38", Offset = "0xFF5B38", VA = "0xFF5B38")]
			set
			{
			}
		}

		[Token(Token = "0x170005D2")]
		public float size
		{
			[Token(Token = "0x60027CC")]
			[Address(RVA = "0xFF5B58", Offset = "0xFF5B58", VA = "0xFF5B58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027CD")]
			[Address(RVA = "0xFF5B60", Offset = "0xFF5B60", VA = "0xFF5B60")]
			set
			{
			}
		}

		[Token(Token = "0x170005D3")]
		public float offset
		{
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0xFF5B80", Offset = "0xFF5B80", VA = "0xFF5B80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027CF")]
			[Address(RVA = "0xFF5B88", Offset = "0xFF5B88", VA = "0xFF5B88")]
			set
			{
			}
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0xFF5BA8", Offset = "0xFF5BA8", VA = "0xFF5BA8", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0xFF5C10", Offset = "0xFF5C10", VA = "0xFF5C10", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0xFF5C18", Offset = "0xFF5C18", VA = "0xFF5C18", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0xFF5C20", Offset = "0xFF5C20", VA = "0xFF5C20", Slot = "9")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0xFF5C28", Offset = "0xFF5C28", VA = "0xFF5C28", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0xFF5C30", Offset = "0xFF5C30", VA = "0xFF5C30", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0xFF5D04", Offset = "0xFF5D04", VA = "0xFF5D04", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0xFF6060", Offset = "0xFF6060", VA = "0xFF6060", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0xFF5D58", Offset = "0xFF5D58", VA = "0xFF5D58")]
		private void GeneratePath()
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xFF5EFC", Offset = "0xFF5EFC", VA = "0xFF5EFC")]
		private void GenerateShape()
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xFF61AC", Offset = "0xFF61AC", VA = "0xFF61AC")]
		public PolygonColliderGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C3")]
	public class ColorModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20006C4")]
		public class ColorKey : Key
		{
			[Token(Token = "0x20006C5")]
			public enum BlendMode
			{
				[Token(Token = "0x4002888")]
				Lerp,
				[Token(Token = "0x4002889")]
				Multiply,
				[Token(Token = "0x400288A")]
				Add,
				[Token(Token = "0x400288B")]
				Subtract
			}

			[Token(Token = "0x4002885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Color color;

			[Token(Token = "0x4002886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public BlendMode blendMode;

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0xF8E874", Offset = "0xF8E874", VA = "0xF8E874")]
			public ColorKey(double f, double t, ColorModifier modifier)
			{
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0xF8E8C8", Offset = "0xF8E8C8", VA = "0xF8E8C8")]
			public Color Blend(Color input, float percent)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ColorKey> keys;

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x11A6EEC", Offset = "0x11A6EEC", VA = "0x11A6EEC")]
		public ColorModifier()
		{
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x11A6FA8", Offset = "0x11A6FA8", VA = "0x11A6FA8", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x11A70AC", Offset = "0x11A70AC", VA = "0x11A70AC", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x11A7228", Offset = "0x11A7228", VA = "0x11A7228")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0x11A72D0", Offset = "0x11A72D0", VA = "0x11A72D0", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C6")]
	public class FollowerSpeedModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20006C7")]
		public class SpeedKey : Key
		{
			[Token(Token = "0x400288D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float speed;

			[Token(Token = "0x60027E8")]
			[Address(RVA = "0xFC8D1C", Offset = "0xFC8D1C", VA = "0xFC8D1C")]
			public SpeedKey(double f, double t, FollowerSpeedModifier modifier)
			{
			}
		}

		[Token(Token = "0x400288C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SpeedKey> keys;

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x10FCA24", Offset = "0x10FCA24", VA = "0x10FCA24")]
		public FollowerSpeedModifier()
		{
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0x10FCAE0", Offset = "0x10FCAE0", VA = "0x10FCAE0", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x10FCBE4", Offset = "0x10FCBE4", VA = "0x10FCBE4", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x10FCD7C", Offset = "0x10FCD7C", VA = "0x10FCD7C")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x10FCE24", Offset = "0x10FCE24", VA = "0x10FCE24", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x10FCE28", Offset = "0x10FCE28", VA = "0x10FCE28")]
		public float GetSpeed(SplineSample sample)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20006C8")]
	public class MeshScaleModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20006C9")]
		public class ScaleKey : Key
		{
			[Token(Token = "0x400288F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector2 scale;

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0xFDC140", Offset = "0xFDC140", VA = "0xFDC140")]
			public ScaleKey(double f, double t, MeshScaleModifier modifier)
			{
			}
		}

		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ScaleKey> keys;

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x1CC4DE8", Offset = "0x1CC4DE8", VA = "0x1CC4DE8")]
		public MeshScaleModifier()
		{
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x1CC4EA4", Offset = "0x1CC4EA4", VA = "0x1CC4EA4", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x1CC4FA8", Offset = "0x1CC4FA8", VA = "0x1CC4FA8", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x1CC5140", Offset = "0x1CC5140", VA = "0x1CC5140")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x1CC51E8", Offset = "0x1CC51E8", VA = "0x1CC51E8", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x1CC5304", Offset = "0x1CC5304", VA = "0x1CC5304")]
		public Vector2 GetScale(SplineSample sample)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x20006CA")]
	public class OffsetModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20006CB")]
		public class OffsetKey : Key
		{
			[Token(Token = "0x4002891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector2 offset;

			[Token(Token = "0x60027F6")]
			[Address(RVA = "0xFB8630", Offset = "0xFB8630", VA = "0xFB8630")]
			public OffsetKey(Vector2 o, double f, double t, OffsetModifier modifier)
			{
			}
		}

		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<OffsetKey> keys;

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x184A46C", Offset = "0x184A46C", VA = "0x184A46C")]
		public OffsetModifier()
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x184A528", Offset = "0x184A528", VA = "0x184A528", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x184A62C", Offset = "0x184A62C", VA = "0x184A62C", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x184A7A8", Offset = "0x184A7A8", VA = "0x184A7A8")]
		public void AddKey(Vector2 offset, double f, double t)
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x184A868", Offset = "0x184A868", VA = "0x184A868", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x184A94C", Offset = "0x184A94C", VA = "0x184A94C")]
		private Vector2 Evaluate(double time)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x20006CC")]
	public class RotationModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20006CD")]
		public class RotationKey : Key
		{
			[Token(Token = "0x4002893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool useLookTarget;

			[Token(Token = "0x4002894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform target;

			[Token(Token = "0x4002895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 rotation;

			[Token(Token = "0x60027FC")]
			[Address(RVA = "0xFC7534", Offset = "0xFC7534", VA = "0xFC7534")]
			public RotationKey(Vector3 rotation, double f, double t, RotationModifier modifier)
			{
			}
		}

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RotationKey> keys;

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x13C0314", Offset = "0x13C0314", VA = "0x13C0314")]
		public RotationModifier()
		{
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x13C03D0", Offset = "0x13C03D0", VA = "0x13C03D0", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x13C04D4", Offset = "0x13C04D4", VA = "0x13C04D4", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x13C0650", Offset = "0x13C0650", VA = "0x13C0650")]
		public void AddKey(Vector3 rotation, double f, double t)
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x13C0720", Offset = "0x13C0720", VA = "0x13C0720", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006CE")]
	public class SizeModifier : SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20006CF")]
		public class SizeKey : Key
		{
			[Token(Token = "0x4002897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float size;

			[Token(Token = "0x6002802")]
			[Address(RVA = "0xFE67C0", Offset = "0xFE67C0", VA = "0xFE67C0")]
			public SizeKey(double f, double t, SizeModifier modifier)
			{
			}
		}

		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SizeKey> keys;

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0xF0E71C", Offset = "0xF0E71C", VA = "0xF0E71C")]
		public SizeModifier()
		{
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0xF0E7D8", Offset = "0xF0E7D8", VA = "0xF0E7D8", Slot = "4")]
		public override List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0xF0E8DC", Offset = "0xF0E8DC", VA = "0xF0E8DC", Slot = "5")]
		public override void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0xF0EA74", Offset = "0xF0EA74", VA = "0xF0EA74")]
		public void AddKey(double f, double t)
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0xF0EB1C", Offset = "0xF0EB1C", VA = "0xF0EB1C", Slot = "6")]
		public override void Apply(SplineSample result)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D0")]
	public class SplineSampleModifier
	{
		[Serializable]
		[Token(Token = "0x20006D1")]
		public class Key
		{
			[Token(Token = "0x4002899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private double _featherStart;

			[Token(Token = "0x400289A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private double _featherEnd;

			[Token(Token = "0x400289B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _centerStart;

			[Token(Token = "0x400289C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _centerEnd;

			[Token(Token = "0x400289D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			internal SplineSampleModifier modifier;

			[Token(Token = "0x400289E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationCurve interpolation;

			[Token(Token = "0x400289F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float blend;

			[Token(Token = "0x170005D4")]
			public double start
			{
				[Token(Token = "0x6002808")]
				[Address(RVA = "0xFEC3E0", Offset = "0xFEC3E0", VA = "0xFEC3E0")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002809")]
				[Address(RVA = "0xFEC3E8", Offset = "0xFEC3E8", VA = "0xFEC3E8")]
				set
				{
				}
			}

			[Token(Token = "0x170005D5")]
			public double end
			{
				[Token(Token = "0x600280A")]
				[Address(RVA = "0xFEC41C", Offset = "0xFEC41C", VA = "0xFEC41C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600280B")]
				[Address(RVA = "0xFEC424", Offset = "0xFEC424", VA = "0xFEC424")]
				set
				{
				}
			}

			[Token(Token = "0x170005D6")]
			public double centerStart
			{
				[Token(Token = "0x600280C")]
				[Address(RVA = "0xFEC458", Offset = "0xFEC458", VA = "0xFEC458")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600280D")]
				[Address(RVA = "0xFEC460", Offset = "0xFEC460", VA = "0xFEC460")]
				set
				{
				}
			}

			[Token(Token = "0x170005D7")]
			public double centerEnd
			{
				[Token(Token = "0x600280E")]
				[Address(RVA = "0xFEC4A0", Offset = "0xFEC4A0", VA = "0xFEC4A0")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x600280F")]
				[Address(RVA = "0xFEC4A8", Offset = "0xFEC4A8", VA = "0xFEC4A8")]
				set
				{
				}
			}

			[Token(Token = "0x170005D8")]
			public double globalCenterStart
			{
				[Token(Token = "0x6002810")]
				[Address(RVA = "0xFEC4E8", Offset = "0xFEC4E8", VA = "0xFEC4E8")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002811")]
				[Address(RVA = "0xFEC550", Offset = "0xFEC550", VA = "0xFEC550")]
				set
				{
				}
			}

			[Token(Token = "0x170005D9")]
			public double globalCenterEnd
			{
				[Token(Token = "0x6002812")]
				[Address(RVA = "0xFEC5F4", Offset = "0xFEC5F4", VA = "0xFEC5F4")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002813")]
				[Address(RVA = "0xFEC5FC", Offset = "0xFEC5FC", VA = "0xFEC5FC")]
				set
				{
				}
			}

			[Token(Token = "0x170005DA")]
			public double position
			{
				[Token(Token = "0x6002814")]
				[Address(RVA = "0xFEC648", Offset = "0xFEC648", VA = "0xFEC648")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002815")]
				[Address(RVA = "0xFEC6D0", Offset = "0xFEC6D0", VA = "0xFEC6D0")]
				set
				{
				}
			}

			[Token(Token = "0x6002816")]
			[Address(RVA = "0xFE67C4", Offset = "0xFE67C4", VA = "0xFE67C4")]
			internal Key(double f, double t, SplineSampleModifier modifier)
			{
			}

			[Token(Token = "0x6002817")]
			[Address(RVA = "0xFEC59C", Offset = "0xFEC59C", VA = "0xFEC59C")]
			private double GlobalToLocalPercent(double t)
			{
				return default(double);
			}

			[Token(Token = "0x6002818")]
			[Address(RVA = "0xFEC4F0", Offset = "0xFEC4F0", VA = "0xFEC4F0")]
			private double LocalToGlobalPercent(double t)
			{
				return default(double);
			}

			[Token(Token = "0x6002819")]
			[Address(RVA = "0xFEC738", Offset = "0xFEC738", VA = "0xFEC738")]
			public float Evaluate(double t)
			{
				return default(float);
			}

			[Token(Token = "0x600281A")]
			[Address(RVA = "0xFEC7D0", Offset = "0xFEC7D0", VA = "0xFEC7D0", Slot = "4")]
			public virtual Key Duplicate()
			{
				return null;
			}
		}

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float blend;

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x1B03AF0", Offset = "0x1B03AF0", VA = "0x1B03AF0", Slot = "4")]
		public virtual List<Key> GetKeys()
		{
			return null;
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x1B03B5C", Offset = "0x1B03B5C", VA = "0x1B03B5C", Slot = "5")]
		public virtual void SetKeys(List<Key> input)
		{
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x1B03C04", Offset = "0x1B03C04", VA = "0x1B03C04", Slot = "6")]
		public virtual void Apply(SplineSample result)
		{
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0x1B03C08", Offset = "0x1B03C08", VA = "0x1B03C08", Slot = "7")]
		public virtual void Apply(SplineSample source, SplineSample destination)
		{
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0x1B03C48", Offset = "0x1B03C48", VA = "0x1B03C48")]
		public SplineSampleModifier()
		{
		}
	}
	[Token(Token = "0x20006D2")]
	public delegate void EmptySplineHandler();
	[Token(Token = "0x20006D3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FB24", Offset = "0xB5FB24")]
	[ExecuteInEditMode]
	public class SplineComputer : MonoBehaviour
	{
		[Token(Token = "0x20006D4")]
		public enum Space
		{
			[Token(Token = "0x40028C1")]
			World,
			[Token(Token = "0x40028C2")]
			Local
		}

		[Token(Token = "0x20006D5")]
		public enum EvaluateMode
		{
			[Token(Token = "0x40028C4")]
			Cached,
			[Token(Token = "0x40028C5")]
			Calculate
		}

		[Token(Token = "0x20006D6")]
		public enum SampleMode
		{
			[Token(Token = "0x40028C7")]
			Default,
			[Token(Token = "0x40028C8")]
			Uniform,
			[Token(Token = "0x40028C9")]
			Optimized
		}

		[Token(Token = "0x20006D7")]
		public enum UpdateMode
		{
			[Token(Token = "0x40028CB")]
			Update,
			[Token(Token = "0x40028CC")]
			FixedUpdate,
			[Token(Token = "0x40028CD")]
			LateUpdate,
			[Token(Token = "0x40028CE")]
			AllUpdate,
			[Token(Token = "0x40028CF")]
			None
		}

		[Serializable]
		[Token(Token = "0x20006D8")]
		internal class NodeLink
		{
			[Token(Token = "0x40028D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			internal Node node;

			[Token(Token = "0x40028D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			internal int pointIndex;

			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xFE8A98", Offset = "0xFE8A98", VA = "0xFE8A98")]
			internal List<Node.Connection> GetConnections(SplineComputer exclude)
			{
				return null;
			}

			[Token(Token = "0x60028A1")]
			[Address(RVA = "0xFE8BF0", Offset = "0xFE8BF0", VA = "0xFE8BF0")]
			public NodeLink()
			{
			}
		}

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB75FEC", Offset = "0xB75FEC")]
		public bool rebuildOnAwake;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public UpdateMode updateMode;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TriggerGroup[] triggerGroups;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Spline spline;

		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineSample[] _rawSamples;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private SplineSample[] _transformedSamples;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		private SampleCollection sampleCollection;

		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		private double[] originalSamplePercents;

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool[] sampleFlter;

		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[SerializeField]
		private int _sampleCount;

		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		[SerializeField]
		private bool _is2D;

		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[HideInInspector]
		[SerializeField]
		private bool hasSamples;

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[SerializeField]
		private bool[] pointsDirty;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB76250", Offset = "0xB76250")]
		private float _optimizeAngleThreshold;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		[SerializeField]
		private Space _space;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private SampleMode _sampleMode;

		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		[SerializeField]
		private SplineUser[] _subscribers;

		[Token(Token = "0x40028B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		[SerializeField]
		private NodeLink[] nodes;

		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool rebuildPending;

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _trsCheck;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform _trs;

		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Matrix4x4 transformMatrix;

		[Token(Token = "0x40028B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Matrix4x4 inverseTransformMatrix;

		[Token(Token = "0x40028B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool queueResample;

		[Token(Token = "0x40028B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		private bool queueRebuild;

		[Token(Token = "0x40028BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 lastPosition;

		[Token(Token = "0x40028BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 lastScale;

		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool uniformScale;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Quaternion lastRotation;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private SplinePoint[] tempPoints;

		[Token(Token = "0x170005DB")]
		public Space space
		{
			[Token(Token = "0x600281F")]
			[Address(RVA = "0x21A85E4", Offset = "0x21A85E4", VA = "0x21A85E4")]
			get
			{
				return default(Space);
			}
			[Token(Token = "0x6002820")]
			[Address(RVA = "0x21A85EC", Offset = "0x21A85EC", VA = "0x21A85EC")]
			set
			{
			}
		}

		[Token(Token = "0x170005DC")]
		public Spline.Type type
		{
			[Token(Token = "0x6002821")]
			[Address(RVA = "0x21A87A4", Offset = "0x21A87A4", VA = "0x21A87A4")]
			get
			{
				return default(Spline.Type);
			}
			[Token(Token = "0x6002822")]
			[Address(RVA = "0x21A87C0", Offset = "0x21A87C0", VA = "0x21A87C0")]
			set
			{
			}
		}

		[Token(Token = "0x170005DD")]
		public bool linearAverageDirection
		{
			[Token(Token = "0x6002823")]
			[Address(RVA = "0x21A880C", Offset = "0x21A880C", VA = "0x21A880C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002824")]
			[Address(RVA = "0x21A8828", Offset = "0x21A8828", VA = "0x21A8828")]
			set
			{
			}
		}

		[Token(Token = "0x170005DE")]
		public bool is2D
		{
			[Token(Token = "0x6002825")]
			[Address(RVA = "0x21A8880", Offset = "0x21A8880", VA = "0x21A8880")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002826")]
			[Address(RVA = "0x21A8888", Offset = "0x21A8888", VA = "0x21A8888")]
			set
			{
			}
		}

		[Token(Token = "0x170005DF")]
		public int sampleRate
		{
			[Token(Token = "0x6002827")]
			[Address(RVA = "0x21A88D8", Offset = "0x21A88D8", VA = "0x21A88D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002828")]
			[Address(RVA = "0x21A88F4", Offset = "0x21A88F4", VA = "0x21A88F4")]
			set
			{
			}
		}

		[Token(Token = "0x170005E0")]
		public float optimizeAngleThreshold
		{
			[Token(Token = "0x6002829")]
			[Address(RVA = "0x21A894C", Offset = "0x21A894C", VA = "0x21A894C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600282A")]
			[Address(RVA = "0x21A8954", Offset = "0x21A8954", VA = "0x21A8954")]
			set
			{
			}
		}

		[Token(Token = "0x170005E1")]
		public SampleMode sampleMode
		{
			[Token(Token = "0x600282B")]
			[Address(RVA = "0x21A89B0", Offset = "0x21A89B0", VA = "0x21A89B0")]
			get
			{
				return default(SampleMode);
			}
			[Token(Token = "0x600282C")]
			[Address(RVA = "0x21A89B8", Offset = "0x21A89B8", VA = "0x21A89B8")]
			set
			{
			}
		}

		[Token(Token = "0x170005E2")]
		public AnimationCurve customValueInterpolation
		{
			[Token(Token = "0x600282D")]
			[Address(RVA = "0x21A89F8", Offset = "0x21A89F8", VA = "0x21A89F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600282E")]
			[Address(RVA = "0x21A8A14", Offset = "0x21A8A14", VA = "0x21A8A14")]
			set
			{
			}
		}

		[Token(Token = "0x170005E3")]
		public AnimationCurve customNormalInterpolation
		{
			[Token(Token = "0x600282F")]
			[Address(RVA = "0x21A8A54", Offset = "0x21A8A54", VA = "0x21A8A54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002830")]
			[Address(RVA = "0x21A8A70", Offset = "0x21A8A70", VA = "0x21A8A70")]
			set
			{
			}
		}

		[Token(Token = "0x170005E4")]
		public int iterations
		{
			[Token(Token = "0x6002831")]
			[Address(RVA = "0x21A8AB0", Offset = "0x21A8AB0", VA = "0x21A8AB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005E5")]
		public double moveStep
		{
			[Token(Token = "0x6002832")]
			[Address(RVA = "0x21A8AC8", Offset = "0x21A8AC8", VA = "0x21A8AC8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170005E6")]
		public bool isClosed
		{
			[Token(Token = "0x6002833")]
			[Address(RVA = "0x21A8AE0", Offset = "0x21A8AE0", VA = "0x21A8AE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005E7")]
		public int pointCount
		{
			[Token(Token = "0x6002834")]
			[Address(RVA = "0x21A8B20", Offset = "0x21A8B20", VA = "0x21A8B20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005E8")]
		public SplineSample[] samples
		{
			[Token(Token = "0x6002835")]
			[Address(RVA = "0x21A8B48", Offset = "0x21A8B48", VA = "0x21A8B48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005E9")]
		public int sampleCount
		{
			[Token(Token = "0x6002836")]
			[Address(RVA = "0x21A8B64", Offset = "0x21A8B64", VA = "0x21A8B64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005EA")]
		public SplineSample[] rawSamples
		{
			[Token(Token = "0x6002837")]
			[Address(RVA = "0x21A8B6C", Offset = "0x21A8B6C", VA = "0x21A8B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005EB")]
		public Vector3 position
		{
			[Token(Token = "0x6002838")]
			[Address(RVA = "0x21A8B74", Offset = "0x21A8B74", VA = "0x21A8B74")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170005EC")]
		public Quaternion rotation
		{
			[Token(Token = "0x6002839")]
			[Address(RVA = "0x21A8B84", Offset = "0x21A8B84", VA = "0x21A8B84")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170005ED")]
		public Vector3 scale
		{
			[Token(Token = "0x600283A")]
			[Address(RVA = "0x21A8B98", Offset = "0x21A8B98", VA = "0x21A8B98")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170005EE")]
		public int subscriberCount
		{
			[Token(Token = "0x600283B")]
			[Address(RVA = "0x21A8BA8", Offset = "0x21A8BA8", VA = "0x21A8BA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170005EF")]
		public Transform trs
		{
			[Token(Token = "0x600283C")]
			[Address(RVA = "0x21A8BC4", Offset = "0x21A8BC4", VA = "0x21A8BC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F0")]
		private bool useMultithreading
		{
			[Token(Token = "0x600283F")]
			[Address(RVA = "0x21A8D5C", Offset = "0x21A8D5C", VA = "0x21A8D5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x140000A5")]
		public event EmptySplineHandler onRebuild
		{
			[Token(Token = "0x600283D")]
			[Address(RVA = "0x21A8C14", Offset = "0x21A8C14", VA = "0x21A8C14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87914", Offset = "0xB87914")]
			add
			{
			}
			[Token(Token = "0x600283E")]
			[Address(RVA = "0x21A8CB8", Offset = "0x21A8CB8", VA = "0x21A8CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87924", Offset = "0xB87924")]
			remove
			{
			}
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x21A8D64", Offset = "0x21A8D64", VA = "0x21A8D64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x21A8D68", Offset = "0x21A8D68", VA = "0x21A8D68")]
		private void Start()
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x21A8F80", Offset = "0x21A8F80", VA = "0x21A8F80")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x21A91E8", Offset = "0x21A91E8", VA = "0x21A91E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x21A9204", Offset = "0x21A9204", VA = "0x21A9204")]
		private void Update()
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x21A8F9C", Offset = "0x21A8F9C", VA = "0x21A8F9C")]
		private void RunUpdate(bool immediate = false)
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x21AA1FC", Offset = "0x21AA1FC", VA = "0x21AA1FC")]
		private void TransformSamplesThreaded()
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x21AA204", Offset = "0x21AA204", VA = "0x21AA204")]
		private void CalculateAndTransformSamples()
		{
		}

		[Token(Token = "0x6002848")]
		[Address(RVA = "0x21A9220", Offset = "0x21A9220", VA = "0x21A9220")]
		private bool TransformHasChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x21AA22C", Offset = "0x21AA22C", VA = "0x21AA22C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x21AA24C", Offset = "0x21AA24C", VA = "0x21AA24C")]
		public void GetSamples(SampleCollection collection)
		{
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x21A8DF8", Offset = "0x21A8DF8", VA = "0x21A8DF8")]
		public void ResampleTransform()
		{
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x21AA2AC", Offset = "0x21AA2AC", VA = "0x21AA2AC")]
		public void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x21AA3FC", Offset = "0x21AA3FC", VA = "0x21AA3FC")]
		public void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0x21AA328", Offset = "0x21AA328", VA = "0x21AA328")]
		public bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0x21AA4F8", Offset = "0x21AA4F8", VA = "0x21AA4F8")]
		public SplineUser[] GetSubscribers()
		{
			return null;
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0x21A3C84", Offset = "0x21A3C84", VA = "0x21A3C84")]
		public SplinePoint[] GetPoints(Space getSpace = Space.World)
		{
			return null;
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0x21AA590", Offset = "0x21AA590", VA = "0x21AA590")]
		public SplinePoint GetPoint(int index, Space getSpace = Space.World)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x21AA74C", Offset = "0x21AA74C", VA = "0x21AA74C")]
		public Vector3 GetPointPosition(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x21AA7E0", Offset = "0x21AA7E0", VA = "0x21AA7E0")]
		public Vector3 GetPointNormal(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x21AA878", Offset = "0x21AA878", VA = "0x21AA878")]
		public Vector3 GetPointTangent(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x21AA90C", Offset = "0x21AA90C", VA = "0x21AA90C")]
		public Vector3 GetPointTangent2(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x21AA9A0", Offset = "0x21AA9A0", VA = "0x21AA9A0")]
		public float GetPointSize(int index, Space getSpace = Space.World)
		{
			return default(float);
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x21AA9E8", Offset = "0x21AA9E8", VA = "0x21AA9E8")]
		public Color GetPointColor(int index, Space getSpace = Space.World)
		{
			return default(Color);
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x21AAA34", Offset = "0x21AAA34", VA = "0x21AAA34")]
		private void Make2D(ref SplinePoint point)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x21A4348", Offset = "0x21A4348", VA = "0x21A4348")]
		public void SetPoints(SplinePoint[] points, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x21AAE04", Offset = "0x21AAE04", VA = "0x21AAE04")]
		public void SetPointPosition(int index, Vector3 pos, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x21AB110", Offset = "0x21AB110", VA = "0x21AB110")]
		public void SetPointTangents(int index, Vector3 tan1, Vector3 tan2, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x21AB3B8", Offset = "0x21AB3B8", VA = "0x21AB3B8")]
		public void SetPointNormal(int index, Vector3 nrm, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x21AB578", Offset = "0x21AB578", VA = "0x21AB578")]
		public void SetPointSize(int index, float size)
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x21AB690", Offset = "0x21AB690", VA = "0x21AB690")]
		public void SetPointColor(int index, Color color)
		{
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x21AB7D8", Offset = "0x21AB7D8", VA = "0x21AB7D8")]
		public void SetPoint(int index, SplinePoint point, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x21AAF7C", Offset = "0x21AAF7C", VA = "0x21AAF7C")]
		private void AppendPoints(int count)
		{
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x21AB9EC", Offset = "0x21AB9EC", VA = "0x21AB9EC")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x21ABB24", Offset = "0x21ABB24", VA = "0x21ABB24")]
		public int PercentToPointIndex(double percent, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(int);
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x21ABC70", Offset = "0x21ABC70", VA = "0x21ABC70")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x21ABC78", Offset = "0x21ABC78", VA = "0x21ABC78")]
		public Vector3 EvaluatePosition(double percent, EvaluateMode mode = EvaluateMode.Cached)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x21ABCCC", Offset = "0x21ABCCC", VA = "0x21ABCCC")]
		public Vector3 EvaluatePosition(int pointIndex, EvaluateMode mode = EvaluateMode.Cached)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x21ABCF8", Offset = "0x21ABCF8", VA = "0x21ABCF8")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x21ABD00", Offset = "0x21ABD00", VA = "0x21ABD00")]
		public SplineSample Evaluate(double percent, EvaluateMode mode = EvaluateMode.Cached)
		{
			return null;
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x21ABDE8", Offset = "0x21ABDE8", VA = "0x21ABDE8")]
		public SplineSample Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x21ABE60", Offset = "0x21ABE60", VA = "0x21ABE60")]
		public void Evaluate(int pointIndex, SplineSample result)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x21ABE98", Offset = "0x21ABE98", VA = "0x21ABE98")]
		public void Evaluate(double percent, SplineSample result)
		{
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x21ABD88", Offset = "0x21ABD88", VA = "0x21ABD88")]
		public void Evaluate(double percent, SplineSample result, EvaluateMode mode = EvaluateMode.Cached)
		{
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x21ABF80", Offset = "0x21ABF80", VA = "0x21ABF80")]
		public void Evaluate(ref SplineSample[] results, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x21ABF9C", Offset = "0x21ABF9C", VA = "0x21ABF9C")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x21ABFB8", Offset = "0x21ABFB8", VA = "0x21ABFB8")]
		public double Travel(double start, float distance, out float moved, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x21ABFE8", Offset = "0x21ABFE8", VA = "0x21ABFE8")]
		public double Travel(double start, float distance, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x21AC010", Offset = "0x21AC010", VA = "0x21AC010")]
		public void Project(SplineSample result, Vector3 position, double from = 0.0, double to = 1.0, EvaluateMode mode = EvaluateMode.Cached, int subdivisions = 4)
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x21AC10C", Offset = "0x21AC10C", VA = "0x21AC10C")]
		public SplineSample Project(Vector3 point, double from = 0.0, double to = 1.0)
		{
			return null;
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x21AC1BC", Offset = "0x21AC1BC", VA = "0x21AC1BC")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0x21ABEB4", Offset = "0x21ABEB4", VA = "0x21ABEB4")]
		private void TransformResult(SplineSample result)
		{
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0x21A876C", Offset = "0x21A876C", VA = "0x21A876C")]
		public void Rebuild(bool forceUpdateAll = false)
		{
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x21AC1E8", Offset = "0x21AC1E8", VA = "0x21AC1E8")]
		public void RebuildImmediate()
		{
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x21A8DB4", Offset = "0x21A8DB4", VA = "0x21A8DB4")]
		public void RebuildImmediate(bool calculateSamples = true, bool forceUpdateAll = false)
		{
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x21A9590", Offset = "0x21A9590", VA = "0x21A9590")]
		private void RebuildUsers(bool immediate = false)
		{
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x21AC218", Offset = "0x21AC218", VA = "0x21AC218")]
		private void UnsetPointsDirty()
		{
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x21AA12C", Offset = "0x21AA12C", VA = "0x21AA12C")]
		private void SetPointsDirty()
		{
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x21AAA8C", Offset = "0x21AAA8C", VA = "0x21AAA8C")]
		private void SetDirty(int index)
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x21A9764", Offset = "0x21A9764", VA = "0x21A9764")]
		private void CalculateSamples()
		{
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x21A9C0C", Offset = "0x21A9C0C", VA = "0x21A9C0C")]
		private void TransformSamples(bool forceTransformAll = false)
		{
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x21AC5F4", Offset = "0x21AC5F4", VA = "0x21AC5F4")]
		private void OptimizeSamples()
		{
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x21AC2E4", Offset = "0x21AC2E4", VA = "0x21AC2E4")]
		private bool IsDirtyBezier(double samplePercent)
		{
			return default(bool);
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x21AC428", Offset = "0x21AC428", VA = "0x21AC428")]
		private bool IsDirtyHermite(double samplePercent)
		{
			return default(bool);
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x21AAA6C", Offset = "0x21AAA6C", VA = "0x21AAA6C")]
		public void Break()
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x21AC9B4", Offset = "0x21AC9B4", VA = "0x21AC9B4")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x21ACA3C", Offset = "0x21ACA3C", VA = "0x21ACA3C")]
		public void Close()
		{
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x21ACAB4", Offset = "0x21ACAB4", VA = "0x21ACAB4")]
		public void CatToBezierTangents()
		{
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x21ACAF4", Offset = "0x21ACAF4", VA = "0x21ACAF4")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x21ACD04", Offset = "0x21ACD04", VA = "0x21ACD04")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x21AD0D4", Offset = "0x21AD0D4", VA = "0x21AD0D4")]
		public void CheckTriggers(double start, double end, [Optional] SplineUser user)
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x21AD15C", Offset = "0x21AD15C", VA = "0x21AD15C")]
		public void CheckTriggers(int group, double start, double end)
		{
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x21AD294", Offset = "0x21AD294", VA = "0x21AD294")]
		public void ResetTriggers()
		{
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x21AD300", Offset = "0x21AD300", VA = "0x21AD300")]
		public void ResetTriggers(int group)
		{
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x21AD45C", Offset = "0x21AD45C", VA = "0x21AD45C")]
		public List<Node.Connection> GetJunctions(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x21AD544", Offset = "0x21AD544", VA = "0x21AD544")]
		public Dictionary<int, List<Node.Connection>> GetJunctions(double start = 0.0, double end = 1.0)
		{
			return null;
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x21AD738", Offset = "0x21AD738", VA = "0x21AD738")]
		public void ConnectNode(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x21ADD60", Offset = "0x21ADD60", VA = "0x21ADD60")]
		public void DisconnectNode(int pointIndex)
		{
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x21ADCB4", Offset = "0x21ADCB4", VA = "0x21ADCB4")]
		private void AddNodeLink(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x21ADE40", Offset = "0x21ADE40", VA = "0x21ADE40")]
		public Dictionary<int, Node> GetNodes(double start = 0.0, double end = 1.0)
		{
			return null;
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x21AE01C", Offset = "0x21AE01C", VA = "0x21AE01C")]
		public Node GetNode(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x21AE0AC", Offset = "0x21AE0AC", VA = "0x21AE0AC")]
		public void TransferNode(int pointIndex, int newPointIndex)
		{
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x21AE2B4", Offset = "0x21AE2B4", VA = "0x21AE2B4")]
		public void ShiftNodes(int startIndex, int endIndex, int shift)
		{
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x21AE3D8", Offset = "0x21AE3D8", VA = "0x21AE3D8")]
		public void GetConnectedComputers(List<SplineComputer> computers, List<int> connectionIndices, List<int> connectedIndices, double percent, Spline.Direction direction, bool includeEqual)
		{
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x21AE734", Offset = "0x21AE734", VA = "0x21AE734")]
		public List<SplineComputer> GetConnectedComputers()
		{
			return null;
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x21ABC54", Offset = "0x21ABC54", VA = "0x21ABC54")]
		public void GetSamplingValues(double percent, out int index, out double lerp)
		{
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x21AE7F8", Offset = "0x21AE7F8", VA = "0x21AE7F8")]
		private void GetConnectedComputers(ref List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x21AEAC4", Offset = "0x21AEAC4", VA = "0x21AEAC4")]
		private void RemoveNodeLinkAt(int index)
		{
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x21AB040", Offset = "0x21AB040", VA = "0x21AB040")]
		private void SetNodeForPoint(int index, SplinePoint worldPoint)
		{
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x21AABA4", Offset = "0x21AABA4", VA = "0x21AABA4")]
		private void UpdateConnectedNodes(SplinePoint[] worldPoints)
		{
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x21A9334", Offset = "0x21A9334", VA = "0x21A9334")]
		private void UpdateConnectedNodes()
		{
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x21AA578", Offset = "0x21AA578", VA = "0x21AA578")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x21AAA74", Offset = "0x21AAA74", VA = "0x21AAA74")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x21AA584", Offset = "0x21AA584", VA = "0x21AA584")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x21AAA80", Offset = "0x21AAA80", VA = "0x21AAA80")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x21AEC18", Offset = "0x21AEC18", VA = "0x21AEC18")]
		public SplineComputer()
		{
		}
	}
	[Token(Token = "0x20006D9")]
	public delegate void SplineReachHandler();
	[Token(Token = "0x20006DA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FB70", Offset = "0xB5FB70")]
	public class SplineFollower : SplineTracer
	{
		[Token(Token = "0x20006DB")]
		public enum FollowMode
		{
			[Token(Token = "0x40028E2")]
			Uniform,
			[Token(Token = "0x40028E3")]
			Time
		}

		[Token(Token = "0x20006DC")]
		public enum Wrap
		{
			[Token(Token = "0x40028E5")]
			Default,
			[Token(Token = "0x40028E6")]
			Loop,
			[Token(Token = "0x40028E7")]
			PingPong
		}

		[Serializable]
		[Token(Token = "0x20006DD")]
		public class FloatEvent : UnityEvent<float>
		{
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0xFE8BF8", Offset = "0xFE8BF8", VA = "0xFE8BF8")]
			public FloatEvent()
			{
			}
		}

		[Token(Token = "0x40028D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		public FollowMode followMode;

		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public bool autoStartPosition;

		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		[HideInInspector]
		public bool follow;

		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		[HideInInspector]
		public bool preserveUniformSpeedWithOffset;

		[Token(Token = "0x40028D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private float _followSpeed;

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[HideInInspector]
		private float _followDuration;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB76498", Offset = "0xB76498")]
		private double _startPosition;

		[Token(Token = "0x40028DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private FollowerSpeedModifier _speedModifier;

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private FloatEvent _unityOnEndReached;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private FloatEvent _unityOnBeginningReached;

		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private double lastClippedPercent;

		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool followStarted;

		[Token(Token = "0x170005F1")]
		public float followSpeed
		{
			[Token(Token = "0x60028A6")]
			[Address(RVA = "0x1AFA8D8", Offset = "0x1AFA8D8", VA = "0x1AFA8D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028A7")]
			[Address(RVA = "0x1AFA8E0", Offset = "0x1AFA8E0", VA = "0x1AFA8E0")]
			set
			{
			}
		}

		[Token(Token = "0x170005F2")]
		public double startPosition
		{
			[Token(Token = "0x60028A8")]
			[Address(RVA = "0x1AFA8FC", Offset = "0x1AFA8FC", VA = "0x1AFA8FC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60028A9")]
			[Address(RVA = "0x1AFA904", Offset = "0x1AFA904", VA = "0x1AFA904")]
			set
			{
			}
		}

		[Token(Token = "0x170005F3")]
		public float followDuration
		{
			[Token(Token = "0x60028AA")]
			[Address(RVA = "0x1AFA964", Offset = "0x1AFA964", VA = "0x1AFA964")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028AB")]
			[Address(RVA = "0x1AFA96C", Offset = "0x1AFA96C", VA = "0x1AFA96C")]
			set
			{
			}
		}

		[Token(Token = "0x170005F4")]
		public FollowerSpeedModifier speedModifier
		{
			[Token(Token = "0x60028B0")]
			[Address(RVA = "0x1AFAC18", Offset = "0x1AFAC18", VA = "0x1AFAC18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000A6")]
		public event Action<double> onEndReached
		{
			[Token(Token = "0x60028AC")]
			[Address(RVA = "0x1AFA988", Offset = "0x1AFA988", VA = "0x1AFA988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87934", Offset = "0xB87934")]
			add
			{
			}
			[Token(Token = "0x60028AD")]
			[Address(RVA = "0x1AFAA2C", Offset = "0x1AFAA2C", VA = "0x1AFAA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87944", Offset = "0xB87944")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A7")]
		public event Action<double> onBeginningReached
		{
			[Token(Token = "0x60028AE")]
			[Address(RVA = "0x1AFAAD0", Offset = "0x1AFAAD0", VA = "0x1AFAAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87954", Offset = "0xB87954")]
			add
			{
			}
			[Token(Token = "0x60028AF")]
			[Address(RVA = "0x1AFAB74", Offset = "0x1AFAB74", VA = "0x1AFAB74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87964", Offset = "0xB87964")]
			remove
			{
			}
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0x1AFAC20", Offset = "0x1AFAC20", VA = "0x1AFAC20", Slot = "22")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0x1AFACC0", Offset = "0x1AFACC0", VA = "0x1AFACC0", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0x1AFAE50", Offset = "0x1AFAE50", VA = "0x1AFAE50", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0x1AFACD4", Offset = "0x1AFACD4", VA = "0x1AFACD4")]
		private void Follow()
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0x1AFB97C", Offset = "0x1AFB97C", VA = "0x1AFB97C")]
		public void Restart(double startPosition = 0.0)
		{
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0x1AFB998", Offset = "0x1AFB998", VA = "0x1AFB998", Slot = "23")]
		public override void SetPercent(double percent, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0x1AFBA64", Offset = "0x1AFBA64", VA = "0x1AFBA64", Slot = "24")]
		public override void SetDistance(float distance, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0x1AFB64C", Offset = "0x1AFB64C", VA = "0x1AFB64C")]
		public void Move(double percent)
		{
		}

		[Token(Token = "0x60028B9")]
		[Address(RVA = "0x1AFB304", Offset = "0x1AFB304", VA = "0x1AFB304")]
		public void Move(float distance)
		{
		}

		[Token(Token = "0x60028BA")]
		[Address(RVA = "0x1AFC228", Offset = "0x1AFC228", VA = "0x1AFC228", Slot = "28")]
		protected virtual double DoTravel(double start, float distance, out float moved)
		{
			return default(double);
		}

		[Token(Token = "0x60028BB")]
		[Address(RVA = "0x1AFC454", Offset = "0x1AFC454", VA = "0x1AFC454")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x20006DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FBA8", Offset = "0xB5FBA8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FBA8", Offset = "0xB5FBA8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FBA8", Offset = "0xB5FBA8")]
	public class SplineMesh : MeshGenerator
	{
		[Serializable]
		[Token(Token = "0x20006DF")]
		public class Channel
		{
			[Token(Token = "0x20006E0")]
			public delegate float FloatHandler(double percent);

			[Token(Token = "0x20006E1")]
			public delegate Vector2 Vector2Handler(double percent);

			[Token(Token = "0x20006E2")]
			public delegate Vector3 Vector3Handler(double percent);

			[Token(Token = "0x20006E3")]
			public delegate Quaternion QuaternionHandler(double percent);

			[Token(Token = "0x20006E4")]
			public enum Type
			{
				[Token(Token = "0x4002919")]
				Extrude,
				[Token(Token = "0x400291A")]
				Place
			}

			[Token(Token = "0x20006E5")]
			public enum UVOverride
			{
				[Token(Token = "0x400291C")]
				None,
				[Token(Token = "0x400291D")]
				ClampU,
				[Token(Token = "0x400291E")]
				ClampV,
				[Token(Token = "0x400291F")]
				UniformU,
				[Token(Token = "0x4002920")]
				UniformV
			}

			[Serializable]
			[Token(Token = "0x20006E6")]
			public class MeshDefinition
			{
				[Token(Token = "0x20006E7")]
				public enum MirrorMethod
				{
					[Token(Token = "0x400293A")]
					None,
					[Token(Token = "0x400293B")]
					X,
					[Token(Token = "0x400293C")]
					Y,
					[Token(Token = "0x400293D")]
					Z
				}

				[Serializable]
				[Token(Token = "0x20006E8")]
				public class Submesh
				{
					[Token(Token = "0x400293E")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public int[] triangles;

					[Token(Token = "0x6002953")]
					[Address(RVA = "0x1B96970", Offset = "0x1B96970", VA = "0x1B96970")]
					public Submesh()
					{
					}

					[Token(Token = "0x6002954")]
					[Address(RVA = "0x1B931A4", Offset = "0x1B931A4", VA = "0x1B931A4")]
					public Submesh(int[] input)
					{
					}
				}

				[Serializable]
				[Token(Token = "0x20006E9")]
				public class VertexGroup
				{
					[Token(Token = "0x400293F")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public float value;

					[Token(Token = "0x4002940")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					public double percent;

					[Token(Token = "0x4002941")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
					public int[] ids;

					[Token(Token = "0x6002955")]
					[Address(RVA = "0x1B956E0", Offset = "0x1B956E0", VA = "0x1B956E0")]
					public VertexGroup(float val, double perc, int[] vertIds)
					{
					}

					[Token(Token = "0x6002956")]
					[Address(RVA = "0x1B9572C", Offset = "0x1B9572C", VA = "0x1B9572C")]
					public void AddId(int id)
					{
					}
				}

				[Token(Token = "0x4002921")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[HideInInspector]
				internal Vector3[] vertices;

				[Token(Token = "0x4002922")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[HideInInspector]
				internal Vector3[] normals;

				[Token(Token = "0x4002923")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				[SerializeField]
				[HideInInspector]
				internal Vector4[] tangents;

				[Token(Token = "0x4002924")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				[SerializeField]
				[HideInInspector]
				internal Color[] colors;

				[Token(Token = "0x4002925")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv;

				[Token(Token = "0x4002926")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv2;

				[Token(Token = "0x4002927")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv3;

				[Token(Token = "0x4002928")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv4;

				[Token(Token = "0x4002929")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				[SerializeField]
				[HideInInspector]
				internal int[] triangles;

				[Token(Token = "0x400292A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				[SerializeField]
				[HideInInspector]
				internal List<Submesh> subMeshes;

				[Token(Token = "0x400292B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				[SerializeField]
				[HideInInspector]
				internal TS_Bounds bounds;

				[Token(Token = "0x400292C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				[SerializeField]
				[HideInInspector]
				internal List<VertexGroup> vertexGroups;

				[Token(Token = "0x400292D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				[SerializeField]
				[HideInInspector]
				private Mesh _mesh;

				[Token(Token = "0x400292E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _rotation;

				[Token(Token = "0x400292F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _offset;

				[Token(Token = "0x4002930")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _scale;

				[Token(Token = "0x4002931")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvScale;

				[Token(Token = "0x4002932")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvOffset;

				[Token(Token = "0x4002933")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
				[SerializeField]
				[HideInInspector]
				private float _uvRotation;

				[Token(Token = "0x4002934")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
				[SerializeField]
				[HideInInspector]
				private MirrorMethod _mirror;

				[Token(Token = "0x4002935")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
				[SerializeField]
				[HideInInspector]
				private float _vertexGroupingMargin;

				[Token(Token = "0x4002936")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
				[SerializeField]
				[HideInInspector]
				private bool _removeInnerFaces;

				[Token(Token = "0x4002937")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
				[SerializeField]
				[HideInInspector]
				private bool _flipFaces;

				[Token(Token = "0x4002938")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
				[SerializeField]
				[HideInInspector]
				private bool _doubleSided;

				[Token(Token = "0x17000616")]
				public Mesh mesh
				{
					[Token(Token = "0x600292E")]
					[Address(RVA = "0x1B91AFC", Offset = "0x1B91AFC", VA = "0x1B91AFC")]
					get
					{
						return null;
					}
					[Token(Token = "0x600292F")]
					[Address(RVA = "0x1B91B04", Offset = "0x1B91B04", VA = "0x1B91B04")]
					set
					{
					}
				}

				[Token(Token = "0x17000617")]
				public Vector3 rotation
				{
					[Token(Token = "0x6002930")]
					[Address(RVA = "0x1B925D4", Offset = "0x1B925D4", VA = "0x1B925D4")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6002931")]
					[Address(RVA = "0x1B925E0", Offset = "0x1B925E0", VA = "0x1B925E0")]
					set
					{
					}
				}

				[Token(Token = "0x17000618")]
				public Vector3 offset
				{
					[Token(Token = "0x6002932")]
					[Address(RVA = "0x1B9265C", Offset = "0x1B9265C", VA = "0x1B9265C")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6002933")]
					[Address(RVA = "0x1B92668", Offset = "0x1B92668", VA = "0x1B92668")]
					set
					{
					}
				}

				[Token(Token = "0x17000619")]
				public Vector3 scale
				{
					[Token(Token = "0x6002934")]
					[Address(RVA = "0x1B926E4", Offset = "0x1B926E4", VA = "0x1B926E4")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6002935")]
					[Address(RVA = "0x1B926F0", Offset = "0x1B926F0", VA = "0x1B926F0")]
					set
					{
					}
				}

				[Token(Token = "0x1700061A")]
				public Vector2 uvScale
				{
					[Token(Token = "0x6002936")]
					[Address(RVA = "0x1B9276C", Offset = "0x1B9276C", VA = "0x1B9276C")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6002937")]
					[Address(RVA = "0x1B92774", Offset = "0x1B92774", VA = "0x1B92774")]
					set
					{
					}
				}

				[Token(Token = "0x1700061B")]
				public Vector2 uvOffset
				{
					[Token(Token = "0x6002938")]
					[Address(RVA = "0x1B927A8", Offset = "0x1B927A8", VA = "0x1B927A8")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6002939")]
					[Address(RVA = "0x1B927B0", Offset = "0x1B927B0", VA = "0x1B927B0")]
					set
					{
					}
				}

				[Token(Token = "0x1700061C")]
				public float uvRotation
				{
					[Token(Token = "0x600293A")]
					[Address(RVA = "0x1B927E4", Offset = "0x1B927E4", VA = "0x1B927E4")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x600293B")]
					[Address(RVA = "0x1B927EC", Offset = "0x1B927EC", VA = "0x1B927EC")]
					set
					{
					}
				}

				[Token(Token = "0x1700061D")]
				public float vertexGroupingMargin
				{
					[Token(Token = "0x600293C")]
					[Address(RVA = "0x1B92804", Offset = "0x1B92804", VA = "0x1B92804")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x600293D")]
					[Address(RVA = "0x1B9280C", Offset = "0x1B9280C", VA = "0x1B9280C")]
					set
					{
					}
				}

				[Token(Token = "0x1700061E")]
				public MirrorMethod mirror
				{
					[Token(Token = "0x600293E")]
					[Address(RVA = "0x1B92824", Offset = "0x1B92824", VA = "0x1B92824")]
					get
					{
						return default(MirrorMethod);
					}
					[Token(Token = "0x600293F")]
					[Address(RVA = "0x1B9282C", Offset = "0x1B9282C", VA = "0x1B9282C")]
					set
					{
					}
				}

				[Token(Token = "0x1700061F")]
				public bool removeInnerFaces
				{
					[Token(Token = "0x6002940")]
					[Address(RVA = "0x1B92844", Offset = "0x1B92844", VA = "0x1B92844")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002941")]
					[Address(RVA = "0x1B9284C", Offset = "0x1B9284C", VA = "0x1B9284C")]
					set
					{
					}
				}

				[Token(Token = "0x17000620")]
				public bool flipFaces
				{
					[Token(Token = "0x6002942")]
					[Address(RVA = "0x1B92870", Offset = "0x1B92870", VA = "0x1B92870")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002943")]
					[Address(RVA = "0x1B92878", Offset = "0x1B92878", VA = "0x1B92878")]
					set
					{
					}
				}

				[Token(Token = "0x17000621")]
				public bool doubleSided
				{
					[Token(Token = "0x6002944")]
					[Address(RVA = "0x1B9289C", Offset = "0x1B9289C", VA = "0x1B9289C")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002945")]
					[Address(RVA = "0x1B928A4", Offset = "0x1B928A4", VA = "0x1B928A4")]
					set
					{
					}
				}

				[Token(Token = "0x6002946")]
				[Address(RVA = "0x1B928C8", Offset = "0x1B928C8", VA = "0x1B928C8")]
				internal MeshDefinition Copy()
				{
					return null;
				}

				[Token(Token = "0x6002947")]
				[Address(RVA = "0x1B92E78", Offset = "0x1B92E78", VA = "0x1B92E78")]
				public MeshDefinition(Mesh input)
				{
				}

				[Token(Token = "0x6002948")]
				[Address(RVA = "0x1B91BAC", Offset = "0x1B91BAC", VA = "0x1B91BAC")]
				public void Refresh()
				{
				}

				[Token(Token = "0x6002949")]
				[Address(RVA = "0x1B93F38", Offset = "0x1B93F38", VA = "0x1B93F38")]
				private void RemoveInnerFaces()
				{
				}

				[Token(Token = "0x600294A")]
				[Address(RVA = "0x1B93968", Offset = "0x1B93968", VA = "0x1B93968")]
				private void FlipFaces()
				{
				}

				[Token(Token = "0x600294B")]
				[Address(RVA = "0x1B93640", Offset = "0x1B93640", VA = "0x1B93640")]
				private void DoubleSided()
				{
				}

				[Token(Token = "0x600294C")]
				[Address(RVA = "0x1B94754", Offset = "0x1B94754", VA = "0x1B94754")]
				public void Write(TS_Mesh target, int forceMaterialId = -1)
				{
				}

				[Token(Token = "0x600294D")]
				[Address(RVA = "0x1B93E20", Offset = "0x1B93E20", VA = "0x1B93E20")]
				private void CalculateBounds()
				{
				}

				[Token(Token = "0x600294E")]
				[Address(RVA = "0x1B93254", Offset = "0x1B93254", VA = "0x1B93254")]
				private void Mirror()
				{
				}

				[Token(Token = "0x600294F")]
				[Address(RVA = "0x1B93AC8", Offset = "0x1B93AC8", VA = "0x1B93AC8")]
				private void TransformVertices()
				{
				}

				[Token(Token = "0x6002950")]
				[Address(RVA = "0x1B94358", Offset = "0x1B94358", VA = "0x1B94358")]
				private void GroupVertices()
				{
				}

				[Token(Token = "0x6002951")]
				[Address(RVA = "0x1B955BC", Offset = "0x1B955BC", VA = "0x1B955BC")]
				private int FindInsertIndex(Vector3 pos, float value)
				{
					return default(int);
				}

				[Token(Token = "0x6002952")]
				[Address(RVA = "0x1B94F7C", Offset = "0x1B94F7C", VA = "0x1B94F7C")]
				private void CalculateTangents()
				{
				}
			}

			[Token(Token = "0x40028EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x40028F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private System.Random iterationRandom;

			[Token(Token = "0x40028F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			private int _iterationSeed;

			[Token(Token = "0x40028F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private int _offsetSeed;

			[Token(Token = "0x40028F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private System.Random offsetRandom;

			[Token(Token = "0x40028F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2Handler _offsetHandler;

			[Token(Token = "0x40028F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[HideInInspector]
			private int _rotationSeed;

			[Token(Token = "0x40028F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Random rotationRandom;

			[Token(Token = "0x40028F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private QuaternionHandler _placeRotationHandler;

			[Token(Token = "0x40028F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FloatHandler _extrudeRotationHandler;

			[Token(Token = "0x40028F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			[HideInInspector]
			private int _scaleSeed;

			[Token(Token = "0x40028FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private System.Random scaleRandom;

			[Token(Token = "0x40028FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3Handler _scaleHandler;

			[Token(Token = "0x40028FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			internal SplineMesh owner;

			[Token(Token = "0x40028FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			[HideInInspector]
			private List<MeshDefinition> meshes;

			[Token(Token = "0x40028FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			[HideInInspector]
			private double _clipFrom;

			[Token(Token = "0x40028FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			[HideInInspector]
			private double _clipTo;

			[Token(Token = "0x4002900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOrder;

			[Token(Token = "0x4002901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[SerializeField]
			[HideInInspector]
			private UVOverride _overrideUVs;

			[Token(Token = "0x4002902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvScale;

			[Token(Token = "0x4002903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvOffset;

			[Token(Token = "0x4002904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideNormal;

			[Token(Token = "0x4002905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _customNormal;

			[Token(Token = "0x4002906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Type _type;

			[Token(Token = "0x4002907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[SerializeField]
			[HideInInspector]
			private int _count;

			[Token(Token = "0x4002908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			[HideInInspector]
			private bool _autoCount;

			[Token(Token = "0x4002909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[SerializeField]
			[HideInInspector]
			private double _spacing;

			[Token(Token = "0x400290A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[SerializeField]
			[HideInInspector]
			private bool _randomRotation;

			[Token(Token = "0x400290B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _minRotation;

			[Token(Token = "0x400290C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _maxRotation;

			[Token(Token = "0x400290D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOffset;

			[Token(Token = "0x400290E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _minOffset;

			[Token(Token = "0x400290F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _maxOffset;

			[Token(Token = "0x4002910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			[SerializeField]
			[HideInInspector]
			private bool _randomScale;

			[Token(Token = "0x4002911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
			[SerializeField]
			[HideInInspector]
			private bool _uniformRandomScale;

			[Token(Token = "0x4002912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _minScale;

			[Token(Token = "0x4002913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _maxScale;

			[Token(Token = "0x4002914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			private int iterator;

			[Token(Token = "0x4002915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideMaterialID;

			[Token(Token = "0x4002916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
			[SerializeField]
			[HideInInspector]
			private int _targetMaterialID;

			[Token(Token = "0x4002917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[SerializeField]
			[HideInInspector]
			protected MeshScaleModifier _scaleModifier;

			[Token(Token = "0x170005F5")]
			public double clipFrom
			{
				[Token(Token = "0x60028CA")]
				[Address(RVA = "0xFE8C44", Offset = "0xFE8C44", VA = "0xFE8C44")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x60028CB")]
				[Address(RVA = "0xFE8C4C", Offset = "0xFE8C4C", VA = "0xFE8C4C")]
				set
				{
				}
			}

			[Token(Token = "0x170005F6")]
			public double clipTo
			{
				[Token(Token = "0x60028CC")]
				[Address(RVA = "0xFE8CF8", Offset = "0xFE8CF8", VA = "0xFE8CF8")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x60028CD")]
				[Address(RVA = "0xFE8D00", Offset = "0xFE8D00", VA = "0xFE8D00")]
				set
				{
				}
			}

			[Token(Token = "0x170005F7")]
			public bool randomOffset
			{
				[Token(Token = "0x60028CE")]
				[Address(RVA = "0xFE8D18", Offset = "0xFE8D18", VA = "0xFE8D18")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60028CF")]
				[Address(RVA = "0xFE8D20", Offset = "0xFE8D20", VA = "0xFE8D20")]
				set
				{
				}
			}

			[Token(Token = "0x170005F8")]
			public Vector2Handler offsetHandler
			{
				[Token(Token = "0x60028D0")]
				[Address(RVA = "0xFE8D44", Offset = "0xFE8D44", VA = "0xFE8D44")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D1")]
				[Address(RVA = "0xFE8D4C", Offset = "0xFE8D4C", VA = "0xFE8D4C")]
				set
				{
				}
			}

			[Token(Token = "0x170005F9")]
			public bool overrideMaterialID
			{
				[Token(Token = "0x60028D2")]
				[Address(RVA = "0xFE8DB4", Offset = "0xFE8DB4", VA = "0xFE8DB4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60028D3")]
				[Address(RVA = "0xFE8DBC", Offset = "0xFE8DBC", VA = "0xFE8DBC")]
				set
				{
				}
			}

			[Token(Token = "0x170005FA")]
			public int targetMaterialID
			{
				[Token(Token = "0x60028D4")]
				[Address(RVA = "0xFE8DE0", Offset = "0xFE8DE0", VA = "0xFE8DE0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028D5")]
				[Address(RVA = "0xFE8DE8", Offset = "0xFE8DE8", VA = "0xFE8DE8")]
				set
				{
				}
			}

			[Token(Token = "0x170005FB")]
			public bool randomRotation
			{
				[Token(Token = "0x60028D6")]
				[Address(RVA = "0xFE8E00", Offset = "0xFE8E00", VA = "0xFE8E00")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60028D7")]
				[Address(RVA = "0xFE8E08", Offset = "0xFE8E08", VA = "0xFE8E08")]
				set
				{
				}
			}

			[Token(Token = "0x170005FC")]
			public QuaternionHandler placeRotationHandler
			{
				[Token(Token = "0x60028D8")]
				[Address(RVA = "0xFE8E2C", Offset = "0xFE8E2C", VA = "0xFE8E2C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D9")]
				[Address(RVA = "0xFE8E34", Offset = "0xFE8E34", VA = "0xFE8E34")]
				set
				{
				}
			}

			[Token(Token = "0x170005FD")]
			public FloatHandler extrudeRotationHandler
			{
				[Token(Token = "0x60028DA")]
				[Address(RVA = "0xFE8E9C", Offset = "0xFE8E9C", VA = "0xFE8E9C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028DB")]
				[Address(RVA = "0xFE8EA4", Offset = "0xFE8EA4", VA = "0xFE8EA4")]
				set
				{
				}
			}

			[Token(Token = "0x170005FE")]
			public bool randomScale
			{
				[Token(Token = "0x60028DC")]
				[Address(RVA = "0xFE8F0C", Offset = "0xFE8F0C", VA = "0xFE8F0C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60028DD")]
				[Address(RVA = "0xFE8F14", Offset = "0xFE8F14", VA = "0xFE8F14")]
				set
				{
				}
			}

			[Token(Token = "0x170005FF")]
			public Vector3Handler scaleHandler
			{
				[Token(Token = "0x60028DE")]
				[Address(RVA = "0xFE8F38", Offset = "0xFE8F38", VA = "0xFE8F38")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028DF")]
				[Address(RVA = "0xFE8F40", Offset = "0xFE8F40", VA = "0xFE8F40")]
				set
				{
				}
			}

			[Token(Token = "0x17000600")]
			public bool uniformRandomScale
			{
				[Token(Token = "0x60028E0")]
				[Address(RVA = "0xFE8FA8", Offset = "0xFE8FA8", VA = "0xFE8FA8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60028E1")]
				[Address(RVA = "0xFE8FB0", Offset = "0xFE8FB0", VA = "0xFE8FB0")]
				set
				{
				}
			}

			[Token(Token = "0x17000601")]
			public int offsetSeed
			{
				[Token(Token = "0x60028E2")]
				[Address(RVA = "0xFE8FD4", Offset = "0xFE8FD4", VA = "0xFE8FD4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028E3")]
				[Address(RVA = "0xFE8FDC", Offset = "0xFE8FDC", VA = "0xFE8FDC")]
				set
				{
				}
			}

			[Token(Token = "0x17000602")]
			public int rotationSeed
			{
				[Token(Token = "0x60028E4")]
				[Address(RVA = "0xFE8FF4", Offset = "0xFE8FF4", VA = "0xFE8FF4")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028E5")]
				[Address(RVA = "0xFE8FFC", Offset = "0xFE8FFC", VA = "0xFE8FFC")]
				set
				{
				}
			}

			[Token(Token = "0x17000603")]
			public int scaleSeed
			{
				[Token(Token = "0x60028E6")]
				[Address(RVA = "0xFE9014", Offset = "0xFE9014", VA = "0xFE9014")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028E7")]
				[Address(RVA = "0xFE901C", Offset = "0xFE901C", VA = "0xFE901C")]
				set
				{
				}
			}

			[Token(Token = "0x17000604")]
			public double spacing
			{
				[Token(Token = "0x60028E8")]
				[Address(RVA = "0xFE9034", Offset = "0xFE9034", VA = "0xFE9034")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x60028E9")]
				[Address(RVA = "0xFE903C", Offset = "0xFE903C", VA = "0xFE903C")]
				set
				{
				}
			}

			[Token(Token = "0x17000605")]
			public Vector2 minOffset
			{
				[Token(Token = "0x60028EA")]
				[Address(RVA = "0xFE9054", Offset = "0xFE9054", VA = "0xFE9054")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x60028EB")]
				[Address(RVA = "0xFE905C", Offset = "0xFE905C", VA = "0xFE905C")]
				set
				{
				}
			}

			[Token(Token = "0x17000606")]
			public Vector2 maxOffset
			{
				[Token(Token = "0x60028EC")]
				[Address(RVA = "0xFE9090", Offset = "0xFE9090", VA = "0xFE9090")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x60028ED")]
				[Address(RVA = "0xFE9098", Offset = "0xFE9098", VA = "0xFE9098")]
				set
				{
				}
			}

			[Token(Token = "0x17000607")]
			public Vector3 minRotation
			{
				[Token(Token = "0x60028EE")]
				[Address(RVA = "0xFE90CC", Offset = "0xFE90CC", VA = "0xFE90CC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60028EF")]
				[Address(RVA = "0xFE90D8", Offset = "0xFE90D8", VA = "0xFE90D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000608")]
			public Vector3 maxRotation
			{
				[Token(Token = "0x60028F0")]
				[Address(RVA = "0xFE9144", Offset = "0xFE9144", VA = "0xFE9144")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60028F1")]
				[Address(RVA = "0xFE9150", Offset = "0xFE9150", VA = "0xFE9150")]
				set
				{
				}
			}

			[Token(Token = "0x17000609")]
			public Vector3 minScale
			{
				[Token(Token = "0x60028F2")]
				[Address(RVA = "0xFE91BC", Offset = "0xFE91BC", VA = "0xFE91BC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60028F3")]
				[Address(RVA = "0xFE91CC", Offset = "0xFE91CC", VA = "0xFE91CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700060A")]
			public Vector3 maxScale
			{
				[Token(Token = "0x60028F4")]
				[Address(RVA = "0xFE9240", Offset = "0xFE9240", VA = "0xFE9240")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60028F5")]
				[Address(RVA = "0xFE9250", Offset = "0xFE9250", VA = "0xFE9250")]
				set
				{
				}
			}

			[Token(Token = "0x1700060B")]
			public Type type
			{
				[Token(Token = "0x60028F6")]
				[Address(RVA = "0xFE92C4", Offset = "0xFE92C4", VA = "0xFE92C4")]
				get
				{
					return default(Type);
				}
				[Token(Token = "0x60028F7")]
				[Address(RVA = "0xFE92CC", Offset = "0xFE92CC", VA = "0xFE92CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700060C")]
			public bool randomOrder
			{
				[Token(Token = "0x60028F8")]
				[Address(RVA = "0xFE92E4", Offset = "0xFE92E4", VA = "0xFE92E4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60028F9")]
				[Address(RVA = "0xFE92EC", Offset = "0xFE92EC", VA = "0xFE92EC")]
				set
				{
				}
			}

			[Token(Token = "0x1700060D")]
			public int randomSeed
			{
				[Token(Token = "0x60028FA")]
				[Address(RVA = "0xFE9310", Offset = "0xFE9310", VA = "0xFE9310")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028FB")]
				[Address(RVA = "0xFE9318", Offset = "0xFE9318", VA = "0xFE9318")]
				set
				{
				}
			}

			[Token(Token = "0x1700060E")]
			public int count
			{
				[Token(Token = "0x60028FC")]
				[Address(RVA = "0xFE9338", Offset = "0xFE9338", VA = "0xFE9338")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028FD")]
				[Address(RVA = "0xFE9340", Offset = "0xFE9340", VA = "0xFE9340")]
				set
				{
				}
			}

			[Token(Token = "0x1700060F")]
			public bool autoCount
			{
				[Token(Token = "0x60028FE")]
				[Address(RVA = "0xFE9360", Offset = "0xFE9360", VA = "0xFE9360")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60028FF")]
				[Address(RVA = "0xFE9368", Offset = "0xFE9368", VA = "0xFE9368")]
				set
				{
				}
			}

			[Token(Token = "0x17000610")]
			public UVOverride overrideUVs
			{
				[Token(Token = "0x6002900")]
				[Address(RVA = "0xFE938C", Offset = "0xFE938C", VA = "0xFE938C")]
				get
				{
					return default(UVOverride);
				}
				[Token(Token = "0x6002901")]
				[Address(RVA = "0xFE9394", Offset = "0xFE9394", VA = "0xFE9394")]
				set
				{
				}
			}

			[Token(Token = "0x17000611")]
			public Vector2 uvOffset
			{
				[Token(Token = "0x6002902")]
				[Address(RVA = "0xFE93AC", Offset = "0xFE93AC", VA = "0xFE93AC")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002903")]
				[Address(RVA = "0xFE93B4", Offset = "0xFE93B4", VA = "0xFE93B4")]
				set
				{
				}
			}

			[Token(Token = "0x17000612")]
			public Vector2 uvScale
			{
				[Token(Token = "0x6002904")]
				[Address(RVA = "0xFE93E8", Offset = "0xFE93E8", VA = "0xFE93E8")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002905")]
				[Address(RVA = "0xFE93F0", Offset = "0xFE93F0", VA = "0xFE93F0")]
				set
				{
				}
			}

			[Token(Token = "0x17000613")]
			public bool overrideNormal
			{
				[Token(Token = "0x6002906")]
				[Address(RVA = "0xFE9424", Offset = "0xFE9424", VA = "0xFE9424")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002907")]
				[Address(RVA = "0xFE942C", Offset = "0xFE942C", VA = "0xFE942C")]
				set
				{
				}
			}

			[Token(Token = "0x17000614")]
			public Vector3 customNormal
			{
				[Token(Token = "0x6002908")]
				[Address(RVA = "0xFE9450", Offset = "0xFE9450", VA = "0xFE9450")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002909")]
				[Address(RVA = "0xFE945C", Offset = "0xFE945C", VA = "0xFE945C")]
				set
				{
				}
			}

			[Token(Token = "0x17000615")]
			public MeshScaleModifier scaleModifier
			{
				[Token(Token = "0x600290A")]
				[Address(RVA = "0xFE94C8", Offset = "0xFE94C8", VA = "0xFE94C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600290B")]
			[Address(RVA = "0xFE94D0", Offset = "0xFE94D0", VA = "0xFE94D0")]
			public Channel(string n, SplineMesh parent)
			{
			}

			[Token(Token = "0x600290C")]
			[Address(RVA = "0xFE96EC", Offset = "0xFE96EC", VA = "0xFE96EC")]
			public Channel(string n, Mesh inputMesh, SplineMesh parent)
			{
			}

			[Token(Token = "0x600290D")]
			[Address(RVA = "0xFE968C", Offset = "0xFE968C", VA = "0xFE968C")]
			private void Init()
			{
			}

			[Token(Token = "0x600290E")]
			[Address(RVA = "0xFE9910", Offset = "0xFE9910", VA = "0xFE9910")]
			public void CopyTo(Channel target)
			{
			}

			[Token(Token = "0x600290F")]
			[Address(RVA = "0xFE9B40", Offset = "0xFE9B40", VA = "0xFE9B40")]
			public int GetMeshCount()
			{
				return default(int);
			}

			[Token(Token = "0x6002910")]
			[Address(RVA = "0xFE9B8C", Offset = "0xFE9B8C", VA = "0xFE9B8C")]
			public void SwapMeshes(int a, int b)
			{
			}

			[Token(Token = "0x6002911")]
			[Address(RVA = "0xFE9CC0", Offset = "0xFE9CC0", VA = "0xFE9CC0")]
			public void DuplicateMesh(int index)
			{
			}

			[Token(Token = "0x6002912")]
			[Address(RVA = "0xFE9D8C", Offset = "0xFE9D8C", VA = "0xFE9D8C")]
			public MeshDefinition GetMesh(int index)
			{
				return null;
			}

			[Token(Token = "0x6002913")]
			[Address(RVA = "0xFE9E00", Offset = "0xFE9E00", VA = "0xFE9E00")]
			public void AddMesh(Mesh input)
			{
			}

			[Token(Token = "0x6002914")]
			[Address(RVA = "0xFE9E9C", Offset = "0xFE9E9C", VA = "0xFE9E9C")]
			public void RemoveMesh(int index)
			{
			}

			[Token(Token = "0x6002915")]
			[Address(RVA = "0xFE9F08", Offset = "0xFE9F08", VA = "0xFE9F08")]
			public void ResetIteration()
			{
			}

			[Token(Token = "0x6002916")]
			[Address(RVA = "0xFEA040", Offset = "0xFEA040", VA = "0xFEA040")]
			public Vector2 NextOffset(double percent)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002917")]
			[Address(RVA = "0xFEA104", Offset = "0xFEA104", VA = "0xFEA104")]
			public Quaternion NextPlaceRotation(double percent)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002918")]
			[Address(RVA = "0xFEA210", Offset = "0xFEA210", VA = "0xFEA210")]
			public float NextExtrudeRotation(double percent)
			{
				return default(float);
			}

			[Token(Token = "0x6002919")]
			[Address(RVA = "0xFEA290", Offset = "0xFEA290", VA = "0xFEA290")]
			public Vector3 NextExtrudeScale(double percent)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600291A")]
			[Address(RVA = "0xFEA3BC", Offset = "0xFEA3BC", VA = "0xFEA3BC")]
			public Vector3 NextPlaceScale()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600291B")]
			[Address(RVA = "0xFEA518", Offset = "0xFEA518", VA = "0xFEA518")]
			public MeshDefinition NextMesh()
			{
				return null;
			}

			[Token(Token = "0x600291C")]
			[Address(RVA = "0xFE8C64", Offset = "0xFE8C64", VA = "0xFE8C64")]
			internal void Rebuild()
			{
			}

			[Token(Token = "0x600291D")]
			[Address(RVA = "0xFEA5F0", Offset = "0xFEA5F0", VA = "0xFEA5F0")]
			private void Refresh()
			{
			}
		}

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private List<Channel> channels;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool useLastResult;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private SplineSample lastResult;

		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private SplineSample modifiedResult;

		[Token(Token = "0x60028BD")]
		[Address(RVA = "0x1AFC5F0", Offset = "0x1AFC5F0", VA = "0x1AFC5F0", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60028BE")]
		[Address(RVA = "0x1AFC6E4", Offset = "0x1AFC6E4", VA = "0x1AFC6E4")]
		public void RemoveChannel(int index)
		{
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x1AFC758", Offset = "0x1AFC758", VA = "0x1AFC758")]
		public void SwapChannels(int a, int b)
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x1AFC894", Offset = "0x1AFC894", VA = "0x1AFC894")]
		public Channel AddChannel(Mesh inputMesh, string name)
		{
			return null;
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0x1AFC648", Offset = "0x1AFC648", VA = "0x1AFC648")]
		public Channel AddChannel(string name)
		{
			return null;
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x1AFC938", Offset = "0x1AFC938", VA = "0x1AFC938")]
		public int GetChannelCount()
		{
			return default(int);
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x1AFC984", Offset = "0x1AFC984", VA = "0x1AFC984")]
		public Channel GetChannel(int index)
		{
			return null;
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x1AFC9F8", Offset = "0x1AFC9F8", VA = "0x1AFC9F8", Slot = "22")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x1AFCA20", Offset = "0x1AFCA20", VA = "0x1AFCA20")]
		private void Generate()
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x1AFDBF0", Offset = "0x1AFDBF0", VA = "0x1AFDBF0")]
		private void Place(Channel channel, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x1AFD434", Offset = "0x1AFD434", VA = "0x1AFD434")]
		private void Stretch(Channel channel, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x1AFE35C", Offset = "0x1AFE35C", VA = "0x1AFE35C", Slot = "25")]
		protected override void CreateMesh()
		{
		}

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0x1AFE3C0", Offset = "0x1AFE3C0", VA = "0x1AFE3C0")]
		public SplineMesh()
		{
		}
	}
	[Token(Token = "0x20006EA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FC60", Offset = "0xB5FC60")]
	public class SplineMorph : MonoBehaviour
	{
		[Token(Token = "0x20006EB")]
		public enum CycleMode
		{
			[Token(Token = "0x400294D")]
			Default,
			[Token(Token = "0x400294E")]
			Loop,
			[Token(Token = "0x400294F")]
			PingPong
		}

		[Token(Token = "0x20006EC")]
		public enum UpdateMode
		{
			[Token(Token = "0x4002951")]
			Update,
			[Token(Token = "0x4002952")]
			FixedUpdate,
			[Token(Token = "0x4002953")]
			LateUpdate
		}

		[Serializable]
		[Token(Token = "0x20006ED")]
		public class Channel
		{
			[Token(Token = "0x20006EE")]
			public enum Interpolation
			{
				[Token(Token = "0x400295A")]
				Linear,
				[Token(Token = "0x400295B")]
				Spherical
			}

			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			internal SplinePoint[] points;

			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			internal float percent;

			[Token(Token = "0x4002956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x4002957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve curve;

			[Token(Token = "0x4002958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Interpolation interpolation;

			[Token(Token = "0x6002972")]
			[Address(RVA = "0xFEA694", Offset = "0xFEA694", VA = "0xFEA694")]
			public Channel()
			{
			}
		}

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SplineComputer.Space space;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public bool cycle;

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public CycleMode cycleMode;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public UpdateMode cycleUpdateMode;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float cycleDuration;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _spline;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplinePoint[] points;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float cycleValue;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private short cycleDirection;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB77230", Offset = "0xB77230")]
		private Channel[] channels;

		[Token(Token = "0x17000622")]
		public SplineComputer spline
		{
			[Token(Token = "0x6002957")]
			[Address(RVA = "0x1AFE584", Offset = "0x1AFE584", VA = "0x1AFE584")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002958")]
			[Address(RVA = "0x1AFE58C", Offset = "0x1AFE58C", VA = "0x1AFE58C")]
			set
			{
			}
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x1AFE630", Offset = "0x1AFE630", VA = "0x1AFE630")]
		private void Reset()
		{
		}

		[Token(Token = "0x600295A")]
		[Address(RVA = "0x1AFE688", Offset = "0x1AFE688", VA = "0x1AFE688")]
		private void Update()
		{
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0x1AFE7A0", Offset = "0x1AFE7A0", VA = "0x1AFE7A0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0x1AFE7B4", Offset = "0x1AFE7B4", VA = "0x1AFE7B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600295D")]
		[Address(RVA = "0x1AFE698", Offset = "0x1AFE698", VA = "0x1AFE698")]
		private void RunUpdate()
		{
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0x1AFE8B4", Offset = "0x1AFE8B4", VA = "0x1AFE8B4")]
		public void SetCycle(float value)
		{
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0x1AFE8DC", Offset = "0x1AFE8DC", VA = "0x1AFE8DC")]
		public void SetWeight(int index, float weight)
		{
		}

		[Token(Token = "0x6002960")]
		[Address(RVA = "0x1AFF3D0", Offset = "0x1AFF3D0", VA = "0x1AFF3D0")]
		public void SetWeight(string name, float weight)
		{
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x1AFE7C8", Offset = "0x1AFE7C8", VA = "0x1AFE7C8")]
		public void SetWeight(float percent, bool loop = false)
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x1AFF544", Offset = "0x1AFF544", VA = "0x1AFF544")]
		public void CaptureSnapshot(string name)
		{
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x1AFF56C", Offset = "0x1AFF56C", VA = "0x1AFF56C")]
		public void CaptureSnapshot(int index)
		{
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0x1AFF71C", Offset = "0x1AFF71C", VA = "0x1AFF71C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x1AFF778", Offset = "0x1AFF778", VA = "0x1AFF778")]
		public SplinePoint[] GetSnapshot(int index)
		{
			return null;
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0x1AFF7BC", Offset = "0x1AFF7BC", VA = "0x1AFF7BC")]
		public SplinePoint[] GetSnapshot(string name)
		{
			return null;
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0x1AFF810", Offset = "0x1AFF810", VA = "0x1AFF810")]
		public float GetWeight(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0x1AFF854", Offset = "0x1AFF854", VA = "0x1AFF854")]
		public float GetWeight(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x1AFF8A8", Offset = "0x1AFF8A8", VA = "0x1AFF8A8")]
		public void AddChannel(string name)
		{
		}

		[Token(Token = "0x600296A")]
		[Address(RVA = "0x1AFFB84", Offset = "0x1AFFB84", VA = "0x1AFFB84")]
		public void RemoveChannel(string name)
		{
		}

		[Token(Token = "0x600296B")]
		[Address(RVA = "0x1AFFBAC", Offset = "0x1AFFBAC", VA = "0x1AFFBAC")]
		public void RemoveChannel(int index)
		{
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0x1AFF440", Offset = "0x1AFF440", VA = "0x1AFF440")]
		private int GetChannelIndex(string name)
		{
			return default(int);
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x1AFFD30", Offset = "0x1AFFD30", VA = "0x1AFFD30")]
		public int GetChannelCount()
		{
			return default(int);
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0x1AFFD48", Offset = "0x1AFFD48", VA = "0x1AFFD48")]
		public Channel GetChannel(int index)
		{
			return null;
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0x1AFFD84", Offset = "0x1AFFD84", VA = "0x1AFFD84")]
		public Channel GetChannel(string name)
		{
			return null;
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0x1AFE938", Offset = "0x1AFE938", VA = "0x1AFE938")]
		public void UpdateMorph()
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0x1AFFE04", Offset = "0x1AFFE04", VA = "0x1AFFE04")]
		public SplineMorph()
		{
		}
	}
	[Token(Token = "0x20006EF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FC98", Offset = "0xB5FC98")]
	public class SplinePositioner : SplineTracer
	{
		[Token(Token = "0x20006F0")]
		public enum Mode
		{
			[Token(Token = "0x4002961")]
			Percent,
			[Token(Token = "0x4002962")]
			Distance
		}

		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private double _position;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private float animPosition;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x17000623")]
		public GameObject targetObject
		{
			[Token(Token = "0x6002973")]
			[Address(RVA = "0x1B00E08", Offset = "0x1B00E08", VA = "0x1B00E08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002974")]
			[Address(RVA = "0x1B00E94", Offset = "0x1B00E94", VA = "0x1B00E94")]
			set
			{
			}
		}

		[Token(Token = "0x17000624")]
		public double position
		{
			[Token(Token = "0x6002975")]
			[Address(RVA = "0x1B00FF4", Offset = "0x1B00FF4", VA = "0x1B00FF4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002976")]
			[Address(RVA = "0x1B00FFC", Offset = "0x1B00FFC", VA = "0x1B00FFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000625")]
		public Mode mode
		{
			[Token(Token = "0x6002977")]
			[Address(RVA = "0x1B01054", Offset = "0x1B01054", VA = "0x1B01054")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6002978")]
			[Address(RVA = "0x1B0105C", Offset = "0x1B0105C", VA = "0x1B0105C")]
			set
			{
			}
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x1B0107C", Offset = "0x1B0107C", VA = "0x1B0107C", Slot = "11")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x1B01138", Offset = "0x1B01138", VA = "0x1B01138", Slot = "27")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x1B01158", Offset = "0x1B01158", VA = "0x1B01158", Slot = "25")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x1B011B0", Offset = "0x1B011B0", VA = "0x1B011B0", Slot = "26")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x1B01208", Offset = "0x1B01208", VA = "0x1B01208", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0x1B0124C", Offset = "0x1B0124C", VA = "0x1B0124C", Slot = "23")]
		public override void SetPercent(double percent, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x1B01284", Offset = "0x1B01284", VA = "0x1B01284", Slot = "24")]
		public override void SetDistance(float distance, bool checkTriggers = false, bool handleJuncitons = false)
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0x1B012C0", Offset = "0x1B012C0", VA = "0x1B012C0")]
		public SplinePositioner()
		{
		}
	}
	[Token(Token = "0x20006F1")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FCD0", Offset = "0xB5FCD0")]
	public class SplineProjector : SplineTracer
	{
		[Token(Token = "0x20006F2")]
		public enum Mode
		{
			[Token(Token = "0x400296F")]
			Accurate,
			[Token(Token = "0x4002970")]
			Cached
		}

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private bool _autoProject;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB773FC", Offset = "0xB773FC")]
		private int _subdivide;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Transform _projectTarget;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private Transform applyTarget;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		public Vector2 _offset;

		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		public Vector3 _rotationOffset;

		[Token(Token = "0x400296D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private Vector3 lastPosition;

		[Token(Token = "0x17000626")]
		public Mode mode
		{
			[Token(Token = "0x6002981")]
			[Address(RVA = "0x1B01B40", Offset = "0x1B01B40", VA = "0x1B01B40")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6002982")]
			[Address(RVA = "0x1B01B48", Offset = "0x1B01B48", VA = "0x1B01B48")]
			set
			{
			}
		}

		[Token(Token = "0x17000627")]
		public bool autoProject
		{
			[Token(Token = "0x6002983")]
			[Address(RVA = "0x1B01B68", Offset = "0x1B01B68", VA = "0x1B01B68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002984")]
			[Address(RVA = "0x1B01B70", Offset = "0x1B01B70", VA = "0x1B01B70")]
			set
			{
			}
		}

		[Token(Token = "0x17000628")]
		public int subdivide
		{
			[Token(Token = "0x6002985")]
			[Address(RVA = "0x1B01BA0", Offset = "0x1B01BA0", VA = "0x1B01BA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002986")]
			[Address(RVA = "0x1B01BA8", Offset = "0x1B01BA8", VA = "0x1B01BA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000629")]
		public Transform projectTarget
		{
			[Token(Token = "0x6002987")]
			[Address(RVA = "0x1B01BD0", Offset = "0x1B01BD0", VA = "0x1B01BD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002988")]
			[Address(RVA = "0x1B01C5C", Offset = "0x1B01C5C", VA = "0x1B01C5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700062A")]
		public GameObject targetObject
		{
			[Token(Token = "0x6002989")]
			[Address(RVA = "0x1B01D08", Offset = "0x1B01D08", VA = "0x1B01D08")]
			get
			{
				return null;
			}
			[Token(Token = "0x600298A")]
			[Address(RVA = "0x1B01DF4", Offset = "0x1B01DF4", VA = "0x1B01DF4")]
			set
			{
			}
		}

		[Token(Token = "0x140000A8")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x600298B")]
			[Address(RVA = "0x1B01EA8", Offset = "0x1B01EA8", VA = "0x1B01EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87974", Offset = "0xB87974")]
			add
			{
			}
			[Token(Token = "0x600298C")]
			[Address(RVA = "0x1B01F4C", Offset = "0x1B01F4C", VA = "0x1B01F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87984", Offset = "0xB87984")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A9")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x600298D")]
			[Address(RVA = "0x1B01FF0", Offset = "0x1B01FF0", VA = "0x1B01FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87994", Offset = "0xB87994")]
			add
			{
			}
			[Token(Token = "0x600298E")]
			[Address(RVA = "0x1B02094", Offset = "0x1B02094", VA = "0x1B02094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879A4", Offset = "0xB879A4")]
			remove
			{
			}
		}

		[Token(Token = "0x600298F")]
		[Address(RVA = "0x1B02138", Offset = "0x1B02138", VA = "0x1B02138", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0x1B0216C", Offset = "0x1B0216C", VA = "0x1B0216C", Slot = "27")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0x1B02210", Offset = "0x1B02210", VA = "0x1B02210", Slot = "25")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0x1B022C4", Offset = "0x1B022C4", VA = "0x1B022C4", Slot = "26")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0x1B02378", Offset = "0x1B02378", VA = "0x1B02378", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0x1B026C4", Offset = "0x1B026C4", VA = "0x1B026C4", Slot = "17")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x1B026C8", Offset = "0x1B026C8", VA = "0x1B026C8", Slot = "18")]
		protected override void OnSplineChanged()
		{
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x1B027CC", Offset = "0x1B027CC", VA = "0x1B027CC")]
		private void Project()
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x1B0248C", Offset = "0x1B0248C", VA = "0x1B0248C")]
		public void CalculateProjection()
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x1B02AF8", Offset = "0x1B02AF8", VA = "0x1B02AF8")]
		public SplineProjector()
		{
		}
	}
	[Token(Token = "0x20006F3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FD1C", Offset = "0xB5FD1C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FD1C", Offset = "0xB5FD1C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FD1C", Offset = "0xB5FD1C")]
	[ExecuteInEditMode]
	public class SplineRenderer : MeshGenerator
	{
		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public bool autoOrient;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[HideInInspector]
		public int updateFrameInterval;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int _currentFrame;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 _vertexDirection;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool _orthographic;

		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		private bool _init;

		[Token(Token = "0x1700062B")]
		public int slices
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0x1B02BA0", Offset = "0x1B02BA0", VA = "0x1B02BA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600299A")]
			[Address(RVA = "0x1B02BA8", Offset = "0x1B02BA8", VA = "0x1B02BA8")]
			set
			{
			}
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x1B02BD0", Offset = "0x1B02BD0", VA = "0x1B02BD0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x1B02C34", Offset = "0x1B02C34", VA = "0x1B02C34")]
		private void Start()
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x1B02D28", Offset = "0x1B02D28", VA = "0x1B02D28", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0x1B02D4C", Offset = "0x1B02D4C", VA = "0x1B02D4C", Slot = "22")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x1B0336C", Offset = "0x1B0336C", VA = "0x1B0336C")]
		public void RenderWithCamera(Camera cam)
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x1B03414", Offset = "0x1B03414", VA = "0x1B03414")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0x1B02E0C", Offset = "0x1B02E0C", VA = "0x1B02E0C")]
		public void GenerateVertices(Vector3 vertexDirection, bool orthoGraphic)
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x1B03578", Offset = "0x1B03578", VA = "0x1B03578")]
		public SplineRenderer()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public class SplineTracer : SplineUser
	{
		[Token(Token = "0x20006F5")]
		public class NodeConnection
		{
			[Token(Token = "0x400298A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x400298B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int point;

			[Token(Token = "0x60029BF")]
			[Address(RVA = "0xFED0EC", Offset = "0xFED0EC", VA = "0xFED0EC")]
			public NodeConnection(Node node, int point)
			{
			}
		}

		[Token(Token = "0x20006F6")]
		public enum PhysicsMode
		{
			[Token(Token = "0x400298D")]
			Transform,
			[Token(Token = "0x400298E")]
			Rigidbody,
			[Token(Token = "0x400298F")]
			Rigidbody2D
		}

		[Token(Token = "0x20006F7")]
		public delegate void JunctionHandler(List<NodeConnection> passed);

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SplineTrigger[] triggerInvokeQueue;

		[Token(Token = "0x4002979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<NodeConnection> nodeConnectionQueue;

		[Token(Token = "0x400297A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int addTriggerIndex;

		[Token(Token = "0x400297B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		public bool applyDirectionRotation;

		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[HideInInspector]
		public bool useTriggers;

		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public int triggerGroup;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[HideInInspector]
		protected Spline.Direction _direction;

		[Token(Token = "0x400297F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		protected bool _dontLerpDirection;

		[Token(Token = "0x4002980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		[HideInInspector]
		protected PhysicsMode _physicsMode;

		[Token(Token = "0x4002981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		protected TransformModule _motion;

		[Token(Token = "0x4002982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody targetRigidbody;

		[Token(Token = "0x4002983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody2D targetRigidbody2D;

		[Token(Token = "0x4002984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		protected Transform targetTransform;

		[Token(Token = "0x4002985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		protected SplineSample _result;

		[Token(Token = "0x4002986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		protected SplineSample _finalResult;

		[Token(Token = "0x4002989")]
		private const double MIN_DELTA = 1E-06;

		[Token(Token = "0x1700062C")]
		public PhysicsMode physicsMode
		{
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0x1B048D0", Offset = "0x1B048D0", VA = "0x1B048D0")]
			get
			{
				return default(PhysicsMode);
			}
			[Token(Token = "0x60029A4")]
			[Address(RVA = "0x1B048D8", Offset = "0x1B048D8", VA = "0x1B048D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700062D")]
		public TransformModule motion
		{
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x1B048E0", Offset = "0x1B048E0", VA = "0x1B048E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062E")]
		public SplineSample result
		{
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0x1B04954", Offset = "0x1B04954", VA = "0x1B04954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062F")]
		public SplineSample modifiedResult
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x1B0495C", Offset = "0x1B0495C", VA = "0x1B0495C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000630")]
		public bool dontLerpDirection
		{
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0x1B04964", Offset = "0x1B04964", VA = "0x1B04964")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x1B0496C", Offset = "0x1B0496C", VA = "0x1B0496C")]
			set
			{
			}
		}

		[Token(Token = "0x17000631")]
		public Spline.Direction direction
		{
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0x1B04990", Offset = "0x1B04990", VA = "0x1B04990")]
			get
			{
				return default(Spline.Direction);
			}
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0x1B04998", Offset = "0x1B04998", VA = "0x1B04998")]
			set
			{
			}
		}

		[Token(Token = "0x140000AA")]
		public event JunctionHandler onNode
		{
			[Token(Token = "0x60029AC")]
			[Address(RVA = "0x1B049B0", Offset = "0x1B049B0", VA = "0x1B049B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879B4", Offset = "0xB879B4")]
			add
			{
			}
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0x1B04A54", Offset = "0x1B04A54", VA = "0x1B04A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879C4", Offset = "0xB879C4")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AB")]
		public event EmptySplineHandler onMotionApplied
		{
			[Token(Token = "0x60029AE")]
			[Address(RVA = "0x1B04AF8", Offset = "0x1B04AF8", VA = "0x1B04AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879D4", Offset = "0xB879D4")]
			add
			{
			}
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x1B04B9C", Offset = "0x1B04B9C", VA = "0x1B04B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879E4", Offset = "0xB879E4")]
			remove
			{
			}
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x1AFACBC", Offset = "0x1AFACBC", VA = "0x1AFACBC", Slot = "22")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x1AFB9D0", Offset = "0x1AFB9D0", VA = "0x1AFB9D0", Slot = "23")]
		public virtual void SetPercent(double percent, bool checkTriggers = false, bool handleJunctions = false)
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x1AFBAFC", Offset = "0x1AFBAFC", VA = "0x1AFBAFC", Slot = "24")]
		public virtual void SetDistance(float distance, bool checkTriggers = false, bool handleJunctions = false)
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0x1B04C64", Offset = "0x1B04C64", VA = "0x1B04C64", Slot = "25")]
		protected virtual Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x1B04CB0", Offset = "0x1B04CB0", VA = "0x1B04CB0", Slot = "26")]
		protected virtual Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0x1B04CFC", Offset = "0x1B04CFC", VA = "0x1B04CFC", Slot = "27")]
		protected virtual Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x1AFAF0C", Offset = "0x1AFAF0C", VA = "0x1AFAF0C")]
		protected void ApplyMotion()
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0x1AFBEF8", Offset = "0x1AFBEF8", VA = "0x1AFBEF8")]
		protected void CheckNodes(double from, double to)
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x1AFC198", Offset = "0x1AFC198", VA = "0x1AFC198")]
		protected void InvokeNodes()
		{
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0x1AFBDA0", Offset = "0x1AFBDA0", VA = "0x1AFBDA0")]
		protected void CheckTriggers(double from, double to)
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0x1B04DE8", Offset = "0x1B04DE8", VA = "0x1B04DE8")]
		private NodeConnection GetJunction(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x1AFC120", Offset = "0x1AFC120", VA = "0x1AFC120")]
		protected void InvokeTriggers()
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x1B00F48", Offset = "0x1B00F48", VA = "0x1B00F48")]
		protected void RefreshTargets()
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x1B04F50", Offset = "0x1B04F50", VA = "0x1B04F50")]
		private void AddTriggerToQueue(SplineTrigger trigger)
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x1AFC4D8", Offset = "0x1AFC4D8", VA = "0x1AFC4D8")]
		public SplineTracer()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	[ExecuteInEditMode]
	public class SplineUser : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20006F9")]
		public enum UpdateMethod
		{
			[Token(Token = "0x40029AD")]
			Update,
			[Token(Token = "0x40029AE")]
			FixedUpdate,
			[Token(Token = "0x40029AF")]
			LateUpdate
		}

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public UpdateMethod updateMethod;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB7786C", Offset = "0xB7786C")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _spline;

		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private bool _autoUpdate;

		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		protected RotationModifier _rotationModifier;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		protected OffsetModifier _offsetModifier;

		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		protected ColorModifier _colorModifier;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		protected SizeModifier _sizeModifier;

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private SampleCollection sampleCollection;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private SplineSample clipFromSample;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private SplineSample clipToSample;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private bool _loopSamples;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private double _clipFrom;

		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		private double _clipTo;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		private float animClipFrom;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[HideInInspector]
		private float animClipTo;

		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool rebuild;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool getSamples;

		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool postBuild;

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform _trs;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _hasTransform;

		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[HideInInspector]
		private int _sampleCount;

		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[HideInInspector]
		private int startSampleIndex;

		[Token(Token = "0x40029A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected SplineSample evalResult;

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[HideInInspector]
		public bool buildOnAwake;

		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		[HideInInspector]
		public bool buildOnEnable;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private bool _isUpdated;

		[Token(Token = "0x17000632")]
		public SplineComputer spline
		{
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x1B055A0", Offset = "0x1B055A0", VA = "0x1B055A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x1B055A8", Offset = "0x1B055A8", VA = "0x1B055A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000633")]
		public double clipFrom
		{
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x1B05704", Offset = "0x1B05704", VA = "0x1B05704")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60029C7")]
			[Address(RVA = "0x1B0570C", Offset = "0x1B0570C", VA = "0x1B0570C")]
			set
			{
			}
		}

		[Token(Token = "0x17000634")]
		public double clipTo
		{
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x1B05794", Offset = "0x1B05794", VA = "0x1B05794")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60029C9")]
			[Address(RVA = "0x1B0579C", Offset = "0x1B0579C", VA = "0x1B0579C")]
			set
			{
			}
		}

		[Token(Token = "0x17000635")]
		public bool autoUpdate
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x1B05824", Offset = "0x1B05824", VA = "0x1B05824")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x1B0582C", Offset = "0x1B0582C", VA = "0x1B0582C")]
			set
			{
			}
		}

		[Token(Token = "0x17000636")]
		public bool loopSamples
		{
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x1B0585C", Offset = "0x1B0585C", VA = "0x1B0585C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x1B05864", Offset = "0x1B05864", VA = "0x1B05864")]
			set
			{
			}
		}

		[Token(Token = "0x17000637")]
		public double span
		{
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x1B058A4", Offset = "0x1B058A4", VA = "0x1B058A4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000638")]
		public bool samplesAreLooped
		{
			[Token(Token = "0x60029CF")]
			[Address(RVA = "0x1AFBBDC", Offset = "0x1AFBBDC", VA = "0x1AFBBDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000639")]
		public RotationModifier rotationModifier
		{
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x1B058D4", Offset = "0x1B058D4", VA = "0x1B058D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063A")]
		public OffsetModifier offsetModifier
		{
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x1B058DC", Offset = "0x1B058DC", VA = "0x1B058DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063B")]
		public ColorModifier colorModifier
		{
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0x1B058E4", Offset = "0x1B058E4", VA = "0x1B058E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063C")]
		public SizeModifier sizeModifier
		{
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x1B058EC", Offset = "0x1B058EC", VA = "0x1B058EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063D")]
		protected Transform trs
		{
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x1B058F4", Offset = "0x1B058F4", VA = "0x1B058F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700063E")]
		protected bool hasTransform
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0x1B058FC", Offset = "0x1B058FC", VA = "0x1B058FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700063F")]
		public int sampleCount
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x1B05904", Offset = "0x1B05904", VA = "0x1B05904")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x140000AC")]
		public event EmptySplineHandler onPostBuild
		{
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x1B0590C", Offset = "0x1B0590C", VA = "0x1B0590C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB879F4", Offset = "0xB879F4")]
			add
			{
			}
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0x1B059AC", Offset = "0x1B059AC", VA = "0x1B059AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A04", Offset = "0xB87A04")]
			remove
			{
			}
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0x1B05A4C", Offset = "0x1B05A4C", VA = "0x1B05A4C", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0x1B05AAC", Offset = "0x1B05AAC", VA = "0x1B05AAC")]
		protected void CacheTransform()
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0x1B02168", Offset = "0x1B02168", VA = "0x1B02168", Slot = "7")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0x1B05AE8", Offset = "0x1B05AE8", VA = "0x1B05AE8", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x1B05B04", Offset = "0x1B05B04", VA = "0x1B05B04", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x1B05B08", Offset = "0x1B05B08", VA = "0x1B05B08", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x1B010B8", Offset = "0x1B010B8", VA = "0x1B010B8", Slot = "11")]
		protected virtual void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x1AFBBFC", Offset = "0x1AFBBFC", VA = "0x1AFBBFC")]
		public SplineSample GetSampleRaw(int index)
		{
			return null;
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x1B03548", Offset = "0x1B03548", VA = "0x1B03548")]
		public void GetSample(int index, SplineSample target)
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x1B05C18", Offset = "0x1B05C18", VA = "0x1B05C18", Slot = "12")]
		public virtual void Rebuild()
		{
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x1B05C2C", Offset = "0x1B05C2C", VA = "0x1B05C2C", Slot = "13")]
		public virtual void RebuildImmediate()
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x1B05D4C", Offset = "0x1B05D4C", VA = "0x1B05D4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x1B05EFC", Offset = "0x1B05EFC", VA = "0x1B05EFC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x1B05F50", Offset = "0x1B05F50", VA = "0x1B05F50")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x1B05D9C", Offset = "0x1B05D9C", VA = "0x1B05D9C")]
		private void RunUpdate()
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x1B05FA4", Offset = "0x1B05FA4", VA = "0x1B05FA4")]
		private void BuildThreaded()
		{
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x1B05FD8", Offset = "0x1B05FD8", VA = "0x1B05FD8")]
		private void ResampleAndBuildThreaded()
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0x1B06014", Offset = "0x1B06014", VA = "0x1B06014", Slot = "14")]
		protected virtual void Run()
		{
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0x1AFACD0", Offset = "0x1AFACD0", VA = "0x1AFACD0", Slot = "15")]
		protected virtual void LateRun()
		{
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0x1B06018", Offset = "0x1B06018", VA = "0x1B06018", Slot = "16")]
		protected virtual void Build()
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0x1AFAEA0", Offset = "0x1AFAEA0", VA = "0x1AFAEA0", Slot = "17")]
		protected virtual void PostBuild()
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0x1B0601C", Offset = "0x1B0601C", VA = "0x1B0601C", Slot = "18")]
		protected virtual void OnSplineChanged()
		{
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0x1AFE324", Offset = "0x1AFE324", VA = "0x1AFE324")]
		public void ModifySample(SplineSample source, SplineSample destination)
		{
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x1AFE0FC", Offset = "0x1AFE0FC", VA = "0x1AFE0FC")]
		public void ModifySample(SplineSample sample)
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x1B06020", Offset = "0x1B06020", VA = "0x1B06020")]
		public void SetClipRange(double from, double to)
		{
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x1B05B0C", Offset = "0x1B05B0C", VA = "0x1B05B0C")]
		private void GetSamples()
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x1AFBBB4", Offset = "0x1AFBBB4", VA = "0x1AFBBB4")]
		public double ClipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x1B060A4", Offset = "0x1B060A4", VA = "0x1B060A4")]
		public void ClipPercent(ref double percent)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x1B04D04", Offset = "0x1B04D04", VA = "0x1B04D04")]
		public double UnclipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x1B04D2C", Offset = "0x1B04D2C", VA = "0x1B04D2C")]
		public void UnclipPercent(ref double percent)
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x1B06170", Offset = "0x1B06170", VA = "0x1B06170")]
		private int GetSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x1B061CC", Offset = "0x1B061CC", VA = "0x1B061CC")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x1AFAEA4", Offset = "0x1AFAEA4", VA = "0x1AFAEA4")]
		public void Evaluate(double percent, SplineSample result)
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x1B06208", Offset = "0x1B06208", VA = "0x1B06208")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x1B062A4", Offset = "0x1B062A4", VA = "0x1B062A4")]
		public void Evaluate(ref SplineSample[] results, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x1B0636C", Offset = "0x1B0636C", VA = "0x1B0636C")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x1AFC378", Offset = "0x1AFC378", VA = "0x1AFC378")]
		public double Travel(double start, float distance, Spline.Direction direction, out float moved)
		{
			return default(double);
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x1B04C40", Offset = "0x1B04C40", VA = "0x1B04C40")]
		public double Travel(double start, float distance, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x1AFC26C", Offset = "0x1AFC26C", VA = "0x1AFC26C")]
		public double TravelWithOffset(double start, float distance, Spline.Direction direction, Vector3 offset, out float moved)
		{
			return default(double);
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x1B063E0", Offset = "0x1B063E0", VA = "0x1B063E0", Slot = "19")]
		public virtual void Project(Vector3 position, SplineSample result, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x1AFD3C8", Offset = "0x1AFD3C8", VA = "0x1AFD3C8")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0x1B06520", Offset = "0x1B06520", VA = "0x1B06520")]
		public float CalculateLengthWithOffset(Vector3 offset, double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x1B065AC", Offset = "0x1B065AC", VA = "0x1B065AC", Slot = "20")]
		public virtual void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0x1B065F0", Offset = "0x1B065F0", VA = "0x1B065F0", Slot = "21")]
		public virtual void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0x1B05160", Offset = "0x1B05160", VA = "0x1B05160")]
		public SplineUser()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FDF4", Offset = "0xB5FDF4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FDF4", Offset = "0xB5FDF4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FDF4", Offset = "0xB5FDF4")]
	public class SurfaceGenerator : MeshGenerator
	{
		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private float _expand;

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private float _extrude;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvScale;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvOffset;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _extrudeSpline;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private SplineSample[] extrudeResults;

		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityVertices;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityNormals;

		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] projectedVerts;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		[HideInInspector]
		private int[] surfaceTris;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[HideInInspector]
		private int[] wallTris;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeFrom;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeTo;

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformUvs;

		[Token(Token = "0x17000640")]
		public float expand
		{
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x116AF20", Offset = "0x116AF20", VA = "0x116AF20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x116AF28", Offset = "0x116AF28", VA = "0x116AF28")]
			set
			{
			}
		}

		[Token(Token = "0x17000641")]
		public float extrude
		{
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x116AF48", Offset = "0x116AF48", VA = "0x116AF48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x116AF50", Offset = "0x116AF50", VA = "0x116AF50")]
			set
			{
			}
		}

		[Token(Token = "0x17000642")]
		public double extrudeClipFrom
		{
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x116AF70", Offset = "0x116AF70", VA = "0x116AF70")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0x116AF78", Offset = "0x116AF78", VA = "0x116AF78")]
			set
			{
			}
		}

		[Token(Token = "0x17000643")]
		public double extrudeClipTo
		{
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0x116AF98", Offset = "0x116AF98", VA = "0x116AF98")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x116AFA0", Offset = "0x116AFA0", VA = "0x116AFA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000644")]
		public Vector2 sideUvScale
		{
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0x116AFC0", Offset = "0x116AFC0", VA = "0x116AFC0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x116AFCC", Offset = "0x116AFCC", VA = "0x116AFCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000645")]
		public Vector2 sideUvOffset
		{
			[Token(Token = "0x6002A10")]
			[Address(RVA = "0x116B010", Offset = "0x116B010", VA = "0x116B010")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0x116B01C", Offset = "0x116B01C", VA = "0x116B01C")]
			set
			{
			}
		}

		[Token(Token = "0x17000646")]
		public SplineComputer extrudeSpline
		{
			[Token(Token = "0x6002A12")]
			[Address(RVA = "0x116B060", Offset = "0x116B060", VA = "0x116B060")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0x116B068", Offset = "0x116B068", VA = "0x116B068")]
			set
			{
			}
		}

		[Token(Token = "0x17000647")]
		public bool uniformUvs
		{
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x116B1AC", Offset = "0x116B1AC", VA = "0x116B1AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0x116B1B4", Offset = "0x116B1B4", VA = "0x116B1B4")]
			set
			{
			}
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0x116B1E0", Offset = "0x116B1E0", VA = "0x116B1E0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x116B244", Offset = "0x116B244", VA = "0x116B244", Slot = "22")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x116B294", Offset = "0x116B294", VA = "0x116B294")]
		public void Generate()
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x116CBC4", Offset = "0x116CBC4", VA = "0x116CBC4")]
		private void GenerateSurfaceTris(bool flip)
		{
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x116CEE4", Offset = "0x116CEE4", VA = "0x116CEE4")]
		private int WriteTris(ref int[] tris, ref int[] target, int vertexOffset, int trisOffset, bool flip)
		{
			return default(int);
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x116CAF8", Offset = "0x116CAF8", VA = "0x116CAF8")]
		private bool IsClockwise(Vector2[] points2D)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x116CC78", Offset = "0x116CC78", VA = "0x116CC78")]
		private void GetIdentityVerts(Vector3 center, Vector3 normal, bool clockwise)
		{
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x116C6A4", Offset = "0x116C6A4", VA = "0x116C6A4")]
		private void GetProjectedVertices(int count, out Vector3 center, out Vector3 normal)
		{
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x116D0B8", Offset = "0x116D0B8", VA = "0x116D0B8")]
		public SurfaceGenerator()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FEAC", Offset = "0xB5FEAC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FEAC", Offset = "0xB5FEAC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FEAC", Offset = "0xB5FEAC")]
	public class TubeGenerator : MeshGenerator
	{
		[Token(Token = "0x20006FC")]
		public enum CapMethod
		{
			[Token(Token = "0x40029C9")]
			None,
			[Token(Token = "0x40029CA")]
			Flat,
			[Token(Token = "0x40029CB")]
			Round
		}

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private int _sides;

		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private int _roundCapLatitude;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private CapMethod _capMode;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB78040", Offset = "0xB78040")]
		[SerializeField]
		private float _revolve;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private float _capUVScale;

		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		[HideInInspector]
		private float _uvTwist;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bodyVertexCount;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int bodyTrisCount;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int capVertexCount;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int capTrisCount;

		[Token(Token = "0x17000648")]
		public int sides
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x1150734", Offset = "0x1150734", VA = "0x1150734")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x115073C", Offset = "0x115073C", VA = "0x115073C")]
			set
			{
			}
		}

		[Token(Token = "0x17000649")]
		public CapMethod capMode
		{
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x1150768", Offset = "0x1150768", VA = "0x1150768")]
			get
			{
				return default(CapMethod);
			}
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x1150770", Offset = "0x1150770", VA = "0x1150770")]
			set
			{
			}
		}

		[Token(Token = "0x1700064A")]
		public int roundCapLatitude
		{
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0x1150790", Offset = "0x1150790", VA = "0x1150790")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0x1150798", Offset = "0x1150798", VA = "0x1150798")]
			set
			{
			}
		}

		[Token(Token = "0x1700064B")]
		public float revolve
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x11507CC", Offset = "0x11507CC", VA = "0x11507CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x11507D4", Offset = "0x11507D4", VA = "0x11507D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700064C")]
		public float capUVScale
		{
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0x11507F4", Offset = "0x11507F4", VA = "0x11507F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x11507FC", Offset = "0x11507FC", VA = "0x11507FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700064D")]
		public float uvTwist
		{
			[Token(Token = "0x6002A29")]
			[Address(RVA = "0x115081C", Offset = "0x115081C", VA = "0x115081C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0x1150824", Offset = "0x1150824", VA = "0x1150824")]
			set
			{
			}
		}

		[Token(Token = "0x1700064E")]
		private bool useCap
		{
			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0x1150844", Offset = "0x1150844", VA = "0x1150844")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0x1150910", Offset = "0x1150910", VA = "0x1150910", Slot = "7")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0x1150918", Offset = "0x1150918", VA = "0x1150918", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0x115097C", Offset = "0x115097C", VA = "0x115097C", Slot = "22")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0x1150AB0", Offset = "0x1150AB0", VA = "0x1150AB0")]
		private void Generate()
		{
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0x1150FDC", Offset = "0x1150FDC", VA = "0x1150FDC")]
		private void GenerateFlatCaps()
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0x115160C", Offset = "0x115160C", VA = "0x115160C")]
		private void GenerateRoundCaps()
		{
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0x11524A4", Offset = "0x11524A4", VA = "0x11524A4")]
		public TubeGenerator()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FF64", Offset = "0xB5FF64")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB5FF64", Offset = "0xB5FF64")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB5FF64", Offset = "0xB5FF64")]
	public class WaveformGenerator : MeshGenerator
	{
		[Token(Token = "0x20006FE")]
		public enum Axis
		{
			[Token(Token = "0x40029D1")]
			X,
			[Token(Token = "0x40029D2")]
			Y,
			[Token(Token = "0x40029D3")]
			Z
		}

		[Token(Token = "0x20006FF")]
		public enum Space
		{
			[Token(Token = "0x40029D5")]
			World,
			[Token(Token = "0x40029D6")]
			Local
		}

		[Token(Token = "0x2000700")]
		public enum UVWrapMode
		{
			[Token(Token = "0x40029D8")]
			Clamp,
			[Token(Token = "0x40029D9")]
			UniformX,
			[Token(Token = "0x40029DA")]
			UniformY,
			[Token(Token = "0x40029DB")]
			Uniform
		}

		[Token(Token = "0x40029CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x40029CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[HideInInspector]
		private bool _symmetry;

		[Token(Token = "0x40029CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private UVWrapMode _uvWrapMode;

		[Token(Token = "0x40029CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x1700064F")]
		public Axis axis
		{
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0xF86CF0", Offset = "0xF86CF0", VA = "0xF86CF0")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0xF86CF8", Offset = "0xF86CF8", VA = "0xF86CF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000650")]
		public bool symmetry
		{
			[Token(Token = "0x6002A35")]
			[Address(RVA = "0xF86D18", Offset = "0xF86D18", VA = "0xF86D18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0xF86D20", Offset = "0xF86D20", VA = "0xF86D20")]
			set
			{
			}
		}

		[Token(Token = "0x17000651")]
		public UVWrapMode uvWrapMode
		{
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0xF86D4C", Offset = "0xF86D4C", VA = "0xF86D4C")]
			get
			{
				return default(UVWrapMode);
			}
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0xF86D54", Offset = "0xF86D54", VA = "0xF86D54")]
			set
			{
			}
		}

		[Token(Token = "0x17000652")]
		public int slices
		{
			[Token(Token = "0x6002A39")]
			[Address(RVA = "0xF86D74", Offset = "0xF86D74", VA = "0xF86D74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0xF86D7C", Offset = "0xF86D7C", VA = "0xF86D7C")]
			set
			{
			}
		}

		[Token(Token = "0x6002A3B")]
		[Address(RVA = "0xF86DA4", Offset = "0xF86DA4", VA = "0xF86DA4", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002A3C")]
		[Address(RVA = "0xF86E08", Offset = "0xF86E08", VA = "0xF86E08", Slot = "22")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6002A3D")]
		[Address(RVA = "0xF87534", Offset = "0xF87534", VA = "0xF87534", Slot = "16")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6002A3E")]
		[Address(RVA = "0xF8753C", Offset = "0xF8753C", VA = "0xF8753C", Slot = "15")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6002A3F")]
		[Address(RVA = "0xF86E30", Offset = "0xF86E30", VA = "0xF86E30")]
		private void Generate()
		{
		}

		[Token(Token = "0x6002A40")]
		[Address(RVA = "0xF87544", Offset = "0xF87544", VA = "0xF87544")]
		public WaveformGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000701")]
	public class ObjectSequence<T>
	{
		[Token(Token = "0x2000702")]
		public enum Iteration
		{
			[Token(Token = "0x40029E4")]
			Ordered,
			[Token(Token = "0x40029E5")]
			Random
		}

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T startObject;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T endObject;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] objects;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Iteration iteration;

		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int index;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private System.Random randomizer;

		[Token(Token = "0x17000653")]
		public int randomSeed
		{
			[Token(Token = "0x6002A41")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002A42")]
			set
			{
			}
		}

		[Token(Token = "0x6002A43")]
		public ObjectSequence()
		{
		}

		[Token(Token = "0x6002A44")]
		public T GetFirst()
		{
			return (T)null;
		}

		[Token(Token = "0x6002A45")]
		public T GetLast()
		{
			return (T)null;
		}

		[Token(Token = "0x6002A46")]
		public T Next()
		{
			return (T)null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000703")]
	public class SampleCollection
	{
		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public SplineSample[] samples;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] optimizedIndices;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineComputer.SampleMode sampleMode;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SplineSample _workSample;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public double clipFrom;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public double clipTo;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool loopSamples;

		[Token(Token = "0x17000654")]
		public int Count
		{
			[Token(Token = "0x6002A47")]
			[Address(RVA = "0x13C7FB4", Offset = "0x13C7FB4", VA = "0x13C7FB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000655")]
		private bool hasSamples
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x13C7FD0", Offset = "0x13C7FD0", VA = "0x13C7FD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0x13C7FF4", Offset = "0x13C7FF4", VA = "0x13C7FF4")]
		public SampleCollection()
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0x13C80CC", Offset = "0x13C80CC", VA = "0x13C80CC")]
		public SampleCollection(SampleCollection input)
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0x13C81F4", Offset = "0x13C81F4", VA = "0x13C81F4")]
		public int GetClippedSampleCount(double clipFrom, double clipTo, out int startIndex, out int endIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0x13C8330", Offset = "0x13C8330", VA = "0x13C8330")]
		public void GetSamplingValues(double percent, out int sampleIndex, out double lerp)
		{
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0x13C84B8", Offset = "0x13C84B8", VA = "0x13C84B8")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A4E")]
		[Address(RVA = "0x13C85CC", Offset = "0x13C85CC", VA = "0x13C85CC")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0x13C8644", Offset = "0x13C8644", VA = "0x13C8644")]
		public void Evaluate(double percent, SplineSample result)
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0x13C8764", Offset = "0x13C8764", VA = "0x13C8764")]
		public void Evaluate(ref SplineSample[] results, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0x13C8A14", Offset = "0x13C8A14", VA = "0x13C8A14")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0x13C8C5C", Offset = "0x13C8C5C", VA = "0x13C8C5C")]
		public double Travel(double start, float distance, Spline.Direction direction, out float moved, double clipFrom = 0.0, double clipTo = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x13C8FBC", Offset = "0x13C8FBC", VA = "0x13C8FBC")]
		public double TravelWithOffset(double start, float distance, Spline.Direction direction, Vector3 offset, out float moved, double clipFrom = 0.0, double clipTo = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x13C95C8", Offset = "0x13C95C8", VA = "0x13C95C8")]
		public double Travel(double start, float distance, Spline.Direction direction = Spline.Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x13C95F4", Offset = "0x13C95F4", VA = "0x13C95F4")]
		public void Project(Vector3 position, int controlPointCount, SplineSample result, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x13C9F9C", Offset = "0x13C9F9C", VA = "0x13C9F9C")]
		private double GetSamplePercent(int sampleIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x13CA024", Offset = "0x13CA024", VA = "0x13CA024")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x13CA20C", Offset = "0x13CA20C", VA = "0x13CA20C")]
		public float CalculateLengthWithOffset(Vector3 offset, double from = 0.0, double to = 1.0)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000704")]
	public class Spline
	{
		[Token(Token = "0x2000705")]
		public enum Direction
		{
			[Token(Token = "0x40029F6")]
			Forward = 1,
			[Token(Token = "0x40029F7")]
			Backward = -1
		}

		[Token(Token = "0x2000706")]
		public enum Type
		{
			[Token(Token = "0x40029F9")]
			CatmullRom,
			[Token(Token = "0x40029FA")]
			BSpline,
			[Token(Token = "0x40029FB")]
			Bezier,
			[Token(Token = "0x40029FC")]
			Linear
		}

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplinePoint[] points;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool closed;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Type type;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool linearAverageDirection;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve customValueInterpolation;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve customNormalInterpolation;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sampleRate;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] catPoints;

		[Token(Token = "0x17000656")]
		public bool isClosed
		{
			[Token(Token = "0x6002A59")]
			[Address(RVA = "0x21A4B98", Offset = "0x21A4B98", VA = "0x21A4B98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x21A4BCC", Offset = "0x21A4BCC", VA = "0x21A4BCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000657")]
		public double moveStep
		{
			[Token(Token = "0x6002A5B")]
			[Address(RVA = "0x21A4BD0", Offset = "0x21A4BD0", VA = "0x21A4BD0")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0x21A4C68", Offset = "0x21A4C68", VA = "0x21A4C68")]
			set
			{
			}
		}

		[Token(Token = "0x17000658")]
		public int iterations
		{
			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0x21A4C18", Offset = "0x21A4C18", VA = "0x21A4C18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0x21A4C6C", Offset = "0x21A4C6C", VA = "0x21A4C6C")]
		public Spline(Type type)
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x21A4D1C", Offset = "0x21A4D1C", VA = "0x21A4D1C")]
		public Spline(Type type, int sampleRate)
		{
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x21A4DDC", Offset = "0x21A4DDC", VA = "0x21A4DDC")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0x21A4F7C", Offset = "0x21A4F7C", VA = "0x21A4F7C")]
		public double Project(Vector3 position, int subdivide = 4, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0x21A5318", Offset = "0x21A5318", VA = "0x21A5318")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A63")]
		[Address(RVA = "0x21A5510", Offset = "0x21A5510", VA = "0x21A5510")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0x21A5938", Offset = "0x21A5938", VA = "0x21A5938")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x21A4F24", Offset = "0x21A4F24", VA = "0x21A4F24")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x21A5A20", Offset = "0x21A5A20", VA = "0x21A5A20")]
		public SplineSample Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x21A605C", Offset = "0x21A605C", VA = "0x21A605C")]
		public SplineSample Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0x21A60DC", Offset = "0x21A60DC", VA = "0x21A60DC")]
		public void Evaluate(SplineSample result, int pointIndex)
		{
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x21A5A98", Offset = "0x21A5A98", VA = "0x21A5A98")]
		public void Evaluate(SplineSample result, double percent)
		{
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0x21A61C4", Offset = "0x21A61C4", VA = "0x21A61C4")]
		public void Evaluate(ref SplineSample[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x21A63E0", Offset = "0x21A63E0", VA = "0x21A63E0")]
		public void EvaluateUniform(ref SplineSample[] samples, ref double[] originalSamplePercents, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x21A69E8", Offset = "0x21A69E8", VA = "0x21A69E8")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x21A6800", Offset = "0x21A6800", VA = "0x21A6800")]
		public double Travel(double start, float distance, out float moved, Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0x21A6BD4", Offset = "0x21A6BD4", VA = "0x21A6BD4")]
		public double Travel(double start, float distance, Direction direction = Direction.Forward)
		{
			return default(double);
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0x21A5968", Offset = "0x21A5968", VA = "0x21A5968")]
		public void EvaluatePosition(ref Vector3 point, double percent)
		{
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0x21A610C", Offset = "0x21A610C", VA = "0x21A610C")]
		public void EvaluateTangent(ref Vector3 tangent, double percent)
		{
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0x21A512C", Offset = "0x21A512C", VA = "0x21A512C")]
		private double GetClosestPoint(int iterations, Vector3 point, double start, double end, int slices)
		{
			return default(double);
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0x21A6DA4", Offset = "0x21A6DA4", VA = "0x21A6DA4")]
		public void Break()
		{
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0x21A6DAC", Offset = "0x21A6DAC", VA = "0x21A6DAC")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0x21A6FFC", Offset = "0x21A6FFC", VA = "0x21A6FFC")]
		public void Close()
		{
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0x21A70A0", Offset = "0x21A70A0", VA = "0x21A70A0")]
		public void CatToBezierTangents()
		{
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0x21A6BFC", Offset = "0x21A6BFC", VA = "0x21A6BFC")]
		private void GetPoint(ref Vector3 point, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0x21A6D7C", Offset = "0x21A6D7C", VA = "0x21A6D7C")]
		private void GetTangent(ref Vector3 tangent, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0x21A7EFC", Offset = "0x21A7EFC", VA = "0x21A7EFC")]
		private void LinearGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0x21A839C", Offset = "0x21A839C", VA = "0x21A839C")]
		private void LinearGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x21A7CFC", Offset = "0x21A7CFC", VA = "0x21A7CFC")]
		private void BSPGetPoint(ref Vector3 point, double time, int i)
		{
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x21A7B84", Offset = "0x21A7B84", VA = "0x21A7B84")]
		private void BezierGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x21A81FC", Offset = "0x21A81FC", VA = "0x21A81FC")]
		private void BezierGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0x21A7990", Offset = "0x21A7990", VA = "0x21A7990")]
		private void CatmullRomGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x21A8038", Offset = "0x21A8038", VA = "0x21A8038")]
		private void GetCatmullRomTangent(ref Vector3 direction, double t, int i)
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x21A7428", Offset = "0x21A7428", VA = "0x21A7428")]
		private void GetCatPoints(int i)
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x21A84F4", Offset = "0x21A84F4", VA = "0x21A84F4")]
		public static void FormatFromTo(ref double from, ref double to, bool preventInvert = true)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000707")]
	public struct SplinePoint
	{
		[Token(Token = "0x2000708")]
		public enum Type
		{
			[Token(Token = "0x4002A05")]
			SmoothMirrored,
			[Token(Token = "0x4002A06")]
			Broken,
			[Token(Token = "0x4002A07")]
			SmoothFree
		}

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB782DC", Offset = "0xB782DC")]
		[SerializeField]
		[HideInInspector]
		private Type _type;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 normal;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float size;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 tangent;

		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 tangent2;

		[Token(Token = "0x17000659")]
		public Type type
		{
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0x1B005E8", Offset = "0x1B005E8", VA = "0x1B005E8")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x1AFFDCC", Offset = "0x1AFFDCC", VA = "0x1AFFDCC")]
			set
			{
			}
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x1B0061C", Offset = "0x1B0061C", VA = "0x1B0061C")]
		public static SplinePoint Lerp(SplinePoint a, SplinePoint b, float t)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x1B007D8", Offset = "0x1B007D8", VA = "0x1B007D8")]
		private static void GetInterpolatedTangents(SplinePoint a, SplinePoint b, float t, out Vector3 t1, out Vector3 t2)
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0x1B0088C", Offset = "0x1B0088C", VA = "0x1B0088C")]
		public static bool AreDifferent(ref SplinePoint a, ref SplinePoint b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0x1B00960", Offset = "0x1B00960", VA = "0x1B00960")]
		public void SetPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0x1B009A8", Offset = "0x1B009A8", VA = "0x1B009A8")]
		public void SetTangentPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0x1B00AA4", Offset = "0x1B00AA4", VA = "0x1B00AA4")]
		public void SetTangent2Position(Vector3 pos)
		{
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0x1B00BCC", Offset = "0x1B00BCC", VA = "0x1B00BCC")]
		public SplinePoint(Vector3 p)
		{
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0x1B00C50", Offset = "0x1B00C50", VA = "0x1B00C50")]
		public SplinePoint(Vector3 p, Vector3 t)
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0x1B00CEC", Offset = "0x1B00CEC", VA = "0x1B00CEC")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0x1B00D3C", Offset = "0x1B00D3C", VA = "0x1B00D3C")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 tan2, Vector3 nor, float s, Color col)
		{
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x1B00D84", Offset = "0x1B00D84", VA = "0x1B00D84")]
		public SplinePoint(SplinePoint source)
		{
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0x1B005F0", Offset = "0x1B005F0", VA = "0x1B005F0")]
		private void SmoothMirrorTangent2()
		{
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x1B00AE8", Offset = "0x1B00AE8", VA = "0x1B00AE8")]
		private void SmoothMirrorTangent()
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0x1B009EC", Offset = "0x1B009EC", VA = "0x1B009EC")]
		private void SmoothFreeTangent2()
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0x1B00B14", Offset = "0x1B00B14", VA = "0x1B00B14")]
		private void SmoothFreeTangent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000709")]
	public class SplineSample
	{
		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 up;

		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 forward;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float size;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double percent;

		[Token(Token = "0x1700065A")]
		public Quaternion rotation
		{
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x1AFE250", Offset = "0x1AFE250", VA = "0x1AFE250")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700065B")]
		public Vector3 right
		{
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x1AFE178", Offset = "0x1AFE178", VA = "0x1AFE178")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002A95")]
		[Address(RVA = "0x1B035FC", Offset = "0x1B035FC", VA = "0x1B035FC")]
		public static SplineSample Lerp(SplineSample a, SplineSample b, float t)
		{
			return null;
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0x1B03794", Offset = "0x1B03794", VA = "0x1B03794")]
		public static SplineSample Lerp(SplineSample a, SplineSample b, double t)
		{
			return null;
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0x1B03818", Offset = "0x1B03818", VA = "0x1B03818")]
		public static void Lerp(SplineSample a, SplineSample b, double t, SplineSample target)
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0x1B03680", Offset = "0x1B03680", VA = "0x1B03680")]
		public static void Lerp(SplineSample a, SplineSample b, float t, SplineSample target)
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0x1B0392C", Offset = "0x1B0392C", VA = "0x1B0392C")]
		public void Lerp(SplineSample b, double t)
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0x1B03934", Offset = "0x1B03934", VA = "0x1B03934")]
		public void Lerp(SplineSample b, float t)
		{
		}

		[Token(Token = "0x6002A9B")]
		[Address(RVA = "0x1AFBD44", Offset = "0x1AFBD44", VA = "0x1AFBD44")]
		public void CopyFrom(SplineSample input)
		{
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0x1AFE518", Offset = "0x1AFE518", VA = "0x1AFE518")]
		public SplineSample()
		{
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0x1B0393C", Offset = "0x1B0393C", VA = "0x1B0393C")]
		public SplineSample(Vector3 position, Vector3 normal, Vector3 direction, Color color, float size, double percent)
		{
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0x1B03A2C", Offset = "0x1B03A2C", VA = "0x1B03A2C")]
		public SplineSample(SplineSample input)
		{
		}
	}
	[Token(Token = "0x200070A")]
	public static class SplineThreading
	{
		[Token(Token = "0x200070B")]
		public delegate void EmptyHandler();

		[Token(Token = "0x200070C")]
		internal class ThreadDef
		{
			[Token(Token = "0x200070D")]
			internal class Worker
			{
				[Token(Token = "0x4002A13")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				internal bool computing;

				[Token(Token = "0x4002A14")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				internal Queue<EmptyHandler> instructions;

				[Token(Token = "0x6002AB2")]
				[Address(RVA = "0x1B963F0", Offset = "0x1B963F0", VA = "0x1B963F0")]
				public Worker()
				{
				}
			}

			[Token(Token = "0x200070E")]
			internal delegate void BoolHandler(bool flag);

			[Token(Token = "0x4002A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private ParameterizedThreadStart start;

			[Token(Token = "0x4002A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Thread thread;

			[Token(Token = "0x4002A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Worker worker;

			[Token(Token = "0x1700065D")]
			internal bool isAlive
			{
				[Token(Token = "0x6002AAB")]
				[Address(RVA = "0xFECAE0", Offset = "0xFECAE0", VA = "0xFECAE0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700065E")]
			internal bool computing
			{
				[Token(Token = "0x6002AAC")]
				[Address(RVA = "0xFECAF4", Offset = "0xFECAF4", VA = "0xFECAF4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0xFECB10", Offset = "0xFECB10", VA = "0xFECB10")]
			internal ThreadDef()
			{
			}

			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0xFECBD4", Offset = "0xFECBD4", VA = "0xFECBD4")]
			internal void Queue(EmptyHandler handler)
			{
			}

			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0xFECC40", Offset = "0xFECC40", VA = "0xFECC40")]
			internal void Interrupt()
			{
			}

			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0xFECC5C", Offset = "0xFECC5C", VA = "0xFECC5C")]
			internal void Restart()
			{
			}

			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0xFECCE8", Offset = "0xFECCE8", VA = "0xFECCE8")]
			internal void Abort()
			{
			}
		}

		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static ThreadDef[] threads;

		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly object locker;

		[Token(Token = "0x1700065C")]
		public static int threadCount
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0x1B03C58", Offset = "0x1B03C58", VA = "0x1B03C58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x1B03CC8", Offset = "0x1B03CC8", VA = "0x1B03CC8")]
			set
			{
			}
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x1B03E04", Offset = "0x1B03E04", VA = "0x1B03E04")]
		static SplineThreading()
		{
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x1B03FD0", Offset = "0x1B03FD0", VA = "0x1B03FD0")]
		private static void Quitting()
		{
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x1B040FC", Offset = "0x1B040FC", VA = "0x1B040FC")]
		private static void RunThread(object o)
		{
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x1B0450C", Offset = "0x1B0450C", VA = "0x1B0450C")]
		public static void Run(EmptyHandler handler)
		{
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0x1B047A4", Offset = "0x1B047A4", VA = "0x1B047A4")]
		public static void PrewarmThreads()
		{
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0x1B04028", Offset = "0x1B04028", VA = "0x1B04028")]
		public static void Stop()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200070F")]
	public class TriggerGroup
	{
		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SplineTrigger[] triggers;

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0x1150568", Offset = "0x1150568", VA = "0x1150568")]
		public void Check(double start, double end, [Optional] SplineUser user)
		{
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0x1150624", Offset = "0x1150624", VA = "0x1150624")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x1150690", Offset = "0x1150690", VA = "0x1150690")]
		public TriggerGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000710")]
	public class SplineTrigger
	{
		[Token(Token = "0x2000711")]
		public enum Type
		{
			[Token(Token = "0x4002A23")]
			Double,
			[Token(Token = "0x4002A24")]
			Forward,
			[Token(Token = "0x4002A25")]
			Backward
		}

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool workOnce;

		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool worked;

		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB78348", Offset = "0xB78348")]
		public double position;

		[Token(Token = "0x4002A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4002A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public Color color;

		[Token(Token = "0x4002A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public UnityEvent onCross;

		[Token(Token = "0x140000AD")]
		public event Action<SplineUser> onUserCross
		{
			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0x1B05344", Offset = "0x1B05344", VA = "0x1B05344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A14", Offset = "0xB87A14")]
			add
			{
			}
			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0x1B053E4", Offset = "0x1B053E4", VA = "0x1B053E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB87A24", Offset = "0xB87A24")]
			remove
			{
			}
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x1B05484", Offset = "0x1B05484", VA = "0x1B05484")]
		public SplineTrigger(Type t)
		{
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x1B0557C", Offset = "0x1B0557C", VA = "0x1B0557C")]
		public void AddListener(UnityAction action)
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x1B05598", Offset = "0x1B05598", VA = "0x1B05598")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0x1B04EBC", Offset = "0x1B04EBC", VA = "0x1B04EBC")]
		public bool Check(double previousPercent, double currentPercent)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0x1B050A0", Offset = "0x1B050A0", VA = "0x1B050A0")]
		public void Invoke([Optional] SplineUser user)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000712")]
	public class TransformModule : ISerializationCallbackReceiver
	{
		[Token(Token = "0x2000713")]
		public enum VelocityHandleMode
		{
			[Token(Token = "0x4002A3B")]
			Zero,
			[Token(Token = "0x4002A3C")]
			Preserve,
			[Token(Token = "0x4002A3D")]
			Align,
			[Token(Token = "0x4002A3E")]
			AlignRealistic
		}

		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private bool _hasOffset;

		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		[HideInInspector]
		private bool _hasRotationOffset;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB78438", Offset = "0xB78438")]
		private Vector2 _offset;

		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB78494", Offset = "0xB78494")]
		private Vector3 _rotationOffset;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB784F0", Offset = "0xB784F0")]
		private Vector3 _baseScale;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VelocityHandleMode velocityHandleMode;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplineSample _splineResult;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool applyPositionX;

		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool applyPositionY;

		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool applyPositionZ;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Spline.Direction direction;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool applyRotationX;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool applyRotationY;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		public bool applyRotationZ;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
		public bool applyScaleX;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool applyScaleY;

		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool applyScaleZ;

		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public SplineUser targetUser;

		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 position;

		[Token(Token = "0x4002A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Quaternion rotation;

		[Token(Token = "0x1700065F")]
		public Vector2 offset
		{
			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0x15DE418", Offset = "0x15DE418", VA = "0x15DE418")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x15DE420", Offset = "0x15DE420", VA = "0x15DE420")]
			set
			{
			}
		}

		[Token(Token = "0x17000660")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x15DE528", Offset = "0x15DE528", VA = "0x15DE528")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x15DE534", Offset = "0x15DE534", VA = "0x15DE534")]
			set
			{
			}
		}

		[Token(Token = "0x17000661")]
		public bool hasOffset
		{
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x15DE644", Offset = "0x15DE644", VA = "0x15DE644")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000662")]
		public bool hasRotationOffset
		{
			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x15DE64C", Offset = "0x15DE64C", VA = "0x15DE64C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000663")]
		public Vector3 baseScale
		{
			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x15DE654", Offset = "0x15DE654", VA = "0x15DE654")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x15DE660", Offset = "0x15DE660", VA = "0x15DE660")]
			set
			{
			}
		}

		[Token(Token = "0x17000664")]
		public SplineSample splineResult
		{
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x15DE740", Offset = "0x15DE740", VA = "0x15DE740")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x15DE7B4", Offset = "0x15DE7B4", VA = "0x15DE7B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000665")]
		public bool applyPosition
		{
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x15DE848", Offset = "0x15DE848", VA = "0x15DE848")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0x15DE870", Offset = "0x15DE870", VA = "0x15DE870")]
			set
			{
			}
		}

		[Token(Token = "0x17000666")]
		public bool applyRotation
		{
			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0x15DE884", Offset = "0x15DE884", VA = "0x15DE884")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0x15DE8AC", Offset = "0x15DE8AC", VA = "0x15DE8AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000667")]
		public bool applyScale
		{
			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0x15DE8C0", Offset = "0x15DE8C0", VA = "0x15DE8C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0x15DE8E8", Offset = "0x15DE8E8", VA = "0x15DE8E8")]
			set
			{
			}
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0x15DE8FC", Offset = "0x15DE8FC", VA = "0x15DE8FC")]
		public void ApplyTransform(Transform input)
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x15DEE60", Offset = "0x15DEE60", VA = "0x15DEE60")]
		public void ApplyRigidbody(Rigidbody input)
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0x15DF114", Offset = "0x15DF114", VA = "0x15DF114")]
		public void ApplyRigidbody2D(Rigidbody2D input)
		{
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0x15DEF6C", Offset = "0x15DEF6C", VA = "0x15DEF6C")]
		private Vector3 HandleVelocity(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0x15DE980", Offset = "0x15DE980", VA = "0x15DE980")]
		private Vector3 GetPosition(Vector3 inputPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0x15DEBA0", Offset = "0x15DEBA0", VA = "0x15DEBA0")]
		private Quaternion GetRotation(Quaternion inputRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0x15DEDF8", Offset = "0x15DEDF8", VA = "0x15DEDF8")]
		private Vector3 GetScale(Vector3 inputScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x15DF23C", Offset = "0x15DF23C", VA = "0x15DF23C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x15DF240", Offset = "0x15DF240", VA = "0x15DF240", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x15DF2D8", Offset = "0x15DF2D8", VA = "0x15DF2D8")]
		public TransformModule()
		{
		}
	}
}
namespace Dreamteck.Splines.Examples
{
	[Token(Token = "0x2000714")]
	public class SpectrumVisualizer : MonoBehaviour
	{
		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int samples;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB7855C", Offset = "0xB7855C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB7855C", Offset = "0xB7855C")]
		public float minSpectrumRange;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB785B0", Offset = "0xB785B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB785B0", Offset = "0xB785B0")]
		public float maxSpectrumRange;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float increaseSpeed;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float decreaseSpeed;

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxOffset;

		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource source;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplineComputer computer;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] positions;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve spectrumMultiply;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] m_spectrumLerp;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] m_left;

		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] m_right;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] m_spectrum;

		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SplinePoint[] m_points;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_avg;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_percent;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool m_isAudioSource;

		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public FFTWindow m_fftWindow;

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x21A3A40", Offset = "0x21A3A40", VA = "0x21A3A40")]
		private void Start()
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0x21A3EBC", Offset = "0x21A3EBC", VA = "0x21A3EBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x21A4670", Offset = "0x21A4670", VA = "0x21A4670")]
		public SpectrumVisualizer()
		{
		}
	}
}
namespace Dreamteck.Splines.Primitives
{
	[Token(Token = "0x2000715")]
	public class Capsule : SplinePrimitive
	{
		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float height;

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x11A3214", Offset = "0x11A3214", VA = "0x11A3214", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x11A321C", Offset = "0x11A321C", VA = "0x11A321C", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x11A38C4", Offset = "0x11A38C4", VA = "0x11A38C4")]
		public Capsule()
		{
		}
	}
	[Token(Token = "0x2000716")]
	public class Ellipse : SplinePrimitive
	{
		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float xRadius;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yRadius;

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x10F6244", Offset = "0x10F6244", VA = "0x10F6244", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x10F624C", Offset = "0x10F624C", VA = "0x10F624C", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x10F65B8", Offset = "0x10F65B8", VA = "0x10F65B8")]
		public Ellipse()
		{
		}
	}
	[Token(Token = "0x2000717")]
	public class Line : SplinePrimitive
	{
		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool mirror;

		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int segments;

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x10C6958", Offset = "0x10C6958", VA = "0x10C6958", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x10C6960", Offset = "0x10C6960", VA = "0x10C6960", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0x10C6AA0", Offset = "0x10C6AA0", VA = "0x10C6AA0")]
		public Line()
		{
		}
	}
	[Token(Token = "0x2000718")]
	public class Ngon : SplinePrimitive
	{
		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int sides;

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x1BC931C", Offset = "0x1BC931C", VA = "0x1BC931C", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002AE9")]
		[Address(RVA = "0x1BC9324", Offset = "0x1BC9324", VA = "0x1BC9324", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0x1BC949C", Offset = "0x1BC949C", VA = "0x1BC949C")]
		public Ngon()
		{
		}
	}
	[Token(Token = "0x2000719")]
	public class Rectangle : SplinePrimitive
	{
		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 size;

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0x1007710", Offset = "0x1007710", VA = "0x1007710", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x1007718", Offset = "0x1007718", VA = "0x1007718", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0x10079D4", Offset = "0x10079D4", VA = "0x10079D4")]
		public Rectangle()
		{
		}
	}
	[Token(Token = "0x200071A")]
	public class RoundedRectangle : SplinePrimitive
	{
		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector2 size;

		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float xRadius;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yRadius;

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0x13C0B84", Offset = "0x13C0B84", VA = "0x13C0B84", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0x13C0B8C", Offset = "0x13C0B8C", VA = "0x13C0B8C", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0x13C12F8", Offset = "0x13C12F8", VA = "0x13C12F8")]
		public RoundedRectangle()
		{
		}
	}
	[Token(Token = "0x200071B")]
	public class Spiral : SplinePrimitive
	{
		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float startRadius;

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float endRadius;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float stretch;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int iterations;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool clockwise;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve curve;

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x21A4694", Offset = "0x21A4694", VA = "0x21A4694", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x21A469C", Offset = "0x21A469C", VA = "0x21A469C", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002AF3")]
		[Address(RVA = "0x21A4B0C", Offset = "0x21A4B0C", VA = "0x21A4B0C")]
		public Spiral()
		{
		}
	}
	[Token(Token = "0x200071C")]
	public class SplinePrimitive
	{
		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool closed;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SplinePoint[] points;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rotation;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool is2D;

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x1B012C4", Offset = "0x1B012C4", VA = "0x1B012C4", Slot = "4")]
		public virtual void Calculate()
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0x1B015AC", Offset = "0x1B015AC", VA = "0x1B015AC", Slot = "5")]
		protected virtual void Generate()
		{
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x1B015B0", Offset = "0x1B015B0", VA = "0x1B015B0")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x1B01674", Offset = "0x1B01674", VA = "0x1B01674")]
		public void UpdateSpline(Spline spline)
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x1B01718", Offset = "0x1B01718", VA = "0x1B01718")]
		public SplineComputer CreateSplineComputer(string name, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x1B01878", Offset = "0x1B01878", VA = "0x1B01878")]
		public void UpdateSplineComputer(SplineComputer comp)
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x1B0192C", Offset = "0x1B0192C", VA = "0x1B0192C")]
		public SplinePoint[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x1B01934", Offset = "0x1B01934", VA = "0x1B01934", Slot = "6")]
		public virtual Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x1B0193C", Offset = "0x1B0193C", VA = "0x1B0193C")]
		public bool GetIsClosed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x1B012F0", Offset = "0x1B012F0", VA = "0x1B012F0")]
		private void ApplyOffset()
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x1B01944", Offset = "0x1B01944", VA = "0x1B01944")]
		protected void CreatePoints(int count, SplinePoint.Type type)
		{
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0x1B01AB8", Offset = "0x1B01AB8", VA = "0x1B01AB8")]
		public SplinePrimitive()
		{
		}
	}
	[Token(Token = "0x200071D")]
	public class Star : SplinePrimitive
	{
		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float radius;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float depth;

		[Token(Token = "0x4002A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int sides;

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0x1B066B0", Offset = "0x1B066B0", VA = "0x1B066B0", Slot = "6")]
		public override Spline.Type GetSplineType()
		{
			return default(Spline.Type);
		}

		[Token(Token = "0x6002B01")]
		[Address(RVA = "0x1B066B8", Offset = "0x1B066B8", VA = "0x1B066B8", Slot = "5")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x1B06864", Offset = "0x1B06864", VA = "0x1B06864")]
		public Star()
		{
		}
	}
}
namespace Dreamteck.Splines.IO
{
	[Token(Token = "0x200071E")]
	public class CSV : SplineParser
	{
		[Token(Token = "0x200071F")]
		public enum ColumnType
		{
			[Token(Token = "0x4002A71")]
			Position,
			[Token(Token = "0x4002A72")]
			Tangent,
			[Token(Token = "0x4002A73")]
			Tangent2,
			[Token(Token = "0x4002A74")]
			Normal,
			[Token(Token = "0x4002A75")]
			Size,
			[Token(Token = "0x4002A76")]
			Color
		}

		[Token(Token = "0x4002A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ColumnType> columns;

		[Token(Token = "0x4002A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CultureInfo culture;

		[Token(Token = "0x4002A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NumberStyles style;

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x11A058C", Offset = "0x11A058C", VA = "0x11A058C")]
		public CSV(SplineComputer computer)
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x11A07FC", Offset = "0x11A07FC", VA = "0x11A07FC")]
		public CSV(string filePath, [Optional] List<ColumnType> customColumns)
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0x11A0B34", Offset = "0x11A0B34", VA = "0x11A0B34")]
		private void Read(string[] lines)
		{
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0x11A1680", Offset = "0x11A1680", VA = "0x11A1680")]
		public SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002B07")]
		[Address(RVA = "0x11A169C", Offset = "0x11A169C", VA = "0x11A169C")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x11A16B8", Offset = "0x11A16B8", VA = "0x11A16B8")]
		public void FlatX()
		{
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x11A1824", Offset = "0x11A1824", VA = "0x11A1824")]
		public void FlatY()
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x11A1994", Offset = "0x11A1994", VA = "0x11A1994")]
		public void FlatZ()
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0x11A1B3C", Offset = "0x11A1B3C", VA = "0x11A1B3C")]
		private void AddTitle(ref string[] content, string title)
		{
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x11A1C18", Offset = "0x11A1C18", VA = "0x11A1C18")]
		private void AddVector3Title(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6002B0D")]
		[Address(RVA = "0x11A1E34", Offset = "0x11A1E34", VA = "0x11A1E34")]
		private void AddColorTitle(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0x11A20D4", Offset = "0x11A20D4", VA = "0x11A20D4")]
		private void AddVector3(ref string[] content, int index, Vector3 vector)
		{
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0x11A223C", Offset = "0x11A223C", VA = "0x11A223C")]
		private void AddColor(ref string[] content, int index, Color color)
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0x11A2124", Offset = "0x11A2124", VA = "0x11A2124")]
		private void AddFloat(ref string[] content, int index, float value)
		{
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0x11A22A8", Offset = "0x11A22A8", VA = "0x11A22A8")]
		public void Write(string filePath)
		{
		}
	}
	[Token(Token = "0x2000720")]
	public class SVG : SplineParser
	{
		[Token(Token = "0x2000721")]
		public enum Axis
		{
			[Token(Token = "0x4002A80")]
			X,
			[Token(Token = "0x4002A81")]
			Y,
			[Token(Token = "0x4002A82")]
			Z
		}

		[Token(Token = "0x2000722")]
		internal class PathSegment
		{
			[Token(Token = "0x2000723")]
			internal enum Type
			{
				[Token(Token = "0x4002A87")]
				Cubic,
				[Token(Token = "0x4002A88")]
				CubicShort,
				[Token(Token = "0x4002A89")]
				Quadratic,
				[Token(Token = "0x4002A8A")]
				QuadraticShort
			}

			[Token(Token = "0x4002A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector3 startTangent;

			[Token(Token = "0x4002A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal Vector3 endTangent;

			[Token(Token = "0x4002A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector3 endPoint;

			[Token(Token = "0x6002B34")]
			[Address(RVA = "0xFC7640", Offset = "0xFC7640", VA = "0xFC7640")]
			internal PathSegment(Vector2 s, Vector2 e, Vector2 c)
			{
			}

			[Token(Token = "0x6002B35")]
			[Address(RVA = "0xFC76E0", Offset = "0xFC76E0", VA = "0xFC76E0")]
			internal PathSegment()
			{
			}
		}

		[Token(Token = "0x2000724")]
		public enum Element
		{
			[Token(Token = "0x4002A8C")]
			All,
			[Token(Token = "0x4002A8D")]
			Path,
			[Token(Token = "0x4002A8E")]
			Polygon,
			[Token(Token = "0x4002A8F")]
			Ellipse,
			[Token(Token = "0x4002A90")]
			Rectangle,
			[Token(Token = "0x4002A91")]
			Line
		}

		[Serializable]
		[Token(Token = "0x2000725")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6001C", Offset = "0xB6001C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__25_0;

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xFC7614", Offset = "0xFC7614", VA = "0xFC7614")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B38")]
			[Address(RVA = "0xFC761C", Offset = "0xFC761C", VA = "0xFC761C")]
			internal bool <ReadPath>b__25_0(string t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CultureInfo culture;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NumberStyles style;

		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SplineDefinition> paths;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<SplineDefinition> polygons;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<SplineDefinition> ellipses;

		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<SplineDefinition> rectangles;

		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<SplineDefinition> lines;

		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Transformation> transformBuffer;

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x13C1698", Offset = "0x13C1698", VA = "0x13C1698")]
		public SVG(string filePath)
		{
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x13C1B4C", Offset = "0x13C1B4C", VA = "0x13C1B4C")]
		public SVG(List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6002B14")]
		[Address(RVA = "0x13C1FC0", Offset = "0x13C1FC0", VA = "0x13C1FC0")]
		public void Write(string filePath, Axis ax = Axis.Z)
		{
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x13C2E20", Offset = "0x13C2E20", VA = "0x13C2E20")]
		private Vector2 MapPoint(Vector3 original, Axis ax)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x13C1ACC", Offset = "0x13C1ACC", VA = "0x13C1ACC")]
		private void Read(XmlDocument doc)
		{
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0x13C2E50", Offset = "0x13C2E50", VA = "0x13C2E50")]
		private void Traverse(XmlNodeList nodes)
		{
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x13C4BD4", Offset = "0x13C4BD4", VA = "0x13C4BD4")]
		public List<SplineComputer> CreateSplineComputers(Vector3 position, Quaternion rotation, Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x13C52EC", Offset = "0x13C52EC", VA = "0x13C52EC")]
		public List<Spline> CreateSplines(Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x13C4724", Offset = "0x13C4724", VA = "0x13C4724")]
		private int ReadRectangle(XmlNode rectNode)
		{
			return default(int);
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x13C4420", Offset = "0x13C4420", VA = "0x13C4420")]
		private int ReadLine(XmlNode lineNode)
		{
			return default(int);
		}

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x13C408C", Offset = "0x13C408C", VA = "0x13C408C")]
		private int ReadEllipse(XmlNode ellipseNode)
		{
			return default(int);
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0x13C3D74", Offset = "0x13C3D74", VA = "0x13C3D74")]
		private int ReadPolygon(XmlNode polyNode, bool closed)
		{
			return default(int);
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x13C344C", Offset = "0x13C344C", VA = "0x13C344C")]
		private int ParseTransformation(XmlNode node)
		{
			return default(int);
		}

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x13C5AFC", Offset = "0x13C5AFC", VA = "0x13C5AFC")]
		private List<Transformation> ParseTransformations(string transformContent)
		{
			return null;
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x13C3528", Offset = "0x13C3528", VA = "0x13C3528")]
		private int ReadPath(XmlNode pathNode)
		{
			return default(int);
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0x13C6648", Offset = "0x13C6648", VA = "0x13C6648")]
		private void PathStart(string name, string coords, bool relative)
		{
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x13C67E8", Offset = "0x13C67E8", VA = "0x13C67E8")]
		private void PathClose()
		{
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x13C6828", Offset = "0x13C6828", VA = "0x13C6828")]
		private void PathLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x13C68F8", Offset = "0x13C68F8", VA = "0x13C68F8")]
		private void PathHorizontalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x13C69A4", Offset = "0x13C69A4", VA = "0x13C69A4")]
		private void PathVerticalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x13C6A58", Offset = "0x13C6A58", VA = "0x13C6A58")]
		private void PathCurveTo(string coords, PathSegment.Type type, bool relative)
		{
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x13C6D00", Offset = "0x13C6D00", VA = "0x13C6D00")]
		private void PathArcTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x13C7C18", Offset = "0x13C7C18", VA = "0x13C7C18")]
		private void FlipTangents(ref SplinePoint point)
		{
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x13C7968", Offset = "0x13C7968", VA = "0x13C7968")]
		private void CalculateEllipseParams(Vector2 p0, Vector2 p1, float phi, float rx, float ry, bool fa, bool fs, out Vector2 c, out float theta1, out float sweepTheta, out float adjustedRx, out float adjustedRy)
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x13C7C64", Offset = "0x13C7C64", VA = "0x13C7C64")]
		private double[] GetArcSegmentPercentages(double start, double end)
		{
			return null;
		}

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0x13C7EAC", Offset = "0x13C7EAC", VA = "0x13C7EAC")]
		private double[] ReturnPercentage(bool swap, List<double> percentages)
		{
			return null;
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x13C7DFC", Offset = "0x13C7DFC", VA = "0x13C7DFC")]
		private float VectorAngle(Vector2 u, Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x6002B2D")]
		[Address(RVA = "0x13C7C3C", Offset = "0x13C7C3C", VA = "0x13C7C3C")]
		private float ModP(float f, float div)
		{
			return default(float);
		}

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x13C7DD4", Offset = "0x13C7DD4", VA = "0x13C7DD4")]
		private double ModP(double d, double div)
		{
			return default(double);
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x13C5A70", Offset = "0x13C5A70", VA = "0x13C5A70")]
		private void WriteBufferTo(List<SplineDefinition> list)
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x13C72C0", Offset = "0x13C72C0", VA = "0x13C72C0")]
		private PathSegment[] ParsePathSegment(string coord, PathSegment.Type type)
		{
			return null;
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x13C2800", Offset = "0x13C2800", VA = "0x13C2800")]
		private string EncodePath(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6002B32")]
		[Address(RVA = "0x13C2658", Offset = "0x13C2658", VA = "0x13C2658")]
		private string EncodePolygon(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x13C593C", Offset = "0x13C593C", VA = "0x13C593C")]
		private string GetAttributeContent(XmlNode node, string attributeName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000726")]
	public class SplineParser
	{
		[Token(Token = "0x2000727")]
		internal class Transformation
		{
			[Token(Token = "0x4002A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected static Matrix4x4 matrix;

			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0xFEBF60", Offset = "0xFEBF60", VA = "0xFEBF60")]
			internal static void ResetMatrix()
			{
			}

			[Token(Token = "0x6002B40")]
			[Address(RVA = "0xFEC1F4", Offset = "0xFEC1F4", VA = "0xFEC1F4", Slot = "4")]
			internal virtual void Push()
			{
			}

			[Token(Token = "0x6002B41")]
			[Address(RVA = "0xFEC048", Offset = "0xFEC048", VA = "0xFEC048")]
			internal static void Apply(SplinePoint[] points)
			{
			}

			[Token(Token = "0x6002B42")]
			[Address(RVA = "0xFEA8B0", Offset = "0xFEA8B0", VA = "0xFEA8B0")]
			public Transformation()
			{
			}
		}

		[Token(Token = "0x2000728")]
		internal class Translate : Transformation
		{
			[Token(Token = "0x4002A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 offset;

			[Token(Token = "0x6002B44")]
			[Address(RVA = "0xFEC1FC", Offset = "0xFEC1FC", VA = "0xFEC1FC")]
			public Translate(Vector2 o)
			{
			}

			[Token(Token = "0x6002B45")]
			[Address(RVA = "0xFEC284", Offset = "0xFEC284", VA = "0xFEC284", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000729")]
		internal class Rotate : Transformation
		{
			[Token(Token = "0x4002A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float angle;

			[Token(Token = "0x6002B46")]
			[Address(RVA = "0xFEA998", Offset = "0xFEA998", VA = "0xFEA998")]
			public Rotate(float a)
			{
			}

			[Token(Token = "0x6002B47")]
			[Address(RVA = "0xFEAA10", Offset = "0xFEAA10", VA = "0xFEAA10", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200072A")]
		internal class Scale : Transformation
		{
			[Token(Token = "0x4002A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 multiplier;

			[Token(Token = "0x6002B48")]
			[Address(RVA = "0xFEABA8", Offset = "0xFEABA8", VA = "0xFEABA8")]
			public Scale(Vector2 s)
			{
			}

			[Token(Token = "0x6002B49")]
			[Address(RVA = "0xFEAC30", Offset = "0xFEAC30", VA = "0xFEAC30", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200072B")]
		internal class SkewX : Transformation
		{
			[Token(Token = "0x4002A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0xFEAD8C", Offset = "0xFEAD8C", VA = "0xFEAD8C")]
			public SkewX(float a)
			{
			}

			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0xFEAE04", Offset = "0xFEAE04", VA = "0xFEAE04", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200072C")]
		internal class SkewY : Transformation
		{
			[Token(Token = "0x4002A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0xFEAF84", Offset = "0xFEAF84", VA = "0xFEAF84")]
			public SkewY(float a)
			{
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0xFEAFFC", Offset = "0xFEAFFC", VA = "0xFEAFFC", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200072D")]
		internal class MatrixTransform : Transformation
		{
			[Token(Token = "0x4002A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Matrix4x4 transformMatrix;

			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0xFEA728", Offset = "0xFEA728", VA = "0xFEA728")]
			public MatrixTransform(float a, float b, float c, float d, float e, float f)
			{
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0xFEA8B8", Offset = "0xFEA8B8", VA = "0xFEA8B8", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200072E")]
		internal class SplineDefinition
		{
			[Token(Token = "0x4002A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string name;

			[Token(Token = "0x4002AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Spline.Type type;

			[Token(Token = "0x4002AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal List<SplinePoint> points;

			[Token(Token = "0x4002AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool closed;

			[Token(Token = "0x4002AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal Vector3 position;

			[Token(Token = "0x4002AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Vector3 tangent;

			[Token(Token = "0x4002AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal Vector3 tangent2;

			[Token(Token = "0x4002AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal Vector3 normal;

			[Token(Token = "0x4002AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal float size;

			[Token(Token = "0x4002AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal Color color;

			[Token(Token = "0x17000669")]
			internal int pointCount
			{
				[Token(Token = "0x6002B50")]
				[Address(RVA = "0xFEB17C", Offset = "0xFEB17C", VA = "0xFEB17C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002B51")]
			[Address(RVA = "0xFEB1C8", Offset = "0xFEB1C8", VA = "0xFEB1C8")]
			internal SplineDefinition(string n, Spline.Type t)
			{
			}

			[Token(Token = "0x6002B52")]
			[Address(RVA = "0xFEB304", Offset = "0xFEB304", VA = "0xFEB304")]
			internal SplineDefinition(string n, Spline spline)
			{
			}

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0xFEB4A8", Offset = "0xFEB4A8", VA = "0xFEB4A8")]
			internal SplinePoint GetLastPoint()
			{
				return default(SplinePoint);
			}

			[Token(Token = "0x6002B54")]
			[Address(RVA = "0xFEB544", Offset = "0xFEB544", VA = "0xFEB544")]
			internal void SetLastPoint(SplinePoint point)
			{
			}

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0xFEB5F8", Offset = "0xFEB5F8", VA = "0xFEB5F8")]
			internal void CreateClosingPoint()
			{
			}

			[Token(Token = "0x6002B56")]
			[Address(RVA = "0xFEB6E4", Offset = "0xFEB6E4", VA = "0xFEB6E4")]
			internal void CreateSmooth()
			{
			}

			[Token(Token = "0x6002B57")]
			[Address(RVA = "0xFEB804", Offset = "0xFEB804", VA = "0xFEB804")]
			internal void CreateBroken()
			{
			}

			[Token(Token = "0x6002B58")]
			[Address(RVA = "0xFEB9A0", Offset = "0xFEB9A0", VA = "0xFEB9A0")]
			internal void CreateLinear()
			{
			}

			[Token(Token = "0x6002B59")]
			[Address(RVA = "0xFEB9B4", Offset = "0xFEB9B4", VA = "0xFEB9B4")]
			internal SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
			{
				return null;
			}

			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0xFEBBE0", Offset = "0xFEBBE0", VA = "0xFEBBE0")]
			internal Spline CreateSpline()
			{
				return null;
			}

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0xFEBC9C", Offset = "0xFEBC9C", VA = "0xFEBC9C")]
			internal void Transform(List<Transformation> trs)
			{
			}
		}

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string fileName;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CultureInfo culture;

		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NumberStyles style;

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal SplineDefinition buffer;

		[Token(Token = "0x17000668")]
		public string name
		{
			[Token(Token = "0x6002B39")]
			[Address(RVA = "0x1AFFEB0", Offset = "0x1AFFEB0", VA = "0x1AFFEB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B3A")]
		[Address(RVA = "0x1AFFEB8", Offset = "0x1AFFEB8", VA = "0x1AFFEB8")]
		internal Vector2[] ParseVector2(string coord)
		{
			return null;
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x1B00350", Offset = "0x1B00350", VA = "0x1B00350")]
		internal float[] ParseFloat(string coord)
		{
			return null;
		}

		[Token(Token = "0x6002B3C")]
		[Address(RVA = "0x1B000B0", Offset = "0x1B000B0", VA = "0x1B000B0")]
		internal List<float> ParseFloatArray(string content)
		{
			return null;
		}

		[Token(Token = "0x6002B3D")]
		[Address(RVA = "0x1B00474", Offset = "0x1B00474", VA = "0x1B00474")]
		public bool IsWHiteSpace(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x1B00534", Offset = "0x1B00534", VA = "0x1B00534")]
		public SplineParser()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x200072F")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x2000730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6003C", Offset = "0xB6003C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002B67")]
			[Address(RVA = "0xF90270", Offset = "0xF90270", VA = "0xF90270")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002B68")]
			[Address(RVA = "0xF90278", Offset = "0xF90278", VA = "0xF90278")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6004C", Offset = "0xB6004C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002B69")]
			[Address(RVA = "0xF903B8", Offset = "0xF903B8", VA = "0xF903B8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0xF903C0", Offset = "0xF903C0", VA = "0xF903C0")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6005C", Offset = "0xB6005C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0xF903DC", Offset = "0xF903DC", VA = "0xF903DC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0xF903E4", Offset = "0xF903E4", VA = "0xF903E4")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000733")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6006C", Offset = "0xB6006C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0xF90400", Offset = "0xF90400", VA = "0xF90400")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0xF90408", Offset = "0xF90408", VA = "0xF90408")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6007C", Offset = "0xB6007C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0xF90424", Offset = "0xF90424", VA = "0xF90424")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002B70")]
			[Address(RVA = "0xF9042C", Offset = "0xF9042C", VA = "0xF9042C")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6008C", Offset = "0xB6008C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002B71")]
			[Address(RVA = "0xF90448", Offset = "0xF90448", VA = "0xF90448")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002B72")]
			[Address(RVA = "0xF90450", Offset = "0xF90450", VA = "0xF90450")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6009C", Offset = "0xB6009C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x4002AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4002AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4002AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4002AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4002AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x4002AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x6002B73")]
			[Address(RVA = "0xF9046C", Offset = "0xF9046C", VA = "0xF9046C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002B74")]
			[Address(RVA = "0xF90474", Offset = "0xF90474", VA = "0xF90474")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002B75")]
			[Address(RVA = "0xF90490", Offset = "0xF90490", VA = "0xF90490")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x6002B76")]
			[Address(RVA = "0xF904C4", Offset = "0xF904C4", VA = "0xF904C4")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002B77")]
			[Address(RVA = "0xF904E0", Offset = "0xF904E0", VA = "0xF904E0")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002B78")]
			[Address(RVA = "0xF904FC", Offset = "0xF904FC", VA = "0xF904FC")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB600AC", Offset = "0xB600AC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002B79")]
			[Address(RVA = "0xF905BC", Offset = "0xF905BC", VA = "0xF905BC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0xF905C4", Offset = "0xF905C4", VA = "0xF905C4")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB600BC", Offset = "0xB600BC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4002AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0xF905E0", Offset = "0xF905E0", VA = "0xF905E0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0xF905E8", Offset = "0xF905E8", VA = "0xF905E8")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0xF90604", Offset = "0xF90604", VA = "0xF90604")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB600CC", Offset = "0xB600CC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0xF90704", Offset = "0xF90704", VA = "0xF90704")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0xF9070C", Offset = "0xF9070C", VA = "0xF9070C")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB600DC", Offset = "0xB600DC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4002ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6002B80")]
			[Address(RVA = "0xF90294", Offset = "0xF90294", VA = "0xF90294")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0xF9029C", Offset = "0xF9029C", VA = "0xF9029C")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002B82")]
			[Address(RVA = "0xF902B8", Offset = "0xF902B8", VA = "0xF902B8")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x1090964", Offset = "0x1090964", VA = "0x1090964")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B5D")]
		[Address(RVA = "0x1093644", Offset = "0x1093644", VA = "0x1093644")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x1093814", Offset = "0x1093814", VA = "0x1093814")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x10939E4", Offset = "0x10939E4", VA = "0x10939E4")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x1090B40", Offset = "0x1090B40", VA = "0x1090B40")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0x1093BB4", Offset = "0x1093BB4", VA = "0x1093BB4")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x1093E08", Offset = "0x1093E08", VA = "0x1093E08")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x109433C", Offset = "0x109433C", VA = "0x109433C")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x10945B8", Offset = "0x10945B8", VA = "0x10945B8")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x1094854", Offset = "0x1094854", VA = "0x1094854")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0x1094A44", Offset = "0x1094A44", VA = "0x1094A44")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x200073B")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB600FC", Offset = "0xB600FC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0xF90728", Offset = "0xF90728", VA = "0xF90728")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002B88")]
			[Address(RVA = "0xF90730", Offset = "0xF90730", VA = "0xF90730")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002B89")]
			[Address(RVA = "0xF9074C", Offset = "0xF9074C", VA = "0xF9074C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6010C", Offset = "0xB6010C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0xF90768", Offset = "0xF90768", VA = "0xF90768")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0xF90770", Offset = "0xF90770", VA = "0xF90770")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0xF9078C", Offset = "0xF9078C", VA = "0xF9078C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6011C", Offset = "0xB6011C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4002ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer target;

			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0xF907A8", Offset = "0xF907A8", VA = "0xF907A8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0xF907B0", Offset = "0xF907B0", VA = "0xF907B0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0xF907BC", Offset = "0xF907BC", VA = "0xF907BC")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x1090EE8", Offset = "0x1090EE8", VA = "0x1090EE8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0x1091458", Offset = "0x1091458", VA = "0x1091458")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x1094C54", Offset = "0x1094C54", VA = "0x1094C54")]
		public static Sequence DOGradientColor(this SpriteRenderer target, UnityEngine.Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0x1094E40", Offset = "0x1094E40", VA = "0x1094E40")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200073F")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000740")]
		public static class Utils
		{
			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0xF91890", Offset = "0xF91890", VA = "0xF91890")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6013C", Offset = "0xB6013C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup target;

			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0xF90868", Offset = "0xF90868", VA = "0xF90868")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0xF90870", Offset = "0xF90870", VA = "0xF90870")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0xF9088C", Offset = "0xF9088C", VA = "0xF9088C")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6014C", Offset = "0xB6014C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0xF90B30", Offset = "0xF90B30", VA = "0xF90B30")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0xF90B38", Offset = "0xF90B38", VA = "0xF90B38")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0xF90B5C", Offset = "0xF90B5C", VA = "0xF90B5C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6015C", Offset = "0xB6015C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0xF90F44", Offset = "0xF90F44", VA = "0xF90F44")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0xF90F4C", Offset = "0xF90F4C", VA = "0xF90F4C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0xF90F70", Offset = "0xF90F70", VA = "0xF90F70")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6016C", Offset = "0xB6016C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0xF91448", Offset = "0xF91448", VA = "0xF91448")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0xF91450", Offset = "0xF91450", VA = "0xF91450")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0xF91474", Offset = "0xF91474", VA = "0xF91474")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6017C", Offset = "0xB6017C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0xF915A8", Offset = "0xF915A8", VA = "0xF915A8")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0xF915B0", Offset = "0xF915B0", VA = "0xF915B0")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0xF915D4", Offset = "0xF915D4", VA = "0xF915D4")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000746")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6018C", Offset = "0xB6018C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0xF915F8", Offset = "0xF915F8", VA = "0xF915F8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0xF91600", Offset = "0xF91600", VA = "0xF91600")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002BCC")]
			[Address(RVA = "0xF9161C", Offset = "0xF9161C", VA = "0xF9161C")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6019C", Offset = "0xB6019C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0xF91638", Offset = "0xF91638", VA = "0xF91638")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0xF91640", Offset = "0xF91640", VA = "0xF91640")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0xF916A4", Offset = "0xF916A4", VA = "0xF916A4")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB601AC", Offset = "0xB601AC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0xF91700", Offset = "0xF91700", VA = "0xF91700")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0xF91708", Offset = "0xF91708", VA = "0xF91708")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0xF9176C", Offset = "0xF9176C", VA = "0xF9176C")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000749")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB601BC", Offset = "0xB601BC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0xF917C8", Offset = "0xF917C8", VA = "0xF917C8")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0xF917D0", Offset = "0xF917D0", VA = "0xF917D0")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0xF91834", Offset = "0xF91834", VA = "0xF91834")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB601CC", Offset = "0xB601CC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0xF908A8", Offset = "0xF908A8", VA = "0xF908A8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0xF908B0", Offset = "0xF908B0", VA = "0xF908B0")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0xF908D0", Offset = "0xF908D0", VA = "0xF908D0")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200074B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB601DC", Offset = "0xB601DC")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0xF908EC", Offset = "0xF908EC", VA = "0xF908EC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0xF908F4", Offset = "0xF908F4", VA = "0xF908F4")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0xF90914", Offset = "0xF90914", VA = "0xF90914")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200074C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB601EC", Offset = "0xB601EC")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xF90930", Offset = "0xF90930", VA = "0xF90930")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0xF90938", Offset = "0xF90938", VA = "0xF90938")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0xF90954", Offset = "0xF90954", VA = "0xF90954")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200074D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB601FC", Offset = "0xB601FC")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0xF90970", Offset = "0xF90970", VA = "0xF90970")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0xF90978", Offset = "0xF90978", VA = "0xF90978")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0xF90994", Offset = "0xF90994", VA = "0xF90994")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200074E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6020C", Offset = "0xB6020C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xF909B0", Offset = "0xF909B0", VA = "0xF909B0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0xF909B8", Offset = "0xF909B8", VA = "0xF909B8")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0xF909D4", Offset = "0xF909D4", VA = "0xF909D4")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200074F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6021C", Offset = "0xB6021C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0xF909F0", Offset = "0xF909F0", VA = "0xF909F0")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0xF909F8", Offset = "0xF909F8", VA = "0xF909F8")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0xF90A14", Offset = "0xF90A14", VA = "0xF90A14")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6022C", Offset = "0xB6022C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4002ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xF90A30", Offset = "0xF90A30", VA = "0xF90A30")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0xF90A38", Offset = "0xF90A38", VA = "0xF90A38")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0xF90A54", Offset = "0xF90A54", VA = "0xF90A54")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000751")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6023C", Offset = "0xB6023C")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x4002AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BEB")]
			[Address(RVA = "0xF90A70", Offset = "0xF90A70", VA = "0xF90A70")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0xF90A78", Offset = "0xF90A78", VA = "0xF90A78")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002BED")]
			[Address(RVA = "0xF90A94", Offset = "0xF90A94", VA = "0xF90A94")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000752")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6024C", Offset = "0xB6024C")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xF90AB0", Offset = "0xF90AB0", VA = "0xF90AB0")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xF90AB8", Offset = "0xF90AB8", VA = "0xF90AB8")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0xF90AD4", Offset = "0xF90AD4", VA = "0xF90AD4")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6025C", Offset = "0xB6025C")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x4002AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xF90AF0", Offset = "0xF90AF0", VA = "0xF90AF0")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0xF90AF8", Offset = "0xF90AF8", VA = "0xF90AF8")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xF90B14", Offset = "0xF90B14", VA = "0xF90B14")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6026C", Offset = "0xB6026C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4002AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0xF90B80", Offset = "0xF90B80", VA = "0xF90B80")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0xF90B88", Offset = "0xF90B88", VA = "0xF90B88")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0xF90BA4", Offset = "0xF90BA4", VA = "0xF90BA4")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6027C", Offset = "0xB6027C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0xF90BC0", Offset = "0xF90BC0", VA = "0xF90BC0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0xF90BC8", Offset = "0xF90BC8", VA = "0xF90BC8")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xF90BE4", Offset = "0xF90BE4", VA = "0xF90BE4")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000756")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6028C", Offset = "0xB6028C")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0xF90C00", Offset = "0xF90C00", VA = "0xF90C00")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xF90C08", Offset = "0xF90C08", VA = "0xF90C08")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0xF90C24", Offset = "0xF90C24", VA = "0xF90C24")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000757")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6029C", Offset = "0xB6029C")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4002AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0xF90C40", Offset = "0xF90C40", VA = "0xF90C40")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0xF90C48", Offset = "0xF90C48", VA = "0xF90C48")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xF90C64", Offset = "0xF90C64", VA = "0xF90C64")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB602AC", Offset = "0xB602AC")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002C00")]
			[Address(RVA = "0xF90C80", Offset = "0xF90C80", VA = "0xF90C80")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xF90C88", Offset = "0xF90C88", VA = "0xF90C88")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002C02")]
			[Address(RVA = "0xF90CA4", Offset = "0xF90CA4", VA = "0xF90CA4")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB602BC", Offset = "0xB602BC")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002C03")]
			[Address(RVA = "0xF90CC0", Offset = "0xF90CC0", VA = "0xF90CC0")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6002C04")]
			[Address(RVA = "0xF90CC8", Offset = "0xF90CC8", VA = "0xF90CC8")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002C05")]
			[Address(RVA = "0xF90CE4", Offset = "0xF90CE4", VA = "0xF90CE4")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200075A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB602CC", Offset = "0xB602CC")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002C06")]
			[Address(RVA = "0xF90D00", Offset = "0xF90D00", VA = "0xF90D00")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xF90D08", Offset = "0xF90D08", VA = "0xF90D08")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002C08")]
			[Address(RVA = "0xF90D30", Offset = "0xF90D30", VA = "0xF90D30")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200075B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB602DC", Offset = "0xB602DC")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xF90D4C", Offset = "0xF90D4C", VA = "0xF90D4C")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0xF90D54", Offset = "0xF90D54", VA = "0xF90D54")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0xF90D7C", Offset = "0xF90D7C", VA = "0xF90D7C")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200075C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB602EC", Offset = "0xB602EC")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xF90D98", Offset = "0xF90D98", VA = "0xF90D98")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0xF90DA0", Offset = "0xF90DA0", VA = "0xF90DA0")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0xF90DC8", Offset = "0xF90DC8", VA = "0xF90DC8")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200075D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB602FC", Offset = "0xB602FC")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4002ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x4002ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4002ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4002ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4002AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4002AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0xF90DE4", Offset = "0xF90DE4", VA = "0xF90DE4")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6002C10")]
			[Address(RVA = "0xF90DEC", Offset = "0xF90DEC", VA = "0xF90DEC")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002C11")]
			[Address(RVA = "0xF90E08", Offset = "0xF90E08", VA = "0xF90E08")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xF90E24", Offset = "0xF90E24", VA = "0xF90E24")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x6002C13")]
			[Address(RVA = "0xF90E58", Offset = "0xF90E58", VA = "0xF90E58")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002C14")]
			[Address(RVA = "0xF90E74", Offset = "0xF90E74", VA = "0xF90E74")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6002C15")]
			[Address(RVA = "0xF90E90", Offset = "0xF90E90", VA = "0xF90E90")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x200075E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6030C", Offset = "0xB6030C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6002C16")]
			[Address(RVA = "0xF90F94", Offset = "0xF90F94", VA = "0xF90F94")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6002C17")]
			[Address(RVA = "0xF90F9C", Offset = "0xF90F9C", VA = "0xF90F9C")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xF90FF0", Offset = "0xF90FF0", VA = "0xF90FF0")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200075F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6031C", Offset = "0xB6031C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4002AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0xF9103C", Offset = "0xF9103C", VA = "0xF9103C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0xF91044", Offset = "0xF91044", VA = "0xF91044")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0xF91060", Offset = "0xF91060", VA = "0xF91060")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6032C", Offset = "0xB6032C")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0xF9107C", Offset = "0xF9107C", VA = "0xF9107C")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0xF91084", Offset = "0xF91084", VA = "0xF91084")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xF910A0", Offset = "0xF910A0", VA = "0xF910A0")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000761")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6033C", Offset = "0xB6033C")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0xF910BC", Offset = "0xF910BC", VA = "0xF910BC")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xF910C4", Offset = "0xF910C4", VA = "0xF910C4")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002C21")]
			[Address(RVA = "0xF910E8", Offset = "0xF910E8", VA = "0xF910E8")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6034C", Offset = "0xB6034C")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6002C22")]
			[Address(RVA = "0xF9110C", Offset = "0xF9110C", VA = "0xF9110C")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002C23")]
			[Address(RVA = "0xF91114", Offset = "0xF91114", VA = "0xF91114")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002C24")]
			[Address(RVA = "0xF91138", Offset = "0xF91138", VA = "0xF91138")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000763")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6035C", Offset = "0xB6035C")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4002AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int v;

			[Token(Token = "0x4002AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Text target;

			[Token(Token = "0x4002AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool addThousandsSeparator;

			[Token(Token = "0x4002AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CultureInfo cInfo;

			[Token(Token = "0x6002C25")]
			[Address(RVA = "0xF9115C", Offset = "0xF9115C", VA = "0xF9115C")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6002C26")]
			[Address(RVA = "0xF91164", Offset = "0xF91164", VA = "0xF91164")]
			internal int <DOCounter>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0xF9116C", Offset = "0xF9116C", VA = "0xF9116C")]
			internal void <DOCounter>b__1(int x)
			{
			}
		}

		[Token(Token = "0x2000764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6036C", Offset = "0xB6036C")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4002AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6002C28")]
			[Address(RVA = "0xF91208", Offset = "0xF91208", VA = "0xF91208")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002C29")]
			[Address(RVA = "0xF91210", Offset = "0xF91210", VA = "0xF91210")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0xF91234", Offset = "0xF91234", VA = "0xF91234")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000765")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6037C", Offset = "0xB6037C")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4002AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0xF91258", Offset = "0xF91258", VA = "0xF91258")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0xF91260", Offset = "0xF91260", VA = "0xF91260")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0xF91284", Offset = "0xF91284", VA = "0xF91284")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x2000766")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6038C", Offset = "0xB6038C")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4002AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4002AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0xF912A8", Offset = "0xF912A8", VA = "0xF912A8")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0xF912B0", Offset = "0xF912B0", VA = "0xF912B0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002C30")]
			[Address(RVA = "0xF912BC", Offset = "0xF912BC", VA = "0xF912BC")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000767")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6039C", Offset = "0xB6039C")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4002AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4002AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x6002C31")]
			[Address(RVA = "0xF91378", Offset = "0xF91378", VA = "0xF91378")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6002C32")]
			[Address(RVA = "0xF91380", Offset = "0xF91380", VA = "0xF91380")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002C33")]
			[Address(RVA = "0xF9138C", Offset = "0xF9138C", VA = "0xF9138C")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB603AC", Offset = "0xB603AC")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4002AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4002AF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x6002C34")]
			[Address(RVA = "0xF91498", Offset = "0xF91498", VA = "0xF91498")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6002C35")]
			[Address(RVA = "0xF914A0", Offset = "0xF914A0", VA = "0xF914A0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002C36")]
			[Address(RVA = "0xF914AC", Offset = "0xF914AC", VA = "0xF914AC")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB603BC", Offset = "0xB603BC")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002C37")]
			[Address(RVA = "0xF91568", Offset = "0xF91568", VA = "0xF91568")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6002C38")]
			[Address(RVA = "0xF91570", Offset = "0xF91570", VA = "0xF91570")]
			internal Vector2 <DOShapeCircle>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002C39")]
			[Address(RVA = "0xF9158C", Offset = "0xF9158C", VA = "0xF9158C")]
			internal void <DOShapeCircle>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0x1091950", Offset = "0x1091950", VA = "0x1091950")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x10910B8", Offset = "0x10910B8", VA = "0x10910B8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0x1091600", Offset = "0x1091600", VA = "0x1091600")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x109509C", Offset = "0x109509C", VA = "0x109509C")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x109526C", Offset = "0x109526C", VA = "0x109526C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x1095414", Offset = "0x1095414", VA = "0x1095414")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x10955E0", Offset = "0x10955E0", VA = "0x10955E0")]
		public static Sequence DOGradientColor(this Image target, UnityEngine.Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x10957D4", Offset = "0x10957D4", VA = "0x10957D4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x10959A4", Offset = "0x10959A4", VA = "0x10959A4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x1095B74", Offset = "0x1095B74", VA = "0x1095B74")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x1095D44", Offset = "0x1095D44", VA = "0x1095D44")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0x1095F14", Offset = "0x1095F14", VA = "0x1095F14")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0x10960BC", Offset = "0x10960BC", VA = "0x10960BC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0x1096274", Offset = "0x1096274", VA = "0x1096274")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0x1096444", Offset = "0x1096444", VA = "0x1096444")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x109660C", Offset = "0x109660C", VA = "0x109660C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x109078C", Offset = "0x109078C", VA = "0x109078C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x10967D4", Offset = "0x10967D4", VA = "0x10967D4")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0x10969A0", Offset = "0x10969A0", VA = "0x10969A0")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x1096B6C", Offset = "0x1096B6C", VA = "0x1096B6C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0x1096D38", Offset = "0x1096D38", VA = "0x1096D38")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x1096F08", Offset = "0x1096F08", VA = "0x1096F08")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x10970D8", Offset = "0x10970D8", VA = "0x10970D8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x1097290", Offset = "0x1097290", VA = "0x1097290")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0x109744C", Offset = "0x109744C", VA = "0x109744C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x1090D18", Offset = "0x1090D18", VA = "0x1090D18")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0x1091D4C", Offset = "0x1091D4C", VA = "0x1091D4C")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0x1097608", Offset = "0x1097608", VA = "0x1097608")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0x1091F24", Offset = "0x1091F24", VA = "0x1091F24")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0x1097808", Offset = "0x1097808", VA = "0x1097808")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0x1097C5C", Offset = "0x1097C5C", VA = "0x1097C5C")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0x1097E20", Offset = "0x1097E20", VA = "0x1097E20")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0x1097FD4", Offset = "0x1097FD4", VA = "0x1097FD4")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0x1098188", Offset = "0x1098188", VA = "0x1098188")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0x1091288", Offset = "0x1091288", VA = "0x1091288")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0x1098348", Offset = "0x1098348", VA = "0x1098348")]
		public static TweenerCore<int, int, NoOptions> DOCounter(this Text target, int fromValue, int endValue, float duration, bool addThousandsSeparator = true, [Optional] CultureInfo culture)
		{
			return null;
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0x10917A8", Offset = "0x10917A8", VA = "0x10917A8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0x1091AF8", Offset = "0x1091AF8", VA = "0x1091AF8")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0x1098570", Offset = "0x1098570", VA = "0x1098570")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x10987D4", Offset = "0x10987D4", VA = "0x10987D4")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x1098A38", Offset = "0x1098A38", VA = "0x1098A38")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0x1098C9C", Offset = "0x1098C9C", VA = "0x1098C9C")]
		public static TweenerCore<Vector2, Vector2, CircleOptions> DOShapeCircle(this RectTransform target, Vector2 center, float endValueDegrees, float duration, bool relativeCenter = false, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x200076A")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x200076B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB603DC", Offset = "0xB603DC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4002AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0xF91AD4", Offset = "0xF91AD4", VA = "0xF91AD4")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0xF91ADC", Offset = "0xF91ADC", VA = "0xF91ADC")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0xF91B00", Offset = "0xF91B00", VA = "0xF91B00")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200076C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB603EC", Offset = "0xB603EC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4002AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0xF91B24", Offset = "0xF91B24", VA = "0xF91B24")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0xF91B2C", Offset = "0xF91B2C", VA = "0xF91B2C")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0xF91B50", Offset = "0xF91B50", VA = "0xF91B50")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200076D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB603FC", Offset = "0xB603FC")]
		private struct <AsyncWaitForCompletion>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4002AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002C50")]
			[Address(RVA = "0xF91B74", Offset = "0xF91B74", VA = "0xF91B74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C51")]
			[Address(RVA = "0xF91DB8", Offset = "0xF91DB8", VA = "0xF91DB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200076E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6040C", Offset = "0xB6040C")]
		private struct <AsyncWaitForRewind>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4002AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002C52")]
			[Address(RVA = "0xF924C8", Offset = "0xF924C8", VA = "0xF924C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C53")]
			[Address(RVA = "0xF92730", Offset = "0xF92730", VA = "0xF92730", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200076F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6041C", Offset = "0xB6041C")]
		private struct <AsyncWaitForKill>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002C54")]
			[Address(RVA = "0xF9201C", Offset = "0xF9201C", VA = "0xF9201C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C55")]
			[Address(RVA = "0xF9224C", Offset = "0xF9224C", VA = "0xF9224C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6042C", Offset = "0xB6042C")]
		private struct <AsyncWaitForElapsedLoops>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int elapsedLoops;

			[Token(Token = "0x4002B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002C56")]
			[Address(RVA = "0xF91DC4", Offset = "0xF91DC4", VA = "0xF91DC4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C57")]
			[Address(RVA = "0xF92010", Offset = "0xF92010", VA = "0xF92010", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6043C", Offset = "0xB6043C")]
		private struct <AsyncWaitForPosition>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float position;

			[Token(Token = "0x4002B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002C58")]
			[Address(RVA = "0xF92258", Offset = "0xF92258", VA = "0xF92258", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C59")]
			[Address(RVA = "0xF924BC", Offset = "0xF924BC", VA = "0xF924BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6044C", Offset = "0xB6044C")]
		private struct <AsyncWaitForStart>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4002B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0xF9273C", Offset = "0xF9273C", VA = "0xF9273C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0xF92974", Offset = "0xF92974", VA = "0xF92974", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6002C3A")]
		[Address(RVA = "0x1098EAC", Offset = "0x1098EAC", VA = "0x1098EAC")]
		public static Sequence DOGradientColor(this Material target, UnityEngine.Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002C3B")]
		[Address(RVA = "0x109909C", Offset = "0x109909C", VA = "0x109909C")]
		public static Sequence DOGradientColor(this Material target, UnityEngine.Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002C3C")]
		[Address(RVA = "0x10992A0", Offset = "0x10992A0", VA = "0x10992A0")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002C3D")]
		[Address(RVA = "0x1099360", Offset = "0x1099360", VA = "0x1099360")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0x1099420", Offset = "0x1099420", VA = "0x1099420")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0x10994E0", Offset = "0x10994E0", VA = "0x10994E0")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0x10995B0", Offset = "0x10995B0", VA = "0x10995B0")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0x1099680", Offset = "0x1099680", VA = "0x1099680")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0x1099740", Offset = "0x1099740", VA = "0x1099740")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0x1099968", Offset = "0x1099968", VA = "0x1099968")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0x1099B90", Offset = "0x1099B90", VA = "0x1099B90")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB87E64", Offset = "0xB87E64")]
		public static Task AsyncWaitForCompletion(this Tween t)
		{
			return null;
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0x1099CAC", Offset = "0x1099CAC", VA = "0x1099CAC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB87ED4", Offset = "0xB87ED4")]
		public static Task AsyncWaitForRewind(this Tween t)
		{
			return null;
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0x1099DC8", Offset = "0x1099DC8", VA = "0x1099DC8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB87F44", Offset = "0xB87F44")]
		public static Task AsyncWaitForKill(this Tween t)
		{
			return null;
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0x1099EE4", Offset = "0x1099EE4", VA = "0x1099EE4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB87FB4", Offset = "0xB87FB4")]
		public static Task AsyncWaitForElapsedLoops(this Tween t, int elapsedLoops)
		{
			return null;
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0x109A010", Offset = "0x109A010", VA = "0x109A010")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB88024", Offset = "0xB88024")]
		public static Task AsyncWaitForPosition(this Tween t, float position)
		{
			return null;
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0x109A13C", Offset = "0x109A13C", VA = "0x109A13C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xB88094", Offset = "0xB88094")]
		public static Task AsyncWaitForStart(this Tween t)
		{
			return null;
		}
	}
	[Token(Token = "0x2000773")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x2000774")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4002B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700066A")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002C5C")]
				[Address(RVA = "0xF8FF78", Offset = "0xF8FF78", VA = "0xF8FF78", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0xF8FFAC", Offset = "0xF8FFAC", VA = "0xF8FFAC")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000775")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4002B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700066B")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002C5E")]
				[Address(RVA = "0xF90170", Offset = "0xF90170", VA = "0xF90170", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0xF901D4", Offset = "0xF901D4", VA = "0xF901D4")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000776")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4002B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700066C")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002C60")]
				[Address(RVA = "0xF90074", Offset = "0xF90074", VA = "0xF90074", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002C61")]
			[Address(RVA = "0xF90090", Offset = "0xF90090", VA = "0xF90090")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000777")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4002B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4002B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x1700066D")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002C62")]
				[Address(RVA = "0xF8FFE0", Offset = "0xF8FFE0", VA = "0xF8FFE0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002C63")]
			[Address(RVA = "0xF9002C", Offset = "0xF9002C", VA = "0xF9002C")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000778")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4002B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4002B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x1700066E")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002C64")]
				[Address(RVA = "0xF900C4", Offset = "0xF900C4", VA = "0xF900C4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002C65")]
			[Address(RVA = "0xF90128", Offset = "0xF90128", VA = "0xF90128")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000779")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4002B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700066F")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002C66")]
				[Address(RVA = "0xF90208", Offset = "0xF90208", VA = "0xF90208", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002C67")]
			[Address(RVA = "0xF9023C", Offset = "0xF9023C", VA = "0xF9023C")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x200077A")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x200077B")]
		public static class Physics
		{
			[Token(Token = "0x6002C6A")]
			[Address(RVA = "0xF92980", Offset = "0xF92980", VA = "0xF92980")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6002C6B")]
			[Address(RVA = "0xF92A84", Offset = "0xF92A84", VA = "0xF92A84")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0xF92A8C", Offset = "0xF92A8C", VA = "0xF92A8C")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0xF92B24", Offset = "0xF92B24", VA = "0xF92B24")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4002B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0x109A258", Offset = "0x109A258", VA = "0x109A258")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0x109A31C", Offset = "0x109A31C", VA = "0x109A31C")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
	[Token(Token = "0x200077C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB6045C", Offset = "0xB6045C")]
	public class DOTweenAnimation : ABSAnimationComponent
	{
		[Token(Token = "0x200077D")]
		public enum AnimationType
		{
			[Token(Token = "0x4002B44")]
			None,
			[Token(Token = "0x4002B45")]
			Move,
			[Token(Token = "0x4002B46")]
			LocalMove,
			[Token(Token = "0x4002B47")]
			Rotate,
			[Token(Token = "0x4002B48")]
			LocalRotate,
			[Token(Token = "0x4002B49")]
			Scale,
			[Token(Token = "0x4002B4A")]
			Color,
			[Token(Token = "0x4002B4B")]
			Fade,
			[Token(Token = "0x4002B4C")]
			Text,
			[Token(Token = "0x4002B4D")]
			PunchPosition,
			[Token(Token = "0x4002B4E")]
			PunchRotation,
			[Token(Token = "0x4002B4F")]
			PunchScale,
			[Token(Token = "0x4002B50")]
			ShakePosition,
			[Token(Token = "0x4002B51")]
			ShakeRotation,
			[Token(Token = "0x4002B52")]
			ShakeScale,
			[Token(Token = "0x4002B53")]
			CameraAspect,
			[Token(Token = "0x4002B54")]
			CameraBackgroundColor,
			[Token(Token = "0x4002B55")]
			CameraFieldOfView,
			[Token(Token = "0x4002B56")]
			CameraOrthoSize,
			[Token(Token = "0x4002B57")]
			CameraPixelRect,
			[Token(Token = "0x4002B58")]
			CameraRect,
			[Token(Token = "0x4002B59")]
			UIWidthHeight
		}

		[Token(Token = "0x200077E")]
		public enum TargetType
		{
			[Token(Token = "0x4002B5B")]
			Unset,
			[Token(Token = "0x4002B5C")]
			Camera,
			[Token(Token = "0x4002B5D")]
			CanvasGroup,
			[Token(Token = "0x4002B5E")]
			Image,
			[Token(Token = "0x4002B5F")]
			Light,
			[Token(Token = "0x4002B60")]
			RectTransform,
			[Token(Token = "0x4002B61")]
			Renderer,
			[Token(Token = "0x4002B62")]
			SpriteRenderer,
			[Token(Token = "0x4002B63")]
			Rigidbody,
			[Token(Token = "0x4002B64")]
			Rigidbody2D,
			[Token(Token = "0x4002B65")]
			Text,
			[Token(Token = "0x4002B66")]
			Transform,
			[Token(Token = "0x4002B67")]
			tk2dBaseSprite,
			[Token(Token = "0x4002B68")]
			tk2dTextMesh,
			[Token(Token = "0x4002B69")]
			TextMeshPro,
			[Token(Token = "0x4002B6A")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool targetIsSelf;

		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject targetGO;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool tweenTargetIsTargetGO;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float delay;

		[Token(Token = "0x4002B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float duration;

		[Token(Token = "0x4002B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Ease easeType;

		[Token(Token = "0x4002B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve easeCurve;

		[Token(Token = "0x4002B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LoopType loopType;

		[Token(Token = "0x4002B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int loops;

		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string id;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool isRelative;

		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool isFrom;

		[Token(Token = "0x4002B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool isIndependentUpdate;

		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		public bool autoKill;

		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool autoGenerate;

		[Token(Token = "0x4002B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool isActive;

		[Token(Token = "0x4002B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		public bool isValid;

		[Token(Token = "0x4002B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Component target;

		[Token(Token = "0x4002B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationType animationType;

		[Token(Token = "0x4002B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public TargetType targetType;

		[Token(Token = "0x4002B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TargetType forcedTargetType;

		[Token(Token = "0x4002B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool autoPlay;

		[Token(Token = "0x4002B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool useTargetAsV3;

		[Token(Token = "0x4002B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float endValueFloat;

		[Token(Token = "0x4002B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 endValueV3;

		[Token(Token = "0x4002B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector2 endValueV2;

		[Token(Token = "0x4002B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Color endValueColor;

		[Token(Token = "0x4002B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string endValueString;

		[Token(Token = "0x4002B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Rect endValueRect;

		[Token(Token = "0x4002B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform endValueTransform;

		[Token(Token = "0x4002B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool optionalBool0;

		[Token(Token = "0x4002B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool optionalBool1;

		[Token(Token = "0x4002B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float optionalFloat0;

		[Token(Token = "0x4002B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int optionalInt0;

		[Token(Token = "0x4002B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public RotateMode optionalRotationMode;

		[Token(Token = "0x4002B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public ScrambleMode optionalScrambleMode;

		[Token(Token = "0x4002B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string optionalString;

		[Token(Token = "0x4002B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _tweenAutoGenerationCalled;

		[Token(Token = "0x4002B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int _playCount;

		[Token(Token = "0x140000AE")]
		public static event Action<DOTweenAnimation> OnReset
		{
			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0x108EABC", Offset = "0x108EABC", VA = "0x108EABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB881A4", Offset = "0xB881A4")]
			add
			{
			}
			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0x108EB78", Offset = "0x108EB78", VA = "0x108EB78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB881B4", Offset = "0xB881B4")]
			remove
			{
			}
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0x108EC34", Offset = "0x108EC34", VA = "0x108EC34")]
		private static void Dispatch_OnReset(DOTweenAnimation anim)
		{
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0x108ECB0", Offset = "0x108ECB0", VA = "0x108ECB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0x109041C", Offset = "0x109041C", VA = "0x109041C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0x1090468", Offset = "0x1090468", VA = "0x1090468")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0x109046C", Offset = "0x109046C", VA = "0x109046C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0x10904B0", Offset = "0x10904B0", VA = "0x10904B0")]
		public void RewindThenRecreateTween()
		{
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0x10904F4", Offset = "0x10904F4", VA = "0x10904F4")]
		public void RewindThenRecreateTweenAndPlay()
		{
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0x1090538", Offset = "0x1090538", VA = "0x1090538")]
		public void RecreateTween()
		{
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0x1090544", Offset = "0x1090544", VA = "0x1090544")]
		public void RecreateTweenAndPlay()
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0x108ED08", Offset = "0x108ED08", VA = "0x108ED08")]
		public void CreateTween(bool regenerateIfExists = false, bool andPlay = true)
		{
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0x109214C", Offset = "0x109214C", VA = "0x109214C")]
		public List<Tween> GetTweens()
		{
			return null;
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0x1092264", Offset = "0x1092264", VA = "0x1092264")]
		public void SetAnimationTarget(Component tweenTarget, bool useTweenTargetGameObjectForGroupOperations = true)
		{
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0x109235C", Offset = "0x109235C", VA = "0x109235C", Slot = "4")]
		public override void DOPlay()
		{
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0x10923E8", Offset = "0x10923E8", VA = "0x10923E8", Slot = "5")]
		public override void DOPlayBackwards()
		{
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0x1092474", Offset = "0x1092474", VA = "0x1092474", Slot = "6")]
		public override void DOPlayForward()
		{
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0x1092500", Offset = "0x1092500", VA = "0x1092500", Slot = "7")]
		public override void DOPause()
		{
		}

		[Token(Token = "0x6002C80")]
		[Address(RVA = "0x109258C", Offset = "0x109258C", VA = "0x109258C", Slot = "8")]
		public override void DOTogglePause()
		{
		}

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0x1092618", Offset = "0x1092618", VA = "0x1092618", Slot = "9")]
		public override void DORewind()
		{
		}

		[Token(Token = "0x6002C82")]
		[Address(RVA = "0x1092710", Offset = "0x1092710", VA = "0x1092710", Slot = "10")]
		public override void DORestart()
		{
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0x1092720", Offset = "0x1092720", VA = "0x1092720", Slot = "11")]
		public override void DORestart(bool fromHere)
		{
		}

		[Token(Token = "0x6002C84")]
		[Address(RVA = "0x1092AB0", Offset = "0x1092AB0", VA = "0x1092AB0", Slot = "12")]
		public override void DOComplete()
		{
		}

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0x1092B40", Offset = "0x1092B40", VA = "0x1092B40", Slot = "13")]
		public override void DOKill()
		{
		}

		[Token(Token = "0x6002C86")]
		[Address(RVA = "0x1092BE0", Offset = "0x1092BE0", VA = "0x1092BE0")]
		public void DOPlayById(string id)
		{
		}

		[Token(Token = "0x6002C87")]
		[Address(RVA = "0x1092C7C", Offset = "0x1092C7C", VA = "0x1092C7C")]
		public void DOPlayAllById(string id)
		{
		}

		[Token(Token = "0x6002C88")]
		[Address(RVA = "0x1092CE0", Offset = "0x1092CE0", VA = "0x1092CE0")]
		public void DOPauseAllById(string id)
		{
		}

		[Token(Token = "0x6002C89")]
		[Address(RVA = "0x1092D44", Offset = "0x1092D44", VA = "0x1092D44")]
		public void DOPlayBackwardsById(string id)
		{
		}

		[Token(Token = "0x6002C8A")]
		[Address(RVA = "0x1092DE0", Offset = "0x1092DE0", VA = "0x1092DE0")]
		public void DOPlayBackwardsAllById(string id)
		{
		}

		[Token(Token = "0x6002C8B")]
		[Address(RVA = "0x1092E44", Offset = "0x1092E44", VA = "0x1092E44")]
		public void DOPlayForwardById(string id)
		{
		}

		[Token(Token = "0x6002C8C")]
		[Address(RVA = "0x1092EE0", Offset = "0x1092EE0", VA = "0x1092EE0")]
		public void DOPlayForwardAllById(string id)
		{
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0x1092F44", Offset = "0x1092F44", VA = "0x1092F44")]
		public void DOPlayNext()
		{
		}

		[Token(Token = "0x6002C8E")]
		[Address(RVA = "0x1093094", Offset = "0x1093094", VA = "0x1093094")]
		public void DORewindAndPlayNext()
		{
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0x1093134", Offset = "0x1093134", VA = "0x1093134")]
		public void DORewindAllById(string id)
		{
		}

		[Token(Token = "0x6002C90")]
		[Address(RVA = "0x10931B0", Offset = "0x10931B0", VA = "0x10931B0")]
		public void DORestartById(string id)
		{
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0x109325C", Offset = "0x109325C", VA = "0x109325C")]
		public void DORestartAllById(string id)
		{
		}

		[Token(Token = "0x6002C92")]
		[Address(RVA = "0x10932DC", Offset = "0x10932DC", VA = "0x10932DC")]
		public void DOKillById(string id)
		{
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0x109337C", Offset = "0x109337C", VA = "0x109337C")]
		public void DOKillAllById(string id)
		{
		}

		[Token(Token = "0x6002C94")]
		[Address(RVA = "0x1090568", Offset = "0x1090568", VA = "0x1090568")]
		public static TargetType TypeToDOTargetType(Type t)
		{
			return default(TargetType);
		}

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0x10933E4", Offset = "0x10933E4", VA = "0x10933E4")]
		public Tween CreateEditorPreview()
		{
			return null;
		}

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0x1090550", Offset = "0x1090550", VA = "0x1090550")]
		private GameObject GetTweenGO()
		{
			return null;
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0x109212C", Offset = "0x109212C", VA = "0x109212C")]
		private GameObject GetTweenTarget()
		{
			return null;
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0x1092848", Offset = "0x1092848", VA = "0x1092848")]
		private void ReEvaluateRelativeTween()
		{
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0x1093428", Offset = "0x1093428", VA = "0x1093428")]
		public DOTweenAnimation()
		{
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0x1093638", Offset = "0x1093638", VA = "0x1093638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB881C4", Offset = "0xB881C4")]
		private void <CreateTween>b__53_0()
		{
		}
	}
	[Token(Token = "0x200077F")]
	public static class DOTweenAnimationExtensions
	{
		[Token(Token = "0x6002C9B")]
		public static bool IsSameOrSubclassOf<T>(this Component t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000780")]
	public static class DOTweenProShortcuts
	{
		[Token(Token = "0x2000781")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB604B4", Offset = "0xB604B4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform target;

			[Token(Token = "0x6002C9F")]
			[Address(RVA = "0xF92C78", Offset = "0xF92C78", VA = "0xF92C78")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0xF92C80", Offset = "0xF92C80", VA = "0xF92C80")]
			internal Vector3 <DOSpiral>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002CA1")]
			[Address(RVA = "0xF92C9C", Offset = "0xF92C9C", VA = "0xF92C9C")]
			internal void <DOSpiral>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000782")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB604C4", Offset = "0xB604C4")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002CA2")]
			[Address(RVA = "0xF92CB8", Offset = "0xF92CB8", VA = "0xF92CB8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002CA3")]
			[Address(RVA = "0xF92CC0", Offset = "0xF92CC0", VA = "0xF92CC0")]
			internal Vector3 <DOSpiral>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0x109A3D0", Offset = "0x109A3D0", VA = "0x109A3D0")]
		static DOTweenProShortcuts()
		{
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0x109A41C", Offset = "0x109A41C", VA = "0x109A41C")]
		public static Tweener DOSpiral(this Transform target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0x109A74C", Offset = "0x109A74C", VA = "0x109A74C")]
		public static Tweener DOSpiral(this Rigidbody target, float duration, [Optional] Vector3? axis, SpiralMode mode = SpiralMode.Expand, float speed = 1f, float frequency = 10f, float depth = 0f, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000783")]
	public enum TMPSkewSpanMode
	{
		[Token(Token = "0x4002B6E")]
		Default,
		[Token(Token = "0x4002B6F")]
		AsMaxSkewFactor
	}
	[Token(Token = "0x2000784")]
	public static class ShortcutExtensionsTMPText
	{
		[Token(Token = "0x2000785")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB604E4", Offset = "0xB604E4")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0xFE6420", Offset = "0xFE6420", VA = "0xFE6420")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0xFE6428", Offset = "0xFE6428", VA = "0xFE6428")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0xFE644C", Offset = "0xFE644C", VA = "0xFE644C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000786")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB604F4", Offset = "0xB604F4")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0xFE64C0", Offset = "0xFE64C0", VA = "0xFE64C0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0xFE64C8", Offset = "0xFE64C8", VA = "0xFE64C8")]
			internal Color <DOFaceColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0xFE64F4", Offset = "0xFE64F4", VA = "0xFE64F4")]
			internal void <DOFaceColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60504", Offset = "0xB60504")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0xFE652C", Offset = "0xFE652C", VA = "0xFE652C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0xFE6534", Offset = "0xFE6534", VA = "0xFE6534")]
			internal Color <DOOutlineColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0xFE6560", Offset = "0xFE6560", VA = "0xFE6560")]
			internal void <DOOutlineColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60514", Offset = "0xB60514")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0xFE6598", Offset = "0xFE6598", VA = "0xFE6598")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0xFE65A0", Offset = "0xFE65A0", VA = "0xFE65A0")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0xFE65C4", Offset = "0xFE65C4", VA = "0xFE65C4")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000789")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60524", Offset = "0xB60524")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0xFE65E8", Offset = "0xFE65E8", VA = "0xFE65E8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0xFE65F0", Offset = "0xFE65F0", VA = "0xFE65F0")]
			internal Color <DOFaceFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002CBD")]
			[Address(RVA = "0xFE661C", Offset = "0xFE661C", VA = "0xFE661C")]
			internal void <DOFaceFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60534", Offset = "0xB60534")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0xFE6654", Offset = "0xFE6654", VA = "0xFE6654")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0xFE665C", Offset = "0xFE665C", VA = "0xFE665C")]
			internal Vector3 <DOScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xFE6678", Offset = "0xFE6678", VA = "0xFE6678")]
			internal void <DOScale>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200078B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60544", Offset = "0xB60544")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int v;

			[Token(Token = "0x4002B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_Text target;

			[Token(Token = "0x4002B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool addThousandsSeparator;

			[Token(Token = "0x4002B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CultureInfo cInfo;

			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0xFE6694", Offset = "0xFE6694", VA = "0xFE6694")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0xFE669C", Offset = "0xFE669C", VA = "0xFE669C")]
			internal int <DOCounter>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0xFE66A4", Offset = "0xFE66A4", VA = "0xFE66A4")]
			internal void <DOCounter>b__1(int x)
			{
			}
		}

		[Token(Token = "0x200078C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60554", Offset = "0xB60554")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0xFE6740", Offset = "0xFE6740", VA = "0xFE6740")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0xFE6748", Offset = "0xFE6748", VA = "0xFE6748")]
			internal float <DOFontSize>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0xFE6764", Offset = "0xFE6764", VA = "0xFE6764")]
			internal void <DOFontSize>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200078D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60564", Offset = "0xB60564")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0xFE6780", Offset = "0xFE6780", VA = "0xFE6780")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0xFE6788", Offset = "0xFE6788", VA = "0xFE6788")]
			internal int <DOMaxVisibleCharacters>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0xFE67A4", Offset = "0xFE67A4", VA = "0xFE67A4")]
			internal void <DOMaxVisibleCharacters>b__1(int x)
			{
			}
		}

		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60574", Offset = "0xB60574")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text target;

			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0xFE6470", Offset = "0xFE6470", VA = "0xFE6470")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0xFE6478", Offset = "0xFE6478", VA = "0xFE6478")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0xFE649C", Offset = "0xFE649C", VA = "0xFE649C")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0xF0A2E4", Offset = "0xF0A2E4", VA = "0xF0A2E4")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this TMP_Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0xF0A4B4", Offset = "0xF0A4B4", VA = "0xF0A4B4")]
		public static TweenerCore<Color, Color, ColorOptions> DOFaceColor(this TMP_Text target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CA6")]
		[Address(RVA = "0xF0A69C", Offset = "0xF0A69C", VA = "0xF0A69C")]
		public static TweenerCore<Color, Color, ColorOptions> DOOutlineColor(this TMP_Text target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CA7")]
		[Address(RVA = "0xF0A884", Offset = "0xF0A884", VA = "0xF0A884")]
		public static TweenerCore<Color, Color, ColorOptions> DOGlowColor(this TMP_Text target, Color endValue, float duration, bool useSharedMaterial = false)
		{
			return null;
		}

		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0xF0A978", Offset = "0xF0A978", VA = "0xF0A978")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0xF0AB20", Offset = "0xF0AB20", VA = "0xF0AB20")]
		public static TweenerCore<Color, Color, ColorOptions> DOFaceFade(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0xF0ACC8", Offset = "0xF0ACC8", VA = "0xF0ACC8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOScale(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0xF0AE84", Offset = "0xF0AE84", VA = "0xF0AE84")]
		public static TweenerCore<int, int, NoOptions> DOCounter(this TMP_Text target, int fromValue, int endValue, float duration, bool addThousandsSeparator = true, [Optional] CultureInfo culture)
		{
			return null;
		}

		[Token(Token = "0x6002CAC")]
		[Address(RVA = "0xF0B0AC", Offset = "0xF0B0AC", VA = "0xF0B0AC")]
		public static TweenerCore<float, float, FloatOptions> DOFontSize(this TMP_Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0xF0B254", Offset = "0xF0B254", VA = "0xF0B254")]
		public static TweenerCore<int, int, NoOptions> DOMaxVisibleCharacters(this TMP_Text target, int endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CAE")]
		[Address(RVA = "0xF0B404", Offset = "0xF0B404", VA = "0xF0B404")]
		public static TweenerCore<string, string, StringOptions> DOText(this TMP_Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}
	}
	[Token(Token = "0x200078F")]
	public class DOTweenTMPAnimator : IDisposable
	{
		[Token(Token = "0x2000790")]
		private struct CharVertices
		{
			[Token(Token = "0x4002B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 bottomLeft;

			[Token(Token = "0x4002B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 topLeft;

			[Token(Token = "0x4002B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 topRight;

			[Token(Token = "0x4002B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 bottomRight;

			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0xF94FA4", Offset = "0xF94FA4", VA = "0xF94FA4")]
			public CharVertices(Vector3 bottomLeft, Vector3 topLeft, Vector3 topRight, Vector3 bottomRight)
			{
			}
		}

		[Token(Token = "0x2000791")]
		private struct CharTransform
		{
			[Token(Token = "0x4002B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int charIndex;

			[Token(Token = "0x4002B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78634", Offset = "0xB78634")]
			private bool <isVisible>k__BackingField;

			[Token(Token = "0x4002B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 offset;

			[Token(Token = "0x4002B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Quaternion rotation;

			[Token(Token = "0x4002B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 scale;

			[Token(Token = "0x4002B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 _topLeftShift;

			[Token(Token = "0x4002B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 _topRightShift;

			[Token(Token = "0x4002B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 _bottomLeftShift;

			[Token(Token = "0x4002B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 _bottomRightShift;

			[Token(Token = "0x4002B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3 _charMidBaselineOffset;

			[Token(Token = "0x4002B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int _matIndex;

			[Token(Token = "0x4002B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int _firstVertexIndex;

			[Token(Token = "0x4002B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private TMP_MeshInfo _meshInfo;

			[Token(Token = "0x17000672")]
			public bool isVisible
			{
				[Token(Token = "0x6002CF8")]
				[Address(RVA = "0xF9493C", Offset = "0xF9493C", VA = "0xF9493C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB882F4", Offset = "0xB882F4")]
				readonly get
				{
					return default(bool);
				}
				[Token(Token = "0x6002CF9")]
				[Address(RVA = "0xF94944", Offset = "0xF94944", VA = "0xF94944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8832C", Offset = "0xB8832C")]
				private set
				{
				}
			}

			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0xF94950", Offset = "0xF94950", VA = "0xF94950")]
			public CharTransform(int charIndex, TMP_TextInfo textInfo, TMP_MeshInfo[] cachedMeshInfos)
			{
			}

			[Token(Token = "0x6002CFB")]
			[Address(RVA = "0xF949D0", Offset = "0xF949D0", VA = "0xF949D0")]
			public void Refresh(TMP_TextInfo textInfo, TMP_MeshInfo[] cachedMeshInfos)
			{
			}

			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0xF94B30", Offset = "0xF94B30", VA = "0xF94B30")]
			public void ResetAll(TMP_Text target, TMP_MeshInfo[] meshInfos, TMP_MeshInfo[] cachedMeshInfos)
			{
			}

			[Token(Token = "0x6002CFD")]
			[Address(RVA = "0xF94E70", Offset = "0xF94E70", VA = "0xF94E70")]
			public void ResetTransformationData()
			{
			}

			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0xF94B70", Offset = "0xF94B70", VA = "0xF94B70")]
			public void ResetGeometry(TMP_Text target, TMP_MeshInfo[] cachedMeshInfos)
			{
			}

			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0xF94D08", Offset = "0xF94D08", VA = "0xF94D08")]
			public void ResetColors(TMP_Text target, TMP_MeshInfo[] meshInfos)
			{
			}

			[Token(Token = "0x6002D00")]
			[Address(RVA = "0xF92DB8", Offset = "0xF92DB8", VA = "0xF92DB8")]
			public Color32 GetColor(TMP_MeshInfo[] meshInfos)
			{
				return default(Color32);
			}

			[Token(Token = "0x6002D01")]
			[Address(RVA = "0xF94EDC", Offset = "0xF94EDC", VA = "0xF94EDC")]
			public CharVertices GetVertices()
			{
				return default(CharVertices);
			}

			[Token(Token = "0x6002D02")]
			[Address(RVA = "0xF92F14", Offset = "0xF92F14", VA = "0xF92F14")]
			public void UpdateAlpha(TMP_Text target, Color alphaColor, TMP_MeshInfo[] meshInfos, bool apply = true)
			{
			}

			[Token(Token = "0x6002D03")]
			[Address(RVA = "0xF931F8", Offset = "0xF931F8", VA = "0xF931F8")]
			public void UpdateColor(TMP_Text target, Color32 color, TMP_MeshInfo[] meshInfos, bool apply = true)
			{
			}

			[Token(Token = "0x6002D04")]
			[Address(RVA = "0xF934C4", Offset = "0xF934C4", VA = "0xF934C4")]
			public void UpdateGeometry(TMP_Text target, Vector3 offset, Quaternion rotation, Vector3 scale, TMP_MeshInfo[] cachedMeshInfos, bool apply = true)
			{
			}

			[Token(Token = "0x6002D05")]
			[Address(RVA = "0xF94FD4", Offset = "0xF94FD4", VA = "0xF94FD4")]
			public void ShiftVertices(TMP_Text target, Vector3 topLeftShift, Vector3 topRightShift, Vector3 bottomLeftShift, Vector3 bottomRightShift)
			{
			}

			[Token(Token = "0x6002D06")]
			[Address(RVA = "0xF95194", Offset = "0xF95194", VA = "0xF95194")]
			public void ResetVerticesShift(TMP_Text target)
			{
			}
		}

		[Token(Token = "0x2000792")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60584", Offset = "0xB60584")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D07")]
			[Address(RVA = "0xF92CDC", Offset = "0xF92CDC", VA = "0xF92CDC")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002D08")]
			[Address(RVA = "0xF92CE4", Offset = "0xF92CE4", VA = "0xF92CE4")]
			internal Color <DOFadeChar>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002D09")]
			[Address(RVA = "0xF92E14", Offset = "0xF92E14", VA = "0xF92E14")]
			internal void <DOFadeChar>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000793")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60594", Offset = "0xB60594")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4002B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D0A")]
			[Address(RVA = "0xF93004", Offset = "0xF93004", VA = "0xF93004")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6002D0B")]
			[Address(RVA = "0xF9300C", Offset = "0xF9300C", VA = "0xF9300C")]
			internal Color <DOColorChar>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0xF930E0", Offset = "0xF930E0", VA = "0xF930E0")]
			internal void <DOColorChar>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000794")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB605A4", Offset = "0xB605A4")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4002B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D0D")]
			[Address(RVA = "0xF932D0", Offset = "0xF932D0", VA = "0xF932D0")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002D0E")]
			[Address(RVA = "0xF932D8", Offset = "0xF932D8", VA = "0xF932D8")]
			internal Vector3 <DOOffsetChar>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002D0F")]
			[Address(RVA = "0xF93358", Offset = "0xF93358", VA = "0xF93358")]
			internal void <DOOffsetChar>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000795")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB605B4", Offset = "0xB605B4")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4002B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D10")]
			[Address(RVA = "0xF938DC", Offset = "0xF938DC", VA = "0xF938DC")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002D11")]
			[Address(RVA = "0xF938E4", Offset = "0xF938E4", VA = "0xF938E4")]
			internal Quaternion <DORotateChar>b__0()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002D12")]
			[Address(RVA = "0xF93964", Offset = "0xF93964", VA = "0xF93964")]
			internal void <DORotateChar>b__1(Quaternion x)
			{
			}
		}

		[Token(Token = "0x2000796")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB605C4", Offset = "0xB605C4")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4002B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D13")]
			[Address(RVA = "0xF93AD8", Offset = "0xF93AD8", VA = "0xF93AD8")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6002D14")]
			[Address(RVA = "0xF93AE0", Offset = "0xF93AE0", VA = "0xF93AE0")]
			internal Vector3 <DOScaleChar>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002D15")]
			[Address(RVA = "0xF93B60", Offset = "0xF93B60", VA = "0xF93B60")]
			internal void <DOScaleChar>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000797")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB605D4", Offset = "0xB605D4")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4002B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D16")]
			[Address(RVA = "0xF93CBC", Offset = "0xF93CBC", VA = "0xF93CBC")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6002D17")]
			[Address(RVA = "0xF93CC4", Offset = "0xF93CC4", VA = "0xF93CC4")]
			internal Vector3 <DOPunchCharOffset>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002D18")]
			[Address(RVA = "0xF93D44", Offset = "0xF93D44", VA = "0xF93D44")]
			internal void <DOPunchCharOffset>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB605E4", Offset = "0xB605E4")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D19")]
			[Address(RVA = "0xF93EB0", Offset = "0xF93EB0", VA = "0xF93EB0")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6002D1A")]
			[Address(RVA = "0xF93EB8", Offset = "0xF93EB8", VA = "0xF93EB8")]
			internal Vector3 <DOPunchCharRotation>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0xF93F64", Offset = "0xF93F64", VA = "0xF93F64")]
			internal void <DOPunchCharRotation>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000799")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB605F4", Offset = "0xB605F4")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4002BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D1C")]
			[Address(RVA = "0xF94118", Offset = "0xF94118", VA = "0xF94118")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6002D1D")]
			[Address(RVA = "0xF94120", Offset = "0xF94120", VA = "0xF94120")]
			internal Vector3 <DOPunchCharScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0xF941A0", Offset = "0xF941A0", VA = "0xF941A0")]
			internal void <DOPunchCharScale>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200079A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60604", Offset = "0xB60604")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4002BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0xF942FC", Offset = "0xF942FC", VA = "0xF942FC")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6002D20")]
			[Address(RVA = "0xF94304", Offset = "0xF94304", VA = "0xF94304")]
			internal Vector3 <DOShakeCharOffset>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002D21")]
			[Address(RVA = "0xF94384", Offset = "0xF94384", VA = "0xF94384")]
			internal void <DOShakeCharOffset>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60614", Offset = "0xB60614")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4002BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D22")]
			[Address(RVA = "0xF944F0", Offset = "0xF944F0", VA = "0xF944F0")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6002D23")]
			[Address(RVA = "0xF944F8", Offset = "0xF944F8", VA = "0xF944F8")]
			internal Vector3 <DOShakeCharRotation>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002D24")]
			[Address(RVA = "0xF945A4", Offset = "0xF945A4", VA = "0xF945A4")]
			internal void <DOShakeCharRotation>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60624", Offset = "0xB60624")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4002BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DOTweenTMPAnimator <>4__this;

			[Token(Token = "0x4002BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int charIndex;

			[Token(Token = "0x6002D25")]
			[Address(RVA = "0xF94758", Offset = "0xF94758", VA = "0xF94758")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6002D26")]
			[Address(RVA = "0xF94760", Offset = "0xF94760", VA = "0xF94760")]
			internal Vector3 <DOShakeCharScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002D27")]
			[Address(RVA = "0xF947E0", Offset = "0xF947E0", VA = "0xF947E0")]
			internal void <DOShakeCharScale>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x4002B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<TMP_Text, DOTweenTMPAnimator> _targetToAnimator;

		[Token(Token = "0x4002B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78614", Offset = "0xB78614")]
		private TMP_Text <target>k__BackingField;

		[Token(Token = "0x4002B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78624", Offset = "0xB78624")]
		private TMP_TextInfo <textInfo>k__BackingField;

		[Token(Token = "0x4002B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<CharTransform> _charTransforms;

		[Token(Token = "0x4002B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_MeshInfo[] _cachedMeshInfos;

		[Token(Token = "0x4002B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _ignoreTextChangedEvent;

		[Token(Token = "0x17000670")]
		public TMP_Text target
		{
			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0x109AA80", Offset = "0x109AA80", VA = "0x109AA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB882B4", Offset = "0xB882B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0x109AA88", Offset = "0x109AA88", VA = "0x109AA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB882C4", Offset = "0xB882C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000671")]
		public TMP_TextInfo textInfo
		{
			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0x109AA90", Offset = "0x109AA90", VA = "0x109AA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB882D4", Offset = "0xB882D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0x109AA98", Offset = "0x109AA98", VA = "0x109AA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB882E4", Offset = "0xB882E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0x109AAA0", Offset = "0x109AAA0", VA = "0x109AAA0")]
		public DOTweenTMPAnimator(TMP_Text target)
		{
		}

		[Token(Token = "0x6002CD2")]
		[Address(RVA = "0x109B204", Offset = "0x109B204", VA = "0x109B204")]
		public static void DisposeInstanceFor(TMP_Text target)
		{
		}

		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0x109AE40", Offset = "0x109AE40", VA = "0x109AE40", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0x109AF88", Offset = "0x109AF88", VA = "0x109AF88")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0x109B320", Offset = "0x109B320", VA = "0x109B320")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002CD6")]
		[Address(RVA = "0x109B410", Offset = "0x109B410", VA = "0x109B410")]
		private void OnTextChanged(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0x109B4DC", Offset = "0x109B4DC", VA = "0x109B4DC")]
		private bool ValidateChar(int charIndex, bool isTween = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD8")]
		[Address(RVA = "0x109B684", Offset = "0x109B684", VA = "0x109B684")]
		private bool ValidateSpan(int fromCharIndex, int toCharIndex, out int firstVisibleCharIndex, out int lastVisibleCharIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD9")]
		[Address(RVA = "0x109B7EC", Offset = "0x109B7EC", VA = "0x109B7EC")]
		public void SkewSpanX(int fromCharIndex, int toCharIndex, float skewFactor, bool skewTop = true)
		{
		}

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0x109BB14", Offset = "0x109BB14", VA = "0x109BB14")]
		public void SkewSpanY(int fromCharIndex, int toCharIndex, float skewFactor, TMPSkewSpanMode mode = TMPSkewSpanMode.Default, bool skewRight = true)
		{
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0x109C2D0", Offset = "0x109C2D0", VA = "0x109C2D0")]
		public Color GetCharColor(int charIndex)
		{
			return default(Color);
		}

		[Token(Token = "0x6002CDC")]
		[Address(RVA = "0x109C3B0", Offset = "0x109C3B0", VA = "0x109C3B0")]
		public Vector3 GetCharOffset(int charIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0x109C44C", Offset = "0x109C44C", VA = "0x109C44C")]
		public Vector3 GetCharRotation(int charIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0x109C518", Offset = "0x109C518", VA = "0x109C518")]
		public Vector3 GetCharScale(int charIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0x109C5B4", Offset = "0x109C5B4", VA = "0x109C5B4")]
		public void SetCharColor(int charIndex, Color32 color)
		{
		}

		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0x109C170", Offset = "0x109C170", VA = "0x109C170")]
		public void SetCharOffset(int charIndex, Vector3 offset)
		{
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0x109C6E8", Offset = "0x109C6E8", VA = "0x109C6E8")]
		public void SetCharRotation(int charIndex, Vector3 rotation)
		{
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0x109C888", Offset = "0x109C888", VA = "0x109C888")]
		public void SetCharScale(int charIndex, Vector3 scale)
		{
		}

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0x109C9D8", Offset = "0x109C9D8", VA = "0x109C9D8")]
		public void ShiftCharVertices(int charIndex, Vector3 topLeftShift, Vector3 topRightShift, Vector3 bottomLeftShift, Vector3 bottomRightShift)
		{
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0x109B958", Offset = "0x109B958", VA = "0x109B958")]
		public float SkewCharX(int charIndex, float skewFactor, bool skewTop = true)
		{
			return default(float);
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0x109BF64", Offset = "0x109BF64", VA = "0x109BF64")]
		public float SkewCharY(int charIndex, float skewFactor, bool skewRight = true, bool fixedSkew = false)
		{
			return default(float);
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0x109CB5C", Offset = "0x109CB5C", VA = "0x109CB5C")]
		public void ResetVerticesShift(int charIndex)
		{
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0x109CC70", Offset = "0x109CC70", VA = "0x109CC70")]
		public TweenerCore<Color, Color, ColorOptions> DOFadeChar(int charIndex, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CE8")]
		[Address(RVA = "0x109CE20", Offset = "0x109CE20", VA = "0x109CE20")]
		public TweenerCore<Color, Color, ColorOptions> DOColorChar(int charIndex, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0x109D000", Offset = "0x109D000", VA = "0x109D000")]
		public TweenerCore<Vector3, Vector3, VectorOptions> DOOffsetChar(int charIndex, Vector3 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0x109D1CC", Offset = "0x109D1CC", VA = "0x109D1CC")]
		public TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotateChar(int charIndex, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0x109D39C", Offset = "0x109D39C", VA = "0x109D39C")]
		public TweenerCore<Vector3, Vector3, VectorOptions> DOScaleChar(int charIndex, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0x109D3AC", Offset = "0x109D3AC", VA = "0x109D3AC")]
		public TweenerCore<Vector3, Vector3, VectorOptions> DOScaleChar(int charIndex, Vector3 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0x109D578", Offset = "0x109D578", VA = "0x109D578")]
		public Tweener DOPunchCharOffset(int charIndex, Vector3 punch, float duration, int vibrato = 10, float elasticity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6002CEE")]
		[Address(RVA = "0x109D7E4", Offset = "0x109D7E4", VA = "0x109D7E4")]
		public Tweener DOPunchCharRotation(int charIndex, Vector3 punch, float duration, int vibrato = 10, float elasticity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0x109DA50", Offset = "0x109DA50", VA = "0x109DA50")]
		public Tweener DOPunchCharScale(int charIndex, float punch, float duration, int vibrato = 10, float elasticity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0x109DA64", Offset = "0x109DA64", VA = "0x109DA64")]
		public Tweener DOPunchCharScale(int charIndex, Vector3 punch, float duration, int vibrato = 10, float elasticity = 1f)
		{
			return null;
		}

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0x109DCD0", Offset = "0x109DCD0", VA = "0x109DCD0")]
		public Tweener DOShakeCharOffset(int charIndex, float duration, float strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002CF2")]
		[Address(RVA = "0x109DCE4", Offset = "0x109DCE4", VA = "0x109DCE4")]
		public Tweener DOShakeCharOffset(int charIndex, float duration, Vector3 strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0x109DF58", Offset = "0x109DF58", VA = "0x109DF58")]
		public Tweener DOShakeCharRotation(int charIndex, float duration, Vector3 strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002CF4")]
		[Address(RVA = "0x109E1CC", Offset = "0x109E1CC", VA = "0x109E1CC")]
		public Tweener DOShakeCharScale(int charIndex, float duration, float strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0x109E1E0", Offset = "0x109E1E0", VA = "0x109E1E0")]
		public Tweener DOShakeCharScale(int charIndex, float duration, Vector3 strength, int vibrato = 10, float randomness = 90f, bool fadeOut = true)
		{
			return null;
		}
	}
}
namespace ntw.CurvedTextMeshPro
{
	[Token(Token = "0x200079D")]
	[ExecuteInEditMode]
	public class TextProOnACircle : TextProOnACurve
	{
		[Token(Token = "0x4002BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB78644", Offset = "0xB78644")]
		private float m_radius;

		[Token(Token = "0x4002BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB78690", Offset = "0xB78690")]
		private float m_arcDegrees;

		[Token(Token = "0x4002BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB786DC", Offset = "0xB786DC")]
		private float m_angularOffset;

		[Token(Token = "0x4002BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB78728", Offset = "0xB78728")]
		private int m_maxDegreesPerLetter;

		[Token(Token = "0x4002BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_oldRadius;

		[Token(Token = "0x4002BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_oldArcDegrees;

		[Token(Token = "0x4002BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_oldAngularOffset;

		[Token(Token = "0x4002BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_oldMaxDegreesPerLetter;

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0x15D585C", Offset = "0x15D585C", VA = "0x15D585C", Slot = "4")]
		protected override bool ParametersHaveChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0x15D58DC", Offset = "0x15D58DC", VA = "0x15D58DC", Slot = "5")]
		protected override Matrix4x4 ComputeTransformationMatrix(Vector3 charMidBaselinePos, float zeroToOnePos, TMP_TextInfo textInfo, int visibleCharacterCount, int charIdx)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002D2A")]
		[Address(RVA = "0x15D5A88", Offset = "0x15D5A88", VA = "0x15D5A88")]
		public TextProOnACircle()
		{
		}
	}
	[Token(Token = "0x200079E")]
	[ExecuteInEditMode]
	public abstract class TextProOnACurve : MonoBehaviour
	{
		[Token(Token = "0x4002BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4002BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_forceUpdate;

		[Token(Token = "0x6002D2B")]
		[Address(RVA = "0x15D5ABC", Offset = "0x15D5ABC", VA = "0x15D5ABC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002D2C")]
		[Address(RVA = "0x15D5B28", Offset = "0x15D5B28", VA = "0x15D5B28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002D2D")]
		[Address(RVA = "0x15D5B34", Offset = "0x15D5B34", VA = "0x15D5B34")]
		protected void Update()
		{
		}

		[Token(Token = "0x6002D2E")]
		protected abstract bool ParametersHaveChanged();

		[Token(Token = "0x6002D2F")]
		protected abstract Matrix4x4 ComputeTransformationMatrix(Vector3 charMidBaselinePos, float zeroToOnePos, TMP_TextInfo textInfo, int visibleCharacterCount, int charIdx);

		[Token(Token = "0x6002D30")]
		[Address(RVA = "0x15D6058", Offset = "0x15D6058", VA = "0x15D6058")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0x15D5AB4", Offset = "0x15D5AB4", VA = "0x15D5AB4")]
		protected TextProOnACurve()
		{
		}
	}
	[Token(Token = "0x200079F")]
	[ExecuteInEditMode]
	public class TextProOnAExp : TextProOnACurve
	{
		[Token(Token = "0x4002BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xB78774", Offset = "0xB78774")]
		private float m_expBase;

		[Token(Token = "0x4002BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_oldExpBase;

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0x15D6064", Offset = "0x15D6064", VA = "0x15D6064", Slot = "4")]
		protected override bool ParametersHaveChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0x15D607C", Offset = "0x15D607C", VA = "0x15D607C", Slot = "5")]
		protected override Matrix4x4 ComputeTransformationMatrix(Vector3 charMidBaselinePos, float zeroToOnePos, TMP_TextInfo textInfo, int visibleCharacterCount, int charIdx)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0x15D61D4", Offset = "0x15D61D4", VA = "0x15D61D4")]
		public TextProOnAExp()
		{
		}
	}
}
namespace Mochineko.SimpleReorderableList.Samples
{
	[Token(Token = "0x20007A0")]
	public class DropDownSample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007A1")]
		public class Human
		{
			[Token(Token = "0x4002BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string name;

			[Token(Token = "0x4002BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[ReadOnlyField]
			private string bloodType;

			[Token(Token = "0x6002D38")]
			[Address(RVA = "0xF96278", Offset = "0xF96278", VA = "0xF96278")]
			public Human(string bloodType)
			{
			}
		}

		[Token(Token = "0x4002BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Human> humans;

		[Token(Token = "0x4002BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] bloodTypeCanditates;

		[Token(Token = "0x17000673")]
		public List<Human> Humans
		{
			[Token(Token = "0x6002D35")]
			[Address(RVA = "0x10F25E8", Offset = "0x10F25E8", VA = "0x10F25E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0x10F25F0", Offset = "0x10F25F0", VA = "0x10F25F0")]
		public DropDownSample()
		{
		}
	}
	[Token(Token = "0x20007A2")]
	public class ReadOnlyFieldAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x6002D39")]
		[Address(RVA = "0x1006B68", Offset = "0x1006B68", VA = "0x1006B68")]
		public ReadOnlyFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20007A3")]
	public class FixedElementCountSample : MonoBehaviour
	{
		[Token(Token = "0x4002BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] texts;

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0x10F9AF4", Offset = "0x10F9AF4", VA = "0x10F9AF4")]
		public FixedElementCountSample()
		{
		}
	}
	[Token(Token = "0x20007A4")]
	public class FullyFixedSample : MonoBehaviour
	{
		[Token(Token = "0x4002BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[ReadOnlyField]
		private string[] texts;

		[Token(Token = "0x6002D3B")]
		[Address(RVA = "0x14C2F68", Offset = "0x14C2F68", VA = "0x14C2F68")]
		public FullyFixedSample()
		{
		}
	}
	[Token(Token = "0x20007A5")]
	public class MultiPropertySample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007A6")]
		private class SampleElement
		{
			[Token(Token = "0x4002BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string label;

			[Token(Token = "0x4002BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private bool activity;

			[Token(Token = "0x4002BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private Vector3 position;

			[Token(Token = "0x6002D3D")]
			[Address(RVA = "0xFDD12C", Offset = "0xFDD12C", VA = "0xFDD12C")]
			public SampleElement()
			{
			}
		}

		[Token(Token = "0x4002BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<SampleElement> list;

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0xF1F894", Offset = "0xF1F894", VA = "0xF1F894")]
		public MultiPropertySample()
		{
		}
	}
	[Token(Token = "0x20007A7")]
	public class NestedMultiPropertySample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007A8")]
		private class SampleElement
		{
			[Token(Token = "0x4002BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Rect rect;

			[Token(Token = "0x4002BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Bounds bounds;

			[Token(Token = "0x4002BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private Quaternion rotation;

			[Token(Token = "0x4002BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private Vector4 vector;

			[Token(Token = "0x4002BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			private string[] labels;

			[Token(Token = "0x6002D3F")]
			[Address(RVA = "0xFB19B8", Offset = "0xFB19B8", VA = "0xFB19B8")]
			public SampleElement()
			{
			}
		}

		[Token(Token = "0x4002BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<SampleElement> list;

		[Token(Token = "0x4002BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string text;

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0xF22A38", Offset = "0xF22A38", VA = "0xF22A38")]
		public NestedMultiPropertySample()
		{
		}
	}
	[Token(Token = "0x20007A9")]
	public class SinglePropertySample : MonoBehaviour
	{
		[Token(Token = "0x4002BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] texts;

		[Token(Token = "0x6002D40")]
		[Address(RVA = "0xF0E6B4", Offset = "0xF0E6B4", VA = "0xF0E6B4")]
		public SinglePropertySample()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x20007AA")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20007AB")]
		public enum eFileType
		{
			[Token(Token = "0x4002BCA")]
			Raw,
			[Token(Token = "0x4002BCB")]
			Persistent,
			[Token(Token = "0x4002BCC")]
			Temporal,
			[Token(Token = "0x4002BCD")]
			Streaming
		}

		[Token(Token = "0x4002BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0xF4F2BC", Offset = "0xF4F2BC", VA = "0xF4F2BC")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6002D42")]
		[Address(RVA = "0xF4F37C", Offset = "0xF4F37C", VA = "0xF4F37C")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0xF4F43C", Offset = "0xF4F43C", VA = "0xF4F43C")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0xF4F4F4", Offset = "0xF4F4F4", VA = "0xF4F4F4")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0xF4F5AC", Offset = "0xF4F5AC", VA = "0xF4F5AC")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6002D46")]
		[Address(RVA = "0xF4F654", Offset = "0xF4F654", VA = "0xF4F654")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D47")]
		[Address(RVA = "0xF4F6FC", Offset = "0xF4F6FC", VA = "0xF4F6FC")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D48")]
		[Address(RVA = "0xF4F7D4", Offset = "0xF4F7D4", VA = "0xF4F7D4")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0xF4F8A4", Offset = "0xF4F8A4", VA = "0xF4F8A4")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0xF4F974", Offset = "0xF4F974", VA = "0xF4F974")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007AC")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0x1C590F8", Offset = "0x1C590F8", VA = "0x1C590F8", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6002D4C")]
		[Address(RVA = "0x1C59384", Offset = "0x1C59384", VA = "0x1C59384", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6002D4D")]
		[Address(RVA = "0x1C595EC", Offset = "0x1C595EC", VA = "0x1C595EC", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0x1C59810", Offset = "0x1C59810", VA = "0x1C59810", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0x1C59818", Offset = "0x1C59818", VA = "0x1C59818", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D50")]
		[Address(RVA = "0x1C59824", Offset = "0x1C59824", VA = "0x1C59824", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D51")]
		[Address(RVA = "0x1C5982C", Offset = "0x1C5982C", VA = "0x1C5982C")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6002D52")]
		[Address(RVA = "0x1C598D4", Offset = "0x1C598D4", VA = "0x1C598D4", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D53")]
		[Address(RVA = "0x1C59A8C", Offset = "0x1C59A8C", VA = "0x1C59A8C", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0x1C59C38", Offset = "0x1C59C38", VA = "0x1C59C38", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0x1C59DD8", Offset = "0x1C59DD8", VA = "0x1C59DD8", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0x1C59F78", Offset = "0x1C59F78", VA = "0x1C59F78")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x20007AD")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x6002D57")]
		[Address(RVA = "0x1C59F80", Offset = "0x1C59F80", VA = "0x1C59F80")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x20007AE")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x4002BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x4002BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x6002D58")]
		[Address(RVA = "0x144ED88", Offset = "0x144ED88", VA = "0x144ED88", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x6002D59")]
		[Address(RVA = "0x144F2E4", Offset = "0x144F2E4", VA = "0x144F2E4", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0x144F344", Offset = "0x144F344", VA = "0x144F344", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6002D5B")]
		[Address(RVA = "0x144F3F0", Offset = "0x144F3F0", VA = "0x144F3F0")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x20007AF")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x4002BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6002D5C")]
		[Address(RVA = "0x21A2E90", Offset = "0x21A2E90", VA = "0x21A2E90")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6002D5D")]
		[Address(RVA = "0x21A2EC0", Offset = "0x21A2EC0", VA = "0x21A2EC0")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6002D5E")]
		[Address(RVA = "0x21A30C8", Offset = "0x21A30C8", VA = "0x21A30C8")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6002D5F")]
		[Address(RVA = "0x21A3410", Offset = "0x21A3410", VA = "0x21A3410")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0x21A31F4", Offset = "0x21A31F4", VA = "0x21A31F4")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0x21A3818", Offset = "0x21A3818", VA = "0x21A3818")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007B0")]
	public class EventCallback
	{
		[Token(Token = "0x4002BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x4002BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0x10F7F14", Offset = "0x10F7F14", VA = "0x10F7F14")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0x10F7F7C", Offset = "0x10F7F7C", VA = "0x10F7F7C")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D65")]
		[Address(RVA = "0x10F800C", Offset = "0x10F800C", VA = "0x10F800C")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x20007B1")]
	public enum ePluralType
	{
		[Token(Token = "0x4002BD4")]
		Zero,
		[Token(Token = "0x4002BD5")]
		One,
		[Token(Token = "0x4002BD6")]
		Two,
		[Token(Token = "0x4002BD7")]
		Few,
		[Token(Token = "0x4002BD8")]
		Many,
		[Token(Token = "0x4002BD9")]
		Plural
	}
	[Token(Token = "0x20007B2")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x20007B3")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4002BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4002BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x4002BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x4002BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0x2294E50", Offset = "0x2294E50", VA = "0x2294E50")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0x2295250", Offset = "0x2295250", VA = "0x2295250")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0x22950FC", Offset = "0x22950FC", VA = "0x22950FC")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D69")]
		[Address(RVA = "0x22957D8", Offset = "0x22957D8", VA = "0x22957D8")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0x2295930", Offset = "0x2295930", VA = "0x2295930")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6002D6B")]
		[Address(RVA = "0x2295A0C", Offset = "0x2295A0C", VA = "0x2295A0C")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0x2295B9C", Offset = "0x2295B9C", VA = "0x2295B9C")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0x2295D68", Offset = "0x2295D68", VA = "0x2295D68")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0x2296050", Offset = "0x2296050", VA = "0x2296050")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0x2296250", Offset = "0x2296250", VA = "0x2296250")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0x22963F8", Offset = "0x22963F8", VA = "0x22963F8")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x6002D71")]
		[Address(RVA = "0x22965C4", Offset = "0x22965C4", VA = "0x22965C4")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D72")]
		[Address(RVA = "0x229678C", Offset = "0x229678C", VA = "0x229678C")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x6002D73")]
		[Address(RVA = "0x2296EA0", Offset = "0x2296EA0", VA = "0x2296EA0")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0x2296E88", Offset = "0x2296E88", VA = "0x2296E88")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20007B4")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20007B5")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x20007B6")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x20007B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60664", Offset = "0xB60664")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x4002BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x4002BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x4002BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LanguageCodeTo;

			[Token(Token = "0x6002D9A")]
			[Address(RVA = "0xFD13D4", Offset = "0xFD13D4", VA = "0xFD13D4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002D9B")]
			[Address(RVA = "0xFD13DC", Offset = "0xFD13DC", VA = "0xFD13DC")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x20007B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60674", Offset = "0xB60674")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000674")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D9F")]
				[Address(RVA = "0xFD1A3C", Offset = "0xFD1A3C", VA = "0xFD1A3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000675")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002DA1")]
				[Address(RVA = "0xFD1A84", Offset = "0xFD1A84", VA = "0xFD1A84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D9C")]
			[Address(RVA = "0xFD1858", Offset = "0xFD1858", VA = "0xFD1858")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002D9D")]
			[Address(RVA = "0xFD1884", Offset = "0xFD1884", VA = "0xFD1884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0xFD1888", Offset = "0xFD1888", VA = "0xFD1888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002DA0")]
			[Address(RVA = "0xFD1A44", Offset = "0xFD1A44", VA = "0xFD1A44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x4002BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0x229E5A4", Offset = "0x229E5A4", VA = "0x229E5A4")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D77")]
		[Address(RVA = "0x229E660", Offset = "0x229E660", VA = "0x229E660")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x6002D78")]
		[Address(RVA = "0x229EBB4", Offset = "0x229EBB4", VA = "0x229EBB4")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0x229EB18", Offset = "0x229EB18", VA = "0x229EB18")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x6002D7A")]
		[Address(RVA = "0x229F254", Offset = "0x229F254", VA = "0x229F254")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D7B")]
		[Address(RVA = "0x229F2D8", Offset = "0x229F2D8", VA = "0x229F2D8")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x6002D7C")]
		[Address(RVA = "0x229F174", Offset = "0x229F174", VA = "0x229F174")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x6002D7D")]
		[Address(RVA = "0x229F878", Offset = "0x229F878", VA = "0x229F878")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8833C", Offset = "0xB8833C")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0x229F8D4", Offset = "0x229F8D4", VA = "0x229F8D4")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0x22A0048", Offset = "0x22A0048", VA = "0x22A0048")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0x22A0110", Offset = "0x22A0110", VA = "0x22A0110")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x6002D81")]
		[Address(RVA = "0x229E908", Offset = "0x229E908", VA = "0x229E908")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0x22A02CC", Offset = "0x22A02CC", VA = "0x22A02CC")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6002D83")]
		[Address(RVA = "0x229ED1C", Offset = "0x229ED1C", VA = "0x229ED1C")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6002D84")]
		[Address(RVA = "0x22A0D3C", Offset = "0x22A0D3C", VA = "0x22A0D3C")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6002D85")]
		[Address(RVA = "0x229FDD8", Offset = "0x229FDD8", VA = "0x229FDD8")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x6002D86")]
		[Address(RVA = "0x22A0564", Offset = "0x22A0564", VA = "0x22A0564")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D87")]
		[Address(RVA = "0x22A0728", Offset = "0x22A0728", VA = "0x22A0728")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x6002D88")]
		[Address(RVA = "0x22A05FC", Offset = "0x22A05FC", VA = "0x22A05FC")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x6002D89")]
		[Address(RVA = "0x22A0E48", Offset = "0x22A0E48", VA = "0x22A0E48")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002D8A")]
		[Address(RVA = "0x229FF94", Offset = "0x229FF94", VA = "0x229FF94")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0x22A0820", Offset = "0x22A0820", VA = "0x22A0820")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x6002D8C")]
		[Address(RVA = "0x229F050", Offset = "0x229F050", VA = "0x229F050")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0x22A0F14", Offset = "0x22A0F14", VA = "0x22A0F14")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6002D8E")]
		[Address(RVA = "0x22A11D8", Offset = "0x22A11D8", VA = "0x22A11D8")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6002D8F")]
		[Address(RVA = "0x22A1560", Offset = "0x22A1560", VA = "0x22A1560")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x6002D90")]
		[Address(RVA = "0x229F7B8", Offset = "0x229F7B8", VA = "0x229F7B8")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x20007B9")]
	public struct TranslationQuery
	{
		[Token(Token = "0x4002BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x4002BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x4002BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x20007BA")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x20007BB")]
		public enum eJobState
		{
			[Token(Token = "0x4002BEF")]
			Running,
			[Token(Token = "0x4002BF0")]
			Succeeded,
			[Token(Token = "0x4002BF1")]
			Failed
		}

		[Token(Token = "0x4002BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0x114EBCC", Offset = "0x114EBCC", VA = "0x114EBCC", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0x114EBD4", Offset = "0x114EBD4", VA = "0x114EBD4", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002DA4")]
		[Address(RVA = "0x114EBD8", Offset = "0x114EBD8", VA = "0x114EBD8")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x20007BC")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x4002BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0x1150530", Offset = "0x1150530", VA = "0x1150530", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0x114ECA4", Offset = "0x114ECA4", VA = "0x114ECA4")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x20007BD")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4002BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4002BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x4002BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0x114EBE0", Offset = "0x114EBE0", VA = "0x114EBE0")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002DA8")]
		[Address(RVA = "0x114ECAC", Offset = "0x114ECAC", VA = "0x114ECAC")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0x114EDCC", Offset = "0x114EDCC", VA = "0x114EDCC", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002DAA")]
		[Address(RVA = "0x114EE84", Offset = "0x114EE84", VA = "0x114EE84")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20007BE")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x4002BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x4002BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x4002BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x4002BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4002BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6002DAB")]
		[Address(RVA = "0x114EFA4", Offset = "0x114EFA4", VA = "0x114EFA4")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0x114F20C", Offset = "0x114F20C", VA = "0x114F20C", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0x114F414", Offset = "0x114F414", VA = "0x114F414", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20007BF")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x4002BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x6002DAE")]
		[Address(RVA = "0x114F048", Offset = "0x114F048", VA = "0x114F048")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002DAF")]
		[Address(RVA = "0x114F478", Offset = "0x114F478", VA = "0x114F478", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002DB0")]
		[Address(RVA = "0x114F520", Offset = "0x114F520", VA = "0x114F520")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20007C0")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x20007C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60684", Offset = "0xB60684")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x4002C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x4002C09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x6002DB8")]
			[Address(RVA = "0x1B8B0B8", Offset = "0x1B8B0B8", VA = "0x1B8B0B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002DB9")]
			[Address(RVA = "0x1B8B0C0", Offset = "0x1B8B0C0", VA = "0x1B8B0C0")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0x1B8B11C", Offset = "0x1B8B11C", VA = "0x1B8B11C")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x6002DBB")]
			[Address(RVA = "0x1B8B1C8", Offset = "0x1B8B1C8", VA = "0x1B8B1C8")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x4002BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4002C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x4002C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x4002C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x4002C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x4002C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x6002DB1")]
		[Address(RVA = "0x114F614", Offset = "0x114F614", VA = "0x114F614")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002DB2")]
		[Address(RVA = "0x114F674", Offset = "0x114F674", VA = "0x114F674")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0x114F9E4", Offset = "0x114F9E4", VA = "0x114F9E4")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0x114FDE4", Offset = "0x114FDE4", VA = "0x114FDE4", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0x114FE9C", Offset = "0x114FE9C", VA = "0x114FE9C")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x6002DB6")]
		[Address(RVA = "0x114FFD4", Offset = "0x114FFD4", VA = "0x114FFD4")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x20007C2")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x4002C0B")]
		DISABLED = 1,
		[Token(Token = "0x4002C0C")]
		KEEP_LOADED = 2,
		[Token(Token = "0x4002C0D")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x20007C3")]
	public class LanguageData
	{
		[Token(Token = "0x4002C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4002C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x4002C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4002C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x6002DBC")]
		[Address(RVA = "0x101DC1C", Offset = "0x101DC1C", VA = "0x101DC1C")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DBD")]
		[Address(RVA = "0x101DC2C", Offset = "0x101DC2C", VA = "0x101DC2C")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0x101DC48", Offset = "0x101DC48", VA = "0x101DC48")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DBF")]
		[Address(RVA = "0x101DC58", Offset = "0x101DC58", VA = "0x101DC58")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC0")]
		[Address(RVA = "0x101DC68", Offset = "0x101DC68", VA = "0x101DC68")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6002DC1")]
		[Address(RVA = "0x101DC84", Offset = "0x101DC84", VA = "0x101DC84")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x6002DC2")]
		[Address(RVA = "0x101DCA0", Offset = "0x101DCA0", VA = "0x101DCA0")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x20007C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB60694", Offset = "0xB60694")]
	[ExecuteInEditMode]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x20007C5")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4002C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4002C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x4002C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x4002C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4002C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4002C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x4002C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x4002C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4002C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4002C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4002C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4002C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4002C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4002C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4002C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4002C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4002C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x4002C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4002C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4002C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x17000676")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6002DC3")]
			[Address(RVA = "0x101DCA8", Offset = "0x101DCA8", VA = "0x101DCA8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002DC4")]
			[Address(RVA = "0x101DCB0", Offset = "0x101DCB0", VA = "0x101DCB0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x140000AF")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6002DC5")]
			[Address(RVA = "0x101DCB8", Offset = "0x101DCB8", VA = "0x101DCB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB883EC", Offset = "0xB883EC")]
			add
			{
			}
			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0x101DD58", Offset = "0x101DD58", VA = "0x101DD58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB883FC", Offset = "0xB883FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6002DC7")]
		[Address(RVA = "0x101DDF8", Offset = "0x101DDF8", VA = "0x101DDF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DC8")]
		[Address(RVA = "0x101DEB8", Offset = "0x101DEB8", VA = "0x101DEB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002DC9")]
		[Address(RVA = "0x101DF3C", Offset = "0x101DF3C", VA = "0x101DF3C")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x6002DCA")]
		[Address(RVA = "0x101E038", Offset = "0x101E038", VA = "0x101E038", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002DCB")]
		[Address(RVA = "0x101E044", Offset = "0x101E044", VA = "0x101E044", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002DCC")]
		[Address(RVA = "0x101E748", Offset = "0x101E748", VA = "0x101E748")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x20007C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xB606E0", Offset = "0xB606E0")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4002C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x17000677")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6002DD1")]
			[Address(RVA = "0x101E8B8", Offset = "0x101E8B8", VA = "0x101E8B8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002DD2")]
			[Address(RVA = "0x101E8C0", Offset = "0x101E8C0", VA = "0x101E8C0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0x101E8C8", Offset = "0x101E8C8", VA = "0x101E8C8")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x20007C7")]
	public interface ILanguageSource
	{
		[Token(Token = "0x17000678")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6002DD4")]
			get;
			[Token(Token = "0x6002DD5")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x20007C8")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x20007C9")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4002C44")]
			Empty,
			[Token(Token = "0x4002C45")]
			Fallback,
			[Token(Token = "0x4002C46")]
			ShowWarning,
			[Token(Token = "0x4002C47")]
			ShowTerm
		}

		[Token(Token = "0x20007CA")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x4002C49")]
			Never,
			[Token(Token = "0x4002C4A")]
			OnlyInDevice,
			[Token(Token = "0x4002C4B")]
			EditorAndDevice
		}

		[Token(Token = "0x20007CB")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x4002C4D")]
			Always,
			[Token(Token = "0x4002C4E")]
			Never,
			[Token(Token = "0x4002C4F")]
			Daily,
			[Token(Token = "0x4002C50")]
			Weekly,
			[Token(Token = "0x4002C51")]
			Monthly,
			[Token(Token = "0x4002C52")]
			OnlyOnce,
			[Token(Token = "0x4002C53")]
			EveryOtherDay
		}

		[Token(Token = "0x20007CC")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4002C55")]
			Manual,
			[Token(Token = "0x4002C56")]
			OnSceneLoaded,
			[Token(Token = "0x4002C57")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x20007CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6075C", Offset = "0xB6075C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x4002C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x4002C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x4002C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x4002C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Comparison<TermData> <>9__43_0;

			[Token(Token = "0x4002C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Comparison<TermData> <>9__47_0;

			[Token(Token = "0x6002E26")]
			[Address(RVA = "0xFD7CBC", Offset = "0xFD7CBC", VA = "0xFD7CBC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E27")]
			[Address(RVA = "0xFD7CC4", Offset = "0xFD7CC4", VA = "0xFD7CC4")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E28")]
			[Address(RVA = "0xFD7D2C", Offset = "0xFD7D2C", VA = "0xFD7D2C")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6002E29")]
			[Address(RVA = "0xFD7D48", Offset = "0xFD7D48", VA = "0xFD7D48")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0xFD7DF0", Offset = "0xFD7DF0", VA = "0xFD7DF0")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0xFD7E3C", Offset = "0xFD7E3C", VA = "0xFD7E3C")]
			internal int <Export_I2CSV>b__43_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x6002E2C")]
			[Address(RVA = "0xFD7E64", Offset = "0xFD7E64", VA = "0xFD7E64")]
			internal int <Export_CSV>b__47_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20007CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6076C", Offset = "0xB6076C")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4002C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x4002C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700067A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E30")]
				[Address(RVA = "0xFD81DC", Offset = "0xFD81DC", VA = "0xFD81DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E32")]
				[Address(RVA = "0xFD8224", Offset = "0xFD8224", VA = "0xFD8224", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E2D")]
			[Address(RVA = "0xFD7E8C", Offset = "0xFD7E8C", VA = "0xFD7E8C")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6002E2E")]
			[Address(RVA = "0xFD7EB8", Offset = "0xFD7EB8", VA = "0xFD7EB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0xFD7EBC", Offset = "0xFD7EBC", VA = "0xFD7EBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E31")]
			[Address(RVA = "0xFD81E4", Offset = "0xFD81E4", VA = "0xFD81E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4002C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x4002C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4002C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4002C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x4002C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x4002C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x4002C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x4002C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x4002C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4002C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x4002C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4002C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4002C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4002C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4002C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4002C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4002C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4002C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4002C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x4002C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x4002C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4002C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x4002C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4002C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x4002C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4002C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x17000679")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6002DD6")]
			[Address(RVA = "0x101E934", Offset = "0x101E934", VA = "0x101E934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000B0")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6002DD7")]
			[Address(RVA = "0x101E6A8", Offset = "0x101E6A8", VA = "0x101E6A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8840C", Offset = "0xB8840C")]
			add
			{
			}
			[Token(Token = "0x6002DD8")]
			[Address(RVA = "0x101E9B4", Offset = "0x101E9B4", VA = "0x101E9B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8841C", Offset = "0xB8841C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0x101DE34", Offset = "0x101DE34", VA = "0x101DE34")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0x101DED8", Offset = "0x101DED8", VA = "0x101DED8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0x101F190", Offset = "0x101F190", VA = "0x101F190")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0x101F744", Offset = "0x101F744", VA = "0x101F744")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0x101F86C", Offset = "0x101F86C", VA = "0x101F86C")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0x101F92C", Offset = "0x101F92C", VA = "0x101F92C")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DDF")]
		[Address(RVA = "0x101F934", Offset = "0x101F934", VA = "0x101F934")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6002DE0")]
		[Address(RVA = "0x101EDA4", Offset = "0x101EDA4", VA = "0x101EDA4")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6002DE1")]
		[Address(RVA = "0x101F938", Offset = "0x101F938", VA = "0x101F938")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0x101FA10", Offset = "0x101FA10", VA = "0x101FA10")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE3")]
		[Address(RVA = "0x101FA74", Offset = "0x101FA74", VA = "0x101FA74")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002DE4")]
		[Address(RVA = "0x101FB1C", Offset = "0x101FB1C", VA = "0x101FB1C")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002DE5")]
		[Address(RVA = "0x1020270", Offset = "0x1020270", VA = "0x1020270")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6002DE6")]
		[Address(RVA = "0x10204F8", Offset = "0x10204F8", VA = "0x10204F8")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6002DE7")]
		[Address(RVA = "0x10205D4", Offset = "0x10205D4", VA = "0x10205D4")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0x1020BA8", Offset = "0x1020BA8", VA = "0x1020BA8")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0x102154C", Offset = "0x102154C", VA = "0x102154C")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x6002DEA")]
		[Address(RVA = "0x10213E4", Offset = "0x10213E4", VA = "0x10213E4")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x6002DEB")]
		[Address(RVA = "0x10217DC", Offset = "0x10217DC", VA = "0x10217DC")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6002DEC")]
		[Address(RVA = "0x1021964", Offset = "0x1021964", VA = "0x1021964")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002DED")]
		[Address(RVA = "0x1021B38", Offset = "0x1021B38", VA = "0x1021B38")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x6002DEE")]
		[Address(RVA = "0x1021FA0", Offset = "0x1021FA0", VA = "0x1021FA0")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6002DEF")]
		[Address(RVA = "0x1022C08", Offset = "0x1022C08", VA = "0x1022C08")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002DF0")]
		[Address(RVA = "0x1021FEC", Offset = "0x1021FEC", VA = "0x1021FEC")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002DF1")]
		[Address(RVA = "0x1022C50", Offset = "0x1022C50", VA = "0x1022C50")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF2")]
		[Address(RVA = "0x102308C", Offset = "0x102308C", VA = "0x102308C")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DF3")]
		[Address(RVA = "0x1023320", Offset = "0x1023320", VA = "0x1023320")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6002DF4")]
		[Address(RVA = "0x1023568", Offset = "0x1023568", VA = "0x1023568")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6002DF5")]
		[Address(RVA = "0x10236E4", Offset = "0x10236E4", VA = "0x10236E4")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6002DF6")]
		[Address(RVA = "0x1023B40", Offset = "0x1023B40", VA = "0x1023B40")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0x1024258", Offset = "0x1024258", VA = "0x1024258")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0x1023964", Offset = "0x1023964", VA = "0x1023964")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0x10244F0", Offset = "0x10244F0", VA = "0x10244F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8842C", Offset = "0xB8842C")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0x102457C", Offset = "0x102457C", VA = "0x102457C")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0x1024640", Offset = "0x1024640", VA = "0x1024640")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0x10247BC", Offset = "0x10247BC", VA = "0x10247BC")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6002DFD")]
		[Address(RVA = "0x1024940", Offset = "0x1024940", VA = "0x1024940")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFE")]
		[Address(RVA = "0x1023BD0", Offset = "0x1023BD0", VA = "0x1023BD0")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6002DFF")]
		[Address(RVA = "0x101F310", Offset = "0x101F310", VA = "0x101F310")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6002E00")]
		[Address(RVA = "0x1024BC0", Offset = "0x1024BC0", VA = "0x1024BC0")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6002E01")]
		[Address(RVA = "0x1024C5C", Offset = "0x1024C5C", VA = "0x1024C5C")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E02")]
		[Address(RVA = "0x1022CF4", Offset = "0x1022CF4", VA = "0x1022CF4")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002E03")]
		[Address(RVA = "0x10249E0", Offset = "0x10249E0", VA = "0x10249E0")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6002E04")]
		[Address(RVA = "0x1024D18", Offset = "0x1024D18", VA = "0x1024D18")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E05")]
		[Address(RVA = "0x1024DB0", Offset = "0x1024DB0", VA = "0x1024DB0")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002E06")]
		[Address(RVA = "0x1024E4C", Offset = "0x1024E4C", VA = "0x1024E4C")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002E07")]
		[Address(RVA = "0x1024ED0", Offset = "0x1024ED0", VA = "0x1024ED0")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6002E08")]
		[Address(RVA = "0x10250A8", Offset = "0x10250A8", VA = "0x10250A8")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002E09")]
		[Address(RVA = "0x10253D8", Offset = "0x10253D8", VA = "0x10253D8")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0x1025530", Offset = "0x1025530", VA = "0x1025530")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0x10256FC", Offset = "0x10256FC", VA = "0x10256FC")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0x10257A4", Offset = "0x10257A4", VA = "0x10257A4")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0x1025854", Offset = "0x1025854", VA = "0x1025854")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0x1025864", Offset = "0x1025864", VA = "0x1025864")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0x1025AA0", Offset = "0x1025AA0", VA = "0x1025AA0")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0x1025E98", Offset = "0x1025E98", VA = "0x1025E98")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0x1025C30", Offset = "0x1025C30", VA = "0x1025C30")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0x1023204", Offset = "0x1023204", VA = "0x1023204")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0x1023158", Offset = "0x1023158", VA = "0x1023158")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E14")]
		[Address(RVA = "0x1021D50", Offset = "0x1021D50", VA = "0x1021D50")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0x102602C", Offset = "0x102602C", VA = "0x102602C")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0x1025F28", Offset = "0x1025F28", VA = "0x1025F28")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0x102610C", Offset = "0x102610C", VA = "0x102610C")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0x101EA54", Offset = "0x101EA54", VA = "0x101EA54")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6002E19")]
		[Address(RVA = "0x1026260", Offset = "0x1026260", VA = "0x1026260")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6002E1A")]
		[Address(RVA = "0x1026308", Offset = "0x1026308", VA = "0x1026308")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0x10208A8", Offset = "0x10208A8", VA = "0x10208A8")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1C")]
		[Address(RVA = "0x102657C", Offset = "0x102657C", VA = "0x102657C")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0x101F510", Offset = "0x101F510", VA = "0x101F510")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6002E1E")]
		[Address(RVA = "0x1026798", Offset = "0x1026798", VA = "0x1026798")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1F")]
		[Address(RVA = "0x10267B8", Offset = "0x10267B8", VA = "0x10267B8")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6002E20")]
		[Address(RVA = "0x1026588", Offset = "0x1026588", VA = "0x1026588")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0x10269D0", Offset = "0x10269D0", VA = "0x10269D0")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6002E22")]
		[Address(RVA = "0x1022EBC", Offset = "0x1022EBC", VA = "0x1022EBC")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6002E23")]
		[Address(RVA = "0x101E40C", Offset = "0x101E40C", VA = "0x101E40C")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x20007CF")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4002C65")]
		None,
		[Token(Token = "0x4002C66")]
		Replace,
		[Token(Token = "0x4002C67")]
		Merge,
		[Token(Token = "0x4002C68")]
		AddNewTerms
	}
	[Token(Token = "0x20007D0")]
	public class LocalizationReader
	{
		[Token(Token = "0x6002E33")]
		[Address(RVA = "0x10D0D30", Offset = "0x10D0D30", VA = "0x10D0D30")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6002E34")]
		[Address(RVA = "0x10D0FBC", Offset = "0x10D0FBC", VA = "0x10D0FBC")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0x10D1450", Offset = "0x10D1450", VA = "0x10D1450")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6002E36")]
		[Address(RVA = "0x10D164C", Offset = "0x10D164C", VA = "0x10D164C")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0x10D1734", Offset = "0x10D1734", VA = "0x10D1734")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x6002E38")]
		[Address(RVA = "0x10D1928", Offset = "0x10D1928", VA = "0x10D1928")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0x10D1A64", Offset = "0x10D1A64", VA = "0x10D1A64")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0x10D13A4", Offset = "0x10D13A4", VA = "0x10D13A4")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0x10D1C60", Offset = "0x10D1C60", VA = "0x10D1C60")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0x10D12F8", Offset = "0x10D12F8", VA = "0x10D12F8")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0x10D1D5C", Offset = "0x10D1D5C", VA = "0x10D1D5C")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x20007D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB6077C", Offset = "0xB6077C")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x20007D2")]
		public enum TermModification
		{
			[Token(Token = "0x4002C8A")]
			DontModify,
			[Token(Token = "0x4002C8B")]
			ToUpper,
			[Token(Token = "0x4002C8C")]
			ToLower,
			[Token(Token = "0x4002C8D")]
			ToUpperFirst,
			[Token(Token = "0x4002C8E")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x20007D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB607B4", Offset = "0xB607B4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__50_0;

			[Token(Token = "0x4002C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__50_1;

			[Token(Token = "0x4002C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__50_2;

			[Token(Token = "0x4002C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__50_3;

			[Token(Token = "0x6002E57")]
			[Address(RVA = "0xFDA340", Offset = "0xFDA340", VA = "0xFDA340")]
			public <>c()
			{
			}

			[Token(Token = "0x6002E58")]
			[Address(RVA = "0xFDA348", Offset = "0xFDA348", VA = "0xFDA348")]
			internal bool <UpdateAssetDictionary>b__50_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002E59")]
			[Address(RVA = "0xFDA3B0", Offset = "0xFDA3B0", VA = "0xFDA3B0")]
			internal string <UpdateAssetDictionary>b__50_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6002E5A")]
			[Address(RVA = "0xFDA3CC", Offset = "0xFDA3CC", VA = "0xFDA3CC")]
			internal string <UpdateAssetDictionary>b__50_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6002E5B")]
			[Address(RVA = "0xFDA474", Offset = "0xFDA474", VA = "0xFDA474")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__50_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x4002C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x4002C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4002C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x4002C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x4002C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x4002C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x4002C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x4002C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x4002C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x4002C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool LocalizeOnEnable;

		[Token(Token = "0x4002C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x4002C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x4002C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x4002C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x4002C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4002C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4002C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4002C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4002C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4002C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x4002C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4002C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4002C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4002C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x4002C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x4002C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x4002C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x4002C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x4002C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x4002C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x4002C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x4002C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x1700067C")]
		public string Term
		{
			[Token(Token = "0x6002E3E")]
			[Address(RVA = "0x10D1D64", Offset = "0x10D1D64", VA = "0x10D1D64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E3F")]
			[Address(RVA = "0x10D1D6C", Offset = "0x10D1D6C", VA = "0x10D1D6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700067D")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6002E40")]
			[Address(RVA = "0x10D1DC8", Offset = "0x10D1DC8", VA = "0x10D1DC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E41")]
			[Address(RVA = "0x10D1DD0", Offset = "0x10D1DD0", VA = "0x10D1DD0")]
			set
			{
			}
		}

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0x10D1E60", Offset = "0x10D1E60", VA = "0x10D1E60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0x10D280C", Offset = "0x10D280C", VA = "0x10D280C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002E44")]
		[Address(RVA = "0x10D2820", Offset = "0x10D2820", VA = "0x10D2820")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E45")]
		[Address(RVA = "0x10CF07C", Offset = "0x10CF07C", VA = "0x10CF07C")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6002E46")]
		[Address(RVA = "0x10D2290", Offset = "0x10D2290", VA = "0x10D2290")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E47")]
		[Address(RVA = "0x10D2874", Offset = "0x10D2874", VA = "0x10D2874")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002E48")]
		[Address(RVA = "0x10D2A2C", Offset = "0x10D2A2C", VA = "0x10D2A2C")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x6002E49")]
		[Address(RVA = "0x10D2B00", Offset = "0x10D2B00", VA = "0x10D2B00")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6002E4A")]
		[Address(RVA = "0x10D1D70", Offset = "0x10D1D70", VA = "0x10D1D70")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6002E4B")]
		[Address(RVA = "0x10D1DDC", Offset = "0x10D1DDC", VA = "0x10D1DDC")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6002E4C")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002E4D")]
		[Address(RVA = "0x10D1EA4", Offset = "0x10D1EA4", VA = "0x10D1EA4")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6002E4E")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002E4F")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0x10D2B5C", Offset = "0x10D2B5C", VA = "0x10D2B5C")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6002E51")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002E52")]
		[Address(RVA = "0x10D2C70", Offset = "0x10D2C70", VA = "0x10D2C70")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E53")]
		[Address(RVA = "0x10D2D04", Offset = "0x10D2D04", VA = "0x10D2D04")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002E54")]
		[Address(RVA = "0x10D2DAC", Offset = "0x10D2DAC", VA = "0x10D2DAC")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6002E55")]
		[Address(RVA = "0x10D2E0C", Offset = "0x10D2E0C", VA = "0x10D2E0C")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x20007D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB607C4", Offset = "0xB607C4")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4002C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6002E5C")]
		[Address(RVA = "0x10D302C", Offset = "0x10D302C", VA = "0x10D302C")]
		public void Start()
		{
		}

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0x10D31D8", Offset = "0x10D31D8", VA = "0x10D31D8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0x10D327C", Offset = "0x10D327C", VA = "0x10D327C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0x10D30D8", Offset = "0x10D30D8", VA = "0x10D30D8")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002E60")]
		[Address(RVA = "0x10D32D8", Offset = "0x10D32D8", VA = "0x10D32D8")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0x10D34AC", Offset = "0x10D34AC", VA = "0x10D34AC")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6002E62")]
		[Address(RVA = "0x10D38FC", Offset = "0x10D38FC", VA = "0x10D38FC")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6002E63")]
		[Address(RVA = "0x10D3740", Offset = "0x10D3740", VA = "0x10D3740")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6002E64")]
		[Address(RVA = "0x10D3B84", Offset = "0x10D3B84", VA = "0x10D3B84")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x20007D5")]
	public static class LocalizationManager
	{
		[Token(Token = "0x20007D6")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x20007D7")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x20007D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB607FC", Offset = "0xB607FC")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4002CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0xFD97F0", Offset = "0xFD97F0", VA = "0xFD97F0")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0xFD97F8", Offset = "0xFD97F8", VA = "0xFD97F8")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6080C", Offset = "0xB6080C")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4002CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6002EB4")]
			[Address(RVA = "0xFD9868", Offset = "0xFD9868", VA = "0xFD9868")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0xFD9870", Offset = "0xFD9870", VA = "0xFD9870")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20007DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6081C", Offset = "0xB6081C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static _GetParam <>9__42_0;

			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0xFD9780", Offset = "0xFD9780", VA = "0xFD9780")]
			public <>c()
			{
			}

			[Token(Token = "0x6002EB8")]
			[Address(RVA = "0xFD9788", Offset = "0xFD9788", VA = "0xFD9788")]
			internal object <ApplyLocalizationParams>b__42_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20007DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6082C", Offset = "0xB6082C")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4002CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0xFD98E0", Offset = "0xFD98E0", VA = "0xFD98E0")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6002EBA")]
			[Address(RVA = "0xFD98E8", Offset = "0xFD98E8", VA = "0xFD98E8")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20007DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6083C", Offset = "0xB6083C")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4002CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0xFD9960", Offset = "0xFD9960", VA = "0xFD9960")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6002EBC")]
			[Address(RVA = "0xFD9968", Offset = "0xFD9968", VA = "0xFD9968")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x20007DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6084C", Offset = "0xB6084C")]
		private sealed class <Delayed_Import_Google>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x4002CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x17000683")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EC0")]
				[Address(RVA = "0xFD9C74", Offset = "0xFD9C74", VA = "0xFD9C74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000684")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EC2")]
				[Address(RVA = "0xFD9CBC", Offset = "0xFD9CBC", VA = "0xFD9CBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0xFD9B84", Offset = "0xFD9B84", VA = "0xFD9B84")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0xFD9BB0", Offset = "0xFD9BB0", VA = "0xFD9BB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0xFD9BB4", Offset = "0xFD9BB4", VA = "0xFD9BB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0xFD9C7C", Offset = "0xFD9C7C", VA = "0xFD9C7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6085C", Offset = "0xB6085C")]
		private sealed class <>c__DisplayClass70_0
		{
			[Token(Token = "0x4002CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x6002EC3")]
			[Address(RVA = "0xFD99E4", Offset = "0xFD99E4", VA = "0xFD99E4")]
			public <>c__DisplayClass70_0()
			{
			}

			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0xFD99EC", Offset = "0xFD99EC", VA = "0xFD99EC")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6086C", Offset = "0xB6086C")]
		private sealed class <Coroutine_LocalizeAll>d__85 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000685")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EC8")]
				[Address(RVA = "0xFD9B34", Offset = "0xFD9B34", VA = "0xFD9B34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000686")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ECA")]
				[Address(RVA = "0xFD9B7C", Offset = "0xFD9B7C", VA = "0xFD9B7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0xFD9A18", Offset = "0xFD9A18", VA = "0xFD9A18")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x6002EC6")]
			[Address(RVA = "0xFD9A44", Offset = "0xFD9A44", VA = "0xFD9A44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0xFD9A48", Offset = "0xFD9A48", VA = "0xFD9A48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0xFD9B3C", Offset = "0xFD9B3C", VA = "0xFD9B3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4002C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x4002C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x4002C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4002C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x4002C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4002C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x4002C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4002C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x4002C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x4002C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x4002CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x4002CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x4002CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x4002CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x1700067E")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6002E69")]
			[Address(RVA = "0x10C8F88", Offset = "0x10C8F88", VA = "0x10C8F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0x10C8FF0", Offset = "0x10C8FF0", VA = "0x10C8FF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700067F")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0x10CA72C", Offset = "0x10CA72C", VA = "0x10CA72C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0x10CA794", Offset = "0x10CA794", VA = "0x10CA794")]
			set
			{
			}
		}

		[Token(Token = "0x17000680")]
		public static string CurrentRegion
		{
			[Token(Token = "0x6002E6D")]
			[Address(RVA = "0x10CAAA8", Offset = "0x10CAAA8", VA = "0x10CAAA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0x10CAC28", Offset = "0x10CAC28", VA = "0x10CAC28")]
			set
			{
			}
		}

		[Token(Token = "0x17000681")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0x10CADF4", Offset = "0x10CADF4", VA = "0x10CADF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E70")]
			[Address(RVA = "0x10CAED0", Offset = "0x10CAED0", VA = "0x10CAED0")]
			set
			{
			}
		}

		[Token(Token = "0x17000682")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x6002E71")]
			[Address(RVA = "0x10CAFE8", Offset = "0x10CAFE8", VA = "0x10CAFE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000B1")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6002E9A")]
			[Address(RVA = "0x10C859C", Offset = "0x10C859C", VA = "0x10C859C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8853C", Offset = "0xB8853C")]
			add
			{
			}
			[Token(Token = "0x6002E9B")]
			[Address(RVA = "0x10C8BF8", Offset = "0x10C8BF8", VA = "0x10C8BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB8854C", Offset = "0xB8854C")]
			remove
			{
			}
		}

		[Token(Token = "0x6002E65")]
		[Address(RVA = "0x10C926C", Offset = "0x10C926C", VA = "0x10C926C")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0x10C9BF8", Offset = "0x10C9BF8", VA = "0x10C9BF8")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0x10C9C3C", Offset = "0x10C9C3C", VA = "0x10C9C3C")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6002E68")]
		[Address(RVA = "0x10C9C44", Offset = "0x10C9C44", VA = "0x10C9C44")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0x10CA500", Offset = "0x10CA500", VA = "0x10CA500")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6002E73")]
		[Address(RVA = "0x10CB04C", Offset = "0x10CB04C", VA = "0x10CB04C")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6002E74")]
		[Address(RVA = "0x10CB280", Offset = "0x10CB280", VA = "0x10CB280")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6002E75")]
		[Address(RVA = "0x10CB16C", Offset = "0x10CB16C", VA = "0x10CB16C")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6002E76")]
		[Address(RVA = "0x10C959C", Offset = "0x10C959C", VA = "0x10C959C")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6002E77")]
		[Address(RVA = "0x10CB4BC", Offset = "0x10CB4BC", VA = "0x10CB4BC")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E78")]
		[Address(RVA = "0x10C9E2C", Offset = "0x10C9E2C", VA = "0x10C9E2C")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6002E79")]
		[Address(RVA = "0x10CA2EC", Offset = "0x10CA2EC", VA = "0x10CA2EC")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002E7A")]
		[Address(RVA = "0x10CA884", Offset = "0x10CA884", VA = "0x10CA884")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6002E7B")]
		[Address(RVA = "0x10CB6E4", Offset = "0x10CB6E4", VA = "0x10CB6E4")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002E7C")]
		[Address(RVA = "0x10CB9C8", Offset = "0x10CB9C8", VA = "0x10CB9C8")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002E7D")]
		[Address(RVA = "0x10CBC60", Offset = "0x10CBC60", VA = "0x10CBC60")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0x10CBD84", Offset = "0x10CBD84", VA = "0x10CBD84")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0x10CBEEC", Offset = "0x10CBEEC", VA = "0x10CBEEC")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x6002E80")]
		[Address(RVA = "0x10CB3F8", Offset = "0x10CB3F8", VA = "0x10CB3F8")]
		private static bool TryApplySystemLanguage(string systemLanguage, bool saveChange = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E81")]
		[Address(RVA = "0x10C934C", Offset = "0x10C934C", VA = "0x10C934C")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0x10CBFF4", Offset = "0x10CBFF4", VA = "0x10CBFF4")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0x10CC578", Offset = "0x10CC578", VA = "0x10CC578")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0x10CC674", Offset = "0x10CC674", VA = "0x10CC674")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0x10CC124", Offset = "0x10CC124", VA = "0x10CC124")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002E86")]
		[Address(RVA = "0x10CC90C", Offset = "0x10CC90C", VA = "0x10CC90C")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0x10CCBF0", Offset = "0x10CCBF0", VA = "0x10CCBF0")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0x10CCDD4", Offset = "0x10CCDD4", VA = "0x10CCDD4")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0x10CCE3C", Offset = "0x10CCE3C", VA = "0x10CCE3C")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0x10CD27C", Offset = "0x10CD27C", VA = "0x10CD27C")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0x10CB1F0", Offset = "0x10CB1F0", VA = "0x10CB1F0")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0x10C950C", Offset = "0x10C950C", VA = "0x10C950C")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E8D")]
		[Address(RVA = "0x10CD32C", Offset = "0x10CD32C", VA = "0x10CD32C")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0x10CD658", Offset = "0x10CD658", VA = "0x10CD658")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x6002E8F")]
		[Address(RVA = "0x10CD47C", Offset = "0x10CD47C", VA = "0x10CD47C")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0x10CD89C", Offset = "0x10CD89C", VA = "0x10CD89C")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0x10CDAD8", Offset = "0x10CDAD8", VA = "0x10CDAD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB884DC", Offset = "0xB884DC")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0x10CD810", Offset = "0x10CD810", VA = "0x10CD810")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0x10CDB74", Offset = "0x10CDB74", VA = "0x10CDB74")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0x10CDC04", Offset = "0x10CDC04", VA = "0x10CDC04")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0x10CDE08", Offset = "0x10CDE08", VA = "0x10CDE08")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6002E96")]
		[Address(RVA = "0x10CDF6C", Offset = "0x10CDF6C", VA = "0x10CDF6C")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6002E97")]
		[Address(RVA = "0x10CB330", Offset = "0x10CB330", VA = "0x10CB330")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x6002E98")]
		[Address(RVA = "0x10CE070", Offset = "0x10CE070", VA = "0x10CE070")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x6002E99")]
		[Address(RVA = "0x10CE5D8", Offset = "0x10CE5D8", VA = "0x10CE5D8")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x6002E9C")]
		[Address(RVA = "0x10CE884", Offset = "0x10CE884", VA = "0x10CE884")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6002E9D")]
		[Address(RVA = "0x10CEB74", Offset = "0x10CEB74", VA = "0x10CEB74")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6002E9E")]
		[Address(RVA = "0x10CE944", Offset = "0x10CE944", VA = "0x10CE944")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E9F")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002EA0")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002EA1")]
		[Address(RVA = "0x10CEC1C", Offset = "0x10CEC1C", VA = "0x10CEC1C")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6002EA2")]
		[Address(RVA = "0x10C90DC", Offset = "0x10C90DC", VA = "0x10C90DC")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6002EA3")]
		[Address(RVA = "0x10CF020", Offset = "0x10CF020", VA = "0x10CF020")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB8855C", Offset = "0xB8855C")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6002EA4")]
		[Address(RVA = "0x10CEE88", Offset = "0x10CEE88", VA = "0x10CEE88")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6002EA5")]
		[Address(RVA = "0x10CF9E4", Offset = "0x10CF9E4", VA = "0x10CF9E4")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x6002EA6")]
		[Address(RVA = "0x10CFB38", Offset = "0x10CFB38", VA = "0x10CFB38")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6002EA7")]
		[Address(RVA = "0x10CFDD8", Offset = "0x10CFDD8", VA = "0x10CFDD8")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0x10CC770", Offset = "0x10CC770", VA = "0x10CC770")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x20007E0")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x6002ECB")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x6002ECC")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6002ECD")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x6002ECE")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x6002ECF")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x6002ED0")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x6002ED1")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x6002ED2")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x6002ED3")]
		[Address(RVA = "0x1C5B544", Offset = "0x1C5B544", VA = "0x1C5B544")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20007E1")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x4002CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x6002ED4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED5")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20007E2")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4002CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4002CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x6002ED6")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x6002ED7")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x6002ED8")]
		public abstract Type GetTargetType();

		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0x1C5B54C", Offset = "0x1C5B54C", VA = "0x1C5B54C")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x20007E3")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x6002EDA")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6002EDB")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x6002EDC")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x20007E4")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x6002EDD")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EDE")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6002EDF")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x20007E5")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4002CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4002CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4002CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4002CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002EE0")]
		[Address(RVA = "0x10D3CE0", Offset = "0x10D3CE0", VA = "0x10D3CE0")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x6002EE1")]
		[Address(RVA = "0x10D3CE4", Offset = "0x10D3CE4", VA = "0x10D3CE4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB8865C", Offset = "0xB8865C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002EE2")]
		[Address(RVA = "0x10D3DB4", Offset = "0x10D3DB4", VA = "0x10D3DB4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EE3")]
		[Address(RVA = "0x10D3DBC", Offset = "0x10D3DBC", VA = "0x10D3DBC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EE4")]
		[Address(RVA = "0x10D3DC4", Offset = "0x10D3DC4", VA = "0x10D3DC4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE5")]
		[Address(RVA = "0x10D3DCC", Offset = "0x10D3DCC", VA = "0x10D3DCC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE6")]
		[Address(RVA = "0x10D3DD4", Offset = "0x10D3DD4", VA = "0x10D3DD4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0x10D3DDC", Offset = "0x10D3DDC", VA = "0x10D3DDC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002EE8")]
		[Address(RVA = "0x10D3F14", Offset = "0x10D3F14", VA = "0x10D3F14", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002EE9")]
		[Address(RVA = "0x10D4580", Offset = "0x10D4580", VA = "0x10D4580")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6002EEA")]
		[Address(RVA = "0x10D4820", Offset = "0x10D4820", VA = "0x10D4820")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0x10D447C", Offset = "0x10D447C", VA = "0x10D447C")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6002EEC")]
		[Address(RVA = "0x10D46FC", Offset = "0x10D46FC", VA = "0x10D46FC")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0x10D4A34", Offset = "0x10D4A34", VA = "0x10D4A34")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x20007E6")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x4002CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4002CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4002CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4002CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6002EEE")]
		[Address(RVA = "0x10D4A94", Offset = "0x10D4A94", VA = "0x10D4A94")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0x10D4A98", Offset = "0x10D4A98", VA = "0x10D4A98")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB88670", Offset = "0xB88670")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002EF0")]
		[Address(RVA = "0x10D4B68", Offset = "0x10D4B68", VA = "0x10D4B68", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0x10D4B70", Offset = "0x10D4B70", VA = "0x10D4B70", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0x10D4B78", Offset = "0x10D4B78", VA = "0x10D4B78", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0x10D4B80", Offset = "0x10D4B80", VA = "0x10D4B80", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0x10D4B88", Offset = "0x10D4B88", VA = "0x10D4B88", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0x10D4B90", Offset = "0x10D4B90", VA = "0x10D4B90", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0x10D4CC8", Offset = "0x10D4CC8", VA = "0x10D4CC8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0x10D5230", Offset = "0x10D5230", VA = "0x10D5230")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x20007E7")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0x10D5290", Offset = "0x10D5290", VA = "0x10D5290")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6002EF9")]
		[Address(RVA = "0x10D5294", Offset = "0x10D5294", VA = "0x10D5294")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB88684", Offset = "0xB88684")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002EFA")]
		[Address(RVA = "0x10D5364", Offset = "0x10D5364", VA = "0x10D5364", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0x10D536C", Offset = "0x10D536C", VA = "0x10D536C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002EFC")]
		[Address(RVA = "0x10D5374", Offset = "0x10D5374", VA = "0x10D5374", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EFD")]
		[Address(RVA = "0x10D537C", Offset = "0x10D537C", VA = "0x10D537C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0x10D5384", Offset = "0x10D5384", VA = "0x10D5384", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EFF")]
		[Address(RVA = "0x10D538C", Offset = "0x10D538C", VA = "0x10D538C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002F00")]
		[Address(RVA = "0x10D5480", Offset = "0x10D5480", VA = "0x10D5480", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002F01")]
		[Address(RVA = "0x10D5604", Offset = "0x10D5604", VA = "0x10D5604")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x20007E8")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6002F02")]
		[Address(RVA = "0x10D3C08", Offset = "0x10D3C08", VA = "0x10D3C08", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F03")]
		[Address(RVA = "0x10D3C40", Offset = "0x10D3C40", VA = "0x10D3C40")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x20007E9")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6002F04")]
		[Address(RVA = "0x10D5650", Offset = "0x10D5650", VA = "0x10D5650")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6002F05")]
		[Address(RVA = "0x10D5654", Offset = "0x10D5654", VA = "0x10D5654")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB88698", Offset = "0xB88698")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002F06")]
		[Address(RVA = "0x10D570C", Offset = "0x10D570C", VA = "0x10D570C", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F07")]
		[Address(RVA = "0x10D5744", Offset = "0x10D5744", VA = "0x10D5744", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F08")]
		[Address(RVA = "0x10D574C", Offset = "0x10D574C", VA = "0x10D574C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0x10D5754", Offset = "0x10D5754", VA = "0x10D5754", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0x10D575C", Offset = "0x10D575C", VA = "0x10D575C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0x10D5764", Offset = "0x10D5764", VA = "0x10D5764", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0x10D576C", Offset = "0x10D576C", VA = "0x10D576C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0x10D57BC", Offset = "0x10D57BC", VA = "0x10D57BC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0x10D5910", Offset = "0x10D5910", VA = "0x10D5910")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x20007EA")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6002F0F")]
		[Address(RVA = "0x1CB706C", Offset = "0x1CB706C", VA = "0x1CB706C")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x6002F10")]
		[Address(RVA = "0x1CB7070", Offset = "0x1CB7070", VA = "0x1CB7070")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB886AC", Offset = "0xB886AC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002F11")]
		[Address(RVA = "0x1CB7144", Offset = "0x1CB7144", VA = "0x1CB7144", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F12")]
		[Address(RVA = "0x1CB714C", Offset = "0x1CB714C", VA = "0x1CB714C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F13")]
		[Address(RVA = "0x1CB7154", Offset = "0x1CB7154", VA = "0x1CB7154", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F14")]
		[Address(RVA = "0x1CB715C", Offset = "0x1CB715C", VA = "0x1CB715C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F15")]
		[Address(RVA = "0x1CB7164", Offset = "0x1CB7164", VA = "0x1CB7164", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F16")]
		[Address(RVA = "0x1CB716C", Offset = "0x1CB716C", VA = "0x1CB716C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002F17")]
		[Address(RVA = "0x1CB7390", Offset = "0x1CB7390", VA = "0x1CB7390", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002F18")]
		[Address(RVA = "0x1CB7588", Offset = "0x1CB7588", VA = "0x1CB7588")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x20007EB")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6002F19")]
		[Address(RVA = "0x10D3C8C", Offset = "0x10D3C8C", VA = "0x10D3C8C", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F1A")]
		[Address(RVA = "0x10D3C94", Offset = "0x10D3C94", VA = "0x10D3C94")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x20007EC")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6002F1B")]
		[Address(RVA = "0x1CB75D4", Offset = "0x1CB75D4", VA = "0x1CB75D4")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6002F1C")]
		[Address(RVA = "0x1CB75D8", Offset = "0x1CB75D8", VA = "0x1CB75D8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB886C0", Offset = "0xB886C0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002F1D")]
		[Address(RVA = "0x1CB7698", Offset = "0x1CB7698", VA = "0x1CB7698", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F1E")]
		[Address(RVA = "0x1CB76A0", Offset = "0x1CB76A0", VA = "0x1CB76A0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F1F")]
		[Address(RVA = "0x1CB76A8", Offset = "0x1CB76A8", VA = "0x1CB76A8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F20")]
		[Address(RVA = "0x1CB76B0", Offset = "0x1CB76B0", VA = "0x1CB76B0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F21")]
		[Address(RVA = "0x1CB76B8", Offset = "0x1CB76B8", VA = "0x1CB76B8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F22")]
		[Address(RVA = "0x1CB76C0", Offset = "0x1CB76C0", VA = "0x1CB76C0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F23")]
		[Address(RVA = "0x1CB76C8", Offset = "0x1CB76C8", VA = "0x1CB76C8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002F24")]
		[Address(RVA = "0x1CB7718", Offset = "0x1CB7718", VA = "0x1CB7718", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002F25")]
		[Address(RVA = "0x1CB7948", Offset = "0x1CB7948", VA = "0x1CB7948")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6002F26")]
		[Address(RVA = "0x1CB7B18", Offset = "0x1CB7B18", VA = "0x1CB7B18")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x20007ED")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6002F27")]
		[Address(RVA = "0x1CB7B64", Offset = "0x1CB7B64", VA = "0x1CB7B64")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0x1CB7B68", Offset = "0x1CB7B68", VA = "0x1CB7B68")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB886D4", Offset = "0xB886D4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002F29")]
		[Address(RVA = "0x1CB7C3C", Offset = "0x1CB7C3C", VA = "0x1CB7C3C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F2A")]
		[Address(RVA = "0x1CB7C44", Offset = "0x1CB7C44", VA = "0x1CB7C44", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F2B")]
		[Address(RVA = "0x1CB7C4C", Offset = "0x1CB7C4C", VA = "0x1CB7C4C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F2C")]
		[Address(RVA = "0x1CB7C54", Offset = "0x1CB7C54", VA = "0x1CB7C54", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F2D")]
		[Address(RVA = "0x1CB7C5C", Offset = "0x1CB7C5C", VA = "0x1CB7C5C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F2E")]
		[Address(RVA = "0x1CB7C64", Offset = "0x1CB7C64", VA = "0x1CB7C64", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002F2F")]
		[Address(RVA = "0x1CB7D5C", Offset = "0x1CB7D5C", VA = "0x1CB7D5C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002F30")]
		[Address(RVA = "0x1CB7E64", Offset = "0x1CB7E64", VA = "0x1CB7E64")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x20007EE")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x4002CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x4002CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x4002CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4002CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002F31")]
		[Address(RVA = "0x1CB7EB0", Offset = "0x1CB7EB0", VA = "0x1CB7EB0")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6002F32")]
		[Address(RVA = "0x1CB7EB4", Offset = "0x1CB7EB4", VA = "0x1CB7EB4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB886E8", Offset = "0xB886E8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002F33")]
		[Address(RVA = "0x1CB7F88", Offset = "0x1CB7F88", VA = "0x1CB7F88", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F34")]
		[Address(RVA = "0x1CB7F90", Offset = "0x1CB7F90", VA = "0x1CB7F90", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F35")]
		[Address(RVA = "0x1CB7F98", Offset = "0x1CB7F98", VA = "0x1CB7F98", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F36")]
		[Address(RVA = "0x1CB7FA0", Offset = "0x1CB7FA0", VA = "0x1CB7FA0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F37")]
		[Address(RVA = "0x1CB7FA8", Offset = "0x1CB7FA8", VA = "0x1CB7FA8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F38")]
		[Address(RVA = "0x1CB7FB0", Offset = "0x1CB7FB0", VA = "0x1CB7FB0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0x1CB80E8", Offset = "0x1CB80E8", VA = "0x1CB80E8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002F3A")]
		[Address(RVA = "0x1CB8378", Offset = "0x1CB8378", VA = "0x1CB8378")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x20007EF")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0x1CB83D4", Offset = "0x1CB83D4", VA = "0x1CB83D4")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6002F3C")]
		[Address(RVA = "0x1CB83D8", Offset = "0x1CB83D8", VA = "0x1CB83D8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB886FC", Offset = "0xB886FC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0x1CB84AC", Offset = "0x1CB84AC", VA = "0x1CB84AC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0x1CB84B4", Offset = "0x1CB84B4", VA = "0x1CB84B4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F3F")]
		[Address(RVA = "0x1CB84BC", Offset = "0x1CB84BC", VA = "0x1CB84BC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F40")]
		[Address(RVA = "0x1CB84C4", Offset = "0x1CB84C4", VA = "0x1CB84C4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F41")]
		[Address(RVA = "0x1CB8550", Offset = "0x1CB8550", VA = "0x1CB8550", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F42")]
		[Address(RVA = "0x1CB8558", Offset = "0x1CB8558", VA = "0x1CB8558", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002F43")]
		[Address(RVA = "0x1CB8710", Offset = "0x1CB8710", VA = "0x1CB8710", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0x1CB880C", Offset = "0x1CB880C", VA = "0x1CB880C")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x20007F0")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6002F45")]
		[Address(RVA = "0x1CB8858", Offset = "0x1CB8858", VA = "0x1CB8858")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6002F46")]
		[Address(RVA = "0x1CB885C", Offset = "0x1CB885C", VA = "0x1CB885C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB88710", Offset = "0xB88710")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002F47")]
		[Address(RVA = "0x1CB8930", Offset = "0x1CB8930", VA = "0x1CB8930", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F48")]
		[Address(RVA = "0x1CB8938", Offset = "0x1CB8938", VA = "0x1CB8938", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F49")]
		[Address(RVA = "0x1CB8940", Offset = "0x1CB8940", VA = "0x1CB8940", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4A")]
		[Address(RVA = "0x1CB8948", Offset = "0x1CB8948", VA = "0x1CB8948", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4B")]
		[Address(RVA = "0x1CB8950", Offset = "0x1CB8950", VA = "0x1CB8950", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F4C")]
		[Address(RVA = "0x1CB8958", Offset = "0x1CB8958", VA = "0x1CB8958", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002F4D")]
		[Address(RVA = "0x1CB8A54", Offset = "0x1CB8A54", VA = "0x1CB8A54", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002F4E")]
		[Address(RVA = "0x1CB8B50", Offset = "0x1CB8B50", VA = "0x1CB8B50")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x20007F1")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4002CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4002CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4002CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4002CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002F4F")]
		[Address(RVA = "0x1CB8B9C", Offset = "0x1CB8B9C", VA = "0x1CB8B9C")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6002F50")]
		[Address(RVA = "0x1CB8BA0", Offset = "0x1CB8BA0", VA = "0x1CB8BA0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB88724", Offset = "0xB88724")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002F51")]
		[Address(RVA = "0x1CB8C74", Offset = "0x1CB8C74", VA = "0x1CB8C74", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F52")]
		[Address(RVA = "0x1CB8C7C", Offset = "0x1CB8C7C", VA = "0x1CB8C7C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002F53")]
		[Address(RVA = "0x1CB8C84", Offset = "0x1CB8C84", VA = "0x1CB8C84", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F54")]
		[Address(RVA = "0x1CB8C8C", Offset = "0x1CB8C8C", VA = "0x1CB8C8C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F55")]
		[Address(RVA = "0x1CB8C94", Offset = "0x1CB8C94", VA = "0x1CB8C94", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F56")]
		[Address(RVA = "0x1CB8C9C", Offset = "0x1CB8C9C", VA = "0x1CB8C9C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002F57")]
		[Address(RVA = "0x1CB8DE4", Offset = "0x1CB8DE4", VA = "0x1CB8DE4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002F58")]
		[Address(RVA = "0x1CB90DC", Offset = "0x1CB90DC", VA = "0x1CB90DC")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6002F59")]
		[Address(RVA = "0x1CB919C", Offset = "0x1CB919C", VA = "0x1CB919C")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x20007F2")]
	public enum eTermType
	{
		[Token(Token = "0x4002CC9")]
		Text,
		[Token(Token = "0x4002CCA")]
		Font,
		[Token(Token = "0x4002CCB")]
		Texture,
		[Token(Token = "0x4002CCC")]
		AudioClip,
		[Token(Token = "0x4002CCD")]
		GameObject,
		[Token(Token = "0x4002CCE")]
		Sprite,
		[Token(Token = "0x4002CCF")]
		Material,
		[Token(Token = "0x4002CD0")]
		Child,
		[Token(Token = "0x4002CD1")]
		Mesh,
		[Token(Token = "0x4002CD2")]
		TextMeshPFont,
		[Token(Token = "0x4002CD3")]
		Object
	}
	[Token(Token = "0x20007F3")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4002CD5")]
		Normal = 1,
		[Token(Token = "0x4002CD6")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x20007F4")]
	public class TermData
	{
		[Token(Token = "0x4002CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x4002CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x4002CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x4002CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x4002CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x4002CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6002F5A")]
		[Address(RVA = "0x15D2AC4", Offset = "0x15D2AC4", VA = "0x15D2AC4")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6002F5B")]
		[Address(RVA = "0x15D2BF8", Offset = "0x15D2BF8", VA = "0x15D2BF8")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6002F5C")]
		[Address(RVA = "0x15D2CF0", Offset = "0x15D2CF0", VA = "0x15D2CF0")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6002F5D")]
		[Address(RVA = "0x15D2D50", Offset = "0x15D2D50", VA = "0x15D2D50")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0x15D2F10", Offset = "0x15D2F10", VA = "0x15D2F10")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F5F")]
		[Address(RVA = "0x15D2F50", Offset = "0x15D2F50", VA = "0x15D2F50")]
		public void Validate()
		{
		}

		[Token(Token = "0x6002F60")]
		[Address(RVA = "0x15D3164", Offset = "0x15D3164", VA = "0x15D3164")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F61")]
		[Address(RVA = "0x15D31F8", Offset = "0x15D31F8", VA = "0x15D31F8")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F62")]
		[Address(RVA = "0x15D32CC", Offset = "0x15D32CC", VA = "0x15D32CC")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6002F63")]
		[Address(RVA = "0x15D33CC", Offset = "0x15D33CC", VA = "0x15D33CC")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x20007F5")]
	public class TermsPopup : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x4002CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78970", Offset = "0xB78970")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x17000687")]
		public string Filter
		{
			[Token(Token = "0x6002F65")]
			[Address(RVA = "0x15D34C4", Offset = "0x15D34C4", VA = "0x15D34C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88738", Offset = "0xB88738")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002F66")]
			[Address(RVA = "0x15D34CC", Offset = "0x15D34CC", VA = "0x15D34CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88748", Offset = "0xB88748")]
			private set
			{
			}
		}

		[Token(Token = "0x6002F64")]
		[Address(RVA = "0x15D3490", Offset = "0x15D3490", VA = "0x15D3490")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x20007F6")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6002F67")]
		[Address(RVA = "0x144E3AC", Offset = "0x144E3AC", VA = "0x144E3AC")]
		public void Start()
		{
		}

		[Token(Token = "0x6002F68")]
		[Address(RVA = "0x144E40C", Offset = "0x144E40C", VA = "0x144E40C")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x20007F7")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x4002CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x17000688")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6002F69")]
			[Address(RVA = "0x11AA9B4", Offset = "0x11AA9B4", VA = "0x11AA9B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F6A")]
		[Address(RVA = "0x11AAB14", Offset = "0x11AAB14", VA = "0x11AAB14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002F6B")]
		[Address(RVA = "0x11AABA4", Offset = "0x11AABA4", VA = "0x11AABA4")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6002F6C")]
		[Address(RVA = "0x11AABD4", Offset = "0x11AABD4", VA = "0x11AABD4")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x20007F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB6087C", Offset = "0xB6087C")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x4002CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6002F6D")]
		[Address(RVA = "0x108BAB0", Offset = "0x108BAB0", VA = "0x108BAB0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002F6E")]
		[Address(RVA = "0x108BB88", Offset = "0x108BB88", VA = "0x108BB88")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002F6F")]
		[Address(RVA = "0x108BC30", Offset = "0x108BC30", VA = "0x108BC30")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002F70")]
		[Address(RVA = "0x108BC4C", Offset = "0x108BC4C", VA = "0x108BC4C")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x20007FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB608B4", Offset = "0xB608B4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x6002F74")]
			[Address(RVA = "0xFD3BB4", Offset = "0xFD3BB4", VA = "0xFD3BB4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F75")]
			[Address(RVA = "0xFD3BBC", Offset = "0xFD3BBC", VA = "0xFD3BBC")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0x1C58C54", Offset = "0x1C58C54", VA = "0x1C58C54")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6002F72")]
		[Address(RVA = "0x1C590F0", Offset = "0x1C590F0", VA = "0x1C590F0")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x20007FB")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x20007FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB608D4", Offset = "0xB608D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x6002F86")]
			[Address(RVA = "0xFD3C2C", Offset = "0xFD3C2C", VA = "0xFD3C2C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002F87")]
			[Address(RVA = "0xFD3C34", Offset = "0xFD3C34", VA = "0xFD3C34")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002CE2")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x4002CE3")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x4002CE4")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6002F76")]
		[Address(RVA = "0x1C59F88", Offset = "0x1C59F88", VA = "0x1C59F88")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6002F77")]
		[Address(RVA = "0x1C5A05C", Offset = "0x1C5A05C", VA = "0x1C5A05C")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002F78")]
		[Address(RVA = "0x1C5A2A0", Offset = "0x1C5A2A0", VA = "0x1C5A2A0")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0x1C5A360", Offset = "0x1C5A360", VA = "0x1C5A360")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0x1C5A64C", Offset = "0x1C5A64C", VA = "0x1C5A64C")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7B")]
		[Address(RVA = "0x1C5A2CC", Offset = "0x1C5A2CC", VA = "0x1C5A2CC")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0x1C5A7D4", Offset = "0x1C5A7D4", VA = "0x1C5A7D4")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7D")]
		[Address(RVA = "0x1C5AA74", Offset = "0x1C5AA74", VA = "0x1C5AA74")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7E")]
		[Address(RVA = "0x1C5AA7C", Offset = "0x1C5AA7C", VA = "0x1C5AA7C")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6002F7F")]
		[Address(RVA = "0x1C5AB58", Offset = "0x1C5AB58", VA = "0x1C5AB58")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002F80")]
		[Address(RVA = "0x1C5ABC4", Offset = "0x1C5ABC4", VA = "0x1C5ABC4")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002F81")]
		[Address(RVA = "0x1C5AD0C", Offset = "0x1C5AD0C", VA = "0x1C5AD0C")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002F82")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x6002F83")]
		[Address(RVA = "0x1C5AE3C", Offset = "0x1C5AE3C", VA = "0x1C5AE3C")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6002F84")]
		[Address(RVA = "0x1C5AEEC", Offset = "0x1C5AEEC", VA = "0x1C5AEEC")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x20007FD")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6002F88")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x20007FE")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x20007FF")]
		public struct ParamValue
		{
			[Token(Token = "0x4002CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4002CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x4002CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x4002CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x6002F89")]
		[Address(RVA = "0x10D07D4", Offset = "0x10D07D4", VA = "0x10D07D4", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6002F8A")]
		[Address(RVA = "0x10D08C8", Offset = "0x10D08C8", VA = "0x10D08C8")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6002F8B")]
		[Address(RVA = "0x10D0A70", Offset = "0x10D0A70", VA = "0x10D0A70")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002F8C")]
		[Address(RVA = "0x10D0B24", Offset = "0x10D0B24", VA = "0x10D0B24", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002F8D")]
		[Address(RVA = "0x10D0B34", Offset = "0x10D0B34", VA = "0x10D0B34")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6002F8E")]
		[Address(RVA = "0x10D0C20", Offset = "0x10D0C20", VA = "0x10D0C20")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0x10D0CAC", Offset = "0x10D0CAC", VA = "0x10D0CAC")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000800")]
	public struct LocalizedString
	{
		[Token(Token = "0x4002CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4002CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4002CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4002CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4002CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6002F90")]
		[Address(RVA = "0x1CB9398", Offset = "0x1CB9398", VA = "0x1CB9398")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6002F91")]
		[Address(RVA = "0x1CB9468", Offset = "0x1CB9468", VA = "0x1CB9468")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6002F92")]
		[Address(RVA = "0x1CB94AC", Offset = "0x1CB94AC", VA = "0x1CB94AC")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x6002F93")]
		[Address(RVA = "0x1CB939C", Offset = "0x1CB939C", VA = "0x1CB939C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000801")]
	public class RTLFixer
	{
		[Token(Token = "0x6002F94")]
		[Address(RVA = "0x1000128", Offset = "0x1000128", VA = "0x1000128")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x6002F95")]
		[Address(RVA = "0x10003E8", Offset = "0x10003E8", VA = "0x10003E8")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x6002F96")]
		[Address(RVA = "0x1000134", Offset = "0x1000134", VA = "0x1000134")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x6002F97")]
		[Address(RVA = "0x10013C8", Offset = "0x10013C8", VA = "0x10013C8")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x2000802")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x4002CF1")]
		Hamza = 65152,
		[Token(Token = "0x4002CF2")]
		Alef = 65165,
		[Token(Token = "0x4002CF3")]
		AlefHamza = 65155,
		[Token(Token = "0x4002CF4")]
		WawHamza = 65157,
		[Token(Token = "0x4002CF5")]
		AlefMaksoor = 65159,
		[Token(Token = "0x4002CF6")]
		AlefMaksora = 64508,
		[Token(Token = "0x4002CF7")]
		HamzaNabera = 65161,
		[Token(Token = "0x4002CF8")]
		Ba = 65167,
		[Token(Token = "0x4002CF9")]
		Ta = 65173,
		[Token(Token = "0x4002CFA")]
		Tha2 = 65177,
		[Token(Token = "0x4002CFB")]
		Jeem = 65181,
		[Token(Token = "0x4002CFC")]
		H7aa = 65185,
		[Token(Token = "0x4002CFD")]
		Khaa2 = 65189,
		[Token(Token = "0x4002CFE")]
		Dal = 65193,
		[Token(Token = "0x4002CFF")]
		Thal = 65195,
		[Token(Token = "0x4002D00")]
		Ra2 = 65197,
		[Token(Token = "0x4002D01")]
		Zeen = 65199,
		[Token(Token = "0x4002D02")]
		Seen = 65201,
		[Token(Token = "0x4002D03")]
		Sheen = 65205,
		[Token(Token = "0x4002D04")]
		S9a = 65209,
		[Token(Token = "0x4002D05")]
		Dha = 65213,
		[Token(Token = "0x4002D06")]
		T6a = 65217,
		[Token(Token = "0x4002D07")]
		T6ha = 65221,
		[Token(Token = "0x4002D08")]
		Ain = 65225,
		[Token(Token = "0x4002D09")]
		Gain = 65229,
		[Token(Token = "0x4002D0A")]
		Fa = 65233,
		[Token(Token = "0x4002D0B")]
		Gaf = 65237,
		[Token(Token = "0x4002D0C")]
		Kaf = 65241,
		[Token(Token = "0x4002D0D")]
		Lam = 65245,
		[Token(Token = "0x4002D0E")]
		Meem = 65249,
		[Token(Token = "0x4002D0F")]
		Noon = 65253,
		[Token(Token = "0x4002D10")]
		Ha = 65257,
		[Token(Token = "0x4002D11")]
		Waw = 65261,
		[Token(Token = "0x4002D12")]
		Ya = 65265,
		[Token(Token = "0x4002D13")]
		AlefMad = 65153,
		[Token(Token = "0x4002D14")]
		TaMarboota = 65171,
		[Token(Token = "0x4002D15")]
		PersianPe = 64342,
		[Token(Token = "0x4002D16")]
		PersianChe = 64378,
		[Token(Token = "0x4002D17")]
		PersianZe = 64394,
		[Token(Token = "0x4002D18")]
		PersianGaf = 64402,
		[Token(Token = "0x4002D19")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x2000803")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x4002D1B")]
		Hamza = 1569,
		[Token(Token = "0x4002D1C")]
		Alef = 1575,
		[Token(Token = "0x4002D1D")]
		AlefHamza = 1571,
		[Token(Token = "0x4002D1E")]
		WawHamza = 1572,
		[Token(Token = "0x4002D1F")]
		AlefMaksoor = 1573,
		[Token(Token = "0x4002D20")]
		AlefMagsora = 1609,
		[Token(Token = "0x4002D21")]
		HamzaNabera = 1574,
		[Token(Token = "0x4002D22")]
		Ba = 1576,
		[Token(Token = "0x4002D23")]
		Ta = 1578,
		[Token(Token = "0x4002D24")]
		Tha2 = 1579,
		[Token(Token = "0x4002D25")]
		Jeem = 1580,
		[Token(Token = "0x4002D26")]
		H7aa = 1581,
		[Token(Token = "0x4002D27")]
		Khaa2 = 1582,
		[Token(Token = "0x4002D28")]
		Dal = 1583,
		[Token(Token = "0x4002D29")]
		Thal = 1584,
		[Token(Token = "0x4002D2A")]
		Ra2 = 1585,
		[Token(Token = "0x4002D2B")]
		Zeen = 1586,
		[Token(Token = "0x4002D2C")]
		Seen = 1587,
		[Token(Token = "0x4002D2D")]
		Sheen = 1588,
		[Token(Token = "0x4002D2E")]
		S9a = 1589,
		[Token(Token = "0x4002D2F")]
		Dha = 1590,
		[Token(Token = "0x4002D30")]
		T6a = 1591,
		[Token(Token = "0x4002D31")]
		T6ha = 1592,
		[Token(Token = "0x4002D32")]
		Ain = 1593,
		[Token(Token = "0x4002D33")]
		Gain = 1594,
		[Token(Token = "0x4002D34")]
		Fa = 1601,
		[Token(Token = "0x4002D35")]
		Gaf = 1602,
		[Token(Token = "0x4002D36")]
		Kaf = 1603,
		[Token(Token = "0x4002D37")]
		Lam = 1604,
		[Token(Token = "0x4002D38")]
		Meem = 1605,
		[Token(Token = "0x4002D39")]
		Noon = 1606,
		[Token(Token = "0x4002D3A")]
		Ha = 1607,
		[Token(Token = "0x4002D3B")]
		Waw = 1608,
		[Token(Token = "0x4002D3C")]
		Ya = 1610,
		[Token(Token = "0x4002D3D")]
		AlefMad = 1570,
		[Token(Token = "0x4002D3E")]
		TaMarboota = 1577,
		[Token(Token = "0x4002D3F")]
		PersianPe = 1662,
		[Token(Token = "0x4002D40")]
		PersianChe = 1670,
		[Token(Token = "0x4002D41")]
		PersianZe = 1688,
		[Token(Token = "0x4002D42")]
		PersianGaf = 1711,
		[Token(Token = "0x4002D43")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x2000804")]
	internal class ArabicMapping
	{
		[Token(Token = "0x4002D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x4002D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x6002F98")]
		[Address(RVA = "0xFA7B8C", Offset = "0xFA7B8C", VA = "0xFA7B8C")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x2000805")]
	internal class ArabicTable
	{
		[Token(Token = "0x4002D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x4002D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x17000689")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0xFA86DC", Offset = "0xFA86DC", VA = "0xFA86DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F99")]
		[Address(RVA = "0xFA7BC4", Offset = "0xFA7BC4", VA = "0xFA7BC4")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6002F9B")]
		[Address(RVA = "0xFA875C", Offset = "0xFA875C", VA = "0xFA875C")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000806")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4002D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x4002D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x6002F9C")]
		[Address(RVA = "0x1177524", Offset = "0x1177524", VA = "0x1177524")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x2000807")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4002D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4002D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0x10013D0", Offset = "0x10013D0", VA = "0x10013D0")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0x1001984", Offset = "0x1001984", VA = "0x1001984")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0x100063C", Offset = "0x100063C", VA = "0x100063C")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6002FA0")]
		[Address(RVA = "0x1001BD8", Offset = "0x1001BD8", VA = "0x1001BD8")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0x100222C", Offset = "0x100222C", VA = "0x100222C")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA2")]
		[Address(RVA = "0x10020CC", Offset = "0x10020CC", VA = "0x10020CC")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0x1001D50", Offset = "0x1001D50", VA = "0x1001D50")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0x1002564", Offset = "0x1002564", VA = "0x1002564")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x2000808")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6002FA6")]
		[Address(RVA = "0x1009770", Offset = "0x1009770", VA = "0x1009770", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002FA7")]
		[Address(RVA = "0x1009860", Offset = "0x1009860", VA = "0x1009860", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002FA8")]
		[Address(RVA = "0x10098EC", Offset = "0x10098EC", VA = "0x10098EC", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0x10098F4", Offset = "0x10098F4", VA = "0x10098F4")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x2000809")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6002FAA")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x200080A")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4002D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4002D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4002D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4002D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x1700068A")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6002FAB")]
			[Address(RVA = "0x13BDEC8", Offset = "0x13BDEC8", VA = "0x13BDEC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FAC")]
		[Address(RVA = "0x13BE2CC", Offset = "0x13BE2CC", VA = "0x13BE2CC")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002FAD")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002FAE")]
		[Address(RVA = "0x13BE3A0", Offset = "0x13BE3A0", VA = "0x13BE3A0")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6002FAF")]
		[Address(RVA = "0x13BE4DC", Offset = "0x13BE4DC", VA = "0x13BE4DC")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FB0")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002FB1")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002FB2")]
		[Address(RVA = "0x13BE338", Offset = "0x13BE338", VA = "0x13BE338")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x6002FB3")]
		[Address(RVA = "0x13BE548", Offset = "0x13BE548", VA = "0x13BE548")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x200080B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB608E4", Offset = "0xB608E4")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x4002D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x6002FB4")]
		[Address(RVA = "0xEFFACC", Offset = "0xEFFACC", VA = "0xEFFACC")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0xEFFAD0", Offset = "0xEFFAD0", VA = "0xEFFAD0")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x6002FB6")]
		[Address(RVA = "0xEFFB88", Offset = "0xEFFB88", VA = "0xEFFB88")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x200080C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xB6091C", Offset = "0xB6091C")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6002FB7")]
		[Address(RVA = "0xEFFB90", Offset = "0xEFFB90", VA = "0xEFFB90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002FB8")]
		[Address(RVA = "0xEFFE24", Offset = "0xEFFE24", VA = "0xEFFE24")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x6002FB9")]
		[Address(RVA = "0xEFFF34", Offset = "0xEFFF34", VA = "0xEFFF34")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x200080D")]
	public class StringObfucator
	{
		[Token(Token = "0x4002D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6002FBA")]
		[Address(RVA = "0x1169BE8", Offset = "0x1169BE8", VA = "0x1169BE8")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0x1169F1C", Offset = "0x1169F1C", VA = "0x1169F1C")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6002FBC")]
		[Address(RVA = "0x1169E8C", Offset = "0x1169E8C", VA = "0x1169E8C")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0x116A000", Offset = "0x116A000", VA = "0x116A000")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0x1169CCC", Offset = "0x1169CCC", VA = "0x1169CCC")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0x116A098", Offset = "0x116A098", VA = "0x116A098")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x200080E")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4002D53")]
		Array = 1,
		[Token(Token = "0x4002D54")]
		Class,
		[Token(Token = "0x4002D55")]
		Value,
		[Token(Token = "0x4002D56")]
		IntValue,
		[Token(Token = "0x4002D57")]
		DoubleValue,
		[Token(Token = "0x4002D58")]
		BoolValue,
		[Token(Token = "0x4002D59")]
		FloatValue
	}
	[Token(Token = "0x200080F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB60954", Offset = "0xB60954")]
	public class JSONNode
	{
		[Token(Token = "0x2000810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6098C", Offset = "0xB6098C")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000697")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002FF5")]
				[Address(RVA = "0xFD6804", Offset = "0xFD6804", VA = "0xFD6804", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000698")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002FF7")]
				[Address(RVA = "0xFD684C", Offset = "0xFD684C", VA = "0xFD684C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FF2")]
			[Address(RVA = "0xFD67B0", Offset = "0xFD67B0", VA = "0xFD67B0")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002FF3")]
			[Address(RVA = "0xFD67E8", Offset = "0xFD67E8", VA = "0xFD67E8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FF4")]
			[Address(RVA = "0xFD67EC", Offset = "0xFD67EC", VA = "0xFD67EC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FF6")]
			[Address(RVA = "0xFD680C", Offset = "0xFD680C", VA = "0xFD680C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002FF8")]
			[Address(RVA = "0xFD6854", Offset = "0xFD6854", VA = "0xFD6854", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002FF9")]
			[Address(RVA = "0xFD68E8", Offset = "0xFD68E8", VA = "0xFD68E8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000811")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB6099C", Offset = "0xB6099C")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000699")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002FFF")]
				[Address(RVA = "0xFD6F98", Offset = "0xFD6F98", VA = "0xFD6F98", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700069A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003001")]
				[Address(RVA = "0xFD6FE0", Offset = "0xFD6FE0", VA = "0xFD6FE0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002FFA")]
			[Address(RVA = "0xFD68EC", Offset = "0xFD68EC", VA = "0xFD68EC")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002FFB")]
			[Address(RVA = "0xFD6924", Offset = "0xFD6924", VA = "0xFD6924", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002FFC")]
			[Address(RVA = "0xFD6B2C", Offset = "0xFD6B2C", VA = "0xFD6B2C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002FFD")]
			[Address(RVA = "0xFD6A70", Offset = "0xFD6A70", VA = "0xFD6A70")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002FFE")]
			[Address(RVA = "0xFD69B4", Offset = "0xFD69B4", VA = "0xFD69B4")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6003000")]
			[Address(RVA = "0xFD6FA0", Offset = "0xFD6FA0", VA = "0xFD6FA0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003002")]
			[Address(RVA = "0xFD6FE8", Offset = "0xFD6FE8", VA = "0xFD6FE8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6003003")]
			[Address(RVA = "0xFD7098", Offset = "0xFD7098", VA = "0xFD7098", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x1700068B")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6002FC2")]
			[Address(RVA = "0x1015584", Offset = "0x1015584", VA = "0x1015584", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FC3")]
			[Address(RVA = "0x101558C", Offset = "0x101558C", VA = "0x101558C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700068C")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6002FC4")]
			[Address(RVA = "0x1015590", Offset = "0x1015590", VA = "0x1015590", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FC5")]
			[Address(RVA = "0x1015598", Offset = "0x1015598", VA = "0x1015598", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700068D")]
		public virtual string Value
		{
			[Token(Token = "0x6002FC6")]
			[Address(RVA = "0x101559C", Offset = "0x101559C", VA = "0x101559C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002FC7")]
			[Address(RVA = "0x10155E0", Offset = "0x10155E0", VA = "0x10155E0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700068E")]
		public virtual int Count
		{
			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0x10155E4", Offset = "0x10155E4", VA = "0x10155E4", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700068F")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6002FCD")]
			[Address(RVA = "0x1015668", Offset = "0x1015668", VA = "0x1015668", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88768", Offset = "0xB88768")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000690")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6002FCE")]
			[Address(RVA = "0x10156C4", Offset = "0x10156C4", VA = "0x10156C4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB887C8", Offset = "0xB887C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000691")]
		public virtual int AsInt
		{
			[Token(Token = "0x6002FD1")]
			[Address(RVA = "0x10157C4", Offset = "0x10157C4", VA = "0x10157C4", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0x1015804", Offset = "0x1015804", VA = "0x1015804", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000692")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6002FD3")]
			[Address(RVA = "0x1015844", Offset = "0x1015844", VA = "0x1015844", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002FD4")]
			[Address(RVA = "0x1015888", Offset = "0x1015888", VA = "0x1015888", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000693")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6002FD5")]
			[Address(RVA = "0x10158C8", Offset = "0x10158C8", VA = "0x10158C8", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002FD6")]
			[Address(RVA = "0x1015968", Offset = "0x1015968", VA = "0x1015968", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000694")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6002FD7")]
			[Address(RVA = "0x10159A8", Offset = "0x10159A8", VA = "0x10159A8", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002FD8")]
			[Address(RVA = "0x1015A6C", Offset = "0x1015A6C", VA = "0x1015A6C", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000695")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6002FD9")]
			[Address(RVA = "0x1015AF0", Offset = "0x1015AF0", VA = "0x1015AF0", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000696")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6002FDA")]
			[Address(RVA = "0x1015B6C", Offset = "0x1015B6C", VA = "0x1015B6C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0x1015580", Offset = "0x1015580", VA = "0x1015580", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002FC9")]
		[Address(RVA = "0x10155EC", Offset = "0x10155EC", VA = "0x10155EC", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002FCA")]
		[Address(RVA = "0x1015650", Offset = "0x1015650", VA = "0x1015650", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6002FCB")]
		[Address(RVA = "0x1015658", Offset = "0x1015658", VA = "0x1015658", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002FCC")]
		[Address(RVA = "0x1015660", Offset = "0x1015660", VA = "0x1015660", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002FCF")]
		[Address(RVA = "0x101573C", Offset = "0x101573C", VA = "0x101573C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002FD0")]
		[Address(RVA = "0x1015780", Offset = "0x1015780", VA = "0x1015780", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0x1015BE8", Offset = "0x1015BE8", VA = "0x1015BE8")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0x1015C54", Offset = "0x1015C54", VA = "0x1015C54")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0x1015CA0", Offset = "0x1015CA0", VA = "0x1015CA0")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FDE")]
		[Address(RVA = "0x1015D34", Offset = "0x1015D34", VA = "0x1015D34")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0x1015D50", Offset = "0x1015D50", VA = "0x1015D50", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FE0")]
		[Address(RVA = "0x1015018", Offset = "0x1015018", VA = "0x1015018", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0x1013E44", Offset = "0x1013E44", VA = "0x1013E44")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0x1011E58", Offset = "0x1011E58", VA = "0x1011E58")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0x1015D5C", Offset = "0x1015D5C", VA = "0x1015D5C", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002FE4")]
		[Address(RVA = "0x1015D60", Offset = "0x1015D60", VA = "0x1015D60")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6002FE5")]
		[Address(RVA = "0x1015DDC", Offset = "0x1015DDC", VA = "0x1015DDC")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6002FE6")]
		[Address(RVA = "0x1015E30", Offset = "0x1015E30", VA = "0x1015E30")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6002FE7")]
		[Address(RVA = "0x1015E84", Offset = "0x1015E84", VA = "0x1015E84")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0x1015ED8", Offset = "0x1015ED8", VA = "0x1015ED8")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0x1016068", Offset = "0x1016068", VA = "0x1016068")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6002FEA")]
		[Address(RVA = "0x101623C", Offset = "0x101623C", VA = "0x101623C")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0x1016610", Offset = "0x1016610", VA = "0x1016610")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0x1016664", Offset = "0x1016664", VA = "0x1016664")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6002FED")]
		[Address(RVA = "0x10166B8", Offset = "0x10166B8", VA = "0x10166B8")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0x101670C", Offset = "0x101670C", VA = "0x101670C")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0x101686C", Offset = "0x101686C", VA = "0x101686C")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6002FF0")]
		[Address(RVA = "0x10169AC", Offset = "0x10169AC", VA = "0x10169AC")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6002FF1")]
		[Address(RVA = "0x1013068", Offset = "0x1013068", VA = "0x1013068")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x2000812")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB609AC", Offset = "0xB609AC")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000813")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB609E4", Offset = "0xB609E4")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700069F")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003016")]
				[Address(RVA = "0xFD6058", Offset = "0xFD6058", VA = "0xFD6058", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003018")]
				[Address(RVA = "0xFD60A0", Offset = "0xFD60A0", VA = "0xFD60A0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003012")]
			[Address(RVA = "0xFD5E24", Offset = "0xFD5E24", VA = "0xFD5E24")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6003013")]
			[Address(RVA = "0xFD5E5C", Offset = "0xFD5E5C", VA = "0xFD5E5C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003014")]
			[Address(RVA = "0xFD5ECC", Offset = "0xFD5ECC", VA = "0xFD5ECC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003015")]
			[Address(RVA = "0xFD5E78", Offset = "0xFD5E78", VA = "0xFD5E78")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003017")]
			[Address(RVA = "0xFD6060", Offset = "0xFD6060", VA = "0xFD6060", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6003019")]
			[Address(RVA = "0xFD60A8", Offset = "0xFD60A8", VA = "0xFD60A8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600301A")]
			[Address(RVA = "0xFD6158", Offset = "0xFD6158", VA = "0xFD6158", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB609F4", Offset = "0xB609F4")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170006A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600301F")]
				[Address(RVA = "0xFD5DD4", Offset = "0xFD5DD4", VA = "0xFD5DD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003021")]
				[Address(RVA = "0xFD5E1C", Offset = "0xFD5E1C", VA = "0xFD5E1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600301B")]
			[Address(RVA = "0xFD5BAC", Offset = "0xFD5BAC", VA = "0xFD5BAC")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600301C")]
			[Address(RVA = "0xFD5BD8", Offset = "0xFD5BD8", VA = "0xFD5BD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600301D")]
			[Address(RVA = "0xFD5C48", Offset = "0xFD5C48", VA = "0xFD5C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600301E")]
			[Address(RVA = "0xFD5BF4", Offset = "0xFD5BF4", VA = "0xFD5BF4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003020")]
			[Address(RVA = "0xFD5DDC", Offset = "0xFD5DDC", VA = "0xFD5DDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x1700069B")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003004")]
			[Address(RVA = "0x1012588", Offset = "0x1012588", VA = "0x1012588", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003005")]
			[Address(RVA = "0x1012684", Offset = "0x1012684", VA = "0x1012684", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700069C")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003006")]
			[Address(RVA = "0x101273C", Offset = "0x101273C", VA = "0x101273C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003007")]
			[Address(RVA = "0x1012798", Offset = "0x1012798", VA = "0x1012798", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700069D")]
		public override int Count
		{
			[Token(Token = "0x6003008")]
			[Address(RVA = "0x10127FC", Offset = "0x10127FC", VA = "0x10127FC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700069E")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x600300C")]
			[Address(RVA = "0x10129D8", Offset = "0x10129D8", VA = "0x10129D8", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88908", Offset = "0xB88908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003009")]
		[Address(RVA = "0x1012848", Offset = "0x1012848", VA = "0x1012848", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600300A")]
		[Address(RVA = "0x10128AC", Offset = "0x10128AC", VA = "0x10128AC", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600300B")]
		[Address(RVA = "0x101296C", Offset = "0x101296C", VA = "0x101296C", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600300D")]
		[Address(RVA = "0x1012A50", Offset = "0x1012A50", VA = "0x1012A50", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88968", Offset = "0xB88968")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600300E")]
		[Address(RVA = "0x1012AC8", Offset = "0x1012AC8", VA = "0x1012AC8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600300F")]
		[Address(RVA = "0x1012CA4", Offset = "0x1012CA4", VA = "0x1012CA4", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6003010")]
		[Address(RVA = "0x1012EFC", Offset = "0x1012EFC", VA = "0x1012EFC", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6003011")]
		[Address(RVA = "0x1012FE4", Offset = "0x1012FE4", VA = "0x1012FE4")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000815")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB60A04", Offset = "0xB60A04")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000816")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60A3C", Offset = "0xB60A3C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6003031")]
			[Address(RVA = "0xFD615C", Offset = "0xFD615C", VA = "0xFD615C")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6003032")]
			[Address(RVA = "0xFD6164", Offset = "0xFD6164", VA = "0xFD6164")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000817")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60A4C", Offset = "0xB60A4C")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170006A7")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6003037")]
				[Address(RVA = "0xFD66AC", Offset = "0xFD66AC", VA = "0xFD66AC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003039")]
				[Address(RVA = "0xFD66F4", Offset = "0xFD66F4", VA = "0xFD66F4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003033")]
			[Address(RVA = "0xFD6464", Offset = "0xFD6464", VA = "0xFD6464")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6003034")]
			[Address(RVA = "0xFD649C", Offset = "0xFD649C", VA = "0xFD649C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003035")]
			[Address(RVA = "0xFD650C", Offset = "0xFD650C", VA = "0xFD650C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003036")]
			[Address(RVA = "0xFD64B8", Offset = "0xFD64B8", VA = "0xFD64B8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003038")]
			[Address(RVA = "0xFD66B4", Offset = "0xFD66B4", VA = "0xFD66B4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600303A")]
			[Address(RVA = "0xFD66FC", Offset = "0xFD66FC", VA = "0xFD66FC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600303B")]
			[Address(RVA = "0xFD67AC", Offset = "0xFD67AC", VA = "0xFD67AC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60A5C", Offset = "0xB60A5C")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170006A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003040")]
				[Address(RVA = "0xFD6414", Offset = "0xFD6414", VA = "0xFD6414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6003042")]
				[Address(RVA = "0xFD645C", Offset = "0xFD645C", VA = "0xFD645C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600303C")]
			[Address(RVA = "0xFD61B8", Offset = "0xFD61B8", VA = "0xFD61B8")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600303D")]
			[Address(RVA = "0xFD61E4", Offset = "0xFD61E4", VA = "0xFD61E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600303E")]
			[Address(RVA = "0xFD6254", Offset = "0xFD6254", VA = "0xFD6254", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600303F")]
			[Address(RVA = "0xFD6200", Offset = "0xFD6200", VA = "0xFD6200")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6003041")]
			[Address(RVA = "0xFD641C", Offset = "0xFD641C", VA = "0xFD641C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x170006A3")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003022")]
			[Address(RVA = "0x1013070", Offset = "0x1013070", VA = "0x1013070", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003023")]
			[Address(RVA = "0x1013190", Offset = "0x1013190", VA = "0x1013190", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170006A4")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003024")]
			[Address(RVA = "0x1013260", Offset = "0x1013260", VA = "0x1013260", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003025")]
			[Address(RVA = "0x101330C", Offset = "0x101330C", VA = "0x101330C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170006A5")]
		public override int Count
		{
			[Token(Token = "0x6003026")]
			[Address(RVA = "0x10133EC", Offset = "0x10133EC", VA = "0x10133EC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006A6")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x600302B")]
			[Address(RVA = "0x1013928", Offset = "0x1013928", VA = "0x1013928", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88A88", Offset = "0xB88A88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003027")]
		[Address(RVA = "0x1013440", Offset = "0x1013440", VA = "0x1013440", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6003028")]
		[Address(RVA = "0x101358C", Offset = "0x101358C", VA = "0x101358C", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6003029")]
		[Address(RVA = "0x101365C", Offset = "0x101365C", VA = "0x101365C", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600302A")]
		[Address(RVA = "0x1013744", Offset = "0x1013744", VA = "0x1013744", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600302C")]
		[Address(RVA = "0x10139A0", Offset = "0x10139A0", VA = "0x10139A0", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88AE8", Offset = "0xB88AE8")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600302D")]
		[Address(RVA = "0x1013A18", Offset = "0x1013A18", VA = "0x1013A18", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600302E")]
		[Address(RVA = "0x1014010", Offset = "0x1014010", VA = "0x1014010", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x600302F")]
		[Address(RVA = "0x10144AC", Offset = "0x10144AC", VA = "0x10144AC", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6003030")]
		[Address(RVA = "0x10146A8", Offset = "0x10146A8", VA = "0x10146A8")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000819")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4002D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170006AB")]
		public override string Value
		{
			[Token(Token = "0x6003043")]
			[Address(RVA = "0x10147A8", Offset = "0x10147A8", VA = "0x10147A8", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003044")]
			[Address(RVA = "0x10147B0", Offset = "0x10147B0", VA = "0x10147B0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6003045")]
		[Address(RVA = "0x10147B8", Offset = "0x10147B8", VA = "0x10147B8")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6003046")]
		[Address(RVA = "0x10147EC", Offset = "0x10147EC", VA = "0x10147EC")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6003047")]
		[Address(RVA = "0x1014830", Offset = "0x1014830", VA = "0x1014830")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6003048")]
		[Address(RVA = "0x1014874", Offset = "0x1014874", VA = "0x1014874")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6003049")]
		[Address(RVA = "0x10148B0", Offset = "0x10148B0", VA = "0x10148B0")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x600304A")]
		[Address(RVA = "0x10148EC", Offset = "0x10148EC", VA = "0x10148EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600304B")]
		[Address(RVA = "0x1014948", Offset = "0x1014948", VA = "0x1014948", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x600304C")]
		[Address(RVA = "0x10149A4", Offset = "0x10149A4", VA = "0x10149A4", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x200081A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB60A6C", Offset = "0xB60A6C")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4002D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4002D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170006AC")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003050")]
			[Address(RVA = "0x1014CE0", Offset = "0x1014CE0", VA = "0x1014CE0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003051")]
			[Address(RVA = "0x1014D3C", Offset = "0x1014D3C", VA = "0x1014D3C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170006AD")]
		public override JSONNode Item
		{
			[Token(Token = "0x6003052")]
			[Address(RVA = "0x1014DC0", Offset = "0x1014DC0", VA = "0x1014DC0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003053")]
			[Address(RVA = "0x1014E2C", Offset = "0x1014E2C", VA = "0x1014E2C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170006AE")]
		public override int AsInt
		{
			[Token(Token = "0x600305C")]
			[Address(RVA = "0x10150A8", Offset = "0x10150A8", VA = "0x10150A8", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600305D")]
			[Address(RVA = "0x1015128", Offset = "0x1015128", VA = "0x1015128", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170006AF")]
		public override float AsFloat
		{
			[Token(Token = "0x600305E")]
			[Address(RVA = "0x10151AC", Offset = "0x10151AC", VA = "0x10151AC", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600305F")]
			[Address(RVA = "0x101522C", Offset = "0x101522C", VA = "0x101522C", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170006B0")]
		public override double AsDouble
		{
			[Token(Token = "0x6003060")]
			[Address(RVA = "0x10152B0", Offset = "0x10152B0", VA = "0x10152B0", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6003061")]
			[Address(RVA = "0x1015330", Offset = "0x1015330", VA = "0x1015330", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170006B1")]
		public override bool AsBool
		{
			[Token(Token = "0x6003062")]
			[Address(RVA = "0x10153B4", Offset = "0x10153B4", VA = "0x10153B4", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003063")]
			[Address(RVA = "0x1015434", Offset = "0x1015434", VA = "0x1015434", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170006B2")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6003064")]
			[Address(RVA = "0x10154B8", Offset = "0x10154B8", VA = "0x10154B8", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B3")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6003065")]
			[Address(RVA = "0x101551C", Offset = "0x101551C", VA = "0x101551C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600304D")]
		[Address(RVA = "0x1012640", Offset = "0x1012640", VA = "0x1012640")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x600304E")]
		[Address(RVA = "0x1013140", Offset = "0x1013140", VA = "0x1013140")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x600304F")]
		[Address(RVA = "0x1014C74", Offset = "0x1014C74", VA = "0x1014C74")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6003054")]
		[Address(RVA = "0x1014EB8", Offset = "0x1014EB8", VA = "0x1014EB8", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6003055")]
		[Address(RVA = "0x1014F3C", Offset = "0x1014F3C", VA = "0x1014F3C", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6003056")]
		[Address(RVA = "0x1014FC8", Offset = "0x1014FC8", VA = "0x1014FC8")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003057")]
		[Address(RVA = "0x1014FE0", Offset = "0x1014FE0", VA = "0x1014FE0")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6003058")]
		[Address(RVA = "0x1014FF8", Offset = "0x1014FF8", VA = "0x1014FF8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6003059")]
		[Address(RVA = "0x1015010", Offset = "0x1015010", VA = "0x1015010", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600305A")]
		[Address(RVA = "0x1015020", Offset = "0x1015020", VA = "0x1015020", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600305B")]
		[Address(RVA = "0x1015064", Offset = "0x1015064", VA = "0x1015064", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x200081B")]
	public static class JSON
	{
		[Token(Token = "0x6003066")]
		[Address(RVA = "0x1011E54", Offset = "0x1011E54", VA = "0x1011E54")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace GetSocialSdk.Scripts.Internal.Util
{
	[Token(Token = "0x200081C")]
	public class FixedSizedQueue<T>
	{
		[Token(Token = "0x4002D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Queue<T> _queue;

		[Token(Token = "0x4002D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int _size;

		[Token(Token = "0x6003067")]
		public FixedSizedQueue(int size)
		{
		}

		[Token(Token = "0x6003068")]
		public void Enqueue(T obj)
		{
		}

		[Token(Token = "0x6003069")]
		public T ElementAt(int index)
		{
			return (T)null;
		}

		[Token(Token = "0x600306A")]
		public int Count()
		{
			return default(int);
		}

		[Token(Token = "0x600306B")]
		public void Clear()
		{
		}
	}
	[Token(Token = "0x200081D")]
	internal class MainThreadExecutor : Singleton<MainThreadExecutor>
	{
		[Token(Token = "0x4002D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object _queueLock;

		[Token(Token = "0x4002D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<Action> _queuedActions;

		[Token(Token = "0x4002D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<Action> _executingActions;

		[Token(Token = "0x600306C")]
		[Address(RVA = "0x1CC0050", Offset = "0x1CC0050", VA = "0x1CC0050")]
		internal static void Queue(Action action)
		{
		}

		[Token(Token = "0x600306D")]
		[Address(RVA = "0x1CC0224", Offset = "0x1CC0224", VA = "0x1CC0224")]
		private void Update()
		{
		}

		[Token(Token = "0x600306E")]
		[Address(RVA = "0x1CC02D4", Offset = "0x1CC02D4", VA = "0x1CC02D4")]
		private void MoveQueuedActionsToExecuting()
		{
		}

		[Token(Token = "0x600306F")]
		[Address(RVA = "0x1CC0448", Offset = "0x1CC0448", VA = "0x1CC0448")]
		public MainThreadExecutor()
		{
		}
	}
	[Token(Token = "0x200081E")]
	public abstract class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4002D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x4002D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4002D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool applicationIsQuitting;

		[Token(Token = "0x170006B4")]
		public static T Instance
		{
			[Token(Token = "0x6003071")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003070")]
		protected static void LoadInstance()
		{
		}

		[Token(Token = "0x6003072")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6003073")]
		protected Singleton()
		{
		}
	}
}
namespace GetSocialSdk.Capture.Scripts
{
	[Token(Token = "0x200081F")]
	public class GetSocialCapturePreview : MonoBehaviour
	{
		[Token(Token = "0x4002D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playbackFrameRate;

		[Token(Token = "0x4002D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool loopPlayback;

		[Token(Token = "0x4002D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Texture2D> _framesToPlay;

		[Token(Token = "0x4002D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RawImage _rawImage;

		[Token(Token = "0x4002D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _play;

		[Token(Token = "0x4002D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _playbackStartTime;

		[Token(Token = "0x4002D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _previewInitialized;

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x228524C", Offset = "0x228524C", VA = "0x228524C")]
		public void Play()
		{
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x228548C", Offset = "0x228548C", VA = "0x228548C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6003077")]
		[Address(RVA = "0x2285494", Offset = "0x2285494", VA = "0x2285494")]
		public void TogglePreview(bool isOn)
		{
		}

		[Token(Token = "0x6003078")]
		[Address(RVA = "0x22852B0", Offset = "0x22852B0", VA = "0x22852B0")]
		private void Init()
		{
		}

		[Token(Token = "0x6003079")]
		[Address(RVA = "0x22854A4", Offset = "0x22854A4", VA = "0x22854A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600307A")]
		[Address(RVA = "0x2285554", Offset = "0x2285554", VA = "0x2285554")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600307B")]
		[Address(RVA = "0x228560C", Offset = "0x228560C", VA = "0x228560C")]
		private void Start()
		{
		}

		[Token(Token = "0x600307C")]
		[Address(RVA = "0x2285668", Offset = "0x2285668", VA = "0x2285668")]
		private void Update()
		{
		}

		[Token(Token = "0x600307D")]
		[Address(RVA = "0x22857CC", Offset = "0x22857CC", VA = "0x22857CC")]
		public GetSocialCapturePreview()
		{
		}
	}
}
namespace GetSocialSdk.Capture.Scripts.Internal.Recorder
{
	[Token(Token = "0x2000820")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB60AA4", Offset = "0xB60AA4")]
	[DisallowMultipleComponent]
	public sealed class Recorder : MonoBehaviour
	{
		[Token(Token = "0x2000821")]
		internal enum RecordingState
		{
			[Token(Token = "0x4002D91")]
			OnHold,
			[Token(Token = "0x4002D92")]
			Recording,
			[Token(Token = "0x4002D93")]
			RecordNow
		}

		[Token(Token = "0x2000822")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60B14", Offset = "0xB60B14")]
		private sealed class <StoreCaptureFrame>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RenderTexture renderTexture;

			[Token(Token = "0x170006B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6003088")]
				[Address(RVA = "0xFC7308", Offset = "0xFC7308", VA = "0xFC7308", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600308A")]
				[Address(RVA = "0xFC7350", Offset = "0xFC7350", VA = "0xFC7350", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6003085")]
			[Address(RVA = "0xFC71F0", Offset = "0xFC71F0", VA = "0xFC71F0")]
			[DebuggerHidden]
			public <StoreCaptureFrame>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6003086")]
			[Address(RVA = "0xFC721C", Offset = "0xFC721C", VA = "0xFC721C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6003087")]
			[Address(RVA = "0xFC7220", Offset = "0xFC7220", VA = "0xFC7220", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6003089")]
			[Address(RVA = "0xFC7310", Offset = "0xFC7310", VA = "0xFC7310", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal RecordingState CurrentState;

		[Token(Token = "0x4002D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal int CaptureFrameRate;

		[Token(Token = "0x4002D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _elapsedTime;

		[Token(Token = "0x4002D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture _recycledRenderTexture;

		[Token(Token = "0x4002D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera _camera;

		[Token(Token = "0x4002D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double RESIZE_RATIO;

		[Token(Token = "0x600307E")]
		[Address(RVA = "0x1007170", Offset = "0x1007170", VA = "0x1007170")]
		private void Awake()
		{
		}

		[Token(Token = "0x600307F")]
		[Address(RVA = "0x1007260", Offset = "0x1007260", VA = "0x1007260")]
		private void OnEndCameraRendering(ScriptableRenderContext context, Camera cameraEndRendering)
		{
		}

		[Token(Token = "0x6003080")]
		[Address(RVA = "0x1007504", Offset = "0x1007504", VA = "0x1007504")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6003081")]
		[Address(RVA = "0x1007404", Offset = "0x1007404", VA = "0x1007404")]
		private RenderTexture GetTemporaryRenderTexture()
		{
			return null;
		}

		[Token(Token = "0x6003082")]
		[Address(RVA = "0x100763C", Offset = "0x100763C", VA = "0x100763C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xB88C08", Offset = "0xB88C08")]
		private IEnumerator StoreCaptureFrame(RenderTexture renderTexture)
		{
			return null;
		}

		[Token(Token = "0x6003083")]
		[Address(RVA = "0x10076B4", Offset = "0x10076B4", VA = "0x10076B4")]
		public Recorder()
		{
		}
	}
	[Token(Token = "0x2000823")]
	public sealed class StoreWorker
	{
		[Token(Token = "0x4002D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78990", Offset = "0xB78990")]
		private FixedSizedQueue<GifFrame> <StoredFrames>k__BackingField;

		[Token(Token = "0x4002D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Thread _thread;

		[Token(Token = "0x4002D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StoreWorker _instance;

		[Token(Token = "0x170006B7")]
		public FixedSizedQueue<GifFrame> StoredFrames
		{
			[Token(Token = "0x600308B")]
			[Address(RVA = "0x1B0AA04", Offset = "0x1B0AA04", VA = "0x1B0AA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88CB8", Offset = "0xB88CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600308C")]
			[Address(RVA = "0x1B0AA0C", Offset = "0x1B0AA0C", VA = "0x1B0AA0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88CC8", Offset = "0xB88CC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006B8")]
		internal static StoreWorker Instance
		{
			[Token(Token = "0x600308D")]
			[Address(RVA = "0x1B0AA14", Offset = "0x1B0AA14", VA = "0x1B0AA14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600308E")]
		[Address(RVA = "0x1B0AA94", Offset = "0x1B0AA94", VA = "0x1B0AA94")]
		internal void Clear()
		{
		}

		[Token(Token = "0x600308F")]
		[Address(RVA = "0x1B0AB24", Offset = "0x1B0AB24", VA = "0x1B0AB24")]
		internal void Start(System.Threading.ThreadPriority priority, int maxCapturedFrames)
		{
		}

		[Token(Token = "0x6003090")]
		[Address(RVA = "0x1B0AC60", Offset = "0x1B0AC60", VA = "0x1B0AC60")]
		internal void StoreFrame(RenderTexture renderTexture, double resizeRatio)
		{
		}

		[Token(Token = "0x6003091")]
		[Address(RVA = "0x1B0AF6C", Offset = "0x1B0AF6C", VA = "0x1B0AF6C")]
		public static void VerticallyFlipRenderTexture(RenderTexture target)
		{
		}

		[Token(Token = "0x6003092")]
		[Address(RVA = "0x1B0B054", Offset = "0x1B0B054", VA = "0x1B0B054")]
		private static void Run()
		{
		}

		[Token(Token = "0x6003093")]
		[Address(RVA = "0x1B0AA8C", Offset = "0x1B0AA8C", VA = "0x1B0AA8C")]
		public StoreWorker()
		{
		}
	}
}
namespace GetSocialSdk.Capture.Scripts.Internal.Gif
{
	[Token(Token = "0x2000824")]
	internal sealed class GeneratorWorker
	{
		[Token(Token = "0x4002D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Thread _thread;

		[Token(Token = "0x4002D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FixedSizedQueue<GifFrame> _capturedFrames;

		[Token(Token = "0x4002D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GifEncoder _encoder;

		[Token(Token = "0x4002D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string _filePath;

		[Token(Token = "0x4002D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action _onFileSaved;

		[Token(Token = "0x4002D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int _playbackFrameRate;

		[Token(Token = "0x4002DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int _repeat;

		[Token(Token = "0x6003094")]
		[Address(RVA = "0x126441C", Offset = "0x126441C", VA = "0x126441C")]
		internal GeneratorWorker(bool loop, int playbackFrameRate, System.Threading.ThreadPriority priority, FixedSizedQueue<GifFrame> capturedFrames, string filePath, Action onFileSaved)
		{
		}

		[Token(Token = "0x6003095")]
		[Address(RVA = "0x126455C", Offset = "0x126455C", VA = "0x126455C")]
		internal void Start()
		{
		}

		[Token(Token = "0x6003096")]
		[Address(RVA = "0x1264600", Offset = "0x1264600", VA = "0x1264600")]
		private void Run()
		{
		}
	}
	[Token(Token = "0x2000825")]
	public class GifEncoder
	{
		[Token(Token = "0x4002DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int m_Width;

		[Token(Token = "0x4002DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int m_Height;

		[Token(Token = "0x4002DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int m_Repeat;

		[Token(Token = "0x4002DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected int m_FrameDelay;

		[Token(Token = "0x4002DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_HasStarted;

		[Token(Token = "0x4002DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected FileStream m_FileStream;

		[Token(Token = "0x4002DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected GifFrame m_CurrentFrame;

		[Token(Token = "0x4002DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected byte[] m_Pixels;

		[Token(Token = "0x4002DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected byte[] m_IndexedPixels;

		[Token(Token = "0x4002DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int m_ColorDepth;

		[Token(Token = "0x4002DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected byte[] m_ColorTab;

		[Token(Token = "0x4002DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool[] m_UsedEntry;

		[Token(Token = "0x4002DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int m_PaletteSize;

		[Token(Token = "0x4002DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected int m_DisposalCode;

		[Token(Token = "0x4002DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool m_ShouldCloseStream;

		[Token(Token = "0x4002DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		protected bool m_IsFirstFrame;

		[Token(Token = "0x4002DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		protected bool m_IsSizeSet;

		[Token(Token = "0x4002DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int m_SampleInterval;

		[Token(Token = "0x4002DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected int m_FramesPerColorSample;

		[Token(Token = "0x4002DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected NeuQuant nq;

		[Token(Token = "0x6003097")]
		[Address(RVA = "0x2293AD8", Offset = "0x2293AD8", VA = "0x2293AD8")]
		public GifEncoder()
		{
		}

		[Token(Token = "0x6003098")]
		[Address(RVA = "0x2293AE4", Offset = "0x2293AE4", VA = "0x2293AE4")]
		public GifEncoder(int repeat, int quality)
		{
		}

		[Token(Token = "0x6003099")]
		[Address(RVA = "0x2293BA8", Offset = "0x2293BA8", VA = "0x2293BA8")]
		public void SetDelay(int ms)
		{
		}

		[Token(Token = "0x600309A")]
		[Address(RVA = "0x2293BDC", Offset = "0x2293BDC", VA = "0x2293BDC")]
		public void SetFrameRate(float fps)
		{
		}

		[Token(Token = "0x600309B")]
		[Address(RVA = "0x2293C18", Offset = "0x2293C18", VA = "0x2293C18")]
		public void AddFrame(GifFrame frame)
		{
		}

		[Token(Token = "0x600309C")]
		[Address(RVA = "0x22945E4", Offset = "0x22945E4", VA = "0x22945E4")]
		public void Start(FileStream os)
		{
		}

		[Token(Token = "0x600309D")]
		[Address(RVA = "0x22947B4", Offset = "0x22947B4", VA = "0x22947B4")]
		public void Start(string file)
		{
		}

		[Token(Token = "0x600309E")]
		[Address(RVA = "0x2294940", Offset = "0x2294940", VA = "0x2294940")]
		public void BuildPalette(ref FixedSizedQueue<GifFrame> frames)
		{
		}

		[Token(Token = "0x600309F")]
		[Address(RVA = "0x2294BBC", Offset = "0x2294BBC", VA = "0x2294BBC")]
		public void Finish()
		{
		}

		[Token(Token = "0x60030A0")]
		[Address(RVA = "0x2293D44", Offset = "0x2293D44", VA = "0x2293D44")]
		protected void SetSize(int w, int h)
		{
		}

		[Token(Token = "0x60030A1")]
		[Address(RVA = "0x2293D54", Offset = "0x2293D54", VA = "0x2293D54")]
		protected void GetImagePixels()
		{
		}

		[Token(Token = "0x60030A2")]
		[Address(RVA = "0x2293EA0", Offset = "0x2293EA0", VA = "0x2293EA0")]
		protected void AnalyzePixels()
		{
		}

		[Token(Token = "0x60030A3")]
		[Address(RVA = "0x2294328", Offset = "0x2294328", VA = "0x2294328")]
		protected void WriteGraphicCtrlExt()
		{
		}

		[Token(Token = "0x60030A4")]
		[Address(RVA = "0x2294458", Offset = "0x2294458", VA = "0x2294458")]
		protected void WriteImageDesc()
		{
		}

		[Token(Token = "0x60030A5")]
		[Address(RVA = "0x22940A8", Offset = "0x22940A8", VA = "0x22940A8")]
		protected void WriteLSD()
		{
		}

		[Token(Token = "0x60030A6")]
		[Address(RVA = "0x2294224", Offset = "0x2294224", VA = "0x2294224")]
		protected void WriteNetscapeExt()
		{
		}

		[Token(Token = "0x60030A7")]
		[Address(RVA = "0x229418C", Offset = "0x229418C", VA = "0x229418C")]
		protected void WritePalette()
		{
		}

		[Token(Token = "0x60030A8")]
		[Address(RVA = "0x229454C", Offset = "0x229454C", VA = "0x229454C")]
		protected void WritePixels()
		{
		}

		[Token(Token = "0x60030A9")]
		[Address(RVA = "0x2294D7C", Offset = "0x2294D7C", VA = "0x2294D7C")]
		protected void WriteShort(int value)
		{
		}

		[Token(Token = "0x60030AA")]
		[Address(RVA = "0x229471C", Offset = "0x229471C", VA = "0x229471C")]
		protected void WriteString(string s)
		{
		}
	}
	[Token(Token = "0x2000826")]
	public class GifFrame
	{
		[Token(Token = "0x4002DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Width;

		[Token(Token = "0x4002DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Height;

		[Token(Token = "0x4002DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] Data;

		[Token(Token = "0x60030AB")]
		[Address(RVA = "0x2294E3C", Offset = "0x2294E3C", VA = "0x2294E3C")]
		public GifFrame()
		{
		}
	}
	[Token(Token = "0x2000827")]
	public class LzwEncoder
	{
		[Token(Token = "0x4002DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int EOF;

		[Token(Token = "0x4002DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] pixAry;

		[Token(Token = "0x4002DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initCodeSize;

		[Token(Token = "0x4002DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int curPixel;

		[Token(Token = "0x4002DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int BITS;

		[Token(Token = "0x4002DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int HSIZE;

		[Token(Token = "0x4002DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int n_bits;

		[Token(Token = "0x4002DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxbits;

		[Token(Token = "0x4002DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int maxcode;

		[Token(Token = "0x4002DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int maxmaxcode;

		[Token(Token = "0x4002DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] htab;

		[Token(Token = "0x4002DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] codetab;

		[Token(Token = "0x4002DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hsize;

		[Token(Token = "0x4002DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int free_ent;

		[Token(Token = "0x4002DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool clear_flg;

		[Token(Token = "0x4002DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int g_init_bits;

		[Token(Token = "0x4002DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ClearCode;

		[Token(Token = "0x4002DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int EOFCode;

		[Token(Token = "0x4002DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int cur_accum;

		[Token(Token = "0x4002DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int cur_bits;

		[Token(Token = "0x4002DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] masks;

		[Token(Token = "0x4002DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int a_count;

		[Token(Token = "0x4002DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte[] accum;

		[Token(Token = "0x60030AC")]
		[Address(RVA = "0x1CBF19C", Offset = "0x1CBF19C", VA = "0x1CBF19C")]
		public LzwEncoder(int width, int height, byte[] pixels, int color_depth)
		{
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0x1CBF368", Offset = "0x1CBF368", VA = "0x1CBF368")]
		private void Add(byte c, Stream outs)
		{
		}

		[Token(Token = "0x60030AE")]
		[Address(RVA = "0x1CBF48C", Offset = "0x1CBF48C", VA = "0x1CBF48C")]
		private void ClearTable(Stream outs)
		{
		}

		[Token(Token = "0x60030AF")]
		[Address(RVA = "0x1CBF4D4", Offset = "0x1CBF4D4", VA = "0x1CBF4D4")]
		private void ResetCodeTable(int hsize)
		{
		}

		[Token(Token = "0x60030B0")]
		[Address(RVA = "0x1CBF690", Offset = "0x1CBF690", VA = "0x1CBF690")]
		private void Compress(int init_bits, Stream outs)
		{
		}

		[Token(Token = "0x60030B1")]
		[Address(RVA = "0x1CBF9F0", Offset = "0x1CBF9F0", VA = "0x1CBF9F0")]
		public void Encode(Stream os)
		{
		}

		[Token(Token = "0x60030B2")]
		[Address(RVA = "0x1CBF3C8", Offset = "0x1CBF3C8", VA = "0x1CBF3C8")]
		private void Flush(Stream outs)
		{
		}

		[Token(Token = "0x60030B3")]
		[Address(RVA = "0x1CBF930", Offset = "0x1CBF930", VA = "0x1CBF930")]
		private int MaxCode(int n_bits)
		{
			return default(int);
		}

		[Token(Token = "0x60030B4")]
		[Address(RVA = "0x1CBF940", Offset = "0x1CBF940", VA = "0x1CBF940")]
		private int NextPixel()
		{
			return default(int);
		}

		[Token(Token = "0x60030B5")]
		[Address(RVA = "0x1CBF530", Offset = "0x1CBF530", VA = "0x1CBF530")]
		private void Output(int code, Stream outs)
		{
		}
	}
	[Token(Token = "0x2000828")]
	public class NeuQuant
	{
		[Token(Token = "0x4002DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly int netsize;

		[Token(Token = "0x4002DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static readonly int prime1;

		[Token(Token = "0x4002DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly int prime2;

		[Token(Token = "0x4002DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static readonly int prime3;

		[Token(Token = "0x4002DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly int prime4;

		[Token(Token = "0x4002DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected static readonly int minpicturebytes;

		[Token(Token = "0x4002DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly int maxnetpos;

		[Token(Token = "0x4002DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected static readonly int netbiasshift;

		[Token(Token = "0x4002DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static readonly int ncycles;

		[Token(Token = "0x4002DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected static readonly int intbiasshift;

		[Token(Token = "0x4002DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static readonly int intbias;

		[Token(Token = "0x4002DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected static readonly int gammashift;

		[Token(Token = "0x4002DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static readonly int gamma;

		[Token(Token = "0x4002DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected static readonly int betashift;

		[Token(Token = "0x4002DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected static readonly int beta;

		[Token(Token = "0x4002DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected static readonly int betagamma;

		[Token(Token = "0x4002DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static readonly int initrad;

		[Token(Token = "0x4002DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected static readonly int radiusbiasshift;

		[Token(Token = "0x4002DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static readonly int radiusbias;

		[Token(Token = "0x4002DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected static readonly int initradius;

		[Token(Token = "0x4002DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected static readonly int radiusdec;

		[Token(Token = "0x4002DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected static readonly int alphabiasshift;

		[Token(Token = "0x4002DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static readonly int initalpha;

		[Token(Token = "0x4002DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int alphadec;

		[Token(Token = "0x4002DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected static readonly int radbiasshift;

		[Token(Token = "0x4002DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected static readonly int radbias;

		[Token(Token = "0x4002DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected static readonly int alpharadbshift;

		[Token(Token = "0x4002DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected static readonly int alpharadbias;

		[Token(Token = "0x4002DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected byte[] thepicture;

		[Token(Token = "0x4002DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int lengthcount;

		[Token(Token = "0x4002DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int samplefac;

		[Token(Token = "0x4002DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int[][] network;

		[Token(Token = "0x4002DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int[] netindex;

		[Token(Token = "0x4002DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int[] bias;

		[Token(Token = "0x4002DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int[] freq;

		[Token(Token = "0x4002DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int[] radpower;

		[Token(Token = "0x60030B7")]
		[Address(RVA = "0x1BC77E0", Offset = "0x1BC77E0", VA = "0x1BC77E0")]
		public NeuQuant(byte[] thepic, int len, int sample)
		{
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0x1BC7AC0", Offset = "0x1BC7AC0", VA = "0x1BC7AC0")]
		public byte[] ColorMap()
		{
			return null;
		}

		[Token(Token = "0x60030B9")]
		[Address(RVA = "0x1BC7D54", Offset = "0x1BC7D54", VA = "0x1BC7D54")]
		public void Inxbuild()
		{
		}

		[Token(Token = "0x60030BA")]
		[Address(RVA = "0x1BC80A0", Offset = "0x1BC80A0", VA = "0x1BC80A0")]
		public void Learn()
		{
		}

		[Token(Token = "0x60030BB")]
		[Address(RVA = "0x1BC8D00", Offset = "0x1BC8D00", VA = "0x1BC8D00")]
		public int Map(int b, int g, int r)
		{
			return default(int);
		}

		[Token(Token = "0x60030BC")]
		[Address(RVA = "0x1BC8F68", Offset = "0x1BC8F68", VA = "0x1BC8F68")]
		public byte[] Process()
		{
			return null;
		}

		[Token(Token = "0x60030BD")]
		[Address(RVA = "0x1BC8F9C", Offset = "0x1BC8F9C", VA = "0x1BC8F9C")]
		public void Unbiasnet()
		{
		}

		[Token(Token = "0x60030BE")]
		[Address(RVA = "0x1BC8A10", Offset = "0x1BC8A10", VA = "0x1BC8A10")]
		protected void Alterneigh(int rad, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60030BF")]
		[Address(RVA = "0x1BC88D0", Offset = "0x1BC88D0", VA = "0x1BC88D0")]
		protected void Altersingle(int alpha, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x60030C0")]
		[Address(RVA = "0x1BC8618", Offset = "0x1BC8618", VA = "0x1BC8618")]
		protected int Contest(int b, int g, int r)
		{
			return default(int);
		}
	}
}
namespace GetSocialSdk.MiniJSON
{
	[Token(Token = "0x2000829")]
	public static class GSJson
	{
		[Token(Token = "0x200082A")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x200082B")]
			private enum TOKEN
			{
				[Token(Token = "0x4002DF8")]
				NONE,
				[Token(Token = "0x4002DF9")]
				CURLY_OPEN,
				[Token(Token = "0x4002DFA")]
				CURLY_CLOSE,
				[Token(Token = "0x4002DFB")]
				SQUARED_OPEN,
				[Token(Token = "0x4002DFC")]
				SQUARED_CLOSE,
				[Token(Token = "0x4002DFD")]
				COLON,
				[Token(Token = "0x4002DFE")]
				COMMA,
				[Token(Token = "0x4002DFF")]
				STRING,
				[Token(Token = "0x4002E00")]
				NUMBER,
				[Token(Token = "0x4002E01")]
				TRUE,
				[Token(Token = "0x4002E02")]
				FALSE,
				[Token(Token = "0x4002E03")]
				NULL
			}

			[Token(Token = "0x4002DF4")]
			private const string WhiteSpace = " \t\n\r";

			[Token(Token = "0x4002DF5")]
			private const string WordBreak = " \t\n\r{}[],:\"";

			[Token(Token = "0x4002DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x170006B9")]
			private char PeekChar
			{
				[Token(Token = "0x60030C9")]
				[Address(RVA = "0xFCA294", Offset = "0xFCA294", VA = "0xFCA294")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170006BA")]
			private char NextChar
			{
				[Token(Token = "0x60030CA")]
				[Address(RVA = "0xFCA318", Offset = "0xFCA318", VA = "0xFCA318")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170006BB")]
			private string NextWord
			{
				[Token(Token = "0x60030CB")]
				[Address(RVA = "0xFCA39C", Offset = "0xFCA39C", VA = "0xFCA39C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006BC")]
			private TOKEN NextToken
			{
				[Token(Token = "0x60030CC")]
				[Address(RVA = "0xFCA488", Offset = "0xFCA488", VA = "0xFCA488")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x60030C8")]
			[Address(RVA = "0xFCA214", Offset = "0xFCA214", VA = "0xFCA214")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x60030CD")]
			[Address(RVA = "0xFCA6EC", Offset = "0xFCA6EC", VA = "0xFCA6EC")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x60030CE")]
			[Address(RVA = "0xFCA884", Offset = "0xFCA884", VA = "0xFCA884", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60030CF")]
			[Address(RVA = "0xFCA8C0", Offset = "0xFCA8C0", VA = "0xFCA8C0")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x60030D0")]
			[Address(RVA = "0xFCAC58", Offset = "0xFCAC58", VA = "0xFCAC58")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x60030D1")]
			[Address(RVA = "0xFCA85C", Offset = "0xFCA85C", VA = "0xFCA85C")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x60030D2")]
			[Address(RVA = "0xFCAD40", Offset = "0xFCAD40", VA = "0xFCAD40")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x60030D3")]
			[Address(RVA = "0xFCA9E8", Offset = "0xFCA9E8", VA = "0xFCA9E8")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x60030D4")]
			[Address(RVA = "0xFCAE18", Offset = "0xFCAE18", VA = "0xFCAE18")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x60030D5")]
			[Address(RVA = "0xFCA64C", Offset = "0xFCA64C", VA = "0xFCA64C")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x200082C")]
		private sealed class Serializer
		{
			[Token(Token = "0x4002E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x60030D6")]
			[Address(RVA = "0xFCAF54", Offset = "0xFCAF54", VA = "0xFCAF54")]
			private Serializer()
			{
			}

			[Token(Token = "0x60030D7")]
			[Address(RVA = "0xFCAFC4", Offset = "0xFCAFC4", VA = "0xFCAFC4")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x60030D8")]
			[Address(RVA = "0xFCB03C", Offset = "0xFCB03C", VA = "0xFCB03C")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x60030D9")]
			[Address(RVA = "0xFCB7CC", Offset = "0xFCB7CC", VA = "0xFCB7CC")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x60030DA")]
			[Address(RVA = "0xFCB4C4", Offset = "0xFCB4C4", VA = "0xFCB4C4")]
			private void SerializeArray(IList array)
			{
			}

			[Token(Token = "0x60030DB")]
			[Address(RVA = "0xFCB1F8", Offset = "0xFCB1F8", VA = "0xFCB1F8")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x60030DC")]
			[Address(RVA = "0xFCBC0C", Offset = "0xFCBC0C", VA = "0xFCBC0C")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x4002DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo numberFormat;

		[Token(Token = "0x60030C2")]
		[Address(RVA = "0x1257150", Offset = "0x1257150", VA = "0x1257150")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x60030C3")]
		[Address(RVA = "0x1257160", Offset = "0x1257160", VA = "0x1257160")]
		public static string Serialize(object obj)
		{
			return null;
		}

		[Token(Token = "0x60030C4")]
		[Address(RVA = "0x1257168", Offset = "0x1257168", VA = "0x1257168")]
		public static string TextureToBase64(this Texture2D obj)
		{
			return null;
		}

		[Token(Token = "0x60030C5")]
		[Address(RVA = "0x1257244", Offset = "0x1257244", VA = "0x1257244")]
		public static Texture2D FromBase64(this string base64Image)
		{
			return null;
		}

		[Token(Token = "0x60030C6")]
		[Address(RVA = "0x1257320", Offset = "0x1257320", VA = "0x1257320")]
		public static string ByteArrayToBase64(this byte[] byteArray)
		{
			return null;
		}
	}
}
namespace GetSocialSdk.Core
{
	[Token(Token = "0x200082D")]
	public sealed class ActivitiesQuery : IConvertableToNative
	{
		[Token(Token = "0x200082E")]
		public enum Filter
		{
			[Token(Token = "0x4002E11")]
			NoFilter,
			[Token(Token = "0x4002E12")]
			Older,
			[Token(Token = "0x4002E13")]
			Newer
		}

		[Token(Token = "0x4002E05")]
		public const string GlobalFeed = "g-global";

		[Token(Token = "0x4002E06")]
		public const int DefaultLimit = 10;

		[Token(Token = "0x4002E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ActivityPost.Type _type;

		[Token(Token = "0x4002E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _feed;

		[Token(Token = "0x4002E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string _parentActivityId;

		[Token(Token = "0x4002E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _limit;

		[Token(Token = "0x4002E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Filter _filter;

		[Token(Token = "0x4002E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _filteringActivityId;

		[Token(Token = "0x4002E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _filterUserId;

		[Token(Token = "0x4002E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isFriendsFeed;

		[Token(Token = "0x4002E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string[] _tags;

		[Token(Token = "0x60030DD")]
		[Address(RVA = "0xF98F3C", Offset = "0xF98F3C", VA = "0xF98F3C")]
		private ActivitiesQuery(ActivityPost.Type type, string feed, string parentActivityId)
		{
		}

		[Token(Token = "0x60030DE")]
		[Address(RVA = "0xF98FEC", Offset = "0xF98FEC", VA = "0xF98FEC")]
		public static ActivitiesQuery PostsForFeed(string feed)
		{
			return null;
		}

		[Token(Token = "0x60030DF")]
		[Address(RVA = "0xF99050", Offset = "0xF99050", VA = "0xF99050")]
		public static ActivitiesQuery PostsForGlobalFeed()
		{
			return null;
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0xF990C4", Offset = "0xF990C4", VA = "0xF990C4")]
		public static ActivitiesQuery CommentsToPost(string activityId)
		{
			return null;
		}

		[Token(Token = "0x60030E1")]
		[Address(RVA = "0xF99128", Offset = "0xF99128", VA = "0xF99128")]
		public ActivitiesQuery WithLimit(int limit)
		{
			return null;
		}

		[Token(Token = "0x60030E2")]
		[Address(RVA = "0xF99130", Offset = "0xF99130", VA = "0xF99130")]
		public ActivitiesQuery WithFilter(Filter filter, string activityId)
		{
			return null;
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0xF99160", Offset = "0xF99160", VA = "0xF99160")]
		public ActivitiesQuery FilterByUser(string userId)
		{
			return null;
		}

		[Token(Token = "0x60030E4")]
		[Address(RVA = "0xF99188", Offset = "0xF99188", VA = "0xF99188")]
		public ActivitiesQuery FriendsFeed(bool isFriendsFeed)
		{
			return null;
		}

		[Token(Token = "0x60030E5")]
		[Address(RVA = "0xF99194", Offset = "0xF99194", VA = "0xF99194")]
		public ActivitiesQuery WithTags(params string[] tags)
		{
			return null;
		}

		[Token(Token = "0x60030E6")]
		[Address(RVA = "0xF991BC", Offset = "0xF991BC", VA = "0xF991BC", Slot = "4")]
		public AndroidJavaObject ToAjo()
		{
			return null;
		}
	}
	[Token(Token = "0x200082F")]
	public sealed class ActivityPost : IConvertableFromNative<ActivityPost>
	{
		[Token(Token = "0x2000830")]
		public enum Type
		{
			[Token(Token = "0x4002E23")]
			Post,
			[Token(Token = "0x4002E24")]
			Comment
		}

		[Serializable]
		[Token(Token = "0x2000831")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60B34", Offset = "0xB60B34")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<AndroidJavaObject, Mention> <>9__70_0;

			[Token(Token = "0x600310F")]
			[Address(RVA = "0xF8A9FC", Offset = "0xF8A9FC", VA = "0xF8A9FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6003110")]
			[Address(RVA = "0xF8AA04", Offset = "0xF8AA04", VA = "0xF8AA04")]
			internal Mention <ParseFromAJO>b__70_0(AndroidJavaObject mentionAjo)
			{
				return null;
			}
		}

		[Token(Token = "0x4002E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB789A0", Offset = "0xB789A0")]
		private string <Id>k__BackingField;

		[Token(Token = "0x4002E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB789B0", Offset = "0xB789B0")]
		private string <Text>k__BackingField;

		[Token(Token = "0x4002E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB789C0", Offset = "0xB789C0")]
		private string <ImageUrl>k__BackingField;

		[Token(Token = "0x4002E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB789D0", Offset = "0xB789D0")]
		private DateTime <CreatedAt>k__BackingField;

		[Token(Token = "0x4002E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB789E0", Offset = "0xB789E0")]
		private string <ButtonTitle>k__BackingField;

		[Token(Token = "0x4002E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB789F0", Offset = "0xB789F0")]
		private string <ButtonAction>k__BackingField;

		[Token(Token = "0x4002E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A00", Offset = "0xB78A00")]
		private PostAuthor <Author>k__BackingField;

		[Token(Token = "0x4002E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A10", Offset = "0xB78A10")]
		private int <CommentsCount>k__BackingField;

		[Token(Token = "0x4002E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A20", Offset = "0xB78A20")]
		private int <LikesCount>k__BackingField;

		[Token(Token = "0x4002E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A30", Offset = "0xB78A30")]
		private bool <IsLikedByMe>k__BackingField;

		[Token(Token = "0x4002E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A40", Offset = "0xB78A40")]
		private DateTime <StickyStart>k__BackingField;

		[Token(Token = "0x4002E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A50", Offset = "0xB78A50")]
		private DateTime <StickyEnd>k__BackingField;

		[Token(Token = "0x4002E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A60", Offset = "0xB78A60")]
		private List<Mention> <Mentions>k__BackingField;

		[Token(Token = "0x4002E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A70", Offset = "0xB78A70")]
		private string <FeedId>k__BackingField;

		[Token(Token = "0x170006BD")]
		public string Id
		{
			[Token(Token = "0x60030E7")]
			[Address(RVA = "0xF99620", Offset = "0xF99620", VA = "0xF99620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D08", Offset = "0xB88D08")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030E8")]
			[Address(RVA = "0xF99628", Offset = "0xF99628", VA = "0xF99628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D18", Offset = "0xB88D18")]
			private set
			{
			}
		}

		[Token(Token = "0x170006BE")]
		public string Text
		{
			[Token(Token = "0x60030E9")]
			[Address(RVA = "0xF99630", Offset = "0xF99630", VA = "0xF99630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D28", Offset = "0xB88D28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030EA")]
			[Address(RVA = "0xF99638", Offset = "0xF99638", VA = "0xF99638")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D38", Offset = "0xB88D38")]
			private set
			{
			}
		}

		[Token(Token = "0x170006BF")]
		public bool HasText
		{
			[Token(Token = "0x60030EB")]
			[Address(RVA = "0xF99640", Offset = "0xF99640", VA = "0xF99640")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006C0")]
		public string ImageUrl
		{
			[Token(Token = "0x60030EC")]
			[Address(RVA = "0xF99664", Offset = "0xF99664", VA = "0xF99664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D48", Offset = "0xB88D48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030ED")]
			[Address(RVA = "0xF9966C", Offset = "0xF9966C", VA = "0xF9966C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D58", Offset = "0xB88D58")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C1")]
		public bool HasImage
		{
			[Token(Token = "0x60030EE")]
			[Address(RVA = "0xF99674", Offset = "0xF99674", VA = "0xF99674")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006C2")]
		public DateTime CreatedAt
		{
			[Token(Token = "0x60030EF")]
			[Address(RVA = "0xF99698", Offset = "0xF99698", VA = "0xF99698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D68", Offset = "0xB88D68")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60030F0")]
			[Address(RVA = "0xF996A0", Offset = "0xF996A0", VA = "0xF996A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D78", Offset = "0xB88D78")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C3")]
		public string ButtonTitle
		{
			[Token(Token = "0x60030F1")]
			[Address(RVA = "0xF996A8", Offset = "0xF996A8", VA = "0xF996A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D88", Offset = "0xB88D88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030F2")]
			[Address(RVA = "0xF996B0", Offset = "0xF996B0", VA = "0xF996B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88D98", Offset = "0xB88D98")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C4")]
		public string ButtonAction
		{
			[Token(Token = "0x60030F3")]
			[Address(RVA = "0xF996B8", Offset = "0xF996B8", VA = "0xF996B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88DA8", Offset = "0xB88DA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030F4")]
			[Address(RVA = "0xF996C0", Offset = "0xF996C0", VA = "0xF996C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88DB8", Offset = "0xB88DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C5")]
		public bool HasButton
		{
			[Token(Token = "0x60030F5")]
			[Address(RVA = "0xF996C8", Offset = "0xF996C8", VA = "0xF996C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006C6")]
		public PostAuthor Author
		{
			[Token(Token = "0x60030F6")]
			[Address(RVA = "0xF996D8", Offset = "0xF996D8", VA = "0xF996D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88DC8", Offset = "0xB88DC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60030F7")]
			[Address(RVA = "0xF996E0", Offset = "0xF996E0", VA = "0xF996E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88DD8", Offset = "0xB88DD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C7")]
		public int CommentsCount
		{
			[Token(Token = "0x60030F8")]
			[Address(RVA = "0xF996E8", Offset = "0xF996E8", VA = "0xF996E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88DE8", Offset = "0xB88DE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60030F9")]
			[Address(RVA = "0xF996F0", Offset = "0xF996F0", VA = "0xF996F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88DF8", Offset = "0xB88DF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C8")]
		public int LikesCount
		{
			[Token(Token = "0x60030FA")]
			[Address(RVA = "0xF996F8", Offset = "0xF996F8", VA = "0xF996F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E08", Offset = "0xB88E08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60030FB")]
			[Address(RVA = "0xF99700", Offset = "0xF99700", VA = "0xF99700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E18", Offset = "0xB88E18")]
			private set
			{
			}
		}

		[Token(Token = "0x170006C9")]
		public bool IsLikedByMe
		{
			[Token(Token = "0x60030FC")]
			[Address(RVA = "0xF99708", Offset = "0xF99708", VA = "0xF99708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E28", Offset = "0xB88E28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60030FD")]
			[Address(RVA = "0xF99710", Offset = "0xF99710", VA = "0xF99710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E38", Offset = "0xB88E38")]
			private set
			{
			}
		}

		[Token(Token = "0x170006CA")]
		public DateTime StickyStart
		{
			[Token(Token = "0x60030FE")]
			[Address(RVA = "0xF9971C", Offset = "0xF9971C", VA = "0xF9971C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E48", Offset = "0xB88E48")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60030FF")]
			[Address(RVA = "0xF99724", Offset = "0xF99724", VA = "0xF99724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E58", Offset = "0xB88E58")]
			private set
			{
			}
		}

		[Token(Token = "0x170006CB")]
		public DateTime StickyEnd
		{
			[Token(Token = "0x6003100")]
			[Address(RVA = "0xF9972C", Offset = "0xF9972C", VA = "0xF9972C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E68", Offset = "0xB88E68")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6003101")]
			[Address(RVA = "0xF99734", Offset = "0xF99734", VA = "0xF99734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E78", Offset = "0xB88E78")]
			private set
			{
			}
		}

		[Token(Token = "0x170006CC")]
		public List<Mention> Mentions
		{
			[Token(Token = "0x6003103")]
			[Address(RVA = "0xF997C4", Offset = "0xF997C4", VA = "0xF997C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E88", Offset = "0xB88E88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003104")]
			[Address(RVA = "0xF997CC", Offset = "0xF997CC", VA = "0xF997CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88E98", Offset = "0xB88E98")]
			private set
			{
			}
		}

		[Token(Token = "0x170006CD")]
		public string FeedId
		{
			[Token(Token = "0x6003105")]
			[Address(RVA = "0xF997D4", Offset = "0xF997D4", VA = "0xF997D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EA8", Offset = "0xB88EA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003106")]
			[Address(RVA = "0xF997DC", Offset = "0xF997DC", VA = "0xF997DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EB8", Offset = "0xB88EB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6003102")]
		[Address(RVA = "0xF9973C", Offset = "0xF9973C", VA = "0xF9973C")]
		public bool IsStickyAt(DateTime dateTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6003107")]
		[Address(RVA = "0xF997E4", Offset = "0xF997E4", VA = "0xF997E4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003108")]
		[Address(RVA = "0xF99D88", Offset = "0xF99D88", VA = "0xF99D88")]
		public ActivityPost()
		{
		}

		[Token(Token = "0x6003109")]
		[Address(RVA = "0xF99D90", Offset = "0xF99D90", VA = "0xF99D90")]
		internal ActivityPost(string id, string text, string imageUrl, DateTime createdAt, string buttonTitle, string buttonAction, PostAuthor author, int commentsCount, int likesCount, bool isLikedByMe, DateTime stickyStart, DateTime stickyEnd, List<Mention> mentions, string feedId)
		{
		}

		[Token(Token = "0x600310A")]
		[Address(RVA = "0xF99ED0", Offset = "0xF99ED0", VA = "0xF99ED0")]
		private bool Equals(ActivityPost other)
		{
			return default(bool);
		}

		[Token(Token = "0x600310B")]
		[Address(RVA = "0xF9A068", Offset = "0xF9A068", VA = "0xF9A068", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600310C")]
		[Address(RVA = "0xF9A0F8", Offset = "0xF9A0F8", VA = "0xF9A0F8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600310D")]
		[Address(RVA = "0xF9A304", Offset = "0xF9A304", VA = "0xF9A304", Slot = "4")]
		public ActivityPost ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000832")]
	public sealed class ActivityPostContent : IConvertableToNative
	{
		[Token(Token = "0x2000833")]
		public class Builder
		{
			[Token(Token = "0x4002E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly ActivityPostContent _content;

			[Token(Token = "0x6003114")]
			[Address(RVA = "0xF8AB78", Offset = "0xF8AB78", VA = "0xF8AB78")]
			internal Builder()
			{
			}

			[Token(Token = "0x6003115")]
			[Address(RVA = "0xF8ABE8", Offset = "0xF8ABE8", VA = "0xF8ABE8")]
			public Builder WithText(string text)
			{
				return null;
			}

			[Token(Token = "0x6003116")]
			[Address(RVA = "0xF8AC1C", Offset = "0xF8AC1C", VA = "0xF8AC1C")]
			public Builder WithImage(Texture2D image)
			{
				return null;
			}

			[Token(Token = "0x6003117")]
			[Address(RVA = "0xF8AC50", Offset = "0xF8AC50", VA = "0xF8AC50")]
			public Builder WithButton(string title, string action)
			{
				return null;
			}

			[Token(Token = "0x6003118")]
			[Address(RVA = "0xF8AC9C", Offset = "0xF8AC9C", VA = "0xF8AC9C")]
			public Builder WithVideo(byte[] video)
			{
				return null;
			}

			[Token(Token = "0x6003119")]
			[Address(RVA = "0xF8ACD0", Offset = "0xF8ACD0", VA = "0xF8ACD0")]
			public ActivityPostContent Build()
			{
				return null;
			}
		}

		[Token(Token = "0x4002E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _text;

		[Token(Token = "0x4002E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Texture2D _image;

		[Token(Token = "0x4002E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _buttonTitle;

		[Token(Token = "0x4002E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _buttonAction;

		[Token(Token = "0x4002E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] _video;

		[Token(Token = "0x6003111")]
		[Address(RVA = "0xF9B020", Offset = "0xF9B020", VA = "0xF9B020")]
		private ActivityPostContent()
		{
		}

		[Token(Token = "0x6003112")]
		[Address(RVA = "0xF9B028", Offset = "0xF9B028", VA = "0xF9B028")]
		public static Builder CreateBuilder()
		{
			return null;
		}

		[Token(Token = "0x6003113")]
		[Address(RVA = "0xF9B080", Offset = "0xF9B080", VA = "0xF9B080", Slot = "4")]
		public AndroidJavaObject ToAjo()
		{
			return null;
		}
	}
	[Token(Token = "0x2000834")]
	public class Mention : IConvertableFromNative<Mention>
	{
		[Token(Token = "0x4002E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A80", Offset = "0xB78A80")]
		private string <UserId>k__BackingField;

		[Token(Token = "0x4002E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78A90", Offset = "0xB78A90")]
		private int <StartIndex>k__BackingField;

		[Token(Token = "0x4002E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78AA0", Offset = "0xB78AA0")]
		private int <EndIndex>k__BackingField;

		[Token(Token = "0x4002E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78AB0", Offset = "0xB78AB0")]
		private string <Type>k__BackingField;

		[Token(Token = "0x170006CE")]
		public string UserId
		{
			[Token(Token = "0x600311A")]
			[Address(RVA = "0x1CC2304", Offset = "0x1CC2304", VA = "0x1CC2304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EC8", Offset = "0xB88EC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600311B")]
			[Address(RVA = "0x1CC230C", Offset = "0x1CC230C", VA = "0x1CC230C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88ED8", Offset = "0xB88ED8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006CF")]
		public int StartIndex
		{
			[Token(Token = "0x600311C")]
			[Address(RVA = "0x1CC2314", Offset = "0x1CC2314", VA = "0x1CC2314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EE8", Offset = "0xB88EE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600311D")]
			[Address(RVA = "0x1CC231C", Offset = "0x1CC231C", VA = "0x1CC231C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88EF8", Offset = "0xB88EF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170006D0")]
		public int EndIndex
		{
			[Token(Token = "0x600311E")]
			[Address(RVA = "0x1CC2324", Offset = "0x1CC2324", VA = "0x1CC2324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F08", Offset = "0xB88F08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600311F")]
			[Address(RVA = "0x1CC232C", Offset = "0x1CC232C", VA = "0x1CC232C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F18", Offset = "0xB88F18")]
			private set
			{
			}
		}

		[Token(Token = "0x170006D1")]
		public string Type
		{
			[Token(Token = "0x6003120")]
			[Address(RVA = "0x1CC2334", Offset = "0x1CC2334", VA = "0x1CC2334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F28", Offset = "0xB88F28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003121")]
			[Address(RVA = "0x1CC233C", Offset = "0x1CC233C", VA = "0x1CC233C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F38", Offset = "0xB88F38")]
			private set
			{
			}
		}

		[Token(Token = "0x6003122")]
		[Address(RVA = "0x1CC2344", Offset = "0x1CC2344", VA = "0x1CC2344", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003123")]
		[Address(RVA = "0x1CC2504", Offset = "0x1CC2504", VA = "0x1CC2504")]
		public Mention()
		{
		}

		[Token(Token = "0x6003124")]
		[Address(RVA = "0x1CC250C", Offset = "0x1CC250C", VA = "0x1CC250C")]
		internal Mention(string userId, int startIndex, int endIndex, string type)
		{
		}

		[Token(Token = "0x6003125")]
		[Address(RVA = "0x1CC2570", Offset = "0x1CC2570", VA = "0x1CC2570")]
		protected bool Equals(Mention other)
		{
			return default(bool);
		}

		[Token(Token = "0x6003126")]
		[Address(RVA = "0x1CC25E8", Offset = "0x1CC25E8", VA = "0x1CC25E8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6003127")]
		[Address(RVA = "0x1CC2700", Offset = "0x1CC2700", VA = "0x1CC2700", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6003128")]
		[Address(RVA = "0x1CC2770", Offset = "0x1CC2770", VA = "0x1CC2770", Slot = "4")]
		public Mention ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000835")]
	public sealed class PostAuthor : PublicUser, IConvertableFromNative<PostAuthor>
	{
		[Token(Token = "0x4002E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78AC0", Offset = "0xB78AC0")]
		private bool <IsVerified>k__BackingField;

		[Token(Token = "0x170006D2")]
		public bool IsVerified
		{
			[Token(Token = "0x6003129")]
			[Address(RVA = "0xFF8EF8", Offset = "0xFF8EF8", VA = "0xFF8EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F48", Offset = "0xB88F48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600312A")]
			[Address(RVA = "0xFF8F00", Offset = "0xFF8F00", VA = "0xFF8F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F58", Offset = "0xB88F58")]
			private set
			{
			}
		}

		[Token(Token = "0x600312B")]
		[Address(RVA = "0xFF8F0C", Offset = "0xFF8F0C", VA = "0xFF8F0C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600312C")]
		[Address(RVA = "0xFF90D0", Offset = "0xFF90D0", VA = "0xFF90D0")]
		public PostAuthor()
		{
		}

		[Token(Token = "0x600312D")]
		[Address(RVA = "0xFF90E0", Offset = "0xFF90E0", VA = "0xFF90E0")]
		internal PostAuthor(Dictionary<string, string> publicProperties, string id, string displayName, string avatarUrl, Dictionary<string, string> identities, bool isVerified)
		{
		}

		[Token(Token = "0x600312E")]
		[Address(RVA = "0xFF91A0", Offset = "0xFF91A0", VA = "0xFF91A0")]
		private bool Equals(PostAuthor other)
		{
			return default(bool);
		}

		[Token(Token = "0x600312F")]
		[Address(RVA = "0xFF92BC", Offset = "0xFF92BC", VA = "0xFF92BC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6003130")]
		[Address(RVA = "0xFF934C", Offset = "0xFF934C", VA = "0xFF934C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6003131")]
		[Address(RVA = "0xFF9478", Offset = "0xFF9478", VA = "0xFF9478", Slot = "5")]
		public new PostAuthor ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000836")]
	public enum ReportingReason
	{
		[Token(Token = "0x4002E33")]
		Spam,
		[Token(Token = "0x4002E34")]
		InappropriateContent
	}
	[Token(Token = "0x2000837")]
	public static class ErrorCodes
	{
		[Token(Token = "0x4002E35")]
		public const int Unknown = -1;

		[Token(Token = "0x4002E36")]
		public const int CompositeException = 100;

		[Token(Token = "0x4002E37")]
		public const int ActionDenied = 201;

		[Token(Token = "0x4002E38")]
		public const int SdkNotInitialized = 202;

		[Token(Token = "0x4002E39")]
		public const int SdkInitializationFailed = 203;

		[Token(Token = "0x4002E3A")]
		public const int IllegalArgument = 204;

		[Token(Token = "0x4002E3B")]
		public const int IllegalState = 205;

		[Token(Token = "0x4002E3C")]
		public const int NullPointer = 206;

		[Token(Token = "0x4002E3D")]
		public const int NotFound = 207;

		[Token(Token = "0x4002E3E")]
		public const int UserIsBanned = 208;

		[Token(Token = "0x4002E3F")]
		public const int PlatformDisabled = 209;

		[Token(Token = "0x4002E40")]
		public const int AppSignatureMismatch = 210;

		[Token(Token = "0x4002E41")]
		public const int UserIdTokenMismatch = 211;

		[Token(Token = "0x4002E42")]
		public const int InviteCancelled = 100;

		[Token(Token = "0x4002E43")]
		public const int UserConflict = 101;

		[Token(Token = "0x4002E44")]
		public const int NoReferrerMatch = 102;

		[Token(Token = "0x4002E45")]
		public const int OOM = 103;

		[Token(Token = "0x4002E46")]
		public const int ConnectionTimeout = 701;

		[Token(Token = "0x4002E47")]
		public const int NoInternet = 702;

		[Token(Token = "0x4002E48")]
		public const int TransportClosed = 703;

		[Token(Token = "0x4002E49")]
		public const int MediaUploadFailed = 800;

		[Token(Token = "0x4002E4A")]
		public const int MediaUploadResourceNotReady = 801;
	}
	[Token(Token = "0x2000838")]
	public sealed class GetSocialError : IConvertableFromNative<GetSocialError>
	{
		[Token(Token = "0x4002E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78AD0", Offset = "0xB78AD0")]
		private int <ErrorCode>k__BackingField;

		[Token(Token = "0x4002E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78AE0", Offset = "0xB78AE0")]
		private string <Message>k__BackingField;

		[Token(Token = "0x170006D3")]
		public int ErrorCode
		{
			[Token(Token = "0x6003132")]
			[Address(RVA = "0x2285B18", Offset = "0x2285B18", VA = "0x2285B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F68", Offset = "0xB88F68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003133")]
			[Address(RVA = "0x2285B20", Offset = "0x2285B20", VA = "0x2285B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F78", Offset = "0xB88F78")]
			private set
			{
			}
		}

		[Token(Token = "0x170006D4")]
		public string Message
		{
			[Token(Token = "0x6003134")]
			[Address(RVA = "0x2285B28", Offset = "0x2285B28", VA = "0x2285B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F88", Offset = "0xB88F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003135")]
			[Address(RVA = "0x2285B30", Offset = "0x2285B30", VA = "0x2285B30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88F98", Offset = "0xB88F98")]
			private set
			{
			}
		}

		[Token(Token = "0x6003136")]
		[Address(RVA = "0x2285B38", Offset = "0x2285B38", VA = "0x2285B38")]
		public GetSocialError(int errorCode, string message)
		{
		}

		[Token(Token = "0x6003137")]
		[Address(RVA = "0x2285B7C", Offset = "0x2285B7C", VA = "0x2285B7C")]
		public GetSocialError(string message)
		{
		}

		[Token(Token = "0x6003138")]
		[Address(RVA = "0x2285BB8", Offset = "0x2285BB8", VA = "0x2285BB8")]
		public GetSocialError()
		{
		}

		[Token(Token = "0x6003139")]
		[Address(RVA = "0x2285BF0", Offset = "0x2285BF0", VA = "0x2285BF0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600313A")]
		[Address(RVA = "0x2285C7C", Offset = "0x2285C7C", VA = "0x2285C7C", Slot = "4")]
		public GetSocialError ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000839")]
	public delegate bool NotificationListener(Notification notification, bool wasClicked);
	[Token(Token = "0x200083A")]
	public static class GetSocial
	{
		[Token(Token = "0x200083B")]
		public static class User
		{
			[Token(Token = "0x170006DA")]
			public static string Id
			{
				[Token(Token = "0x6003168")]
				[Address(RVA = "0xFCE108", Offset = "0xFCE108", VA = "0xFCE108")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006DB")]
			public static bool IsAnonymous
			{
				[Token(Token = "0x6003169")]
				[Address(RVA = "0xFCE1E8", Offset = "0xFCE1E8", VA = "0xFCE1E8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170006DC")]
			public static Dictionary<string, string> AuthIdentities
			{
				[Token(Token = "0x600316A")]
				[Address(RVA = "0xFCE2C8", Offset = "0xFCE2C8", VA = "0xFCE2C8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006DD")]
			public static string DisplayName
			{
				[Token(Token = "0x600316B")]
				[Address(RVA = "0xFCE3A8", Offset = "0xFCE3A8", VA = "0xFCE3A8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006DE")]
			public static string AvatarUrl
			{
				[Token(Token = "0x600316C")]
				[Address(RVA = "0xFCE488", Offset = "0xFCE488", VA = "0xFCE488")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006DF")]
			public static Dictionary<string, string> AllPublicProperties
			{
				[Token(Token = "0x6003179")]
				[Address(RVA = "0xFCF120", Offset = "0xFCF120", VA = "0xFCF120")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006E0")]
			public static Dictionary<string, string> AllPrivateProperties
			{
				[Token(Token = "0x600317A")]
				[Address(RVA = "0xFCF200", Offset = "0xFCF200", VA = "0xFCF200")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600316D")]
			[Address(RVA = "0xFCE568", Offset = "0xFCE568", VA = "0xFCE568")]
			public static void Reset(Action onSuccess, Action<GetSocialError> onError)
			{
			}

			[Token(Token = "0x600316E")]
			[Address(RVA = "0xFCE660", Offset = "0xFCE660", VA = "0xFCE660")]
			public static void SetDisplayName(string displayName, Action onComplete, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x600316F")]
			[Address(RVA = "0xFCE760", Offset = "0xFCE760", VA = "0xFCE760")]
			public static void SetAvatarUrl(string avatarUrl, Action onComplete, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003170")]
			[Address(RVA = "0xFCE860", Offset = "0xFCE860", VA = "0xFCE860")]
			public static void SetAvatar(Texture2D avatar, Action onComplete, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003171")]
			[Address(RVA = "0xFCE960", Offset = "0xFCE960", VA = "0xFCE960")]
			public static void SetPublicProperty(string key, string value, Action onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003172")]
			[Address(RVA = "0xFCEA70", Offset = "0xFCEA70", VA = "0xFCEA70")]
			public static void SetPrivateProperty(string key, string value, Action onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003173")]
			[Address(RVA = "0xFCEB80", Offset = "0xFCEB80", VA = "0xFCEB80")]
			public static void RemovePublicProperty(string key, Action onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003174")]
			[Address(RVA = "0xFCEC80", Offset = "0xFCEC80", VA = "0xFCEC80")]
			public static void RemovePrivateProperty(string key, Action onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003175")]
			[Address(RVA = "0xFCED80", Offset = "0xFCED80", VA = "0xFCED80")]
			public static string GetPublicProperty(string key)
			{
				return null;
			}

			[Token(Token = "0x6003176")]
			[Address(RVA = "0xFCEE68", Offset = "0xFCEE68", VA = "0xFCEE68")]
			public static string GetPrivateProperty(string key)
			{
				return null;
			}

			[Token(Token = "0x6003177")]
			[Address(RVA = "0xFCEF50", Offset = "0xFCEF50", VA = "0xFCEF50")]
			public static bool HasPublicProperty(string key)
			{
				return default(bool);
			}

			[Token(Token = "0x6003178")]
			[Address(RVA = "0xFCF038", Offset = "0xFCF038", VA = "0xFCF038")]
			public static bool HasPrivateProperty(string key)
			{
				return default(bool);
			}

			[Token(Token = "0x600317B")]
			[Address(RVA = "0xFCF2E0", Offset = "0xFCF2E0", VA = "0xFCF2E0")]
			public static void AddAuthIdentity(AuthIdentity authIdentity, Action onComplete, Action<GetSocialError> onFailure, Action<ConflictUser> onConflict)
			{
			}

			[Token(Token = "0x600317C")]
			[Address(RVA = "0xFCF490", Offset = "0xFCF490", VA = "0xFCF490")]
			public static void RemoveAuthIdentity(string providerId, Action onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x600317D")]
			[Address(RVA = "0xFCF608", Offset = "0xFCF608", VA = "0xFCF608")]
			public static void SwitchUser(AuthIdentity authIdentity, Action onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x600317E")]
			[Address(RVA = "0xFCF780", Offset = "0xFCF780", VA = "0xFCF780")]
			public static void AddFriend(string userId, Action<int> onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x600317F")]
			[Address(RVA = "0xFCF8F8", Offset = "0xFCF8F8", VA = "0xFCF8F8")]
			public static void AddFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action<int> onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003180")]
			[Address(RVA = "0xFCFAA8", Offset = "0xFCFAA8", VA = "0xFCFAA8")]
			public static void SetFriends(List<string> userIds, Action onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003181")]
			[Address(RVA = "0xFCFC20", Offset = "0xFCFC20", VA = "0xFCFC20")]
			public static void SetFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003182")]
			[Address(RVA = "0xFCFDD0", Offset = "0xFCFDD0", VA = "0xFCFDD0")]
			public static void RemoveFriend(string userId, Action<int> onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003183")]
			[Address(RVA = "0xFCFF48", Offset = "0xFCFF48", VA = "0xFCFF48")]
			public static void RemoveFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action<int> onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003184")]
			[Address(RVA = "0xFD00F8", Offset = "0xFD00F8", VA = "0xFD00F8")]
			public static void IsFriend(string userId, Action<bool> onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003185")]
			[Address(RVA = "0xFD0270", Offset = "0xFD0270", VA = "0xFD0270")]
			public static void GetFriendsCount(Action<int> onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003186")]
			[Address(RVA = "0xFD03B8", Offset = "0xFD03B8", VA = "0xFD03B8")]
			public static void GetFriends(int offset, int limit, Action<List<PublicUser>> onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003187")]
			[Address(RVA = "0xFD0518", Offset = "0xFD0518", VA = "0xFD0518")]
			public static void GetFriendsReferences(Action<List<UserReference>> onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003188")]
			[Address(RVA = "0xFD0660", Offset = "0xFD0660", VA = "0xFD0660")]
			public static void GetSuggestedFriends(int offset, int limit, Action<List<SuggestedFriend>> onSuccess, Action<GetSocialError> onFailure)
			{
			}

			[Token(Token = "0x6003189")]
			[Address(RVA = "0xFD07C0", Offset = "0xFD07C0", VA = "0xFD07C0")]
			public static bool SetOnUserChangedListener(Action onUserChanged)
			{
				return default(bool);
			}

			[Token(Token = "0x600318A")]
			[Address(RVA = "0xFD08D0", Offset = "0xFD08D0", VA = "0xFD08D0")]
			public static bool RemoveOnUserChangedListener()
			{
				return default(bool);
			}

			[Token(Token = "0x600318B")]
			[Address(RVA = "0xFD09B0", Offset = "0xFD09B0", VA = "0xFD09B0")]
			public static void GetNotifications(NotificationsQuery query, Action<List<Notification>> onSuccess, Action<GetSocialError> onError)
			{
			}

			[Token(Token = "0x600318C")]
			[Address(RVA = "0xFD0B28", Offset = "0xFD0B28", VA = "0xFD0B28")]
			public static void GetNotificationsCount(NotificationsCountQuery query, Action<int> onSuccess, Action<GetSocialError> onError)
			{
			}

			[Token(Token = "0x600318D")]
			[Address(RVA = "0xFD0CA0", Offset = "0xFD0CA0", VA = "0xFD0CA0")]
			public static void SetNotificationsRead(List<string> notificationsIds, bool isRead, Action onSuccess, Action<GetSocialError> onError)
			{
			}

			[Token(Token = "0x600318E")]
			[Address(RVA = "0xFD0E28", Offset = "0xFD0E28", VA = "0xFD0E28")]
			public static void SetPushNotificationsEnabled(bool isEnabled, Action onSuccess, Action<GetSocialError> onError)
			{
			}

			[Token(Token = "0x600318F")]
			[Address(RVA = "0xFD0F78", Offset = "0xFD0F78", VA = "0xFD0F78")]
			public static void IsPushNotificationsEnabled(Action<bool> onSuccess, Action<GetSocialError> onError)
			{
			}
		}

		[Token(Token = "0x200083C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60B44", Offset = "0xB60B44")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4002E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NotificationListener listener;

			[Token(Token = "0x6003190")]
			[Address(RVA = "0xFCE0E0", Offset = "0xFCE0E0", VA = "0xFCE0E0")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6003191")]
			[Address(RVA = "0xFCE0E8", Offset = "0xFCE0E8", VA = "0xFCE0E8")]
			internal bool <SetNotificationListener>b__0(Notification notification, bool wasClicked)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Action<GetSocialError> _globalErrorListener;

		[Token(Token = "0x4002E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Action<GetSocialError> _userGlobalErrorListener;

		[Token(Token = "0x4002E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IGetSocialNativeBridge _getSocialImpl;

		[Token(Token = "0x170006D5")]
		private static IGetSocialNativeBridge GetSocialImpl
		{
			[Token(Token = "0x600313F")]
			[Address(RVA = "0x1268214", Offset = "0x1268214", VA = "0x1268214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D6")]
		public static string UnitySdkVersion
		{
			[Token(Token = "0x6003142")]
			[Address(RVA = "0x1268494", Offset = "0x1268494", VA = "0x1268494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D7")]
		public static string NativeSdkVersion
		{
			[Token(Token = "0x6003143")]
			[Address(RVA = "0x1268604", Offset = "0x1268604", VA = "0x1268604")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D8")]
		public static bool IsInitialized
		{
			[Token(Token = "0x6003147")]
			[Address(RVA = "0x1268988", Offset = "0x1268988", VA = "0x1268988")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006D9")]
		public static InviteChannel[] InviteChannels
		{
			[Token(Token = "0x600314D")]
			[Address(RVA = "0x1268F64", Offset = "0x1268F64", VA = "0x1268F64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003140")]
		[Address(RVA = "0x12684D8", Offset = "0x12684D8", VA = "0x12684D8")]
		private static void OnGlobalError(GetSocialError error)
		{
		}

		[Token(Token = "0x6003141")]
		[Address(RVA = "0x1268598", Offset = "0x1268598", VA = "0x1268598")]
		internal static void InjectBridgeInternal(IGetSocialNativeBridge bridge)
		{
		}

		[Token(Token = "0x6003144")]
		[Address(RVA = "0x12686E0", Offset = "0x12686E0", VA = "0x12686E0")]
		public static void Init()
		{
		}

		[Token(Token = "0x6003145")]
		[Address(RVA = "0x12687C0", Offset = "0x12687C0", VA = "0x12687C0")]
		public static void Init(string appId)
		{
		}

		[Token(Token = "0x6003146")]
		[Address(RVA = "0x12688A4", Offset = "0x12688A4", VA = "0x12688A4")]
		public static void WhenInitialized(Action action)
		{
		}

		[Token(Token = "0x6003148")]
		[Address(RVA = "0x1268A64", Offset = "0x1268A64", VA = "0x1268A64")]
		public static bool SetGlobalErrorListener(Action<GetSocialError> onError)
		{
			return default(bool);
		}

		[Token(Token = "0x6003149")]
		[Address(RVA = "0x1268BA0", Offset = "0x1268BA0", VA = "0x1268BA0")]
		public static bool RemoveGlobalErrorListener()
		{
			return default(bool);
		}

		[Token(Token = "0x600314A")]
		[Address(RVA = "0x1268C98", Offset = "0x1268C98", VA = "0x1268C98")]
		public static string GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x600314B")]
		[Address(RVA = "0x1268D74", Offset = "0x1268D74", VA = "0x1268D74")]
		public static bool SetLanguage(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x600314C")]
		[Address(RVA = "0x1268E80", Offset = "0x1268E80", VA = "0x1268E80")]
		public static bool IsInviteChannelAvailable(string channelId)
		{
			return default(bool);
		}

		[Token(Token = "0x600314E")]
		[Address(RVA = "0x1269040", Offset = "0x1269040", VA = "0x1269040")]
		public static void SendInvite(string channelId, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600314F")]
		[Address(RVA = "0x1269214", Offset = "0x1269214", VA = "0x1269214")]
		public static void SendInvite(string channelId, InviteContent customInviteContent, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003150")]
		[Address(RVA = "0x12693C8", Offset = "0x12693C8", VA = "0x12693C8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB88FA8", Offset = "0xB88FA8")]
		public static void SendInvite(string channelId, InviteContent customInviteContent, CustomReferralData customReferralData, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003151")]
		[Address(RVA = "0x1269494", Offset = "0x1269494", VA = "0x1269494")]
		public static void SendInvite(string channelId, InviteContent customInviteContent, LinkParams linkParams, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003152")]
		[Address(RVA = "0x1269658", Offset = "0x1269658", VA = "0x1269658")]
		public static bool RegisterInviteChannelPlugin(string channelId, InviteChannelPlugin inviteChannelPlugin)
		{
			return default(bool);
		}

		[Token(Token = "0x6003153")]
		[Address(RVA = "0x126979C", Offset = "0x126979C", VA = "0x126979C")]
		public static void GetReferralData(Action<ReferralData> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003154")]
		[Address(RVA = "0x12698E0", Offset = "0x12698E0", VA = "0x12698E0")]
		public static void GetReferredUsers(Action<List<ReferredUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003155")]
		[Address(RVA = "0x1269A24", Offset = "0x1269A24", VA = "0x1269A24")]
		public static void CreateInviteLink(LinkParams linkParams, Action<string> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003156")]
		[Address(RVA = "0x1269B70", Offset = "0x1269B70", VA = "0x1269B70")]
		public static void RegisterForPushNotifications()
		{
		}

		[Token(Token = "0x6003157")]
		[Address(RVA = "0x1269C4C", Offset = "0x1269C4C", VA = "0x1269C4C")]
		public static void SetNotificationListener(NotificationListener listener)
		{
		}

		[Token(Token = "0x6003158")]
		[Address(RVA = "0x1269DFC", Offset = "0x1269DFC", VA = "0x1269DFC")]
		public static void GetGlobalFeedAnnouncements(Action<List<ActivityPost>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003159")]
		[Address(RVA = "0x1269F5C", Offset = "0x1269F5C", VA = "0x1269F5C")]
		public static void GetAnnouncements(string feed, Action<List<ActivityPost>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600315A")]
		[Address(RVA = "0x126A0D0", Offset = "0x126A0D0", VA = "0x126A0D0")]
		public static void GetActivities(ActivitiesQuery query, Action<List<ActivityPost>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600315B")]
		[Address(RVA = "0x126A244", Offset = "0x126A244", VA = "0x126A244")]
		public static void GetActivity(string activityId, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600315C")]
		[Address(RVA = "0x126A390", Offset = "0x126A390", VA = "0x126A390")]
		public static void PostActivityToGlobalFeed(ActivityPostContent content, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600315D")]
		[Address(RVA = "0x126A500", Offset = "0x126A500", VA = "0x126A500")]
		public static void PostActivityToFeed(string feed, ActivityPostContent content, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600315E")]
		[Address(RVA = "0x126A684", Offset = "0x126A684", VA = "0x126A684")]
		public static void PostCommentToActivity(string activityId, ActivityPostContent comment, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600315F")]
		[Address(RVA = "0x126A808", Offset = "0x126A808", VA = "0x126A808")]
		public static void LikeActivity(string activityId, bool isLiked, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003160")]
		[Address(RVA = "0x126A964", Offset = "0x126A964", VA = "0x126A964")]
		public static void GetActivityLikers(string activityId, int offset, int limit, Action<List<PublicUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003161")]
		[Address(RVA = "0x126AAC8", Offset = "0x126AAC8", VA = "0x126AAC8")]
		public static void ReportActivity(string activityId, ReportingReason reportingReason, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003162")]
		[Address(RVA = "0x126AC24", Offset = "0x126AC24", VA = "0x126AC24")]
		public static void DeleteActivity(string activityId, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003163")]
		[Address(RVA = "0x126AD70", Offset = "0x126AD70", VA = "0x126AD70")]
		public static void GetUserById(string userId, Action<PublicUser> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003164")]
		[Address(RVA = "0x126AEBC", Offset = "0x126AEBC", VA = "0x126AEBC")]
		public static void GetUserByAuthIdentity(string providerId, string providerUserId, Action<PublicUser> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003165")]
		[Address(RVA = "0x126B068", Offset = "0x126B068", VA = "0x126B068")]
		public static void GetUsersByAuthIdentities(string providerId, List<string> providerUserIds, Action<Dictionary<string, PublicUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003166")]
		[Address(RVA = "0x126B214", Offset = "0x126B214", VA = "0x126B214")]
		public static void FindUsers(UsersQuery query, Action<List<UserReference>> onSuccess, Action<GetSocialError> onFailure)
		{
		}
	}
	[Token(Token = "0x200083D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB60B54", Offset = "0xB60B54")]
	public sealed class CustomReferralData : Dictionary<string, string>, IConvertableFromNative<CustomReferralData>, IConvertableToNative
	{
		[Token(Token = "0x6003192")]
		[Address(RVA = "0x108BEB0", Offset = "0x108BEB0", VA = "0x108BEB0")]
		public CustomReferralData()
		{
		}

		[Token(Token = "0x6003193")]
		[Address(RVA = "0x108BEFC", Offset = "0x108BEFC", VA = "0x108BEFC")]
		public CustomReferralData(Dictionary<string, string> data)
		{
		}

		[Token(Token = "0x6003194")]
		[Address(RVA = "0x108BF58", Offset = "0x108BF58", VA = "0x108BF58")]
		public CustomReferralData(IDictionary<string, object> data)
		{
		}

		[Token(Token = "0x6003195")]
		[Address(RVA = "0x108C294", Offset = "0x108C294", VA = "0x108C294", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003196")]
		[Address(RVA = "0x108C308", Offset = "0x108C308", VA = "0x108C308")]
		private bool Equals(CustomReferralData other)
		{
			return default(bool);
		}

		[Token(Token = "0x6003197")]
		[Address(RVA = "0x108C364", Offset = "0x108C364", VA = "0x108C364", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6003198")]
		[Address(RVA = "0x108C3F4", Offset = "0x108C3F4", VA = "0x108C3F4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6003199")]
		[Address(RVA = "0x108C3FC", Offset = "0x108C3FC", VA = "0x108C3FC", Slot = "44")]
		public AndroidJavaObject ToAjo()
		{
			return null;
		}

		[Token(Token = "0x600319A")]
		[Address(RVA = "0x108C50C", Offset = "0x108C50C", VA = "0x108C50C", Slot = "43")]
		public CustomReferralData ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x200083E")]
	public sealed class InviteChannel : IConvertableFromNative<InviteChannel>
	{
		[Token(Token = "0x4002E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78AF0", Offset = "0xB78AF0")]
		private string <Id>k__BackingField;

		[Token(Token = "0x4002E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B00", Offset = "0xB78B00")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4002E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B10", Offset = "0xB78B10")]
		private string <IconImageUrl>k__BackingField;

		[Token(Token = "0x4002E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B20", Offset = "0xB78B20")]
		private int <DisplayOrder>k__BackingField;

		[Token(Token = "0x4002E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B30", Offset = "0xB78B30")]
		private bool <IsEnabled>k__BackingField;

		[Token(Token = "0x170006E1")]
		public string Id
		{
			[Token(Token = "0x600319B")]
			[Address(RVA = "0x100F0A0", Offset = "0x100F0A0", VA = "0x100F0A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88FE0", Offset = "0xB88FE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600319C")]
			[Address(RVA = "0x100F0A8", Offset = "0x100F0A8", VA = "0x100F0A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB88FF0", Offset = "0xB88FF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E2")]
		public string Name
		{
			[Token(Token = "0x600319D")]
			[Address(RVA = "0x100F0B0", Offset = "0x100F0B0", VA = "0x100F0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89000", Offset = "0xB89000")]
			get
			{
				return null;
			}
			[Token(Token = "0x600319E")]
			[Address(RVA = "0x100F0B8", Offset = "0x100F0B8", VA = "0x100F0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89010", Offset = "0xB89010")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E3")]
		public string IconImageUrl
		{
			[Token(Token = "0x600319F")]
			[Address(RVA = "0x100F0C0", Offset = "0x100F0C0", VA = "0x100F0C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89020", Offset = "0xB89020")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031A0")]
			[Address(RVA = "0x100F0C8", Offset = "0x100F0C8", VA = "0x100F0C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89030", Offset = "0xB89030")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E4")]
		public int DisplayOrder
		{
			[Token(Token = "0x60031A1")]
			[Address(RVA = "0x100F0D0", Offset = "0x100F0D0", VA = "0x100F0D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89040", Offset = "0xB89040")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60031A2")]
			[Address(RVA = "0x100F0D8", Offset = "0x100F0D8", VA = "0x100F0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89050", Offset = "0xB89050")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E5")]
		public bool IsEnabled
		{
			[Token(Token = "0x60031A3")]
			[Address(RVA = "0x100F0E0", Offset = "0x100F0E0", VA = "0x100F0E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89060", Offset = "0xB89060")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031A4")]
			[Address(RVA = "0x100F0E8", Offset = "0x100F0E8", VA = "0x100F0E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89070", Offset = "0xB89070")]
			private set
			{
			}
		}

		[Token(Token = "0x60031A5")]
		[Address(RVA = "0x100F0F4", Offset = "0x100F0F4", VA = "0x100F0F4")]
		internal InviteChannel(string id, string name, string iconImageUrl, int displayOrder, bool isEnabled)
		{
		}

		[Token(Token = "0x60031A6")]
		[Address(RVA = "0x100F178", Offset = "0x100F178", VA = "0x100F178")]
		public InviteChannel()
		{
		}

		[Token(Token = "0x60031A7")]
		[Address(RVA = "0x100F180", Offset = "0x100F180", VA = "0x100F180", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60031A8")]
		[Address(RVA = "0x100F384", Offset = "0x100F384", VA = "0x100F384")]
		private bool Equals(InviteChannel other)
		{
			return default(bool);
		}

		[Token(Token = "0x60031A9")]
		[Address(RVA = "0x100F41C", Offset = "0x100F41C", VA = "0x100F41C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60031AA")]
		[Address(RVA = "0x100F4AC", Offset = "0x100F4AC", VA = "0x100F4AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60031AB")]
		[Address(RVA = "0x100F578", Offset = "0x100F578", VA = "0x100F578", Slot = "4")]
		public InviteChannel ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x200083F")]
	public sealed class InviteContent : IConvertableToNative
	{
		[Token(Token = "0x2000840")]
		public class Builder
		{
			[Token(Token = "0x4002E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly InviteContent _inviteContent;

			[Token(Token = "0x60031BE")]
			[Address(RVA = "0xFD5924", Offset = "0xFD5924", VA = "0xFD5924")]
			protected internal Builder()
			{
			}

			[Token(Token = "0x60031BF")]
			[Address(RVA = "0xFD5994", Offset = "0xFD5994", VA = "0xFD5994")]
			public Builder WithSubject(string subject)
			{
				return null;
			}

			[Token(Token = "0x60031C0")]
			[Address(RVA = "0xFD59C8", Offset = "0xFD59C8", VA = "0xFD59C8")]
			public Builder WithText(string text)
			{
				return null;
			}

			[Token(Token = "0x60031C1")]
			[Address(RVA = "0xFD59FC", Offset = "0xFD59FC", VA = "0xFD59FC")]
			public Builder WithImageUrl(string imageUrl)
			{
				return null;
			}

			[Token(Token = "0x60031C2")]
			[Address(RVA = "0xFD5A30", Offset = "0xFD5A30", VA = "0xFD5A30")]
			public Builder WithImage(Texture2D image)
			{
				return null;
			}

			[Token(Token = "0x60031C3")]
			[Address(RVA = "0xFD5A64", Offset = "0xFD5A64", VA = "0xFD5A64")]
			public Builder WithVideo(byte[] videoBytes)
			{
				return null;
			}

			[Token(Token = "0x60031C4")]
			[Address(RVA = "0xFD5A98", Offset = "0xFD5A98", VA = "0xFD5A98")]
			public InviteContent Build()
			{
				return null;
			}
		}

		[Token(Token = "0x4002E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B40", Offset = "0xB78B40")]
		private string <ImageUrl>k__BackingField;

		[Token(Token = "0x4002E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B50", Offset = "0xB78B50")]
		private Texture2D <Image>k__BackingField;

		[Token(Token = "0x4002E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B60", Offset = "0xB78B60")]
		private string <Subject>k__BackingField;

		[Token(Token = "0x4002E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B70", Offset = "0xB78B70")]
		private string <Text>k__BackingField;

		[Token(Token = "0x4002E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B80", Offset = "0xB78B80")]
		private string <GifUrl>k__BackingField;

		[Token(Token = "0x4002E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78B90", Offset = "0xB78B90")]
		private string <VideoUrl>k__BackingField;

		[Token(Token = "0x4002E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BA0", Offset = "0xB78BA0")]
		private byte[] <Video>k__BackingField;

		[Token(Token = "0x170006E6")]
		public string ImageUrl
		{
			[Token(Token = "0x60031AD")]
			[Address(RVA = "0x1010010", Offset = "0x1010010", VA = "0x1010010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89080", Offset = "0xB89080")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031AE")]
			[Address(RVA = "0x1010018", Offset = "0x1010018", VA = "0x1010018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89090", Offset = "0xB89090")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E7")]
		public Texture2D Image
		{
			[Token(Token = "0x60031AF")]
			[Address(RVA = "0x1010020", Offset = "0x1010020", VA = "0x1010020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890A0", Offset = "0xB890A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031B0")]
			[Address(RVA = "0x1010028", Offset = "0x1010028", VA = "0x1010028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890B0", Offset = "0xB890B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E8")]
		public string Subject
		{
			[Token(Token = "0x60031B1")]
			[Address(RVA = "0x1010030", Offset = "0x1010030", VA = "0x1010030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890C0", Offset = "0xB890C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031B2")]
			[Address(RVA = "0x1010038", Offset = "0x1010038", VA = "0x1010038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890D0", Offset = "0xB890D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006E9")]
		public string Text
		{
			[Token(Token = "0x60031B3")]
			[Address(RVA = "0x1010040", Offset = "0x1010040", VA = "0x1010040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890E0", Offset = "0xB890E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031B4")]
			[Address(RVA = "0x1010048", Offset = "0x1010048", VA = "0x1010048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB890F0", Offset = "0xB890F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EA")]
		public string GifUrl
		{
			[Token(Token = "0x60031B5")]
			[Address(RVA = "0x1010050", Offset = "0x1010050", VA = "0x1010050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89100", Offset = "0xB89100")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031B6")]
			[Address(RVA = "0x1010058", Offset = "0x1010058", VA = "0x1010058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89110", Offset = "0xB89110")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EB")]
		public string VideoUrl
		{
			[Token(Token = "0x60031B7")]
			[Address(RVA = "0x1010060", Offset = "0x1010060", VA = "0x1010060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89120", Offset = "0xB89120")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031B8")]
			[Address(RVA = "0x1010068", Offset = "0x1010068", VA = "0x1010068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89130", Offset = "0xB89130")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EC")]
		public byte[] Video
		{
			[Token(Token = "0x60031B9")]
			[Address(RVA = "0x1010070", Offset = "0x1010070", VA = "0x1010070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89140", Offset = "0xB89140")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031BA")]
			[Address(RVA = "0x1010078", Offset = "0x1010078", VA = "0x1010078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89150", Offset = "0xB89150")]
			private set
			{
			}
		}

		[Token(Token = "0x60031AC")]
		[Address(RVA = "0x100FFB8", Offset = "0x100FFB8", VA = "0x100FFB8")]
		public static Builder CreateBuilder()
		{
			return null;
		}

		[Token(Token = "0x60031BB")]
		[Address(RVA = "0x1010080", Offset = "0x1010080", VA = "0x1010080", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60031BC")]
		[Address(RVA = "0x10102D8", Offset = "0x10102D8", VA = "0x10102D8", Slot = "4")]
		public AndroidJavaObject ToAjo()
		{
			return null;
		}

		[Token(Token = "0x60031BD")]
		[Address(RVA = "0x1010920", Offset = "0x1010920", VA = "0x1010920")]
		public InviteContent()
		{
		}
	}
	[Token(Token = "0x2000841")]
	public sealed class InvitePackage : IConvertableFromNative<InvitePackage>
	{
		[Token(Token = "0x4002E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BB0", Offset = "0xB78BB0")]
		private string <Subject>k__BackingField;

		[Token(Token = "0x4002E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BC0", Offset = "0xB78BC0")]
		private string <Text>k__BackingField;

		[Token(Token = "0x4002E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BD0", Offset = "0xB78BD0")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x4002E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BE0", Offset = "0xB78BE0")]
		private string <ReferralDataUrl>k__BackingField;

		[Token(Token = "0x4002E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78BF0", Offset = "0xB78BF0")]
		private Texture2D <Image>k__BackingField;

		[Token(Token = "0x4002E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C00", Offset = "0xB78C00")]
		private string <ImageUrl>k__BackingField;

		[Token(Token = "0x170006ED")]
		public string Subject
		{
			[Token(Token = "0x60031C5")]
			[Address(RVA = "0x1010928", Offset = "0x1010928", VA = "0x1010928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89160", Offset = "0xB89160")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031C6")]
			[Address(RVA = "0x1010930", Offset = "0x1010930", VA = "0x1010930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89170", Offset = "0xB89170")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EE")]
		public string Text
		{
			[Token(Token = "0x60031C7")]
			[Address(RVA = "0x1010938", Offset = "0x1010938", VA = "0x1010938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89180", Offset = "0xB89180")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031C8")]
			[Address(RVA = "0x1010940", Offset = "0x1010940", VA = "0x1010940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89190", Offset = "0xB89190")]
			private set
			{
			}
		}

		[Token(Token = "0x170006EF")]
		public string UserName
		{
			[Token(Token = "0x60031C9")]
			[Address(RVA = "0x1010948", Offset = "0x1010948", VA = "0x1010948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891A0", Offset = "0xB891A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031CA")]
			[Address(RVA = "0x1010950", Offset = "0x1010950", VA = "0x1010950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891B0", Offset = "0xB891B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F0")]
		public string ReferralDataUrl
		{
			[Token(Token = "0x60031CB")]
			[Address(RVA = "0x1010958", Offset = "0x1010958", VA = "0x1010958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891C0", Offset = "0xB891C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031CC")]
			[Address(RVA = "0x1010960", Offset = "0x1010960", VA = "0x1010960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891D0", Offset = "0xB891D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F1")]
		public Texture2D Image
		{
			[Token(Token = "0x60031CD")]
			[Address(RVA = "0x1010968", Offset = "0x1010968", VA = "0x1010968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891E0", Offset = "0xB891E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031CE")]
			[Address(RVA = "0x1010970", Offset = "0x1010970", VA = "0x1010970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB891F0", Offset = "0xB891F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F2")]
		public string ImageUrl
		{
			[Token(Token = "0x60031CF")]
			[Address(RVA = "0x1010978", Offset = "0x1010978", VA = "0x1010978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89200", Offset = "0xB89200")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031D0")]
			[Address(RVA = "0x1010980", Offset = "0x1010980", VA = "0x1010980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89210", Offset = "0xB89210")]
			private set
			{
			}
		}

		[Token(Token = "0x60031D1")]
		[Address(RVA = "0x1010988", Offset = "0x1010988", VA = "0x1010988")]
		public InvitePackage()
		{
		}

		[Token(Token = "0x60031D2")]
		[Address(RVA = "0x1010990", Offset = "0x1010990", VA = "0x1010990")]
		internal InvitePackage(string subject, string text, string userName, string referralDataUrl, Texture2D image, string imageUrl)
		{
		}

		[Token(Token = "0x60031D3")]
		[Address(RVA = "0x1010A40", Offset = "0x1010A40", VA = "0x1010A40", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60031D4")]
		[Address(RVA = "0x1010C98", Offset = "0x1010C98", VA = "0x1010C98")]
		private bool Equals(InvitePackage other)
		{
			return default(bool);
		}

		[Token(Token = "0x60031D5")]
		[Address(RVA = "0x1010D40", Offset = "0x1010D40", VA = "0x1010D40", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60031D6")]
		[Address(RVA = "0x1010DD0", Offset = "0x1010DD0", VA = "0x1010DD0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60031D7")]
		[Address(RVA = "0x1010F44", Offset = "0x1010F44", VA = "0x1010F44", Slot = "4")]
		public InvitePackage ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000842")]
	public sealed class LinkParams : Dictionary<string, object>, IConvertableFromNative<LinkParams>, IConvertableToNative
	{
		[Token(Token = "0x4002E64")]
		public const string KeyCustomTitle = "$title";

		[Token(Token = "0x4002E65")]
		public const string KeyCustomDescription = "$description";

		[Token(Token = "0x4002E66")]
		public const string KeyCustomImage = "$image";

		[Token(Token = "0x4002E67")]
		public const string KeyCustomYouTubeVideo = "$youtube_video";

		[Token(Token = "0x60031D8")]
		[Address(RVA = "0x10C6CE8", Offset = "0x10C6CE8", VA = "0x10C6CE8")]
		public LinkParams()
		{
		}

		[Token(Token = "0x60031D9")]
		[Address(RVA = "0x10C6D34", Offset = "0x10C6D34", VA = "0x10C6D34")]
		public LinkParams(Dictionary<string, string> data)
		{
		}

		[Token(Token = "0x60031DA")]
		[Address(RVA = "0x10C6EA0", Offset = "0x10C6EA0", VA = "0x10C6EA0")]
		public LinkParams(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60031DB")]
		[Address(RVA = "0x10C700C", Offset = "0x10C700C", VA = "0x10C700C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60031DC")]
		[Address(RVA = "0x10C7080", Offset = "0x10C7080", VA = "0x10C7080")]
		private bool Equals(LinkParams other)
		{
			return default(bool);
		}

		[Token(Token = "0x60031DD")]
		[Address(RVA = "0x10C70DC", Offset = "0x10C70DC", VA = "0x10C70DC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60031DE")]
		[Address(RVA = "0x10C716C", Offset = "0x10C716C", VA = "0x10C716C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60031DF")]
		[Address(RVA = "0x10C7174", Offset = "0x10C7174", VA = "0x10C7174", Slot = "44")]
		public AndroidJavaObject ToAjo()
		{
			return null;
		}

		[Token(Token = "0x60031E0")]
		[Address(RVA = "0x10C73D4", Offset = "0x10C73D4", VA = "0x10C73D4", Slot = "43")]
		public LinkParams ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000843")]
	public sealed class ReferralData : IConvertableFromNative<ReferralData>
	{
		[Token(Token = "0x4002E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C10", Offset = "0xB78C10")]
		private string <Token>k__BackingField;

		[Token(Token = "0x4002E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C20", Offset = "0xB78C20")]
		private string <ReferrerUserId>k__BackingField;

		[Token(Token = "0x4002E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C30", Offset = "0xB78C30")]
		private string <ReferrerChannelId>k__BackingField;

		[Token(Token = "0x4002E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C40", Offset = "0xB78C40")]
		private bool <IsFirstMatch>k__BackingField;

		[Token(Token = "0x4002E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C50", Offset = "0xB78C50")]
		private bool <IsGuaranteedMatch>k__BackingField;

		[Token(Token = "0x4002E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C60", Offset = "0xB78C60")]
		private bool <IsReinstall>k__BackingField;

		[Token(Token = "0x4002E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C70", Offset = "0xB78C70")]
		private bool <IsFirstMatchLink>k__BackingField;

		[Token(Token = "0x4002E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C80", Offset = "0xB78C80")]
		private CustomReferralData <CustomReferralData>k__BackingField;

		[Token(Token = "0x4002E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78C90", Offset = "0xB78C90")]
		private LinkParams <LinkParams>k__BackingField;

		[Token(Token = "0x4002E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78CA0", Offset = "0xB78CA0")]
		private CustomReferralData <OriginalCustomReferralData>k__BackingField;

		[Token(Token = "0x4002E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78CB0", Offset = "0xB78CB0")]
		private LinkParams <OriginalLinkParams>k__BackingField;

		[Token(Token = "0x170006F3")]
		public string Token
		{
			[Token(Token = "0x60031E1")]
			[Address(RVA = "0x1007DA8", Offset = "0x1007DA8", VA = "0x1007DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89220", Offset = "0xB89220")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031E2")]
			[Address(RVA = "0x1007DB0", Offset = "0x1007DB0", VA = "0x1007DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89230", Offset = "0xB89230")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F4")]
		public string ReferrerUserId
		{
			[Token(Token = "0x60031E3")]
			[Address(RVA = "0x1007DB8", Offset = "0x1007DB8", VA = "0x1007DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89240", Offset = "0xB89240")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031E4")]
			[Address(RVA = "0x1007DC0", Offset = "0x1007DC0", VA = "0x1007DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89250", Offset = "0xB89250")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F5")]
		public string ReferrerChannelId
		{
			[Token(Token = "0x60031E5")]
			[Address(RVA = "0x1007DC8", Offset = "0x1007DC8", VA = "0x1007DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89260", Offset = "0xB89260")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031E6")]
			[Address(RVA = "0x1007DD0", Offset = "0x1007DD0", VA = "0x1007DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89270", Offset = "0xB89270")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F6")]
		public bool IsFirstMatch
		{
			[Token(Token = "0x60031E7")]
			[Address(RVA = "0x1007DD8", Offset = "0x1007DD8", VA = "0x1007DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89280", Offset = "0xB89280")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031E8")]
			[Address(RVA = "0x1007DE0", Offset = "0x1007DE0", VA = "0x1007DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89290", Offset = "0xB89290")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F7")]
		public bool IsGuaranteedMatch
		{
			[Token(Token = "0x60031E9")]
			[Address(RVA = "0x1007DEC", Offset = "0x1007DEC", VA = "0x1007DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB892A0", Offset = "0xB892A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031EA")]
			[Address(RVA = "0x1007DF4", Offset = "0x1007DF4", VA = "0x1007DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB892B0", Offset = "0xB892B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F8")]
		public bool IsReinstall
		{
			[Token(Token = "0x60031EB")]
			[Address(RVA = "0x1007E00", Offset = "0x1007E00", VA = "0x1007E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB892C0", Offset = "0xB892C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031EC")]
			[Address(RVA = "0x1007E08", Offset = "0x1007E08", VA = "0x1007E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB892D0", Offset = "0xB892D0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006F9")]
		public bool IsFirstMatchLink
		{
			[Token(Token = "0x60031ED")]
			[Address(RVA = "0x1007E14", Offset = "0x1007E14", VA = "0x1007E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB892E0", Offset = "0xB892E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60031EE")]
			[Address(RVA = "0x1007E1C", Offset = "0x1007E1C", VA = "0x1007E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB892F0", Offset = "0xB892F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170006FA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB8B270", Offset = "0xB8B270")]
		public CustomReferralData CustomReferralData
		{
			[Token(Token = "0x60031EF")]
			[Address(RVA = "0x1007E28", Offset = "0x1007E28", VA = "0x1007E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89300", Offset = "0xB89300")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031F0")]
			[Address(RVA = "0x1007E30", Offset = "0x1007E30", VA = "0x1007E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89310", Offset = "0xB89310")]
			private set
			{
			}
		}

		[Token(Token = "0x170006FB")]
		public LinkParams LinkParams
		{
			[Token(Token = "0x60031F1")]
			[Address(RVA = "0x1007E38", Offset = "0x1007E38", VA = "0x1007E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89320", Offset = "0xB89320")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031F2")]
			[Address(RVA = "0x1007E40", Offset = "0x1007E40", VA = "0x1007E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89330", Offset = "0xB89330")]
			private set
			{
			}
		}

		[Token(Token = "0x170006FC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB8B2A8", Offset = "0xB8B2A8")]
		public CustomReferralData OriginalCustomReferralData
		{
			[Token(Token = "0x60031F3")]
			[Address(RVA = "0x1007E48", Offset = "0x1007E48", VA = "0x1007E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89340", Offset = "0xB89340")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031F4")]
			[Address(RVA = "0x1007E50", Offset = "0x1007E50", VA = "0x1007E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89350", Offset = "0xB89350")]
			private set
			{
			}
		}

		[Token(Token = "0x170006FD")]
		public LinkParams OriginalLinkParams
		{
			[Token(Token = "0x60031F5")]
			[Address(RVA = "0x1007E58", Offset = "0x1007E58", VA = "0x1007E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89360", Offset = "0xB89360")]
			get
			{
				return null;
			}
			[Token(Token = "0x60031F6")]
			[Address(RVA = "0x1007E60", Offset = "0x1007E60", VA = "0x1007E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89370", Offset = "0xB89370")]
			private set
			{
			}
		}

		[Token(Token = "0x60031F7")]
		[Address(RVA = "0x1007E68", Offset = "0x1007E68", VA = "0x1007E68")]
		public ReferralData()
		{
		}

		[Token(Token = "0x60031F8")]
		[Address(RVA = "0x1007E70", Offset = "0x1007E70", VA = "0x1007E70")]
		internal ReferralData(string token, string referrerUserId, string referrerChannelId, bool isFirstMatch, bool isGuaranteedMatch, bool isReinstall, bool isFirstMatchLink, CustomReferralData customReferralData, LinkParams linkParams, CustomReferralData originalCustomReferralData, LinkParams originalLinkParams)
		{
		}

		[Token(Token = "0x60031F9")]
		[Address(RVA = "0x1007F6C", Offset = "0x1007F6C", VA = "0x1007F6C")]
		private bool Equals(ReferralData other)
		{
			return default(bool);
		}

		[Token(Token = "0x60031FA")]
		[Address(RVA = "0x10080A8", Offset = "0x10080A8", VA = "0x10080A8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60031FB")]
		[Address(RVA = "0x1008138", Offset = "0x1008138", VA = "0x1008138", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60031FC")]
		[Address(RVA = "0x1008300", Offset = "0x1008300", VA = "0x1008300", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60031FD")]
		[Address(RVA = "0x1008594", Offset = "0x1008594", VA = "0x1008594", Slot = "4")]
		public ReferralData ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000844")]
	public sealed class ReferredUser : PublicUser, IConvertableFromNative<ReferredUser>
	{
		[Token(Token = "0x4002E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78CC0", Offset = "0xB78CC0")]
		private DateTime <InstallationDate>k__BackingField;

		[Token(Token = "0x4002E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78CD0", Offset = "0xB78CD0")]
		private string <InstallationChannel>k__BackingField;

		[Token(Token = "0x170006FE")]
		public DateTime InstallationDate
		{
			[Token(Token = "0x60031FE")]
			[Address(RVA = "0x1008E74", Offset = "0x1008E74", VA = "0x1008E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89380", Offset = "0xB89380")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x60031FF")]
			[Address(RVA = "0x1008E7C", Offset = "0x1008E7C", VA = "0x1008E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89390", Offset = "0xB89390")]
			private set
			{
			}
		}

		[Token(Token = "0x170006FF")]
		public string InstallationChannel
		{
			[Token(Token = "0x6003200")]
			[Address(RVA = "0x1008E84", Offset = "0x1008E84", VA = "0x1008E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB893A0", Offset = "0xB893A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003201")]
			[Address(RVA = "0x1008E8C", Offset = "0x1008E8C", VA = "0x1008E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB893B0", Offset = "0xB893B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6003202")]
		[Address(RVA = "0x1008E94", Offset = "0x1008E94", VA = "0x1008E94")]
		public ReferredUser()
		{
		}

		[Token(Token = "0x6003203")]
		[Address(RVA = "0x1008E9C", Offset = "0x1008E9C", VA = "0x1008E9C")]
		internal ReferredUser(Dictionary<string, string> publicProperties, string id, string displayName, string avatarUrl, Dictionary<string, string> identities, DateTime installationDate, string installationChannel)
		{
		}

		[Token(Token = "0x6003204")]
		[Address(RVA = "0x1008EDC", Offset = "0x1008EDC", VA = "0x1008EDC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003205")]
		[Address(RVA = "0x10090D8", Offset = "0x10090D8", VA = "0x10090D8")]
		private bool Equals(ReferredUser other)
		{
			return default(bool);
		}

		[Token(Token = "0x6003206")]
		[Address(RVA = "0x100914C", Offset = "0x100914C", VA = "0x100914C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6003207")]
		[Address(RVA = "0x10091DC", Offset = "0x10091DC", VA = "0x10091DC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6003208")]
		[Address(RVA = "0x1009248", Offset = "0x1009248", VA = "0x1009248", Slot = "5")]
		public new ReferredUser ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000845")]
	public interface InviteChannelPlugin
	{
		[Token(Token = "0x6003209")]
		bool IsAvailableForDevice(InviteChannel inviteChannel);

		[Token(Token = "0x600320A")]
		void PresentChannelInterface(InviteChannel inviteChannel, InvitePackage invitePackage, Action onComplete, Action onCancel, Action<GetSocialError> onFailure);
	}
	[Token(Token = "0x2000846")]
	public static class InviteChannelIds
	{
		[Token(Token = "0x4002E75")]
		public const string Email = "email";

		[Token(Token = "0x4002E76")]
		public const string Facebook = "facebook";

		[Token(Token = "0x4002E77")]
		public const string Hangouts = "hangouts";

		[Token(Token = "0x4002E78")]
		public const string InstagramDirect = "instagram";

		[Token(Token = "0x4002E79")]
		public const string Kakao = "kakao";

		[Token(Token = "0x4002E7A")]
		public const string Kik = "kik";

		[Token(Token = "0x4002E7B")]
		public const string Line = "line";

		[Token(Token = "0x4002E7C")]
		public const string FacebookMessenger = "facebookmessenger";

		[Token(Token = "0x4002E7D")]
		public const string NativeShare = "nativeshare";

		[Token(Token = "0x4002E7E")]
		public const string Snapchat = "snapchat";

		[Token(Token = "0x4002E7F")]
		public const string Sms = "sms";

		[Token(Token = "0x4002E80")]
		public const string Twitter = "twitter";

		[Token(Token = "0x4002E81")]
		public const string Telegram = "telegram";

		[Token(Token = "0x4002E82")]
		public const string Viber = "viber";

		[Token(Token = "0x4002E83")]
		public const string VK = "vk";

		[Token(Token = "0x4002E84")]
		public const string WhatsApp = "whatsapp";
	}
	[Token(Token = "0x2000847")]
	public static class InviteTextPlaceholders
	{
		[Token(Token = "0x4002E85")]
		public const string PlaceholderAppInviteUrl = "[APP_INVITE_URL]";
	}
	[Token(Token = "0x2000848")]
	public static class LanguageCodes
	{
		[Token(Token = "0x4002E86")]
		public const string ChineseSimplified = "zh-Hans";

		[Token(Token = "0x4002E87")]
		public const string ChineseTraditional = "zh-Hant";

		[Token(Token = "0x4002E88")]
		public const string Danish = "da";

		[Token(Token = "0x4002E89")]
		public const string Dutch = "nl";

		[Token(Token = "0x4002E8A")]
		public const string English = "en";

		[Token(Token = "0x4002E8B")]
		public const string French = "fr";

		[Token(Token = "0x4002E8C")]
		public const string German = "de";

		[Token(Token = "0x4002E8D")]
		public const string Icelandic = "is";

		[Token(Token = "0x4002E8E")]
		public const string Indonesian = "id";

		[Token(Token = "0x4002E8F")]
		public const string Italian = "it";

		[Token(Token = "0x4002E90")]
		public const string Japanese = "ja";

		[Token(Token = "0x4002E91")]
		public const string Korean = "ko";

		[Token(Token = "0x4002E92")]
		public const string Malay = "ms";

		[Token(Token = "0x4002E93")]
		public const string Norwegian = "nb";

		[Token(Token = "0x4002E94")]
		public const string Polish = "pl";

		[Token(Token = "0x4002E95")]
		public const string Portuguese = "pt";

		[Token(Token = "0x4002E96")]
		public const string PortugueseBrazillian = "pt-br";

		[Token(Token = "0x4002E97")]
		public const string Russian = "ru";

		[Token(Token = "0x4002E98")]
		public const string Spanish = "es";

		[Token(Token = "0x4002E99")]
		public const string Swedish = "sv";

		[Token(Token = "0x4002E9A")]
		public const string Tagalog = "tl";

		[Token(Token = "0x4002E9B")]
		public const string Turkish = "tr";

		[Token(Token = "0x4002E9C")]
		public const string Ukrainian = "uk";

		[Token(Token = "0x4002E9D")]
		public const string Vietnamese = "vi";

		[Token(Token = "0x4002E9E")]
		public const string DefaultLanguage = "en";
	}
	[Token(Token = "0x2000849")]
	public static class MentionTypes
	{
		[Token(Token = "0x4002E9F")]
		public const string App = "app";

		[Token(Token = "0x4002EA0")]
		public const string User = "user";
	}
	[Token(Token = "0x200084A")]
	public class Notification : IConvertableFromNative<Notification>
	{
		[Token(Token = "0x200084B")]
		public enum Type
		{
			[Token(Token = "0x4002EAA")]
			Custom,
			[Token(Token = "0x4002EAB")]
			OpenProfile,
			[Token(Token = "0x4002EAC")]
			OpenActivity,
			[Token(Token = "0x4002EAD")]
			OpenInvites,
			[Token(Token = "0x4002EAE")]
			OpenUrl
		}

		[Token(Token = "0x200084C")]
		public enum NotificationTypes
		{
			[Token(Token = "0x4002EB0")]
			Comment = 0,
			[Token(Token = "0x4002EB1")]
			LikeActivity = 1,
			[Token(Token = "0x4002EB2")]
			LikeComment = 2,
			[Token(Token = "0x4002EB3")]
			CommentedInSameThread = 5,
			[Token(Token = "0x4002EB4")]
			NewFriendship = 6,
			[Token(Token = "0x4002EB5")]
			InviteAccepted = 7,
			[Token(Token = "0x4002EB6")]
			MentionInComment = 8,
			[Token(Token = "0x4002EB7")]
			MentionInActivity = 9,
			[Token(Token = "0x4002EB8")]
			ReplyToComment = 10,
			[Token(Token = "0x4002EB9")]
			Targeting = 11,
			[Token(Token = "0x4002EBA")]
			Direct = 12
		}

		[Token(Token = "0x200084D")]
		public static class Key
		{
			[Token(Token = "0x200084E")]
			public static class OpenActivity
			{
				[Token(Token = "0x4002EBB")]
				public const string ActivityId = "$activity_id";

				[Token(Token = "0x4002EBC")]
				public const string CommentId = "$comment_id";
			}

			[Token(Token = "0x200084F")]
			public static class OpenProfile
			{
				[Token(Token = "0x4002EBD")]
				public const string UserId = "$user_id";
			}
		}

		[Token(Token = "0x4002EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78CE0", Offset = "0xB78CE0")]
		private string <Id>k__BackingField;

		[Token(Token = "0x4002EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78CF0", Offset = "0xB78CF0")]
		private Type <Action>k__BackingField;

		[Token(Token = "0x4002EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D00", Offset = "0xB78D00")]
		private bool <WasRead>k__BackingField;

		[Token(Token = "0x4002EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D10", Offset = "0xB78D10")]
		private NotificationTypes <NotificationType>k__BackingField;

		[Token(Token = "0x4002EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D20", Offset = "0xB78D20")]
		private long <CreatedAt>k__BackingField;

		[Token(Token = "0x4002EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D30", Offset = "0xB78D30")]
		private string <Title>k__BackingField;

		[Token(Token = "0x4002EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D40", Offset = "0xB78D40")]
		private string <Text>k__BackingField;

		[Token(Token = "0x4002EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D50", Offset = "0xB78D50")]
		private Dictionary<string, string> <ActionData>k__BackingField;

		[Token(Token = "0x17000700")]
		public string Id
		{
			[Token(Token = "0x600320B")]
			[Address(RVA = "0x1BCAF98", Offset = "0x1BCAF98", VA = "0x1BCAF98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB893C0", Offset = "0xB893C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600320C")]
			[Address(RVA = "0x1BCAFA0", Offset = "0x1BCAFA0", VA = "0x1BCAFA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB893D0", Offset = "0xB893D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000701")]
		public Type Action
		{
			[Token(Token = "0x600320D")]
			[Address(RVA = "0x1BCAFA8", Offset = "0x1BCAFA8", VA = "0x1BCAFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB893E0", Offset = "0xB893E0")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x600320E")]
			[Address(RVA = "0x1BCAFB0", Offset = "0x1BCAFB0", VA = "0x1BCAFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB893F0", Offset = "0xB893F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000702")]
		public bool WasRead
		{
			[Token(Token = "0x600320F")]
			[Address(RVA = "0x1BCAFB8", Offset = "0x1BCAFB8", VA = "0x1BCAFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89400", Offset = "0xB89400")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003210")]
			[Address(RVA = "0x1BCAFC0", Offset = "0x1BCAFC0", VA = "0x1BCAFC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89410", Offset = "0xB89410")]
			private set
			{
			}
		}

		[Token(Token = "0x17000703")]
		public NotificationTypes NotificationType
		{
			[Token(Token = "0x6003211")]
			[Address(RVA = "0x1BCAFCC", Offset = "0x1BCAFCC", VA = "0x1BCAFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89420", Offset = "0xB89420")]
			get
			{
				return default(NotificationTypes);
			}
			[Token(Token = "0x6003212")]
			[Address(RVA = "0x1BCAFD4", Offset = "0x1BCAFD4", VA = "0x1BCAFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89430", Offset = "0xB89430")]
			private set
			{
			}
		}

		[Token(Token = "0x17000704")]
		public long CreatedAt
		{
			[Token(Token = "0x6003213")]
			[Address(RVA = "0x1BCAFDC", Offset = "0x1BCAFDC", VA = "0x1BCAFDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89440", Offset = "0xB89440")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6003214")]
			[Address(RVA = "0x1BCAFE4", Offset = "0x1BCAFE4", VA = "0x1BCAFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89450", Offset = "0xB89450")]
			private set
			{
			}
		}

		[Token(Token = "0x17000705")]
		public string Title
		{
			[Token(Token = "0x6003215")]
			[Address(RVA = "0x1BCAFEC", Offset = "0x1BCAFEC", VA = "0x1BCAFEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89460", Offset = "0xB89460")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003216")]
			[Address(RVA = "0x1BCAFF4", Offset = "0x1BCAFF4", VA = "0x1BCAFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89470", Offset = "0xB89470")]
			private set
			{
			}
		}

		[Token(Token = "0x17000706")]
		public string Text
		{
			[Token(Token = "0x6003217")]
			[Address(RVA = "0x1BCAFFC", Offset = "0x1BCAFFC", VA = "0x1BCAFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89480", Offset = "0xB89480")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003218")]
			[Address(RVA = "0x1BCB004", Offset = "0x1BCB004", VA = "0x1BCB004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89490", Offset = "0xB89490")]
			private set
			{
			}
		}

		[Token(Token = "0x17000707")]
		public Dictionary<string, string> ActionData
		{
			[Token(Token = "0x6003219")]
			[Address(RVA = "0x1BCB00C", Offset = "0x1BCB00C", VA = "0x1BCB00C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB894A0", Offset = "0xB894A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600321A")]
			[Address(RVA = "0x1BCB014", Offset = "0x1BCB014", VA = "0x1BCB014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB894B0", Offset = "0xB894B0")]
			private set
			{
			}
		}

		[Token(Token = "0x600321B")]
		[Address(RVA = "0x1BCB01C", Offset = "0x1BCB01C", VA = "0x1BCB01C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600321C")]
		[Address(RVA = "0x1BCB340", Offset = "0x1BCB340", VA = "0x1BCB340", Slot = "4")]
		public Notification ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}

		[Token(Token = "0x600321D")]
		[Address(RVA = "0x1BCB938", Offset = "0x1BCB938", VA = "0x1BCB938")]
		public Notification()
		{
		}
	}
	[Token(Token = "0x2000850")]
	public sealed class NotificationsCountQuery : IConvertableToNative
	{
		[Serializable]
		[Token(Token = "0x2000851")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60B8C", Offset = "0xB60B8C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Notification.NotificationTypes, int> <>9__9_0;

			[Token(Token = "0x6003227")]
			[Address(RVA = "0xFB5900", Offset = "0xFB5900", VA = "0xFB5900")]
			public <>c()
			{
			}

			[Token(Token = "0x6003228")]
			[Address(RVA = "0xFB5908", Offset = "0xFB5908", VA = "0xFB5908")]
			internal int <ToAjo>b__9_0(Notification.NotificationTypes type)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notification.NotificationTypes[] AllTypes;

		[Token(Token = "0x4002EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly bool? _isRead;

		[Token(Token = "0x4002EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Notification.NotificationTypes[] _types;

		[Token(Token = "0x600321E")]
		[Address(RVA = "0x1BCBEE0", Offset = "0x1BCBEE0", VA = "0x1BCBEE0")]
		private NotificationsCountQuery(bool? isRead)
		{
		}

		[Token(Token = "0x600321F")]
		[Address(RVA = "0x1BCBF70", Offset = "0x1BCBF70", VA = "0x1BCBF70")]
		public static NotificationsCountQuery ReadAndUnread()
		{
			return null;
		}

		[Token(Token = "0x6003220")]
		[Address(RVA = "0x1BCBFC8", Offset = "0x1BCBFC8", VA = "0x1BCBFC8")]
		public static NotificationsCountQuery Read()
		{
			return null;
		}

		[Token(Token = "0x6003221")]
		[Address(RVA = "0x1BCC048", Offset = "0x1BCC048", VA = "0x1BCC048")]
		public static NotificationsCountQuery Unread()
		{
			return null;
		}

		[Token(Token = "0x6003222")]
		[Address(RVA = "0x1BCC0C8", Offset = "0x1BCC0C8", VA = "0x1BCC0C8")]
		public NotificationsCountQuery OfAllTypes()
		{
			return null;
		}

		[Token(Token = "0x6003223")]
		[Address(RVA = "0x1BCC140", Offset = "0x1BCC140", VA = "0x1BCC140")]
		public NotificationsCountQuery OfTypes(params Notification.NotificationTypes[] types)
		{
			return null;
		}

		[Token(Token = "0x6003224")]
		[Address(RVA = "0x1BCC168", Offset = "0x1BCC168", VA = "0x1BCC168", Slot = "4")]
		public AndroidJavaObject ToAjo()
		{
			return null;
		}
	}
	[Token(Token = "0x2000852")]
	public sealed class NotificationsQuery : IConvertableToNative
	{
		[Token(Token = "0x2000853")]
		public enum Filter
		{
			[Token(Token = "0x4002ECA")]
			NoFilter,
			[Token(Token = "0x4002ECB")]
			Older,
			[Token(Token = "0x4002ECC")]
			Newer
		}

		[Serializable]
		[Token(Token = "0x2000854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60B9C", Offset = "0xB60B9C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Notification.NotificationTypes, int> <>9__15_0;

			[Token(Token = "0x6003234")]
			[Address(RVA = "0xFB5974", Offset = "0xFB5974", VA = "0xFB5974")]
			public <>c()
			{
			}

			[Token(Token = "0x6003235")]
			[Address(RVA = "0xFB597C", Offset = "0xFB597C", VA = "0xFB597C")]
			internal int <ToAjo>b__15_0(Notification.NotificationTypes type)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notification.NotificationTypes[] AllTypes;

		[Token(Token = "0x4002EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly bool? _isRead;

		[Token(Token = "0x4002EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Notification.NotificationTypes[] _types;

		[Token(Token = "0x4002EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Filter _filter;

		[Token(Token = "0x4002EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _notificationId;

		[Token(Token = "0x4002EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _limit;

		[Token(Token = "0x6003229")]
		[Address(RVA = "0x1BCC5C0", Offset = "0x1BCC5C0", VA = "0x1BCC5C0")]
		private NotificationsQuery(bool? isRead)
		{
		}

		[Token(Token = "0x600322A")]
		[Address(RVA = "0x1BCC650", Offset = "0x1BCC650", VA = "0x1BCC650")]
		public static NotificationsQuery ReadAndUnread()
		{
			return null;
		}

		[Token(Token = "0x600322B")]
		[Address(RVA = "0x1BCC6A8", Offset = "0x1BCC6A8", VA = "0x1BCC6A8")]
		public static NotificationsQuery Read()
		{
			return null;
		}

		[Token(Token = "0x600322C")]
		[Address(RVA = "0x1BCC728", Offset = "0x1BCC728", VA = "0x1BCC728")]
		public static NotificationsQuery Unread()
		{
			return null;
		}

		[Token(Token = "0x600322D")]
		[Address(RVA = "0x1BCC7A8", Offset = "0x1BCC7A8", VA = "0x1BCC7A8")]
		public NotificationsQuery OfAllTypes()
		{
			return null;
		}

		[Token(Token = "0x600322E")]
		[Address(RVA = "0x1BCC820", Offset = "0x1BCC820", VA = "0x1BCC820")]
		public NotificationsQuery OfTypes(params Notification.NotificationTypes[] types)
		{
			return null;
		}

		[Token(Token = "0x600322F")]
		[Address(RVA = "0x1BCC848", Offset = "0x1BCC848", VA = "0x1BCC848")]
		public NotificationsQuery WithLimit(int limit)
		{
			return null;
		}

		[Token(Token = "0x6003230")]
		[Address(RVA = "0x1BCC850", Offset = "0x1BCC850", VA = "0x1BCC850")]
		public NotificationsQuery WithFilter(Filter filter, string notificationId)
		{
			return null;
		}

		[Token(Token = "0x6003231")]
		[Address(RVA = "0x1BCC880", Offset = "0x1BCC880", VA = "0x1BCC880", Slot = "4")]
		public AndroidJavaObject ToAjo()
		{
			return null;
		}
	}
	[Token(Token = "0x2000855")]
	public class SuggestedFriend : PublicUser, IConvertableFromNative<SuggestedFriend>
	{
		[Token(Token = "0x4002ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D60", Offset = "0xB78D60")]
		private int <MutualFriendsCount>k__BackingField;

		[Token(Token = "0x17000708")]
		public int MutualFriendsCount
		{
			[Token(Token = "0x6003236")]
			[Address(RVA = "0x116AB44", Offset = "0x116AB44", VA = "0x116AB44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB894C0", Offset = "0xB894C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003237")]
			[Address(RVA = "0x116AB4C", Offset = "0x116AB4C", VA = "0x116AB4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB894D0", Offset = "0xB894D0")]
			private set
			{
			}
		}

		[Token(Token = "0x6003238")]
		[Address(RVA = "0x116AB54", Offset = "0x116AB54", VA = "0x116AB54", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003239")]
		[Address(RVA = "0x116AD18", Offset = "0x116AD18", VA = "0x116AD18", Slot = "5")]
		public new SuggestedFriend ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}

		[Token(Token = "0x600323A")]
		[Address(RVA = "0x116AF18", Offset = "0x116AF18", VA = "0x116AF18")]
		public SuggestedFriend()
		{
		}
	}
	[Token(Token = "0x2000856")]
	public class AuthIdentity : IConvertableToNative
	{
		[Token(Token = "0x4002ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal readonly string ProviderId;

		[Token(Token = "0x4002ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal readonly string ProviderUserId;

		[Token(Token = "0x4002ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal readonly string AccessToken;

		[Token(Token = "0x600323B")]
		[Address(RVA = "0x144E100", Offset = "0x144E100", VA = "0x144E100")]
		private AuthIdentity(string providerName, string userId, string accessToken)
		{
		}

		[Token(Token = "0x600323C")]
		[Address(RVA = "0x144E164", Offset = "0x144E164", VA = "0x144E164")]
		public static AuthIdentity CreateFacebookIdentity(string accessToken)
		{
			return null;
		}

		[Token(Token = "0x600323D")]
		[Address(RVA = "0x144E1B4", Offset = "0x144E1B4", VA = "0x144E1B4")]
		public static AuthIdentity CreateCustomIdentity(string providerName, string userId, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x600323E")]
		[Address(RVA = "0x144E228", Offset = "0x144E228", VA = "0x144E228", Slot = "4")]
		public AndroidJavaObject ToAjo()
		{
			return null;
		}
	}
	[Token(Token = "0x2000857")]
	public static class AuthIdentityProvider
	{
		[Token(Token = "0x4002ED3")]
		public const string Facebook = "facebook";

		[Token(Token = "0x4002ED4")]
		public const string GooglePlus = "googleplus";

		[Token(Token = "0x4002ED5")]
		public const string GooglePlay = "googleplay";
	}
	[Token(Token = "0x2000858")]
	public class ConflictUser : PublicUser, IConvertableFromNative<ConflictUser>
	{
		[Token(Token = "0x600323F")]
		[Address(RVA = "0x11A8A38", Offset = "0x11A8A38", VA = "0x11A8A38")]
		internal ConflictUser()
		{
		}

		[Token(Token = "0x6003240")]
		[Address(RVA = "0x11A8A40", Offset = "0x11A8A40", VA = "0x11A8A40")]
		internal ConflictUser(Dictionary<string, string> publicProperties, string id, string displayName, string avatarUrl, Dictionary<string, string> identities)
		{
		}

		[Token(Token = "0x6003241")]
		[Address(RVA = "0x11A8A48", Offset = "0x11A8A48", VA = "0x11A8A48", Slot = "5")]
		public new ConflictUser ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x2000859")]
	public class PublicUser : IConvertableFromNative<PublicUser>
	{
		[Token(Token = "0x4002ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D70", Offset = "0xB78D70")]
		private string <Id>k__BackingField;

		[Token(Token = "0x4002ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D80", Offset = "0xB78D80")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x4002ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78D90", Offset = "0xB78D90")]
		private string <AvatarUrl>k__BackingField;

		[Token(Token = "0x4002ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78DA0", Offset = "0xB78DA0")]
		private Dictionary<string, string> <Identities>k__BackingField;

		[Token(Token = "0x4002EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, string> _publicProperties;

		[Token(Token = "0x17000709")]
		public string Id
		{
			[Token(Token = "0x6003242")]
			[Address(RVA = "0xFFFA58", Offset = "0xFFFA58", VA = "0xFFFA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB894E0", Offset = "0xB894E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003243")]
			[Address(RVA = "0xFFFA60", Offset = "0xFFFA60", VA = "0xFFFA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB894F0", Offset = "0xB894F0")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700070A")]
		public string DisplayName
		{
			[Token(Token = "0x6003244")]
			[Address(RVA = "0xFFFA68", Offset = "0xFFFA68", VA = "0xFFFA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89500", Offset = "0xB89500")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003245")]
			[Address(RVA = "0xFFFA70", Offset = "0xFFFA70", VA = "0xFFFA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89510", Offset = "0xB89510")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700070B")]
		public string AvatarUrl
		{
			[Token(Token = "0x6003246")]
			[Address(RVA = "0xFFFA78", Offset = "0xFFFA78", VA = "0xFFFA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89520", Offset = "0xB89520")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003247")]
			[Address(RVA = "0xFFFA80", Offset = "0xFFFA80", VA = "0xFFFA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89530", Offset = "0xB89530")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700070C")]
		public Dictionary<string, string> Identities
		{
			[Token(Token = "0x6003248")]
			[Address(RVA = "0xFFFA88", Offset = "0xFFFA88", VA = "0xFFFA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89540", Offset = "0xB89540")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003249")]
			[Address(RVA = "0xFFFA90", Offset = "0xFFFA90", VA = "0xFFFA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89550", Offset = "0xB89550")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700070D")]
		public Dictionary<string, string> AllPublicProperties
		{
			[Token(Token = "0x600324A")]
			[Address(RVA = "0xFFFA98", Offset = "0xFFFA98", VA = "0xFFFA98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600324B")]
		[Address(RVA = "0xFFFB10", Offset = "0xFFFB10", VA = "0xFFFB10", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600324C")]
		[Address(RVA = "0xFF90D8", Offset = "0xFF90D8", VA = "0xFF90D8")]
		public PublicUser()
		{
		}

		[Token(Token = "0x600324D")]
		[Address(RVA = "0xFF910C", Offset = "0xFF910C", VA = "0xFF910C")]
		internal PublicUser(Dictionary<string, string> publicProperties, string id, string displayName, string avatarUrl, Dictionary<string, string> identities)
		{
		}

		[Token(Token = "0x600324E")]
		[Address(RVA = "0xFF91F4", Offset = "0xFF91F4", VA = "0xFF91F4")]
		protected bool Equals(PublicUser other)
		{
			return default(bool);
		}

		[Token(Token = "0x600324F")]
		[Address(RVA = "0xFFFCB4", Offset = "0xFFFCB4", VA = "0xFFFCB4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6003250")]
		[Address(RVA = "0xFF9398", Offset = "0xFF9398", VA = "0xFF9398", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6003251")]
		[Address(RVA = "0xFF9678", Offset = "0xFF9678", VA = "0xFF9678", Slot = "4")]
		public PublicUser ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}
	}
	[Token(Token = "0x200085A")]
	public class UserReference : IConvertableFromNative<UserReference>
	{
		[Token(Token = "0x4002EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78DB0", Offset = "0xB78DB0")]
		private string <Id>k__BackingField;

		[Token(Token = "0x4002EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78DC0", Offset = "0xB78DC0")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x4002EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78DD0", Offset = "0xB78DD0")]
		private string <AvatarUrl>k__BackingField;

		[Token(Token = "0x1700070E")]
		public string Id
		{
			[Token(Token = "0x6003252")]
			[Address(RVA = "0x1229F38", Offset = "0x1229F38", VA = "0x1229F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89560", Offset = "0xB89560")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003253")]
			[Address(RVA = "0x1229F40", Offset = "0x1229F40", VA = "0x1229F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89570", Offset = "0xB89570")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700070F")]
		public string DisplayName
		{
			[Token(Token = "0x6003254")]
			[Address(RVA = "0x1229F48", Offset = "0x1229F48", VA = "0x1229F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89580", Offset = "0xB89580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003255")]
			[Address(RVA = "0x1229F50", Offset = "0x1229F50", VA = "0x1229F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89590", Offset = "0xB89590")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000710")]
		public string AvatarUrl
		{
			[Token(Token = "0x6003256")]
			[Address(RVA = "0x1229F58", Offset = "0x1229F58", VA = "0x1229F58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB895A0", Offset = "0xB895A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003257")]
			[Address(RVA = "0x1229F60", Offset = "0x1229F60", VA = "0x1229F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB895B0", Offset = "0xB895B0")]
			protected set
			{
			}
		}

		[Token(Token = "0x6003258")]
		[Address(RVA = "0x1229F68", Offset = "0x1229F68", VA = "0x1229F68", Slot = "4")]
		public UserReference ParseFromAJO(AndroidJavaObject ajo)
		{
			return null;
		}

		[Token(Token = "0x6003259")]
		[Address(RVA = "0x122A1EC", Offset = "0x122A1EC", VA = "0x122A1EC")]
		public UserReference()
		{
		}
	}
	[Token(Token = "0x200085B")]
	public class UsersQuery : IConvertableToNative
	{
		[Token(Token = "0x4002EDE")]
		private const int DefaultLimit = 20;

		[Token(Token = "0x4002EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _query;

		[Token(Token = "0x4002EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _limit;

		[Token(Token = "0x600325A")]
		[Address(RVA = "0x122A1F4", Offset = "0x122A1F4", VA = "0x122A1F4")]
		private UsersQuery(string query)
		{
		}

		[Token(Token = "0x600325B")]
		[Address(RVA = "0x122A234", Offset = "0x122A234", VA = "0x122A234")]
		public static UsersQuery UsersByDisplayName(string query)
		{
			return null;
		}

		[Token(Token = "0x600325C")]
		[Address(RVA = "0x122A2A8", Offset = "0x122A2A8", VA = "0x122A2A8")]
		public UsersQuery WithLimit(int limit)
		{
			return null;
		}

		[Token(Token = "0x600325D")]
		[Address(RVA = "0x122A2B0", Offset = "0x122A2B0", VA = "0x122A2B0", Slot = "4")]
		public AndroidJavaObject ToAjo()
		{
			return null;
		}
	}
	[Token(Token = "0x200085C")]
	public static class BuildConfig
	{
		[Token(Token = "0x4002EE1")]
		public const string UnitySdkVersion = "6.20.6";

		[Token(Token = "0x4002EE2")]
		public const string PublishTarget = "unity-asset-store";
	}
	[Token(Token = "0x200085D")]
	internal static class Check
	{
		[Token(Token = "0x200085E")]
		public delegate bool Condition();

		[Token(Token = "0x200085F")]
		public static class Argument
		{
			[Token(Token = "0x6003264")]
			[Address(RVA = "0xF8E3C4", Offset = "0xF8E3C4", VA = "0xF8E3C4")]
			public static void IsNotNull(object argument, string argumentName, [Optional] string message)
			{
			}

			[Token(Token = "0x6003265")]
			[Address(RVA = "0xF8E480", Offset = "0xF8E480", VA = "0xF8E480")]
			public static void IsStrNotNullOrEmpty(string argument, string argumentName, [Optional] string message)
			{
			}

			[Token(Token = "0x6003266")]
			[Address(RVA = "0xF8E540", Offset = "0xF8E540", VA = "0xF8E540")]
			public static void IsNotNegative(int argument, string argumentName)
			{
			}
		}

		[Token(Token = "0x600325E")]
		[Address(RVA = "0x11A665C", Offset = "0x11A665C", VA = "0x11A665C")]
		public static void IfTrue(Condition condition, string message = "")
		{
		}

		[Token(Token = "0x600325F")]
		[Address(RVA = "0x11A66C4", Offset = "0x11A66C4", VA = "0x11A66C4")]
		public static void IfTrue(bool condition, string message = "")
		{
		}
	}
	[Token(Token = "0x2000860")]
	public static class Collections
	{
		[Token(Token = "0x2000861")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60BBC", Offset = "0xB60BBC")]
		private sealed class <>c__DisplayClass1_0<T>
		{
			[Token(Token = "0x4002EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<T> other;

			[Token(Token = "0x600326A")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600326B")]
			internal bool <ListEquals>b__0(T t, int i)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6003267")]
		public static bool DictionaryEquals<TKey, TValue>(this Dictionary<TKey, TValue> self, Dictionary<TKey, TValue> other)
		{
			return default(bool);
		}

		[Token(Token = "0x6003268")]
		public static bool ListEquals<T>(this List<T> self, List<T> other)
		{
			return default(bool);
		}

		[Token(Token = "0x6003269")]
		[Address(RVA = "0x11A67A8", Offset = "0x11A67A8", VA = "0x11A67A8")]
		public static bool Texture2DEquals(this Texture2D self, Texture2D other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000862")]
	public static class DateUtils
	{
		[Token(Token = "0x600326C")]
		[Address(RVA = "0x109E51C", Offset = "0x109E51C", VA = "0x109E51C")]
		public static DateTime FromUnixTime(long unixTime)
		{
			return default(DateTime);
		}
	}
	[Token(Token = "0x2000863")]
	[DebuggerStepThrough]
	internal static class GetSocialDebugLogger
	{
		[Token(Token = "0x600326D")]
		[Address(RVA = "0x22857E4", Offset = "0x22857E4", VA = "0x22857E4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB895F0", Offset = "0xB895F0")]
		public static void D(string message, params object[] arguments)
		{
		}

		[Token(Token = "0x600326E")]
		[Address(RVA = "0x2285898", Offset = "0x2285898", VA = "0x2285898")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB89628", Offset = "0xB89628")]
		public static void I(string message, params object[] arguments)
		{
		}

		[Token(Token = "0x600326F")]
		[Address(RVA = "0x228594C", Offset = "0x228594C", VA = "0x228594C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB89660", Offset = "0xB89660")]
		public static void W(string message, params object[] arguments)
		{
		}

		[Token(Token = "0x6003270")]
		[Address(RVA = "0x2285A00", Offset = "0x2285A00", VA = "0x2285A00")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB89698", Offset = "0xB89698")]
		public static void E(string message, params object[] arguments)
		{
		}

		[Token(Token = "0x6003271")]
		[Address(RVA = "0x2285AB4", Offset = "0x2285AB4", VA = "0x2285AB4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xB896D0", Offset = "0xB896D0")]
		public static void Ex(Exception ex, string message, params object[] arguments)
		{
		}
	}
	[Token(Token = "0x2000864")]
	[DebuggerStepThrough]
	public static class DebugUtils
	{
		[Token(Token = "0x6003272")]
		[Address(RVA = "0x10A42A0", Offset = "0x10A42A0", VA = "0x10A42A0")]
		public static void LogMethodCall(MethodBase method, params object[] values)
		{
		}

		[Token(Token = "0x6003273")]
		[Address(RVA = "0x10A44C0", Offset = "0x10A44C0", VA = "0x10A44C0")]
		public static void TraceMethodCall()
		{
		}

		[Token(Token = "0x6003274")]
		public static string ToDebugString<TKey, TValue>(this IDictionary<TKey, TValue> dictionary)
		{
			return null;
		}

		[Token(Token = "0x6003275")]
		public static string ToDebugString<T>(this IList<T> list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000865")]
	public class GetSocialSettings : ScriptableObject
	{
		[Token(Token = "0x4002EE4")]
		public const string UnityDemoAppAppId = "LuDPp7W0J4";

		[Token(Token = "0x4002EE5")]
		private const string SettingsAssetName = "GetSocialSettings";

		[Token(Token = "0x4002EE6")]
		private const string SettingsAssetPath = "Resources/";

		[Token(Token = "0x4002EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GetSocialSettings _instance;

		[Token(Token = "0x4002EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _appId;

		[Token(Token = "0x4002EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isAutoRegisrationForPushesEnabled;

		[Token(Token = "0x4002EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _isForegroundNotificationsEnabled;

		[Token(Token = "0x4002EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool _autoInitEnabled;

		[Token(Token = "0x4002EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		private bool _useGetSocialUi;

		[Token(Token = "0x4002EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _getSocialDefaultConfigurationFilePath;

		[Token(Token = "0x4002EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _iosPushEnvironment;

		[Token(Token = "0x4002EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<string> _deeplinkingDomains;

		[Token(Token = "0x4002EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _isAndroidEnabled;

		[Token(Token = "0x4002EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool _isIosEnabled;

		[Token(Token = "0x4002EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[SerializeField]
		private bool _isIosPushEnabled;

		[Token(Token = "0x4002EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[SerializeField]
		private bool _isAndroidPushEnabled;

		[Token(Token = "0x4002EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool _isAppIdValid;

		[Token(Token = "0x17000711")]
		public static GetSocialSettings Instance
		{
			[Token(Token = "0x6003276")]
			[Address(RVA = "0x22920F8", Offset = "0x22920F8", VA = "0x22920F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000712")]
		public static string AppId
		{
			[Token(Token = "0x6003277")]
			[Address(RVA = "0x22923BC", Offset = "0x22923BC", VA = "0x22923BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003278")]
			[Address(RVA = "0x22922E4", Offset = "0x22922E4", VA = "0x22922E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000713")]
		public static bool UseGetSocialUi
		{
			[Token(Token = "0x6003279")]
			[Address(RVA = "0x22923E0", Offset = "0x22923E0", VA = "0x22923E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600327A")]
			[Address(RVA = "0x2292400", Offset = "0x2292400", VA = "0x2292400")]
			set
			{
			}
		}

		[Token(Token = "0x17000714")]
		public static bool IsAutoRegisrationForPushesEnabled
		{
			[Token(Token = "0x600327B")]
			[Address(RVA = "0x2292430", Offset = "0x2292430", VA = "0x2292430")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600327C")]
			[Address(RVA = "0x2292450", Offset = "0x2292450", VA = "0x2292450")]
			set
			{
			}
		}

		[Token(Token = "0x17000715")]
		public static bool IsForegroundNotificationsEnabled
		{
			[Token(Token = "0x600327D")]
			[Address(RVA = "0x2292480", Offset = "0x2292480", VA = "0x2292480")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600327E")]
			[Address(RVA = "0x22924A0", Offset = "0x22924A0", VA = "0x22924A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000716")]
		public static bool IsAutoInitEnabled
		{
			[Token(Token = "0x600327F")]
			[Address(RVA = "0x22924D0", Offset = "0x22924D0", VA = "0x22924D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003280")]
			[Address(RVA = "0x22924F0", Offset = "0x22924F0", VA = "0x22924F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000717")]
		public static string IosPushEnvironment
		{
			[Token(Token = "0x6003281")]
			[Address(RVA = "0x2292520", Offset = "0x2292520", VA = "0x2292520")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003282")]
			[Address(RVA = "0x2292540", Offset = "0x2292540", VA = "0x2292540")]
			set
			{
			}
		}

		[Token(Token = "0x17000718")]
		public static List<string> DeeplinkingDomains
		{
			[Token(Token = "0x6003283")]
			[Address(RVA = "0x2292570", Offset = "0x2292570", VA = "0x2292570")]
			get
			{
				return null;
			}
			[Token(Token = "0x6003284")]
			[Address(RVA = "0x2292590", Offset = "0x2292590", VA = "0x2292590")]
			set
			{
			}
		}

		[Token(Token = "0x17000719")]
		public static bool IsAndroidEnabled
		{
			[Token(Token = "0x6003285")]
			[Address(RVA = "0x22925C0", Offset = "0x22925C0", VA = "0x22925C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003286")]
			[Address(RVA = "0x22925E0", Offset = "0x22925E0", VA = "0x22925E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700071A")]
		public static bool IsIosEnabled
		{
			[Token(Token = "0x6003287")]
			[Address(RVA = "0x2292610", Offset = "0x2292610", VA = "0x2292610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003288")]
			[Address(RVA = "0x2292630", Offset = "0x2292630", VA = "0x2292630")]
			set
			{
			}
		}

		[Token(Token = "0x1700071B")]
		public static string UiConfigurationDefaultFilePath
		{
			[Token(Token = "0x6003289")]
			[Address(RVA = "0x2292660", Offset = "0x2292660", VA = "0x2292660")]
			get
			{
				return null;
			}
			[Token(Token = "0x600328A")]
			[Address(RVA = "0x2292680", Offset = "0x2292680", VA = "0x2292680")]
			set
			{
			}
		}

		[Token(Token = "0x1700071C")]
		public static bool IsIosPushEnabled
		{
			[Token(Token = "0x600328B")]
			[Address(RVA = "0x22926B0", Offset = "0x22926B0", VA = "0x22926B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600328C")]
			[Address(RVA = "0x22926D0", Offset = "0x22926D0", VA = "0x22926D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700071D")]
		public static bool IsAndroidPushEnabled
		{
			[Token(Token = "0x600328D")]
			[Address(RVA = "0x2292700", Offset = "0x2292700", VA = "0x2292700")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600328E")]
			[Address(RVA = "0x2292720", Offset = "0x2292720", VA = "0x2292720")]
			set
			{
			}
		}

		[Token(Token = "0x1700071E")]
		public static bool IsAppIdValidated
		{
			[Token(Token = "0x600328F")]
			[Address(RVA = "0x2292750", Offset = "0x2292750", VA = "0x2292750")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003290")]
			[Address(RVA = "0x2292770", Offset = "0x2292770", VA = "0x2292770")]
			set
			{
			}
		}

		[Token(Token = "0x6003291")]
		[Address(RVA = "0x2292314", Offset = "0x2292314", VA = "0x2292314")]
		public static string GetPluginPath()
		{
			return null;
		}

		[Token(Token = "0x6003292")]
		[Address(RVA = "0x22927A0", Offset = "0x22927A0", VA = "0x22927A0")]
		public static string GetAbsolutePluginPath()
		{
			return null;
		}

		[Token(Token = "0x6003293")]
		[Address(RVA = "0x229281C", Offset = "0x229281C", VA = "0x229281C")]
		private static string FindEditor(string path)
		{
			return null;
		}

		[Token(Token = "0x6003294")]
		[Address(RVA = "0x22923B8", Offset = "0x22923B8", VA = "0x22923B8")]
		private static void SaveAsset(string directory, string name)
		{
		}

		[Token(Token = "0x6003295")]
		[Address(RVA = "0x22923DC", Offset = "0x22923DC", VA = "0x22923DC")]
		private static void MarkAssetDirty()
		{
		}

		[Token(Token = "0x6003296")]
		[Address(RVA = "0x2292948", Offset = "0x2292948", VA = "0x2292948")]
		public GetSocialSettings()
		{
		}
	}
	[Token(Token = "0x2000866")]
	internal class MainThreadExecutor : Singleton<MainThreadExecutor>
	{
		[Token(Token = "0x4002EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object _queueLock;

		[Token(Token = "0x4002EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<Action> _queuedActions;

		[Token(Token = "0x4002EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<Action> _executingActions;

		[Token(Token = "0x6003297")]
		[Address(RVA = "0x1CBFB24", Offset = "0x1CBFB24", VA = "0x1CBFB24")]
		internal static void Queue(Action action)
		{
		}

		[Token(Token = "0x6003298")]
		[Address(RVA = "0x1CBFCF8", Offset = "0x1CBFCF8", VA = "0x1CBFCF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6003299")]
		[Address(RVA = "0x1CBFDA8", Offset = "0x1CBFDA8", VA = "0x1CBFDA8")]
		private void MoveQueuedActionsToExecuting()
		{
		}

		[Token(Token = "0x600329A")]
		[Address(RVA = "0x1CBFF1C", Offset = "0x1CBFF1C", VA = "0x1CBFF1C")]
		public MainThreadExecutor()
		{
		}
	}
	[Token(Token = "0x2000867")]
	public abstract class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4002EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x4002EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x4002EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool applicationIsQuitting;

		[Token(Token = "0x1700071F")]
		public static T Instance
		{
			[Token(Token = "0x600329C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600329B")]
		protected static void LoadInstance()
		{
		}

		[Token(Token = "0x600329D")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600329E")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000868")]
	public class UnityLifecycleHelper : Singleton<UnityLifecycleHelper>
	{
		[Token(Token = "0x60032A0")]
		[Address(RVA = "0x1226F80", Offset = "0x1226F80", VA = "0x1226F80")]
		public UnityLifecycleHelper()
		{
		}
	}
	[Token(Token = "0x2000869")]
	internal class AddAuthIdentityCallbackProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action _onComplete;

		[Token(Token = "0x4002EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x4002EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action<ConflictUser> _onConflict;

		[Token(Token = "0x60032A1")]
		[Address(RVA = "0xF9B4F4", Offset = "0xF9B4F4", VA = "0xF9B4F4")]
		public AddAuthIdentityCallbackProxy(Action onComplete, Action<GetSocialError> onFailure, Action<ConflictUser> onConflict)
		{
		}

		[Token(Token = "0x60032A2")]
		[Address(RVA = "0xF9B590", Offset = "0xF9B590", VA = "0xF9B590")]
		private void onComplete()
		{
		}

		[Token(Token = "0x60032A3")]
		[Address(RVA = "0xF9B59C", Offset = "0xF9B59C", VA = "0xF9B59C")]
		private void onFailure(AndroidJavaObject throwableAJO)
		{
		}

		[Token(Token = "0x60032A4")]
		[Address(RVA = "0xF9B5A8", Offset = "0xF9B5A8", VA = "0xF9B5A8")]
		private void onConflict(AndroidJavaObject conflictUserAJO)
		{
		}
	}
	[Token(Token = "0x200086A")]
	internal class BoolCallbackProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<bool> _onSuccess;

		[Token(Token = "0x4002EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x60032A5")]
		[Address(RVA = "0x145B054", Offset = "0x145B054", VA = "0x145B054")]
		public BoolCallbackProxy(Action<bool> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032A6")]
		[Address(RVA = "0x145B0D4", Offset = "0x145B0D4", VA = "0x145B0D4")]
		private void onSuccess(bool value)
		{
		}

		[Token(Token = "0x60032A7")]
		[Address(RVA = "0x145B134", Offset = "0x145B134", VA = "0x145B134")]
		private void onFailure(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x200086B")]
	internal class CallbackProxy<T> : JavaInterfaceProxy where T : IConvertableFromNative<T>, new()
	{
		[Token(Token = "0x4002F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> _onSuccess;

		[Token(Token = "0x4002F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x60032A8")]
		public CallbackProxy(Action<T> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032A9")]
		private void onSuccess(AndroidJavaObject resultAJO)
		{
		}

		[Token(Token = "0x60032AA")]
		private void onFailure(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x200086C")]
	internal class CompletionCallback : JavaInterfaceProxy
	{
		[Token(Token = "0x4002F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action _onSuccess;

		[Token(Token = "0x4002F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x60032AB")]
		[Address(RVA = "0x11A89A0", Offset = "0x11A89A0", VA = "0x11A89A0")]
		public CompletionCallback(Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032AC")]
		[Address(RVA = "0x11A8A20", Offset = "0x11A8A20", VA = "0x11A8A20")]
		private void onSuccess()
		{
		}

		[Token(Token = "0x60032AD")]
		[Address(RVA = "0x11A8A2C", Offset = "0x11A8A2C", VA = "0x11A8A2C")]
		private void onFailure(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x200086D")]
	internal class DictionaryCallbackProxy<TValue> : JavaInterfaceProxy where TValue : IConvertableFromNative<TValue>, new()
	{
		[Token(Token = "0x4002F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<Dictionary<string, TValue>> _onSuccess;

		[Token(Token = "0x4002F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x60032AE")]
		public DictionaryCallbackProxy(Action<Dictionary<string, TValue>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032AF")]
		private void onSuccess(AndroidJavaObject resultAJO)
		{
		}

		[Token(Token = "0x60032B0")]
		private void onFailure(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x200086E")]
	internal class FetchReferralDataCallbackProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<ReferralData> _onSuccess;

		[Token(Token = "0x4002F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x60032B1")]
		[Address(RVA = "0x10F8F18", Offset = "0x10F8F18", VA = "0x10F8F18")]
		public FetchReferralDataCallbackProxy(Action<ReferralData> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032B2")]
		[Address(RVA = "0x10F8F98", Offset = "0x10F8F98", VA = "0x10F8F98")]
		private void onSuccess(AndroidJavaObject referralDataAJO)
		{
		}

		[Token(Token = "0x60032B3")]
		[Address(RVA = "0x10F9038", Offset = "0x10F9038", VA = "0x10F9038")]
		private void onFailure(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x200086F")]
	internal class GlobalErrorListenerProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<GetSocialError> _onError;

		[Token(Token = "0x60032B4")]
		[Address(RVA = "0x22883E4", Offset = "0x22883E4", VA = "0x22883E4")]
		public GlobalErrorListenerProxy(Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x60032B5")]
		[Address(RVA = "0x2294E44", Offset = "0x2294E44", VA = "0x2294E44")]
		private void onError(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x2000870")]
	internal class IntCallbackProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<int> _onSuccess;

		[Token(Token = "0x4002F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x60032B6")]
		[Address(RVA = "0x100AD38", Offset = "0x100AD38", VA = "0x100AD38")]
		public IntCallbackProxy(Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032B7")]
		[Address(RVA = "0x100AE28", Offset = "0x100AE28", VA = "0x100AE28")]
		private void onSuccess(int value)
		{
		}

		[Token(Token = "0x60032B8")]
		[Address(RVA = "0x100AE88", Offset = "0x100AE88", VA = "0x100AE88")]
		private void onFailure(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x2000871")]
	internal class InviteCallbackProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action _onComplete;

		[Token(Token = "0x4002F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action _onCancel;

		[Token(Token = "0x4002F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x60032B9")]
		[Address(RVA = "0x100EEF0", Offset = "0x100EEF0", VA = "0x100EEF0")]
		public InviteCallbackProxy(Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032BA")]
		[Address(RVA = "0x100EF88", Offset = "0x100EF88", VA = "0x100EF88")]
		private void onComplete()
		{
		}

		[Token(Token = "0x60032BB")]
		[Address(RVA = "0x100F014", Offset = "0x100F014", VA = "0x100F014")]
		private void onCancel()
		{
		}

		[Token(Token = "0x60032BC")]
		[Address(RVA = "0x100F098", Offset = "0x100F098", VA = "0x100F098")]
		private void onError(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x2000872")]
	internal class InviteChannelPluginProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x2000873")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60C14", Offset = "0xB60C14")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AndroidJavaObject inviteChannelAJO;

			[Token(Token = "0x4002F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AndroidJavaObject invitePackageAJO;

			[Token(Token = "0x4002F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AndroidJavaObject callbackAJO;

			[Token(Token = "0x4002F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public InviteChannelPluginProxy <>4__this;

			[Token(Token = "0x4002F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__1;

			[Token(Token = "0x4002F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action <>9__2;

			[Token(Token = "0x4002F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<GetSocialError> <>9__3;

			[Token(Token = "0x60032C0")]
			[Address(RVA = "0xFD52B8", Offset = "0xFD52B8", VA = "0xFD52B8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60032C1")]
			[Address(RVA = "0xFD52C0", Offset = "0xFD52C0", VA = "0xFD52C0")]
			internal void <presentChannelInterface>b__0()
			{
			}

			[Token(Token = "0x60032C2")]
			[Address(RVA = "0xFD563C", Offset = "0xFD563C", VA = "0xFD563C")]
			internal void <presentChannelInterface>b__1()
			{
			}

			[Token(Token = "0x60032C3")]
			[Address(RVA = "0xFD5738", Offset = "0xFD5738", VA = "0xFD5738")]
			internal void <presentChannelInterface>b__2()
			{
			}

			[Token(Token = "0x60032C4")]
			[Address(RVA = "0xFD5834", Offset = "0xFD5834", VA = "0xFD5834")]
			internal void <presentChannelInterface>b__3(GetSocialError err)
			{
			}
		}

		[Token(Token = "0x4002F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly InviteChannelPlugin _invitePlugin;

		[Token(Token = "0x60032BD")]
		[Address(RVA = "0x100FD54", Offset = "0x100FD54", VA = "0x100FD54")]
		public InviteChannelPluginProxy(InviteChannelPlugin invitePlugin)
		{
		}

		[Token(Token = "0x60032BE")]
		[Address(RVA = "0x100FDBC", Offset = "0x100FDBC", VA = "0x100FDBC")]
		private bool isAvailableForDevice(AndroidJavaObject inviteChannelAJO)
		{
			return default(bool);
		}

		[Token(Token = "0x60032BF")]
		[Address(RVA = "0x100FEB0", Offset = "0x100FEB0", VA = "0x100FEB0")]
		private void presentChannelInterface(AndroidJavaObject inviteChannelAJO, AndroidJavaObject invitePackageAJO, AndroidJavaObject callbackAJO)
		{
		}
	}
	[Token(Token = "0x2000874")]
	public class JavaInterfaceProxy : AndroidJavaProxy
	{
		[Token(Token = "0x2000875")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60C24", Offset = "0xB60C24")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<GetSocialError> onFailure;

			[Token(Token = "0x4002F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GetSocialError ex;

			[Token(Token = "0x60032C9")]
			[Address(RVA = "0xFD709C", Offset = "0xFD709C", VA = "0xFD709C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60032CA")]
			[Address(RVA = "0xFD70A4", Offset = "0xFD70A4", VA = "0xFD70A4")]
			internal void <HandleError>b__0()
			{
			}
		}

		[Token(Token = "0x2000876")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60C34", Offset = "0xB60C34")]
		private sealed class <>c__DisplayClass4_0<T>
		{
			[Token(Token = "0x4002F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> onSuccess;

			[Token(Token = "0x4002F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x60032CB")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60032CC")]
			internal void <HandleValue>b__0()
			{
			}
		}

		[Token(Token = "0x4002F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JavaInterfaceProxy _comparingWho;

		[Token(Token = "0x60032C5")]
		[Address(RVA = "0x100ADB4", Offset = "0x100ADB4", VA = "0x100ADB4")]
		internal JavaInterfaceProxy(string javaInterface)
		{
		}

		[Token(Token = "0x60032C6")]
		[Address(RVA = "0x100F00C", Offset = "0x100F00C", VA = "0x100F00C")]
		protected static void ExecuteOnMainThread(Action action)
		{
		}

		[Token(Token = "0x60032C7")]
		[Address(RVA = "0x100AE90", Offset = "0x100AE90", VA = "0x100AE90")]
		protected void HandleError(AndroidJavaObject throwable, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032C8")]
		protected void HandleValue<T>(T value, Action<T> onSuccess)
		{
		}
	}
	[Token(Token = "0x2000877")]
	internal class ListCallbackProxy<T> : JavaInterfaceProxy where T : IConvertableFromNative<T>, new()
	{
		[Serializable]
		[Token(Token = "0x2000878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60C44", Offset = "0xB60C44")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Converter<AndroidJavaObject, T> <>9__3_0;

			[Token(Token = "0x60032D1")]
			public <>c()
			{
			}

			[Token(Token = "0x60032D2")]
			internal T <onSuccess>b__3_0(AndroidJavaObject ajo)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4002F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<List<T>> _onSuccess;

		[Token(Token = "0x4002F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x60032CD")]
		public ListCallbackProxy(Action<List<T>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032CE")]
		private void onSuccess(AndroidJavaObject resultAJO)
		{
		}

		[Token(Token = "0x60032CF")]
		private void onFailure(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x2000879")]
	internal class NotificationListenerProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Func<Notification, bool, bool> _onNotification;

		[Token(Token = "0x60032D3")]
		[Address(RVA = "0x1BCBDB8", Offset = "0x1BCBDB8", VA = "0x1BCBDB8")]
		public NotificationListenerProxy(Func<Notification, bool, bool> onNotification)
		{
		}

		[Token(Token = "0x60032D4")]
		[Address(RVA = "0x1BCBE24", Offset = "0x1BCBE24", VA = "0x1BCBE24")]
		private bool onNotificationReceived(AndroidJavaObject ajo, bool wasClicked)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200087A")]
	internal class OnUserChangedListenerProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action _onUserChanged;

		[Token(Token = "0x60032D5")]
		[Address(RVA = "0x184B298", Offset = "0x184B298", VA = "0x184B298")]
		public OnUserChangedListenerProxy(Action onUserChanged)
		{
		}

		[Token(Token = "0x60032D6")]
		[Address(RVA = "0x184B304", Offset = "0x184B304", VA = "0x184B304")]
		private void onUserChanged()
		{
		}
	}
	[Token(Token = "0x200087B")]
	internal class RunnableProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action _runnable;

		[Token(Token = "0x60032D7")]
		[Address(RVA = "0x13C1330", Offset = "0x13C1330", VA = "0x13C1330")]
		public RunnableProxy(Action runnable)
		{
		}

		[Token(Token = "0x60032D8")]
		[Address(RVA = "0x13C139C", Offset = "0x13C139C", VA = "0x13C139C")]
		private void run()
		{
		}
	}
	[Token(Token = "0x200087C")]
	internal class StringCallbackProxy : JavaInterfaceProxy
	{
		[Token(Token = "0x4002F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Action<string> _onSuccess;

		[Token(Token = "0x4002F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Action<GetSocialError> _onFailure;

		[Token(Token = "0x60032D9")]
		[Address(RVA = "0x1169AFC", Offset = "0x1169AFC", VA = "0x1169AFC")]
		public StringCallbackProxy(Action<string> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032DA")]
		[Address(RVA = "0x1169B7C", Offset = "0x1169B7C", VA = "0x1169B7C")]
		private void onSuccess(string value)
		{
		}

		[Token(Token = "0x60032DB")]
		[Address(RVA = "0x1169BDC", Offset = "0x1169BDC", VA = "0x1169BDC")]
		private void onFailure(AndroidJavaObject throwable)
		{
		}
	}
	[Token(Token = "0x200087D")]
	internal class GetSocialNativeBridgeAndroid : IGetSocialNativeBridge
	{
		[Serializable]
		[Token(Token = "0x200087E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60C54", Offset = "0xB60C54")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<AndroidJavaObject, InviteChannel> <>9__18_0;

			[Token(Token = "0x600332A")]
			[Address(RVA = "0xFD1360", Offset = "0xFD1360", VA = "0xFD1360")]
			public <>c()
			{
			}

			[Token(Token = "0x600332B")]
			[Address(RVA = "0xFD1368", Offset = "0xFD1368", VA = "0xFD1368")]
			internal InviteChannel <get_InviteChannels>b__18_0(AndroidJavaObject ajo)
			{
				return null;
			}
		}

		[Token(Token = "0x4002F24")]
		private const string GetSocialClassSignature = "im.getsocial.sdk.GetSocial";

		[Token(Token = "0x4002F25")]
		private const string GetSocialUserClassSignature = "im.getsocial.sdk.GetSocial$User";

		[Token(Token = "0x4002F26")]
		private const string AndroidAccessHelperClass = "im.getsocial.sdk.GetSocialAccessHelper";

		[Token(Token = "0x4002F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IGetSocialNativeBridge _instance;

		[Token(Token = "0x4002F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly AndroidJavaClass _getSocial;

		[Token(Token = "0x4002F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly AndroidJavaClass _user;

		[Token(Token = "0x17000720")]
		public GetSocialFactory.AvailableRuntimes[] RuntimeImplementation
		{
			[Token(Token = "0x60032DC")]
			[Address(RVA = "0x22864CC", Offset = "0x22864CC", VA = "0x22864CC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000721")]
		public bool IsInitialized
		{
			[Token(Token = "0x60032E0")]
			[Address(RVA = "0x22867C8", Offset = "0x22867C8", VA = "0x22867C8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000722")]
		public InviteChannel[] InviteChannels
		{
			[Token(Token = "0x60032E5")]
			[Address(RVA = "0x2286C54", Offset = "0x2286C54", VA = "0x2286C54", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000723")]
		public string UserId
		{
			[Token(Token = "0x60032F6")]
			[Address(RVA = "0x2288544", Offset = "0x2288544", VA = "0x2288544", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000724")]
		public bool IsUserAnonymous
		{
			[Token(Token = "0x60032F7")]
			[Address(RVA = "0x2288638", Offset = "0x2288638", VA = "0x2288638", Slot = "32")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000725")]
		public Dictionary<string, string> UserAuthIdentities
		{
			[Token(Token = "0x60032F9")]
			[Address(RVA = "0x2288848", Offset = "0x2288848", VA = "0x2288848", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000726")]
		public Dictionary<string, string> AllPublicProperties
		{
			[Token(Token = "0x60032FA")]
			[Address(RVA = "0x2288944", Offset = "0x2288944", VA = "0x2288944", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000727")]
		public Dictionary<string, string> AllPrivateProperties
		{
			[Token(Token = "0x60032FB")]
			[Address(RVA = "0x2288A40", Offset = "0x2288A40", VA = "0x2288A40", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000728")]
		public string DisplayName
		{
			[Token(Token = "0x60032FC")]
			[Address(RVA = "0x2288B3C", Offset = "0x2288B3C", VA = "0x2288B3C", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000729")]
		public string AvatarUrl
		{
			[Token(Token = "0x60032FE")]
			[Address(RVA = "0x2288D80", Offset = "0x2288D80", VA = "0x2288D80", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60032DD")]
		[Address(RVA = "0x2286514", Offset = "0x2286514", VA = "0x2286514")]
		public GetSocialNativeBridgeAndroid()
		{
		}

		[Token(Token = "0x60032DE")]
		[Address(RVA = "0x22865E0", Offset = "0x22865E0", VA = "0x22865E0", Slot = "5")]
		public void Init(string appId)
		{
		}

		[Token(Token = "0x60032DF")]
		[Address(RVA = "0x22866BC", Offset = "0x22866BC", VA = "0x22866BC", Slot = "6")]
		public void WhenInitialized(Action action)
		{
		}

		[Token(Token = "0x60032E1")]
		[Address(RVA = "0x22868BC", Offset = "0x22868BC", VA = "0x22868BC", Slot = "8")]
		public string GetNativeSdkVersion()
		{
			return null;
		}

		[Token(Token = "0x60032E2")]
		[Address(RVA = "0x22869B0", Offset = "0x22869B0", VA = "0x22869B0", Slot = "9")]
		public string GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x60032E3")]
		[Address(RVA = "0x2286AA4", Offset = "0x2286AA4", VA = "0x2286AA4", Slot = "10")]
		public bool SetLanguage(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60032E4")]
		[Address(RVA = "0x2286B7C", Offset = "0x2286B7C", VA = "0x2286B7C", Slot = "13")]
		public bool IsInviteChannelAvailable(string channelId)
		{
			return default(bool);
		}

		[Token(Token = "0x60032E6")]
		[Address(RVA = "0x2286E70", Offset = "0x2286E70", VA = "0x2286E70", Slot = "15")]
		public void SendInvite(string channelId, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032E7")]
		[Address(RVA = "0x2286FC8", Offset = "0x2286FC8", VA = "0x2286FC8", Slot = "16")]
		public void SendInvite(string channelId, InviteContent customInviteContent, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032E8")]
		[Address(RVA = "0x228717C", Offset = "0x228717C", VA = "0x228717C", Slot = "17")]
		public void SendInvite(string channelId, InviteContent customInviteContent, LinkParams linkParams, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032E9")]
		[Address(RVA = "0x2287384", Offset = "0x2287384", VA = "0x2287384", Slot = "18")]
		public bool RegisterInviteChannelPlugin(string channelId, InviteChannelPlugin inviteChannelPlugin)
		{
			return default(bool);
		}

		[Token(Token = "0x60032EA")]
		[Address(RVA = "0x22875C8", Offset = "0x22875C8", VA = "0x22875C8", Slot = "19")]
		public void GetReferralData(Action<ReferralData> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032EB")]
		[Address(RVA = "0x22876E4", Offset = "0x22876E4", VA = "0x22876E4", Slot = "20")]
		public void GetReferredUsers(Action<List<ReferredUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032EC")]
		[Address(RVA = "0x2287814", Offset = "0x2287814", VA = "0x2287814", Slot = "21")]
		public void CreateInviteLink(LinkParams linkParams, Action<string> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032ED")]
		[Address(RVA = "0x2287980", Offset = "0x2287980", VA = "0x2287980", Slot = "22")]
		public void RegisterForPushNotifications()
		{
		}

		[Token(Token = "0x60032EE")]
		[Address(RVA = "0x2287A7C", Offset = "0x2287A7C", VA = "0x2287A7C", Slot = "23")]
		public void SetNotificationListener(Func<Notification, bool, bool> listener)
		{
		}

		[Token(Token = "0x60032EF")]
		[Address(RVA = "0x2287B88", Offset = "0x2287B88", VA = "0x2287B88", Slot = "24")]
		public void GetNotifications(NotificationsQuery query, Action<List<Notification>> onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x60032F0")]
		[Address(RVA = "0x2287D00", Offset = "0x2287D00", VA = "0x2287D00", Slot = "25")]
		public void GetNotificationsCount(NotificationsCountQuery query, Action<int> onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x60032F1")]
		[Address(RVA = "0x2287E64", Offset = "0x2287E64", VA = "0x2287E64", Slot = "26")]
		public void SetNotificationsRead(List<string> notificationsIds, bool isRead, Action onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x60032F2")]
		[Address(RVA = "0x2288048", Offset = "0x2288048", VA = "0x2288048", Slot = "27")]
		public void SetPushNotificationsEnabled(bool isEnabled, Action onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x60032F3")]
		[Address(RVA = "0x22881C4", Offset = "0x22881C4", VA = "0x22881C4", Slot = "28")]
		public void IsPushNotificationsEnabled(Action<bool> onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x60032F4")]
		[Address(RVA = "0x22882E0", Offset = "0x22882E0", VA = "0x22882E0", Slot = "11")]
		public bool SetGlobalErrorListener(Action<GetSocialError> onError)
		{
			return default(bool);
		}

		[Token(Token = "0x60032F5")]
		[Address(RVA = "0x2288450", Offset = "0x2288450", VA = "0x2288450", Slot = "12")]
		public bool RemoveGlobalErrorListener()
		{
			return default(bool);
		}

		[Token(Token = "0x60032F8")]
		[Address(RVA = "0x228872C", Offset = "0x228872C", VA = "0x228872C", Slot = "33")]
		public void ResetUser(Action onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x60032FD")]
		[Address(RVA = "0x2288C30", Offset = "0x2288C30", VA = "0x2288C30", Slot = "38")]
		public void SetDisplayName(string displayName, Action onComplete, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60032FF")]
		[Address(RVA = "0x2288E74", Offset = "0x2288E74", VA = "0x2288E74", Slot = "40")]
		public void SetAvatarUrl(string avatarUrl, Action onComplete, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003300")]
		[Address(RVA = "0x2288FC0", Offset = "0x2288FC0", VA = "0x2288FC0", Slot = "41")]
		public void SetAvatar(Texture2D avatar, Action onComplete, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003301")]
		[Address(RVA = "0x2289120", Offset = "0x2289120", VA = "0x2289120", Slot = "42")]
		public void SetPublicProperty(string key, string value, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003302")]
		[Address(RVA = "0x22892A4", Offset = "0x22892A4", VA = "0x22892A4", Slot = "43")]
		public void SetPrivateProperty(string key, string value, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003303")]
		[Address(RVA = "0x2289428", Offset = "0x2289428", VA = "0x2289428", Slot = "44")]
		public void RemovePublicProperty(string key, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003304")]
		[Address(RVA = "0x2289574", Offset = "0x2289574", VA = "0x2289574", Slot = "45")]
		public void RemovePrivateProperty(string key, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003305")]
		[Address(RVA = "0x22896C0", Offset = "0x22896C0", VA = "0x22896C0", Slot = "46")]
		public string GetPublicProperty(string key)
		{
			return null;
		}

		[Token(Token = "0x6003306")]
		[Address(RVA = "0x2289798", Offset = "0x2289798", VA = "0x2289798", Slot = "47")]
		public string GetPrivateProperty(string key)
		{
			return null;
		}

		[Token(Token = "0x6003307")]
		[Address(RVA = "0x2289870", Offset = "0x2289870", VA = "0x2289870", Slot = "48")]
		public bool HasPublicProperty(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6003308")]
		[Address(RVA = "0x2289948", Offset = "0x2289948", VA = "0x2289948", Slot = "49")]
		public bool HasPrivateProperty(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6003309")]
		[Address(RVA = "0x2289A20", Offset = "0x2289A20", VA = "0x2289A20", Slot = "50")]
		public void AddAuthIdentity(AuthIdentity identity, Action onComplete, Action<GetSocialError> onFailure, Action<ConflictUser> onConflict)
		{
		}

		[Token(Token = "0x600330A")]
		[Address(RVA = "0x2289B8C", Offset = "0x2289B8C", VA = "0x2289B8C", Slot = "52")]
		public void SwitchUser(AuthIdentity identity, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600330B")]
		[Address(RVA = "0x2289CF0", Offset = "0x2289CF0", VA = "0x2289CF0", Slot = "51")]
		public void RemoveAuthIdentity(string providerId, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600330C")]
		[Address(RVA = "0x2289E40", Offset = "0x2289E40", VA = "0x2289E40", Slot = "29")]
		public bool SetOnUserChangedListener(Action onUserChanged)
		{
			return default(bool);
		}

		[Token(Token = "0x600330D")]
		[Address(RVA = "0x2289F48", Offset = "0x2289F48", VA = "0x2289F48", Slot = "30")]
		public bool RemoveOnUserChangedListener()
		{
			return default(bool);
		}

		[Token(Token = "0x600330E")]
		[Address(RVA = "0x228A03C", Offset = "0x228A03C", VA = "0x228A03C", Slot = "53")]
		public void GetUserById(string userId, Action<PublicUser> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600330F")]
		[Address(RVA = "0x228A1A0", Offset = "0x228A1A0", VA = "0x228A1A0", Slot = "54")]
		public void GetUserByAuthIdentity(string providerId, string providerUserId, Action<PublicUser> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003310")]
		[Address(RVA = "0x228A33C", Offset = "0x228A33C", VA = "0x228A33C", Slot = "55")]
		public void GetUsersByAuthIdentities(string providerId, List<string> providerUserIds, Action<Dictionary<string, PublicUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003311")]
		[Address(RVA = "0x228A4FC", Offset = "0x228A4FC", VA = "0x228A4FC", Slot = "56")]
		public void FindUsers(UsersQuery query, Action<List<UserReference>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003312")]
		[Address(RVA = "0x228A674", Offset = "0x228A674", VA = "0x228A674", Slot = "57")]
		public void AddFriend(string userId, Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003313")]
		[Address(RVA = "0x228A7C4", Offset = "0x228A7C4", VA = "0x228A7C4", Slot = "58")]
		public void AddFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003314")]
		[Address(RVA = "0x228A970", Offset = "0x228A970", VA = "0x228A970", Slot = "59")]
		public void RemoveFriend(string userId, Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003315")]
		[Address(RVA = "0x228AAC0", Offset = "0x228AAC0", VA = "0x228AAC0", Slot = "60")]
		public void RemoveFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003316")]
		[Address(RVA = "0x228AC6C", Offset = "0x228AC6C", VA = "0x228AC6C", Slot = "61")]
		public void SetFriends(List<string> userIds, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003317")]
		[Address(RVA = "0x228ADBC", Offset = "0x228ADBC", VA = "0x228ADBC", Slot = "62")]
		public void SetFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003318")]
		[Address(RVA = "0x228AF68", Offset = "0x228AF68", VA = "0x228AF68", Slot = "63")]
		public void IsFriend(string userId, Action<bool> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003319")]
		[Address(RVA = "0x228B0B8", Offset = "0x228B0B8", VA = "0x228B0B8", Slot = "64")]
		public void GetFriendsCount(Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600331A")]
		[Address(RVA = "0x228B1D4", Offset = "0x228B1D4", VA = "0x228B1D4", Slot = "65")]
		public void GetFriends(int offset, int limit, Action<List<PublicUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600331B")]
		[Address(RVA = "0x228B3B8", Offset = "0x228B3B8", VA = "0x228B3B8", Slot = "66")]
		public void GetSuggestedFriends(int offset, int limit, Action<List<SuggestedFriend>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600331C")]
		[Address(RVA = "0x228B59C", Offset = "0x228B59C", VA = "0x228B59C", Slot = "67")]
		public void GetFriendsReferences(Action<List<UserReference>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600331D")]
		[Address(RVA = "0x228B6CC", Offset = "0x228B6CC", VA = "0x228B6CC", Slot = "68")]
		public void GetAnnouncements(string feed, Action<List<ActivityPost>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600331E")]
		[Address(RVA = "0x228B830", Offset = "0x228B830", VA = "0x228B830", Slot = "69")]
		public void GetActivities(ActivitiesQuery query, Action<List<ActivityPost>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600331F")]
		[Address(RVA = "0x228B9A8", Offset = "0x228B9A8", VA = "0x228B9A8", Slot = "70")]
		public void GetActivity(string activityId, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003320")]
		[Address(RVA = "0x228BB0C", Offset = "0x228BB0C", VA = "0x228BB0C", Slot = "71")]
		public void PostActivityToFeed(string feed, ActivityPostContent content, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003321")]
		[Address(RVA = "0x228BCBC", Offset = "0x228BCBC", VA = "0x228BCBC", Slot = "72")]
		public void PostCommentToActivity(string activityId, ActivityPostContent comment, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003322")]
		[Address(RVA = "0x228BE6C", Offset = "0x228BE6C", VA = "0x228BE6C", Slot = "73")]
		public void LikeActivity(string activityId, bool isLiked, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003323")]
		[Address(RVA = "0x228C040", Offset = "0x228C040", VA = "0x228C040", Slot = "74")]
		public void GetActivityLikers(string activityId, int offset, int limit, Action<List<PublicUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003324")]
		[Address(RVA = "0x228C25C", Offset = "0x228C25C", VA = "0x228C25C", Slot = "75")]
		public void ReportActivity(string activityId, ReportingReason reportingReason, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003325")]
		[Address(RVA = "0x228C3F4", Offset = "0x228C3F4", VA = "0x228C3F4", Slot = "76")]
		public void DeleteActivity(string activityId, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003326")]
		[Address(RVA = "0x228C544", Offset = "0x228C544", VA = "0x228C544", Slot = "78")]
		public void HandleOnStartUnityEvent()
		{
		}

		[Token(Token = "0x6003327")]
		[Address(RVA = "0x22874A0", Offset = "0x22874A0", VA = "0x22874A0")]
		private static AndroidJavaObject CreateAdapter(InviteChannelPlugin plugin)
		{
			return null;
		}

		[Token(Token = "0x6003328")]
		[Address(RVA = "0x228C640", Offset = "0x228C640", VA = "0x228C640", Slot = "77")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200087F")]
	public static class EnumConversion
	{
		[Token(Token = "0x600332C")]
		[Address(RVA = "0x10F6B44", Offset = "0x10F6B44", VA = "0x10F6B44")]
		public static AndroidJavaObject ToAndroidJavaObject(this ReportingReason reportingReason)
		{
			return null;
		}

		[Token(Token = "0x600332D")]
		[Address(RVA = "0x10F6BA8", Offset = "0x10F6BA8", VA = "0x10F6BA8")]
		public static AndroidJavaObject ToAndroidJavaObject(this ActivitiesQuery.Filter filter)
		{
			return null;
		}

		[Token(Token = "0x600332E")]
		[Address(RVA = "0x10F6C0C", Offset = "0x10F6C0C", VA = "0x10F6C0C")]
		public static AndroidJavaObject ToAndroidJavaObject(this NotificationsQuery.Filter filter)
		{
			return null;
		}

		[Token(Token = "0x600332F")]
		private static AndroidJavaObject ToAndroidJavaObject<T>(T type, string javaClass) where T : IConvertible
		{
			return null;
		}
	}
	[Token(Token = "0x2000880")]
	public static class JniExtensionMethods
	{
		[Token(Token = "0x6003330")]
		[Address(RVA = "0x1016AD4", Offset = "0x1016AD4", VA = "0x1016AD4")]
		public static string CallStaticStr(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6003331")]
		[Address(RVA = "0x1016C5C", Offset = "0x1016C5C", VA = "0x1016C5C")]
		public static bool CallStaticBool(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6003332")]
		[Address(RVA = "0x1016CC0", Offset = "0x1016CC0", VA = "0x1016CC0")]
		public static int CallStaticInt(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return default(int);
		}

		[Token(Token = "0x6003333")]
		[Address(RVA = "0x1016D24", Offset = "0x1016D24", VA = "0x1016D24")]
		public static long CallStaticLong(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return default(long);
		}

		[Token(Token = "0x6003334")]
		[Address(RVA = "0x1016D88", Offset = "0x1016D88", VA = "0x1016D88")]
		public static float CallStaticFloat(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return default(float);
		}

		[Token(Token = "0x6003335")]
		[Address(RVA = "0x1016DEC", Offset = "0x1016DEC", VA = "0x1016DEC")]
		public static AndroidJavaObject CallStaticAJO(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6003336")]
		[Address(RVA = "0x1016E50", Offset = "0x1016E50", VA = "0x1016E50")]
		public static void CallStaticSafe(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
		}

		[Token(Token = "0x6003337")]
		[Address(RVA = "0x100FCF0", Offset = "0x100FCF0", VA = "0x100FCF0")]
		public static bool CallBool(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6003338")]
		[Address(RVA = "0x100FC8C", Offset = "0x100FC8C", VA = "0x100FC8C")]
		public static int CallInt(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return default(int);
		}

		[Token(Token = "0x6003339")]
		[Address(RVA = "0x1016EEC", Offset = "0x1016EEC", VA = "0x1016EEC")]
		public static long CallLong(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return default(long);
		}

		[Token(Token = "0x600333A")]
		[Address(RVA = "0x1016F50", Offset = "0x1016F50", VA = "0x1016F50")]
		public static float CallFloat(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return default(float);
		}

		[Token(Token = "0x600333B")]
		[Address(RVA = "0x100FAF4", Offset = "0x100FAF4", VA = "0x100FAF4")]
		public static string CallStr(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600333C")]
		[Address(RVA = "0x1010770", Offset = "0x1010770", VA = "0x1010770")]
		public static AndroidJavaObject CallAJO(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x600333D")]
		[Address(RVA = "0x1016FB4", Offset = "0x1016FB4", VA = "0x1016FB4")]
		public static void CallSafe(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
		}

		[Token(Token = "0x600333E")]
		public static T GetSafe<T>(this AndroidJavaObject ajo, string fieldName)
		{
			return (T)null;
		}

		[Token(Token = "0x600333F")]
		private static T CallStaticSafe<T>(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return (T)null;
		}

		[Token(Token = "0x6003340")]
		private static T CallSafe<T>(this AndroidJavaObject ajo, string methodName, params object[] args)
		{
			return (T)null;
		}

		[Token(Token = "0x6003341")]
		private static void HandleAndroidJavaObjectCallException<T>(AndroidJavaObject ajo, string methodName, Exception exception)
		{
		}
	}
	[Token(Token = "0x2000881")]
	public static class JniUtils
	{
		[Token(Token = "0x2000882")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60C94", Offset = "0xB60C94")]
		private sealed class <>c__DisplayClass14_0<T>
		{
			[Token(Token = "0x4002F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AndroidJavaObject javaList;

			[Token(Token = "0x6003354")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6003355")]
			internal void <ToJavaList>b__0(T item)
			{
			}
		}

		[Token(Token = "0x4002F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _activity;

		[Token(Token = "0x4002F2D")]
		private const string JavaHashMapClass = "java.util.HashMap";

		[Token(Token = "0x4002F2E")]
		private const string JavaArrayList = "java.util.ArrayList";

		[Token(Token = "0x1700072A")]
		public static AndroidJavaObject Activity
		{
			[Token(Token = "0x6003342")]
			[Address(RVA = "0x1017050", Offset = "0x1017050", VA = "0x1017050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003343")]
		[Address(RVA = "0x10170C4", Offset = "0x10170C4", VA = "0x10170C4")]
		public static AndroidJavaObject GetMainActivity()
		{
			return null;
		}

		[Token(Token = "0x6003344")]
		[Address(RVA = "0x101716C", Offset = "0x101716C", VA = "0x101716C")]
		public static void RunOnUiThread(Action action)
		{
		}

		[Token(Token = "0x6003345")]
		[Address(RVA = "0x101728C", Offset = "0x101728C", VA = "0x101728C")]
		public static bool RunOnUiThreadSafe(Action action)
		{
			return default(bool);
		}

		[Token(Token = "0x6003346")]
		[Address(RVA = "0x100FA68", Offset = "0x100FA68", VA = "0x100FA68")]
		public static void CheckIfClassIsCorrect(AndroidJavaObject ajo, string expectedSimpleClassName)
		{
		}

		[Token(Token = "0x6003347")]
		[Address(RVA = "0x1017418", Offset = "0x1017418", VA = "0x1017418")]
		public static AndroidJavaObject NewJavaThrowable(string message)
		{
			return null;
		}

		[Token(Token = "0x6003348")]
		[Address(RVA = "0x1017504", Offset = "0x1017504", VA = "0x1017504")]
		public static bool IsJavaNull(this AndroidJavaObject ajo)
		{
			return default(bool);
		}

		[Token(Token = "0x6003349")]
		public static AndroidJavaObject ToJavaHashMap<TKey, TValue>(this Dictionary<TKey, TValue> dictionary)
		{
			return null;
		}

		[Token(Token = "0x600334A")]
		[Address(RVA = "0x101754C", Offset = "0x101754C", VA = "0x101754C")]
		public static Dictionary<string, string> FromJavaHashMap(this AndroidJavaObject javaHashMap)
		{
			return null;
		}

		[Token(Token = "0x600334B")]
		[Address(RVA = "0x1017A5C", Offset = "0x1017A5C", VA = "0x1017A5C")]
		public static List<AndroidJavaObject> FromJavaList(this AndroidJavaObject javaList)
		{
			return null;
		}

		[Token(Token = "0x600334C")]
		public static AndroidJavaObject ToJavaList<T>(this List<T> list)
		{
			return null;
		}

		[Token(Token = "0x600334D")]
		[Address(RVA = "0x1016A68", Offset = "0x1016A68", VA = "0x1016A68")]
		public static GetSocialError ToGetSocialError(this AndroidJavaObject getSocialExceptionAJO)
		{
			return null;
		}

		[Token(Token = "0x600334E")]
		[Address(RVA = "0x1017EC8", Offset = "0x1017EC8", VA = "0x1017EC8")]
		public static string GetClassName(this AndroidJavaObject ajo)
		{
			return null;
		}

		[Token(Token = "0x600334F")]
		[Address(RVA = "0x1017320", Offset = "0x1017320", VA = "0x1017320")]
		public static string GetClassSimpleName(this AndroidJavaObject ajo)
		{
			return null;
		}

		[Token(Token = "0x6003350")]
		[Address(RVA = "0x1017FC0", Offset = "0x1017FC0", VA = "0x1017FC0")]
		public static AndroidJavaObject GetJavaClass(this AndroidJavaObject ajo)
		{
			return null;
		}

		[Token(Token = "0x6003351")]
		[Address(RVA = "0x10180AC", Offset = "0x10180AC", VA = "0x10180AC")]
		public static AndroidJavaObject ToJavaStringArray(this IList<string> values)
		{
			return null;
		}

		[Token(Token = "0x6003352")]
		[Address(RVA = "0x101150C", Offset = "0x101150C", VA = "0x101150C")]
		public static Texture2D FromAndroidBitmap(this AndroidJavaObject bitmapAJO)
		{
			return null;
		}

		[Token(Token = "0x6003353")]
		[Address(RVA = "0x10107D4", Offset = "0x10107D4", VA = "0x10107D4")]
		public static AndroidJavaObject ToAjoBitmap(this Texture2D texture2D)
		{
			return null;
		}
	}
	[Token(Token = "0x2000883")]
	internal class GetSocialNativeBridgeMock : IGetSocialNativeBridge
	{
		[Token(Token = "0x4002F30")]
		private const string Mock = "mock";

		[Token(Token = "0x4002F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IGetSocialNativeBridge _instance;

		[Token(Token = "0x4002F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<string, string> EmptyIdentities;

		[Token(Token = "0x4002F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly InviteChannel[] EmptyChannels;

		[Token(Token = "0x4002F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB78EB0", Offset = "0xB78EB0")]
		private string <Language>k__BackingField;

		[Token(Token = "0x1700072B")]
		public GetSocialFactory.AvailableRuntimes[] RuntimeImplementation
		{
			[Token(Token = "0x6003356")]
			[Address(RVA = "0x228C9FC", Offset = "0x228C9FC", VA = "0x228C9FC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072C")]
		public static IGetSocialNativeBridge Instance
		{
			[Token(Token = "0x6003357")]
			[Address(RVA = "0x2286424", Offset = "0x2286424", VA = "0x2286424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072D")]
		public bool IsInitialized
		{
			[Token(Token = "0x600335A")]
			[Address(RVA = "0x228CC4C", Offset = "0x228CC4C", VA = "0x228CC4C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700072E")]
		public string Language
		{
			[Token(Token = "0x600335E")]
			[Address(RVA = "0x228CE98", Offset = "0x228CE98", VA = "0x228CE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89928", Offset = "0xB89928")]
			get
			{
				return null;
			}
			[Token(Token = "0x600335F")]
			[Address(RVA = "0x228CEA0", Offset = "0x228CEA0", VA = "0x228CEA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB89938", Offset = "0xB89938")]
			set
			{
			}
		}

		[Token(Token = "0x1700072F")]
		public InviteChannel[] InviteChannels
		{
			[Token(Token = "0x6003361")]
			[Address(RVA = "0x228CF9C", Offset = "0x228CF9C", VA = "0x228CF9C", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000730")]
		public string UserId
		{
			[Token(Token = "0x6003374")]
			[Address(RVA = "0x228E764", Offset = "0x228E764", VA = "0x228E764", Slot = "31")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000731")]
		public bool IsUserAnonymous
		{
			[Token(Token = "0x6003375")]
			[Address(RVA = "0x228E7B0", Offset = "0x228E7B0", VA = "0x228E7B0", Slot = "32")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000732")]
		public Dictionary<string, string> UserAuthIdentities
		{
			[Token(Token = "0x6003377")]
			[Address(RVA = "0x228E8EC", Offset = "0x228E8EC", VA = "0x228E8EC", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000733")]
		public Dictionary<string, string> AllPublicProperties
		{
			[Token(Token = "0x6003378")]
			[Address(RVA = "0x228E950", Offset = "0x228E950", VA = "0x228E950", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000734")]
		public Dictionary<string, string> AllPrivateProperties
		{
			[Token(Token = "0x6003379")]
			[Address(RVA = "0x228E9BC", Offset = "0x228E9BC", VA = "0x228E9BC", Slot = "36")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000735")]
		public string DisplayName
		{
			[Token(Token = "0x600337A")]
			[Address(RVA = "0x228EA28", Offset = "0x228EA28", VA = "0x228EA28", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000736")]
		public string AvatarUrl
		{
			[Token(Token = "0x600337C")]
			[Address(RVA = "0x228EBD0", Offset = "0x228EBD0", VA = "0x228EBD0", Slot = "39")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6003358")]
		[Address(RVA = "0x228CA74", Offset = "0x228CA74", VA = "0x228CA74", Slot = "5")]
		public void Init(string appId)
		{
		}

		[Token(Token = "0x6003359")]
		[Address(RVA = "0x228CB60", Offset = "0x228CB60", VA = "0x228CB60", Slot = "6")]
		public void WhenInitialized(Action action)
		{
		}

		[Token(Token = "0x600335B")]
		[Address(RVA = "0x228CC54", Offset = "0x228CC54", VA = "0x228CC54", Slot = "8")]
		public string GetNativeSdkVersion()
		{
			return null;
		}

		[Token(Token = "0x600335C")]
		[Address(RVA = "0x228CC98", Offset = "0x228CC98", VA = "0x228CC98", Slot = "9")]
		public string GetLanguage()
		{
			return null;
		}

		[Token(Token = "0x600335D")]
		[Address(RVA = "0x228CDA4", Offset = "0x228CDA4", VA = "0x228CDA4", Slot = "10")]
		public bool SetLanguage(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6003360")]
		[Address(RVA = "0x228CEA8", Offset = "0x228CEA8", VA = "0x228CEA8", Slot = "13")]
		public bool IsInviteChannelAvailable(string channelId)
		{
			return default(bool);
		}

		[Token(Token = "0x6003362")]
		[Address(RVA = "0x228D000", Offset = "0x228D000", VA = "0x228D000", Slot = "15")]
		public void SendInvite(string channelId, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003363")]
		[Address(RVA = "0x228D19C", Offset = "0x228D19C", VA = "0x228D19C", Slot = "16")]
		public void SendInvite(string channelId, InviteContent customInviteContent, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003364")]
		[Address(RVA = "0x228D378", Offset = "0x228D378", VA = "0x228D378", Slot = "17")]
		public void SendInvite(string channelId, InviteContent customInviteContent, LinkParams linkParams, Action onComplete, Action onCancel, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003365")]
		[Address(RVA = "0x228D58C", Offset = "0x228D58C", VA = "0x228D58C", Slot = "18")]
		public bool RegisterInviteChannelPlugin(string channelId, InviteChannelPlugin inviteChannelPlugin)
		{
			return default(bool);
		}

		[Token(Token = "0x6003366")]
		[Address(RVA = "0x228D6B8", Offset = "0x228D6B8", VA = "0x228D6B8", Slot = "19")]
		public void GetReferralData(Action<ReferralData> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003367")]
		[Address(RVA = "0x228D7DC", Offset = "0x228D7DC", VA = "0x228D7DC", Slot = "20")]
		public void GetReferredUsers(Action<List<ReferredUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003368")]
		[Address(RVA = "0x228D900", Offset = "0x228D900", VA = "0x228D900", Slot = "21")]
		public void CreateInviteLink(LinkParams linkParams, Action<string> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003369")]
		[Address(RVA = "0x228DA24", Offset = "0x228DA24", VA = "0x228DA24", Slot = "22")]
		public void RegisterForPushNotifications()
		{
		}

		[Token(Token = "0x600336A")]
		[Address(RVA = "0x228DB28", Offset = "0x228DB28", VA = "0x228DB28", Slot = "23")]
		public void SetNotificationListener(Func<Notification, bool, bool> listener)
		{
		}

		[Token(Token = "0x600336B")]
		[Address(RVA = "0x228DC14", Offset = "0x228DC14", VA = "0x228DC14", Slot = "24")]
		public void GetNotifications(NotificationsQuery query, Action<List<Notification>> onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x600336C")]
		[Address(RVA = "0x228DD78", Offset = "0x228DD78", VA = "0x228DD78", Slot = "25")]
		public void GetNotificationsCount(NotificationsCountQuery query, Action<int> onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x600336D")]
		[Address(RVA = "0x228DEDC", Offset = "0x228DEDC", VA = "0x228DEDC", Slot = "26")]
		public void SetNotificationsRead(List<string> notificationsIds, bool isRead, Action onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x600336E")]
		[Address(RVA = "0x228E0B0", Offset = "0x228E0B0", VA = "0x228E0B0", Slot = "27")]
		public void SetPushNotificationsEnabled(bool isEnabled, Action onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x600336F")]
		[Address(RVA = "0x228E240", Offset = "0x228E240", VA = "0x228E240", Slot = "28")]
		public void IsPushNotificationsEnabled(Action<bool> onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x6003370")]
		[Address(RVA = "0x228E364", Offset = "0x228E364", VA = "0x228E364", Slot = "29")]
		public bool SetOnUserChangedListener(Action listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6003371")]
		[Address(RVA = "0x228E458", Offset = "0x228E458", VA = "0x228E458", Slot = "30")]
		public bool RemoveOnUserChangedListener()
		{
			return default(bool);
		}

		[Token(Token = "0x6003372")]
		[Address(RVA = "0x228E564", Offset = "0x228E564", VA = "0x228E564", Slot = "11")]
		public bool SetGlobalErrorListener(Action<GetSocialError> onError)
		{
			return default(bool);
		}

		[Token(Token = "0x6003373")]
		[Address(RVA = "0x228E658", Offset = "0x228E658", VA = "0x228E658", Slot = "12")]
		public bool RemoveGlobalErrorListener()
		{
			return default(bool);
		}

		[Token(Token = "0x6003376")]
		[Address(RVA = "0x228E7B8", Offset = "0x228E7B8", VA = "0x228E7B8", Slot = "33")]
		public void ResetUser(Action onSuccess, Action<GetSocialError> onError)
		{
		}

		[Token(Token = "0x600337B")]
		[Address(RVA = "0x228EA6C", Offset = "0x228EA6C", VA = "0x228EA6C", Slot = "38")]
		public void SetDisplayName(string displayName, Action onComplete, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600337D")]
		[Address(RVA = "0x228EC14", Offset = "0x228EC14", VA = "0x228EC14", Slot = "40")]
		public void SetAvatarUrl(string avatarUrl, Action onComplete, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600337E")]
		[Address(RVA = "0x228ED78", Offset = "0x228ED78", VA = "0x228ED78", Slot = "41")]
		public void SetAvatar(Texture2D avatar, Action onComplete, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600337F")]
		[Address(RVA = "0x228EEDC", Offset = "0x228EEDC", VA = "0x228EEDC", Slot = "42")]
		public void SetPublicProperty(string key, string value, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003380")]
		[Address(RVA = "0x228F078", Offset = "0x228F078", VA = "0x228F078", Slot = "43")]
		public void SetPrivateProperty(string key, string value, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003381")]
		[Address(RVA = "0x228F214", Offset = "0x228F214", VA = "0x228F214", Slot = "44")]
		public void RemovePublicProperty(string key, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003382")]
		[Address(RVA = "0x228F378", Offset = "0x228F378", VA = "0x228F378", Slot = "45")]
		public void RemovePrivateProperty(string key, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003383")]
		[Address(RVA = "0x228F4DC", Offset = "0x228F4DC", VA = "0x228F4DC", Slot = "46")]
		public string GetPublicProperty(string key)
		{
			return null;
		}

		[Token(Token = "0x6003384")]
		[Address(RVA = "0x228F520", Offset = "0x228F520", VA = "0x228F520", Slot = "47")]
		public string GetPrivateProperty(string key)
		{
			return null;
		}

		[Token(Token = "0x6003385")]
		[Address(RVA = "0x228F564", Offset = "0x228F564", VA = "0x228F564", Slot = "48")]
		public bool HasPublicProperty(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6003386")]
		[Address(RVA = "0x228F56C", Offset = "0x228F56C", VA = "0x228F56C", Slot = "49")]
		public bool HasPrivateProperty(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6003387")]
		[Address(RVA = "0x228F574", Offset = "0x228F574", VA = "0x228F574", Slot = "50")]
		public void AddAuthIdentity(AuthIdentity authIdentity, Action onComplete, Action<GetSocialError> onFailure, Action<ConflictUser> onConflict)
		{
		}

		[Token(Token = "0x6003388")]
		[Address(RVA = "0x228F710", Offset = "0x228F710", VA = "0x228F710", Slot = "53")]
		public void GetUserById(string userId, Action<PublicUser> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003389")]
		[Address(RVA = "0x228F874", Offset = "0x228F874", VA = "0x228F874", Slot = "54")]
		public void GetUserByAuthIdentity(string providerId, string providerUserId, Action<PublicUser> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600338A")]
		[Address(RVA = "0x228F9D8", Offset = "0x228F9D8", VA = "0x228F9D8", Slot = "55")]
		public void GetUsersByAuthIdentities(string providerId, List<string> providerUserIds, Action<Dictionary<string, PublicUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600338B")]
		[Address(RVA = "0x228FB74", Offset = "0x228FB74", VA = "0x228FB74", Slot = "56")]
		public void FindUsers(UsersQuery query, Action<List<UserReference>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600338C")]
		[Address(RVA = "0x228FCD8", Offset = "0x228FCD8", VA = "0x228FCD8", Slot = "51")]
		public void RemoveAuthIdentity(string providerId, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600338D")]
		[Address(RVA = "0x228FE3C", Offset = "0x228FE3C", VA = "0x228FE3C", Slot = "52")]
		public void SwitchUser(AuthIdentity authIdentity, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600338E")]
		[Address(RVA = "0x228FFA0", Offset = "0x228FFA0", VA = "0x228FFA0", Slot = "57")]
		public void AddFriend(string userId, Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600338F")]
		[Address(RVA = "0x2290104", Offset = "0x2290104", VA = "0x2290104", Slot = "58")]
		public void AddFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003390")]
		[Address(RVA = "0x22902A0", Offset = "0x22902A0", VA = "0x22902A0", Slot = "59")]
		public void RemoveFriend(string userId, Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003391")]
		[Address(RVA = "0x2290404", Offset = "0x2290404", VA = "0x2290404", Slot = "60")]
		public void RemoveFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003392")]
		[Address(RVA = "0x22905A0", Offset = "0x22905A0", VA = "0x22905A0", Slot = "61")]
		public void SetFriends(List<string> userIds, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003393")]
		[Address(RVA = "0x2290704", Offset = "0x2290704", VA = "0x2290704", Slot = "62")]
		public void SetFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003394")]
		[Address(RVA = "0x22908A0", Offset = "0x22908A0", VA = "0x22908A0", Slot = "63")]
		public void IsFriend(string userId, Action<bool> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003395")]
		[Address(RVA = "0x2290A04", Offset = "0x2290A04", VA = "0x2290A04", Slot = "64")]
		public void GetFriendsCount(Action<int> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003396")]
		[Address(RVA = "0x2290B28", Offset = "0x2290B28", VA = "0x2290B28", Slot = "65")]
		public void GetFriends(int offset, int limit, Action<List<PublicUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003397")]
		[Address(RVA = "0x2290D0C", Offset = "0x2290D0C", VA = "0x2290D0C", Slot = "66")]
		public void GetSuggestedFriends(int offset, int limit, Action<List<SuggestedFriend>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003398")]
		[Address(RVA = "0x2290EF0", Offset = "0x2290EF0", VA = "0x2290EF0", Slot = "67")]
		public void GetFriendsReferences(Action<List<UserReference>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x6003399")]
		[Address(RVA = "0x2291014", Offset = "0x2291014", VA = "0x2291014", Slot = "68")]
		public void GetAnnouncements(string feed, Action<List<ActivityPost>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600339A")]
		[Address(RVA = "0x2291178", Offset = "0x2291178", VA = "0x2291178", Slot = "69")]
		public void GetActivities(ActivitiesQuery query, Action<List<ActivityPost>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600339B")]
		[Address(RVA = "0x22912DC", Offset = "0x22912DC", VA = "0x22912DC", Slot = "70")]
		public void GetActivity(string activityId, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600339C")]
		[Address(RVA = "0x2291440", Offset = "0x2291440", VA = "0x2291440", Slot = "71")]
		public void PostActivityToFeed(string feed, ActivityPostContent content, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600339D")]
		[Address(RVA = "0x22915A4", Offset = "0x22915A4", VA = "0x22915A4", Slot = "72")]
		public void PostCommentToActivity(string activityId, ActivityPostContent comment, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600339E")]
		[Address(RVA = "0x2291740", Offset = "0x2291740", VA = "0x2291740", Slot = "73")]
		public void LikeActivity(string activityId, bool isLiked, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x600339F")]
		[Address(RVA = "0x2291914", Offset = "0x2291914", VA = "0x2291914", Slot = "74")]
		public void GetActivityLikers(string activityId, int offset, int limit, Action<List<PublicUser>> onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60033A0")]
		[Address(RVA = "0x2291AF8", Offset = "0x2291AF8", VA = "0x2291AF8", Slot = "75")]
		public void ReportActivity(string activityId, ReportingReason reportingReason, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60033A1")]
		[Address(RVA = "0x2291CC8", Offset = "0x2291CC8", VA = "0x2291CC8", Slot = "76")]
		public void DeleteActivity(string activityId, Action onSuccess, Action<GetSocialError> onFailure)
		{
		}

		[Token(Token = "0x60033A2")]
		[Address(RVA = "0x2291E2C", Offset = "0x2291E2C", VA = "0x2291E2C", Slot = "77")]
		public void Reset()
		{
		}

		[Token(Token = "0x60033A3")]
		[Address(RVA = "0x2291F30", Offset = "0x2291F30", VA = "0x2291F30", Slot = "78")]
		public void HandleOnStartUnityEvent()
		{
		}

		[Token(Token = "0x60033A4")]
		[Address(RVA = "0x228CA6C", Offset = "0x228CA6C", VA = "0x228CA6C")]
		public GetSocialNativeBridgeMock()
		{
		}
	}
	[Token(Token = "0x2000884")]
	internal static class GetSocialFactory
	{
		[Token(Token = "0x2000885")]
		internal enum AvailableRuntimes
		{
			[Token(Token = "0x4002F37")]
			Android,
			[Token(Token = "0x4002F38")]
			iOS,
			[Token(Token = "0x4002F39")]
			Windows,
			[Token(Token = "0x4002F3A")]
			OSX,
			[Token(Token = "0x4002F3B")]
			Linux,
			[Token(Token = "0x4002F3C")]
			Editor,
			[Token(Token = "0x4002F3D")]
			Mock
		}

		[Token(Token = "0x2000886")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60CA4", Offset = "0xB60CA4")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x4002F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AvailableRuntimes currentRuntime;

			[Token(Token = "0x60033A9")]
			[Address(RVA = "0xFD11C4", Offset = "0xFD11C4", VA = "0xFD11C4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60033AA")]
			[Address(RVA = "0xFD11CC", Offset = "0xFD11CC", VA = "0xFD11CC")]
			internal bool <FindBridgeImplementation>b__1(Type p)
			{
				return default(bool);
			}

			[Token(Token = "0x60033AB")]
			[Address(RVA = "0xFD1228", Offset = "0xFD1228", VA = "0xFD1228")]
			internal bool <FindBridgeImplementation>b__3(IGetSocialNativeBridge impl)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000887")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60CB4", Offset = "0xB60CB4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Assembly, IEnumerable<Type>> <>9__5_0;

			[Token(Token = "0x4002F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Type, IGetSocialNativeBridge> <>9__5_2;

			[Token(Token = "0x60033AD")]
			[Address(RVA = "0xFD1124", Offset = "0xFD1124", VA = "0xFD1124")]
			public <>c()
			{
			}

			[Token(Token = "0x60033AE")]
			[Address(RVA = "0xFD112C", Offset = "0xFD112C", VA = "0xFD112C")]
			internal IEnumerable<Type> <FindBridgeImplementation>b__5_0(Assembly s)
			{
				return null;
			}

			[Token(Token = "0x60033AF")]
			[Address(RVA = "0xFD1150", Offset = "0xFD1150", VA = "0xFD1150")]
			internal IGetSocialNativeBridge <FindBridgeImplementation>b__5_2(Type implementation)
			{
				return null;
			}
		}

		[Token(Token = "0x4002F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IGetSocialNativeBridge _nativeImplementation;

		[Token(Token = "0x17000737")]
		internal static IGetSocialNativeBridge Instance
		{
			[Token(Token = "0x60033A6")]
			[Address(RVA = "0x2285F28", Offset = "0x2285F28", VA = "0x2285F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60033A7")]
		[Address(RVA = "0x2285F9C", Offset = "0x2285F9C", VA = "0x2285F9C")]
		private static IGetSocialNativeBridge FindNativeBridge()
		{
			return null;
		}

		[Token(Token = "0x60033A8")]
		[Address(RVA = "0x228605C", Offset = "0x228605C", VA = "0x228605C")]
		private static IGetSocialNativeBridge FindBridgeImplementation(AvailableRuntimes currentRuntime)
		{
			return null;
		}
	}
	[Token(Token = "0x2000888")]
	public interface IConvertableFromNative<out T>
	{
		[Token(Token = "0x60033B0")]
		T ParseFromAJO(AndroidJavaObject ajo);
	}
	[Token(Token = "0x2000889")]
	public interface IConvertableToNative
	{
		[Token(Token = "0x60033B1")]
		AndroidJavaObject ToAjo();
	}
	[Token(Token = "0x200088A")]
	internal interface IGetSocialNativeBridge
	{
		[Token(Token = "0x17000738")]
		GetSocialFactory.AvailableRuntimes[] RuntimeImplementation
		{
			[Token(Token = "0x60033B2")]
			get;
		}

		[Token(Token = "0x17000739")]
		bool IsInitialized
		{
			[Token(Token = "0x60033B5")]
			get;
		}

		[Token(Token = "0x1700073A")]
		InviteChannel[] InviteChannels
		{
			[Token(Token = "0x60033BC")]
			get;
		}

		[Token(Token = "0x1700073B")]
		string UserId
		{
			[Token(Token = "0x60033CD")]
			get;
		}

		[Token(Token = "0x1700073C")]
		bool IsUserAnonymous
		{
			[Token(Token = "0x60033CE")]
			get;
		}

		[Token(Token = "0x1700073D")]
		Dictionary<string, string> UserAuthIdentities
		{
			[Token(Token = "0x60033D0")]
			get;
		}

		[Token(Token = "0x1700073E")]
		Dictionary<string, string> AllPublicProperties
		{
			[Token(Token = "0x60033D1")]
			get;
		}

		[Token(Token = "0x1700073F")]
		Dictionary<string, string> AllPrivateProperties
		{
			[Token(Token = "0x60033D2")]
			get;
		}

		[Token(Token = "0x17000740")]
		string DisplayName
		{
			[Token(Token = "0x60033D3")]
			get;
		}

		[Token(Token = "0x17000741")]
		string AvatarUrl
		{
			[Token(Token = "0x60033D5")]
			get;
		}

		[Token(Token = "0x60033B3")]
		void Init(string appId);

		[Token(Token = "0x60033B4")]
		void WhenInitialized(Action action);

		[Token(Token = "0x60033B6")]
		string GetNativeSdkVersion();

		[Token(Token = "0x60033B7")]
		string GetLanguage();

		[Token(Token = "0x60033B8")]
		bool SetLanguage(string languageCode);

		[Token(Token = "0x60033B9")]
		bool SetGlobalErrorListener(Action<GetSocialError> onError);

		[Token(Token = "0x60033BA")]
		bool RemoveGlobalErrorListener();

		[Token(Token = "0x60033BB")]
		bool IsInviteChannelAvailable(string channelId);

		[Token(Token = "0x60033BD")]
		void SendInvite(string channelId, Action onComplete, Action onCancel, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033BE")]
		void SendInvite(string channelId, InviteContent customInviteContent, Action onComplete, Action onCancel, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033BF")]
		void SendInvite(string channelId, InviteContent customInviteContent, LinkParams linkParams, Action onComplete, Action onCancel, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033C0")]
		bool RegisterInviteChannelPlugin(string channelId, InviteChannelPlugin inviteChannelPlugin);

		[Token(Token = "0x60033C1")]
		void GetReferralData(Action<ReferralData> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033C2")]
		void GetReferredUsers(Action<List<ReferredUser>> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033C3")]
		void CreateInviteLink(LinkParams linkParams, Action<string> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033C4")]
		void RegisterForPushNotifications();

		[Token(Token = "0x60033C5")]
		void SetNotificationListener(Func<Notification, bool, bool> listener);

		[Token(Token = "0x60033C6")]
		void GetNotifications(NotificationsQuery query, Action<List<Notification>> onSuccess, Action<GetSocialError> onError);

		[Token(Token = "0x60033C7")]
		void GetNotificationsCount(NotificationsCountQuery query, Action<int> onSuccess, Action<GetSocialError> onError);

		[Token(Token = "0x60033C8")]
		void SetNotificationsRead(List<string> notificationsIds, bool isRead, Action onSuccess, Action<GetSocialError> onError);

		[Token(Token = "0x60033C9")]
		void SetPushNotificationsEnabled(bool isEnabled, Action onSuccess, Action<GetSocialError> onError);

		[Token(Token = "0x60033CA")]
		void IsPushNotificationsEnabled(Action<bool> onSuccess, Action<GetSocialError> onError);

		[Token(Token = "0x60033CB")]
		bool SetOnUserChangedListener(Action listener);

		[Token(Token = "0x60033CC")]
		bool RemoveOnUserChangedListener();

		[Token(Token = "0x60033CF")]
		void ResetUser(Action onSuccess, Action<GetSocialError> onError);

		[Token(Token = "0x60033D4")]
		void SetDisplayName(string displayName, Action onComplete, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033D6")]
		void SetAvatarUrl(string avatarUrl, Action onComplete, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033D7")]
		void SetAvatar(Texture2D avatar, Action onComplete, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033D8")]
		void SetPublicProperty(string key, string value, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033D9")]
		void SetPrivateProperty(string key, string value, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033DA")]
		void RemovePublicProperty(string key, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033DB")]
		void RemovePrivateProperty(string key, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033DC")]
		string GetPublicProperty(string key);

		[Token(Token = "0x60033DD")]
		string GetPrivateProperty(string key);

		[Token(Token = "0x60033DE")]
		bool HasPublicProperty(string key);

		[Token(Token = "0x60033DF")]
		bool HasPrivateProperty(string key);

		[Token(Token = "0x60033E0")]
		void AddAuthIdentity(AuthIdentity authIdentity, Action onComplete, Action<GetSocialError> onFailure, Action<ConflictUser> onConflict);

		[Token(Token = "0x60033E1")]
		void RemoveAuthIdentity(string providerId, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033E2")]
		void SwitchUser(AuthIdentity authIdentity, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033E3")]
		void GetUserById(string userId, Action<PublicUser> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033E4")]
		void GetUserByAuthIdentity(string providerId, string providerUserId, Action<PublicUser> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033E5")]
		void GetUsersByAuthIdentities(string providerId, List<string> providerUserIds, Action<Dictionary<string, PublicUser>> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033E6")]
		void FindUsers(UsersQuery query, Action<List<UserReference>> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033E7")]
		void AddFriend(string userId, Action<int> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033E8")]
		void AddFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action<int> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033E9")]
		void RemoveFriend(string userId, Action<int> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033EA")]
		void RemoveFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action<int> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033EB")]
		void SetFriends(List<string> userIds, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033EC")]
		void SetFriendsByAuthIdentities(string providerId, List<string> providerUserIds, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033ED")]
		void IsFriend(string userId, Action<bool> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033EE")]
		void GetFriendsCount(Action<int> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033EF")]
		void GetFriends(int offset, int limit, Action<List<PublicUser>> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F0")]
		void GetSuggestedFriends(int offset, int limit, Action<List<SuggestedFriend>> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F1")]
		void GetFriendsReferences(Action<List<UserReference>> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F2")]
		void GetAnnouncements(string feed, Action<List<ActivityPost>> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F3")]
		void GetActivities(ActivitiesQuery query, Action<List<ActivityPost>> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F4")]
		void GetActivity(string activityId, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F5")]
		void PostActivityToFeed(string feed, ActivityPostContent content, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F6")]
		void PostCommentToActivity(string activityId, ActivityPostContent comment, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F7")]
		void LikeActivity(string activityId, bool isLiked, Action<ActivityPost> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F8")]
		void GetActivityLikers(string activityId, int offset, int limit, Action<List<PublicUser>> onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033F9")]
		void ReportActivity(string activityId, ReportingReason reportingReason, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033FA")]
		void DeleteActivity(string activityId, Action onSuccess, Action<GetSocialError> onFailure);

		[Token(Token = "0x60033FB")]
		void Reset();

		[Token(Token = "0x60033FC")]
		void HandleOnStartUnityEvent();
	}
}
namespace Fusion.CodeGen
{
	[Serializable]
	[StructLayout(2)]
	[Token(Token = "0x2000890")]
	[AttributeAttribute(Name = "NetworkStructWeavedAttribute", RVA = "0xB60CD4", Offset = "0xB60CD4")]
	internal struct FixedStorage@3 : INetworkStruct
	{
		[Token(Token = "0x2000891")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB60CE8", Offset = "0xB60CE8")]
		[UnsafeValueType]
		public struct <Data>e__FixedBuffer
		{
			[Token(Token = "0x4002F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int FixedElementField;
		}

		[Token(Token = "0x4002F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FixedBufferAttribute", RVA = "0xB78EC0", Offset = "0xB78EC0")]
		public <Data>e__FixedBuffer Data;

		[NonSerialized]
		[Token(Token = "0x4002F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int _1;

		[NonSerialized]
		[Token(Token = "0x4002F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int _2;
	}
	[Token(Token = "0x2000892")]
	internal struct ReaderWriter@UnityEngine_Vector3@Accuracy_0x3c23d70a : IElementReaderWriter<Vector3>
	{
		[Token(Token = "0x4002F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IElementReaderWriter<Vector3> Instance;

		[Token(Token = "0x60033FE")]
		[Address(RVA = "0x1006F98", Offset = "0x1006F98", VA = "0x1006F98", Slot = "4")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89948", Offset = "0xB89948")]
		public unsafe Vector3 Read(byte* data, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60033FF")]
		[Address(RVA = "0x1006FD0", Offset = "0x1006FD0", VA = "0x1006FD0", Slot = "7")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB8995C", Offset = "0xB8995C")]
		public unsafe ref Vector3 ReadRef(byte* data, int index)
		{
			return ref *(Vector3*)null;
		}

		[Token(Token = "0x6003400")]
		[Address(RVA = "0x1007024", Offset = "0x1007024", VA = "0x1007024", Slot = "5")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89970", Offset = "0xB89970")]
		public unsafe void Write(byte* data, int index, Vector3 val)
		{
		}

		[Token(Token = "0x6003401")]
		[Address(RVA = "0x10070E4", Offset = "0x10070E4", VA = "0x10070E4", Slot = "6")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89984", Offset = "0xB89984")]
		public int GetElementWordCount()
		{
			return default(int);
		}

		[Token(Token = "0x6003402")]
		[Address(RVA = "0x10070EC", Offset = "0x10070EC", VA = "0x10070EC")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89998", Offset = "0xB89998")]
		public static IElementReaderWriter<Vector3> GetInstance()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000893")]
	internal class UnityValueSurrogate@ReaderWriter@UnityEngine_Vector3@Accuracy_0x3c23d70a : UnityValueSurrogate<Vector3, ReaderWriter@UnityEngine_Vector3@Accuracy_0x3c23d70a>
	{
		[Token(Token = "0x4002F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Data;

		[Token(Token = "0x17000742")]
		public override Vector3 DataProperty
		{
			[Token(Token = "0x6003403")]
			[Address(RVA = "0x1226FF8", Offset = "0x1226FF8", VA = "0x1226FF8", Slot = "11")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6003404")]
			[Address(RVA = "0x1227004", Offset = "0x1227004", VA = "0x1227004", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6003405")]
		[Address(RVA = "0x1227010", Offset = "0x1227010", VA = "0x1227010")]
		public UnityValueSurrogate@ReaderWriter@UnityEngine_Vector3@Accuracy_0x3c23d70a()
		{
		}
	}
	[Token(Token = "0x2000894")]
	internal struct ReaderWriter@Networking_Entities_Projectiles_ProjectileData : IElementReaderWriter<ProjectileData>
	{
		[Token(Token = "0x4002F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IElementReaderWriter<ProjectileData> Instance;

		[Token(Token = "0x6003406")]
		[Address(RVA = "0x1006F40", Offset = "0x1006F40", VA = "0x1006F40", Slot = "4")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB899AC", Offset = "0xB899AC")]
		public unsafe ProjectileData Read(byte* data, int index)
		{
			return default(ProjectileData);
		}

		[Token(Token = "0x6003407")]
		[Address(RVA = "0x1006F60", Offset = "0x1006F60", VA = "0x1006F60", Slot = "7")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB899C0", Offset = "0xB899C0")]
		public unsafe ref ProjectileData ReadRef(byte* data, int index)
		{
			return ref *(ProjectileData*)null;
		}

		[Token(Token = "0x6003408")]
		[Address(RVA = "0x1006F70", Offset = "0x1006F70", VA = "0x1006F70", Slot = "5")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB899D4", Offset = "0xB899D4")]
		public unsafe void Write(byte* data, int index, ProjectileData val)
		{
		}

		[Token(Token = "0x6003409")]
		[Address(RVA = "0x1006F90", Offset = "0x1006F90", VA = "0x1006F90", Slot = "6")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB899E8", Offset = "0xB899E8")]
		public int GetElementWordCount()
		{
			return default(int);
		}

		[Token(Token = "0x600340A")]
		[Address(RVA = "0xFFA0D0", Offset = "0xFFA0D0", VA = "0xFFA0D0")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB899FC", Offset = "0xB899FC")]
		public static IElementReaderWriter<ProjectileData> GetInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x2000895")]
	internal struct ReaderWriter@FNVR2_Networking_Game_NetworkedGameMode__PlayerNetworkStruct : IElementReaderWriter<NetworkedGameMode.PlayerNetworkStruct>
	{
		[Token(Token = "0x4002F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IElementReaderWriter<NetworkedGameMode.PlayerNetworkStruct> Instance;

		[Token(Token = "0x600340B")]
		[Address(RVA = "0x1006B70", Offset = "0x1006B70", VA = "0x1006B70", Slot = "4")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89A10", Offset = "0xB89A10")]
		public unsafe NetworkedGameMode.PlayerNetworkStruct Read(byte* data, int index)
		{
			return default(NetworkedGameMode.PlayerNetworkStruct);
		}

		[Token(Token = "0x600340C")]
		[Address(RVA = "0x1006B80", Offset = "0x1006B80", VA = "0x1006B80", Slot = "7")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89A24", Offset = "0xB89A24")]
		public unsafe ref NetworkedGameMode.PlayerNetworkStruct ReadRef(byte* data, int index)
		{
			return ref *(NetworkedGameMode.PlayerNetworkStruct*)null;
		}

		[Token(Token = "0x600340D")]
		[Address(RVA = "0x1006B8C", Offset = "0x1006B8C", VA = "0x1006B8C", Slot = "5")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89A38", Offset = "0xB89A38")]
		public unsafe void Write(byte* data, int index, NetworkedGameMode.PlayerNetworkStruct val)
		{
		}

		[Token(Token = "0x600340E")]
		[Address(RVA = "0x1006B9C", Offset = "0x1006B9C", VA = "0x1006B9C", Slot = "6")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89A4C", Offset = "0xB89A4C")]
		public int GetElementWordCount()
		{
			return default(int);
		}

		[Token(Token = "0x600340F")]
		[Address(RVA = "0x1006BA4", Offset = "0x1006BA4", VA = "0x1006BA4")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89A60", Offset = "0xB89A60")]
		public static IElementReaderWriter<NetworkedGameMode.PlayerNetworkStruct> GetInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x2000896")]
	internal struct ReaderWriter@Fusion_PlayerRef : IElementReaderWriter<PlayerRef>
	{
		[Token(Token = "0x4002F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IElementReaderWriter<PlayerRef> Instance;

		[Token(Token = "0x6003410")]
		[Address(RVA = "0x1006E90", Offset = "0x1006E90", VA = "0x1006E90", Slot = "4")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89A74", Offset = "0xB89A74")]
		public unsafe PlayerRef Read(byte* data, int index)
		{
			return default(PlayerRef);
		}

		[Token(Token = "0x6003411")]
		[Address(RVA = "0x1006E9C", Offset = "0x1006E9C", VA = "0x1006E9C", Slot = "7")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89A88", Offset = "0xB89A88")]
		public unsafe ref PlayerRef ReadRef(byte* data, int index)
		{
			return ref *(PlayerRef*)null;
		}

		[Token(Token = "0x6003412")]
		[Address(RVA = "0x1006EA8", Offset = "0x1006EA8", VA = "0x1006EA8", Slot = "5")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89A9C", Offset = "0xB89A9C")]
		public unsafe void Write(byte* data, int index, PlayerRef val)
		{
		}

		[Token(Token = "0x6003413")]
		[Address(RVA = "0x1006EB4", Offset = "0x1006EB4", VA = "0x1006EB4", Slot = "6")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89AB0", Offset = "0xB89AB0")]
		public int GetElementWordCount()
		{
			return default(int);
		}

		[Token(Token = "0x6003414")]
		[Address(RVA = "0x1006EBC", Offset = "0x1006EBC", VA = "0x1006EBC")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89AC4", Offset = "0xB89AC4")]
		public static IElementReaderWriter<PlayerRef> GetInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x2000897")]
	internal struct ReaderWriter@Fusion_NetworkString`1<Fusion__32> : IElementReaderWriter<NetworkString<_32>>
	{
		[Token(Token = "0x4002F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IElementReaderWriter<NetworkString<_32>> Instance;

		[Token(Token = "0x6003415")]
		[Address(RVA = "0x1006DB4", Offset = "0x1006DB4", VA = "0x1006DB4", Slot = "4")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89AD8", Offset = "0xB89AD8")]
		public unsafe NetworkString<_32> Read(byte* data, int index)
		{
			return default(NetworkString<_32>);
		}

		[Token(Token = "0x6003416")]
		[Address(RVA = "0x1006DCC", Offset = "0x1006DCC", VA = "0x1006DCC", Slot = "7")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89AEC", Offset = "0xB89AEC")]
		public unsafe ref NetworkString<_32> ReadRef(byte* data, int index)
		{
			return ref *(NetworkString<_32>*)null;
		}

		[Token(Token = "0x6003417")]
		[Address(RVA = "0x1006DDC", Offset = "0x1006DDC", VA = "0x1006DDC", Slot = "5")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89B00", Offset = "0xB89B00")]
		public unsafe void Write(byte* data, int index, NetworkString<_32> val)
		{
		}

		[Token(Token = "0x6003418")]
		[Address(RVA = "0x1006E04", Offset = "0x1006E04", VA = "0x1006E04", Slot = "6")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89B14", Offset = "0xB89B14")]
		public int GetElementWordCount()
		{
			return default(int);
		}

		[Token(Token = "0x6003419")]
		[Address(RVA = "0x1006E0C", Offset = "0x1006E0C", VA = "0x1006E0C")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89B28", Offset = "0xB89B28")]
		public static IElementReaderWriter<NetworkString<_32>> GetInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x2000898")]
	internal struct ReaderWriter@Fusion_NetworkBool : IElementReaderWriter<NetworkBool>
	{
		[Token(Token = "0x4002F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IElementReaderWriter<NetworkBool> Instance;

		[Token(Token = "0x600341A")]
		[Address(RVA = "0x1006D04", Offset = "0x1006D04", VA = "0x1006D04", Slot = "4")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89B3C", Offset = "0xB89B3C")]
		public unsafe NetworkBool Read(byte* data, int index)
		{
			return default(NetworkBool);
		}

		[Token(Token = "0x600341B")]
		[Address(RVA = "0x1006D10", Offset = "0x1006D10", VA = "0x1006D10", Slot = "7")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89B50", Offset = "0xB89B50")]
		public unsafe ref NetworkBool ReadRef(byte* data, int index)
		{
			return ref *(NetworkBool*)null;
		}

		[Token(Token = "0x600341C")]
		[Address(RVA = "0x1006D1C", Offset = "0x1006D1C", VA = "0x1006D1C", Slot = "5")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89B64", Offset = "0xB89B64")]
		public unsafe void Write(byte* data, int index, NetworkBool val)
		{
		}

		[Token(Token = "0x600341D")]
		[Address(RVA = "0x1006D28", Offset = "0x1006D28", VA = "0x1006D28", Slot = "6")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89B78", Offset = "0xB89B78")]
		public int GetElementWordCount()
		{
			return default(int);
		}

		[Token(Token = "0x600341E")]
		[Address(RVA = "0x1006D30", Offset = "0x1006D30", VA = "0x1006D30")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89B8C", Offset = "0xB89B8C")]
		public static IElementReaderWriter<NetworkBool> GetInstance()
		{
			return null;
		}
	}
	[Token(Token = "0x2000899")]
	internal struct ReaderWriter@FNVR2_Networking_Player_PlayerData__CustomizationData : IElementReaderWriter<FNVR2.Networking.Player.PlayerData.CustomizationData>
	{
		[Token(Token = "0x4002F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static IElementReaderWriter<FNVR2.Networking.Player.PlayerData.CustomizationData> Instance;

		[Token(Token = "0x600341F")]
		[Address(RVA = "0x1006C28", Offset = "0x1006C28", VA = "0x1006C28", Slot = "4")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89BA0", Offset = "0xB89BA0")]
		public unsafe FNVR2.Networking.Player.PlayerData.CustomizationData Read(byte* data, int index)
		{
			return default(FNVR2.Networking.Player.PlayerData.CustomizationData);
		}

		[Token(Token = "0x6003420")]
		[Address(RVA = "0x1006C40", Offset = "0x1006C40", VA = "0x1006C40", Slot = "7")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89BB4", Offset = "0xB89BB4")]
		public unsafe ref FNVR2.Networking.Player.PlayerData.CustomizationData ReadRef(byte* data, int index)
		{
			return ref *(FNVR2.Networking.Player.PlayerData.CustomizationData*)null;
		}

		[Token(Token = "0x6003421")]
		[Address(RVA = "0x1006C50", Offset = "0x1006C50", VA = "0x1006C50", Slot = "5")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89BC8", Offset = "0xB89BC8")]
		public unsafe void Write(byte* data, int index, FNVR2.Networking.Player.PlayerData.CustomizationData val)
		{
		}

		[Token(Token = "0x6003422")]
		[Address(RVA = "0x1006C78", Offset = "0x1006C78", VA = "0x1006C78", Slot = "6")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89BDC", Offset = "0xB89BDC")]
		public int GetElementWordCount()
		{
			return default(int);
		}

		[Token(Token = "0x6003423")]
		[Address(RVA = "0x1006C80", Offset = "0x1006C80", VA = "0x1006C80")]
		[AttributeAttribute(Name = "MethodImplAttribute", RVA = "0xB89BF0", Offset = "0xB89BF0")]
		public static IElementReaderWriter<FNVR2.Networking.Player.PlayerData.CustomizationData> GetInstance()
		{
			return null;
		}
	}
}
